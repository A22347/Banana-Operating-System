Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1fa0a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c5 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cce                Krnl::firstTask()
                0x00000000c0006e0c                Computer::Computer()
                0x00000000c0006e0c                Computer::Computer()
                0x00000000c0006ebc                Computer::setBootMessage(char const*)
                0x00000000c0006ebe                Computer::detectFeatures()
                0x00000000c00070e4                Computer::displayFeatures()
                0x00000000c00070e6                Computer::rdmsr(unsigned int)
                0x00000000c0007112                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714e                Computer::shutdown()
                0x00000000c0007166                Computer::restart()
                0x00000000c000717e                Computer::sleep()
                0x00000000c0007192                Computer::nmiEnabled()
                0x00000000c000719e                Computer::readCMOS(unsigned char)
                0x00000000c00071ba                Computer::enableNMI(bool)
                0x00000000c00071d2                Computer::open(int, int, void*)
                0x00000000c00072a6                Computer::disableNMI()
                0x00000000c00072b6                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072da                Computer::handleNMI()
 *fill*         0x00000000c0007345        0x1 
 .text          0x00000000c0007346      0x1db core/gdt.32
                0x00000000c0007346                GDTEntry::setBase(unsigned int)
                0x00000000c0007362                GDTEntry::setLimit(unsigned int)
                0x00000000c0007380                GDT::GDT()
                0x00000000c0007380                GDT::GDT()
                0x00000000c0007396                GDT::addEntry(GDTEntry)
                0x00000000c00073b8                GDT::getNumberOfEntries()
                0x00000000c00073c0                GDT::flush()
                0x00000000c00073e2                GDT::setup()
 .text          0x00000000c0007521       0x1d core/idle.32
                0x00000000c0007521                idleFunction(void*)
 *fill*         0x00000000c000753e        0x2 
 .text          0x00000000c0007540      0x46c core/idt.32
                0x00000000c0007540                IDTEntry::IDTEntry(bool)
                0x00000000c0007540                IDTEntry::IDTEntry(bool)
                0x00000000c00075ba                IDTEntry::setOffset(unsigned int)
                0x00000000c00075d0                IDT::IDT()
                0x00000000c00075d0                IDT::IDT()
                0x00000000c00075d2                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075da                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f4                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000762c                IDT::flush()
                0x00000000c0007646                IDT::setup()
 .text          0x00000000c00079ac      0x185 core/kheap.32
                0x00000000c00079ac                sbrk
                0x00000000c0007a40                mmap
                0x00000000c0007a56                munmap
                0x00000000c0007a6c                liballoc_lock()
                0x00000000c0007a7a                liballoc_unlock()
                0x00000000c0007a90                liballoc_alloc(int)
                0x00000000c0007aa8                liballoc_free(void*, int)
                0x00000000c0007ac3                realloc
                0x00000000c0007ad7                malloc
                0x00000000c0007ae7                free
                0x00000000c0007af7                rfree
                0x00000000c0007b07                calloc
 .text          0x00000000c0007b31       0xc7 core/main.32
                0x00000000c0007b31                KeEntryPoint
 .text          0x00000000c0007bf8      0x643 core/physmgr.32
                0x00000000c0007bf8                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce6                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d21                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d61                Phys::getPageState(unsigned long)
                0x00000000c0007d7d                Phys::freePage(unsigned long)
                0x00000000c0007de6                Phys::allocatePage()
                0x00000000c0007eb5                Phys::allocateContiguousPages(int)
                0x00000000c0007f1c                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f54                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000823b        0x1 
 .text          0x00000000c000823c      0x26d core/pipe.32
                0x00000000c000823c                Pipe::isAtty()
                0x00000000c0008240                Pipe::~Pipe()
                0x00000000c0008240                Pipe::~Pipe()
                0x00000000c0008264                Pipe::~Pipe()
                0x00000000c000828c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008350                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008442                Pipe::Pipe(int)
                0x00000000c0008442                Pipe::Pipe(int)
 *fill*         0x00000000c00084a9        0x1 
 .text          0x00000000c00084aa      0xa85 core/terminal.32
                0x00000000c00084aa                VgaText::isAtty()
                0x00000000c00084ae                VgaText::~VgaText()
                0x00000000c00084ae                VgaText::~VgaText()
                0x00000000c00084d2                VgaText::~VgaText()
                0x00000000c00084fc                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000851c                setTerminalScrollLock(bool)
                0x00000000c000851d                doTerminalCycle()
                0x00000000c000851e                addToTerminalCycle(VgaText*)
                0x00000000c000851f                scrollTerminalScrollLock(int)
                0x00000000c0008520                VgaText::updateTitle()
                0x00000000c0008522                VgaText::load()
                0x00000000c0008524                VgaText::updateCursor()
                0x00000000c000853a                VgaText::doANSI_SGR(int)
                0x00000000c00085ae                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085be                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ce                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ee                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085fa                VgaText::setTitleColour(VgaColour)
                0x00000000c0008606                VgaText::setTitle(char*)
                0x00000000c0008608                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000861a                VgaText::scrollScreen()
                0x00000000c00086ac                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086bc                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000874c                VgaText::getCursorX()
                0x00000000c0008754                VgaText::getCursorY()
                0x00000000c000875c                VgaText::setCursor(int, int)
                0x00000000c0008773                setActiveTerminal(VgaText*)
                0x00000000c00087be                VgaText::clearScreen()
                0x00000000c000880c                VgaText::setCursorX(int)
                0x00000000c0008824                VgaText::setCursorY(int)
                0x00000000c000883c                VgaText::incrementCursor(bool)
                0x00000000c0008890                VgaText::decrementCursor(bool)
                0x00000000c00088b2                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008982                VgaText::putchar(char)
                0x00000000c0008a6a                VgaText::putx(unsigned int)
                0x00000000c0008ab0                VgaText::puts(char const*)
                0x00000000c0008ad6                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b22                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c70                VgaText::VgaText(char const*)
                0x00000000c0008c70                VgaText::VgaText(char const*)
                0x00000000c0008dc0                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2e                VgaText::doUpdate()
 *fill*         0x00000000c0008f2f        0x1 
 .text          0x00000000c0008f30      0x1a1 core/tss.32
                0x00000000c0008f30                TSS::TSS()
                0x00000000c0008f30                TSS::TSS()
                0x00000000c0008f40                TSS::setESP(unsigned long)
                0x00000000c0008f54                TSS::flush()
                0x00000000c0008f74                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090d1        0x1 
 .text          0x00000000c00090d2      0x4ca core/unixfile.32
                0x00000000c00090d2                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009128                ReservedFilename::isAtty()
                0x00000000c0009144                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091a2                UnixFile::getFileDescriptor()
                0x00000000c00091aa                UnixFile::UnixFile(int)
                0x00000000c00091aa                UnixFile::UnixFile(int)
                0x00000000c000935e                ReservedFilename::ReservedFilename(int)
                0x00000000c000935e                ReservedFilename::ReservedFilename(int)
                0x00000000c0009390                UnixFile::~UnixFile()
                0x00000000c0009390                UnixFile::~UnixFile()
                0x00000000c000942c                UnixFile::~UnixFile()
                0x00000000c0009454                ReservedFilename::~ReservedFilename()
                0x00000000c0009454                ReservedFilename::~ReservedFilename()
                0x00000000c0009478                ReservedFilename::~ReservedFilename()
                0x00000000c000949f                KeGetFileFromDescriptor(int)
 .text          0x00000000c000959c     0x1224 core/virtmgr.32
                0x00000000c000959c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d6                Virt::getPageState(unsigned long)
                0x00000000c00095f9                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009715                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009738                Virt::swapIDToSector(unsigned long)
                0x00000000c000974e                Virt::allocateSwapfilePage()
                0x00000000c00097cd                Virt::virtualMemorySetup()
                0x00000000c000981e                Virt::setupPageSwapping(int)
                0x00000000c0009890                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009892                VAS::VAS(VAS*)
                0x00000000c0009892                VAS::VAS(VAS*)
                0x00000000c00098c0                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ee                VAS::getPageTableEntry(unsigned long)
                0x00000000c000990d                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a4a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a88                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009aca                VAS::VAS()
                0x00000000c0009aca                VAS::VAS()
                0x00000000c0009b34                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b68                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b94                VAS::~VAS()
                0x00000000c0009b94                VAS::~VAS()
                0x00000000c0009d02                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e0a                VAS::allocatePages(int, int)
                0x00000000c0009f0c                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f66                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a056                VAS::VAS(bool)
                0x00000000c000a056                VAS::VAS(bool)
                0x00000000c000a2a0                VAS::evict(unsigned long)
                0x00000000c000a37e                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a522                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a596                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5c2                VAS::scanForEviction()
                0x00000000c000a6c5                mapVASFirstTime
 .text          0x00000000c000a7c0       0x5f coreobjs/c++.32
                0x00000000c000a7c0                __cxa_atexit
                0x00000000c000a7c3                __cxa_finalize
                0x00000000c000a7c4                __stack_chk_fail
                0x00000000c000a7fa                __cxa_pure_virtual
                0x00000000c000a80b                operator new[](unsigned long)
                0x00000000c000a810                operator delete(void*, unsigned long)
                0x00000000c000a815                operator delete[](void*)
                0x00000000c000a81a                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81f      0x225 dbg/kconsole.32
                0x00000000c000a81f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a890                Dbg::logc(char)
                0x00000000c000a8b0                Dbg::logs(char*)
                0x00000000c000a8cf                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8ed                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90e                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa44      0x2d4 dbg/usban.32
                0x00000000c000aa44                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aab0                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab8c                __ubsan_handle_pointer_overflow
                0x00000000c000abb8                __ubsan_handle_out_of_bounds
                0x00000000c000abe4                __ubsan_handle_add_overflow
                0x00000000c000ac10                __ubsan_handle_load_invalid_value
                0x00000000c000ac3c                __ubsan_handle_divrem_overflow
                0x00000000c000ac68                __ubsan_handle_mul_overflow
                0x00000000c000ac94                __ubsan_handle_sub_overflow
                0x00000000c000acc0                __ubsan_handle_shift_out_of_bounds
                0x00000000c000acec                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad18      0x86b fs/symlink.32
                0x00000000c000ae67                KiDeinitialiseSymlinks(void*)
                0x00000000c000aef8                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000af8a                KeInitialiseSymlinks()
                0x00000000c000b0fe                KiIsSymlinkRegistered(char const*)
                0x00000000c000b282                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b429                KeCreateSymlink(char const*, char const*)
 *fill*         0x00000000c000b583        0x1 
 .text          0x00000000c000b584      0xd7c fs/vfs.32
                0x00000000c000b584                File::read(unsigned long long, void*, int*)
                0x00000000c000b5dc                File::write(unsigned long long, void*, int*)
                0x00000000c000b634                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b68c                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b6ba                File::isAtty()
                0x00000000c000b6be                Directory::isAtty()
                0x00000000c000b6c2                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b6c8                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b6ce                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b6d4                File::~File()
                0x00000000c000b6d4                File::~File()
                0x00000000c000b6f8                File::~File()
                0x00000000c000b722                Directory::~Directory()
                0x00000000c000b722                Directory::~Directory()
                0x00000000c000b746                Directory::~Directory()
                0x00000000c000b770                Filesystem::Filesystem()
                0x00000000c000b770                Filesystem::Filesystem()
                0x00000000c000b794                Filesystem::~Filesystem()
                0x00000000c000b794                Filesystem::~Filesystem()
                0x00000000c000b7a2                Filesystem::~Filesystem()
                0x00000000c000b7c6                Fs::getcwd(Process*, char*, int)
                0x00000000c000b7f0                Fs::initVFS()
                0x00000000c000b81a                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000ba48                File::File(char const*, Process*, bool)
                0x00000000c000ba48                File::File(char const*, Process*, bool)
                0x00000000c000bb26                File::File(char const*, Process*)
                0x00000000c000bb26                File::File(char const*, Process*)
                0x00000000c000bb44                File::open(FileOpenMode)
                0x00000000c000bba2                File::close()
                0x00000000c000bc02                File::seek(unsigned long long)
                0x00000000c000bc58                File::truncate(unsigned long long)
                0x00000000c000bcae                File::tell(unsigned long long*)
                0x00000000c000bcfe                File::rewind()
                0x00000000c000bd12                File::unlink()
                0x00000000c000bd5e                File::rename(char const*)
                0x00000000c000bdac                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000be08                File::exists()
                0x00000000c000be46                File::stat(unsigned long long*, bool*)
                0x00000000c000bea7                Fs::setcwd(Process*, char*)
                0x00000000c000c006                Directory::Directory(char const*, Process*)
                0x00000000c000c006                Directory::Directory(char const*, Process*)
                0x00000000c000c0ce                Directory::open()
                0x00000000c000c12a                Directory::close()
                0x00000000c000c18a                Directory::unlink()
                0x00000000c000c1d6                Directory::rename(char const*)
                0x00000000c000c224                Directory::exists()
                0x00000000c000c262                Directory::read(dirent*)
                0x00000000c000c2ae                Directory::create()
                0x00000000c000c2fa                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c300       0x86 hal/bus.32
                0x00000000c000c300                Bus::Bus(char const*)
                0x00000000c000c300                Bus::Bus(char const*)
                0x00000000c000c338                Bus::~Bus()
                0x00000000c000c338                Bus::~Bus()
                0x00000000c000c35c                Bus::~Bus()
 .text          0x00000000c000c386       0x96 hal/buzzer.32
                0x00000000c000c386                beepThread(void*)
                0x00000000c000c3c3                Krnl::beep(int, int, bool)
 .text          0x00000000c000c41c      0x465 hal/clock.32
                0x00000000c000c41c                User::loadClockSettings(int)
                0x00000000c000c46e                Clock::Clock(char const*)
                0x00000000c000c46e                Clock::Clock(char const*)
                0x00000000c000c4a4                Clock::~Clock()
                0x00000000c000c4a4                Clock::~Clock()
                0x00000000c000c4c8                Clock::~Clock()
                0x00000000c000c4f2                Clock::timeInSecondsLocal()
                0x00000000c000c53a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c593                datetimeToSeconds(datetime_t)
                0x00000000c000c6b8                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c718                secondsToDatetime(unsigned long long)
                0x00000000c000c85c                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c881        0x1 
 .text          0x00000000c000c882      0x47a hal/device.32
                0x00000000c000c882                Device::hibernate()
                0x00000000c000c884                Device::wake()
                0x00000000c000c886                Device::detect()
                0x00000000c000c888                Device::disableLegacy()
                0x00000000c000c88a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c88c                DriverlessDevice::close(int, int, void*)
                0x00000000c000c890                DriverlessDevice::detect()
                0x00000000c000c892                DriverlessDevice::open(int, int, void*)
                0x00000000c000c8a6                Device::~Device()
                0x00000000c000c8a6                Device::~Device()
                0x00000000c000c8b4                Device::~Device()
                0x00000000c000c8dc                Device::findAndLoadDriver()
                0x00000000c000c8ea                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c910                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c950                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c97a                Device::getParent()
                0x00000000c000c986                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c9a4                Device::addChild(Device*)
                0x00000000c000c9e8                Device::removeAllChildren()
                0x00000000c000ca2e                Device::hibernateAll()
                0x00000000c000ca5e                Device::wakeAll()
                0x00000000c000ca8e                Device::detectAll()
                0x00000000c000cabe                Device::disableLegacyAll()
                0x00000000c000cac0                Device::loadDriversForAll()
                0x00000000c000cac2                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000caf8                Device::setName(char const*)
                0x00000000c000cb06                Device::Device(char const*)
                0x00000000c000cb06                Device::Device(char const*)
                0x00000000c000cc02                Device::getName()
                0x00000000c000cc0c                Device::closeAll()
                0x00000000c000cc58                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc58                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc8e                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ccd2                getDevicesOfType(DeviceType)
 .text          0x00000000c000ccfc       0x86 hal/diskctrl.32
                0x00000000c000ccfc                HardDiskController::HardDiskController(char const*)
                0x00000000c000ccfc                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd34                HardDiskController::~HardDiskController()
                0x00000000c000cd34                HardDiskController::~HardDiskController()
                0x00000000c000cd58                HardDiskController::~HardDiskController()
 .text          0x00000000c000cd82       0xe2 hal/diskphys.32
                0x00000000c000cd82                PhysicalDisk::eject()
                0x00000000c000cd86                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cd86                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cdee                PhysicalDisk::startCache()
                0x00000000c000ce16                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce16                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce3a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ce64        0x0 hal/fpu.32
 .text          0x00000000c000ce64      0x360 hal/intctrl.32
                0x00000000c000ce64                int_handler
                0x00000000c000ceee                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cf38                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d07b                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d0af                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d125                setupINTS()
                0x00000000c000d182                convertLegacyIRQNumber(int)
 .text          0x00000000c000d1c4      0x8be hal/keybrd.32
                0x00000000c000d1c4                startGUI(void*)
                0x00000000c000d232                startGUIVESA(void*)
                0x00000000c000d2a0                sendKeyToTerminal(unsigned char)
                0x00000000c000d37b                sendKeyboardToken(KeyboardToken)
                0x00000000c000d865                clearInternalKeybuffer(VgaText*)
                0x00000000c000d89a                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d9f8                Keyboard::Keyboard(char const*)
                0x00000000c000d9f8                Keyboard::Keyboard(char const*)
                0x00000000c000da34                Keyboard::~Keyboard()
                0x00000000c000da34                Keyboard::~Keyboard()
                0x00000000c000da58                Keyboard::~Keyboard()
 .text          0x00000000c000da82      0x3f8 hal/logidisk.32
                0x00000000c000da82                LogicalDisk::close(int, int, void*)
                0x00000000c000da86                LogicalDisk::~LogicalDisk()
                0x00000000c000da86                LogicalDisk::~LogicalDisk()
                0x00000000c000daaa                LogicalDisk::~LogicalDisk()
                0x00000000c000dad4                LogicalDisk::open(int, int, void*)
                0x00000000c000dae8                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000db20                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000db66                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000db66                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc26                LogicalDisk::assignDriveLetter()
                0x00000000c000dce0                LogicalDisk::mount()
                0x00000000c000dd28                LogicalDisk::unmount()
                0x00000000c000dd38                LogicalDisk::eject()
                0x00000000c000dd4c                LogicalDisk::unassignDriveLetter()
                0x00000000c000dda2                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000de0e                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000de7a        0x2 
 .text          0x00000000c000de7c       0x86 hal/mouse.32
                0x00000000c000de7c                Mouse::Mouse(char const*)
                0x00000000c000de7c                Mouse::Mouse(char const*)
                0x00000000c000deb4                Mouse::~Mouse()
                0x00000000c000deb4                Mouse::~Mouse()
                0x00000000c000ded8                Mouse::~Mouse()
 .text          0x00000000c000df02       0x90 hal/nic.32
                0x00000000c000df02                NIC::getMAC()
                0x00000000c000df08                NIC::write(int, unsigned char*, int*)
                0x00000000c000df0e                NIC::NIC(char const*)
                0x00000000c000df0e                NIC::NIC(char const*)
                0x00000000c000df44                NIC::~NIC()
                0x00000000c000df44                NIC::~NIC()
                0x00000000c000df68                NIC::~NIC()
 .text          0x00000000c000df92      0x33b hal/partition.32
                0x00000000c000df92                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e03a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e2cd        0x3 
 .text          0x00000000c000e2d0       0x86 hal/serial.32
                0x00000000c000e2d0                Serial::Serial(char const*)
                0x00000000c000e2d0                Serial::Serial(char const*)
                0x00000000c000e308                Serial::~Serial()
                0x00000000c000e308                Serial::~Serial()
                0x00000000c000e32c                Serial::~Serial()
 *fill*         0x00000000c000e356        0x2 
 .text          0x00000000c000e358      0x234 hal/timer.32
                0x00000000c000e358                Timer::Timer(char const*)
                0x00000000c000e358                Timer::Timer(char const*)
                0x00000000c000e390                Timer::~Timer()
                0x00000000c000e390                Timer::~Timer()
                0x00000000c000e3b4                Timer::~Timer()
                0x00000000c000e3de                Timer::read()
                0x00000000c000e3e9                setupTimer(int)
                0x00000000c000e424                timerHandler(unsigned int)
 .text          0x00000000c000e58c      0x450 hal/vcache.32
                0x00000000c000e58c                VCache::VCache(PhysicalDisk*)
                0x00000000c000e58c                VCache::VCache(PhysicalDisk*)
                0x00000000c000e6fc                VCache::invalidateReadBuffer()
                0x00000000c000e70c                VCache::writeWriteBuffer()
                0x00000000c000e758                VCache::~VCache()
                0x00000000c000e758                VCache::~VCache()
                0x00000000c000e7b0                VCache::~VCache()
                0x00000000c000e7d8                VCache::write(unsigned long long, int, void*)
                0x00000000c000e8d2                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e9dc      0x4d9 hal/video.32
                0x00000000c000e9dc                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ea28                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ea98                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eb28                Video::clearScreen(unsigned int)
                0x00000000c000eb5c                Video::putpixel(int, int, unsigned int)
                0x00000000c000eb6a                Video::readPixelApprox(int, int)
                0x00000000c000eb7e                Video::Video(char const*)
                0x00000000c000eb7e                Video::Video(char const*)
                0x00000000c000ebb4                Video::~Video()
                0x00000000c000ebb4                Video::~Video()
                0x00000000c000ebd8                Video::~Video()
                0x00000000c000ec02                Video::isMonochrome()
                0x00000000c000ec0e                Video::getWidth()
                0x00000000c000ec1a                Video::getHeight()
                0x00000000c000ec26                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ece2                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ee4a                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eeb5        0x3 
 .text          0x00000000c000eeb8     0x135a hw/acpi.32
                0x00000000c000eeb8                ACPI::close(int, int, void*)
                0x00000000c000eff4                findRSDP()
                0x00000000c000f08c                loadACPITables(unsigned char*)
                0x00000000c000f2f8                findRSDT(unsigned char*)
                0x00000000c000f450                findDataTable(unsigned char*, char*)
                0x00000000c000f4d0                scanMADT()
                0x00000000c000f988                ACPI::ACPI()
                0x00000000c000f988                ACPI::ACPI()
                0x00000000c000f9dc                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fad8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fba4                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fbac                ACPI::detectPCI()
                0x00000000c000fdcc                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fe14                ACPI::sleep()
                0x00000000c000fe30                ACPI::open(int, int, void*)
 .text          0x00000000c0010212      0xbc5 hw/cpu.32
                0x00000000c0010212                CPU::close(int, int, void*)
                0x00000000c0010216                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0010232                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c001024a                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c00102be                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0010342                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010370                CPU::cpuidCheckECX(unsigned int)
                0x00000000c001039e                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00103cc                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00103fa                CPU::CPU()
                0x00000000c00103fa                CPU::CPU()
                0x00000000c0010488                CPU::displayFeatures()
                0x00000000c001048a                CPU::detectFeatures()
                0x00000000c0010b5e                CPU::setupSMEP()
                0x00000000c0010b6a                CPU::setupUMIP()
                0x00000000c0010b74                CPU::setupTSC()
                0x00000000c0010b7e                CPU::setupLargePages()
                0x00000000c0010b88                CPU::setupPAT()
                0x00000000c0010bc4                CPU::setupMTRR()
                0x00000000c0010bc6                CPU::setupGlobalPages()
                0x00000000c0010bd0                CPU::allowUsermodeDataAccess()
                0x00000000c0010be2                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010bf4                CPU::setupSMAP()
                0x00000000c0010c02                CPU::setupFeatures()
                0x00000000c0010cce                CPU::open(int, int, void*)
 .text          0x00000000c0010dd7       0xb6 krnl/atexit.32
                0x00000000c0010dd7                KeInitialiseAtexit()
                0x00000000c0010df6                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010e2a                KeExecuteAtexit()
 .text          0x00000000c0010e8d       0xdf krnl/bootmsg.32
                0x00000000c0010e8d                KeDisplaySplashScreen()
                0x00000000c0010f09                KeSetBootMessage(char const*)
 .text          0x00000000c0010f6c       0x1d krnl/compat.32
                0x00000000c0010f6c                Krnl::handlePowerButton()
                0x00000000c0010f7c                Krnl::handleSleepButton()
 .text          0x00000000c0010f89       0x2b krnl/crc32.32
                0x00000000c0010f89                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010fb4      0x5bf krnl/env.32
                0x00000000c0010fb4                EnvVarContainer::getEnv(char const*)
                0x00000000c0010ff2                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00110b4                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00110b6                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00112da                EnvVarContainer::__loadSystem()
                0x00000000c00112f4                EnvVarContainer::__loadUser()
                0x00000000c00112f6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00112f6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011318                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011318                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011348                KeGetEnv(Process*, char const*)
                0x00000000c00113ad                KeSetEnvSystem(char const*, char const*)
                0x00000000c00113c7                KeSetEnvUser(char const*, char const*)
                0x00000000c00113e6                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00113f9                KeDeleteEnvSystem(char const*)
                0x00000000c00113fa                KeDeleteEnvUser(char const*)
                0x00000000c00113fb                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00113fc                KeNewProcessEnv(Process*)
                0x00000000c001141e                KeCopyProcessEnv(Process*, Process*)
                0x00000000c001146a                KeLoadSystemEnv()
                0x00000000c0011498                KeLoadUserEnv()
                0x00000000c00114be                KeFlushEnv()
                0x00000000c00114bf                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00114df                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011573       0x94 krnl/inlines.32
                0x00000000c0011573                CPU::current()
                0x00000000c001157f                operator new(unsigned long)
                0x00000000c0011584                operator delete(void*)
                0x00000000c0011589                disableIRQs()
                0x00000000c001158b                enableIRQs()
                0x00000000c001158d                lockScheduler()
                0x00000000c0011595                unlockScheduler()
                0x00000000c00115a4                lockStuff()
                0x00000000c00115b2                unlockStuff()
                0x00000000c00115ec                Virt::getAKernelVAS()
                0x00000000c00115f2                __not_memcpy
 .text          0x00000000c0011607        0xc krnl/panic.32
                0x00000000c0011607                KePanic(char const*)
 .text          0x00000000c0011613      0x142 krnl/powctrl.32
                0x00000000c0011613                KePowerThread(void*)
                0x00000000c0011641                KeChangePowerSettings(PowerSettings)
                0x00000000c0011657                KeUserIOReceived()
                0x00000000c0011662                KeHandlePowerButton()
                0x00000000c0011697                KeHandleSleepButton()
                0x00000000c00116cc                KeSetupPowerManager()
 .text          0x00000000c0011755       0x9b krnl/random.32
                0x00000000c0011755                KeRand()
                0x00000000c0011795                KeSeedRand(unsigned int)
                0x00000000c00117be                KeInitRand()
 .text          0x00000000c00117f0      0x1bc krnl/resolve.32
                0x00000000c00117f0                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00119ac      0x31f krnl/signal.32
                0x00000000c00119ac                KiSigKill(int)
                0x00000000c00119c0                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00119c1                KiDefaultSignalHandlerPause(int)
                0x00000000c00119ed                KiDefaultSignalHandlerResume(int)
                0x00000000c0011a19                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011a1e                KeInitSignals()
                0x00000000c0011a6d                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011aa3                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011b20                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011c17                KiCheckSignalZ
                0x00000000c0011c59                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011c94                KiFinishSignalZ
 .text          0x00000000c0011ccb      0xe32 krnl/syscalls.32
                0x00000000c0011ccb                SysSeekDir(regs*)
                0x00000000c0011cd0                SysTellDir(regs*)
                0x00000000c0011cd5                SysVerify(regs*)
                0x00000000c0011cdf                SysGetArgc(regs*)
                0x00000000c0011cf3                SysTTYName(regs*)
                0x00000000c0011cfb                SysFormatDisk(regs*)
                0x00000000c0011d62                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011db6                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011e0f                SysShutdown(regs*)
                0x00000000c0011e9c                SysRealpath(regs*)
                0x00000000c0011eea                SysReadDir(regs*)
                0x00000000c0011f6a                SysIsATTY(regs*)
                0x00000000c0011fc4                SysSeek(regs*)
                0x00000000c001201e                SysTell(regs*)
                0x00000000c001208b                SysSize(regs*)
                0x00000000c00120fe                SysSizeFromFilename(regs*)
                0x00000000c0012232                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0012366                SysClose(regs*)
                0x00000000c00123c6                SysOpenDir(regs*)
                0x00000000c0012443                SysMakeDir(regs*)
                0x00000000c00124b1                SysCloseDir(regs*)
                0x00000000c0012500                SysWait(regs*)
                0x00000000c0012521                SysNotImpl(regs*)
                0x00000000c001253c                SysPanic(regs*)
                0x00000000c0012557                SysRmdir(regs*)
                0x00000000c00125b5                SysUnlink(regs*)
                0x00000000c0012613                SysGetArgv(regs*)
                0x00000000c0012660                SysUSleep(regs*)
                0x00000000c0012689                SysSpawn(regs*)
                0x00000000c00126fa                SysGetEnv(regs*)
                0x00000000c00127af                SysSetFatAttrib(regs*)
                0x00000000c0012818                SysPipe(regs*)
                0x00000000c001285d                SysGetUnixTime(regs*)
                0x00000000c0012871                string_ends_with(char const*, char const*)
                0x00000000c00128bc                SysOpen(regs*)
                0x00000000c0012abb                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012afd        0x3 
 .text          0x00000000c0012b00      0x159 net/ethernet.32
                0x00000000c0012b00                KeSwitchEndian16(unsigned short)
                0x00000000c0012b24                KeSwitchEndian32(unsigned int)
                0x00000000c0012b54                EthernetCRC32(unsigned char*, int)
                0x00000000c0012bf8                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012c59      0xd51 reg/cm.32
                0x00000000c0012c59                CmOpen(char const*)
                0x00000000c0012d77                CmClose(Reghive_Tag*)
                0x00000000c0012d8d                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012dc9                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012e40                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012e7f                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012eb1                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012eed                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012f15                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012f36                CmExpand(Reghive_Tag*, int)
                0x00000000c0012fb1                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0013037                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c001312b                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0013263                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c00132c4                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c00132f4                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c001332b                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0013355                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013395                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013439                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0013467                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013604                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013651                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00136cb                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001371e                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00137e2                zStrtok(char*, char const*)
                0x00000000c0013854                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00138d5                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013978                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00139aa      0x545 reg/registry.32
                0x00000000c00139aa                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013b36                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013c8b                Reg::getLine(char*, char*, char*)
                0x00000000c0013cc2                Reg::readInt(char*, char*, int*)
                0x00000000c0013db0                Reg::readString(char*, char*, char*, int)
                0x00000000c0013e31                Reg::readBool(char*, char*, bool*)
                0x00000000c0013e56                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013e82                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013eae                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013eef       0x36 sys/eject.32
                0x00000000c0013eef                SysEject(regs*)
 .text          0x00000000c0013f25       0x18 sys/exit.32
                0x00000000c0013f25                SysExit(regs*)
 .text          0x00000000c0013f3d       0x1f sys/getcwd.32
                0x00000000c0013f3d                SysGetCwd(regs*)
 .text          0x00000000c0013f5c        0xc sys/getpid.32
                0x00000000c0013f5c                SysGetPID(regs*)
 .text          0x00000000c0013f68       0x1a sys/getramdata.32
                0x00000000c0013f68                SysGetRAMData(regs*)
 .text          0x00000000c0013f82       0x82 sys/getvgaptr.32
                0x00000000c0013f82                SysGetVGAPtr(regs*)
 .text          0x00000000c0014004       0xb9 sys/kill.32
                0x00000000c0014004                SysKill(regs*)
 .text          0x00000000c00140bd       0xa8 sys/loaddll.32
                0x00000000c00140bd                SysLoadDLL(regs*)
 .text          0x00000000c0014165       0x68 sys/read.32
                0x00000000c0014165                SysRead(regs*)
 .text          0x00000000c00141cd       0x29 sys/registersignal.32
                0x00000000c00141cd                SysRegisterSignal(regs*)
 .text          0x00000000c00141f6      0x19c sys/registry.32
                0x00000000c00141f6                SysRegistryGetTypeFromPath(regs*)
                0x00000000c001426d                SysRegistryReadExtent(regs*)
                0x00000000c00142b5                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00142dd                SysRegistryEnterDirectory(regs*)
                0x00000000c0014305                SysRegistryGetNext(regs*)
                0x00000000c001432d                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014367                SysRegistryOpen(regs*)
                0x00000000c001437b                SysRegistryClose(regs*)
 .text          0x00000000c0014392       0x55 sys/sbrk.32
                0x00000000c0014392                SysSbrk(regs*)
 .text          0x00000000c00143e7       0x1c sys/setcwd.32
                0x00000000c00143e7                SysSetCwd(regs*)
 .text          0x00000000c0014403       0x96 sys/settime.32
                0x00000000c0014403                SysSetTime(regs*)
 .text          0x00000000c0014499       0x73 sys/symlink.32
                0x00000000c0014499                SysSymlink(regs*)
 .text          0x00000000c001450c       0x4a sys/timezone.32
                0x00000000c001450c                SysTimezone(regs*)
 .text          0x00000000c0014556       0xfc sys/truncate.32
                0x00000000c0014556                SysTruncate(regs*)
 .text          0x00000000c0014652       0x68 sys/write.32
                0x00000000c0014652                SysWrite(regs*)
 .text          0x00000000c00146ba       0x62 sys/wsbe.32
                0x00000000c00146ba                SysWsbe(regs*)
 .text          0x00000000c001471c       0x25 sys/yield.32
                0x00000000c001471c                SysYield(regs*)
 .text          0x00000000c0014741     0x1203 thr/elf.32
                0x00000000c0014741                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00149c8                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014be7                Thr::runtimeReferenceHelper()
                0x00000000c0014bfa                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014c49                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014f07                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015648                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001567a                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00156b1                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00156cb                Thr::loadDLL(char const*, bool)
                0x00000000c001590b                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0015944     0x13b5 thr/prcssthr.32
                0x00000000c0015944                userModeEntryPoint(void*)
                0x00000000c001596c                changeTSS
                0x00000000c001599c                switchToThread(ThreadControlBlock*)
                0x00000000c0015a4c                Process::addArgs(char**)
                0x00000000c0015ab8                Process::Process(char const*, Process*, char**)
                0x00000000c0015ab8                Process::Process(char const*, Process*, char**)
                0x00000000c0015cc4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015cc4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015e98                taskStartupFunction
                0x00000000c0015ea4                Semaphore::Semaphore(int)
                0x00000000c0015ea4                Semaphore::Semaphore(int)
                0x00000000c0015ed4                Mutex::Mutex()
                0x00000000c0015ed4                Mutex::Mutex()
                0x00000000c0015ee8                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015ff0                Process::createUserThread()
                0x00000000c0016010                setupMultitasking(void (*)())
                0x00000000c0016134                schedule()
                0x00000000c00161c8                Semaphore::tryAcquire()
                0x00000000c0016288                Semaphore::assertLocked(char const*)
                0x00000000c001630c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016334                blockTask(TaskState)
                0x00000000c001636c                waitTask(int, int*, int)
                0x00000000c00163b0                milliTenthSleepUntil(unsigned int)
                0x00000000c0016450                milliTenthSleep(unsigned int)
                0x00000000c0016464                sleep(unsigned int)
                0x00000000c0016474                Semaphore::acquire()
                0x00000000c001653c                taskReturned
                0x00000000c0016580                Thr::processFromPID(int)
                0x00000000c001662c                unblockTask(ThreadControlBlock*)
                0x00000000c00166d8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00169ac                cleanerTaskFunction(void*)
                0x00000000c0016ab4                terminateTask(int)
                0x00000000c0016ba0                Thr::terminateFromIRQ(int)
                0x00000000c0016bb0                Semaphore::release()
 .text          0x00000000c0016cf9      0xc31 vm86/vm8086.32
                0x00000000c0016cf9                Vm::inbv(unsigned short)
                0x00000000c0016d0c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016d42                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016d52                Vm::getSegment(unsigned int)
                0x00000000c0016d5a                Vm::getOffset(unsigned int)
                0x00000000c0016d5f                Vm::mainloop2()
                0x00000000c0016d99                Vm::mainVm8086Loop(void*)
                0x00000000c0016da9                Vm::mainloop3(unsigned long)
                0x00000000c0016dcf                Vm::initialise8086()
                0x00000000c0016e12                Vm::finish8086()
                0x00000000c0016e73                Vm::getOutput8086(unsigned char*)
                0x00000000c0016e98                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016f51                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00170ef                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001718c                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001719d                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00171af                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00171c0                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00171d5                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00171eb                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017200                Vm::faultHandler(regs*)
 .text          0x00000000c001792a      0xaf0 arch/i386/hal.32
                0x00000000c001792a                noCopro(unsigned long)
                0x00000000c001792b                nmiHandler(regs*, void*)
                0x00000000c0017944                doubleFault(regs*, void*)
                0x00000000c001795d                displayDebugInfo(regs*)
                0x00000000c0017ce2                HalSystemIdle()
                0x00000000c0017d5e                displayProgramFault(char const*)
                0x00000000c0017daa                gpFault(regs*, void*)
                0x00000000c0017e11                pgFault(regs*, void*)
                0x00000000c0017e9a                otherISRHandler(regs*, void*)
                0x00000000c0017ece                opcodeFault(regs*, void*)
                0x00000000c0017f51                i386SaveCoprocessor(void*)
                0x00000000c0017f65                i386LoadCoprocessor(void*)
                0x00000000c0017f79                x87EmulHandler(regs*, void*)
                0x00000000c0018016                HalInitialiseCoprocessor()
                0x00000000c00180c4                HalPanic(char const*)
                0x00000000c00181d8                HalQueryPerformanceCounter()
                0x00000000c00181f3                HalInitialise()
                0x00000000c00183a9                HalMakeBeep(int)
                0x00000000c00183e3                HalGetRand()
                0x00000000c00183e6                HalEndOfInterrupt(int)
                0x00000000c0018417                HalRestart()
                0x00000000c0018418                HalShutdown()
                0x00000000c0018419                HalSleep()
 *fill*         0x00000000c001841a        0x2 
 .text          0x00000000c001841c      0x2dc arch/i386/pic.32
                0x00000000c001841c                picIoWait()
                0x00000000c0018424                picDisable()
                0x00000000c0018458                picGetIRQReg(int)
                0x00000000c00184d4                picOpen()
                0x00000000c0018658                picEOI(int)
 .text          0x00000000c00186f8      0x66e arch/i386/rtc.32
                0x00000000c00186f8                RTC::open(int, int, void*)
                0x00000000c00186fc                RTC::close(int, int, void*)
                0x00000000c0018700                RTC::timeInSecondsUTC()
                0x00000000c0018712                RTC::timeInDatetimeUTC()
                0x00000000c0018738                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018776                RTC::~RTC()
                0x00000000c0018776                RTC::~RTC()
                0x00000000c001879a                RTC::~RTC()
                0x00000000c00187c4                RTC::get_update_in_progress_flag()
                0x00000000c00187de                RTC::completeRTCRefresh()
                0x00000000c0018ab8                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018c66                rtcIRQHandler(regs*, void*)
                0x00000000c0018cac                RTC::RTC()
                0x00000000c0018cac                RTC::RTC()
 *fill*         0x00000000c0018d66        0x2 
 .text          0x00000000c0018d68      0x1f4 arch/i386/vga.32
                0x00000000c0018d68                HalConsoleScroll(int, int)
                0x00000000c0018e70                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018ed4                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018f5c     0x14f3 fs/fat/vfslink.32
                0x00000000c0018f5c                FAT::getName()
                0x00000000c0018f64                FAT::tell(void*, unsigned long long*)
                0x00000000c0018fa0                FAT::stat(void*, unsigned long long*)
                0x00000000c0018fdc                FAT::~FAT()
                0x00000000c0018fdc                FAT::~FAT()
                0x00000000c0019000                FAT::~FAT()
                0x00000000c0019028                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00190cc                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00191ac                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019390                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00195ac                FAT::allocateSwapfile(char const*, int)
                0x00000000c001976c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00198dc                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001993c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001999c                FAT::close(void*)
                0x00000000c00199f0                FAT::closeDir(void*)
                0x00000000c0019a44                FAT::truncate(void*, unsigned long long)
                0x00000000c0019ab0                FAT::seek(void*, unsigned long long)
                0x00000000c0019b08                fatWrapperReadDisk
                0x00000000c0019b48                fatWrapperWriteDisk
                0x00000000c0019b88                fatWrapperIoctl
                0x00000000c0019ca8                FAT::FAT()
                0x00000000c0019ca8                FAT::FAT()
                0x00000000c0019d00                FAT::fixFilepath(char*)
                0x00000000c0019d40                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019eb4                FAT::openDir(char const*, void**)
                0x00000000c0019f64                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a05c                FAT::unlink(char const*)
                0x00000000c001a0dc                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a294                FAT::rename(char const*, char const*)
                0x00000000c001a360                FAT::mkdir(char const*)
                0x00000000c001a3e0                FAT::exists(char const*)
 *fill*         0x00000000c001a44f        0x1 
 .text          0x00000000c001a450       0x94 fs/iso9660/helper.32
                0x00000000c001a450                isoReadDiscSectorHelper
                0x00000000c001a4ac                iso_kprintf
                0x00000000c001a4c8                iso_kprintfd
 .text          0x00000000c001a4e4      0x71a fs/iso9660/vfslink.32
                0x00000000c001a4e4                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a4ea                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a4f0                ISO9660::getName()
                0x00000000c001a4f6                ISO9660::closeDir(void*)
                0x00000000c001a500                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a506                ISO9660::unlink(char const*)
                0x00000000c001a50c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a512                ISO9660::rename(char const*, char const*)
                0x00000000c001a518                ISO9660::mkdir(char const*)
                0x00000000c001a51e                ISO9660::~ISO9660()
                0x00000000c001a51e                ISO9660::~ISO9660()
                0x00000000c001a542                ISO9660::~ISO9660()
                0x00000000c001a56a                ISO9660::exists(char const*)
                0x00000000c001a57e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a664                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a6ac                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a6ee                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a72c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a77e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a8c0                ISO9660::close(void*)
                0x00000000c001a8f0                ISO9660::openDir(char const*, void**)
                0x00000000c001a9ca                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001aae5                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001ab64                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001abd6                ISO9660::ISO9660()
                0x00000000c001abd6                ISO9660::ISO9660()
 .text          0x00000000c001abfe      0x26c hal/sound/sndcard.32
                0x00000000c001abfe                SoundCard::beginPlayback()
                0x00000000c001ac0c                SoundCard::stopPlayback()
                0x00000000c001ac1a                SoundCard::SoundCard(char const*)
                0x00000000c001ac1a                SoundCard::SoundCard(char const*)
                0x00000000c001acb8                SoundCard::~SoundCard()
                0x00000000c001acb8                SoundCard::~SoundCard()
                0x00000000c001acdc                SoundCard::~SoundCard()
                0x00000000c001ad06                SoundCard::configureRates(int, int, int)
                0x00000000c001ad36                SoundCard::getSamples16(int, short*)
                0x00000000c001ad92                SoundCard::getSamples32(int, int*)
                0x00000000c001ae18                SoundCard::addChannel(SoundPort*)
                0x00000000c001ae56                SoundCard::removeChannel(int)
 *fill*         0x00000000c001ae6a        0x2 
 .text          0x00000000c001ae6c      0x393 hal/sound/sndport.32
                0x00000000c001ae6c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ae6c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001aef8                SoundPort::~SoundPort()
                0x00000000c001aef8                SoundPort::~SoundPort()
                0x00000000c001af2c                SoundPort::unpause()
                0x00000000c001af38                SoundPort::pause()
                0x00000000c001af44                SoundPort::getBufferUsed()
                0x00000000c001af4c                SoundPort::getBufferSize()
                0x00000000c001af54                SoundPort::buffer16(short*, int)
                0x00000000c001afe0                SoundPort::buffer32(int*, int)
                0x00000000c001b06c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b13c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b1ff        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b1ff        0x1 
 .text          0x00000000c001b200      0xbc5 hw/bus/pci.32
                0x00000000c001b200                PCI::open(int, int, void*)
                0x00000000c001b21e                PCI::close(int, int, void*)
                0x00000000c001b222                PCI::PCI()
                0x00000000c001b222                PCI::PCI()
                0x00000000c001b2ba                PCI::readBAR8(unsigned int, int)
                0x00000000c001b2d6                PCI::readBAR16(unsigned int, int)
                0x00000000c001b2f4                PCI::readBAR32(unsigned int, int)
                0x00000000c001b310                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b330                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b352                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b372                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b3e8                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b492                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4b6                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4de                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b528                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b550                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b574                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b598                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5c0                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b624                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b70a                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b9d4                PCI::checkBus(unsigned char)
                0x00000000c001b9f8                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bb7e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bcfa                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bd6c                PCI::detect()
 *fill*         0x00000000c001bdc5        0x1 
 .text          0x00000000c001bdc6      0xb96 hw/diskctrl/ide.32
                0x00000000c001bdc6                IDE::close(int, int, void*)
                0x00000000c001bdca                IDE::IDE()
                0x00000000c001bdca                IDE::IDE()
                0x00000000c001bdfe                IDE::prepareInterrupt(unsigned char)
                0x00000000c001be10                selectDrive(unsigned char, unsigned char)
                0x00000000c001be12                IDE::getBase(unsigned char)
                0x00000000c001be24                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bee4                IDE::read(unsigned char, unsigned char)
                0x00000000c001bf98                IDE::waitInterrupt(unsigned char)
                0x00000000c001bffa                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c016                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c032                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c07c                IDE::open(int, int, void*)
                0x00000000c001c4b6                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c586                IDE::detect()
                0x00000000c001c84e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c908                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c95c      0x32c hw/diskctrl/satabus.32
                0x00000000c001c95c                SATABus::close(int, int, void*)
                0x00000000c001c960                SATABus::detect()
                0x00000000c001c962                SATABus::SATABus()
                0x00000000c001c962                SATABus::SATABus()
                0x00000000c001c9e8                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca1a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca62                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca82                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001caac                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cbbe                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cc68                SATABus::open(int, int, void*)
 .text          0x00000000c001cc88      0x96d hw/diskphys/ata.32
                0x00000000c001cc88                ATA::close(int, int, void*)
                0x00000000c001ccac                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001ccae                ATA::ATA()
                0x00000000c001ccae                ATA::ATA()
                0x00000000c001ccdc                ATA::flush(bool)
                0x00000000c001cd2a                ATA::readyForCommand()
                0x00000000c001cd76                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d13a                ATA::detectCHS()
                0x00000000c001d164                ATA::open(int, int, void*)
                0x00000000c001d230                combineCharAndColour(char, unsigned char)
                0x00000000c001d241                combineColours(unsigned char, unsigned char)
                0x00000000c001d24e                ATA::read(unsigned long long, int, void*)
                0x00000000c001d424                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d5f5        0x1 
 .text          0x00000000c001d5f6      0x612 hw/diskphys/atapi.32
                0x00000000c001d5f6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d5fc                ATAPI::close(int, int, void*)
                0x00000000c001d620                ATAPI::ATAPI()
                0x00000000c001d620                ATAPI::ATAPI()
                0x00000000c001d64e                ATAPI::readyForCommand()
                0x00000000c001d6a0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d960                ATAPI::diskRemoved()
                0x00000000c001d99a                ATAPI::eject()
                0x00000000c001d9e2                ATAPI::diskInserted()
                0x00000000c001d9ee                ATAPI::detectMedia()
                0x00000000c001daae                ATAPI::open(int, int, void*)
                0x00000000c001db8e                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001dc08      0x7ff hw/diskphys/sata.32
                0x00000000c001dc08                SATA::close(int, int, void*)
                0x00000000c001dc2c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001dc2e                SATA::open(int, int, void*)
                0x00000000c001dcd8                SATA::SATA()
                0x00000000c001dcd8                SATA::SATA()
                0x00000000c001dd06                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001df58                SATA::read(unsigned long long, int, void*)
                0x00000000c001e1a8                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e407        0x1 
 .text          0x00000000c001e408      0x5d8 hw/diskphys/satapi.32
                0x00000000c001e408                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e40e                SATAPI::close(int, int, void*)
                0x00000000c001e432                SATAPI::SATAPI()
                0x00000000c001e432                SATAPI::SATAPI()
                0x00000000c001e460                SATAPI::diskRemoved()
                0x00000000c001e462                SATAPI::diskInserted()
                0x00000000c001e47e                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e764                SATAPI::eject()
                0x00000000c001e7a0                SATAPI::detectMedia()
                0x00000000c001e7f6                SATAPI::open(int, int, void*)
                0x00000000c001e8f6                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e9e0      0x45b hw/intctrl/apic.32
                0x00000000c001e9e0                IOAPIC::close(int, int, void*)
                0x00000000c001e9e6                apicGetBase()
                0x00000000c001ea2c                IOAPIC::IOAPIC()
                0x00000000c001ea2c                IOAPIC::IOAPIC()
                0x00000000c001ea54                apicOpen()
                0x00000000c001ebd0                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001ec02                IOAPIC::read(int)
                0x00000000c001ec2a                IOAPIC::open(int, int, void*)
                0x00000000c001ed10                IOAPIC::write(int, int)
                0x00000000c001ed3c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ee3b        0x1 
 .text          0x00000000c001ee3c       0xf0 hw/timer/apictimer.32
                0x00000000c001ee3c                APICTimer::close(int, int, void*)
                0x00000000c001ee44                apicTimerHandler(regs*, void*)
                0x00000000c001ee6c                APICTimer::open(int, int, void*)
                0x00000000c001eedc                APICTimer::write(int)
                0x00000000c001ef04                APICTimer::APICTimer()
                0x00000000c001ef04                APICTimer::APICTimer()
 .text          0x00000000c001ef2c      0x1ad hw/timer/pit.32
                0x00000000c001ef2c                PIT::write(int)
                0x00000000c001efb0                pitHandler(regs*, void*)
                0x00000000c001efd8                PIT::open(int, int, void*)
                0x00000000c001f028                PIT::close(int, int, void*)
                0x00000000c001f058                PIT::PIT()
                0x00000000c001f058                PIT::PIT()
 *fill*         0x00000000c001f0d9        0x7 
 .text          0x00000000c001f0e0       0x83 arch/i386/avx.32
                0x00000000c001f0e0                avxDetect
                0x00000000c001f10a                avxSave
                0x00000000c001f11b                avxLoad
                0x00000000c001f12c                avxInit
                0x00000000c001f14e                avxClose
                0x00000000c001f14f                wouldSheSayYes
 *fill*         0x00000000c001f163        0xd 
 .text          0x00000000c001f170      0x2ec arch/i386/interrupt.32
                0x00000000c001f170                isr0
                0x00000000c001f180                isr1
                0x00000000c001f18a                isr2
                0x00000000c001f194                isr3
                0x00000000c001f19e                isr4
                0x00000000c001f1a8                isr5
                0x00000000c001f1b2                isr6
                0x00000000c001f1bc                isr7
                0x00000000c001f1c6                isr8
                0x00000000c001f1ce                isr9
                0x00000000c001f1d8                isr10
                0x00000000c001f1e0                isr11
                0x00000000c001f1e8                isr12
                0x00000000c001f1f0                isr13
                0x00000000c001f20a                isr14
                0x00000000c001f212                isr15
                0x00000000c001f21c                isr16
                0x00000000c001f226                isr17
                0x00000000c001f230                isr18
                0x00000000c001f23a                irq3
                0x00000000c001f244                irq4
                0x00000000c001f24e                irq5
                0x00000000c001f258                irq6
                0x00000000c001f262                irq7
                0x00000000c001f26c                irq8
                0x00000000c001f276                irq9
                0x00000000c001f280                irq10
                0x00000000c001f28a                irq11
                0x00000000c001f294                irq12
                0x00000000c001f29e                irq13
                0x00000000c001f2a8                irq14
                0x00000000c001f2b2                irq15
                0x00000000c001f2bc                irq1
                0x00000000c001f2c3                irq2
                0x00000000c001f2ca                isr96
                0x00000000c001f2d1                irq0
                0x00000000c001f2d6                int_common_stub
                0x00000000c001f308                syscall_common_stub
                0x00000000c001f40c                irq16
                0x00000000c001f416                irq17
                0x00000000c001f420                irq18
                0x00000000c001f42a                irq19
                0x00000000c001f434                irq20
                0x00000000c001f43e                irq21
                0x00000000c001f448                irq22
                0x00000000c001f452                irq23
 *fill*         0x00000000c001f45c        0x4 
 .text          0x00000000c001f460       0x10 arch/i386/rdrand.32
                0x00000000c001f460                i386GetRDRAND
 .text          0x00000000c001f470       0x39 arch/i386/sse.32
                0x00000000c001f470                absolutelyNoChanceInHell
                0x00000000c001f470                sseDetect
                0x00000000c001f488                sseSave
                0x00000000c001f490                sseLoad
                0x00000000c001f498                sseInit
                0x00000000c001f4a8                sseClose
 *fill*         0x00000000c001f4a9        0x7 
 .text          0x00000000c001f4b0       0x49 arch/i386/x87.32
                0x00000000c001f4b6                x87Detect
                0x00000000c001f4d1                x87Save
                0x00000000c001f4d8                x87Load
                0x00000000c001f4df                x87Init
                0x00000000c001f4f8                x87Close
 *fill*         0x00000000c001f4f9        0x3 
 .text          0x00000000c001f4fc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f521        0x0 crtn.32
 *fill*         0x00000000c001f521        0x3 
 .text          0x00000000c001f524      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f524                __divdi3
 *fill*         0x00000000c001f66f        0x1 
 .text          0x00000000c001f670      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f670                __moddi3
 *fill*         0x00000000c001f7ee        0x2 
 .text          0x00000000c001f7f0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f7f0                __udivdi3
 *fill*         0x00000000c001f8ef        0x1 
 .text          0x00000000c001f8f0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f8f0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001fa10        0x0
 .iplt          0x00000000c001fa10        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001fa0a        0xf
 .init          0x00000000c001fa0a        0x3 crti.32
                0x00000000c001fa0a                _init
 .init          0x00000000c001fa0d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001fa12        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001fa17        0x2 crtn.32

.fini           0x00000000c001fa19        0xa
 .fini          0x00000000c001fa19        0x3 crti.32
                0x00000000c001fa19                _fini
 .fini          0x00000000c001fa1c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001fa21        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001fa24       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001fa24       0x23 core/computer.32
                0x00000000c001fa24                Computer::~Computer()
                0x00000000c001fa24                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001fa48       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001fa48       0x2a core/computer.32
                0x00000000c001fa48                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001fa72       0x21
 .text._Z10idleCommonv
                0x00000000c001fa72       0x21 core/idle.32
                0x00000000c001fa72                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fa94        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fa94        0x2 core/unixfile.32
                0x00000000c001fa94                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001fa94                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fa96       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fa96       0x42 core/unixfile.32
                0x00000000c001fa96                LinkedList<UnixFile>::LinkedList()
                0x00000000c001fa96                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fad8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fad8       0xd3 core/unixfile.32
                0x00000000c001fad8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fbac        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fbac        0x7 core/unixfile.32
                0x00000000c001fbac                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fbb4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fbb4       0xa1 core/unixfile.32
                0x00000000c001fbb4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc56        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc56        0x8 core/unixfile.32
                0x00000000c001fc56                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc5e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc5e       0x1a hal/device.32
                0x00000000c001fc5e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fc5e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fc78       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fc78       0x2a hal/device.32
                0x00000000c001fc78                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fca2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fca2       0xdc hal/device.32
                0x00000000c001fca2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fd7e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fd7e       0x42 hal/device.32
                0x00000000c001fd7e                LinkedList<Device>::LinkedList()
                0x00000000c001fd7e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fdc0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fdc0       0x1c hal/timer.32
                0x00000000c001fdc0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fddc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fddc        0x7 hal/timer.32
                0x00000000c001fddc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fde4       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fde4       0xbc hal/timer.32
                0x00000000c001fde4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fea0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fea0       0xda hal/timer.32
                0x00000000c001fea0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ff7c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ff7c       0x23 hw/acpi.32
                0x00000000c001ff7c                ACPI::~ACPI()
                0x00000000c001ff7c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ffa0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ffa0       0x2a hw/acpi.32
                0x00000000c001ffa0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ffcc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ffcc        0x2 hw/acpi.32
                0x00000000c001ffcc                LinkedList<Device>::~LinkedList()
                0x00000000c001ffcc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ffd0       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ffd0       0x1c hw/acpi.32
                0x00000000c001ffd0                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ffec        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ffec        0x7 hw/acpi.32
                0x00000000c001ffec                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fff4       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fff4       0xb8 hw/acpi.32
                0x00000000c001fff4                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c00200ac       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00200ac       0x23 hw/cpu.32
                0x00000000c00200ac                CPU::~CPU()
                0x00000000c00200ac                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00200d0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00200d0       0x2a hw/cpu.32
                0x00000000c00200d0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00200fc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00200fc        0x8 sys/kill.32
                0x00000000c00200fc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020104        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020104        0x2 thr/prcssthr.32
                0x00000000c0020104                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020104                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020108       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020108       0x49 thr/prcssthr.32
                0x00000000c0020108                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020108                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020154       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020154       0x42 thr/prcssthr.32
                0x00000000c0020154                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020154                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c0020196       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020196       0x23 hw/bus/pci.32
                0x00000000c0020196                PCI::~PCI()
                0x00000000c0020196                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00201ba       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00201ba       0x2a hw/bus/pci.32
                0x00000000c00201ba                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00201e4       0x23
 .text._ZN3IDED2Ev
                0x00000000c00201e4       0x23 hw/diskctrl/ide.32
                0x00000000c00201e4                IDE::~IDE()
                0x00000000c00201e4                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020208       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020208       0x2a hw/diskctrl/ide.32
                0x00000000c0020208                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020232       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020232       0x23 hw/diskctrl/satabus.32
                0x00000000c0020232                SATABus::~SATABus()
                0x00000000c0020232                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020256       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020256       0x2a hw/diskctrl/satabus.32
                0x00000000c0020256                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020280       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020280       0x23 hw/diskphys/ata.32
                0x00000000c0020280                ATA::~ATA()
                0x00000000c0020280                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00202a4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00202a4       0x2a hw/diskphys/ata.32
                0x00000000c00202a4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00202ce       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00202ce       0x23 hw/diskphys/atapi.32
                0x00000000c00202ce                ATAPI::~ATAPI()
                0x00000000c00202ce                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00202f2       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00202f2       0x2a hw/diskphys/atapi.32
                0x00000000c00202f2                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002031c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002031c       0x23 hw/diskphys/sata.32
                0x00000000c002031c                SATA::~SATA()
                0x00000000c002031c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020340       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020340       0x2a hw/diskphys/sata.32
                0x00000000c0020340                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002036a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002036a       0x23 hw/diskphys/satapi.32
                0x00000000c002036a                SATAPI::~SATAPI()
                0x00000000c002036a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002038e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002038e       0x2a hw/diskphys/satapi.32
                0x00000000c002038e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00203b8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00203b8       0x23 hw/intctrl/apic.32
                0x00000000c00203b8                IOAPIC::~IOAPIC()
                0x00000000c00203b8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00203dc       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00203dc       0x2a hw/intctrl/apic.32
                0x00000000c00203dc                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020408       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020408       0x23 hw/timer/apictimer.32
                0x00000000c0020408                APICTimer::~APICTimer()
                0x00000000c0020408                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002042c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002042c       0x2a hw/timer/apictimer.32
                0x00000000c002042c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020458       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020458       0x23 hw/timer/pit.32
                0x00000000c0020458                PIT::~PIT()
                0x00000000c0020458                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002047c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002047c       0x2a hw/timer/pit.32
                0x00000000c002047c                PIT::~PIT()

.rodata         0x00000000c00204a6     0x32de
                0x00000000c00204a6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00204a6        0x2 
 .ctors         0x00000000c00204a8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00204ac        0x4 core/unixfile.32
 .ctors         0x00000000c00204b0        0x4 thr/prcssthr.32
 .ctors         0x00000000c00204b4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00204b8                end_ctors = .
                0x00000000c00204b8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00204b8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00204bc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00204bc                __DTOR_END__
                0x00000000c00204c0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00204c0        0x0 
 .rodata        0x00000000c00204c0      0x101 acpica/utclib.32
                0x00000000c00204c0                AcpiGbl_Ctypes
 *fill*         0x00000000c00205c1        0x3 
 .rodata        0x00000000c00205c4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c00205dc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020626       0x1a 
 .rodata        0x00000000c0020640       0xed fs/fat/ff.32
 *fill*         0x00000000c002072d       0x13 
 .rodata        0x00000000c0020740      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020b40       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020baf      0x12b core/computer.32
 *fill*         0x00000000c0020cda        0x2 
 .rodata.str1.4
                0x00000000c0020cdc       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020d44       0x2c core/computer.32
                0x00000000c0020d44                vtable for Computer
 .rodata.str1.4
                0x00000000c0020d70       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020da0        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020dac       0x17 core/main.32
 *fill*         0x00000000c0020dc3        0x1 
 .rodata.str1.4
                0x00000000c0020dc4       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020e69       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020ec1       0x39 core/pipe.32
 *fill*         0x00000000c0020efa        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020efc       0x1c core/pipe.32
                0x00000000c0020efc                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020f18       0x2b core/terminal.32
 *fill*         0x00000000c0020f43        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020f44       0x1c core/terminal.32
                0x00000000c0020f44                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020f60       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020f82       0x15 core/unixfile.32
 *fill*         0x00000000c0020f97        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020f98       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020fe3        0x8 core/unixfile.32
 *fill*         0x00000000c0020feb        0x1 
 .rodata.str1.4
                0x00000000c0020fec       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c002100c       0x1c core/unixfile.32
                0x00000000c002100c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0021028       0x1c core/unixfile.32
                0x00000000c0021028                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0021044      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00212d8      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00213fe       0x33 coreobjs/c++.32
 *fill*         0x00000000c0021431        0x3 
 .rodata        0x00000000c0021434      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021584      0x169 dbg/usban.32
 *fill*         0x00000000c00216ed        0x3 
 .rodata.str1.4
                0x00000000c00216f0      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0021827      0x19b fs/symlink.32
 .rodata.str1.1
                0x00000000c00219c2       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c0021a03        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021a04       0x6c fs/vfs.32
                0x00000000c0021a04                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021a70       0x1c fs/vfs.32
                0x00000000c0021a70                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021a8c       0x1c fs/vfs.32
                0x00000000c0021a8c                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021aa8       0x2c hal/bus.32
                0x00000000c0021aa8                vtable for Bus
 .rodata.str1.1
                0x00000000c0021ad4       0x1e hal/clock.32
 *fill*         0x00000000c0021af2        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021af4       0x3c hal/clock.32
                0x00000000c0021af4                vtable for Clock
 *fill*         0x00000000c0021b30       0x10 
 .rodata        0x00000000c0021b40       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021b70       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021bd4       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021bd4       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021bd4       0x2c hal/device.32
                0x00000000c0021bd4                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021c00       0x2c hal/device.32
                0x00000000c0021c00                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021c2c       0x2c hal/diskctrl.32
                0x00000000c0021c2c                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021c58       0x38 hal/diskphys.32
                0x00000000c0021c58                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021c90       0x3e hal/intctrl.32
 *fill*         0x00000000c0021cce        0x2 
 .rodata.str1.4
                0x00000000c0021cd0       0x5d hal/intctrl.32
 .rodata        0x00000000c0021d2d       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021d80       0x34 hal/keybrd.32
                0x00000000c0021d80                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021db4       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021df8       0x2c hal/logidisk.32
                0x00000000c0021df8                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021e24       0x2c hal/mouse.32
                0x00000000c0021e24                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021e50       0x34 hal/nic.32
                0x00000000c0021e50                vtable for NIC
 .rodata.str1.1
                0x00000000c0021e84        0xb hal/partition.32
 *fill*         0x00000000c0021e8f        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021e90       0x44 hal/serial.32
                0x00000000c0021e90                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021ed4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021ed4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021ed4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021ed4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021ed4       0x30 hal/timer.32
                0x00000000c0021ed4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021f04       0x10 hal/vcache.32
                0x00000000c0021f04                vtable for VCache
 .rodata.str1.1
                0x00000000c0021f14       0x93 hal/video.32
 *fill*         0x00000000c0021fa7        0x1 
 .rodata._ZTV5Video
                0x00000000c0021fa8       0x4c hal/video.32
                0x00000000c0021fa8                vtable for Video
 .rodata.str1.1
                0x00000000c0021ff4      0x1fd hw/acpi.32
                                        0x217 (size before relaxing)
 *fill*         0x00000000c00221f1        0x3 
 .rodata.str1.4
                0x00000000c00221f4       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c002228f       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c002228f        0x8 hw/acpi.32
 *fill*         0x00000000c002228f        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0022290       0x2c hw/acpi.32
                0x00000000c0022290                vtable for ACPI
 .rodata.str1.1
                0x00000000c00222bc      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022437        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022438       0x2c hw/cpu.32
                0x00000000c0022438                vtable for CPU
 .rodata.str1.1
                0x00000000c0022464       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00224a4       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00224e0       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0022571       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c002263a       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022682       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00226ad       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0022723       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022768        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0022772       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0022793       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022829       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c002287d       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00228a9      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022a75       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022acc      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022bdc       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022bdc       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022bdc       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022bdc        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022bdc       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022c9e        0x2 
 .rodata        0x00000000c0022ca0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022cd0      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022e6f        0x1 
 .rodata.str1.4
                0x00000000c0022e70       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022ee3       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022ef8       0x3c arch/i386/rtc.32
                0x00000000c0022ef8                vtable for RTC
 .rodata.str1.1
                0x00000000c0022f34       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022f75        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022f78       0x6c fs/fat/vfslink.32
                0x00000000c0022f78                vtable for FAT
 .rodata.str1.1
                0x00000000c0022fe4       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022fe4      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002311c       0x6c fs/iso9660/vfslink.32
                0x00000000c002311c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0023188       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00231cc       0x34 hal/sound/sndcard.32
                0x00000000c00231cc                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0023200       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002323f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023277       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023318       0x2c hw/bus/pci.32
                0x00000000c0023318                vtable for PCI
 .rodata.str1.1
                0x00000000c0023344       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c00233cb        0x1 
 .rodata._ZTV3IDE
                0x00000000c00233cc       0x2c hw/diskctrl/ide.32
                0x00000000c00233cc                vtable for IDE
 .rodata.str1.4
                0x00000000c00233f8       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c002341c       0x2c hw/diskctrl/satabus.32
                0x00000000c002341c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023448       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c002345a        0x2 
 .rodata._ZTV3ATA
                0x00000000c002345c       0x38 hw/diskphys/ata.32
                0x00000000c002345c                vtable for ATA
 .rodata.str1.1
                0x00000000c0023494        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00234a1        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00234a4       0x38 hw/diskphys/atapi.32
                0x00000000c00234a4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00234dc       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023558       0x38 hw/diskphys/sata.32
                0x00000000c0023558                vtable for SATA
 .rodata.str1.1
                0x00000000c0023590       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c002367a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c002367c       0x38 hw/diskphys/satapi.32
                0x00000000c002367c                vtable for SATAPI
 .rodata        0x00000000c00236b4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00236bc       0x2c hw/intctrl/apic.32
                0x00000000c00236bc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00236e8       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0023703        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023704       0x30 hw/timer/apictimer.32
                0x00000000c0023704                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023734       0x1d hw/timer/pit.32
 *fill*         0x00000000c0023751        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023754       0x30 hw/timer/pit.32
                0x00000000c0023754                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023784      0xbbd
 *(.data)
 .data          0x00000000c0023784        0x0 crti.32
 .data          0x00000000c0023784        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023784                __dso_handle
 .data          0x00000000c0023788        0x0 acpica/utclib.32
 .data          0x00000000c0023788        0x0 core/malloc.32
 .data          0x00000000c0023788        0x0 libk/ctype.32
 .data          0x00000000c0023788        0x0 libk/string.32
 .data          0x00000000c0023788        0x0 fs/fat/diskio.32
 .data          0x00000000c0023788        0x0 fs/fat/ff.32
 .data          0x00000000c0023788        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023788        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023788        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023788        0x0 core/computer.32
 .data          0x00000000c0023788        0x0 core/gdt.32
 .data          0x00000000c0023788        0x0 core/idle.32
 .data          0x00000000c0023788        0x0 core/idt.32
 .data          0x00000000c0023788        0x4 core/kheap.32
 .data          0x00000000c002378c        0x0 core/main.32
 .data          0x00000000c002378c        0x4 core/physmgr.32
                0x00000000c002378c                Phys::bitmap
 .data          0x00000000c0023790        0x0 core/pipe.32
 *fill*         0x00000000c0023790       0x10 
 .data          0x00000000c00237a0       0x60 core/terminal.32
                0x00000000c00237a0                VgaText::hiddenOut
                0x00000000c00237c0                ansiToVGAMappings
 .data          0x00000000c0023800        0x0 core/tss.32
 .data          0x00000000c0023800        0x4 core/unixfile.32
                0x00000000c0023800                UnixFile::nextFd
 .data          0x00000000c0023804       0x15 core/virtmgr.32
                0x00000000c0023804                Virt::pageAllocPtr
                0x00000000c0023808                Virt::bitmap
                0x00000000c002380c                Virt::swapfileSectorsPerPage
                0x00000000c0023810                Virt::swapfileLength
                0x00000000c0023814                Virt::swapfileSector
                0x00000000c0023818                Virt::swapfileDrive
 *fill*         0x00000000c0023819        0x3 
 .data          0x00000000c002381c        0x4 coreobjs/c++.32
                0x00000000c002381c                __stack_chk_guard
 .data          0x00000000c0023820        0x0 dbg/kconsole.32
 .data          0x00000000c0023820       0x28 dbg/usban.32
                0x00000000c0023820                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023848        0x0 fs/symlink.32
 .data          0x00000000c0023848        0x0 fs/vfs.32
 .data          0x00000000c0023848        0x0 hal/bus.32
 .data          0x00000000c0023848        0x0 hal/buzzer.32
 .data          0x00000000c0023848        0x0 hal/clock.32
 .data          0x00000000c0023848        0x0 hal/device.32
 .data          0x00000000c0023848        0x0 hal/diskctrl.32
 .data          0x00000000c0023848        0x0 hal/diskphys.32
 .data          0x00000000c0023848        0x0 hal/fpu.32
 .data          0x00000000c0023848        0x0 hal/intctrl.32
 .data          0x00000000c0023848        0x0 hal/keybrd.32
 .data          0x00000000c0023848        0x0 hal/logidisk.32
 .data          0x00000000c0023848        0x0 hal/mouse.32
 .data          0x00000000c0023848        0x0 hal/nic.32
 .data          0x00000000c0023848        0x0 hal/partition.32
 .data          0x00000000c0023848        0x0 hal/serial.32
 .data          0x00000000c0023848        0x0 hal/timer.32
 .data          0x00000000c0023848        0x0 hal/vcache.32
 .data          0x00000000c0023848        0x0 hal/video.32
 .data          0x00000000c0023848       0x10 hw/acpi.32
                0x00000000c0023848                legacyIRQRemaps
 .data          0x00000000c0023858        0x4 hw/cpu.32
                0x00000000c0023858                lastCode
 .data          0x00000000c002385c        0x0 krnl/atexit.32
 *fill*         0x00000000c002385c        0x4 
 .data          0x00000000c0023860      0x142 krnl/bootmsg.32
                0x00000000c0023860                KiSplashScreen
 .data          0x00000000c00239a2        0x0 krnl/compat.32
 *fill*         0x00000000c00239a2       0x1e 
 .data          0x00000000c00239c0      0x400 krnl/crc32.32
                0x00000000c00239c0                KiPolyLookupCRC32
 .data          0x00000000c0023dc0       0x4d krnl/env.32
                0x00000000c0023dc0                defaultSysEnv
 .data          0x00000000c0023e0d        0x0 krnl/inlines.32
 .data          0x00000000c0023e0d        0x0 krnl/panic.32
 .data          0x00000000c0023e0d        0x0 krnl/powctrl.32
 .data          0x00000000c0023e0d        0x0 krnl/random.32
 .data          0x00000000c0023e0d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023e0d       0x13 
 .data          0x00000000c0023e20       0x4c krnl/signal.32
                0x00000000c0023e20                KiDefaultSignalHandlers
 *fill*         0x00000000c0023e6c       0x14 
 .data          0x00000000c0023e80       0xfc krnl/syscalls.32
                0x00000000c0023e80                systemCallHandlers
 .data          0x00000000c0023f7c        0x0 net/ethernet.32
 *fill*         0x00000000c0023f7c        0x4 
 .data          0x00000000c0023f80      0x100 reg/cm.32
                0x00000000c0023f80                CmComponents
 .data          0x00000000c0024080        0x0 reg/registry.32
 .data          0x00000000c0024080        0x0 sys/eject.32
 .data          0x00000000c0024080        0x0 sys/exit.32
 .data          0x00000000c0024080        0x0 sys/getcwd.32
 .data          0x00000000c0024080        0x0 sys/getpid.32
 .data          0x00000000c0024080        0x0 sys/getramdata.32
 .data          0x00000000c0024080        0x0 sys/getvgaptr.32
 .data          0x00000000c0024080        0x0 sys/kill.32
 .data          0x00000000c0024080        0x0 sys/loaddll.32
 .data          0x00000000c0024080        0x0 sys/read.32
 .data          0x00000000c0024080        0x0 sys/registersignal.32
 .data          0x00000000c0024080        0x0 sys/registry.32
 .data          0x00000000c0024080        0x0 sys/sbrk.32
 .data          0x00000000c0024080        0x0 sys/setcwd.32
 .data          0x00000000c0024080        0x0 sys/settime.32
 .data          0x00000000c0024080        0x0 sys/symlink.32
 .data          0x00000000c0024080        0x0 sys/timezone.32
 .data          0x00000000c0024080        0x0 sys/truncate.32
 .data          0x00000000c0024080        0x0 sys/write.32
 .data          0x00000000c0024080        0x0 sys/wsbe.32
 .data          0x00000000c0024080        0x0 sys/yield.32
 .data          0x00000000c0024080        0x0 thr/elf.32
 .data          0x00000000c0024080        0x4 thr/prcssthr.32
                0x00000000c0024080                Thr::nextPID
 .data          0x00000000c0024084        0x0 vm86/vm8086.32
 *fill*         0x00000000c0024084       0x1c 
 .data          0x00000000c00240a0      0x2a0 arch/i386/hal.32
                0x00000000c00240a0                exceptionNames
 .data          0x00000000c0024340        0x0 arch/i386/pic.32
 .data          0x00000000c0024340        0x0 arch/i386/rtc.32
 .data          0x00000000c0024340        0x0 arch/i386/vga.32
 .data          0x00000000c0024340        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024340        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024340        0x1 fs/iso9660/vfslink.32
                0x00000000c0024340                recentDriveletter
 .data          0x00000000c0024341        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024341        0x0 hal/sound/sndport.32
 .data          0x00000000c0024341        0x0 hw/bus/isa.32
 .data          0x00000000c0024341        0x0 hw/bus/pci.32
 .data          0x00000000c0024341        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024341        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024341        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024341        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024341        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024341        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024341        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024341        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024341        0x0 hw/timer/pit.32
 .data          0x00000000c0024341        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024341        0x0 crtn.32
 .data          0x00000000c0024341        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024341        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024341        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024341        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024344        0x0
 .got           0x00000000c0024344        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024344        0x0
 .got.plt       0x00000000c0024344        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024344        0x0
 .igot.plt      0x00000000c0024344        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024344        0x0
 .tm_clone_table
                0x00000000c0024344        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024344        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024341      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024341        0x3 
 .eh_frame      0x00000000c0024344        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024344        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024344       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002439c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00243dc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024448       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
