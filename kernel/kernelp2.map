Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e84a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6b9 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cc5                Krnl::firstTask()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006eb0                Computer::setBootMessage(char const*)
                0x00000000c0006eb2                Computer::detectFeatures()
                0x00000000c00070d8                Computer::displayFeatures()
                0x00000000c00070da                Computer::rdmsr(unsigned int)
                0x00000000c0007106                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007142                Computer::shutdown()
                0x00000000c000715a                Computer::restart()
                0x00000000c0007172                Computer::sleep()
                0x00000000c0007186                Computer::nmiEnabled()
                0x00000000c0007192                Computer::readCMOS(unsigned char)
                0x00000000c00071ae                Computer::enableNMI(bool)
                0x00000000c00071c6                Computer::open(int, int, void*)
                0x00000000c000729a                Computer::disableNMI()
                0x00000000c00072aa                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072ce                Computer::handleNMI()
 *fill*         0x00000000c0007339        0x1 
 .text          0x00000000c000733a      0x1db core/gdt.32
                0x00000000c000733a                GDTEntry::setBase(unsigned int)
                0x00000000c0007356                GDTEntry::setLimit(unsigned int)
                0x00000000c0007374                GDT::GDT()
                0x00000000c0007374                GDT::GDT()
                0x00000000c000738a                GDT::addEntry(GDTEntry)
                0x00000000c00073ac                GDT::getNumberOfEntries()
                0x00000000c00073b4                GDT::flush()
                0x00000000c00073d6                GDT::setup()
 .text          0x00000000c0007515       0x1d core/idle.32
                0x00000000c0007515                idleFunction(void*)
 *fill*         0x00000000c0007532        0x2 
 .text          0x00000000c0007534      0x46c core/idt.32
                0x00000000c0007534                IDTEntry::IDTEntry(bool)
                0x00000000c0007534                IDTEntry::IDTEntry(bool)
                0x00000000c00075ae                IDTEntry::setOffset(unsigned int)
                0x00000000c00075c4                IDT::IDT()
                0x00000000c00075c4                IDT::IDT()
                0x00000000c00075c6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075ce                IDT::addEntry(IDTEntry, int)
                0x00000000c00075e8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007620                IDT::flush()
                0x00000000c000763a                IDT::setup()
 .text          0x00000000c00079a0      0x185 core/kheap.32
                0x00000000c00079a0                sbrk
                0x00000000c0007a34                mmap
                0x00000000c0007a4a                munmap
                0x00000000c0007a60                liballoc_lock()
                0x00000000c0007a6e                liballoc_unlock()
                0x00000000c0007a84                liballoc_alloc(int)
                0x00000000c0007a9c                liballoc_free(void*, int)
                0x00000000c0007ab7                realloc
                0x00000000c0007acb                malloc
                0x00000000c0007adb                free
                0x00000000c0007aeb                rfree
                0x00000000c0007afb                calloc
 .text          0x00000000c0007b25       0xc3 core/main.32
                0x00000000c0007b25                KeEntryPoint
 .text          0x00000000c0007be8      0x639 core/physmgr.32
                0x00000000c0007be8                Phys::allocateDMA(unsigned long)
                0x00000000c0007cd6                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d11                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d51                Phys::getPageState(unsigned long)
                0x00000000c0007d6d                Phys::freePage(unsigned long)
                0x00000000c0007dd6                Phys::allocatePage()
                0x00000000c0007ea5                Phys::allocateContiguousPages(int)
                0x00000000c0007f0c                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f44                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008221        0x1 
 .text          0x00000000c0008222      0x26d core/pipe.32
                0x00000000c0008222                Pipe::isAtty()
                0x00000000c0008226                Pipe::~Pipe()
                0x00000000c0008226                Pipe::~Pipe()
                0x00000000c000824a                Pipe::~Pipe()
                0x00000000c0008272                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008336                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xaaa core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a50                VgaText::putx(unsigned int)
                0x00000000c0008a96                VgaText::puts(char const*)
                0x00000000c0008abc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b08                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c56                VgaText::VgaText(char const*)
                0x00000000c0008c56                VgaText::VgaText(char const*)
                0x00000000c0008da6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f14                VgaText::doUpdate()
                0x00000000c0008f15                newTerminal(char*)
 *fill*         0x00000000c0008f3a        0x2 
 .text          0x00000000c0008f3c      0x1a1 core/tss.32
                0x00000000c0008f3c                TSS::TSS()
                0x00000000c0008f3c                TSS::TSS()
                0x00000000c0008f4c                TSS::setESP(unsigned long)
                0x00000000c0008f60                TSS::flush()
                0x00000000c0008f80                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090dd        0x1 
 .text          0x00000000c00090de      0x4ca core/unixfile.32
                0x00000000c00090de                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009134                ReservedFilename::isAtty()
                0x00000000c0009150                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091ae                UnixFile::getFileDescriptor()
                0x00000000c00091b6                UnixFile::UnixFile(int)
                0x00000000c00091b6                UnixFile::UnixFile(int)
                0x00000000c000936a                ReservedFilename::ReservedFilename(int)
                0x00000000c000936a                ReservedFilename::ReservedFilename(int)
                0x00000000c000939c                UnixFile::~UnixFile()
                0x00000000c000939c                UnixFile::~UnixFile()
                0x00000000c0009438                UnixFile::~UnixFile()
                0x00000000c0009460                ReservedFilename::~ReservedFilename()
                0x00000000c0009460                ReservedFilename::~ReservedFilename()
                0x00000000c0009484                ReservedFilename::~ReservedFilename()
                0x00000000c00094ab                getFromFileDescriptor(int)
 .text          0x00000000c00095a8     0x12a8 core/virtmgr.32
                0x00000000c00095a8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095e2                Virt::getPageState(unsigned long)
                0x00000000c0009605                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009721                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009744                Virt::swapIDToSector(unsigned long)
                0x00000000c000975a                Virt::allocateSwapfilePage()
                0x00000000c00097d9                Virt::virtualMemorySetup()
                0x00000000c000982a                Virt::setupPageSwapping(int)
                0x00000000c000989c                VAS::VAS(VAS*)
                0x00000000c000989c                VAS::VAS(VAS*)
                0x00000000c00098ca                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098f8                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009917                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a2a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a4e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a68                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009aac                VAS::VAS()
                0x00000000c0009aac                VAS::VAS()
                0x00000000c0009b16                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b4a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b76                VAS::~VAS()
                0x00000000c0009b76                VAS::~VAS()
                0x00000000c0009ce4                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009df0                VAS::allocatePages(int, int)
                0x00000000c0009fe0                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009ffe                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a0c6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a1b6                VAS::VAS(bool)
                0x00000000c000a1b6                VAS::VAS(bool)
                0x00000000c000a448                VAS::evict(unsigned long)
                0x00000000c000a526                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a652                VAS::scanForEviction()
                0x00000000c000a755                mapVASFirstTime
 .text          0x00000000c000a850       0x5f coreobjs/c++.32
                0x00000000c000a850                __cxa_atexit
                0x00000000c000a853                __cxa_finalize
                0x00000000c000a854                __stack_chk_fail
                0x00000000c000a88a                __cxa_pure_virtual
                0x00000000c000a89b                operator new[](unsigned long)
                0x00000000c000a8a0                operator delete(void*, unsigned long)
                0x00000000c000a8a5                operator delete[](void*)
                0x00000000c000a8aa                operator delete[](void*, unsigned long)
 .text          0x00000000c000a8af      0x225 dbg/kconsole.32
                0x00000000c000a8af                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a920                Dbg::logc(char)
                0x00000000c000a940                Dbg::logs(char*)
                0x00000000c000a95f                Dbg::logWriteInt(unsigned int)
                0x00000000c000a97d                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a99e                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aad4      0xc86 fs/vfs.32
                0x00000000c000aad4                File::read(unsigned long long, void*, int*)
                0x00000000c000ab2c                File::write(unsigned long long, void*, int*)
                0x00000000c000ab84                Directory::read(unsigned long long, void*, int*)
                0x00000000c000abdc                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ac0a                File::isAtty()
                0x00000000c000ac0e                Directory::isAtty()
                0x00000000c000ac12                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ac18                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ac1e                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ac24                File::~File()
                0x00000000c000ac24                File::~File()
                0x00000000c000ac48                File::~File()
                0x00000000c000ac72                Directory::~Directory()
                0x00000000c000ac72                Directory::~Directory()
                0x00000000c000ac96                Directory::~Directory()
                0x00000000c000acc0                Filesystem::Filesystem()
                0x00000000c000acc0                Filesystem::Filesystem()
                0x00000000c000ace4                Filesystem::~Filesystem()
                0x00000000c000ace4                Filesystem::~Filesystem()
                0x00000000c000acf2                Filesystem::~Filesystem()
                0x00000000c000ad16                Fs::getcwd(Process*, char*, int)
                0x00000000c000ad40                Fs::initVFS()
                0x00000000c000ad6a                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000af46                File::File(char const*, Process*)
                0x00000000c000af46                File::File(char const*, Process*)
                0x00000000c000b002                File::open(FileOpenMode)
                0x00000000c000b060                File::close()
                0x00000000c000b0c0                File::seek(unsigned long long)
                0x00000000c000b116                File::tell(unsigned long long*)
                0x00000000c000b166                File::rewind()
                0x00000000c000b17a                File::unlink()
                0x00000000c000b1c6                File::rename(char const*)
                0x00000000c000b214                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b270                File::exists()
                0x00000000c000b2ae                File::stat(unsigned long long*, bool*)
                0x00000000c000b30f                Fs::setcwd(Process*, char*)
                0x00000000c000b46c                Directory::Directory(char const*, Process*)
                0x00000000c000b46c                Directory::Directory(char const*, Process*)
                0x00000000c000b528                Directory::open()
                0x00000000c000b584                Directory::close()
                0x00000000c000b5e4                Directory::unlink()
                0x00000000c000b630                Directory::rename(char const*)
                0x00000000c000b67e                Directory::exists()
                0x00000000c000b6bc                Directory::read(dirent*)
                0x00000000c000b708                Directory::create()
                0x00000000c000b754                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b75a        0x2 
 .text          0x00000000c000b75c       0x86 hal/bus.32
                0x00000000c000b75c                Bus::Bus(char const*)
                0x00000000c000b75c                Bus::Bus(char const*)
                0x00000000c000b794                Bus::~Bus()
                0x00000000c000b794                Bus::~Bus()
                0x00000000c000b7b8                Bus::~Bus()
 .text          0x00000000c000b7e2       0x96 hal/buzzer.32
                0x00000000c000b7e2                beepThread(void*)
                0x00000000c000b81f                Krnl::beep(int, int, bool)
 .text          0x00000000c000b878      0x465 hal/clock.32
                0x00000000c000b878                User::loadClockSettings(int)
                0x00000000c000b8ca                Clock::Clock(char const*)
                0x00000000c000b8ca                Clock::Clock(char const*)
                0x00000000c000b900                Clock::~Clock()
                0x00000000c000b900                Clock::~Clock()
                0x00000000c000b924                Clock::~Clock()
                0x00000000c000b94e                Clock::timeInSecondsLocal()
                0x00000000c000b996                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b9ef                datetimeToSeconds(datetime_t)
                0x00000000c000bb14                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bb74                secondsToDatetime(unsigned long long)
                0x00000000c000bcb8                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bcdd        0x1 
 .text          0x00000000c000bcde      0x464 hal/device.32
                0x00000000c000bcde                Device::hibernate()
                0x00000000c000bce0                Device::wake()
                0x00000000c000bce2                Device::detect()
                0x00000000c000bce4                Device::disableLegacy()
                0x00000000c000bce6                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bce8                DriverlessDevice::close(int, int, void*)
                0x00000000c000bcec                DriverlessDevice::detect()
                0x00000000c000bcee                DriverlessDevice::open(int, int, void*)
                0x00000000c000bd02                Device::~Device()
                0x00000000c000bd02                Device::~Device()
                0x00000000c000bd10                Device::~Device()
                0x00000000c000bd38                Device::findAndLoadDriver()
                0x00000000c000bd46                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bd6c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bdac                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bdd6                Device::getParent()
                0x00000000c000bde2                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000be00                Device::addChild(Device*)
                0x00000000c000be44                Device::removeAllChildren()
                0x00000000c000be8a                Device::hibernateAll()
                0x00000000c000beba                Device::wakeAll()
                0x00000000c000beea                Device::detectAll()
                0x00000000c000bf1a                Device::disableLegacyAll()
                0x00000000c000bf1c                Device::loadDriversForAll()
                0x00000000c000bf1e                Device::closeAll()
                0x00000000c000bf54                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bf8a                Device::setName(char const*)
                0x00000000c000bf98                Device::Device(char const*)
                0x00000000c000bf98                Device::Device(char const*)
                0x00000000c000c094                Device::getName()
                0x00000000c000c09e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c09e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c0d4                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c118                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c142        0x2 
 .text          0x00000000c000c144       0x86 hal/diskctrl.32
                0x00000000c000c144                HardDiskController::HardDiskController(char const*)
                0x00000000c000c144                HardDiskController::HardDiskController(char const*)
                0x00000000c000c17c                HardDiskController::~HardDiskController()
                0x00000000c000c17c                HardDiskController::~HardDiskController()
                0x00000000c000c1a0                HardDiskController::~HardDiskController()
 .text          0x00000000c000c1ca       0xe2 hal/diskphys.32
                0x00000000c000c1ca                PhysicalDisk::eject()
                0x00000000c000c1ce                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c1ce                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c236                PhysicalDisk::startCache()
                0x00000000c000c25e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c25e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c282                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c2ac        0x0 hal/fpu.32
 .text          0x00000000c000c2ac      0x360 hal/intctrl.32
                0x00000000c000c2ac                int_handler
                0x00000000c000c336                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c380                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c4c3                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c4f7                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c56d                setupINTS()
                0x00000000c000c5ca                convertLegacyIRQNumber(int)
 .text          0x00000000c000c60c      0x8be hal/keybrd.32
                0x00000000c000c60c                startGUI(void*)
                0x00000000c000c67a                startGUIVESA(void*)
                0x00000000c000c6e8                sendKeyToTerminal(unsigned char)
                0x00000000c000c7c3                sendKeyboardToken(KeyboardToken)
                0x00000000c000ccad                clearInternalKeybuffer(VgaText*)
                0x00000000c000cce2                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000ce40                Keyboard::Keyboard(char const*)
                0x00000000c000ce40                Keyboard::Keyboard(char const*)
                0x00000000c000ce7c                Keyboard::~Keyboard()
                0x00000000c000ce7c                Keyboard::~Keyboard()
                0x00000000c000cea0                Keyboard::~Keyboard()
 .text          0x00000000c000ceca      0x3f8 hal/logidisk.32
                0x00000000c000ceca                LogicalDisk::close(int, int, void*)
                0x00000000c000cece                LogicalDisk::~LogicalDisk()
                0x00000000c000cece                LogicalDisk::~LogicalDisk()
                0x00000000c000cef2                LogicalDisk::~LogicalDisk()
                0x00000000c000cf1c                LogicalDisk::open(int, int, void*)
                0x00000000c000cf30                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cf68                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cfae                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cfae                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d06e                LogicalDisk::assignDriveLetter()
                0x00000000c000d128                LogicalDisk::mount()
                0x00000000c000d170                LogicalDisk::unmount()
                0x00000000c000d180                LogicalDisk::eject()
                0x00000000c000d194                LogicalDisk::unassignDriveLetter()
                0x00000000c000d1ea                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d256                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000d2c2        0x2 
 .text          0x00000000c000d2c4       0x86 hal/mouse.32
                0x00000000c000d2c4                Mouse::Mouse(char const*)
                0x00000000c000d2c4                Mouse::Mouse(char const*)
                0x00000000c000d2fc                Mouse::~Mouse()
                0x00000000c000d2fc                Mouse::~Mouse()
                0x00000000c000d320                Mouse::~Mouse()
 .text          0x00000000c000d34a       0x90 hal/nic.32
                0x00000000c000d34a                NIC::getMAC()
                0x00000000c000d350                NIC::write(int, unsigned char*, int*)
                0x00000000c000d356                NIC::NIC(char const*)
                0x00000000c000d356                NIC::NIC(char const*)
                0x00000000c000d38c                NIC::~NIC()
                0x00000000c000d38c                NIC::~NIC()
                0x00000000c000d3b0                NIC::~NIC()
 .text          0x00000000c000d3da      0x33b hal/partition.32
                0x00000000c000d3da                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d482                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d715        0x3 
 .text          0x00000000c000d718       0x86 hal/serial.32
                0x00000000c000d718                Serial::Serial(char const*)
                0x00000000c000d718                Serial::Serial(char const*)
                0x00000000c000d750                Serial::~Serial()
                0x00000000c000d750                Serial::~Serial()
                0x00000000c000d774                Serial::~Serial()
 *fill*         0x00000000c000d79e        0x2 
 .text          0x00000000c000d7a0      0x234 hal/timer.32
                0x00000000c000d7a0                Timer::Timer(char const*)
                0x00000000c000d7a0                Timer::Timer(char const*)
                0x00000000c000d7d8                Timer::~Timer()
                0x00000000c000d7d8                Timer::~Timer()
                0x00000000c000d7fc                Timer::~Timer()
                0x00000000c000d826                Timer::read()
                0x00000000c000d831                setupTimer(int)
                0x00000000c000d86c                timerHandler(unsigned int)
 .text          0x00000000c000d9d4      0x450 hal/vcache.32
                0x00000000c000d9d4                VCache::VCache(PhysicalDisk*)
                0x00000000c000d9d4                VCache::VCache(PhysicalDisk*)
                0x00000000c000db44                VCache::invalidateReadBuffer()
                0x00000000c000db54                VCache::writeWriteBuffer()
                0x00000000c000dba0                VCache::~VCache()
                0x00000000c000dba0                VCache::~VCache()
                0x00000000c000dbf8                VCache::~VCache()
                0x00000000c000dc20                VCache::write(unsigned long long, int, void*)
                0x00000000c000dd1a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000de24      0x4d9 hal/video.32
                0x00000000c000de24                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000de70                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000dee0                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000df70                Video::clearScreen(unsigned int)
                0x00000000c000dfa4                Video::putpixel(int, int, unsigned int)
                0x00000000c000dfb2                Video::readPixelApprox(int, int)
                0x00000000c000dfc6                Video::Video(char const*)
                0x00000000c000dfc6                Video::Video(char const*)
                0x00000000c000dffc                Video::~Video()
                0x00000000c000dffc                Video::~Video()
                0x00000000c000e020                Video::~Video()
                0x00000000c000e04a                Video::isMonochrome()
                0x00000000c000e056                Video::getWidth()
                0x00000000c000e062                Video::getHeight()
                0x00000000c000e06e                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e12a                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e292                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e2fd        0x3 
 .text          0x00000000c000e300     0x12d2 hw/acpi.32
                0x00000000c000e300                ACPI::close(int, int, void*)
                0x00000000c000e3b4                findRSDP()
                0x00000000c000e44c                loadACPITables(unsigned char*)
                0x00000000c000e6b8                findRSDT(unsigned char*)
                0x00000000c000e810                findDataTable(unsigned char*, char*)
                0x00000000c000e890                scanMADT()
                0x00000000c000ed48                ACPI::ACPI()
                0x00000000c000ed48                ACPI::ACPI()
                0x00000000c000ed9c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ee98                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ef64                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ef6c                ACPI::detectPCI()
                0x00000000c000f18c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f1d4                ACPI::sleep()
                0x00000000c000f1f0                ACPI::open(int, int, void*)
 .text          0x00000000c000f5d2      0xba5 hw/cpu.32
                0x00000000c000f5d2                CPU::close(int, int, void*)
                0x00000000c000f5d6                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f5f2                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f60a                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f67e                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f702                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f730                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f75e                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f78c                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f7ba                CPU::CPU()
                0x00000000c000f7ba                CPU::CPU()
                0x00000000c000f848                CPU::displayFeatures()
                0x00000000c000f84a                CPU::detectFeatures()
                0x00000000c000ff1e                CPU::setupSMEP()
                0x00000000c000ff2a                CPU::setupUMIP()
                0x00000000c000ff34                CPU::setupTSC()
                0x00000000c000ff3e                CPU::setupLargePages()
                0x00000000c000ff48                CPU::setupPAT()
                0x00000000c000ff84                CPU::setupMTRR()
                0x00000000c000ff86                CPU::setupGlobalPages()
                0x00000000c000ff90                CPU::allowUsermodeDataAccess()
                0x00000000c000ffa2                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ffb4                CPU::setupSMAP()
                0x00000000c000ffc2                CPU::setupFeatures()
                0x00000000c001008e                CPU::open(int, int, void*)
 .text          0x00000000c0010177       0xd8 krnl/bootmsg.32
                0x00000000c0010177                KeDisplaySplashScreen()
                0x00000000c00101ec                KeSetBootMessage(char const*)
 *fill*         0x00000000c001024f        0x1 
 .text          0x00000000c0010250      0x585 krnl/env.32
                0x00000000c0010250                EnvVarContainer::getEnv(char const*)
                0x00000000c001028e                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010350                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010352                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001053c                EnvVarContainer::__loadSystem()
                0x00000000c0010556                EnvVarContainer::__loadUser()
                0x00000000c0010558                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010558                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001057a                EnvVarContainer::~EnvVarContainer()
                0x00000000c001057a                EnvVarContainer::~EnvVarContainer()
                0x00000000c00105aa                Krnl::getEnv(Process*, char const*)
                0x00000000c001060f                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c0010629                Krnl::setEnvUser(char const*, char const*)
                0x00000000c0010648                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c001065b                Krnl::deleteEnvSystem(char const*)
                0x00000000c001065c                Krnl::deleteEnvUser(char const*)
                0x00000000c001065d                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c001065e                Krnl::newProcessEnv(Process*)
                0x00000000c0010680                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c00106cc                Krnl::loadSystemEnv()
                0x00000000c00106fa                Krnl::loadUserEnv()
                0x00000000c0010720                Krnl::flushEnv()
                0x00000000c0010721                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0010741                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00107d5       0x94 krnl/inlines.32
                0x00000000c00107d5                CPU::current()
                0x00000000c00107e1                operator new(unsigned long)
                0x00000000c00107e6                operator delete(void*)
                0x00000000c00107eb                disableIRQs()
                0x00000000c00107ed                enableIRQs()
                0x00000000c00107ef                lockScheduler()
                0x00000000c00107f7                unlockScheduler()
                0x00000000c0010806                lockStuff()
                0x00000000c0010814                unlockStuff()
                0x00000000c001084e                Virt::getAKernelVAS()
                0x00000000c0010854                __not_memcpy
 .text          0x00000000c0010869        0xc krnl/panic.32
                0x00000000c0010869                KePanic(char const*)
 .text          0x00000000c0010875      0x142 krnl/powctrl.32
                0x00000000c0010875                Krnl::powerThread(void*)
                0x00000000c00108a3                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c00108b9                Krnl::userIOReceived()
                0x00000000c00108c4                Krnl::handlePowerButton()
                0x00000000c00108f9                Krnl::handleSleepButton()
                0x00000000c001092e                Krnl::setupPowerManager()
 .text          0x00000000c00109b7       0x9b krnl/random.32
                0x00000000c00109b7                KeRand()
                0x00000000c00109f7                KeSeedRand(unsigned int)
                0x00000000c0010a20                KeInitRand()
 *fill*         0x00000000c0010a52        0x2 
 .text          0x00000000c0010a54      0x1bc krnl/resolve.32
                0x00000000c0010a54                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010c10      0x313 krnl/signal.32
                0x00000000c0010c10                KiSigKill(int)
                0x00000000c0010c24                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010c25                KiDefaultSignalHandlerPause(int)
                0x00000000c0010c51                KiDefaultSignalHandlerResume(int)
                0x00000000c0010c7d                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010c82                KeInitSignals()
                0x00000000c0010ccd                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010d03                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010d80                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010e6f                KiCheckSignalZ
                0x00000000c0010eb1                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010eec                KiFinishSignalZ
 .text          0x00000000c0010f23      0xc76 krnl/syscalls.32
                0x00000000c0010f23                SysSeekDir(regs*)
                0x00000000c0010f28                SysTellDir(regs*)
                0x00000000c0010f2d                SysVerify(regs*)
                0x00000000c0010f37                SysGetArgc(regs*)
                0x00000000c0010f4b                SysTTYName(regs*)
                0x00000000c0010f53                SysFormatDisk(regs*)
                0x00000000c0010fba                SysSetDiskVolumeLabel(regs*)
                0x00000000c001100e                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011067                SysShutdown(regs*)
                0x00000000c00110f4                SysRealpath(regs*)
                0x00000000c0011143                SysReadDir(regs*)
                0x00000000c00111c3                SysIsATTY(regs*)
                0x00000000c001121d                SysSeek(regs*)
                0x00000000c0011277                SysTell(regs*)
                0x00000000c00112e4                SysSize(regs*)
                0x00000000c0011357                SysSizeFromFilename(regs*)
                0x00000000c0011401                SysClose(regs*)
                0x00000000c0011461                SysOpenDir(regs*)
                0x00000000c00114de                SysMakeDir(regs*)
                0x00000000c001154c                SysCloseDir(regs*)
                0x00000000c001159b                SysWait(regs*)
                0x00000000c00115bc                SysNotImpl(regs*)
                0x00000000c00115d7                SysPanic(regs*)
                0x00000000c00115f2                SysRmdir(regs*)
                0x00000000c0011650                SysUnlink(regs*)
                0x00000000c00116ae                SysGetArgv(regs*)
                0x00000000c00116fb                SysUSleep(regs*)
                0x00000000c0011724                SysSpawn(regs*)
                0x00000000c0011795                SysGetEnv(regs*)
                0x00000000c001184a                SysSetFatAttrib(regs*)
                0x00000000c00118b3                SysPipe(regs*)
                0x00000000c00118f8                SysGetUnixTime(regs*)
                0x00000000c001190c                string_ends_with(char const*, char const*)
                0x00000000c0011957                SysOpen(regs*)
                0x00000000c0011b57                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011b99        0x3 
 .text          0x00000000c0011b9c      0x159 net/ethernet.32
                0x00000000c0011b9c                KeSwitchEndian16(unsigned short)
                0x00000000c0011bc0                KeSwitchEndian32(unsigned int)
                0x00000000c0011bf0                EthernetCRC32(unsigned char*, int)
                0x00000000c0011c94                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0011cf5      0xd51 reg/cm.32
                0x00000000c0011cf5                CmOpen(char const*)
                0x00000000c0011e13                CmClose(Reghive_Tag*)
                0x00000000c0011e29                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011e65                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0011edc                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011f1b                CmGetNext(Reghive_Tag*, int)
                0x00000000c0011f4d                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011f89                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0011fb1                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0011fd2                CmExpand(Reghive_Tag*, int)
                0x00000000c001204d                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c00120d3                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c00121c7                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c00122ff                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012360                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012390                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c00123c7                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00123f1                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012431                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00124d5                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012503                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00126a0                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00126ed                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012767                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00127ba                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001287e                zStrtok(char*, char const*)
                0x00000000c00128f0                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0012971                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0012a14                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0012a46      0x545 reg/registry.32
                0x00000000c0012a46                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012bd2                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0012d27                Reg::getLine(char*, char*, char*)
                0x00000000c0012d5e                Reg::readInt(char*, char*, int*)
                0x00000000c0012e4c                Reg::readString(char*, char*, char*, int)
                0x00000000c0012ecd                Reg::readBool(char*, char*, bool*)
                0x00000000c0012ef2                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0012f1e                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012f4a                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0012f8b       0x36 sys/eject.32
                0x00000000c0012f8b                SysEject(regs*)
 .text          0x00000000c0012fc1       0x18 sys/exit.32
                0x00000000c0012fc1                SysExit(regs*)
 .text          0x00000000c0012fd9       0x1f sys/getcwd.32
                0x00000000c0012fd9                SysGetCwd(regs*)
 .text          0x00000000c0012ff8        0xc sys/getpid.32
                0x00000000c0012ff8                SysGetPID(regs*)
 .text          0x00000000c0013004       0x1a sys/getramdata.32
                0x00000000c0013004                SysGetRAMData(regs*)
 .text          0x00000000c001301e       0x82 sys/getvgaptr.32
                0x00000000c001301e                SysGetVGAPtr(regs*)
 .text          0x00000000c00130a0       0xb9 sys/kill.32
                0x00000000c00130a0                SysKill(regs*)
 .text          0x00000000c0013159       0xa8 sys/loaddll.32
                0x00000000c0013159                SysLoadDLL(regs*)
 .text          0x00000000c0013201       0x68 sys/read.32
                0x00000000c0013201                SysRead(regs*)
 .text          0x00000000c0013269       0x29 sys/registersignal.32
                0x00000000c0013269                SysRegisterSignal(regs*)
 .text          0x00000000c0013292      0x19c sys/registry.32
                0x00000000c0013292                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013309                SysRegistryReadExtent(regs*)
                0x00000000c0013351                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013379                SysRegistryEnterDirectory(regs*)
                0x00000000c00133a1                SysRegistryGetNext(regs*)
                0x00000000c00133c9                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013403                SysRegistryOpen(regs*)
                0x00000000c0013417                SysRegistryClose(regs*)
 .text          0x00000000c001342e       0x55 sys/sbrk.32
                0x00000000c001342e                SysSbrk(regs*)
 .text          0x00000000c0013483       0x1c sys/setcwd.32
                0x00000000c0013483                SysSetCwd(regs*)
 .text          0x00000000c001349f       0x96 sys/settime.32
                0x00000000c001349f                SysSetTime(regs*)
 .text          0x00000000c0013535       0x4a sys/timezone.32
                0x00000000c0013535                SysTimezone(regs*)
 .text          0x00000000c001357f       0x68 sys/write.32
                0x00000000c001357f                SysWrite(regs*)
 .text          0x00000000c00135e7       0x62 sys/wsbe.32
                0x00000000c00135e7                SysWsbe(regs*)
 .text          0x00000000c0013649       0x25 sys/yield.32
                0x00000000c0013649                SysYield(regs*)
 .text          0x00000000c001366e     0x1203 thr/elf.32
                0x00000000c001366e                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00138f5                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013b14                Thr::runtimeReferenceHelper()
                0x00000000c0013b27                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013b76                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013e34                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014575                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00145a7                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00145de                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00145f8                Thr::loadDLL(char const*, bool)
                0x00000000c0014838                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0014871        0x3 
 .text          0x00000000c0014874     0x13b5 thr/prcssthr.32
                0x00000000c0014874                userModeEntryPoint(void*)
                0x00000000c001489c                changeTSS
                0x00000000c00148cc                switchToThread(ThreadControlBlock*)
                0x00000000c001497c                Process::addArgs(char**)
                0x00000000c00149e8                Process::Process(char const*, Process*, char**)
                0x00000000c00149e8                Process::Process(char const*, Process*, char**)
                0x00000000c0014bf4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014bf4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014dc8                taskStartupFunction
                0x00000000c0014dd4                Semaphore::Semaphore(int)
                0x00000000c0014dd4                Semaphore::Semaphore(int)
                0x00000000c0014e04                Mutex::Mutex()
                0x00000000c0014e04                Mutex::Mutex()
                0x00000000c0014e18                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014f20                Process::createUserThread()
                0x00000000c0014f40                setupMultitasking(void (*)())
                0x00000000c0015064                schedule()
                0x00000000c00150f8                Semaphore::tryAcquire()
                0x00000000c00151b8                Semaphore::assertLocked(char const*)
                0x00000000c001523c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015264                blockTask(TaskState)
                0x00000000c001529c                waitTask(int, int*, int)
                0x00000000c00152e0                milliTenthSleepUntil(unsigned int)
                0x00000000c0015380                milliTenthSleep(unsigned int)
                0x00000000c0015394                sleep(unsigned int)
                0x00000000c00153a4                Semaphore::acquire()
                0x00000000c001546c                taskReturned
                0x00000000c00154b0                Thr::processFromPID(int)
                0x00000000c001555c                unblockTask(ThreadControlBlock*)
                0x00000000c0015608                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00158dc                cleanerTaskFunction(void*)
                0x00000000c00159e4                terminateTask(int)
                0x00000000c0015ad0                Thr::terminateFromIRQ(int)
                0x00000000c0015ae0                Semaphore::release()
 .text          0x00000000c0015c29      0xbec vm86/vm8086.32
                0x00000000c0015c29                Vm::inbv(unsigned short)
                0x00000000c0015c3c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015c72                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015c82                Vm::getSegment(unsigned int)
                0x00000000c0015c8a                Vm::getOffset(unsigned int)
                0x00000000c0015c8f                Vm::mainloop2()
                0x00000000c0015cc9                Vm::mainVm8086Loop(void*)
                0x00000000c0015cd9                Vm::mainloop3(unsigned long)
                0x00000000c0015cff                Vm::initialise8086()
                0x00000000c0015d42                Vm::finish8086()
                0x00000000c0015da3                Vm::getOutput8086(unsigned char*)
                0x00000000c0015dc8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015e81                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001600e                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016097                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00160a8                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00160ba                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00160cb                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00160e0                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00160f6                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001610b                Vm::faultHandler(regs*)
 .text          0x00000000c0016815      0xabf arch/i386/hal.32
                0x00000000c0016815                noCopro(unsigned long)
                0x00000000c0016816                nmiHandler(regs*, void*)
                0x00000000c001682f                doubleFault(regs*, void*)
                0x00000000c0016848                displayDebugInfo(regs*)
                0x00000000c0016ba4                HalSystemIdle()
                0x00000000c0016c20                displayProgramFault(char const*)
                0x00000000c0016c6c                gpFault(regs*, void*)
                0x00000000c0016cd3                pgFault(regs*, void*)
                0x00000000c0016d5c                otherISRHandler(regs*, void*)
                0x00000000c0016d90                opcodeFault(regs*, void*)
                0x00000000c0016e13                i386SaveCoprocessor(void*)
                0x00000000c0016e27                i386LoadCoprocessor(void*)
                0x00000000c0016e3b                x87EmulHandler(regs*, void*)
                0x00000000c0016ed8                HalInitialiseCoprocessor()
                0x00000000c0016f86                HalPanic(char const*)
                0x00000000c0017092                HalQueryPerformanceCounter()
                0x00000000c00170ad                HalInitialise()
                0x00000000c0017263                HalMakeBeep(int)
                0x00000000c001729d                HalGetRand()
                0x00000000c00172a0                HalEndOfInterrupt(int)
                0x00000000c00172d1                HalRestart()
                0x00000000c00172d2                HalShutdown()
                0x00000000c00172d3                HalSleep()
 .text          0x00000000c00172d4      0x2dc arch/i386/pic.32
                0x00000000c00172d4                picIoWait()
                0x00000000c00172dc                picDisable()
                0x00000000c0017310                picGetIRQReg(int)
                0x00000000c001738c                picOpen()
                0x00000000c0017510                picEOI(int)
 .text          0x00000000c00175b0      0x66e arch/i386/rtc.32
                0x00000000c00175b0                RTC::open(int, int, void*)
                0x00000000c00175b4                RTC::close(int, int, void*)
                0x00000000c00175b8                RTC::timeInSecondsUTC()
                0x00000000c00175ca                RTC::timeInDatetimeUTC()
                0x00000000c00175f0                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001762e                RTC::~RTC()
                0x00000000c001762e                RTC::~RTC()
                0x00000000c0017652                RTC::~RTC()
                0x00000000c001767c                RTC::get_update_in_progress_flag()
                0x00000000c0017696                RTC::completeRTCRefresh()
                0x00000000c0017970                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0017b1e                rtcIRQHandler(regs*, void*)
                0x00000000c0017b64                RTC::RTC()
                0x00000000c0017b64                RTC::RTC()
 *fill*         0x00000000c0017c1e        0x2 
 .text          0x00000000c0017c20      0x1f4 arch/i386/vga.32
                0x00000000c0017c20                HalConsoleScroll(int, int)
                0x00000000c0017d28                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017d8c                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0017e14     0x1487 fs/fat/vfslink.32
                0x00000000c0017e14                FAT::getName()
                0x00000000c0017e1c                FAT::tell(void*, unsigned long long*)
                0x00000000c0017e58                FAT::stat(void*, unsigned long long*)
                0x00000000c0017e94                FAT::~FAT()
                0x00000000c0017e94                FAT::~FAT()
                0x00000000c0017eb8                FAT::~FAT()
                0x00000000c0017ee0                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017f84                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018064                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018248                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018464                FAT::allocateSwapfile(char const*, int)
                0x00000000c0018624                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0018794                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00187f4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0018854                FAT::close(void*)
                0x00000000c00188a8                FAT::closeDir(void*)
                0x00000000c00188fc                FAT::seek(void*, unsigned long long)
                0x00000000c0018954                fatWrapperReadDisk
                0x00000000c0018994                fatWrapperWriteDisk
                0x00000000c00189d4                fatWrapperIoctl
                0x00000000c0018af4                FAT::FAT()
                0x00000000c0018af4                FAT::FAT()
                0x00000000c0018b4c                FAT::fixFilepath(char*)
                0x00000000c0018b8c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0018d00                FAT::openDir(char const*, void**)
                0x00000000c0018db0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018ea8                FAT::unlink(char const*)
                0x00000000c0018f28                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00190e0                FAT::rename(char const*, char const*)
                0x00000000c00191ac                FAT::mkdir(char const*)
                0x00000000c001922c                FAT::exists(char const*)
 *fill*         0x00000000c001929b        0x1 
 .text          0x00000000c001929c       0x94 fs/iso9660/helper.32
                0x00000000c001929c                isoReadDiscSectorHelper
                0x00000000c00192f8                iso_kprintf
                0x00000000c0019314                iso_kprintfd
 .text          0x00000000c0019330      0x714 fs/iso9660/vfslink.32
                0x00000000c0019330                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019336                ISO9660::getName()
                0x00000000c001933c                ISO9660::closeDir(void*)
                0x00000000c0019346                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001934c                ISO9660::unlink(char const*)
                0x00000000c0019352                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019358                ISO9660::rename(char const*, char const*)
                0x00000000c001935e                ISO9660::mkdir(char const*)
                0x00000000c0019364                ISO9660::~ISO9660()
                0x00000000c0019364                ISO9660::~ISO9660()
                0x00000000c0019388                ISO9660::~ISO9660()
                0x00000000c00193b0                ISO9660::exists(char const*)
                0x00000000c00193c4                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00194aa                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c00194f2                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019534                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019572                ISO9660::stat(void*, unsigned long long*)
                0x00000000c00195c4                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019706                ISO9660::close(void*)
                0x00000000c0019736                ISO9660::openDir(char const*, void**)
                0x00000000c0019810                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001992b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c00199aa                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019a1c                ISO9660::ISO9660()
                0x00000000c0019a1c                ISO9660::ISO9660()
 .text          0x00000000c0019a44      0x26c hal/sound/sndcard.32
                0x00000000c0019a44                SoundCard::beginPlayback()
                0x00000000c0019a52                SoundCard::stopPlayback()
                0x00000000c0019a60                SoundCard::SoundCard(char const*)
                0x00000000c0019a60                SoundCard::SoundCard(char const*)
                0x00000000c0019afe                SoundCard::~SoundCard()
                0x00000000c0019afe                SoundCard::~SoundCard()
                0x00000000c0019b22                SoundCard::~SoundCard()
                0x00000000c0019b4c                SoundCard::configureRates(int, int, int)
                0x00000000c0019b7c                SoundCard::getSamples16(int, short*)
                0x00000000c0019bd8                SoundCard::getSamples32(int, int*)
                0x00000000c0019c5e                SoundCard::addChannel(SoundPort*)
                0x00000000c0019c9c                SoundCard::removeChannel(int)
 .text          0x00000000c0019cb0      0x393 hal/sound/sndport.32
                0x00000000c0019cb0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019cb0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019d3c                SoundPort::~SoundPort()
                0x00000000c0019d3c                SoundPort::~SoundPort()
                0x00000000c0019d70                SoundPort::unpause()
                0x00000000c0019d7c                SoundPort::pause()
                0x00000000c0019d88                SoundPort::getBufferUsed()
                0x00000000c0019d90                SoundPort::getBufferSize()
                0x00000000c0019d98                SoundPort::buffer16(short*, int)
                0x00000000c0019e24                SoundPort::buffer32(int*, int)
                0x00000000c0019eb0                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019f80                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001a043        0x0 hw/bus/isa.32
 *fill*         0x00000000c001a043        0x1 
 .text          0x00000000c001a044      0xbc5 hw/bus/pci.32
                0x00000000c001a044                PCI::open(int, int, void*)
                0x00000000c001a062                PCI::close(int, int, void*)
                0x00000000c001a066                PCI::PCI()
                0x00000000c001a066                PCI::PCI()
                0x00000000c001a0fe                PCI::readBAR8(unsigned int, int)
                0x00000000c001a11a                PCI::readBAR16(unsigned int, int)
                0x00000000c001a138                PCI::readBAR32(unsigned int, int)
                0x00000000c001a154                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001a174                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001a196                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001a1b6                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a22c                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a2d6                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a2fa                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a322                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a36c                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a394                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a3b8                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a3dc                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a404                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a468                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001a54e                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a818                PCI::checkBus(unsigned char)
                0x00000000c001a83c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a9c2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001ab3e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001abb0                PCI::detect()
 *fill*         0x00000000c001ac09        0x1 
 .text          0x00000000c001ac0a      0xb96 hw/diskctrl/ide.32
                0x00000000c001ac0a                IDE::close(int, int, void*)
                0x00000000c001ac0e                IDE::IDE()
                0x00000000c001ac0e                IDE::IDE()
                0x00000000c001ac42                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ac54                selectDrive(unsigned char, unsigned char)
                0x00000000c001ac56                IDE::getBase(unsigned char)
                0x00000000c001ac68                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ad28                IDE::read(unsigned char, unsigned char)
                0x00000000c001addc                IDE::waitInterrupt(unsigned char)
                0x00000000c001ae3e                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ae5a                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ae76                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001aec0                IDE::open(int, int, void*)
                0x00000000c001b2fa                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b3ca                IDE::detect()
                0x00000000c001b692                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b74c                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b7a0      0x32c hw/diskctrl/satabus.32
                0x00000000c001b7a0                SATABus::close(int, int, void*)
                0x00000000c001b7a4                SATABus::detect()
                0x00000000c001b7a6                SATABus::SATABus()
                0x00000000c001b7a6                SATABus::SATABus()
                0x00000000c001b82c                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b85e                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b8a6                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b8c6                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b8f0                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001ba02                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001baac                SATABus::open(int, int, void*)
 .text          0x00000000c001bacc      0x96d hw/diskphys/ata.32
                0x00000000c001bacc                ATA::close(int, int, void*)
                0x00000000c001baf0                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001baf2                ATA::ATA()
                0x00000000c001baf2                ATA::ATA()
                0x00000000c001bb20                ATA::flush(bool)
                0x00000000c001bb6e                ATA::readyForCommand()
                0x00000000c001bbba                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001bf7e                ATA::detectCHS()
                0x00000000c001bfa8                ATA::open(int, int, void*)
                0x00000000c001c074                combineCharAndColour(char, unsigned char)
                0x00000000c001c085                combineColours(unsigned char, unsigned char)
                0x00000000c001c092                ATA::read(unsigned long long, int, void*)
                0x00000000c001c268                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001c439        0x1 
 .text          0x00000000c001c43a      0x612 hw/diskphys/atapi.32
                0x00000000c001c43a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c440                ATAPI::close(int, int, void*)
                0x00000000c001c464                ATAPI::ATAPI()
                0x00000000c001c464                ATAPI::ATAPI()
                0x00000000c001c492                ATAPI::readyForCommand()
                0x00000000c001c4e4                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c7a4                ATAPI::diskRemoved()
                0x00000000c001c7de                ATAPI::eject()
                0x00000000c001c826                ATAPI::diskInserted()
                0x00000000c001c832                ATAPI::detectMedia()
                0x00000000c001c8f2                ATAPI::open(int, int, void*)
                0x00000000c001c9d2                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ca4c      0x7ff hw/diskphys/sata.32
                0x00000000c001ca4c                SATA::close(int, int, void*)
                0x00000000c001ca70                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ca72                SATA::open(int, int, void*)
                0x00000000c001cb1c                SATA::SATA()
                0x00000000c001cb1c                SATA::SATA()
                0x00000000c001cb4a                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cd9c                SATA::read(unsigned long long, int, void*)
                0x00000000c001cfec                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d24b        0x1 
 .text          0x00000000c001d24c      0x5d8 hw/diskphys/satapi.32
                0x00000000c001d24c                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001d252                SATAPI::close(int, int, void*)
                0x00000000c001d276                SATAPI::SATAPI()
                0x00000000c001d276                SATAPI::SATAPI()
                0x00000000c001d2a4                SATAPI::diskRemoved()
                0x00000000c001d2a6                SATAPI::diskInserted()
                0x00000000c001d2c2                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001d5a8                SATAPI::eject()
                0x00000000c001d5e4                SATAPI::detectMedia()
                0x00000000c001d63a                SATAPI::open(int, int, void*)
                0x00000000c001d73a                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d824      0x45b hw/intctrl/apic.32
                0x00000000c001d824                IOAPIC::close(int, int, void*)
                0x00000000c001d82a                apicGetBase()
                0x00000000c001d870                IOAPIC::IOAPIC()
                0x00000000c001d870                IOAPIC::IOAPIC()
                0x00000000c001d898                apicOpen()
                0x00000000c001da14                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001da46                IOAPIC::read(int)
                0x00000000c001da6e                IOAPIC::open(int, int, void*)
                0x00000000c001db54                IOAPIC::write(int, int)
                0x00000000c001db80                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001dc7f        0x1 
 .text          0x00000000c001dc80       0xf0 hw/timer/apictimer.32
                0x00000000c001dc80                APICTimer::close(int, int, void*)
                0x00000000c001dc88                apicTimerHandler(regs*, void*)
                0x00000000c001dcb0                APICTimer::open(int, int, void*)
                0x00000000c001dd20                APICTimer::write(int)
                0x00000000c001dd48                APICTimer::APICTimer()
                0x00000000c001dd48                APICTimer::APICTimer()
 .text          0x00000000c001dd70      0x1ad hw/timer/pit.32
                0x00000000c001dd70                PIT::write(int)
                0x00000000c001ddf4                pitHandler(regs*, void*)
                0x00000000c001de1c                PIT::open(int, int, void*)
                0x00000000c001de6c                PIT::close(int, int, void*)
                0x00000000c001de9c                PIT::PIT()
                0x00000000c001de9c                PIT::PIT()
 *fill*         0x00000000c001df1d        0x3 
 .text          0x00000000c001df20       0x83 arch/i386/avx.32
                0x00000000c001df20                avxDetect
                0x00000000c001df4a                avxSave
                0x00000000c001df5b                avxLoad
                0x00000000c001df6c                avxInit
                0x00000000c001df8e                avxClose
                0x00000000c001df8f                wouldSheSayYes
 *fill*         0x00000000c001dfa3        0xd 
 .text          0x00000000c001dfb0      0x2ec arch/i386/interrupt.32
                0x00000000c001dfb0                isr0
                0x00000000c001dfc0                isr1
                0x00000000c001dfca                isr2
                0x00000000c001dfd4                isr3
                0x00000000c001dfde                isr4
                0x00000000c001dfe8                isr5
                0x00000000c001dff2                isr6
                0x00000000c001dffc                isr7
                0x00000000c001e006                isr8
                0x00000000c001e00e                isr9
                0x00000000c001e018                isr10
                0x00000000c001e020                isr11
                0x00000000c001e028                isr12
                0x00000000c001e030                isr13
                0x00000000c001e04a                isr14
                0x00000000c001e052                isr15
                0x00000000c001e05c                isr16
                0x00000000c001e066                isr17
                0x00000000c001e070                isr18
                0x00000000c001e07a                irq3
                0x00000000c001e084                irq4
                0x00000000c001e08e                irq5
                0x00000000c001e098                irq6
                0x00000000c001e0a2                irq7
                0x00000000c001e0ac                irq8
                0x00000000c001e0b6                irq9
                0x00000000c001e0c0                irq10
                0x00000000c001e0ca                irq11
                0x00000000c001e0d4                irq12
                0x00000000c001e0de                irq13
                0x00000000c001e0e8                irq14
                0x00000000c001e0f2                irq15
                0x00000000c001e0fc                irq1
                0x00000000c001e103                irq2
                0x00000000c001e10a                isr96
                0x00000000c001e111                irq0
                0x00000000c001e116                int_common_stub
                0x00000000c001e148                syscall_common_stub
                0x00000000c001e24c                irq16
                0x00000000c001e256                irq17
                0x00000000c001e260                irq18
                0x00000000c001e26a                irq19
                0x00000000c001e274                irq20
                0x00000000c001e27e                irq21
                0x00000000c001e288                irq22
                0x00000000c001e292                irq23
 *fill*         0x00000000c001e29c        0x4 
 .text          0x00000000c001e2a0       0x10 arch/i386/rdrand.32
                0x00000000c001e2a0                i386GetRDRAND
 .text          0x00000000c001e2b0       0x39 arch/i386/sse.32
                0x00000000c001e2b0                absolutelyNoChanceInHell
                0x00000000c001e2b0                sseDetect
                0x00000000c001e2c8                sseSave
                0x00000000c001e2d0                sseLoad
                0x00000000c001e2d8                sseInit
                0x00000000c001e2e8                sseClose
 *fill*         0x00000000c001e2e9        0x7 
 .text          0x00000000c001e2f0       0x49 arch/i386/x87.32
                0x00000000c001e2f6                x87Detect
                0x00000000c001e311                x87Save
                0x00000000c001e318                x87Load
                0x00000000c001e31f                x87Init
                0x00000000c001e338                x87Close
 *fill*         0x00000000c001e339        0x3 
 .text          0x00000000c001e33c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e361        0x0 crtn.32
 *fill*         0x00000000c001e361        0x3 
 .text          0x00000000c001e364      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e364                __divdi3
 *fill*         0x00000000c001e4af        0x1 
 .text          0x00000000c001e4b0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e4b0                __moddi3
 *fill*         0x00000000c001e62e        0x2 
 .text          0x00000000c001e630       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001e630                __udivdi3
 *fill*         0x00000000c001e72f        0x1 
 .text          0x00000000c001e730      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001e730                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e850        0x0
 .iplt          0x00000000c001e850        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e84a        0xf
 .init          0x00000000c001e84a        0x3 crti.32
                0x00000000c001e84a                _init
 .init          0x00000000c001e84d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e852        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e857        0x2 crtn.32

.fini           0x00000000c001e859        0xa
 .fini          0x00000000c001e859        0x3 crti.32
                0x00000000c001e859                _fini
 .fini          0x00000000c001e85c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e861        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e864       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e864       0x23 core/computer.32
                0x00000000c001e864                Computer::~Computer()
                0x00000000c001e864                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e888       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e888       0x2a core/computer.32
                0x00000000c001e888                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e8b2       0x21
 .text._Z10idleCommonv
                0x00000000c001e8b2       0x21 core/idle.32
                0x00000000c001e8b2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e8d4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e8d4        0x2 core/unixfile.32
                0x00000000c001e8d4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e8d4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e8d6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e8d6       0x42 core/unixfile.32
                0x00000000c001e8d6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e8d6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e918       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e918       0xd3 core/unixfile.32
                0x00000000c001e918                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e9ec        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e9ec        0x7 core/unixfile.32
                0x00000000c001e9ec                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e9f4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e9f4       0xa1 core/unixfile.32
                0x00000000c001e9f4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ea96        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ea96        0x8 core/unixfile.32
                0x00000000c001ea96                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ea9e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ea9e       0x1a hal/device.32
                0x00000000c001ea9e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ea9e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eab8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eab8       0x2a hal/device.32
                0x00000000c001eab8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eae2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eae2       0xdc hal/device.32
                0x00000000c001eae2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ebbe       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ebbe       0x42 hal/device.32
                0x00000000c001ebbe                LinkedList<Device>::LinkedList()
                0x00000000c001ebbe                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ec00       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ec00       0x1c hal/timer.32
                0x00000000c001ec00                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec1c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec1c        0x7 hal/timer.32
                0x00000000c001ec1c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ec24       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ec24       0xbc hal/timer.32
                0x00000000c001ec24                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ece0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ece0       0xda hal/timer.32
                0x00000000c001ece0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001edbc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001edbc       0x23 hw/acpi.32
                0x00000000c001edbc                ACPI::~ACPI()
                0x00000000c001edbc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ede0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ede0       0x2a hw/acpi.32
                0x00000000c001ede0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ee0c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ee0c        0x2 hw/acpi.32
                0x00000000c001ee0c                LinkedList<Device>::~LinkedList()
                0x00000000c001ee0c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ee10       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ee10       0x1c hw/acpi.32
                0x00000000c001ee10                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ee2c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ee2c        0x7 hw/acpi.32
                0x00000000c001ee2c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ee34       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ee34       0xb8 hw/acpi.32
                0x00000000c001ee34                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001eeec       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001eeec       0x23 hw/cpu.32
                0x00000000c001eeec                CPU::~CPU()
                0x00000000c001eeec                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ef10       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ef10       0x2a hw/cpu.32
                0x00000000c001ef10                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ef3c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ef3c        0x8 sys/kill.32
                0x00000000c001ef3c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ef44        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ef44        0x2 thr/prcssthr.32
                0x00000000c001ef44                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ef44                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ef48       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ef48       0x49 thr/prcssthr.32
                0x00000000c001ef48                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ef48                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ef94       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ef94       0x42 thr/prcssthr.32
                0x00000000c001ef94                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ef94                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001efd6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001efd6       0x23 hw/bus/pci.32
                0x00000000c001efd6                PCI::~PCI()
                0x00000000c001efd6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001effa       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001effa       0x2a hw/bus/pci.32
                0x00000000c001effa                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f024       0x23
 .text._ZN3IDED2Ev
                0x00000000c001f024       0x23 hw/diskctrl/ide.32
                0x00000000c001f024                IDE::~IDE()
                0x00000000c001f024                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f048       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f048       0x2a hw/diskctrl/ide.32
                0x00000000c001f048                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001f072       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001f072       0x23 hw/diskctrl/satabus.32
                0x00000000c001f072                SATABus::~SATABus()
                0x00000000c001f072                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001f096       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001f096       0x2a hw/diskctrl/satabus.32
                0x00000000c001f096                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001f0c0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f0c0       0x23 hw/diskphys/ata.32
                0x00000000c001f0c0                ATA::~ATA()
                0x00000000c001f0c0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f0e4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f0e4       0x2a hw/diskphys/ata.32
                0x00000000c001f0e4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f10e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f10e       0x23 hw/diskphys/atapi.32
                0x00000000c001f10e                ATAPI::~ATAPI()
                0x00000000c001f10e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f132       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f132       0x2a hw/diskphys/atapi.32
                0x00000000c001f132                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001f15c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001f15c       0x23 hw/diskphys/sata.32
                0x00000000c001f15c                SATA::~SATA()
                0x00000000c001f15c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001f180       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001f180       0x2a hw/diskphys/sata.32
                0x00000000c001f180                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001f1aa       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001f1aa       0x23 hw/diskphys/satapi.32
                0x00000000c001f1aa                SATAPI::~SATAPI()
                0x00000000c001f1aa                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001f1ce       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001f1ce       0x2a hw/diskphys/satapi.32
                0x00000000c001f1ce                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001f1f8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f1f8       0x23 hw/intctrl/apic.32
                0x00000000c001f1f8                IOAPIC::~IOAPIC()
                0x00000000c001f1f8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f21c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f21c       0x2a hw/intctrl/apic.32
                0x00000000c001f21c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f248       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f248       0x23 hw/timer/apictimer.32
                0x00000000c001f248                APICTimer::~APICTimer()
                0x00000000c001f248                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f26c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f26c       0x2a hw/timer/apictimer.32
                0x00000000c001f26c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f298       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f298       0x23 hw/timer/pit.32
                0x00000000c001f298                PIT::~PIT()
                0x00000000c001f298                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f2bc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f2bc       0x2a hw/timer/pit.32
                0x00000000c001f2bc                PIT::~PIT()

.rodata         0x00000000c001f2e6     0x2c1e
                0x00000000c001f2e6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f2e6        0x2 
 .ctors         0x00000000c001f2e8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f2ec        0x4 core/unixfile.32
 .ctors         0x00000000c001f2f0        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f2f4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f2f8                end_ctors = .
                0x00000000c001f2f8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f2f8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f2fc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f2fc                __DTOR_END__
                0x00000000c001f300                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f300        0x0 
 .rodata        0x00000000c001f300      0x101 acpica/utclib.32
                0x00000000c001f300                AcpiGbl_Ctypes
 *fill*         0x00000000c001f401        0x3 
 .rodata        0x00000000c001f404       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f41c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f466       0x1a 
 .rodata        0x00000000c001f480       0xed fs/fat/ff.32
 *fill*         0x00000000c001f56d       0x13 
 .rodata        0x00000000c001f580      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f980       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001f9ef      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001fb04       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001fb6c       0x2c core/computer.32
                0x00000000c001fb6c                vtable for Computer
 .rodata.str1.4
                0x00000000c001fb98       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001fbc8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001fbd4       0x17 core/main.32
 *fill*         0x00000000c001fbeb        0x1 
 .rodata.str1.4
                0x00000000c001fbec       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fc91       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fce9       0x39 core/pipe.32
 *fill*         0x00000000c001fd22        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001fd24       0x1c core/pipe.32
                0x00000000c001fd24                vtable for Pipe
 .rodata.str1.1
                0x00000000c001fd40       0x2b core/terminal.32
 *fill*         0x00000000c001fd6b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001fd6c       0x1c core/terminal.32
                0x00000000c001fd6c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001fd88       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001fdaa       0x15 core/unixfile.32
 *fill*         0x00000000c001fdbf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001fdc0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001fe0b        0x8 core/unixfile.32
 *fill*         0x00000000c001fe13        0x1 
 .rodata.str1.4
                0x00000000c001fe14       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001fe34       0x1c core/unixfile.32
                0x00000000c001fe34                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001fe50       0x1c core/unixfile.32
                0x00000000c001fe50                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001fe6c      0x198 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020004      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002012a       0x33 coreobjs/c++.32
 *fill*         0x00000000c002015d        0x3 
 .rodata        0x00000000c0020160      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00202b0       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c00202b0       0x68 fs/vfs.32
                0x00000000c00202b0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020318       0x1c fs/vfs.32
                0x00000000c0020318                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020334       0x1c fs/vfs.32
                0x00000000c0020334                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0020350       0x2c hal/bus.32
                0x00000000c0020350                vtable for Bus
 .rodata.str1.1
                0x00000000c002037c       0x1e hal/clock.32
 *fill*         0x00000000c002039a        0x2 
 .rodata._ZTV5Clock
                0x00000000c002039c       0x3c hal/clock.32
                0x00000000c002039c                vtable for Clock
 *fill*         0x00000000c00203d8        0x8 
 .rodata        0x00000000c00203e0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020410       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020468       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020468       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0020468       0x2c hal/device.32
                0x00000000c0020468                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020494       0x2c hal/device.32
                0x00000000c0020494                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00204c0       0x2c hal/diskctrl.32
                0x00000000c00204c0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00204ec       0x38 hal/diskphys.32
                0x00000000c00204ec                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020524       0x3e hal/intctrl.32
 *fill*         0x00000000c0020562        0x2 
 .rodata.str1.4
                0x00000000c0020564       0x5d hal/intctrl.32
 .rodata        0x00000000c00205c1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0020614       0x34 hal/keybrd.32
                0x00000000c0020614                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020648       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002068c       0x2c hal/logidisk.32
                0x00000000c002068c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00206b8       0x2c hal/mouse.32
                0x00000000c00206b8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c00206e4       0x34 hal/nic.32
                0x00000000c00206e4                vtable for NIC
 .rodata.str1.1
                0x00000000c0020718        0xb hal/partition.32
 *fill*         0x00000000c0020723        0x1 
 .rodata._ZTV6Serial
                0x00000000c0020724       0x44 hal/serial.32
                0x00000000c0020724                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020768       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020768        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020768       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020768       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0020768       0x30 hal/timer.32
                0x00000000c0020768                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020798       0x10 hal/vcache.32
                0x00000000c0020798                vtable for VCache
 .rodata.str1.1
                0x00000000c00207a8       0x93 hal/video.32
 *fill*         0x00000000c002083b        0x1 
 .rodata._ZTV5Video
                0x00000000c002083c       0x4c hal/video.32
                0x00000000c002083c                vtable for Video
 .rodata.str1.4
                0x00000000c0020888       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0020923      0x174 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0020a97       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0020a97        0x8 hw/acpi.32
 *fill*         0x00000000c0020a97        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020a98       0x2c hw/acpi.32
                0x00000000c0020a98                vtable for ACPI
 .rodata.str1.1
                0x00000000c0020ac4      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020c31        0x3 
 .rodata._ZTV3CPU
                0x00000000c0020c34       0x2c hw/cpu.32
                0x00000000c0020c34                vtable for CPU
 .rodata.str1.1
                0x00000000c0020c60       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0020c9c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020d2d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0020df6       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020e3e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0020e69       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020edf       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020f24        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0020f2e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0020f4f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0020fe5       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0021039       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0021065      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0021231       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0021288      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021398       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021398       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021398       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021398        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0021398       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0021438       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021468      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c00215f8       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002166b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0021680       0x3c arch/i386/rtc.32
                0x00000000c0021680                vtable for RTC
 .rodata.str1.1
                0x00000000c00216bc       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00216fd        0x3 
 .rodata._ZTV3FAT
                0x00000000c0021700       0x68 fs/fat/vfslink.32
                0x00000000c0021700                vtable for FAT
 .rodata.str1.1
                0x00000000c0021768       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0021768      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00218a0       0x68 fs/iso9660/vfslink.32
                0x00000000c00218a0                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0021908       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c002194c       0x34 hal/sound/sndcard.32
                0x00000000c002194c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0021980       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00219bf       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00219f7       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0021a98       0x2c hw/bus/pci.32
                0x00000000c0021a98                vtable for PCI
 .rodata.str1.1
                0x00000000c0021ac4       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0021b4b        0x1 
 .rodata._ZTV3IDE
                0x00000000c0021b4c       0x2c hw/diskctrl/ide.32
                0x00000000c0021b4c                vtable for IDE
 .rodata.str1.4
                0x00000000c0021b78       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0021b9c       0x2c hw/diskctrl/satabus.32
                0x00000000c0021b9c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0021bc8       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0021bda        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021bdc       0x38 hw/diskphys/ata.32
                0x00000000c0021bdc                vtable for ATA
 .rodata.str1.1
                0x00000000c0021c14        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0021c21        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0021c24       0x38 hw/diskphys/atapi.32
                0x00000000c0021c24                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021c5c       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0021cd8       0x38 hw/diskphys/sata.32
                0x00000000c0021cd8                vtable for SATA
 .rodata.str1.1
                0x00000000c0021d10       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0021dfa        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0021dfc       0x38 hw/diskphys/satapi.32
                0x00000000c0021dfc                vtable for SATAPI
 .rodata        0x00000000c0021e34        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0021e3c       0x2c hw/intctrl/apic.32
                0x00000000c0021e3c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0021e68       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0021e83        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021e84       0x30 hw/timer/apictimer.32
                0x00000000c0021e84                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021eb4       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021ed1        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021ed4       0x30 hw/timer/pit.32
                0x00000000c0021ed4                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021f04      0x4e1
 *(.data)
 .data          0x00000000c0021f04        0x0 crti.32
 .data          0x00000000c0021f04        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021f04                __dso_handle
 .data          0x00000000c0021f08        0x0 acpica/utclib.32
 .data          0x00000000c0021f08        0x0 core/malloc.32
 .data          0x00000000c0021f08        0x0 libk/ctype.32
 .data          0x00000000c0021f08        0x0 libk/string.32
 .data          0x00000000c0021f08        0x0 fs/fat/diskio.32
 .data          0x00000000c0021f08        0x0 fs/fat/ff.32
 .data          0x00000000c0021f08        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0021f08        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0021f08        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0021f08        0x0 core/computer.32
 .data          0x00000000c0021f08        0x0 core/gdt.32
 .data          0x00000000c0021f08        0x0 core/idle.32
 .data          0x00000000c0021f08        0x0 core/idt.32
 .data          0x00000000c0021f08        0x4 core/kheap.32
 .data          0x00000000c0021f0c        0x0 core/main.32
 .data          0x00000000c0021f0c        0x4 core/physmgr.32
                0x00000000c0021f0c                Phys::bitmap
 .data          0x00000000c0021f10        0x0 core/pipe.32
 *fill*         0x00000000c0021f10       0x10 
 .data          0x00000000c0021f20       0x60 core/terminal.32
                0x00000000c0021f20                VgaText::hiddenOut
                0x00000000c0021f40                ansiToVGAMappings
 .data          0x00000000c0021f80        0x0 core/tss.32
 .data          0x00000000c0021f80        0x4 core/unixfile.32
                0x00000000c0021f80                UnixFile::nextFd
 .data          0x00000000c0021f84       0x15 core/virtmgr.32
                0x00000000c0021f84                Virt::pageAllocPtr
                0x00000000c0021f88                Virt::bitmap
                0x00000000c0021f8c                Virt::swapfileSectorsPerPage
                0x00000000c0021f90                Virt::swapfileLength
                0x00000000c0021f94                Virt::swapfileSector
                0x00000000c0021f98                Virt::swapfileDrive
 *fill*         0x00000000c0021f99        0x3 
 .data          0x00000000c0021f9c        0x4 coreobjs/c++.32
                0x00000000c0021f9c                __stack_chk_guard
 .data          0x00000000c0021fa0        0x0 dbg/kconsole.32
 .data          0x00000000c0021fa0        0x0 fs/vfs.32
 .data          0x00000000c0021fa0        0x0 hal/bus.32
 .data          0x00000000c0021fa0        0x0 hal/buzzer.32
 .data          0x00000000c0021fa0        0x0 hal/clock.32
 .data          0x00000000c0021fa0        0x0 hal/device.32
 .data          0x00000000c0021fa0        0x0 hal/diskctrl.32
 .data          0x00000000c0021fa0        0x0 hal/diskphys.32
 .data          0x00000000c0021fa0        0x0 hal/fpu.32
 .data          0x00000000c0021fa0        0x0 hal/intctrl.32
 .data          0x00000000c0021fa0        0x0 hal/keybrd.32
 .data          0x00000000c0021fa0        0x0 hal/logidisk.32
 .data          0x00000000c0021fa0        0x0 hal/mouse.32
 .data          0x00000000c0021fa0        0x0 hal/nic.32
 .data          0x00000000c0021fa0        0x0 hal/partition.32
 .data          0x00000000c0021fa0        0x0 hal/serial.32
 .data          0x00000000c0021fa0        0x0 hal/timer.32
 .data          0x00000000c0021fa0        0x0 hal/vcache.32
 .data          0x00000000c0021fa0        0x0 hal/video.32
 .data          0x00000000c0021fa0       0x10 hw/acpi.32
                0x00000000c0021fa0                legacyIRQRemaps
 .data          0x00000000c0021fb0        0x4 hw/cpu.32
                0x00000000c0021fb0                lastCode
 *fill*         0x00000000c0021fb4        0xc 
 .data          0x00000000c0021fc0      0x142 krnl/bootmsg.32
                0x00000000c0021fc0                KiSplashScreen
 *fill*         0x00000000c0022102       0x1e 
 .data          0x00000000c0022120       0x4d krnl/env.32
                0x00000000c0022120                defaultSysEnv
 .data          0x00000000c002216d        0x0 krnl/inlines.32
 .data          0x00000000c002216d        0x0 krnl/panic.32
 .data          0x00000000c002216d        0x0 krnl/powctrl.32
 .data          0x00000000c002216d        0x0 krnl/random.32
 .data          0x00000000c002216d        0x0 krnl/resolve.32
 *fill*         0x00000000c002216d       0x13 
 .data          0x00000000c0022180       0x4c krnl/signal.32
                0x00000000c0022180                KiDefaultSignalHandlers
 *fill*         0x00000000c00221cc       0x14 
 .data          0x00000000c00221e0       0xf0 krnl/syscalls.32
                0x00000000c00221e0                systemCallHandlers
 .data          0x00000000c00222d0        0x0 net/ethernet.32
 *fill*         0x00000000c00222d0       0x10 
 .data          0x00000000c00222e0      0x100 reg/cm.32
                0x00000000c00222e0                CmComponents
 .data          0x00000000c00223e0        0x0 reg/registry.32
 .data          0x00000000c00223e0        0x0 sys/eject.32
 .data          0x00000000c00223e0        0x0 sys/exit.32
 .data          0x00000000c00223e0        0x0 sys/getcwd.32
 .data          0x00000000c00223e0        0x0 sys/getpid.32
 .data          0x00000000c00223e0        0x0 sys/getramdata.32
 .data          0x00000000c00223e0        0x0 sys/getvgaptr.32
 .data          0x00000000c00223e0        0x0 sys/kill.32
 .data          0x00000000c00223e0        0x0 sys/loaddll.32
 .data          0x00000000c00223e0        0x0 sys/read.32
 .data          0x00000000c00223e0        0x0 sys/registersignal.32
 .data          0x00000000c00223e0        0x0 sys/registry.32
 .data          0x00000000c00223e0        0x0 sys/sbrk.32
 .data          0x00000000c00223e0        0x0 sys/setcwd.32
 .data          0x00000000c00223e0        0x0 sys/settime.32
 .data          0x00000000c00223e0        0x0 sys/timezone.32
 .data          0x00000000c00223e0        0x0 sys/write.32
 .data          0x00000000c00223e0        0x0 sys/wsbe.32
 .data          0x00000000c00223e0        0x0 sys/yield.32
 .data          0x00000000c00223e0        0x0 thr/elf.32
 .data          0x00000000c00223e0        0x4 thr/prcssthr.32
                0x00000000c00223e0                Thr::nextPID
 .data          0x00000000c00223e4        0x0 vm86/vm8086.32
 .data          0x00000000c00223e4        0x0 arch/i386/hal.32
 .data          0x00000000c00223e4        0x0 arch/i386/pic.32
 .data          0x00000000c00223e4        0x0 arch/i386/rtc.32
 .data          0x00000000c00223e4        0x0 arch/i386/vga.32
 .data          0x00000000c00223e4        0x0 fs/fat/vfslink.32
 .data          0x00000000c00223e4        0x0 fs/iso9660/helper.32
 .data          0x00000000c00223e4        0x1 fs/iso9660/vfslink.32
                0x00000000c00223e4                recentDriveletter
 .data          0x00000000c00223e5        0x0 hal/sound/sndcard.32
 .data          0x00000000c00223e5        0x0 hal/sound/sndport.32
 .data          0x00000000c00223e5        0x0 hw/bus/isa.32
 .data          0x00000000c00223e5        0x0 hw/bus/pci.32
 .data          0x00000000c00223e5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00223e5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00223e5        0x0 hw/diskphys/ata.32
 .data          0x00000000c00223e5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00223e5        0x0 hw/diskphys/sata.32
 .data          0x00000000c00223e5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00223e5        0x0 hw/intctrl/apic.32
 .data          0x00000000c00223e5        0x0 hw/timer/apictimer.32
 .data          0x00000000c00223e5        0x0 hw/timer/pit.32
 .data          0x00000000c00223e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00223e5        0x0 crtn.32
 .data          0x00000000c00223e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00223e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00223e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00223e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00223e8        0x0
 .got           0x00000000c00223e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00223e8        0x0
 .got.plt       0x00000000c00223e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00223e8        0x0
 .igot.plt      0x00000000c00223e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00223e8        0x0
 .tm_clone_table
                0x00000000c00223e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00223e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00223e5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00223e5        0x3 
 .eh_frame      0x00000000c00223e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00223e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00223e8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022440       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022480       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00224ec       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0023000       0x7d
 *(userkernel)
 userkernel     0x00000000c0023000       0x52 krnl/signal.32
                0x00000000c0023000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002302c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0023052       0x2b krnl/syscalls.32
                0x00000000c0023052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0024000        0x1
 *(align_previous)
 align_previous
                0x00000000c0024000        0x1 krnl/signal.32
                0x00000000c0024000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0024004        0x0
 .rel.got       0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0024001     0x4ba7
                0x00000000c0024001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0024001       0x1f 
 COMMON         0x00000000c0024020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0024020                dcache
                0x00000000c0024060                cdDriveLetter
                0x00000000c0024080                icache
 *(.bss)
 .bss           0x00000000c00240c0        0x0 crti.32
 .bss           0x00000000c00240c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00240e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00240e4       0x1c 
 .bss           0x00000000c0024100      0x378 core/malloc.32
 .bss           0x00000000c0024478        0x0 libk/ctype.32
 .bss           0x00000000c0024478        0x0 libk/string.32
 .bss           0x00000000c0024478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024478        0x8 
 .bss           0x00000000c0024480       0x88 fs/fat/ff.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0024508       0x18 
 .bss           0x00000000c0024520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0024eb8        0x6 core/computer.32
                0x00000000c0024eb8                Krnl::computer
                0x00000000c0024ebc                KeIsPreemptionOn
                0x00000000c0024ebd                KeIsSchedulingOn
 *fill*         0x00000000c0024ebe        0x2 
 .bss           0x00000000c0024ec0        0x6 core/gdt.32
                0x00000000c0024ec0                gdtDescr
 .bss           0x00000000c0024ec6        0x0 core/idle.32
 *fill*         0x00000000c0024ec6        0x2 
 .bss           0x00000000c0024ec8        0x6 core/idt.32
                0x00000000c0024ec8                idtDescr
 .bss           0x00000000c0024ece        0x0 core/kheap.32
 *fill*         0x00000000c0024ece        0x2 
 .bss           0x00000000c0024ed0        0x4 core/main.32
                0x00000000c0024ed0                sysBootSettings
 .bss           0x00000000c0024ed4       0x29 core/physmgr.32
                0x00000000c0024ed4                Phys::forbidEvictions
                0x00000000c0024ed8                Phys::currentPagePointer
                0x00000000c0024edc                Phys::highestMem
                0x00000000c0024ee0                Phys::oldPercent
                0x00000000c0024ee4                Phys::usedPages
                0x00000000c0024ee8                Phys::usablePages
                0x00000000c0024eec                Phys::dmaUsage
 .bss           0x00000000c0024efd        0x0 core/pipe.32
 *fill*         0x00000000c0024efd        0x3 
 .bss           0x00000000c0024f00        0x9 core/terminal.32
                0x00000000c0024f00                terminalCycle
                0x00000000c0024f04                activeTerminal
                0x00000000c0024f08                VgaText::graphicMode
 *fill*         0x00000000c0024f09        0x1 
 .bss           0x00000000c0024f0a        0x2 core/tss.32
                0x00000000c0024f0a                doubleFaultSelector
 *fill*         0x00000000c0024f0c       0x14 
 .bss           0x00000000c0024f20       0x84 core/unixfile.32
                0x00000000c0024f20                sfileLpt
                0x00000000c0024f60                sfileCom
                0x00000000c0024f84                sfileNul
                0x00000000c0024f88                sfilePnt
                0x00000000c0024f8c                sfileAux
                0x00000000c0024f90                sfileCon
                0x00000000c0024f94                initialFilesAdded
                0x00000000c0024f98                unixFileLinkedList
 .bss           0x00000000c0024fa4       0x10 core/virtmgr.32
                0x00000000c0024fa4                twswaps
                0x00000000c0024fa8                swapBalance
                0x00000000c0024fac                Virt::swapfileBitmap
                0x00000000c0024fb0                firstVAS
 .bss           0x00000000c0024fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0024fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0024fb4        0x4 fs/vfs.32
                0x00000000c0024fb4                installedFilesystems
 .bss           0x00000000c0024fb8        0x0 hal/bus.32
 .bss           0x00000000c0024fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0024fb8        0x8 hal/clock.32
                0x00000000c0024fb8                User::dstOn
                0x00000000c0024fb9                User::timezoneHalfHourOffset
                0x00000000c0024fbc                User::timezoneHourOffset
 .bss           0x00000000c0024fc0        0x0 hal/device.32
 .bss           0x00000000c0024fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0024fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0024fc0        0x0 hal/fpu.32
 .bss           0x00000000c0024fc0     0x2000 hal/intctrl.32
                0x00000000c0024fc0                INT_contexts
                0x00000000c0025fc0                INT_handlers
 .bss           0x00000000c0026fc0      0x429 hal/keybrd.32
                0x00000000c0026fc0                keyboardWaitingTaskList
                0x00000000c0026fc4                keyboardSetupYet
                0x00000000c0026fc8                guiKeyboardHandler
                0x00000000c0026fe0                keystates
 *fill*         0x00000000c00273e9       0x17 
 .bss           0x00000000c0027400       0x88 hal/logidisk.32
                0x00000000c0027400                diskAssignments
                0x00000000c0027420                disks
 .bss           0x00000000c0027488        0x4 hal/mouse.32
                0x00000000c0027488                guiMouseHandler
 .bss           0x00000000c002748c        0x0 hal/nic.32
 .bss           0x00000000c002748c        0x0 hal/partition.32
 .bss           0x00000000c002748c        0x0 hal/serial.32
 .bss           0x00000000c002748c        0x4 hal/timer.32
                0x00000000c002748c                milliTenthsSinceBoot
 .bss           0x00000000c0027490        0x0 hal/vcache.32
 .bss           0x00000000c0027490        0x4 hal/video.32
                0x00000000c0027490                screen
 *fill*         0x00000000c0027494        0xc 
 .bss           0x00000000c00274a0      0x480 hw/acpi.32
                0x00000000c00274a0                systemSleepFunction
                0x00000000c00274a4                systemResetFunction
                0x00000000c00274a8                systemShutdownFunction
                0x00000000c00274ac                nextACPITable
                0x00000000c00274c0                acpiTables
                0x00000000c00276c0                usingXSDT
                0x00000000c00276c4                MADTpointer
                0x00000000c00276c8                RSDTpointer
                0x00000000c00276cc                RSDPpointer
                0x00000000c00276d0                nextAPICNMI
                0x00000000c00276e0                apicNMIInfo
                0x00000000c0027760                legacyIRQFlags
                0x00000000c0027780                ioapicDiscoveryNumber
                0x00000000c00277a0                ioapicFoundInMADT
                0x00000000c00277c0                ioapicAddresses
                0x00000000c0027840                ioapicGSIBase
                0x00000000c00278c0                processorDiscoveryNumber
                0x00000000c00278e0                matchingAPICID
                0x00000000c0027900                processorID
 .bss           0x00000000c0027920       0x10 hw/cpu.32
                0x00000000c0027920                lastD
                0x00000000c0027924                lastC
                0x00000000c0027928                lastB
                0x00000000c002792c                lastA
 .bss           0x00000000c0027930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0027930        0x8 krnl/env.32
                0x00000000c0027930                Krnl::userEnv
                0x00000000c0027934                Krnl::systemEnv
 .bss           0x00000000c0027938        0x0 krnl/inlines.32
 .bss           0x00000000c0027938        0x1 krnl/panic.32
                0x00000000c0027938                KeIsKernelInPanic
 *fill*         0x00000000c0027939        0x7 
 .bss           0x00000000c0027940       0x48 krnl/powctrl.32
                0x00000000c0027940                Krnl::powCtrlOnBattery
                0x00000000c0027960                Krnl::currentPowerSettings
                0x00000000c0027984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0027988        0x8 krnl/random.32
                0x00000000c0027988                kiRandSeed
 .bss           0x00000000c0027990        0x0 krnl/resolve.32
 .bss           0x00000000c0027990        0x0 krnl/signal.32
 .bss           0x00000000c0027990        0x0 krnl/syscalls.32
 .bss           0x00000000c0027990        0x0 net/ethernet.32
 .bss           0x00000000c0027990        0x4 reg/cm.32
 .bss           0x00000000c0027994        0x0 reg/registry.32
 .bss           0x00000000c0027994        0x0 sys/eject.32
 .bss           0x00000000c0027994        0x0 sys/exit.32
 .bss           0x00000000c0027994        0x0 sys/getcwd.32
 .bss           0x00000000c0027994        0x0 sys/getpid.32
 .bss           0x00000000c0027994        0x0 sys/getramdata.32
 .bss           0x00000000c0027994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0027994        0x0 sys/kill.32
 .bss           0x00000000c0027994        0x0 sys/loaddll.32
 .bss           0x00000000c0027994        0x0 sys/read.32
 .bss           0x00000000c0027994        0x0 sys/registersignal.32
 .bss           0x00000000c0027994        0x0 sys/registry.32
 .bss           0x00000000c0027994        0x0 sys/sbrk.32
 .bss           0x00000000c0027994        0x0 sys/setcwd.32
 .bss           0x00000000c0027994        0x0 sys/settime.32
 .bss           0x00000000c0027994        0x0 sys/timezone.32
 .bss           0x00000000c0027994        0x0 sys/write.32
 .bss           0x00000000c0027994        0x0 sys/wsbe.32
 .bss           0x00000000c0027994        0x0 sys/yield.32
 *fill*         0x00000000c0027994        0xc 
 .bss           0x00000000c00279a0      0x7a4 thr/elf.32
                0x00000000c00279a0                Thr::driverLookupNext
                0x00000000c00279c0                Thr::driverLookupLen
                0x00000000c0027bc0                Thr::driverLookupAddr
                0x00000000c0027dc0                Thr::driverNameLookup
                0x00000000c0027fc0                Thr::kernelSymbols
                0x00000000c0028040                Thr::kernelStringTable
                0x00000000c00280c0                Thr::kernelSymbolTable
                0x00000000c0028140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0028144        0x4 
 .bss           0x00000000c0028148       0x68 thr/prcssthr.32
                0x00000000c0028148                cleanerThread
                0x00000000c002814c                weNeedTheCleanerToNotBlock
                0x00000000c0028150                retValLockStuff
                0x00000000c0028154                retValSchedLock
                0x00000000c0028158                lockStuffLock
                0x00000000c002815c                schedulerLock
                0x00000000c0028160                taskSwitchesPostponedFlag
                0x00000000c0028164                postponeTaskSwitchesCounter
                0x00000000c0028168                irqDisableCounter
                0x00000000c002816c                terminatedTaskList
                0x00000000c0028178                sleepingTaskList
                0x00000000c0028184                taskList
                0x00000000c0028190                kernelProcess
 *fill*         0x00000000c00281b0       0x10 
 .bss           0x00000000c00281c0       0x40 vm86/vm8086.32
                0x00000000c00281c0                Vm::vmRetV
                0x00000000c00281c4                Vm::vmDone
                0x00000000c00281c5                Vm::vmReady
                0x00000000c00281c8                Vm::vm86Thread
                0x00000000c00281cc                Vm::vmToHostCommsPtr
                0x00000000c00281e0                Vm::vmToHostComms
 .bss           0x00000000c0028200       0x18 arch/i386/hal.32
                0x00000000c0028200                apic
                0x00000000c0028204                guiPanicHandler
                0x00000000c0028208                fpuOwner
                0x00000000c002820c                coproLoadFunc
                0x00000000c0028210                coproSaveFunc
                0x00000000c0028214                gpFaultIntercept
 .bss           0x00000000c0028218        0x0 arch/i386/pic.32
 .bss           0x00000000c0028218        0x2 arch/i386/rtc.32
 .bss           0x00000000c002821a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002821a        0x6 
 .bss           0x00000000c0028220       0xf0 fs/fat/vfslink.32
                0x00000000c0028220                FAT::fats
                0x00000000c0028240                FAT::vfsToFatRemaps
                0x00000000c00282c0                fatToVFSRemaps
 .bss           0x00000000c0028310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0028310       0x10 
 .bss           0x00000000c0028320      0x820 fs/iso9660/vfslink.32
                0x00000000c0028320                iso9660Owner
                0x00000000c0028324                recentSector
                0x00000000c0028340                recentBuffer
 .bss           0x00000000c0028b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0028b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0028b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0028b40        0xd hw/bus/pci.32
                0x00000000c0028b40                thePCI
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0028b4d        0x3 
 .bss           0x00000000c0028b50        0x8 hw/diskphys/ata.32
                0x00000000c0028b50                ataSectorsWritten
                0x00000000c0028b54                ataSectorsRead
 .bss           0x00000000c0028b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0028b58        0x8 
 .bss           0x00000000c0028b60       0x41 hw/intctrl/apic.32
                0x00000000c0028b60                noOfIOAPICs
                0x00000000c0028b80                ioapics
                0x00000000c0028ba0                IOAPICsSetupYet
 .bss           0x00000000c0028ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0028ba1        0x3 
 .bss           0x00000000c0028ba4        0x4 hw/timer/pit.32
                0x00000000c0028ba4                pitFreq
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0028ba8        0x0 crtn.32
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0028ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
