Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootflags.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/apic.32
 .group         0x0000000000000000        0xc arch/i386/apic.32
 .comment       0x0000000000000000       0x12 arch/i386/apic.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootflags.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/apic.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21dbe
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x27e dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006efd                Dbg::logs(char*)
                0x00000000c0006f27                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f45                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f66                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00070dd        0x3 
 .text          0x00000000c00070e0      0x2d4 dbg/usban.32
                0x00000000c00070e0                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000714c                __ubsan_handle_type_mismatch_v1
                0x00000000c0007228                __ubsan_handle_pointer_overflow
                0x00000000c0007254                __ubsan_handle_out_of_bounds
                0x00000000c0007280                __ubsan_handle_add_overflow
                0x00000000c00072ac                __ubsan_handle_load_invalid_value
                0x00000000c00072d8                __ubsan_handle_divrem_overflow
                0x00000000c0007304                __ubsan_handle_mul_overflow
                0x00000000c0007330                __ubsan_handle_sub_overflow
                0x00000000c000735c                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007388                __ubsan_handle_negate_overflow
 .text          0x00000000c00073b4      0x812 fs/symlink.32
                0x00000000c0007503                KiDeinitialiseSymlinks(void*)
                0x00000000c0007594                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c0007617                KeInitialiseSymlinks()
                0x00000000c0007779                KiIsSymlinkRegistered(char const*)
                0x00000000c00078e3                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a8a                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007bc6      0xd9c fs/vfs.32
                0x00000000c0007bc6                File::read(unsigned long long, void*, int*)
                0x00000000c0007c1e                File::write(unsigned long long, void*, int*)
                0x00000000c0007c76                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007cce                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cfc                File::isAtty()
                0x00000000c0007d00                Directory::isAtty()
                0x00000000c0007d04                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007d0a                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007d10                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007d16                File::~File()
                0x00000000c0007d16                File::~File()
                0x00000000c0007d3a                File::~File()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d88                Directory::~Directory()
                0x00000000c0007db2                Filesystem::Filesystem()
                0x00000000c0007db2                Filesystem::Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007de4                Filesystem::~Filesystem()
                0x00000000c0007e08                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e32                Fs::initVFS()
                0x00000000c0007e5c                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000808a                File::File(char const*, Process*, bool)
                0x00000000c000808a                File::File(char const*, Process*, bool)
                0x00000000c0008188                File::File(char const*, Process*)
                0x00000000c0008188                File::File(char const*, Process*)
                0x00000000c00081a6                File::open(FileOpenMode)
                0x00000000c0008204                File::close()
                0x00000000c0008264                File::seek(unsigned long long)
                0x00000000c00082ba                File::truncate(unsigned long long)
                0x00000000c0008310                File::tell(unsigned long long*)
                0x00000000c0008360                File::rewind()
                0x00000000c0008374                File::unlink()
                0x00000000c00083c0                File::rename(char const*)
                0x00000000c000840e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000846a                File::exists()
                0x00000000c00084a8                File::stat(unsigned long long*, bool*)
                0x00000000c0008509                Fs::setcwd(Process*, char*)
                0x00000000c0008668                Directory::Directory(char const*, Process*)
                0x00000000c0008668                Directory::Directory(char const*, Process*)
                0x00000000c0008730                Directory::open()
                0x00000000c000878c                Directory::close()
                0x00000000c00087ec                Directory::unlink()
                0x00000000c0008838                Directory::rename(char const*)
                0x00000000c0008886                Directory::exists()
                0x00000000c00088c4                Directory::read(dirent*)
                0x00000000c0008910                Directory::create()
                0x00000000c000895c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c0008962        0x2 
 .text          0x00000000c0008964       0x86 hal/bus.32
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c000899c                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
                0x00000000c00089c0                Bus::~Bus()
 .text          0x00000000c00089ea       0x9b hal/buzzer.32
                0x00000000c00089ea                KeBeepThread(void*)
                0x00000000c0008a2b                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a85        0x1 
 .text          0x00000000c0008a86      0xe4e hal/clock.32
                0x00000000c0008a86                KeLoadTimezoneStrings()
                0x00000000c0008e15                KeGetTimezoneStringFromID(int)
                0x00000000c0008eb2                KeUpdateTimezone(char const*)
                0x00000000c0008fac                KeSetTimezone(char const*)
                0x00000000c0009009                KeSetTimezone(int)
                0x00000000c000903c                KeLoadTimezone()
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009110                Clock::~Clock()
                0x00000000c000913a                Clock::timeInSecondsLocal()
                0x00000000c00091a4                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0009224                KeDatetimeToSeconds(datetime_t)
                0x00000000c0009552                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0009614                KeSecondsToDatetime(unsigned long long)
                0x00000000c00098a8                Clock::timeInDatetimeLocal()
 .text          0x00000000c00098d4      0x47a hal/device.32
                0x00000000c00098d4                Device::hibernate()
                0x00000000c00098d6                Device::wake()
                0x00000000c00098d8                Device::detect()
                0x00000000c00098da                Device::disableLegacy()
                0x00000000c00098dc                Device::powerSaving(PowerSavingLevel)
                0x00000000c00098de                DriverlessDevice::close(int, int, void*)
                0x00000000c00098e2                DriverlessDevice::detect()
                0x00000000c00098e4                DriverlessDevice::open(int, int, void*)
                0x00000000c00098f8                Device::~Device()
                0x00000000c00098f8                Device::~Device()
                0x00000000c0009906                Device::~Device()
                0x00000000c000992e                Device::findAndLoadDriver()
                0x00000000c000993c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0009962                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00099a2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00099cc                Device::getParent()
                0x00000000c00099d8                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00099f6                Device::addChild(Device*)
                0x00000000c0009a3a                Device::removeAllChildren()
                0x00000000c0009a80                Device::hibernateAll()
                0x00000000c0009ab0                Device::wakeAll()
                0x00000000c0009ae0                Device::detectAll()
                0x00000000c0009b10                Device::disableLegacyAll()
                0x00000000c0009b12                Device::loadDriversForAll()
                0x00000000c0009b14                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009b4a                Device::setName(char const*)
                0x00000000c0009b58                Device::Device(char const*)
                0x00000000c0009b58                Device::Device(char const*)
                0x00000000c0009c54                Device::getName()
                0x00000000c0009c5e                Device::closeAll()
                0x00000000c0009caa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009caa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009ce0                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d24                getDevicesOfType(DeviceType)
 *fill*         0x00000000c0009d4e        0x2 
 .text          0x00000000c0009d50       0x86 hal/diskctrl.32
                0x00000000c0009d50                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d50                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d88                HardDiskController::~HardDiskController()
                0x00000000c0009d88                HardDiskController::~HardDiskController()
                0x00000000c0009dac                HardDiskController::~HardDiskController()
 .text          0x00000000c0009dd6       0xe2 hal/diskphys.32
                0x00000000c0009dd6                PhysicalDisk::eject()
                0x00000000c0009dda                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009dda                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e42                PhysicalDisk::startCache()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e8e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009eb8        0x0 hal/fpu.32
 .text          0x00000000c0009eb8      0x874 hal/keybrd.32
                0x00000000c0009eb8                startGUI(void*)
                0x00000000c0009f1d                startGUIVESA(void*)
                0x00000000c0009f82                sendKeyToTerminal(unsigned char)
                0x00000000c000a058                sendKeyboardToken(KeyboardToken)
                0x00000000c000a514                clearInternalKeybuffer(VgaText*)
                0x00000000c000a549                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6a2                Keyboard::Keyboard(char const*)
                0x00000000c000a6a2                Keyboard::Keyboard(char const*)
                0x00000000c000a6de                Keyboard::~Keyboard()
                0x00000000c000a6de                Keyboard::~Keyboard()
                0x00000000c000a702                Keyboard::~Keyboard()
 .text          0x00000000c000a72c      0x3f8 hal/logidisk.32
                0x00000000c000a72c                LogicalDisk::close(int, int, void*)
                0x00000000c000a730                LogicalDisk::~LogicalDisk()
                0x00000000c000a730                LogicalDisk::~LogicalDisk()
                0x00000000c000a754                LogicalDisk::~LogicalDisk()
                0x00000000c000a77e                LogicalDisk::open(int, int, void*)
                0x00000000c000a792                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a7ca                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a810                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a810                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a8d0                LogicalDisk::assignDriveLetter()
                0x00000000c000a98a                LogicalDisk::mount()
                0x00000000c000a9d2                LogicalDisk::unmount()
                0x00000000c000a9e2                LogicalDisk::eject()
                0x00000000c000a9f6                LogicalDisk::unassignDriveLetter()
                0x00000000c000aa4c                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aab8                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab24       0x86 hal/mouse.32
                0x00000000c000ab24                Mouse::Mouse(char const*)
                0x00000000c000ab24                Mouse::Mouse(char const*)
                0x00000000c000ab5c                Mouse::~Mouse()
                0x00000000c000ab5c                Mouse::~Mouse()
                0x00000000c000ab80                Mouse::~Mouse()
 .text          0x00000000c000abaa       0x90 hal/nic.32
                0x00000000c000abaa                NIC::getMAC()
                0x00000000c000abb0                NIC::write(int, unsigned char*, int*)
                0x00000000c000abb6                NIC::NIC(char const*)
                0x00000000c000abb6                NIC::NIC(char const*)
                0x00000000c000abec                NIC::~NIC()
                0x00000000c000abec                NIC::~NIC()
                0x00000000c000ac10                NIC::~NIC()
 .text          0x00000000c000ac3a      0x33b hal/partition.32
                0x00000000c000ac3a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ace2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af75        0x3 
 .text          0x00000000c000af78       0x86 hal/serial.32
                0x00000000c000af78                Serial::Serial(char const*)
                0x00000000c000af78                Serial::Serial(char const*)
                0x00000000c000afb0                Serial::~Serial()
                0x00000000c000afb0                Serial::~Serial()
                0x00000000c000afd4                Serial::~Serial()
 *fill*         0x00000000c000affe        0x2 
 .text          0x00000000c000b000      0x230 hal/timer.32
                0x00000000c000b000                Timer::Timer(char const*)
                0x00000000c000b000                Timer::Timer(char const*)
                0x00000000c000b038                Timer::~Timer()
                0x00000000c000b038                Timer::~Timer()
                0x00000000c000b05c                Timer::~Timer()
                0x00000000c000b086                Timer::read()
                0x00000000c000b091                setupTimer(int)
                0x00000000c000b0cc                timerHandler(unsigned int)
 .text          0x00000000c000b230      0x60e hal/vcache.32
                0x00000000c000b230                VCache::VCache(PhysicalDisk*)
                0x00000000c000b230                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3a0                VCache::invalidateReadBuffer()
                0x00000000c000b3b0                VCache::writeWriteBuffer()
                0x00000000c000b3fc                VCache::~VCache()
                0x00000000c000b3fc                VCache::~VCache()
                0x00000000c000b454                VCache::~VCache()
                0x00000000c000b47c                VCache::write(unsigned long long, int, void*)
                0x00000000c000b64a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b83e      0x71d hal/video.32
                0x00000000c000b83e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b88a                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b8fa                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b98a                Video::clearScreen(unsigned int)
                0x00000000c000b9be                Video::putpixel(int, int, unsigned int)
                0x00000000c000b9cc                Video::readPixelApprox(int, int)
                0x00000000c000b9e0                Video::Video(char const*)
                0x00000000c000b9e0                Video::Video(char const*)
                0x00000000c000ba16                Video::~Video()
                0x00000000c000ba16                Video::~Video()
                0x00000000c000ba3a                Video::~Video()
                0x00000000c000ba64                Video::isMonochrome()
                0x00000000c000ba70                Video::getWidth()
                0x00000000c000ba7c                Video::getHeight()
                0x00000000c000ba88                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb44                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000beea                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000bf5b        0x1 
 .text          0x00000000c000bf5c     0x10ea hw/acpi.32
                0x00000000c000bf5c                ACPI::close(int, int, void*)
                0x00000000c000bf64                loadACPITables(unsigned char*)
                0x00000000c000c1c4                findRSDT(unsigned char*)
                0x00000000c000c310                findDataTable(unsigned char*, char*)
                0x00000000c000c384                scanMADT()
                0x00000000c000c834                ACPI::ACPI()
                0x00000000c000c834                ACPI::ACPI()
                0x00000000c000c884                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c980                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca4c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca54                ACPI::detectPCI()
                0x00000000c000cc60                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cc78                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d046        0x2 
 .text          0x00000000c000d048       0xea krnl/assert.32
                0x00000000c000d048                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d132       0xb6 krnl/atexit.32
                0x00000000c000d132                KeInitialiseAtexit()
                0x00000000c000d151                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d185                KeExecuteAtexit()
 .text          0x00000000c000d1e8       0x1e krnl/bootflags.32
                0x00000000c000d1e8                KeGetBootConfigurationFlag(BootConfigurationFlag)
                0x00000000c000d1f8                KeInitialiseBootConfigurationFlags()
 .text          0x00000000c000d206       0x9f krnl/bootmsg.32
                0x00000000c000d206                KeDisplaySplashScreen()
                0x00000000c000d235                KeSetBootMessage(char const*)
 .text          0x00000000c000d2a5       0x5f krnl/c++.32
                0x00000000c000d2a5                __cxa_atexit
                0x00000000c000d2a8                __cxa_finalize
                0x00000000c000d2a9                __stack_chk_fail
                0x00000000c000d2df                __cxa_pure_virtual
                0x00000000c000d2f0                operator new[](unsigned long)
                0x00000000c000d2f5                operator delete(void*, unsigned long)
                0x00000000c000d2fa                operator delete[](void*)
                0x00000000c000d2ff                operator delete[](void*, unsigned long)
 .text          0x00000000c000d304       0x44 krnl/cdefs.32
                0x00000000c000d304                CUnlockScheduler
                0x00000000c000d31c                CLockScheduler
                0x00000000c000d32c                CPrintf
 .text          0x00000000c000d348      0xd51 krnl/cm.32
                0x00000000c000d348                CmOpen(char const*)
                0x00000000c000d466                CmClose(Reghive_Tag*)
                0x00000000c000d47c                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d4b8                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d52f                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d56e                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d5a0                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d5dc                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d604                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d625                CmExpand(Reghive_Tag*, int)
                0x00000000c000d6a0                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d726                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d81a                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d952                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d9b3                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d9e3                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000da1a                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000da44                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000da84                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000db28                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000db56                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dcf3                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000dd40                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000ddba                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000de0d                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000ded1                zStrtok(char*, char const*)
                0x00000000c000df43                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000dfc4                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000e067                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000e099        0x3 
 .text          0x00000000c000e09c       0x1d krnl/compat.32
                0x00000000c000e09c                Krnl::handlePowerButton()
                0x00000000c000e0ac                Krnl::handleSleepButton()
 *fill*         0x00000000c000e0b9        0x1 
 .text          0x00000000c000e0ba       0xe3 krnl/computer.32
                0x00000000c000e0ba                Computer::close(int, int, void*)
                0x00000000c000e0c0                Computer::Computer()
                0x00000000c000e0c0                Computer::Computer()
                0x00000000c000e104                Computer::open(int, int, void*)
 .text          0x00000000c000e19d       0x2b krnl/crc32.32
                0x00000000c000e19d                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e1c8      0x5bf krnl/env.32
                0x00000000c000e1c8                EnvVarContainer::getEnv(char const*)
                0x00000000c000e206                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e2c8                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e2ca                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e4ee                EnvVarContainer::__loadSystem()
                0x00000000c000e508                EnvVarContainer::__loadUser()
                0x00000000c000e50a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e50a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e52c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e52c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e55c                KeGetEnv(Process*, char const*)
                0x00000000c000e5c1                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e5db                KeSetEnvUser(char const*, char const*)
                0x00000000c000e5fa                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e60d                KeDeleteEnvSystem(char const*)
                0x00000000c000e60e                KeDeleteEnvUser(char const*)
                0x00000000c000e60f                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e610                KeNewProcessEnv(Process*)
                0x00000000c000e632                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e67e                KeLoadSystemEnv()
                0x00000000c000e6ac                KeLoadUserEnv()
                0x00000000c000e6d2                KeFlushEnv()
                0x00000000c000e6d3                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e6f3                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e787        0x1 
 .text          0x00000000c000e788      0x371 krnl/fault.32
                0x00000000c000e788                KeSetupInterrupts()
                0x00000000c000e800                int_handler
                0x00000000c000e930                KeDisplayProgramFault(char const*)
                0x00000000c000e980                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e9e4                KePageFault(void*, void*)
                0x00000000c000ea48                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000ea58                KeOtherFault(void*, void*)
                0x00000000c000ea8c                KeOpcodeFault(void*, void*)
                0x00000000c000eae0                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000eaf9        0x1 
 .text          0x00000000c000eafa      0x1db krnl/gdt.32
                0x00000000c000eafa                GDTEntry::setBase(unsigned int)
                0x00000000c000eb16                GDTEntry::setLimit(unsigned int)
                0x00000000c000eb34                GDT::GDT()
                0x00000000c000eb34                GDT::GDT()
                0x00000000c000eb4a                GDT::addEntry(GDTEntry)
                0x00000000c000eb6c                GDT::getNumberOfEntries()
                0x00000000c000eb74                GDT::flush()
                0x00000000c000eb96                GDT::setup()
 .text          0x00000000c000ecd5       0x20 krnl/idle.32
                0x00000000c000ecd5                idleFunction(void*)
 *fill*         0x00000000c000ecf5        0x3 
 .text          0x00000000c000ecf8      0x46c krnl/idt.32
                0x00000000c000ecf8                IDTEntry::IDTEntry(bool)
                0x00000000c000ecf8                IDTEntry::IDTEntry(bool)
                0x00000000c000ed72                IDTEntry::setOffset(unsigned int)
                0x00000000c000ed88                IDT::IDT()
                0x00000000c000ed88                IDT::IDT()
                0x00000000c000ed8a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ed92                IDT::addEntry(IDTEntry, int)
                0x00000000c000edac                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000ede4                IDT::flush()
                0x00000000c000edfe                IDT::setup()
 .text          0x00000000c000f164       0x9a krnl/inlines.32
                0x00000000c000f164                CPU::current()
                0x00000000c000f170                operator new(unsigned long)
                0x00000000c000f175                operator delete(void*)
                0x00000000c000f17a                disableIRQs()
                0x00000000c000f17c                enableIRQs()
                0x00000000c000f17e                lockScheduler()
                0x00000000c000f186                unlockScheduler()
                0x00000000c000f198                lockStuff()
                0x00000000c000f1a6                unlockStuff()
                0x00000000c000f1e3                Virt::getAKernelVAS()
                0x00000000c000f1e9                __not_memcpy
 .text          0x00000000c000f1fe      0x2ae krnl/intlformat.32
                0x00000000c000f1fe                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f3e0                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f402                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f424                KeSetLocale(klocale_t)
                0x00000000c000f43a                KeInitialiseLocale()
                0x00000000c000f4a8                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f4a9                KeFormatCurrency(char*, int, double)
                0x00000000c000f4aa                KeFormatNumber(char*, long long, long long)
                0x00000000c000f4ab                KeFormatNumber(char*, double)
 .text          0x00000000c000f4ac      0x356 krnl/intops.32
                0x00000000c000f4ac                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f5c8                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f708                KeGetDigitsInNumber(long long)
                0x00000000c000f774                KeItoa(unsigned long long, char*)
                0x00000000c000f7a4                KeItoa(long long, char*)
                0x00000000c000f7d4                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f802      0x204 krnl/kheap.32
                0x00000000c000f802                sbrk
                0x00000000c000f896                sbrk_thunk
                0x00000000c000f8cc                mmap
                0x00000000c000f92a                munmap
                0x00000000c000f93f                liballoc_lock()
                0x00000000c000f94d                liballoc_unlock()
                0x00000000c000f965                liballoc_alloc(int)
                0x00000000c000f97d                liballoc_free(void*, int)
                0x00000000c000f998                realloc
                0x00000000c000f9ac                malloc
                0x00000000c000f9bc                free
                0x00000000c000f9cc                rfree
                0x00000000c000f9dc                calloc
 *fill*         0x00000000c000fa06        0x2 
 .text          0x00000000c000fa08      0x1d3 krnl/mailbox.32
                0x00000000c000fa08                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fa68                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fac8                KeMailboxCreate()
                0x00000000c000fafc                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fb60                KeMailboxGet(Mailbox*, void**)
                0x00000000c000fbc4                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fbdb      0x20b krnl/main.32
                0x00000000c000fbdb                KeFirstTask()
                0x00000000c000fce6                KeEntryPoint
 *fill*         0x00000000c000fde6        0x2 
 .text          0x00000000c000fde8       0x1a krnl/mutex.32
                0x00000000c000fde8                Mutex::Mutex()
                0x00000000c000fde8                Mutex::Mutex()
 .text          0x00000000c000fe02        0xc krnl/panic.32
                0x00000000c000fe02                KePanic(char const*)
 .text          0x00000000c000fe0e      0x666 krnl/physmgr.32
                0x00000000c000fe0e                Phys::allocateDMA(unsigned long)
                0x00000000c000fefc                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000ff37                Phys::setPageState(unsigned long, bool)
                0x00000000c000ff77                Phys::getPageState(unsigned long)
                0x00000000c000ff93                Phys::freePage(unsigned long)
                0x00000000c000fffc                Phys::allocatePage()
                0x00000000c00100da                Phys::allocateContiguousPages(int)
                0x00000000c0010155                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c001018d                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0010474      0x271 krnl/pipe.32
                0x00000000c0010474                Pipe::isAtty()
                0x00000000c0010478                Pipe::~Pipe()
                0x00000000c0010478                Pipe::~Pipe()
                0x00000000c001049c                Pipe::~Pipe()
                0x00000000c00104c4                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0010588                Pipe::read(unsigned long long, void*, int*)
                0x00000000c001067e                Pipe::Pipe(int)
                0x00000000c001067e                Pipe::Pipe(int)
 .text          0x00000000c00106e5      0x1a3 krnl/powctrl.32
                0x00000000c00106e5                KePowerThread(void*)
                0x00000000c0010717                KeChangePowerSettings(PowerSettings)
                0x00000000c001072d                KeUserIOReceived()
                0x00000000c0010738                KeSetupPowerManager()
                0x00000000c00107c1                KePrepareShutdown()
                0x00000000c00107e0                KeRegisterShutdownHandler(void (*)())
                0x00000000c00107ea                KeRegisterRestartHandler(void (*)())
                0x00000000c00107f4                KeRegisterSleepHandler(void (*)())
                0x00000000c00107fe                KeShutdown()
                0x00000000c0010834                KeSleep()
                0x00000000c0010840                KeHandlePowerButton()
                0x00000000c0010852                KeHandleSleepButton()
                0x00000000c0010864                KeRestart()
 .text          0x00000000c0010888       0x9b krnl/random.32
                0x00000000c0010888                KeRand()
                0x00000000c00108c8                KeSeedRand(unsigned int)
                0x00000000c00108f1                KeInitRand()
 *fill*         0x00000000c0010923        0x1 
 .text          0x00000000c0010924      0x1e8 krnl/resolve.32
                0x00000000c0010924                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010b0c      0x415 krnl/semaphore.32
                0x00000000c0010b0c                Semaphore::Semaphore(int)
                0x00000000c0010b0c                Semaphore::Semaphore(int)
                0x00000000c0010b3c                Semaphore::tryAcquire()
                0x00000000c0010c10                Semaphore::assertLocked(char const*)
                0x00000000c0010c9c                Semaphore::acquire(int)
                0x00000000c0010e54                Semaphore::acquire()
                0x00000000c0010e70                Semaphore::release()
 .text          0x00000000c0010f21      0x3a8 krnl/signal.32
                0x00000000c0010f21                KiSigKill(int)
                0x00000000c0010f35                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010f36                KiDefaultSignalHandlerPause(int)
                0x00000000c0010f62                KiDefaultSignalHandlerResume(int)
                0x00000000c0010f8e                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010f93                KeInitSignals()
                0x00000000c0011005                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c001103b                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00110bc                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c00111eb                KiCheckSignalZ
                0x00000000c001123c                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011277                KiFinishSignalZ
 .text          0x00000000c00112c9      0xe77 krnl/syscalls.32
                0x00000000c00112c9                SysSeekDir(regs*)
                0x00000000c00112ce                SysTellDir(regs*)
                0x00000000c00112d3                SysVerify(regs*)
                0x00000000c00112dd                SysGetArgc(regs*)
                0x00000000c00112f1                SysTTYName(regs*)
                0x00000000c00112f9                SysFormatDisk(regs*)
                0x00000000c0011360                SysSetDiskVolumeLabel(regs*)
                0x00000000c00113b4                SysGetDiskVolumeLabel(regs*)
                0x00000000c001140d                SysRealpath(regs*)
                0x00000000c001145b                SysReadDir(regs*)
                0x00000000c00114db                SysIsATTY(regs*)
                0x00000000c0011535                SysSeek(regs*)
                0x00000000c0011593                SysTell(regs*)
                0x00000000c0011608                SysSize(regs*)
                0x00000000c0011682                SysSizeFromFilename(regs*)
                0x00000000c00117b5                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c00118e8                SysClose(regs*)
                0x00000000c001194d                SysOpenDir(regs*)
                0x00000000c00119ca                SysMakeDir(regs*)
                0x00000000c0011a38                SysCloseDir(regs*)
                0x00000000c0011a8c                SysWait(regs*)
                0x00000000c0011aad                SysNotImpl(regs*)
                0x00000000c0011ac8                SysPanic(regs*)
                0x00000000c0011ae3                SysRmdir(regs*)
                0x00000000c0011b41                SysUnlink(regs*)
                0x00000000c0011b9f                SysGetArgv(regs*)
                0x00000000c0011bec                SysUSleep(regs*)
                0x00000000c0011c16                SysSpawn(regs*)
                0x00000000c0011c87                SysGetEnv(regs*)
                0x00000000c0011d3c                SysSetFatAttrib(regs*)
                0x00000000c0011da5                SysShutdown(regs*)
                0x00000000c0011e02                SysPipe(regs*)
                0x00000000c0011e47                SysGetUnixTime(regs*)
                0x00000000c0011eb4                string_ends_with(char const*, char const*)
                0x00000000c0011eff                SysOpen(regs*)
                0x00000000c00120fe                KeSystemCall(regs*, void*)
 .text          0x00000000c0012140      0xadd krnl/terminal.32
                0x00000000c0012140                VgaText::isAtty()
                0x00000000c0012144                VgaText::~VgaText()
                0x00000000c0012144                VgaText::~VgaText()
                0x00000000c0012168                VgaText::~VgaText()
                0x00000000c0012192                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00121b2                setTerminalScrollLock(bool)
                0x00000000c00121b3                doTerminalCycle()
                0x00000000c00121b4                addToTerminalCycle(VgaText*)
                0x00000000c00121b5                scrollTerminalScrollLock(int)
                0x00000000c00121b6                VgaText::updateTitle()
                0x00000000c00121b8                VgaText::load()
                0x00000000c00121ba                VgaText::updateCursor()
                0x00000000c00121d0                VgaText::doANSI_SGR(int)
                0x00000000c0012244                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0012254                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0012264                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0012284                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0012290                VgaText::setTitleColour(VgaColour)
                0x00000000c001229c                VgaText::setTitle(char*)
                0x00000000c001229e                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00122b0                VgaText::scrollScreen()
                0x00000000c0012342                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0012352                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00123fe                VgaText::getCursorX()
                0x00000000c0012406                VgaText::getCursorY()
                0x00000000c001240e                VgaText::setCursor(int, int)
                0x00000000c0012425                setActiveTerminal(VgaText*)
                0x00000000c0012470                VgaText::clearScreen()
                0x00000000c00124be                VgaText::setCursorX(int)
                0x00000000c00124d6                VgaText::setCursorY(int)
                0x00000000c00124ee                VgaText::incrementCursor(bool)
                0x00000000c0012542                VgaText::decrementCursor(bool)
                0x00000000c0012564                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0012634                VgaText::putchar(char)
                0x00000000c001271c                VgaText::putx(unsigned int)
                0x00000000c0012762                VgaText::puts(char const*)
                0x00000000c0012788                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00127d4                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c001294e                VgaText::VgaText(char const*)
                0x00000000c001294e                VgaText::VgaText(char const*)
                0x00000000c0012aae                VgaText::receiveKey(unsigned char)
                0x00000000c0012c1c                VgaText::doUpdate()
 *fill*         0x00000000c0012c1d        0x3 
 .text          0x00000000c0012c20      0x224 krnl/tss.32
                0x00000000c0012c20                TSS::TSS()
                0x00000000c0012c20                TSS::TSS()
                0x00000000c0012c30                TSS::setESP(unsigned long)
                0x00000000c0012c44                TSS::flush()
                0x00000000c0012c64                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012e44      0x4ce krnl/unixfile.32
                0x00000000c0012e44                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012e9a                ReservedFilename::isAtty()
                0x00000000c0012eb6                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012f14                UnixFile::getFileDescriptor()
                0x00000000c0012f1c                UnixFile::UnixFile(int)
                0x00000000c0012f1c                UnixFile::UnixFile(int)
                0x00000000c00130d0                ReservedFilename::ReservedFilename(int)
                0x00000000c00130d0                ReservedFilename::ReservedFilename(int)
                0x00000000c0013102                UnixFile::~UnixFile()
                0x00000000c0013102                UnixFile::~UnixFile()
                0x00000000c001319e                UnixFile::~UnixFile()
                0x00000000c00131c6                ReservedFilename::~ReservedFilename()
                0x00000000c00131c6                ReservedFilename::~ReservedFilename()
                0x00000000c00131ea                ReservedFilename::~ReservedFilename()
                0x00000000c0013211                KeGetFileFromDescriptor(int)
 .text          0x00000000c0013312     0x14be krnl/virtmgr.32
                0x00000000c0013312                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c001334c                Virt::getPageState(unsigned long)
                0x00000000c001336f                Virt::allocateKernelVirtualPages(int)
                0x00000000c001348b                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00134ae                Virt::swapIDToSector(unsigned long)
                0x00000000c00134c4                Virt::allocateSwapfilePage()
                0x00000000c0013543                Virt::virtualMemorySetup()
                0x00000000c0013594                Virt::setupPageSwapping(int)
                0x00000000c0013606                VAS::setCPUSpecific(unsigned long)
                0x00000000c0013608                VAS::VAS(VAS*)
                0x00000000c0013608                VAS::VAS(VAS*)
                0x00000000c0013620                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c001364e                VAS::getPageTableEntry(unsigned long)
                0x00000000c001366d                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00137aa                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00137ce                VAS::virtualToPhysical(unsigned long)
                0x00000000c00137e8                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c001382a                VAS::VAS()
                0x00000000c001382a                VAS::VAS()
                0x00000000c0013894                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00138b4                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00138e0                VAS::~VAS()
                0x00000000c00138e0                VAS::~VAS()
                0x00000000c0013a48                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013b50                VAS::allocatePages(int, int)
                0x00000000c0013c42                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013c9c                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013d8c                VAS::VAS(bool)
                0x00000000c0013d8c                VAS::VAS(bool)
                0x00000000c0013f74                VAS::evict(unsigned long)
                0x00000000c0014078                VAS::canLockPage(unsigned long)
                0x00000000c0014092                VAS::unlockPage(unsigned long)
                0x00000000c00140c6                VAS::canLockPages(unsigned long, int)
                0x00000000c0014102                VAS::unlockPages(unsigned long, int)
                0x00000000c001413e                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c001444e                VAS::lockPage(unsigned long)
                0x00000000c00144c0                VAS::lockPages(unsigned long, int)
                0x00000000c00144fc                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0014570                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c001459c                VAS::scanForEviction()
                0x00000000c00146d5                mapVASFirstTime
 .text          0x00000000c00147d0       0x2f sys/alarm.32
                0x00000000c00147d0                SysAlarm(regs*)
 .text          0x00000000c00147ff       0x36 sys/eject.32
                0x00000000c00147ff                SysEject(regs*)
 .text          0x00000000c0014835       0x18 sys/exit.32
                0x00000000c0014835                SysExit(regs*)
 .text          0x00000000c001484d       0x1f sys/getcwd.32
                0x00000000c001484d                SysGetCwd(regs*)
 .text          0x00000000c001486c       0x26 sys/getpid.32
                0x00000000c001486c                SysGetPID(regs*)
 .text          0x00000000c0014892       0x21 sys/getramdata.32
                0x00000000c0014892                SysGetRAMData(regs*)
 .text          0x00000000c00148b3       0xbe sys/getvgaptr.32
                0x00000000c00148b3                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014971        0x3 
 .text          0x00000000c0014974       0xb9 sys/kill.32
                0x00000000c0014974                SysKill(regs*)
 .text          0x00000000c0014a2d       0xa8 sys/loaddll.32
                0x00000000c0014a2d                SysLoadDLL(regs*)
 .text          0x00000000c0014ad5       0x12 sys/pause.32
                0x00000000c0014ad5                SysPause(regs*)
 .text          0x00000000c0014ae7       0x49 sys/pthread.32
                0x00000000c0014ae7                SysPthreadCreate(regs*)
                0x00000000c0014aff                SysPthreadGetTID(regs*)
                0x00000000c0014b09                SysInternalPthreadGetContext(regs*)
                0x00000000c0014b0e                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c0014b13                SysPthreadJoin(regs*)
                0x00000000c0014b18                SysPthreadExit(regs*)
 .text          0x00000000c0014b30       0x68 sys/read.32
                0x00000000c0014b30                SysRead(regs*)
 .text          0x00000000c0014b98       0x29 sys/registersignal.32
                0x00000000c0014b98                SysRegisterSignal(regs*)
 .text          0x00000000c0014bc1      0x1cc sys/registry.32
                0x00000000c0014bc1                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014c05                SysRegistryReadExtent(regs*)
                0x00000000c0014c4d                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014c64                SysRegistryEnterDirectory(regs*)
                0x00000000c0014c7b                SysRegistryGetNext(regs*)
                0x00000000c0014c92                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014ccc                SysRegistryOpen(regs*)
                0x00000000c0014ce0                SysRegistryClose(regs*)
                0x00000000c0014cf7                SysRegistryEasyReadString(regs*)
                0x00000000c0014d43                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014d8d       0x55 sys/sbrk.32
                0x00000000c0014d8d                SysSbrk(regs*)
 .text          0x00000000c0014de2       0x1c sys/setcwd.32
                0x00000000c0014de2                SysSetCwd(regs*)
 .text          0x00000000c0014dfe       0xf1 sys/settime.32
                0x00000000c0014dfe                SysSetTime(regs*)
 .text          0x00000000c0014eef       0x73 sys/symlink.32
                0x00000000c0014eef                SysSymlink(regs*)
 .text          0x00000000c0014f62       0x3e sys/timezone.32
                0x00000000c0014f62                SysTimezone(regs*)
 .text          0x00000000c0014fa0       0xfc sys/truncate.32
                0x00000000c0014fa0                SysTruncate(regs*)
 .text          0x00000000c001509c       0x68 sys/write.32
                0x00000000c001509c                SysWrite(regs*)
 .text          0x00000000c0015104       0x9d sys/wsbe.32
                0x00000000c0015104                SysWsbe(regs*)
 .text          0x00000000c00151a1       0x28 sys/yield.32
                0x00000000c00151a1                SysYield(regs*)
 *fill*         0x00000000c00151c9        0x3 
 .text          0x00000000c00151cc      0x28d thr/alarm.32
                0x00000000c00151cc                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c0015368                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c0015459     0x12cc thr/elf.32
                0x00000000c0015459                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00156e4                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0015985                Thr::runtimeReferenceHelper()
                0x00000000c0015998                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00159e7                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015ca5                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0016408                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001643a                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0016471                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001648b                Thr::loadDLL(char const*, bool)
                0x00000000c00166ec                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0016725       0x5a thr/exec.32
                0x00000000c0016725                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c001677f        0x1 
 .text          0x00000000c0016780     0x1279 thr/prcssthr.32
                0x00000000c0016780                userModeEntryPoint(void*)
                0x00000000c00167ac                changeTSS
                0x00000000c00167dc                switchToThread(ThreadControlBlock*)
                0x00000000c001689c                Process::addArgs(char**)
                0x00000000c0016908                Process::Process(char const*, Process*, char**)
                0x00000000c0016908                Process::Process(char const*, Process*, char**)
                0x00000000c0016b40                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016b40                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016d2c                taskStartupFunction
                0x00000000c0016d38                KeDisablePreemption()
                0x00000000c0016d60                KeRestorePreemption()
                0x00000000c0016d80                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016ec0                Process::createUserThread()
                0x00000000c0016ee0                setupMultitasking(void (*)())
                0x00000000c0017028                schedule()
                0x00000000c00170bc                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00170e8                blockTask(TaskState)
                0x00000000c0017124                waitTask(int, int*, int)
                0x00000000c0017168                milliTenthSleepUntil(unsigned long long)
                0x00000000c001721c                milliTenthSleep(unsigned long long)
                0x00000000c0017234                sleep(unsigned long long)
                0x00000000c0017254                sleep(unsigned int)
                0x00000000c001726c                milliTenthSleep(unsigned int)
                0x00000000c001728c                taskReturned
                0x00000000c00172d4                Thr::processFromPID(int)
                0x00000000c0017380                unblockTask(ThreadControlBlock*)
                0x00000000c0017434                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0017704                cleanerTaskFunction(void*)
                0x00000000c001781c                terminateTask(int)
                0x00000000c001792c                Thr::terminateFromIRQ(int)
 .text          0x00000000c00179f9      0xe86 vm86/vm8086.32
                0x00000000c00179f9                Vm::inbv(unsigned short)
                0x00000000c0017a0c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0017a3e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0017a4e                Vm::getSegment(unsigned int)
                0x00000000c0017a56                Vm::getOffset(unsigned int)
                0x00000000c0017a5b                Vm::mainloop2()
                0x00000000c0017a9c                Vm::mainVm8086Loop(void*)
                0x00000000c0017ab0                Vm::mainloop3(unsigned long)
                0x00000000c0017ae2                Vm::initialise8086()
                0x00000000c0017b26                Vm::resetConventionalMemory8086()
                0x00000000c0017b27                Vm::finish8086()
                0x00000000c0017b98                Vm::getOutput8086(unsigned char*)
                0x00000000c0017bbd                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017d08                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017f4d                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017ff9                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001800a                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001801c                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001802d                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018042                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0018058                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001806d                Vm::faultHandler(regs*)
 *fill*         0x00000000c001887f        0x1 
 .text          0x00000000c0018880      0x45f arch/i386/apic.32
                0x00000000c0018880                IOAPIC::close(int, int, void*)
                0x00000000c0018886                apicGetBase()
                0x00000000c00188c0                IOAPIC::IOAPIC()
                0x00000000c00188c0                IOAPIC::IOAPIC()
                0x00000000c00188e8                apicOpen()
                0x00000000c0018a74                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0018aa6                IOAPIC::read(int)
                0x00000000c0018ace                IOAPIC::open(int, int, void*)
                0x00000000c0018bb4                IOAPIC::write(int, int)
                0x00000000c0018be0                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0018cdf        0x1 
 .text          0x00000000c0018ce0     0x1f41 arch/i386/hal.32
                0x00000000c0018ce0                noCopro(unsigned long)
                0x00000000c0018ce1                HalRestart()
                0x00000000c0018cec                HalShutdown()
                0x00000000c0018ced                HalSleep()
                0x00000000c0018cee                CPU::close(int, int, void*)
                0x00000000c0018cf1                x86ReadCMOS(unsigned char)
                0x00000000c0018d45                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0018da7                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0018dc6                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018de3                AMD_K6_writeback(int, int, int)
                0x00000000c0018ea3                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018f41                cpuidCheckEDX(unsigned int)
                0x00000000c0018f6e                cpuidCheckECX(unsigned int)
                0x00000000c0018f9c                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018fca                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018ff8                HalDetectFeatures()
                0x00000000c0019de3                HalEnableNMI()
                0x00000000c0019df6                HalDisableNMI()
                0x00000000c0019e09                HalGetNMIState()
                0x00000000c0019e0f                x86rdmsr(unsigned int)
                0x00000000c0019e4d                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0019e92                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0019ea8                HalFindRSDP()
                0x00000000c0019f85                HalHandlePageFault(void*, void*)
                0x00000000c0019fb4                HalHandleOpcodeFault(void*, void*)
                0x00000000c0019ff6                HalDisplayDebugInfo(void*)
                0x00000000c001a384                HalReceivedNMI()
                0x00000000c001a41f                HalSystemIdle()
                0x00000000c001a47e                i386SaveCoprocessor(void*)
                0x00000000c001a492                i386LoadCoprocessor(void*)
                0x00000000c001a4a6                x87EmulHandler(regs*, void*)
                0x00000000c001a543                HalInitialiseCoprocessor()
                0x00000000c001a5c7                HalPanic(char const*)
                0x00000000c001a6db                HalQueryPerformanceCounter()
                0x00000000c001a6eb                HalInitialise()
                0x00000000c001a8d3                HalMakeBeep(int)
                0x00000000c001a90d                HalGetRand()
                0x00000000c001a910                HalEndOfInterrupt(int)
                0x00000000c001a93c                CPU::CPU()
                0x00000000c001a93c                CPU::CPU()
                0x00000000c001a9c0                CPU::setupSMEP()
                0x00000000c001a9cc                CPU::setupUMIP()
                0x00000000c001a9d6                CPU::setupTSC()
                0x00000000c001a9e0                CPU::setupLargePages()
                0x00000000c001a9ea                CPU::setupPAT()
                0x00000000c001aa1c                CPU::setupMTRR()
                0x00000000c001aa1e                CPU::setupGlobalPages()
                0x00000000c001aa28                CPU::allowUsermodeDataAccess()
                0x00000000c001aa36                CPU::prohibitUsermodeDataAccess()
                0x00000000c001aa44                CPU::setupSMAP()
                0x00000000c001aa52                CPU::setupFeatures()
                0x00000000c001ab1e                CPU::open(int, int, void*)
 .text          0x00000000c001ac21      0x268 arch/i386/intctrl.32
                0x00000000c001ac21                convertLegacyIRQNumber(int)
                0x00000000c001ac5d                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001aca7                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001ade4                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001ae18                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001ae89        0x3 
 .text          0x00000000c001ae8c      0x2dc arch/i386/pic.32
                0x00000000c001ae8c                picIoWait()
                0x00000000c001ae94                picDisable()
                0x00000000c001aec8                picGetIRQReg(int)
                0x00000000c001af44                picOpen()
                0x00000000c001b0c8                picEOI(int)
 .text          0x00000000c001b168      0x5ed arch/i386/rtc.32
                0x00000000c001b168                RTC::open(int, int, void*)
                0x00000000c001b16c                RTC::close(int, int, void*)
                0x00000000c001b170                RTC::timeInSecondsUTC()
                0x00000000c001b182                RTC::timeInDatetimeUTC()
                0x00000000c001b1a8                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b1e6                RTC::~RTC()
                0x00000000c001b1e6                RTC::~RTC()
                0x00000000c001b20a                RTC::~RTC()
                0x00000000c001b234                RTC::get_update_in_progress_flag()
                0x00000000c001b248                RTC::completeRTCRefresh()
                0x00000000c001b4f6                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b66c                rtcIRQHandler(regs*, void*)
                0x00000000c001b6ac                RTC::RTC()
                0x00000000c001b6ac                RTC::RTC()
 *fill*         0x00000000c001b755        0x3 
 .text          0x00000000c001b758      0x1f4 arch/i386/vga.32
                0x00000000c001b758                HalConsoleScroll(int, int)
                0x00000000c001b860                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001b8c4                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001b94c     0x14f3 fs/fat/vfslink.32
                0x00000000c001b94c                FAT::getName()
                0x00000000c001b954                FAT::tell(void*, unsigned long long*)
                0x00000000c001b990                FAT::stat(void*, unsigned long long*)
                0x00000000c001b9cc                FAT::~FAT()
                0x00000000c001b9cc                FAT::~FAT()
                0x00000000c001b9f0                FAT::~FAT()
                0x00000000c001ba18                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001babc                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001bb9c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001bd80                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001bf9c                FAT::allocateSwapfile(char const*, int)
                0x00000000c001c15c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c2cc                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001c32c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c38c                FAT::close(void*)
                0x00000000c001c3e0                FAT::closeDir(void*)
                0x00000000c001c434                FAT::truncate(void*, unsigned long long)
                0x00000000c001c4a0                FAT::seek(void*, unsigned long long)
                0x00000000c001c4f8                fatWrapperReadDisk
                0x00000000c001c538                fatWrapperWriteDisk
                0x00000000c001c578                fatWrapperIoctl
                0x00000000c001c698                FAT::FAT()
                0x00000000c001c698                FAT::FAT()
                0x00000000c001c6f0                FAT::fixFilepath(char*)
                0x00000000c001c730                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c8a4                FAT::openDir(char const*, void**)
                0x00000000c001c954                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001ca4c                FAT::unlink(char const*)
                0x00000000c001cacc                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001cc84                FAT::rename(char const*, char const*)
                0x00000000c001cd50                FAT::mkdir(char const*)
                0x00000000c001cdd0                FAT::exists(char const*)
 *fill*         0x00000000c001ce3f        0x1 
 .text          0x00000000c001ce40       0x94 fs/iso9660/helper.32
                0x00000000c001ce40                isoReadDiscSectorHelper
                0x00000000c001ce9c                iso_kprintf
                0x00000000c001ceb8                iso_kprintfd
 .text          0x00000000c001ced4      0x71a fs/iso9660/vfslink.32
                0x00000000c001ced4                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001ceda                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001cee0                ISO9660::getName()
                0x00000000c001cee6                ISO9660::closeDir(void*)
                0x00000000c001cef0                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001cef6                ISO9660::unlink(char const*)
                0x00000000c001cefc                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001cf02                ISO9660::rename(char const*, char const*)
                0x00000000c001cf08                ISO9660::mkdir(char const*)
                0x00000000c001cf0e                ISO9660::~ISO9660()
                0x00000000c001cf0e                ISO9660::~ISO9660()
                0x00000000c001cf32                ISO9660::~ISO9660()
                0x00000000c001cf5a                ISO9660::exists(char const*)
                0x00000000c001cf6e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001d054                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001d09c                ISO9660::seek(void*, unsigned long long)
                0x00000000c001d0de                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001d11c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001d16e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d2b0                ISO9660::close(void*)
                0x00000000c001d2e0                ISO9660::openDir(char const*, void**)
                0x00000000c001d3ba                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d4d5                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d554                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001d5c6                ISO9660::ISO9660()
                0x00000000c001d5c6                ISO9660::ISO9660()
 .text          0x00000000c001d5ee      0x26c hal/sound/sndcard.32
                0x00000000c001d5ee                SoundCard::beginPlayback()
                0x00000000c001d5fc                SoundCard::stopPlayback()
                0x00000000c001d60a                SoundCard::SoundCard(char const*)
                0x00000000c001d60a                SoundCard::SoundCard(char const*)
                0x00000000c001d6a8                SoundCard::~SoundCard()
                0x00000000c001d6a8                SoundCard::~SoundCard()
                0x00000000c001d6cc                SoundCard::~SoundCard()
                0x00000000c001d6f6                SoundCard::configureRates(int, int, int)
                0x00000000c001d726                SoundCard::getSamples16(int, short*)
                0x00000000c001d782                SoundCard::getSamples32(int, int*)
                0x00000000c001d808                SoundCard::addChannel(SoundPort*)
                0x00000000c001d846                SoundCard::removeChannel(int)
 *fill*         0x00000000c001d85a        0x2 
 .text          0x00000000c001d85c      0x42f hal/sound/sndport.32
                0x00000000c001d85c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d85c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d8e8                SoundPort::~SoundPort()
                0x00000000c001d8e8                SoundPort::~SoundPort()
                0x00000000c001d91c                SoundPort::unpause()
                0x00000000c001d928                SoundPort::pause()
                0x00000000c001d934                SoundPort::getBufferUsed()
                0x00000000c001d93c                SoundPort::getBufferSize()
                0x00000000c001d944                SoundPort::buffer8(signed char*, int)
                0x00000000c001d9d8                SoundPort::buffer16(short*, int)
                0x00000000c001da6c                SoundPort::buffer32(int*, int)
                0x00000000c001daf8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001dbc8                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 *fill*         0x00000000c001dc8b        0x1 
 .text          0x00000000c001dc8c      0xc25 hw/bus/pci.32
                0x00000000c001dc8c                PCI::open(int, int, void*)
                0x00000000c001dcaa                PCI::close(int, int, void*)
                0x00000000c001dcae                PCI::PCI()
                0x00000000c001dcae                PCI::PCI()
                0x00000000c001dd46                PCI::readBAR8(unsigned int, int)
                0x00000000c001dd62                PCI::readBAR16(unsigned int, int)
                0x00000000c001dd80                PCI::readBAR32(unsigned int, int)
                0x00000000c001dd9c                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001ddbc                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001ddde                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001ddfe                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001de74                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001df1e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001df42                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001df6a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001dfb4                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001dfdc                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001e000                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001e024                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001e04c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e0b0                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001e196                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e460                PCI::checkBus(unsigned char)
                0x00000000c001e484                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e66a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e7e6                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e858                PCI::detect()
 *fill*         0x00000000c001e8b1        0x1 
 .text          0x00000000c001e8b2      0xe52 hw/diskctrl/ide.32
                0x00000000c001e8b2                IDE::close(int, int, void*)
                0x00000000c001e8b6                IDE::IDE()
                0x00000000c001e8b6                IDE::IDE()
                0x00000000c001e8ea                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e8fc                selectDrive(unsigned char, unsigned char)
                0x00000000c001e8fe                IDE::getBase(unsigned char)
                0x00000000c001e910                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001e9d0                IDE::read(unsigned char, unsigned char)
                0x00000000c001ea84                IDE::waitInterrupt(unsigned char)
                0x00000000c001eae7                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001eb03                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001eb20                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001eb6a                IDE::open(int, int, void*)
                0x00000000c001f0c2                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001f192                IDE::detect()
                0x00000000c001f5f6                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f6b0                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f704      0x33f hw/diskctrl/satabus.32
                0x00000000c001f704                SATABus::close(int, int, void*)
                0x00000000c001f708                SATABus::detect()
                0x00000000c001f70a                SATABus::SATABus()
                0x00000000c001f70a                SATABus::SATABus()
                0x00000000c001f790                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f7c2                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f80a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f82a                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f854                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f966                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001fa10                SATABus::open(int, int, void*)
 *fill*         0x00000000c001fa43        0x1 
 .text          0x00000000c001fa44      0x7c1 hw/diskphys/ata.32
                0x00000000c001fa44                ATA::close(int, int, void*)
                0x00000000c001fa68                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001fa6a                ATA::ATA()
                0x00000000c001fa6a                ATA::ATA()
                0x00000000c001fa98                ATA::flush(bool)
                0x00000000c001fae6                ATA::readyForCommand()
                0x00000000c001fb32                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ff3a                ATA::read(unsigned long long, int, void*)
                0x00000000c001ff86                ATA::write(unsigned long long, int, void*)
                0x00000000c001ffd2                ATA::detectCHS()
                0x00000000c001fffc                ATA::open(int, int, void*)
                0x00000000c00201e7                combineCharAndColour(char, unsigned char)
                0x00000000c00201f8                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c0020205        0x1 
 .text          0x00000000c0020206      0x612 hw/diskphys/atapi.32
                0x00000000c0020206                ATAPI::write(unsigned long long, int, void*)
                0x00000000c002020c                ATAPI::close(int, int, void*)
                0x00000000c0020230                ATAPI::ATAPI()
                0x00000000c0020230                ATAPI::ATAPI()
                0x00000000c002025e                ATAPI::readyForCommand()
                0x00000000c00202b0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0020570                ATAPI::diskRemoved()
                0x00000000c00205aa                ATAPI::eject()
                0x00000000c00205f2                ATAPI::diskInserted()
                0x00000000c00205fe                ATAPI::detectMedia()
                0x00000000c00206be                ATAPI::open(int, int, void*)
                0x00000000c002079e                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020818      0x44a hw/diskphys/sata.32
                0x00000000c0020818                SATA::close(int, int, void*)
                0x00000000c002083c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c002083e                SATA::open(int, int, void*)
                0x00000000c00208f6                SATA::SATA()
                0x00000000c00208f6                SATA::SATA()
                0x00000000c0020924                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020baa                SATA::read(unsigned long long, int, void*)
                0x00000000c0020bf6                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020c62      0x5dc hw/diskphys/satapi.32
                0x00000000c0020c62                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020c68                SATAPI::close(int, int, void*)
                0x00000000c0020c8c                SATAPI::SATAPI()
                0x00000000c0020c8c                SATAPI::SATAPI()
                0x00000000c0020cba                SATAPI::diskRemoved()
                0x00000000c0020cbc                SATAPI::diskInserted()
                0x00000000c0020cd8                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020fc2                SATAPI::eject()
                0x00000000c0020ffe                SATAPI::detectMedia()
                0x00000000c0021054                SATAPI::open(int, int, void*)
                0x00000000c0021154                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c002123e        0x2 
 .text          0x00000000c0021240       0xf0 hw/timer/apictimer.32
                0x00000000c0021240                APICTimer::close(int, int, void*)
                0x00000000c0021248                apicTimerHandler(regs*, void*)
                0x00000000c0021270                APICTimer::open(int, int, void*)
                0x00000000c00212e0                APICTimer::write(int)
                0x00000000c0021308                APICTimer::APICTimer()
                0x00000000c0021308                APICTimer::APICTimer()
 .text          0x00000000c0021330      0x1ad hw/timer/pit.32
                0x00000000c0021330                PIT::write(int)
                0x00000000c00213b4                pitHandler(regs*, void*)
                0x00000000c00213dc                PIT::open(int, int, void*)
                0x00000000c002142c                PIT::close(int, int, void*)
                0x00000000c002145c                PIT::PIT()
                0x00000000c002145c                PIT::PIT()
 *fill*         0x00000000c00214dd        0x3 
 .text          0x00000000c00214e0       0x6f arch/i386/avx.32
                0x00000000c00214e0                avxDetect
                0x00000000c002150a                avxSave
                0x00000000c002151b                avxLoad
                0x00000000c002152c                avxInit
                0x00000000c002154e                avxClose
 *fill*         0x00000000c002154f        0x1 
 .text          0x00000000c0021550      0x2b4 arch/i386/interrupt.32
                0x00000000c0021550                isr0
                0x00000000c0021560                isr1
                0x00000000c002156a                isr2
                0x00000000c0021574                isr3
                0x00000000c002157e                isr4
                0x00000000c0021588                isr5
                0x00000000c0021592                isr6
                0x00000000c002159c                isr7
                0x00000000c00215a6                isr8
                0x00000000c00215ae                isr9
                0x00000000c00215b8                isr10
                0x00000000c00215c0                isr11
                0x00000000c00215c8                isr12
                0x00000000c00215d0                isr13
                0x00000000c00215ea                isr14
                0x00000000c00215f2                isr15
                0x00000000c00215fc                isr16
                0x00000000c0021606                isr17
                0x00000000c0021610                isr18
                0x00000000c002161a                irq3
                0x00000000c0021624                irq4
                0x00000000c002162e                irq5
                0x00000000c0021638                irq6
                0x00000000c0021642                irq7
                0x00000000c002164c                irq8
                0x00000000c0021656                irq9
                0x00000000c0021660                irq10
                0x00000000c002166a                irq11
                0x00000000c0021674                irq12
                0x00000000c002167e                irq13
                0x00000000c0021688                irq14
                0x00000000c0021692                irq15
                0x00000000c002169c                irq1
                0x00000000c00216a3                irq2
                0x00000000c00216aa                isr96
                0x00000000c00216b1                irq0
                0x00000000c00216b6                int_common_stub
                0x00000000c00216b6                syscall_common_stub
                0x00000000c00217b4                irq16
                0x00000000c00217be                irq17
                0x00000000c00217c8                irq18
                0x00000000c00217d2                irq19
                0x00000000c00217dc                irq20
                0x00000000c00217e6                irq21
                0x00000000c00217f0                irq22
                0x00000000c00217fa                irq23
 *fill*         0x00000000c0021804        0xc 
 .text          0x00000000c0021810       0x10 arch/i386/rdrand.32
                0x00000000c0021810                i386GetRDRAND
 .text          0x00000000c0021820       0x39 arch/i386/sse.32
                0x00000000c0021820                sseDetect
                0x00000000c0021838                sseSave
                0x00000000c0021840                sseLoad
                0x00000000c0021848                sseInit
                0x00000000c0021858                sseClose
 *fill*         0x00000000c0021859        0x7 
 .text          0x00000000c0021860       0x4f arch/i386/x87.32
                0x00000000c0021866                x87Detect
                0x00000000c0021887                x87Save
                0x00000000c002188e                x87Load
                0x00000000c0021895                x87Init
                0x00000000c00218ae                x87Close
 *fill*         0x00000000c00218af        0x1 
 .text          0x00000000c00218b0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00218d5        0x0 crtn.32
 *fill*         0x00000000c00218d5        0x3 
 .text          0x00000000c00218d8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00218d8                __divdi3
 *fill*         0x00000000c0021a23        0x1 
 .text          0x00000000c0021a24      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021a24                __moddi3
 *fill*         0x00000000c0021ba2        0x2 
 .text          0x00000000c0021ba4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021ba4                __udivdi3
 *fill*         0x00000000c0021ca3        0x1 
 .text          0x00000000c0021ca4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021ca4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021dc0        0x0
 .iplt          0x00000000c0021dc0        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021dbe        0xf
 .init          0x00000000c0021dbe        0x3 crti.32
                0x00000000c0021dbe                _init
 .init          0x00000000c0021dc1        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021dc6        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021dcb        0x2 crtn.32

.fini           0x00000000c0021dcd        0xa
 .fini          0x00000000c0021dcd        0x3 crti.32
                0x00000000c0021dcd                _fini
 .fini          0x00000000c0021dd0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021dd5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021dd8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021dd8       0x1a hal/device.32
                0x00000000c0021dd8                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021dd8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021df2       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021df2       0x2a hal/device.32
                0x00000000c0021df2                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021e1c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021e1c       0xdc hal/device.32
                0x00000000c0021e1c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021ef8       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021ef8       0x42 hal/device.32
                0x00000000c0021ef8                LinkedList<Device>::LinkedList()
                0x00000000c0021ef8                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021f3c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021f3c       0x1c hal/timer.32
                0x00000000c0021f3c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021f58        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021f58        0x7 hal/timer.32
                0x00000000c0021f58                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021f60       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021f60       0xbc hal/timer.32
                0x00000000c0021f60                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002201c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002201c       0xda hal/timer.32
                0x00000000c002201c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c00220f8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c00220f8       0x23 hw/acpi.32
                0x00000000c00220f8                ACPI::~ACPI()
                0x00000000c00220f8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002211c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002211c       0x2a hw/acpi.32
                0x00000000c002211c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0022148        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0022148        0x2 hw/acpi.32
                0x00000000c0022148                LinkedList<Device>::~LinkedList()
                0x00000000c0022148                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002214c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002214c       0x1c hw/acpi.32
                0x00000000c002214c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0022168        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0022168        0x7 hw/acpi.32
                0x00000000c0022168                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0022170       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0022170       0xb8 hw/acpi.32
                0x00000000c0022170                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0022228       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0022228       0x23 krnl/computer.32
                0x00000000c0022228                Computer::~Computer()
                0x00000000c0022228                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002224c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002224c       0x2a krnl/computer.32
                0x00000000c002224c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0022276       0x24
 .text._Z10idleCommonv
                0x00000000c0022276       0x24 krnl/idle.32
                0x00000000c0022276                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002229a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002229a        0x2 krnl/unixfile.32
                0x00000000c002229a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c002229a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002229c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002229c       0x42 krnl/unixfile.32
                0x00000000c002229c                LinkedList<UnixFile>::LinkedList()
                0x00000000c002229c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00222de       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00222de       0xd3 krnl/unixfile.32
                0x00000000c00222de                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00223b2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00223b2        0x7 krnl/unixfile.32
                0x00000000c00223b2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00223ba       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00223ba       0xa1 krnl/unixfile.32
                0x00000000c00223ba                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002245c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002245c        0x8 krnl/unixfile.32
                0x00000000c002245c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022464        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022464        0x8 sys/kill.32
                0x00000000c0022464                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002246c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002246c        0x2 thr/prcssthr.32
                0x00000000c002246c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002246c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022470       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022470       0x49 thr/prcssthr.32
                0x00000000c0022470                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0022470                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00224bc       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00224bc       0x42 thr/prcssthr.32
                0x00000000c00224bc                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00224bc                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN6IOAPICD2Ev
                0x00000000c00224fe       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00224fe       0x23 arch/i386/apic.32
                0x00000000c00224fe                IOAPIC::~IOAPIC()
                0x00000000c00224fe                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022522       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022522       0x2a arch/i386/apic.32
                0x00000000c0022522                IOAPIC::~IOAPIC()

.text._ZN3CPUD2Ev
                0x00000000c002254c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002254c       0x23 arch/i386/hal.32
                0x00000000c002254c                CPU::~CPU()
                0x00000000c002254c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0022570       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0022570       0x2a arch/i386/hal.32
                0x00000000c0022570                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002259a       0x23
 .text._ZN3PCID2Ev
                0x00000000c002259a       0x23 hw/bus/pci.32
                0x00000000c002259a                PCI::~PCI()
                0x00000000c002259a                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00225be       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00225be       0x2a hw/bus/pci.32
                0x00000000c00225be                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00225e8       0x23
 .text._ZN3IDED2Ev
                0x00000000c00225e8       0x23 hw/diskctrl/ide.32
                0x00000000c00225e8                IDE::~IDE()
                0x00000000c00225e8                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002260c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002260c       0x2a hw/diskctrl/ide.32
                0x00000000c002260c                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0022636       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0022636       0x23 hw/diskctrl/satabus.32
                0x00000000c0022636                SATABus::~SATABus()
                0x00000000c0022636                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002265a       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002265a       0x2a hw/diskctrl/satabus.32
                0x00000000c002265a                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0022684       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0022684       0x23 hw/diskphys/ata.32
                0x00000000c0022684                ATA::~ATA()
                0x00000000c0022684                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00226a8       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00226a8       0x2a hw/diskphys/ata.32
                0x00000000c00226a8                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00226d2       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00226d2       0x23 hw/diskphys/atapi.32
                0x00000000c00226d2                ATAPI::~ATAPI()
                0x00000000c00226d2                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00226f6       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00226f6       0x2a hw/diskphys/atapi.32
                0x00000000c00226f6                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022720       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022720       0x23 hw/diskphys/sata.32
                0x00000000c0022720                SATA::~SATA()
                0x00000000c0022720                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0022744       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0022744       0x2a hw/diskphys/sata.32
                0x00000000c0022744                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002276e       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002276e       0x23 hw/diskphys/satapi.32
                0x00000000c002276e                SATAPI::~SATAPI()
                0x00000000c002276e                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0022792       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0022792       0x2a hw/diskphys/satapi.32
                0x00000000c0022792                SATAPI::~SATAPI()

.text._ZN9APICTimerD2Ev
                0x00000000c00227bc       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00227bc       0x23 hw/timer/apictimer.32
                0x00000000c00227bc                APICTimer::~APICTimer()
                0x00000000c00227bc                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00227e0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00227e0       0x2a hw/timer/apictimer.32
                0x00000000c00227e0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002280c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002280c       0x23 hw/timer/pit.32
                0x00000000c002280c                PIT::~PIT()
                0x00000000c002280c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022830       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022830       0x2a hw/timer/pit.32
                0x00000000c0022830                PIT::~PIT()

.rodata         0x00000000c002285a     0x3da6
                0x00000000c002285a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002285a        0x2 
 .ctors         0x00000000c002285c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022860        0x4 krnl/unixfile.32
 .ctors         0x00000000c0022864        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022868        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002286c                end_ctors = .
                0x00000000c002286c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c002286c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0022870        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022870                __DTOR_END__
                0x00000000c0022874                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022874        0xc 
 .rodata        0x00000000c0022880      0x101 acpica/utclib.32
                0x00000000c0022880                AcpiGbl_Ctypes
 *fill*         0x00000000c0022981        0x3 
 .rodata        0x00000000c0022984       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c002299c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c00229e6       0x1a 
 .rodata        0x00000000c0022a00       0xed fs/fat/ff.32
 *fill*         0x00000000c0022aed       0x13 
 .rodata        0x00000000c0022b00      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022f00       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c0022f6f        0x1 
 .rodata.str1.4
                0x00000000c0022f70       0x38 dbg/kconsole.32
 .rodata        0x00000000c0022fa8      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00230f8      0x169 dbg/usban.32
 *fill*         0x00000000c0023261        0x3 
 .rodata.str1.4
                0x00000000c0023264      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002339b      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c00234be       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0023517        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0023518       0x6c fs/vfs.32
                0x00000000c0023518                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0023584       0x1c fs/vfs.32
                0x00000000c0023584                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00235a0       0x1c fs/vfs.32
                0x00000000c00235a0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00235bc       0x2c hal/bus.32
                0x00000000c00235bc                vtable for Bus
 *fill*         0x00000000c00235e8       0x18 
 .rodata        0x00000000c0023600      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0023750       0x3c hal/clock.32
                0x00000000c0023750                vtable for Clock
 .rodata.str1.1
                0x00000000c002378c       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00237f0       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023812       0x15 hal/device.32
 *fill*         0x00000000c0023827        0x1 
 .rodata._ZTV6Device
                0x00000000c0023828       0x2c hal/device.32
                0x00000000c0023828                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023854       0x2c hal/device.32
                0x00000000c0023854                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023880       0x2c hal/diskctrl.32
                0x00000000c0023880                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00238ac       0x38 hal/diskphys.32
                0x00000000c00238ac                vtable for PhysicalDisk
 .rodata        0x00000000c00238e4       0x53 hal/keybrd.32
 *fill*         0x00000000c0023937        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023938       0x34 hal/keybrd.32
                0x00000000c0023938                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002396c       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00239b0       0x2c hal/logidisk.32
                0x00000000c00239b0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00239dc       0x2c hal/mouse.32
                0x00000000c00239dc                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023a08       0x34 hal/nic.32
                0x00000000c0023a08                vtable for NIC
 .rodata.str1.1
                0x00000000c0023a3c        0xb hal/partition.32
 *fill*         0x00000000c0023a47        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023a48       0x44 hal/serial.32
                0x00000000c0023a48                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0023a8c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023ad7        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023adf       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023adf       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0023adf       0x45 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0023b24       0x30 hal/timer.32
                0x00000000c0023b24                vtable for Timer
 .rodata.str1.1
                0x00000000c0023b54       0x3e hal/vcache.32
 *fill*         0x00000000c0023b92        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023b94       0x10 hal/vcache.32
                0x00000000c0023b94                vtable for VCache
 .rodata.str1.1
                0x00000000c0023ba4       0xba hal/video.32
 *fill*         0x00000000c0023c5e        0x2 
 .rodata._ZTV5Video
                0x00000000c0023c60       0x4c hal/video.32
                0x00000000c0023c60                vtable for Video
 .rodata.str1.1
                0x00000000c0023cac      0x1b7 hw/acpi.32
 *fill*         0x00000000c0023e63        0x1 
 .rodata.str1.4
                0x00000000c0023e64       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023eff       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023eff        0x8 hw/acpi.32
 *fill*         0x00000000c0023eff        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023f00       0x2c hw/acpi.32
                0x00000000c0023f00                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023f2c       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023f3f       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023f7f       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023fa0       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0023fd3        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0023fd6       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002404c       0x21 krnl/computer.32
 *fill*         0x00000000c002406d        0x3 
 .rodata.str1.4
                0x00000000c0024070       0x2c krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c002409c       0x2c krnl/computer.32
                0x00000000c002409c                vtable for Computer
 .rodata.str1.1
                0x00000000c00240c8       0x3c krnl/env.32
 .rodata        0x00000000c0024104       0x7e krnl/fault.32
 .rodata.str1.1
                0x00000000c0024182        0x4 krnl/intlformat.32
 *fill*         0x00000000c0024186        0x2 
 .rodata.str1.4
                0x00000000c0024188       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c00241b8        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c00241c7       0x9f krnl/main.32
                                         0xb9 (size before relaxing)
 *fill*         0x00000000c0024266        0x2 
 .rodata.str1.4
                0x00000000c0024268       0x48 krnl/main.32
 .rodata.str1.4
                0x00000000c00242b0      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00243b5       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c002440d       0x39 krnl/pipe.32
 *fill*         0x00000000c0024446        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0024448       0x1c krnl/pipe.32
                0x00000000c0024448                vtable for Pipe
 .rodata.str1.1
                0x00000000c0024464       0x54 krnl/powctrl.32
 .rodata.str1.1
                0x00000000c00244b8       0xa4 krnl/resolve.32
 .rodata.str1.4
                0x00000000c002455c       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c002457b      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c0024683       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00246cb       0x5e krnl/terminal.32
 *fill*         0x00000000c0024729        0x3 
 .rodata._ZTV7VgaText
                0x00000000c002472c       0x1c krnl/terminal.32
                0x00000000c002472c                vtable for VgaText
 .rodata        0x00000000c0024748       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0024783       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0024783       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0024783       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0024783        0x8 krnl/unixfile.32
 *fill*         0x00000000c0024783        0x1 
 .rodata.str1.4
                0x00000000c0024784       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00247a4       0x1c krnl/unixfile.32
                0x00000000c00247a4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00247c0       0x1c krnl/unixfile.32
                0x00000000c00247c0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00247dc      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024d5f      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024ec0       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0024ed5        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024ee4        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0024eee       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0024f0f       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0024f53       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024f68       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024f94       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c0024fa5      0x219 thr/elf.32
                                        0x228 (size before relaxing)
 .rodata.str1.1
                0x00000000c00251be       0x57 thr/prcssthr.32
 *fill*         0x00000000c0025215        0x3 
 .rodata.str1.4
                0x00000000c0025218       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0025310       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0025310       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0025310       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0025310        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0025310       0x61 vm86/vm8086.32
 *fill*         0x00000000c0025371        0x3 
 .rodata.str1.4
                0x00000000c0025374       0x81 vm86/vm8086.32
 *fill*         0x00000000c00253f5        0x3 
 .rodata        0x00000000c00253f8      0x390 vm86/vm8086.32
 .rodata        0x00000000c0025788       0x17 arch/i386/apic.32
 *fill*         0x00000000c002579f        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c00257a0       0x2c arch/i386/apic.32
                0x00000000c00257a0                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00257cc      0x322 arch/i386/hal.32
                                        0x335 (size before relaxing)
 *fill*         0x00000000c0025aee        0x2 
 .rodata.str1.4
                0x00000000c0025af0       0x23 arch/i386/hal.32
 *fill*         0x00000000c0025b13        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025b14       0x2c arch/i386/hal.32
                0x00000000c0025b14                vtable for CPU
 .rodata.str1.4
                0x00000000c0025b40       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025ba1       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025bdf       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0025bf4       0x3c arch/i386/rtc.32
                0x00000000c0025bf4                vtable for RTC
 .rodata.str1.1
                0x00000000c0025c30       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025c71        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025c74       0x6c fs/fat/vfslink.32
                0x00000000c0025c74                vtable for FAT
 .rodata.str1.1
                0x00000000c0025ce0       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0025ce0      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0025e18       0x6c fs/iso9660/vfslink.32
                0x00000000c0025e18                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025e84       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0025ec8       0x34 hal/sound/sndcard.32
                0x00000000c0025ec8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0025efc       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025f3b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025f73       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0026014       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0026078       0x2c hw/bus/pci.32
                0x00000000c0026078                vtable for PCI
 .rodata.str1.1
                0x00000000c00260a4      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c00261c8       0x2c hw/diskctrl/ide.32
                0x00000000c00261c8                vtable for IDE
 .rodata.str1.4
                0x00000000c00261f4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0026218       0x2c hw/diskctrl/satabus.32
                0x00000000c0026218                vtable for SATABus
 .rodata.str1.1
                0x00000000c0026244       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c00262ff        0x1 
 .rodata._ZTV3ATA
                0x00000000c0026300       0x38 hw/diskphys/ata.32
                0x00000000c0026300                vtable for ATA
 .rodata.str1.1
                0x00000000c0026338        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0026345        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0026348       0x38 hw/diskphys/atapi.32
                0x00000000c0026348                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0026380       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0026408       0x38 hw/diskphys/sata.32
                0x00000000c0026408                vtable for SATA
 .rodata.str1.1
                0x00000000c0026440       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c002652a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c002652c       0x38 hw/diskphys/satapi.32
                0x00000000c002652c                vtable for SATAPI
 .rodata.str1.1
                0x00000000c0026564       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002657f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0026580       0x30 hw/timer/apictimer.32
                0x00000000c0026580                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00265b0       0x1d hw/timer/pit.32
 *fill*         0x00000000c00265cd        0x3 
 .rodata._ZTV3PIT
                0x00000000c00265d0       0x30 hw/timer/pit.32
                0x00000000c00265d0                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0026600      0xa85
 *(.data)
 .data          0x00000000c0026600        0x0 crti.32
 .data          0x00000000c0026600        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0026600                __dso_handle
 .data          0x00000000c0026604        0x0 acpica/utclib.32
 .data          0x00000000c0026604        0x0 krnl/malloc.32
 .data          0x00000000c0026604        0x0 libk/ctype.32
 .data          0x00000000c0026604        0x0 libk/string.32
 .data          0x00000000c0026604        0x0 arch/i386/cc.32
 .data          0x00000000c0026604        0x0 fs/fat/diskio.32
 .data          0x00000000c0026604        0x0 fs/fat/ff.32
 .data          0x00000000c0026604        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0026604        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0026604        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0026604        0x0 dbg/kconsole.32
 *fill*         0x00000000c0026604       0x1c 
 .data          0x00000000c0026620       0x28 dbg/usban.32
                0x00000000c0026620                KiUsbanTypeMismatchTypes
 .data          0x00000000c0026648        0x0 fs/symlink.32
 .data          0x00000000c0026648        0x0 fs/vfs.32
 .data          0x00000000c0026648        0x0 hal/bus.32
 .data          0x00000000c0026648        0x0 hal/buzzer.32
 .data          0x00000000c0026648        0x0 hal/clock.32
 .data          0x00000000c0026648        0x0 hal/device.32
 .data          0x00000000c0026648        0x0 hal/diskctrl.32
 .data          0x00000000c0026648        0x0 hal/diskphys.32
 .data          0x00000000c0026648        0x0 hal/fpu.32
 .data          0x00000000c0026648        0x0 hal/keybrd.32
 .data          0x00000000c0026648        0x0 hal/logidisk.32
 .data          0x00000000c0026648        0x0 hal/mouse.32
 .data          0x00000000c0026648        0x0 hal/nic.32
 .data          0x00000000c0026648        0x0 hal/partition.32
 .data          0x00000000c0026648        0x0 hal/serial.32
 .data          0x00000000c0026648        0x0 hal/timer.32
 .data          0x00000000c0026648        0x0 hal/vcache.32
 .data          0x00000000c0026648        0x0 hal/video.32
 .data          0x00000000c0026648       0x10 hw/acpi.32
                0x00000000c0026648                legacyIRQRemaps
 .data          0x00000000c0026658        0x0 krnl/assert.32
 .data          0x00000000c0026658        0x0 krnl/atexit.32
 .data          0x00000000c0026658        0x0 krnl/bootflags.32
 .data          0x00000000c0026658        0x0 krnl/bootmsg.32
 .data          0x00000000c0026658        0x4 krnl/c++.32
                0x00000000c0026658                __stack_chk_guard
 .data          0x00000000c002665c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002665c        0x4 
 .data          0x00000000c0026660      0x100 krnl/cm.32
                0x00000000c0026660                CmComponents
 .data          0x00000000c0026760        0x0 krnl/compat.32
 .data          0x00000000c0026760        0x0 krnl/computer.32
 .data          0x00000000c0026760      0x400 krnl/crc32.32
                0x00000000c0026760                KiPolyLookupCRC32
 .data          0x00000000c0026b60       0x4d krnl/env.32
                0x00000000c0026b60                defaultSysEnv
 .data          0x00000000c0026bad        0x0 krnl/fault.32
 .data          0x00000000c0026bad        0x0 krnl/gdt.32
 .data          0x00000000c0026bad        0x0 krnl/idle.32
 .data          0x00000000c0026bad        0x0 krnl/idt.32
 .data          0x00000000c0026bad        0x0 krnl/inlines.32
 .data          0x00000000c0026bad        0x0 krnl/intlformat.32
 .data          0x00000000c0026bad        0x0 krnl/intops.32
 *fill*         0x00000000c0026bad        0x3 
 .data          0x00000000c0026bb0        0x4 krnl/kheap.32
 .data          0x00000000c0026bb4        0x0 krnl/mailbox.32
 .data          0x00000000c0026bb4        0x0 krnl/main.32
 .data          0x00000000c0026bb4        0x0 krnl/mutex.32
 .data          0x00000000c0026bb4        0x0 krnl/panic.32
 .data          0x00000000c0026bb4        0x4 krnl/physmgr.32
                0x00000000c0026bb4                Phys::bitmap
 .data          0x00000000c0026bb8        0x0 krnl/pipe.32
 .data          0x00000000c0026bb8        0x0 krnl/powctrl.32
 .data          0x00000000c0026bb8        0x0 krnl/random.32
 .data          0x00000000c0026bb8        0x0 krnl/resolve.32
 .data          0x00000000c0026bb8        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026bb8        0x8 
 .data          0x00000000c0026bc0       0x4c krnl/signal.32
                0x00000000c0026bc0                KiDefaultSignalHandlers
 *fill*         0x00000000c0026c0c       0x14 
 .data          0x00000000c0026c20      0x124 krnl/syscalls.32
                0x00000000c0026c20                systemCallHandlers
 *fill*         0x00000000c0026d44       0x1c 
 .data          0x00000000c0026d60       0x60 krnl/terminal.32
                0x00000000c0026d60                VgaText::hiddenOut
                0x00000000c0026d80                ansiToVGAMappings
 .data          0x00000000c0026dc0        0x0 krnl/tss.32
 .data          0x00000000c0026dc0        0x4 krnl/unixfile.32
                0x00000000c0026dc0                UnixFile::nextFd
 .data          0x00000000c0026dc4       0x15 krnl/virtmgr.32
                0x00000000c0026dc4                Virt::pageAllocPtr
                0x00000000c0026dc8                Virt::bitmap
                0x00000000c0026dcc                Virt::swapfileSectorsPerPage
                0x00000000c0026dd0                Virt::swapfileLength
                0x00000000c0026dd4                Virt::swapfileSector
                0x00000000c0026dd8                Virt::swapfileDrive
 .data          0x00000000c0026dd9        0x0 sys/alarm.32
 .data          0x00000000c0026dd9        0x0 sys/eject.32
 .data          0x00000000c0026dd9        0x0 sys/exit.32
 .data          0x00000000c0026dd9        0x0 sys/getcwd.32
 .data          0x00000000c0026dd9        0x0 sys/getpid.32
 .data          0x00000000c0026dd9        0x0 sys/getramdata.32
 .data          0x00000000c0026dd9        0x0 sys/getvgaptr.32
 .data          0x00000000c0026dd9        0x0 sys/kill.32
 .data          0x00000000c0026dd9        0x0 sys/loaddll.32
 .data          0x00000000c0026dd9        0x0 sys/pause.32
 .data          0x00000000c0026dd9        0x0 sys/pthread.32
 .data          0x00000000c0026dd9        0x0 sys/read.32
 .data          0x00000000c0026dd9        0x0 sys/registersignal.32
 .data          0x00000000c0026dd9        0x0 sys/registry.32
 .data          0x00000000c0026dd9        0x0 sys/sbrk.32
 .data          0x00000000c0026dd9        0x0 sys/setcwd.32
 .data          0x00000000c0026dd9        0x0 sys/settime.32
 .data          0x00000000c0026dd9        0x0 sys/symlink.32
 .data          0x00000000c0026dd9        0x0 sys/timezone.32
 .data          0x00000000c0026dd9        0x0 sys/truncate.32
 .data          0x00000000c0026dd9        0x0 sys/write.32
 .data          0x00000000c0026dd9        0x0 sys/wsbe.32
 .data          0x00000000c0026dd9        0x0 sys/yield.32
 .data          0x00000000c0026dd9        0x0 thr/alarm.32
 .data          0x00000000c0026dd9        0x0 thr/elf.32
 .data          0x00000000c0026dd9        0x0 thr/exec.32
 *fill*         0x00000000c0026dd9        0x3 
 .data          0x00000000c0026ddc        0x4 thr/prcssthr.32
                0x00000000c0026ddc                Thr::nextPID
 .data          0x00000000c0026de0        0x0 vm86/vm8086.32
 .data          0x00000000c0026de0        0x0 arch/i386/apic.32
 .data          0x00000000c0026de0      0x2a4 arch/i386/hal.32
                0x00000000c0026de0                exceptionNames
                0x00000000c0027080                lastCode
 .data          0x00000000c0027084        0x0 arch/i386/intctrl.32
 .data          0x00000000c0027084        0x0 arch/i386/pic.32
 .data          0x00000000c0027084        0x0 arch/i386/rtc.32
 .data          0x00000000c0027084        0x0 arch/i386/vga.32
 .data          0x00000000c0027084        0x0 fs/fat/vfslink.32
 .data          0x00000000c0027084        0x0 fs/iso9660/helper.32
 .data          0x00000000c0027084        0x1 fs/iso9660/vfslink.32
                0x00000000c0027084                recentDriveletter
 .data          0x00000000c0027085        0x0 hal/sound/sndcard.32
 .data          0x00000000c0027085        0x0 hal/sound/sndport.32
 .data          0x00000000c0027085        0x0 hw/bus/pci.32
 .data          0x00000000c0027085        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0027085        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0027085        0x0 hw/diskphys/ata.32
 .data          0x00000000c0027085        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0027085        0x0 hw/diskphys/sata.32
 .data          0x00000000c0027085        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0027085        0x0 hw/timer/apictimer.32
 .data          0x00000000c0027085        0x0 hw/timer/pit.32
 .data          0x00000000c0027085        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0027085        0x0 crtn.32
 .data          0x00000000c0027085        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0027085        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0027085        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0027085        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0027088        0x0
 .got           0x00000000c0027088        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0027088        0x0
 .got.plt       0x00000000c0027088        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0027088        0x0
 .igot.plt      0x00000000c0027088        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0027088        0x0
 .tm_clone_table
                0x00000000c0027088        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0027088        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0027085      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0027085        0x3 
 .eh_frame      0x00000000c0027088        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0027088        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0027088       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00270e0       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0027120       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002718c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0028000       0x7d
 *(userkernel)
 userkernel     0x00000000c0028000       0x52 krnl/signal.32
                0x00000000c0028000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002802c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0028052       0x2b krnl/syscalls.32
                0x00000000c0028052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0029000        0x1
 *(align_previous)
 align_previous
                0x00000000c0029000        0x1 krnl/signal.32
                0x00000000c0029000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0029004        0x0
 .rel.got       0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0029001     0x749b
                0x00000000c0029001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0029001       0x1f 
 COMMON         0x00000000c0029020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0029020                dcache
                0x00000000c0029060                cdDriveLetter
                0x00000000c0029080                icache
 *(.bss)
 .bss           0x00000000c00290c0        0x0 crti.32
 .bss           0x00000000c00290c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00290e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00290e4       0x1c 
 .bss           0x00000000c0029100      0x378 krnl/malloc.32
 .bss           0x00000000c0029478        0x0 libk/ctype.32
 .bss           0x00000000c0029478        0x0 libk/string.32
 .bss           0x00000000c0029478        0x0 arch/i386/cc.32
 .bss           0x00000000c0029478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0029478        0x8 
 .bss           0x00000000c0029480       0x88 fs/fat/ff.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0029508       0x18 
 .bss           0x00000000c0029520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0029eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0029eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0029eb8        0x8 
 .bss           0x00000000c0029ec0     0x2444 fs/symlink.32
                0x00000000c0029ec0                kiNumWaitingRoomSymlinks
                0x00000000c0029ee0                kiNewlyCreatedIDs
                0x00000000c0029f00                kiNewlyCreatedSymlinks
                0x00000000c002a300                kiSymlinkHashTable
                0x00000000c002c300                kiBaseSymlinkID
 .bss           0x00000000c002c304        0x4 fs/vfs.32
                0x00000000c002c304                installedFilesystems
 .bss           0x00000000c002c308        0x0 hal/bus.32
 .bss           0x00000000c002c308        0x0 hal/buzzer.32
 *fill*         0x00000000c002c308       0x18 
 .bss           0x00000000c002c320      0x348 hal/clock.32
                0x00000000c002c320                keLoadedTimezones
                0x00000000c002c324                keNumberOfTimezones
                0x00000000c002c340                keTimezoneStrings
                0x00000000c002c660                keDstOn
                0x00000000c002c661                keTimezoneHalfHourOffset
                0x00000000c002c664                keTimezoneHourOffset
 .bss           0x00000000c002c668        0x0 hal/device.32
 .bss           0x00000000c002c668        0x0 hal/diskctrl.32
 .bss           0x00000000c002c668        0x0 hal/diskphys.32
 .bss           0x00000000c002c668        0x0 hal/fpu.32
 *fill*         0x00000000c002c668       0x18 
 .bss           0x00000000c002c680      0x428 hal/keybrd.32
                0x00000000c002c680                keyboardWaitingTaskList
                0x00000000c002c684                keyboardSetupYet
                0x00000000c002c688                guiKeyboardHandler
                0x00000000c002c6a0                keystates
 *fill*         0x00000000c002caa8       0x18 
 .bss           0x00000000c002cac0       0x88 hal/logidisk.32
                0x00000000c002cac0                diskAssignments
                0x00000000c002cae0                disks
 .bss           0x00000000c002cb48        0x4 hal/mouse.32
                0x00000000c002cb48                guiMouseHandler
 .bss           0x00000000c002cb4c        0x0 hal/nic.32
 .bss           0x00000000c002cb4c        0x0 hal/partition.32
 .bss           0x00000000c002cb4c        0x0 hal/serial.32
 *fill*         0x00000000c002cb4c        0x4 
 .bss           0x00000000c002cb50        0x8 hal/timer.32
                0x00000000c002cb50                milliTenthsSinceBoot
 .bss           0x00000000c002cb58        0x0 hal/vcache.32
 .bss           0x00000000c002cb58        0x4 hal/video.32
                0x00000000c002cb58                screen
 *fill*         0x00000000c002cb5c        0x4 
 .bss           0x00000000c002cb60      0x480 hw/acpi.32
                0x00000000c002cb60                nextACPITable
                0x00000000c002cb80                acpiTables
                0x00000000c002cd80                usingXSDT
                0x00000000c002cd84                RSDTpointer
                0x00000000c002cd88                RSDPpointer
                0x00000000c002cd8c                nextAPICNMI
                0x00000000c002cda0                apicNMIInfo
                0x00000000c002ce20                legacyIRQFlags
                0x00000000c002ce40                ioapicDiscoveryNumber
                0x00000000c002ce60                ioapicFoundInMADT
                0x00000000c002ce80                ioapicAddresses
                0x00000000c002cf00                ioapicGSIBase
                0x00000000c002cf80                processorDiscoveryNumber
                0x00000000c002cfa0                matchingAPICID
                0x00000000c002cfc0                processorID
 .bss           0x00000000c002cfe0        0x0 krnl/assert.32
 .bss           0x00000000c002cfe0       0xe0 krnl/atexit.32
                0x00000000c002cfe0                KiNextAtexitHandler
                0x00000000c002d000                KiAtexitContexts
                0x00000000c002d060                KiAtexitHandlers
 .bss           0x00000000c002d0c0        0x4 krnl/bootflags.32
                0x00000000c002d0c0                keBootSettings
 .bss           0x00000000c002d0c4        0x0 krnl/bootmsg.32
 .bss           0x00000000c002d0c4        0x0 krnl/c++.32
 .bss           0x00000000c002d0c4        0x0 krnl/cdefs.32
 .bss           0x00000000c002d0c4        0x4 krnl/cm.32
 .bss           0x00000000c002d0c8        0x0 krnl/compat.32
 .bss           0x00000000c002d0c8        0x6 krnl/computer.32
                0x00000000c002d0c8                computer
                0x00000000c002d0cc                KeIsPreemptionOn
                0x00000000c002d0cd                KeIsSchedulingOn
 .bss           0x00000000c002d0ce        0x0 krnl/crc32.32
 *fill*         0x00000000c002d0ce        0x2 
 .bss           0x00000000c002d0d0        0x8 krnl/env.32
                0x00000000c002d0d0                KeUserEnv
                0x00000000c002d0d4                KeSystemEnv
 *fill*         0x00000000c002d0d8        0x8 
 .bss           0x00000000c002d0e0     0x2000 krnl/fault.32
                0x00000000c002d0e0                keInterruptContexts
                0x00000000c002e0e0                keInterruptHandlers
 .bss           0x00000000c002f0e0        0x6 krnl/gdt.32
                0x00000000c002f0e0                gdtDescr
 .bss           0x00000000c002f0e6        0x0 krnl/idle.32
 *fill*         0x00000000c002f0e6        0x2 
 .bss           0x00000000c002f0e8        0x6 krnl/idt.32
                0x00000000c002f0e8                idtDescr
 .bss           0x00000000c002f0ee        0x0 krnl/inlines.32
 *fill*         0x00000000c002f0ee       0x12 
 .bss           0x00000000c002f100       0x24 krnl/intlformat.32
                0x00000000c002f100                keLocale
 .bss           0x00000000c002f124        0x0 krnl/intops.32
 .bss           0x00000000c002f124        0x0 krnl/kheap.32
 .bss           0x00000000c002f124        0x0 krnl/mailbox.32
 .bss           0x00000000c002f124        0x0 krnl/main.32
 .bss           0x00000000c002f124        0x0 krnl/mutex.32
 .bss           0x00000000c002f124        0x1 krnl/panic.32
                0x00000000c002f124                KeIsKernelInPanic
 *fill*         0x00000000c002f125        0x3 
 .bss           0x00000000c002f128       0x29 krnl/physmgr.32
                0x00000000c002f128                Phys::forbidEvictions
                0x00000000c002f12c                Phys::currentPagePointer
                0x00000000c002f130                Phys::highestMem
                0x00000000c002f134                Phys::oldPercent
                0x00000000c002f138                Phys::usedPages
                0x00000000c002f13c                Phys::usablePages
                0x00000000c002f140                Phys::dmaUsage
 .bss           0x00000000c002f151        0x0 krnl/pipe.32
 *fill*         0x00000000c002f151        0xf 
 .bss           0x00000000c002f160       0x48 krnl/powctrl.32
                0x00000000c002f160                keSleepFunction
                0x00000000c002f164                keRestartFunction
                0x00000000c002f168                keShutdownFunction
                0x00000000c002f16c                powCtrlOnBattery
                0x00000000c002f180                currentPowerSettings
                0x00000000c002f1a4                secondsSinceLastUserIO
 .bss           0x00000000c002f1a8        0x8 krnl/random.32
                0x00000000c002f1a8                kiRandSeed
 .bss           0x00000000c002f1b0        0x0 krnl/resolve.32
 .bss           0x00000000c002f1b0        0x0 krnl/semaphore.32
 .bss           0x00000000c002f1b0        0x0 krnl/signal.32
 .bss           0x00000000c002f1b0        0x0 krnl/syscalls.32
 .bss           0x00000000c002f1b0        0x9 krnl/terminal.32
                0x00000000c002f1b0                terminalCycle
                0x00000000c002f1b4                activeTerminal
                0x00000000c002f1b8                VgaText::graphicMode
 *fill*         0x00000000c002f1b9        0x1 
 .bss           0x00000000c002f1ba        0x2 krnl/tss.32
                0x00000000c002f1ba                doubleFaultSelector
 *fill*         0x00000000c002f1bc        0x4 
 .bss           0x00000000c002f1c0       0x84 krnl/unixfile.32
                0x00000000c002f1c0                sfileLpt
                0x00000000c002f200                sfileCom
                0x00000000c002f224                sfileNul
                0x00000000c002f228                sfilePnt
                0x00000000c002f22c                sfileAux
                0x00000000c002f230                sfileCon
                0x00000000c002f234                initialFilesAdded
                0x00000000c002f238                unixFileLinkedList
 .bss           0x00000000c002f244       0x10 krnl/virtmgr.32
                0x00000000c002f244                twswaps
                0x00000000c002f248                swapBalance
                0x00000000c002f24c                Virt::swapfileBitmap
                0x00000000c002f250                keFirstVAS
 .bss           0x00000000c002f254        0x0 sys/alarm.32
 .bss           0x00000000c002f254        0x0 sys/eject.32
 .bss           0x00000000c002f254        0x0 sys/exit.32
 .bss           0x00000000c002f254        0x0 sys/getcwd.32
 .bss           0x00000000c002f254        0x0 sys/getpid.32
 .bss           0x00000000c002f254        0x0 sys/getramdata.32
 .bss           0x00000000c002f254        0x0 sys/getvgaptr.32
 .bss           0x00000000c002f254        0x0 sys/kill.32
 .bss           0x00000000c002f254        0x0 sys/loaddll.32
 .bss           0x00000000c002f254        0x0 sys/pause.32
 .bss           0x00000000c002f254        0x0 sys/pthread.32
 .bss           0x00000000c002f254        0x0 sys/read.32
 .bss           0x00000000c002f254        0x0 sys/registersignal.32
 .bss           0x00000000c002f254        0x0 sys/registry.32
 .bss           0x00000000c002f254        0x0 sys/sbrk.32
 .bss           0x00000000c002f254        0x0 sys/setcwd.32
 .bss           0x00000000c002f254        0x0 sys/settime.32
 .bss           0x00000000c002f254        0x0 sys/symlink.32
 .bss           0x00000000c002f254        0x0 sys/timezone.32
 .bss           0x00000000c002f254        0x0 sys/truncate.32
 .bss           0x00000000c002f254        0x0 sys/write.32
 .bss           0x00000000c002f254        0x0 sys/wsbe.32
 .bss           0x00000000c002f254        0x0 sys/yield.32
 .bss           0x00000000c002f254        0x0 thr/alarm.32
 *fill*         0x00000000c002f254        0xc 
 .bss           0x00000000c002f260      0x7a4 thr/elf.32
                0x00000000c002f260                Thr::driverLookupNext
                0x00000000c002f280                Thr::driverLookupLen
                0x00000000c002f480                Thr::driverLookupAddr
                0x00000000c002f680                Thr::driverNameLookup
                0x00000000c002f880                Thr::kernelSymbols
                0x00000000c002f900                Thr::kernelStringTable
                0x00000000c002f980                Thr::kernelSymbolTable
                0x00000000c002fa00                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002fa04        0x0 thr/exec.32
 *fill*         0x00000000c002fa04        0x4 
 .bss           0x00000000c002fa08       0x70 thr/prcssthr.32
                0x00000000c002fa08                KiRestorePreemptionValue
                0x00000000c002fa0c                KiPreemptionDisableCounter
                0x00000000c002fa10                cleanerThread
                0x00000000c002fa14                weNeedTheCleanerToNotBlock
                0x00000000c002fa18                retValLockStuff
                0x00000000c002fa1c                retValSchedLock
                0x00000000c002fa20                lockStuffLock
                0x00000000c002fa24                schedulerLock
                0x00000000c002fa28                taskSwitchesPostponedFlag
                0x00000000c002fa2c                postponeTaskSwitchesCounter
                0x00000000c002fa30                irqDisableCounter
                0x00000000c002fa34                terminatedTaskList
                0x00000000c002fa40                sleepingTaskList
                0x00000000c002fa4c                taskList
                0x00000000c002fa58                kernelProcess
 *fill*         0x00000000c002fa78        0x8 
 .bss           0x00000000c002fa80       0x40 vm86/vm8086.32
                0x00000000c002fa80                Vm::started8086Yet
                0x00000000c002fa84                Vm::vmRetV
                0x00000000c002fa88                Vm::vmDone
                0x00000000c002fa89                Vm::vmReady
                0x00000000c002fa8c                Vm::vm86Thread
                0x00000000c002fa90                Vm::vmToHostCommsPtr
                0x00000000c002faa0                Vm::vmToHostComms
 .bss           0x00000000c002fac0       0x41 arch/i386/apic.32
                0x00000000c002fac0                noOfIOAPICs
                0x00000000c002fae0                ioapics
                0x00000000c002fb00                IOAPICsSetupYet
 *fill*         0x00000000c002fb01        0x3 
 .bss           0x00000000c002fb04       0x50 arch/i386/hal.32
                0x00000000c002fb04                guiPanicHandler
                0x00000000c002fb08                fpuOwner
                0x00000000c002fb0c                coproLoadFunc
                0x00000000c002fb10                coproSaveFunc
                0x00000000c002fb14                lastD
                0x00000000c002fb18                lastC
                0x00000000c002fb1c                lastB
                0x00000000c002fb20                lastA
                0x00000000c002fb24                HalPageWriteCombiningFlag
                0x00000000c002fb28                HalPageGlobalFlag
                0x00000000c002fb2c                keNMIEnabled
                0x00000000c002fb30                vendorIDString
                0x00000000c002fb3d                familyID
                0x00000000c002fb3e                model
                0x00000000c002fb3f                processorType
                0x00000000c002fb40                steppingID
                0x00000000c002fb44                vendor
                0x00000000c002fb48                opcodeDetectionMode
                0x00000000c002fb4c                features
 .bss           0x00000000c002fb54        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002fb54        0x0 arch/i386/pic.32
 .bss           0x00000000c002fb54        0x2 arch/i386/rtc.32
 .bss           0x00000000c002fb56        0x0 arch/i386/vga.32
 *fill*         0x00000000c002fb56        0xa 
 .bss           0x00000000c002fb60       0xf0 fs/fat/vfslink.32
                0x00000000c002fb60                FAT::fats
                0x00000000c002fb80                FAT::vfsToFatRemaps
                0x00000000c002fc00                fatToVFSRemaps
 .bss           0x00000000c002fc50        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002fc50       0x10 
 .bss           0x00000000c002fc60      0x820 fs/iso9660/vfslink.32
                0x00000000c002fc60                iso9660Owner
                0x00000000c002fc64                recentSector
                0x00000000c002fc80                recentBuffer
 .bss           0x00000000c0030480        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0030480        0x0 hal/sound/sndport.32
 .bss           0x00000000c0030480        0xd hw/bus/pci.32
                0x00000000c0030480                thePCI
 .bss           0x00000000c003048d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c003048d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c003048d        0x3 
 .bss           0x00000000c0030490        0x8 hw/diskphys/ata.32
                0x00000000c0030490                ataSectorsWritten
                0x00000000c0030494                ataSectorsRead
 .bss           0x00000000c0030498        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0030498        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0030498        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c0030498        0x0 hw/timer/apictimer.32
 .bss           0x00000000c0030498        0x4 hw/timer/pit.32
                0x00000000c0030498                pitFreq
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c003049c        0x0 crtn.32
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c003049c                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0037937                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
