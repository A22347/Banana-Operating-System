Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f59a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x600 fs/symlink.32
                0x00000000c000ad14                KiCreateSymlinkID()
                0x00000000c000ad7f                KiFlushSymlinkChanges()
                0x00000000c000ae52                KiDeinitialiseSymlinks(void*)
                0x00000000c000ae57                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000aec6                KiIsSymlinkRegistered(char const*)
                0x00000000c000af0d                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b122                KeCreateSymlink(char const*, char const*)
                0x00000000c000b25e                KeInitialiseSymlinks()
 .text          0x00000000c000b314      0xd6c fs/vfs.32
                0x00000000c000b314                File::read(unsigned long long, void*, int*)
                0x00000000c000b36c                File::write(unsigned long long, void*, int*)
                0x00000000c000b3c4                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b41c                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b44a                File::isAtty()
                0x00000000c000b44e                Directory::isAtty()
                0x00000000c000b452                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b458                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b45e                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b464                File::~File()
                0x00000000c000b464                File::~File()
                0x00000000c000b488                File::~File()
                0x00000000c000b4b2                Directory::~Directory()
                0x00000000c000b4b2                Directory::~Directory()
                0x00000000c000b4d6                Directory::~Directory()
                0x00000000c000b500                Filesystem::Filesystem()
                0x00000000c000b500                Filesystem::Filesystem()
                0x00000000c000b524                Filesystem::~Filesystem()
                0x00000000c000b524                Filesystem::~Filesystem()
                0x00000000c000b532                Filesystem::~Filesystem()
                0x00000000c000b556                Fs::getcwd(Process*, char*, int)
                0x00000000c000b580                Fs::initVFS()
                0x00000000c000b5aa                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000b7c8                File::File(char const*, Process*, bool)
                0x00000000c000b7c8                File::File(char const*, Process*, bool)
                0x00000000c000b8a6                File::File(char const*, Process*)
                0x00000000c000b8a6                File::File(char const*, Process*)
                0x00000000c000b8c4                File::open(FileOpenMode)
                0x00000000c000b922                File::close()
                0x00000000c000b982                File::seek(unsigned long long)
                0x00000000c000b9d8                File::truncate(unsigned long long)
                0x00000000c000ba2e                File::tell(unsigned long long*)
                0x00000000c000ba7e                File::rewind()
                0x00000000c000ba92                File::unlink()
                0x00000000c000bade                File::rename(char const*)
                0x00000000c000bb2c                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bb88                File::exists()
                0x00000000c000bbc6                File::stat(unsigned long long*, bool*)
                0x00000000c000bc27                Fs::setcwd(Process*, char*)
                0x00000000c000bd86                Directory::Directory(char const*, Process*)
                0x00000000c000bd86                Directory::Directory(char const*, Process*)
                0x00000000c000be4e                Directory::open()
                0x00000000c000beaa                Directory::close()
                0x00000000c000bf0a                Directory::unlink()
                0x00000000c000bf56                Directory::rename(char const*)
                0x00000000c000bfa4                Directory::exists()
                0x00000000c000bfe2                Directory::read(dirent*)
                0x00000000c000c02e                Directory::create()
                0x00000000c000c07a                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c080       0x86 hal/bus.32
                0x00000000c000c080                Bus::Bus(char const*)
                0x00000000c000c080                Bus::Bus(char const*)
                0x00000000c000c0b8                Bus::~Bus()
                0x00000000c000c0b8                Bus::~Bus()
                0x00000000c000c0dc                Bus::~Bus()
 .text          0x00000000c000c106       0x96 hal/buzzer.32
                0x00000000c000c106                beepThread(void*)
                0x00000000c000c143                Krnl::beep(int, int, bool)
 .text          0x00000000c000c19c      0x465 hal/clock.32
                0x00000000c000c19c                User::loadClockSettings(int)
                0x00000000c000c1ee                Clock::Clock(char const*)
                0x00000000c000c1ee                Clock::Clock(char const*)
                0x00000000c000c224                Clock::~Clock()
                0x00000000c000c224                Clock::~Clock()
                0x00000000c000c248                Clock::~Clock()
                0x00000000c000c272                Clock::timeInSecondsLocal()
                0x00000000c000c2ba                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c313                datetimeToSeconds(datetime_t)
                0x00000000c000c438                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c498                secondsToDatetime(unsigned long long)
                0x00000000c000c5dc                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c601        0x1 
 .text          0x00000000c000c602      0x464 hal/device.32
                0x00000000c000c602                Device::hibernate()
                0x00000000c000c604                Device::wake()
                0x00000000c000c606                Device::detect()
                0x00000000c000c608                Device::disableLegacy()
                0x00000000c000c60a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c60c                DriverlessDevice::close(int, int, void*)
                0x00000000c000c610                DriverlessDevice::detect()
                0x00000000c000c612                DriverlessDevice::open(int, int, void*)
                0x00000000c000c626                Device::~Device()
                0x00000000c000c626                Device::~Device()
                0x00000000c000c634                Device::~Device()
                0x00000000c000c65c                Device::findAndLoadDriver()
                0x00000000c000c66a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c690                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c6d0                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c6fa                Device::getParent()
                0x00000000c000c706                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c724                Device::addChild(Device*)
                0x00000000c000c768                Device::removeAllChildren()
                0x00000000c000c7ae                Device::hibernateAll()
                0x00000000c000c7de                Device::wakeAll()
                0x00000000c000c80e                Device::detectAll()
                0x00000000c000c83e                Device::disableLegacyAll()
                0x00000000c000c840                Device::loadDriversForAll()
                0x00000000c000c842                Device::closeAll()
                0x00000000c000c878                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c8ae                Device::setName(char const*)
                0x00000000c000c8bc                Device::Device(char const*)
                0x00000000c000c8bc                Device::Device(char const*)
                0x00000000c000c9b8                Device::getName()
                0x00000000c000c9c2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c9c2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c9f8                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ca3c                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000ca66        0x2 
 .text          0x00000000c000ca68       0x86 hal/diskctrl.32
                0x00000000c000ca68                HardDiskController::HardDiskController(char const*)
                0x00000000c000ca68                HardDiskController::HardDiskController(char const*)
                0x00000000c000caa0                HardDiskController::~HardDiskController()
                0x00000000c000caa0                HardDiskController::~HardDiskController()
                0x00000000c000cac4                HardDiskController::~HardDiskController()
 .text          0x00000000c000caee       0xe2 hal/diskphys.32
                0x00000000c000caee                PhysicalDisk::eject()
                0x00000000c000caf2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000caf2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cb5a                PhysicalDisk::startCache()
                0x00000000c000cb82                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cb82                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cba6                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cbd0        0x0 hal/fpu.32
 .text          0x00000000c000cbd0      0x360 hal/intctrl.32
                0x00000000c000cbd0                int_handler
                0x00000000c000cc5a                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cca4                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000cde7                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000ce1b                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ce91                setupINTS()
                0x00000000c000ceee                convertLegacyIRQNumber(int)
 .text          0x00000000c000cf30      0x8be hal/keybrd.32
                0x00000000c000cf30                startGUI(void*)
                0x00000000c000cf9e                startGUIVESA(void*)
                0x00000000c000d00c                sendKeyToTerminal(unsigned char)
                0x00000000c000d0e7                sendKeyboardToken(KeyboardToken)
                0x00000000c000d5d1                clearInternalKeybuffer(VgaText*)
                0x00000000c000d606                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d764                Keyboard::Keyboard(char const*)
                0x00000000c000d764                Keyboard::Keyboard(char const*)
                0x00000000c000d7a0                Keyboard::~Keyboard()
                0x00000000c000d7a0                Keyboard::~Keyboard()
                0x00000000c000d7c4                Keyboard::~Keyboard()
 .text          0x00000000c000d7ee      0x3f8 hal/logidisk.32
                0x00000000c000d7ee                LogicalDisk::close(int, int, void*)
                0x00000000c000d7f2                LogicalDisk::~LogicalDisk()
                0x00000000c000d7f2                LogicalDisk::~LogicalDisk()
                0x00000000c000d816                LogicalDisk::~LogicalDisk()
                0x00000000c000d840                LogicalDisk::open(int, int, void*)
                0x00000000c000d854                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d88c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d8d2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d8d2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d992                LogicalDisk::assignDriveLetter()
                0x00000000c000da4c                LogicalDisk::mount()
                0x00000000c000da94                LogicalDisk::unmount()
                0x00000000c000daa4                LogicalDisk::eject()
                0x00000000c000dab8                LogicalDisk::unassignDriveLetter()
                0x00000000c000db0e                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000db7a                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000dbe6        0x2 
 .text          0x00000000c000dbe8       0x86 hal/mouse.32
                0x00000000c000dbe8                Mouse::Mouse(char const*)
                0x00000000c000dbe8                Mouse::Mouse(char const*)
                0x00000000c000dc20                Mouse::~Mouse()
                0x00000000c000dc20                Mouse::~Mouse()
                0x00000000c000dc44                Mouse::~Mouse()
 .text          0x00000000c000dc6e       0x90 hal/nic.32
                0x00000000c000dc6e                NIC::getMAC()
                0x00000000c000dc74                NIC::write(int, unsigned char*, int*)
                0x00000000c000dc7a                NIC::NIC(char const*)
                0x00000000c000dc7a                NIC::NIC(char const*)
                0x00000000c000dcb0                NIC::~NIC()
                0x00000000c000dcb0                NIC::~NIC()
                0x00000000c000dcd4                NIC::~NIC()
 .text          0x00000000c000dcfe      0x33b hal/partition.32
                0x00000000c000dcfe                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dda6                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e039        0x3 
 .text          0x00000000c000e03c       0x86 hal/serial.32
                0x00000000c000e03c                Serial::Serial(char const*)
                0x00000000c000e03c                Serial::Serial(char const*)
                0x00000000c000e074                Serial::~Serial()
                0x00000000c000e074                Serial::~Serial()
                0x00000000c000e098                Serial::~Serial()
 *fill*         0x00000000c000e0c2        0x2 
 .text          0x00000000c000e0c4      0x234 hal/timer.32
                0x00000000c000e0c4                Timer::Timer(char const*)
                0x00000000c000e0c4                Timer::Timer(char const*)
                0x00000000c000e0fc                Timer::~Timer()
                0x00000000c000e0fc                Timer::~Timer()
                0x00000000c000e120                Timer::~Timer()
                0x00000000c000e14a                Timer::read()
                0x00000000c000e155                setupTimer(int)
                0x00000000c000e190                timerHandler(unsigned int)
 .text          0x00000000c000e2f8      0x450 hal/vcache.32
                0x00000000c000e2f8                VCache::VCache(PhysicalDisk*)
                0x00000000c000e2f8                VCache::VCache(PhysicalDisk*)
                0x00000000c000e468                VCache::invalidateReadBuffer()
                0x00000000c000e478                VCache::writeWriteBuffer()
                0x00000000c000e4c4                VCache::~VCache()
                0x00000000c000e4c4                VCache::~VCache()
                0x00000000c000e51c                VCache::~VCache()
                0x00000000c000e544                VCache::write(unsigned long long, int, void*)
                0x00000000c000e63e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e748      0x4d9 hal/video.32
                0x00000000c000e748                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e794                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e804                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e894                Video::clearScreen(unsigned int)
                0x00000000c000e8c8                Video::putpixel(int, int, unsigned int)
                0x00000000c000e8d6                Video::readPixelApprox(int, int)
                0x00000000c000e8ea                Video::Video(char const*)
                0x00000000c000e8ea                Video::Video(char const*)
                0x00000000c000e920                Video::~Video()
                0x00000000c000e920                Video::~Video()
                0x00000000c000e944                Video::~Video()
                0x00000000c000e96e                Video::isMonochrome()
                0x00000000c000e97a                Video::getWidth()
                0x00000000c000e986                Video::getHeight()
                0x00000000c000e992                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ea4e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ebb6                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ec21        0x3 
 .text          0x00000000c000ec24     0x12d2 hw/acpi.32
                0x00000000c000ec24                ACPI::close(int, int, void*)
                0x00000000c000ecd8                findRSDP()
                0x00000000c000ed70                loadACPITables(unsigned char*)
                0x00000000c000efdc                findRSDT(unsigned char*)
                0x00000000c000f134                findDataTable(unsigned char*, char*)
                0x00000000c000f1b4                scanMADT()
                0x00000000c000f66c                ACPI::ACPI()
                0x00000000c000f66c                ACPI::ACPI()
                0x00000000c000f6c0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f7bc                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f888                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f890                ACPI::detectPCI()
                0x00000000c000fab0                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000faf8                ACPI::sleep()
                0x00000000c000fb14                ACPI::open(int, int, void*)
 .text          0x00000000c000fef6      0xbc5 hw/cpu.32
                0x00000000c000fef6                CPU::close(int, int, void*)
                0x00000000c000fefa                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000ff16                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000ff2e                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ffa2                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0010026                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010054                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0010082                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00100b0                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00100de                CPU::CPU()
                0x00000000c00100de                CPU::CPU()
                0x00000000c001016c                CPU::displayFeatures()
                0x00000000c001016e                CPU::detectFeatures()
                0x00000000c0010842                CPU::setupSMEP()
                0x00000000c001084e                CPU::setupUMIP()
                0x00000000c0010858                CPU::setupTSC()
                0x00000000c0010862                CPU::setupLargePages()
                0x00000000c001086c                CPU::setupPAT()
                0x00000000c00108a8                CPU::setupMTRR()
                0x00000000c00108aa                CPU::setupGlobalPages()
                0x00000000c00108b4                CPU::allowUsermodeDataAccess()
                0x00000000c00108c6                CPU::prohibitUsermodeDataAccess()
                0x00000000c00108d8                CPU::setupSMAP()
                0x00000000c00108e6                CPU::setupFeatures()
                0x00000000c00109b2                CPU::open(int, int, void*)
 .text          0x00000000c0010abb       0xb6 krnl/atexit.32
                0x00000000c0010abb                KeInitialiseAtexit()
                0x00000000c0010ada                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010b0e                KeExecuteAtexit()
 .text          0x00000000c0010b71       0xdf krnl/bootmsg.32
                0x00000000c0010b71                KeDisplaySplashScreen()
                0x00000000c0010bed                KeSetBootMessage(char const*)
 .text          0x00000000c0010c50       0x1d krnl/compat.32
                0x00000000c0010c50                Krnl::handlePowerButton()
                0x00000000c0010c60                Krnl::handleSleepButton()
 *fill*         0x00000000c0010c6d        0x1 
 .text          0x00000000c0010c6e      0x5bf krnl/env.32
                0x00000000c0010c6e                EnvVarContainer::getEnv(char const*)
                0x00000000c0010cac                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010d6e                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010d70                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010f94                EnvVarContainer::__loadSystem()
                0x00000000c0010fae                EnvVarContainer::__loadUser()
                0x00000000c0010fb0                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010fb0                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010fd2                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010fd2                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011002                KeGetEnv(Process*, char const*)
                0x00000000c0011067                KeSetEnvSystem(char const*, char const*)
                0x00000000c0011081                KeSetEnvUser(char const*, char const*)
                0x00000000c00110a0                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00110b3                KeDeleteEnvSystem(char const*)
                0x00000000c00110b4                KeDeleteEnvUser(char const*)
                0x00000000c00110b5                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00110b6                KeNewProcessEnv(Process*)
                0x00000000c00110d8                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0011124                KeLoadSystemEnv()
                0x00000000c0011152                KeLoadUserEnv()
                0x00000000c0011178                KeFlushEnv()
                0x00000000c0011179                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0011199                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c001122d       0x94 krnl/inlines.32
                0x00000000c001122d                CPU::current()
                0x00000000c0011239                operator new(unsigned long)
                0x00000000c001123e                operator delete(void*)
                0x00000000c0011243                disableIRQs()
                0x00000000c0011245                enableIRQs()
                0x00000000c0011247                lockScheduler()
                0x00000000c001124f                unlockScheduler()
                0x00000000c001125e                lockStuff()
                0x00000000c001126c                unlockStuff()
                0x00000000c00112a6                Virt::getAKernelVAS()
                0x00000000c00112ac                __not_memcpy
 .text          0x00000000c00112c1        0xc krnl/panic.32
                0x00000000c00112c1                KePanic(char const*)
 .text          0x00000000c00112cd      0x142 krnl/powctrl.32
                0x00000000c00112cd                KePowerThread(void*)
                0x00000000c00112fb                KeChangePowerSettings(PowerSettings)
                0x00000000c0011311                KeUserIOReceived()
                0x00000000c001131c                KeHandlePowerButton()
                0x00000000c0011351                KeHandleSleepButton()
                0x00000000c0011386                KeSetupPowerManager()
 .text          0x00000000c001140f       0x9b krnl/random.32
                0x00000000c001140f                KeRand()
                0x00000000c001144f                KeSeedRand(unsigned int)
                0x00000000c0011478                KeInitRand()
 *fill*         0x00000000c00114aa        0x2 
 .text          0x00000000c00114ac      0x1bc krnl/resolve.32
                0x00000000c00114ac                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011668      0x31f krnl/signal.32
                0x00000000c0011668                KiSigKill(int)
                0x00000000c001167c                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001167d                KiDefaultSignalHandlerPause(int)
                0x00000000c00116a9                KiDefaultSignalHandlerResume(int)
                0x00000000c00116d5                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00116da                KeInitSignals()
                0x00000000c0011729                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c001175f                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00117dc                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c00118d3                KiCheckSignalZ
                0x00000000c0011915                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011950                KiFinishSignalZ
 .text          0x00000000c0011987      0xd49 krnl/syscalls.32
                0x00000000c0011987                SysSeekDir(regs*)
                0x00000000c001198c                SysTellDir(regs*)
                0x00000000c0011991                SysVerify(regs*)
                0x00000000c001199b                SysGetArgc(regs*)
                0x00000000c00119af                SysTTYName(regs*)
                0x00000000c00119b7                SysFormatDisk(regs*)
                0x00000000c0011a1e                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011a72                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011acb                SysShutdown(regs*)
                0x00000000c0011b58                SysRealpath(regs*)
                0x00000000c0011ba6                SysReadDir(regs*)
                0x00000000c0011c26                SysIsATTY(regs*)
                0x00000000c0011c80                SysSeek(regs*)
                0x00000000c0011cda                SysTell(regs*)
                0x00000000c0011d47                SysSize(regs*)
                0x00000000c0011dba                SysSizeFromFilename(regs*)
                0x00000000c0011e64                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011f39                SysClose(regs*)
                0x00000000c0011f99                SysOpenDir(regs*)
                0x00000000c0012016                SysMakeDir(regs*)
                0x00000000c0012084                SysCloseDir(regs*)
                0x00000000c00120d3                SysWait(regs*)
                0x00000000c00120f4                SysNotImpl(regs*)
                0x00000000c001210f                SysPanic(regs*)
                0x00000000c001212a                SysRmdir(regs*)
                0x00000000c0012188                SysUnlink(regs*)
                0x00000000c00121e6                SysGetArgv(regs*)
                0x00000000c0012233                SysUSleep(regs*)
                0x00000000c001225c                SysSpawn(regs*)
                0x00000000c00122cd                SysGetEnv(regs*)
                0x00000000c0012382                SysSetFatAttrib(regs*)
                0x00000000c00123eb                SysPipe(regs*)
                0x00000000c0012430                SysGetUnixTime(regs*)
                0x00000000c0012444                string_ends_with(char const*, char const*)
                0x00000000c001248f                SysOpen(regs*)
                0x00000000c001268e                KeSystemCall(regs*, void*)
 .text          0x00000000c00126d0      0x159 net/ethernet.32
                0x00000000c00126d0                KeSwitchEndian16(unsigned short)
                0x00000000c00126f4                KeSwitchEndian32(unsigned int)
                0x00000000c0012724                EthernetCRC32(unsigned char*, int)
                0x00000000c00127c8                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012829      0xd51 reg/cm.32
                0x00000000c0012829                CmOpen(char const*)
                0x00000000c0012947                CmClose(Reghive_Tag*)
                0x00000000c001295d                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012999                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012a10                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012a4f                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012a81                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012abd                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012ae5                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012b06                CmExpand(Reghive_Tag*, int)
                0x00000000c0012b81                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012c07                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012cfb                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012e33                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012e94                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012ec4                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012efb                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012f25                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012f65                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013009                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0013037                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00131d4                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013221                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001329b                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00132ee                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00133b2                zStrtok(char*, char const*)
                0x00000000c0013424                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00134a5                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013548                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c001357a      0x545 reg/registry.32
                0x00000000c001357a                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013706                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001385b                Reg::getLine(char*, char*, char*)
                0x00000000c0013892                Reg::readInt(char*, char*, int*)
                0x00000000c0013980                Reg::readString(char*, char*, char*, int)
                0x00000000c0013a01                Reg::readBool(char*, char*, bool*)
                0x00000000c0013a26                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013a52                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013a7e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013abf       0x36 sys/eject.32
                0x00000000c0013abf                SysEject(regs*)
 .text          0x00000000c0013af5       0x18 sys/exit.32
                0x00000000c0013af5                SysExit(regs*)
 .text          0x00000000c0013b0d       0x1f sys/getcwd.32
                0x00000000c0013b0d                SysGetCwd(regs*)
 .text          0x00000000c0013b2c        0xc sys/getpid.32
                0x00000000c0013b2c                SysGetPID(regs*)
 .text          0x00000000c0013b38       0x1a sys/getramdata.32
                0x00000000c0013b38                SysGetRAMData(regs*)
 .text          0x00000000c0013b52       0x82 sys/getvgaptr.32
                0x00000000c0013b52                SysGetVGAPtr(regs*)
 .text          0x00000000c0013bd4       0xb9 sys/kill.32
                0x00000000c0013bd4                SysKill(regs*)
 .text          0x00000000c0013c8d       0xa8 sys/loaddll.32
                0x00000000c0013c8d                SysLoadDLL(regs*)
 .text          0x00000000c0013d35       0x68 sys/read.32
                0x00000000c0013d35                SysRead(regs*)
 .text          0x00000000c0013d9d       0x29 sys/registersignal.32
                0x00000000c0013d9d                SysRegisterSignal(regs*)
 .text          0x00000000c0013dc6      0x19c sys/registry.32
                0x00000000c0013dc6                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013e3d                SysRegistryReadExtent(regs*)
                0x00000000c0013e85                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013ead                SysRegistryEnterDirectory(regs*)
                0x00000000c0013ed5                SysRegistryGetNext(regs*)
                0x00000000c0013efd                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013f37                SysRegistryOpen(regs*)
                0x00000000c0013f4b                SysRegistryClose(regs*)
 .text          0x00000000c0013f62       0x55 sys/sbrk.32
                0x00000000c0013f62                SysSbrk(regs*)
 .text          0x00000000c0013fb7       0x1c sys/setcwd.32
                0x00000000c0013fb7                SysSetCwd(regs*)
 .text          0x00000000c0013fd3       0x96 sys/settime.32
                0x00000000c0013fd3                SysSetTime(regs*)
 .text          0x00000000c0014069       0x2d sys/symlink.32
                0x00000000c0014069                SysSymlink(regs*)
 .text          0x00000000c0014096       0x4a sys/timezone.32
                0x00000000c0014096                SysTimezone(regs*)
 .text          0x00000000c00140e0       0xfc sys/truncate.32
                0x00000000c00140e0                SysTruncate(regs*)
 .text          0x00000000c00141dc       0x68 sys/write.32
                0x00000000c00141dc                SysWrite(regs*)
 .text          0x00000000c0014244       0x62 sys/wsbe.32
                0x00000000c0014244                SysWsbe(regs*)
 .text          0x00000000c00142a6       0x25 sys/yield.32
                0x00000000c00142a6                SysYield(regs*)
 .text          0x00000000c00142cb     0x1203 thr/elf.32
                0x00000000c00142cb                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014552                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014771                Thr::runtimeReferenceHelper()
                0x00000000c0014784                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00147d3                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014a91                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00151d2                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015204                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001523b                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015255                Thr::loadDLL(char const*, bool)
                0x00000000c0015495                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00154ce        0x2 
 .text          0x00000000c00154d0     0x13b5 thr/prcssthr.32
                0x00000000c00154d0                userModeEntryPoint(void*)
                0x00000000c00154f8                changeTSS
                0x00000000c0015528                switchToThread(ThreadControlBlock*)
                0x00000000c00155d8                Process::addArgs(char**)
                0x00000000c0015644                Process::Process(char const*, Process*, char**)
                0x00000000c0015644                Process::Process(char const*, Process*, char**)
                0x00000000c0015850                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015850                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015a24                taskStartupFunction
                0x00000000c0015a30                Semaphore::Semaphore(int)
                0x00000000c0015a30                Semaphore::Semaphore(int)
                0x00000000c0015a60                Mutex::Mutex()
                0x00000000c0015a60                Mutex::Mutex()
                0x00000000c0015a74                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015b7c                Process::createUserThread()
                0x00000000c0015b9c                setupMultitasking(void (*)())
                0x00000000c0015cc0                schedule()
                0x00000000c0015d54                Semaphore::tryAcquire()
                0x00000000c0015e14                Semaphore::assertLocked(char const*)
                0x00000000c0015e98                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015ec0                blockTask(TaskState)
                0x00000000c0015ef8                waitTask(int, int*, int)
                0x00000000c0015f3c                milliTenthSleepUntil(unsigned int)
                0x00000000c0015fdc                milliTenthSleep(unsigned int)
                0x00000000c0015ff0                sleep(unsigned int)
                0x00000000c0016000                Semaphore::acquire()
                0x00000000c00160c8                taskReturned
                0x00000000c001610c                Thr::processFromPID(int)
                0x00000000c00161b8                unblockTask(ThreadControlBlock*)
                0x00000000c0016264                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016538                cleanerTaskFunction(void*)
                0x00000000c0016640                terminateTask(int)
                0x00000000c001672c                Thr::terminateFromIRQ(int)
                0x00000000c001673c                Semaphore::release()
 .text          0x00000000c0016885      0xc31 vm86/vm8086.32
                0x00000000c0016885                Vm::inbv(unsigned short)
                0x00000000c0016898                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00168ce                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00168de                Vm::getSegment(unsigned int)
                0x00000000c00168e6                Vm::getOffset(unsigned int)
                0x00000000c00168eb                Vm::mainloop2()
                0x00000000c0016925                Vm::mainVm8086Loop(void*)
                0x00000000c0016935                Vm::mainloop3(unsigned long)
                0x00000000c001695b                Vm::initialise8086()
                0x00000000c001699e                Vm::finish8086()
                0x00000000c00169ff                Vm::getOutput8086(unsigned char*)
                0x00000000c0016a24                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016add                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016c7b                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016d18                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016d29                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016d3b                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016d4c                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016d61                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016d77                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016d8c                Vm::faultHandler(regs*)
 .text          0x00000000c00174b6      0xaf0 arch/i386/hal.32
                0x00000000c00174b6                noCopro(unsigned long)
                0x00000000c00174b7                nmiHandler(regs*, void*)
                0x00000000c00174d0                doubleFault(regs*, void*)
                0x00000000c00174e9                displayDebugInfo(regs*)
                0x00000000c001786e                HalSystemIdle()
                0x00000000c00178ea                displayProgramFault(char const*)
                0x00000000c0017936                gpFault(regs*, void*)
                0x00000000c001799d                pgFault(regs*, void*)
                0x00000000c0017a26                otherISRHandler(regs*, void*)
                0x00000000c0017a5a                opcodeFault(regs*, void*)
                0x00000000c0017add                i386SaveCoprocessor(void*)
                0x00000000c0017af1                i386LoadCoprocessor(void*)
                0x00000000c0017b05                x87EmulHandler(regs*, void*)
                0x00000000c0017ba2                HalInitialiseCoprocessor()
                0x00000000c0017c50                HalPanic(char const*)
                0x00000000c0017d64                HalQueryPerformanceCounter()
                0x00000000c0017d7f                HalInitialise()
                0x00000000c0017f35                HalMakeBeep(int)
                0x00000000c0017f6f                HalGetRand()
                0x00000000c0017f72                HalEndOfInterrupt(int)
                0x00000000c0017fa3                HalRestart()
                0x00000000c0017fa4                HalShutdown()
                0x00000000c0017fa5                HalSleep()
 *fill*         0x00000000c0017fa6        0x2 
 .text          0x00000000c0017fa8      0x2dc arch/i386/pic.32
                0x00000000c0017fa8                picIoWait()
                0x00000000c0017fb0                picDisable()
                0x00000000c0017fe4                picGetIRQReg(int)
                0x00000000c0018060                picOpen()
                0x00000000c00181e4                picEOI(int)
 .text          0x00000000c0018284      0x66e arch/i386/rtc.32
                0x00000000c0018284                RTC::open(int, int, void*)
                0x00000000c0018288                RTC::close(int, int, void*)
                0x00000000c001828c                RTC::timeInSecondsUTC()
                0x00000000c001829e                RTC::timeInDatetimeUTC()
                0x00000000c00182c4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018302                RTC::~RTC()
                0x00000000c0018302                RTC::~RTC()
                0x00000000c0018326                RTC::~RTC()
                0x00000000c0018350                RTC::get_update_in_progress_flag()
                0x00000000c001836a                RTC::completeRTCRefresh()
                0x00000000c0018644                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00187f2                rtcIRQHandler(regs*, void*)
                0x00000000c0018838                RTC::RTC()
                0x00000000c0018838                RTC::RTC()
 *fill*         0x00000000c00188f2        0x2 
 .text          0x00000000c00188f4      0x1f4 arch/i386/vga.32
                0x00000000c00188f4                HalConsoleScroll(int, int)
                0x00000000c00189fc                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018a60                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018ae8     0x14f3 fs/fat/vfslink.32
                0x00000000c0018ae8                FAT::getName()
                0x00000000c0018af0                FAT::tell(void*, unsigned long long*)
                0x00000000c0018b2c                FAT::stat(void*, unsigned long long*)
                0x00000000c0018b68                FAT::~FAT()
                0x00000000c0018b68                FAT::~FAT()
                0x00000000c0018b8c                FAT::~FAT()
                0x00000000c0018bb4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018c58                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018d38                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018f1c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019138                FAT::allocateSwapfile(char const*, int)
                0x00000000c00192f8                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019468                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00194c8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019528                FAT::close(void*)
                0x00000000c001957c                FAT::closeDir(void*)
                0x00000000c00195d0                FAT::truncate(void*, unsigned long long)
                0x00000000c001963c                FAT::seek(void*, unsigned long long)
                0x00000000c0019694                fatWrapperReadDisk
                0x00000000c00196d4                fatWrapperWriteDisk
                0x00000000c0019714                fatWrapperIoctl
                0x00000000c0019834                FAT::FAT()
                0x00000000c0019834                FAT::FAT()
                0x00000000c001988c                FAT::fixFilepath(char*)
                0x00000000c00198cc                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019a40                FAT::openDir(char const*, void**)
                0x00000000c0019af0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019be8                FAT::unlink(char const*)
                0x00000000c0019c68                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019e20                FAT::rename(char const*, char const*)
                0x00000000c0019eec                FAT::mkdir(char const*)
                0x00000000c0019f6c                FAT::exists(char const*)
 *fill*         0x00000000c0019fdb        0x1 
 .text          0x00000000c0019fdc       0x94 fs/iso9660/helper.32
                0x00000000c0019fdc                isoReadDiscSectorHelper
                0x00000000c001a038                iso_kprintf
                0x00000000c001a054                iso_kprintfd
 .text          0x00000000c001a070      0x71a fs/iso9660/vfslink.32
                0x00000000c001a070                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a076                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a07c                ISO9660::getName()
                0x00000000c001a082                ISO9660::closeDir(void*)
                0x00000000c001a08c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a092                ISO9660::unlink(char const*)
                0x00000000c001a098                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a09e                ISO9660::rename(char const*, char const*)
                0x00000000c001a0a4                ISO9660::mkdir(char const*)
                0x00000000c001a0aa                ISO9660::~ISO9660()
                0x00000000c001a0aa                ISO9660::~ISO9660()
                0x00000000c001a0ce                ISO9660::~ISO9660()
                0x00000000c001a0f6                ISO9660::exists(char const*)
                0x00000000c001a10a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a1f0                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a238                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a27a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a2b8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a30a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a44c                ISO9660::close(void*)
                0x00000000c001a47c                ISO9660::openDir(char const*, void**)
                0x00000000c001a556                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a671                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a6f0                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a762                ISO9660::ISO9660()
                0x00000000c001a762                ISO9660::ISO9660()
 .text          0x00000000c001a78a      0x26c hal/sound/sndcard.32
                0x00000000c001a78a                SoundCard::beginPlayback()
                0x00000000c001a798                SoundCard::stopPlayback()
                0x00000000c001a7a6                SoundCard::SoundCard(char const*)
                0x00000000c001a7a6                SoundCard::SoundCard(char const*)
                0x00000000c001a844                SoundCard::~SoundCard()
                0x00000000c001a844                SoundCard::~SoundCard()
                0x00000000c001a868                SoundCard::~SoundCard()
                0x00000000c001a892                SoundCard::configureRates(int, int, int)
                0x00000000c001a8c2                SoundCard::getSamples16(int, short*)
                0x00000000c001a91e                SoundCard::getSamples32(int, int*)
                0x00000000c001a9a4                SoundCard::addChannel(SoundPort*)
                0x00000000c001a9e2                SoundCard::removeChannel(int)
 *fill*         0x00000000c001a9f6        0x2 
 .text          0x00000000c001a9f8      0x393 hal/sound/sndport.32
                0x00000000c001a9f8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a9f8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001aa84                SoundPort::~SoundPort()
                0x00000000c001aa84                SoundPort::~SoundPort()
                0x00000000c001aab8                SoundPort::unpause()
                0x00000000c001aac4                SoundPort::pause()
                0x00000000c001aad0                SoundPort::getBufferUsed()
                0x00000000c001aad8                SoundPort::getBufferSize()
                0x00000000c001aae0                SoundPort::buffer16(short*, int)
                0x00000000c001ab6c                SoundPort::buffer32(int*, int)
                0x00000000c001abf8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001acc8                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001ad8b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001ad8b        0x1 
 .text          0x00000000c001ad8c      0xbc5 hw/bus/pci.32
                0x00000000c001ad8c                PCI::open(int, int, void*)
                0x00000000c001adaa                PCI::close(int, int, void*)
                0x00000000c001adae                PCI::PCI()
                0x00000000c001adae                PCI::PCI()
                0x00000000c001ae46                PCI::readBAR8(unsigned int, int)
                0x00000000c001ae62                PCI::readBAR16(unsigned int, int)
                0x00000000c001ae80                PCI::readBAR32(unsigned int, int)
                0x00000000c001ae9c                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001aebc                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001aede                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001aefe                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001af74                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b01e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b042                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b06a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0b4                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0dc                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b100                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b124                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b14c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b1b0                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b296                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b560                PCI::checkBus(unsigned char)
                0x00000000c001b584                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b70a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b886                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b8f8                PCI::detect()
 *fill*         0x00000000c001b951        0x1 
 .text          0x00000000c001b952      0xb96 hw/diskctrl/ide.32
                0x00000000c001b952                IDE::close(int, int, void*)
                0x00000000c001b956                IDE::IDE()
                0x00000000c001b956                IDE::IDE()
                0x00000000c001b98a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b99c                selectDrive(unsigned char, unsigned char)
                0x00000000c001b99e                IDE::getBase(unsigned char)
                0x00000000c001b9b0                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ba70                IDE::read(unsigned char, unsigned char)
                0x00000000c001bb24                IDE::waitInterrupt(unsigned char)
                0x00000000c001bb86                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bba2                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bbbe                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bc08                IDE::open(int, int, void*)
                0x00000000c001c042                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c112                IDE::detect()
                0x00000000c001c3da                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c494                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c4e8      0x32c hw/diskctrl/satabus.32
                0x00000000c001c4e8                SATABus::close(int, int, void*)
                0x00000000c001c4ec                SATABus::detect()
                0x00000000c001c4ee                SATABus::SATABus()
                0x00000000c001c4ee                SATABus::SATABus()
                0x00000000c001c574                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c5a6                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c5ee                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c60e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c638                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c74a                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c7f4                SATABus::open(int, int, void*)
 .text          0x00000000c001c814      0x96d hw/diskphys/ata.32
                0x00000000c001c814                ATA::close(int, int, void*)
                0x00000000c001c838                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c83a                ATA::ATA()
                0x00000000c001c83a                ATA::ATA()
                0x00000000c001c868                ATA::flush(bool)
                0x00000000c001c8b6                ATA::readyForCommand()
                0x00000000c001c902                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ccc6                ATA::detectCHS()
                0x00000000c001ccf0                ATA::open(int, int, void*)
                0x00000000c001cdbc                combineCharAndColour(char, unsigned char)
                0x00000000c001cdcd                combineColours(unsigned char, unsigned char)
                0x00000000c001cdda                ATA::read(unsigned long long, int, void*)
                0x00000000c001cfb0                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d181        0x1 
 .text          0x00000000c001d182      0x612 hw/diskphys/atapi.32
                0x00000000c001d182                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d188                ATAPI::close(int, int, void*)
                0x00000000c001d1ac                ATAPI::ATAPI()
                0x00000000c001d1ac                ATAPI::ATAPI()
                0x00000000c001d1da                ATAPI::readyForCommand()
                0x00000000c001d22c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d4ec                ATAPI::diskRemoved()
                0x00000000c001d526                ATAPI::eject()
                0x00000000c001d56e                ATAPI::diskInserted()
                0x00000000c001d57a                ATAPI::detectMedia()
                0x00000000c001d63a                ATAPI::open(int, int, void*)
                0x00000000c001d71a                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d794      0x7ff hw/diskphys/sata.32
                0x00000000c001d794                SATA::close(int, int, void*)
                0x00000000c001d7b8                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d7ba                SATA::open(int, int, void*)
                0x00000000c001d864                SATA::SATA()
                0x00000000c001d864                SATA::SATA()
                0x00000000c001d892                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001dae4                SATA::read(unsigned long long, int, void*)
                0x00000000c001dd34                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001df93        0x1 
 .text          0x00000000c001df94      0x5d8 hw/diskphys/satapi.32
                0x00000000c001df94                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001df9a                SATAPI::close(int, int, void*)
                0x00000000c001dfbe                SATAPI::SATAPI()
                0x00000000c001dfbe                SATAPI::SATAPI()
                0x00000000c001dfec                SATAPI::diskRemoved()
                0x00000000c001dfee                SATAPI::diskInserted()
                0x00000000c001e00a                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e2f0                SATAPI::eject()
                0x00000000c001e32c                SATAPI::detectMedia()
                0x00000000c001e382                SATAPI::open(int, int, void*)
                0x00000000c001e482                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e56c      0x45b hw/intctrl/apic.32
                0x00000000c001e56c                IOAPIC::close(int, int, void*)
                0x00000000c001e572                apicGetBase()
                0x00000000c001e5b8                IOAPIC::IOAPIC()
                0x00000000c001e5b8                IOAPIC::IOAPIC()
                0x00000000c001e5e0                apicOpen()
                0x00000000c001e75c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e78e                IOAPIC::read(int)
                0x00000000c001e7b6                IOAPIC::open(int, int, void*)
                0x00000000c001e89c                IOAPIC::write(int, int)
                0x00000000c001e8c8                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e9c7        0x1 
 .text          0x00000000c001e9c8       0xf0 hw/timer/apictimer.32
                0x00000000c001e9c8                APICTimer::close(int, int, void*)
                0x00000000c001e9d0                apicTimerHandler(regs*, void*)
                0x00000000c001e9f8                APICTimer::open(int, int, void*)
                0x00000000c001ea68                APICTimer::write(int)
                0x00000000c001ea90                APICTimer::APICTimer()
                0x00000000c001ea90                APICTimer::APICTimer()
 .text          0x00000000c001eab8      0x1ad hw/timer/pit.32
                0x00000000c001eab8                PIT::write(int)
                0x00000000c001eb3c                pitHandler(regs*, void*)
                0x00000000c001eb64                PIT::open(int, int, void*)
                0x00000000c001ebb4                PIT::close(int, int, void*)
                0x00000000c001ebe4                PIT::PIT()
                0x00000000c001ebe4                PIT::PIT()
 *fill*         0x00000000c001ec65        0xb 
 .text          0x00000000c001ec70       0x83 arch/i386/avx.32
                0x00000000c001ec70                avxDetect
                0x00000000c001ec9a                avxSave
                0x00000000c001ecab                avxLoad
                0x00000000c001ecbc                avxInit
                0x00000000c001ecde                avxClose
                0x00000000c001ecdf                wouldSheSayYes
 *fill*         0x00000000c001ecf3        0xd 
 .text          0x00000000c001ed00      0x2ec arch/i386/interrupt.32
                0x00000000c001ed00                isr0
                0x00000000c001ed10                isr1
                0x00000000c001ed1a                isr2
                0x00000000c001ed24                isr3
                0x00000000c001ed2e                isr4
                0x00000000c001ed38                isr5
                0x00000000c001ed42                isr6
                0x00000000c001ed4c                isr7
                0x00000000c001ed56                isr8
                0x00000000c001ed5e                isr9
                0x00000000c001ed68                isr10
                0x00000000c001ed70                isr11
                0x00000000c001ed78                isr12
                0x00000000c001ed80                isr13
                0x00000000c001ed9a                isr14
                0x00000000c001eda2                isr15
                0x00000000c001edac                isr16
                0x00000000c001edb6                isr17
                0x00000000c001edc0                isr18
                0x00000000c001edca                irq3
                0x00000000c001edd4                irq4
                0x00000000c001edde                irq5
                0x00000000c001ede8                irq6
                0x00000000c001edf2                irq7
                0x00000000c001edfc                irq8
                0x00000000c001ee06                irq9
                0x00000000c001ee10                irq10
                0x00000000c001ee1a                irq11
                0x00000000c001ee24                irq12
                0x00000000c001ee2e                irq13
                0x00000000c001ee38                irq14
                0x00000000c001ee42                irq15
                0x00000000c001ee4c                irq1
                0x00000000c001ee53                irq2
                0x00000000c001ee5a                isr96
                0x00000000c001ee61                irq0
                0x00000000c001ee66                int_common_stub
                0x00000000c001ee98                syscall_common_stub
                0x00000000c001ef9c                irq16
                0x00000000c001efa6                irq17
                0x00000000c001efb0                irq18
                0x00000000c001efba                irq19
                0x00000000c001efc4                irq20
                0x00000000c001efce                irq21
                0x00000000c001efd8                irq22
                0x00000000c001efe2                irq23
 *fill*         0x00000000c001efec        0x4 
 .text          0x00000000c001eff0       0x10 arch/i386/rdrand.32
                0x00000000c001eff0                i386GetRDRAND
 .text          0x00000000c001f000       0x39 arch/i386/sse.32
                0x00000000c001f000                absolutelyNoChanceInHell
                0x00000000c001f000                sseDetect
                0x00000000c001f018                sseSave
                0x00000000c001f020                sseLoad
                0x00000000c001f028                sseInit
                0x00000000c001f038                sseClose
 *fill*         0x00000000c001f039        0x7 
 .text          0x00000000c001f040       0x49 arch/i386/x87.32
                0x00000000c001f046                x87Detect
                0x00000000c001f061                x87Save
                0x00000000c001f068                x87Load
                0x00000000c001f06f                x87Init
                0x00000000c001f088                x87Close
 *fill*         0x00000000c001f089        0x3 
 .text          0x00000000c001f08c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f0b1        0x0 crtn.32
 *fill*         0x00000000c001f0b1        0x3 
 .text          0x00000000c001f0b4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f0b4                __divdi3
 *fill*         0x00000000c001f1ff        0x1 
 .text          0x00000000c001f200      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f200                __moddi3
 *fill*         0x00000000c001f37e        0x2 
 .text          0x00000000c001f380       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f380                __udivdi3
 *fill*         0x00000000c001f47f        0x1 
 .text          0x00000000c001f480      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f480                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f5a0        0x0
 .iplt          0x00000000c001f5a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f59a        0xf
 .init          0x00000000c001f59a        0x3 crti.32
                0x00000000c001f59a                _init
 .init          0x00000000c001f59d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f5a2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f5a7        0x2 crtn.32

.fini           0x00000000c001f5a9        0xa
 .fini          0x00000000c001f5a9        0x3 crti.32
                0x00000000c001f5a9                _fini
 .fini          0x00000000c001f5ac        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f5b1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f5b4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f5b4       0x23 core/computer.32
                0x00000000c001f5b4                Computer::~Computer()
                0x00000000c001f5b4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f5d8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f5d8       0x2a core/computer.32
                0x00000000c001f5d8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f602       0x21
 .text._Z10idleCommonv
                0x00000000c001f602       0x21 core/idle.32
                0x00000000c001f602                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f624        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f624        0x2 core/unixfile.32
                0x00000000c001f624                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f624                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f626       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f626       0x42 core/unixfile.32
                0x00000000c001f626                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f626                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f668       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f668       0xd3 core/unixfile.32
                0x00000000c001f668                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f73c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f73c        0x7 core/unixfile.32
                0x00000000c001f73c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f744       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f744       0xa1 core/unixfile.32
                0x00000000c001f744                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f7e6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f7e6        0x8 core/unixfile.32
                0x00000000c001f7e6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f7ee       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f7ee       0x1a hal/device.32
                0x00000000c001f7ee                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f7ee                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f808       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f808       0x2a hal/device.32
                0x00000000c001f808                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f832       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f832       0xdc hal/device.32
                0x00000000c001f832                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f90e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f90e       0x42 hal/device.32
                0x00000000c001f90e                LinkedList<Device>::LinkedList()
                0x00000000c001f90e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f950       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f950       0x1c hal/timer.32
                0x00000000c001f950                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f96c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f96c        0x7 hal/timer.32
                0x00000000c001f96c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f974       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f974       0xbc hal/timer.32
                0x00000000c001f974                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fa30       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fa30       0xda hal/timer.32
                0x00000000c001fa30                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fb0c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fb0c       0x23 hw/acpi.32
                0x00000000c001fb0c                ACPI::~ACPI()
                0x00000000c001fb0c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fb30       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fb30       0x2a hw/acpi.32
                0x00000000c001fb30                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fb5c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fb5c        0x2 hw/acpi.32
                0x00000000c001fb5c                LinkedList<Device>::~LinkedList()
                0x00000000c001fb5c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fb60       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fb60       0x1c hw/acpi.32
                0x00000000c001fb60                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fb7c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fb7c        0x7 hw/acpi.32
                0x00000000c001fb7c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fb84       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fb84       0xb8 hw/acpi.32
                0x00000000c001fb84                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001fc3c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fc3c       0x23 hw/cpu.32
                0x00000000c001fc3c                CPU::~CPU()
                0x00000000c001fc3c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fc60       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fc60       0x2a hw/cpu.32
                0x00000000c001fc60                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fc8c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fc8c        0x8 sys/kill.32
                0x00000000c001fc8c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fc94        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fc94        0x2 thr/prcssthr.32
                0x00000000c001fc94                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fc94                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fc98       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fc98       0x49 thr/prcssthr.32
                0x00000000c001fc98                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fc98                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fce4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fce4       0x42 thr/prcssthr.32
                0x00000000c001fce4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fce4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fd26       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fd26       0x23 hw/bus/pci.32
                0x00000000c001fd26                PCI::~PCI()
                0x00000000c001fd26                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fd4a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fd4a       0x2a hw/bus/pci.32
                0x00000000c001fd4a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fd74       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fd74       0x23 hw/diskctrl/ide.32
                0x00000000c001fd74                IDE::~IDE()
                0x00000000c001fd74                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fd98       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fd98       0x2a hw/diskctrl/ide.32
                0x00000000c001fd98                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001fdc2       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001fdc2       0x23 hw/diskctrl/satabus.32
                0x00000000c001fdc2                SATABus::~SATABus()
                0x00000000c001fdc2                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001fde6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001fde6       0x2a hw/diskctrl/satabus.32
                0x00000000c001fde6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001fe10       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fe10       0x23 hw/diskphys/ata.32
                0x00000000c001fe10                ATA::~ATA()
                0x00000000c001fe10                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fe34       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fe34       0x2a hw/diskphys/ata.32
                0x00000000c001fe34                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fe5e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fe5e       0x23 hw/diskphys/atapi.32
                0x00000000c001fe5e                ATAPI::~ATAPI()
                0x00000000c001fe5e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fe82       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fe82       0x2a hw/diskphys/atapi.32
                0x00000000c001fe82                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001feac       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001feac       0x23 hw/diskphys/sata.32
                0x00000000c001feac                SATA::~SATA()
                0x00000000c001feac                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001fed0       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001fed0       0x2a hw/diskphys/sata.32
                0x00000000c001fed0                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001fefa       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001fefa       0x23 hw/diskphys/satapi.32
                0x00000000c001fefa                SATAPI::~SATAPI()
                0x00000000c001fefa                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001ff1e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001ff1e       0x2a hw/diskphys/satapi.32
                0x00000000c001ff1e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001ff48       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001ff48       0x23 hw/intctrl/apic.32
                0x00000000c001ff48                IOAPIC::~IOAPIC()
                0x00000000c001ff48                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001ff6c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001ff6c       0x2a hw/intctrl/apic.32
                0x00000000c001ff6c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ff98       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ff98       0x23 hw/timer/apictimer.32
                0x00000000c001ff98                APICTimer::~APICTimer()
                0x00000000c001ff98                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ffbc       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ffbc       0x2a hw/timer/apictimer.32
                0x00000000c001ffbc                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ffe8       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ffe8       0x23 hw/timer/pit.32
                0x00000000c001ffe8                PIT::~PIT()
                0x00000000c001ffe8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002000c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002000c       0x2a hw/timer/pit.32
                0x00000000c002000c                PIT::~PIT()

.rodata         0x00000000c0020036     0x319a
                0x00000000c0020036                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020036        0x2 
 .ctors         0x00000000c0020038        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c002003c        0x4 core/unixfile.32
 .ctors         0x00000000c0020040        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020044        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020048                end_ctors = .
                0x00000000c0020048                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020048        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002004c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002004c                __DTOR_END__
                0x00000000c0020050                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020050       0x10 
 .rodata        0x00000000c0020060      0x101 acpica/utclib.32
                0x00000000c0020060                AcpiGbl_Ctypes
 *fill*         0x00000000c0020161        0x3 
 .rodata        0x00000000c0020164       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002017c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c00201c6       0x1a 
 .rodata        0x00000000c00201e0       0xed fs/fat/ff.32
 *fill*         0x00000000c00202cd       0x13 
 .rodata        0x00000000c00202e0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00206e0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002074f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020864       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c00208cc       0x2c core/computer.32
                0x00000000c00208cc                vtable for Computer
 .rodata.str1.4
                0x00000000c00208f8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020928        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020934       0x17 core/main.32
 *fill*         0x00000000c002094b        0x1 
 .rodata.str1.4
                0x00000000c002094c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c00209f1       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020a49       0x39 core/pipe.32
 *fill*         0x00000000c0020a82        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020a84       0x1c core/pipe.32
                0x00000000c0020a84                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020aa0       0x2b core/terminal.32
 *fill*         0x00000000c0020acb        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020acc       0x1c core/terminal.32
                0x00000000c0020acc                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020ae8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020b0a       0x15 core/unixfile.32
 *fill*         0x00000000c0020b1f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020b20       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020b6b        0x8 core/unixfile.32
 *fill*         0x00000000c0020b73        0x1 
 .rodata.str1.4
                0x00000000c0020b74       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020b94       0x1c core/unixfile.32
                0x00000000c0020b94                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020bb0       0x1c core/unixfile.32
                0x00000000c0020bb0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020bcc      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020e60      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020f86       0x33 coreobjs/c++.32
 *fill*         0x00000000c0020fb9        0x3 
 .rodata        0x00000000c0020fbc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002110c      0x169 dbg/usban.32
 *fill*         0x00000000c0021275        0x3 
 .rodata.str1.4
                0x00000000c0021278      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00213af      0x120 fs/symlink.32
                                        0x12c (size before relaxing)
 .rodata.str1.1
                0x00000000c00214cf       0x26 fs/vfs.32
                                         0x28 (size before relaxing)
 *fill*         0x00000000c00214f5        0x3 
 .rodata._ZTV10Filesystem
                0x00000000c00214f8       0x6c fs/vfs.32
                0x00000000c00214f8                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021564       0x1c fs/vfs.32
                0x00000000c0021564                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021580       0x1c fs/vfs.32
                0x00000000c0021580                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002159c       0x2c hal/bus.32
                0x00000000c002159c                vtable for Bus
 .rodata.str1.1
                0x00000000c00215c8       0x1e hal/clock.32
 *fill*         0x00000000c00215e6        0x2 
 .rodata._ZTV5Clock
                0x00000000c00215e8       0x3c hal/clock.32
                0x00000000c00215e8                vtable for Clock
 *fill*         0x00000000c0021624       0x1c 
 .rodata        0x00000000c0021640       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021670       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00216c8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00216c8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c00216c8       0x2c hal/device.32
                0x00000000c00216c8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00216f4       0x2c hal/device.32
                0x00000000c00216f4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021720       0x2c hal/diskctrl.32
                0x00000000c0021720                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002174c       0x38 hal/diskphys.32
                0x00000000c002174c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021784       0x3e hal/intctrl.32
 *fill*         0x00000000c00217c2        0x2 
 .rodata.str1.4
                0x00000000c00217c4       0x5d hal/intctrl.32
 .rodata        0x00000000c0021821       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021874       0x34 hal/keybrd.32
                0x00000000c0021874                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00218a8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00218ec       0x2c hal/logidisk.32
                0x00000000c00218ec                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021918       0x2c hal/mouse.32
                0x00000000c0021918                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021944       0x34 hal/nic.32
                0x00000000c0021944                vtable for NIC
 .rodata.str1.1
                0x00000000c0021978        0xb hal/partition.32
 *fill*         0x00000000c0021983        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021984       0x44 hal/serial.32
                0x00000000c0021984                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00219c8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00219c8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00219c8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00219c8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c00219c8       0x30 hal/timer.32
                0x00000000c00219c8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00219f8       0x10 hal/vcache.32
                0x00000000c00219f8                vtable for VCache
 .rodata.str1.1
                0x00000000c0021a08       0x93 hal/video.32
 *fill*         0x00000000c0021a9b        0x1 
 .rodata._ZTV5Video
                0x00000000c0021a9c       0x4c hal/video.32
                0x00000000c0021a9c                vtable for Video
 .rodata.str1.4
                0x00000000c0021ae8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021b83      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021cd9       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021cd9        0x8 hw/acpi.32
 *fill*         0x00000000c0021cd9        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021cdc       0x2c hw/acpi.32
                0x00000000c0021cdc                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021d08      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0021e83        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021e84       0x2c hw/cpu.32
                0x00000000c0021e84                vtable for CPU
 .rodata.str1.1
                0x00000000c0021eb0       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021ef0       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021f2c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0021fbd       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022086       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00220ce       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00220f9       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002216f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00221b4        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00221be       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00221df       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022275       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00222c9       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00222f5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00224c1       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022518      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022628       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022628       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022628       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022628        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022628       0xc2 vm86/vm8086.32
 *fill*         0x00000000c00226ea        0x2 
 .rodata        0x00000000c00226ec       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002271c      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c00228bb        0x1 
 .rodata.str1.4
                0x00000000c00228bc       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002292f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022944       0x3c arch/i386/rtc.32
                0x00000000c0022944                vtable for RTC
 .rodata.str1.1
                0x00000000c0022980       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00229c1        0x3 
 .rodata._ZTV3FAT
                0x00000000c00229c4       0x6c fs/fat/vfslink.32
                0x00000000c00229c4                vtable for FAT
 .rodata.str1.1
                0x00000000c0022a30       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022a30      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022b68       0x6c fs/iso9660/vfslink.32
                0x00000000c0022b68                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022bd4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022c18       0x34 hal/sound/sndcard.32
                0x00000000c0022c18                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022c4c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022c8b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022cc3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022d64       0x2c hw/bus/pci.32
                0x00000000c0022d64                vtable for PCI
 .rodata.str1.1
                0x00000000c0022d90       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022e17        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022e18       0x2c hw/diskctrl/ide.32
                0x00000000c0022e18                vtable for IDE
 .rodata.str1.4
                0x00000000c0022e44       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022e68       0x2c hw/diskctrl/satabus.32
                0x00000000c0022e68                vtable for SATABus
 .rodata.str1.1
                0x00000000c0022e94       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0022ea6        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022ea8       0x38 hw/diskphys/ata.32
                0x00000000c0022ea8                vtable for ATA
 .rodata.str1.1
                0x00000000c0022ee0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022eed        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0022ef0       0x38 hw/diskphys/atapi.32
                0x00000000c0022ef0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022f28       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0022fa4       0x38 hw/diskphys/sata.32
                0x00000000c0022fa4                vtable for SATA
 .rodata.str1.1
                0x00000000c0022fdc       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00230c6        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00230c8       0x38 hw/diskphys/satapi.32
                0x00000000c00230c8                vtable for SATAPI
 .rodata        0x00000000c0023100        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0023108       0x2c hw/intctrl/apic.32
                0x00000000c0023108                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023134       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002314f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023150       0x30 hw/timer/apictimer.32
                0x00000000c0023150                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023180       0x1d hw/timer/pit.32
 *fill*         0x00000000c002319d        0x3 
 .rodata._ZTV3PIT
                0x00000000c00231a0       0x30 hw/timer/pit.32
                0x00000000c00231a0                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00231d0      0x7b1
 *(.data)
 .data          0x00000000c00231d0        0x0 crti.32
 .data          0x00000000c00231d0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00231d0                __dso_handle
 .data          0x00000000c00231d4        0x0 acpica/utclib.32
 .data          0x00000000c00231d4        0x0 core/malloc.32
 .data          0x00000000c00231d4        0x0 libk/ctype.32
 .data          0x00000000c00231d4        0x0 libk/string.32
 .data          0x00000000c00231d4        0x0 fs/fat/diskio.32
 .data          0x00000000c00231d4        0x0 fs/fat/ff.32
 .data          0x00000000c00231d4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00231d4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00231d4        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00231d4        0x0 core/computer.32
 .data          0x00000000c00231d4        0x0 core/gdt.32
 .data          0x00000000c00231d4        0x0 core/idle.32
 .data          0x00000000c00231d4        0x0 core/idt.32
 .data          0x00000000c00231d4        0x4 core/kheap.32
 .data          0x00000000c00231d8        0x0 core/main.32
 .data          0x00000000c00231d8        0x4 core/physmgr.32
                0x00000000c00231d8                Phys::bitmap
 .data          0x00000000c00231dc        0x0 core/pipe.32
 *fill*         0x00000000c00231dc        0x4 
 .data          0x00000000c00231e0       0x60 core/terminal.32
                0x00000000c00231e0                VgaText::hiddenOut
                0x00000000c0023200                ansiToVGAMappings
 .data          0x00000000c0023240        0x0 core/tss.32
 .data          0x00000000c0023240        0x4 core/unixfile.32
                0x00000000c0023240                UnixFile::nextFd
 .data          0x00000000c0023244       0x15 core/virtmgr.32
                0x00000000c0023244                Virt::pageAllocPtr
                0x00000000c0023248                Virt::bitmap
                0x00000000c002324c                Virt::swapfileSectorsPerPage
                0x00000000c0023250                Virt::swapfileLength
                0x00000000c0023254                Virt::swapfileSector
                0x00000000c0023258                Virt::swapfileDrive
 *fill*         0x00000000c0023259        0x3 
 .data          0x00000000c002325c        0x4 coreobjs/c++.32
                0x00000000c002325c                __stack_chk_guard
 .data          0x00000000c0023260        0x0 dbg/kconsole.32
 .data          0x00000000c0023260       0x28 dbg/usban.32
                0x00000000c0023260                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023288        0x0 fs/symlink.32
 .data          0x00000000c0023288        0x0 fs/vfs.32
 .data          0x00000000c0023288        0x0 hal/bus.32
 .data          0x00000000c0023288        0x0 hal/buzzer.32
 .data          0x00000000c0023288        0x0 hal/clock.32
 .data          0x00000000c0023288        0x0 hal/device.32
 .data          0x00000000c0023288        0x0 hal/diskctrl.32
 .data          0x00000000c0023288        0x0 hal/diskphys.32
 .data          0x00000000c0023288        0x0 hal/fpu.32
 .data          0x00000000c0023288        0x0 hal/intctrl.32
 .data          0x00000000c0023288        0x0 hal/keybrd.32
 .data          0x00000000c0023288        0x0 hal/logidisk.32
 .data          0x00000000c0023288        0x0 hal/mouse.32
 .data          0x00000000c0023288        0x0 hal/nic.32
 .data          0x00000000c0023288        0x0 hal/partition.32
 .data          0x00000000c0023288        0x0 hal/serial.32
 .data          0x00000000c0023288        0x0 hal/timer.32
 .data          0x00000000c0023288        0x0 hal/vcache.32
 .data          0x00000000c0023288        0x0 hal/video.32
 .data          0x00000000c0023288       0x10 hw/acpi.32
                0x00000000c0023288                legacyIRQRemaps
 .data          0x00000000c0023298        0x4 hw/cpu.32
                0x00000000c0023298                lastCode
 .data          0x00000000c002329c        0x0 krnl/atexit.32
 *fill*         0x00000000c002329c        0x4 
 .data          0x00000000c00232a0      0x142 krnl/bootmsg.32
                0x00000000c00232a0                KiSplashScreen
 .data          0x00000000c00233e2        0x0 krnl/compat.32
 *fill*         0x00000000c00233e2       0x1e 
 .data          0x00000000c0023400       0x4d krnl/env.32
                0x00000000c0023400                defaultSysEnv
 .data          0x00000000c002344d        0x0 krnl/inlines.32
 .data          0x00000000c002344d        0x0 krnl/panic.32
 .data          0x00000000c002344d        0x0 krnl/powctrl.32
 .data          0x00000000c002344d        0x0 krnl/random.32
 .data          0x00000000c002344d        0x0 krnl/resolve.32
 *fill*         0x00000000c002344d       0x13 
 .data          0x00000000c0023460       0x4c krnl/signal.32
                0x00000000c0023460                KiDefaultSignalHandlers
 *fill*         0x00000000c00234ac       0x14 
 .data          0x00000000c00234c0       0xfc krnl/syscalls.32
                0x00000000c00234c0                systemCallHandlers
 .data          0x00000000c00235bc        0x0 net/ethernet.32
 *fill*         0x00000000c00235bc        0x4 
 .data          0x00000000c00235c0      0x100 reg/cm.32
                0x00000000c00235c0                CmComponents
 .data          0x00000000c00236c0        0x0 reg/registry.32
 .data          0x00000000c00236c0        0x0 sys/eject.32
 .data          0x00000000c00236c0        0x0 sys/exit.32
 .data          0x00000000c00236c0        0x0 sys/getcwd.32
 .data          0x00000000c00236c0        0x0 sys/getpid.32
 .data          0x00000000c00236c0        0x0 sys/getramdata.32
 .data          0x00000000c00236c0        0x0 sys/getvgaptr.32
 .data          0x00000000c00236c0        0x0 sys/kill.32
 .data          0x00000000c00236c0        0x0 sys/loaddll.32
 .data          0x00000000c00236c0        0x0 sys/read.32
 .data          0x00000000c00236c0        0x0 sys/registersignal.32
 .data          0x00000000c00236c0        0x0 sys/registry.32
 .data          0x00000000c00236c0        0x0 sys/sbrk.32
 .data          0x00000000c00236c0        0x0 sys/setcwd.32
 .data          0x00000000c00236c0        0x0 sys/settime.32
 .data          0x00000000c00236c0        0x0 sys/symlink.32
 .data          0x00000000c00236c0        0x0 sys/timezone.32
 .data          0x00000000c00236c0        0x0 sys/truncate.32
 .data          0x00000000c00236c0        0x0 sys/write.32
 .data          0x00000000c00236c0        0x0 sys/wsbe.32
 .data          0x00000000c00236c0        0x0 sys/yield.32
 .data          0x00000000c00236c0        0x0 thr/elf.32
 .data          0x00000000c00236c0        0x4 thr/prcssthr.32
                0x00000000c00236c0                Thr::nextPID
 .data          0x00000000c00236c4        0x0 vm86/vm8086.32
 *fill*         0x00000000c00236c4       0x1c 
 .data          0x00000000c00236e0      0x2a0 arch/i386/hal.32
                0x00000000c00236e0                exceptionNames
 .data          0x00000000c0023980        0x0 arch/i386/pic.32
 .data          0x00000000c0023980        0x0 arch/i386/rtc.32
 .data          0x00000000c0023980        0x0 arch/i386/vga.32
 .data          0x00000000c0023980        0x0 fs/fat/vfslink.32
 .data          0x00000000c0023980        0x0 fs/iso9660/helper.32
 .data          0x00000000c0023980        0x1 fs/iso9660/vfslink.32
                0x00000000c0023980                recentDriveletter
 .data          0x00000000c0023981        0x0 hal/sound/sndcard.32
 .data          0x00000000c0023981        0x0 hal/sound/sndport.32
 .data          0x00000000c0023981        0x0 hw/bus/isa.32
 .data          0x00000000c0023981        0x0 hw/bus/pci.32
 .data          0x00000000c0023981        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0023981        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0023981        0x0 hw/diskphys/ata.32
 .data          0x00000000c0023981        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0023981        0x0 hw/diskphys/sata.32
 .data          0x00000000c0023981        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0023981        0x0 hw/intctrl/apic.32
 .data          0x00000000c0023981        0x0 hw/timer/apictimer.32
 .data          0x00000000c0023981        0x0 hw/timer/pit.32
 .data          0x00000000c0023981        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0023981        0x0 crtn.32
 .data          0x00000000c0023981        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0023981        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0023981        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0023981        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0023984        0x0
 .got           0x00000000c0023984        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0023984        0x0
 .got.plt       0x00000000c0023984        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0023984        0x0
 .igot.plt      0x00000000c0023984        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0023984        0x0
 .tm_clone_table
                0x00000000c0023984        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0023984        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0023981      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0023981        0x3 
 .eh_frame      0x00000000c0023984        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0023984        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0023984       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00239dc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0023a1c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0023a88       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x5107
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0025fb4        0xc 
 .bss           0x00000000c0025fc0      0x444 fs/symlink.32
                0x00000000c0025fc0                KiNumWaitingRoomSymlinks
                0x00000000c0025fe0                KiNewlyCreatedIDs
                0x00000000c0026000                KiNewlyCreatedSymlinks
                0x00000000c0026400                KiBaseSymlinkID
 .bss           0x00000000c0026404        0x4 fs/vfs.32
                0x00000000c0026404                installedFilesystems
 .bss           0x00000000c0026408        0x0 hal/bus.32
 .bss           0x00000000c0026408        0x0 hal/buzzer.32
 .bss           0x00000000c0026408        0x8 hal/clock.32
                0x00000000c0026408                User::dstOn
                0x00000000c0026409                User::timezoneHalfHourOffset
                0x00000000c002640c                User::timezoneHourOffset
 .bss           0x00000000c0026410        0x0 hal/device.32
 .bss           0x00000000c0026410        0x0 hal/diskctrl.32
 .bss           0x00000000c0026410        0x0 hal/diskphys.32
 .bss           0x00000000c0026410        0x0 hal/fpu.32
 *fill*         0x00000000c0026410       0x10 
 .bss           0x00000000c0026420     0x2000 hal/intctrl.32
                0x00000000c0026420                INT_contexts
                0x00000000c0027420                INT_handlers
 .bss           0x00000000c0028420      0x429 hal/keybrd.32
                0x00000000c0028420                keyboardWaitingTaskList
                0x00000000c0028424                keyboardSetupYet
                0x00000000c0028428                guiKeyboardHandler
                0x00000000c0028440                keystates
 *fill*         0x00000000c0028849       0x17 
 .bss           0x00000000c0028860       0x88 hal/logidisk.32
                0x00000000c0028860                diskAssignments
                0x00000000c0028880                disks
 .bss           0x00000000c00288e8        0x4 hal/mouse.32
                0x00000000c00288e8                guiMouseHandler
 .bss           0x00000000c00288ec        0x0 hal/nic.32
 .bss           0x00000000c00288ec        0x0 hal/partition.32
 .bss           0x00000000c00288ec        0x0 hal/serial.32
 .bss           0x00000000c00288ec        0x4 hal/timer.32
                0x00000000c00288ec                milliTenthsSinceBoot
 .bss           0x00000000c00288f0        0x0 hal/vcache.32
 .bss           0x00000000c00288f0        0x4 hal/video.32
                0x00000000c00288f0                screen
 *fill*         0x00000000c00288f4        0xc 
 .bss           0x00000000c0028900      0x480 hw/acpi.32
                0x00000000c0028900                systemSleepFunction
                0x00000000c0028904                systemResetFunction
                0x00000000c0028908                systemShutdownFunction
                0x00000000c002890c                nextACPITable
                0x00000000c0028920                acpiTables
                0x00000000c0028b20                usingXSDT
                0x00000000c0028b24                MADTpointer
                0x00000000c0028b28                RSDTpointer
                0x00000000c0028b2c                RSDPpointer
                0x00000000c0028b30                nextAPICNMI
                0x00000000c0028b40                apicNMIInfo
                0x00000000c0028bc0                legacyIRQFlags
                0x00000000c0028be0                ioapicDiscoveryNumber
                0x00000000c0028c00                ioapicFoundInMADT
                0x00000000c0028c20                ioapicAddresses
                0x00000000c0028ca0                ioapicGSIBase
                0x00000000c0028d20                processorDiscoveryNumber
                0x00000000c0028d40                matchingAPICID
                0x00000000c0028d60                processorID
 .bss           0x00000000c0028d80       0x10 hw/cpu.32
                0x00000000c0028d80                lastD
                0x00000000c0028d84                lastC
                0x00000000c0028d88                lastB
                0x00000000c0028d8c                lastA
 *fill*         0x00000000c0028d90       0x10 
 .bss           0x00000000c0028da0       0xe0 krnl/atexit.32
                0x00000000c0028da0                KiNextAtexitHandler
                0x00000000c0028dc0                KiAtexitContexts
                0x00000000c0028e20                KiAtexitHandlers
 .bss           0x00000000c0028e80        0x0 krnl/bootmsg.32
 .bss           0x00000000c0028e80        0x0 krnl/compat.32
 .bss           0x00000000c0028e80        0x8 krnl/env.32
                0x00000000c0028e80                KeUserEnv
                0x00000000c0028e84                KeSystemEnv
 .bss           0x00000000c0028e88        0x0 krnl/inlines.32
 .bss           0x00000000c0028e88        0x1 krnl/panic.32
                0x00000000c0028e88                KeIsKernelInPanic
 *fill*         0x00000000c0028e89       0x17 
 .bss           0x00000000c0028ea0       0x48 krnl/powctrl.32
                0x00000000c0028ea0                powCtrlOnBattery
                0x00000000c0028ec0                currentPowerSettings
                0x00000000c0028ee4                secondsSinceLastUserIO
 .bss           0x00000000c0028ee8        0x8 krnl/random.32
                0x00000000c0028ee8                kiRandSeed
 .bss           0x00000000c0028ef0        0x0 krnl/resolve.32
 .bss           0x00000000c0028ef0        0x0 krnl/signal.32
 .bss           0x00000000c0028ef0        0x0 krnl/syscalls.32
 .bss           0x00000000c0028ef0        0x0 net/ethernet.32
 .bss           0x00000000c0028ef0        0x4 reg/cm.32
 .bss           0x00000000c0028ef4        0x0 reg/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/eject.32
 .bss           0x00000000c0028ef4        0x0 sys/exit.32
 .bss           0x00000000c0028ef4        0x0 sys/getcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/getpid.32
 .bss           0x00000000c0028ef4        0x0 sys/getramdata.32
 .bss           0x00000000c0028ef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c0028ef4        0x0 sys/kill.32
 .bss           0x00000000c0028ef4        0x0 sys/loaddll.32
 .bss           0x00000000c0028ef4        0x0 sys/read.32
 .bss           0x00000000c0028ef4        0x0 sys/registersignal.32
 .bss           0x00000000c0028ef4        0x0 sys/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/sbrk.32
 .bss           0x00000000c0028ef4        0x0 sys/setcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/settime.32
 .bss           0x00000000c0028ef4        0x0 sys/symlink.32
 .bss           0x00000000c0028ef4        0x0 sys/timezone.32
 .bss           0x00000000c0028ef4        0x0 sys/truncate.32
 .bss           0x00000000c0028ef4        0x0 sys/write.32
 .bss           0x00000000c0028ef4        0x0 sys/wsbe.32
 .bss           0x00000000c0028ef4        0x0 sys/yield.32
 *fill*         0x00000000c0028ef4        0xc 
 .bss           0x00000000c0028f00      0x7a4 thr/elf.32
                0x00000000c0028f00                Thr::driverLookupNext
                0x00000000c0028f20                Thr::driverLookupLen
                0x00000000c0029120                Thr::driverLookupAddr
                0x00000000c0029320                Thr::driverNameLookup
                0x00000000c0029520                Thr::kernelSymbols
                0x00000000c00295a0                Thr::kernelStringTable
                0x00000000c0029620                Thr::kernelSymbolTable
                0x00000000c00296a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00296a4        0x4 
 .bss           0x00000000c00296a8       0x68 thr/prcssthr.32
                0x00000000c00296a8                cleanerThread
                0x00000000c00296ac                weNeedTheCleanerToNotBlock
                0x00000000c00296b0                retValLockStuff
                0x00000000c00296b4                retValSchedLock
                0x00000000c00296b8                lockStuffLock
                0x00000000c00296bc                schedulerLock
                0x00000000c00296c0                taskSwitchesPostponedFlag
                0x00000000c00296c4                postponeTaskSwitchesCounter
                0x00000000c00296c8                irqDisableCounter
                0x00000000c00296cc                terminatedTaskList
                0x00000000c00296d8                sleepingTaskList
                0x00000000c00296e4                taskList
                0x00000000c00296f0                kernelProcess
 *fill*         0x00000000c0029710       0x10 
 .bss           0x00000000c0029720       0x40 vm86/vm8086.32
                0x00000000c0029720                Vm::vmRetV
                0x00000000c0029724                Vm::vmDone
                0x00000000c0029725                Vm::vmReady
                0x00000000c0029728                Vm::vm86Thread
                0x00000000c002972c                Vm::vmToHostCommsPtr
                0x00000000c0029740                Vm::vmToHostComms
 .bss           0x00000000c0029760       0x18 arch/i386/hal.32
                0x00000000c0029760                apic
                0x00000000c0029764                guiPanicHandler
                0x00000000c0029768                fpuOwner
                0x00000000c002976c                coproLoadFunc
                0x00000000c0029770                coproSaveFunc
                0x00000000c0029774                gpFaultIntercept
 .bss           0x00000000c0029778        0x0 arch/i386/pic.32
 .bss           0x00000000c0029778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002977a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002977a        0x6 
 .bss           0x00000000c0029780       0xf0 fs/fat/vfslink.32
                0x00000000c0029780                FAT::fats
                0x00000000c00297a0                FAT::vfsToFatRemaps
                0x00000000c0029820                fatToVFSRemaps
 .bss           0x00000000c0029870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0029870       0x10 
 .bss           0x00000000c0029880      0x820 fs/iso9660/vfslink.32
                0x00000000c0029880                iso9660Owner
                0x00000000c0029884                recentSector
                0x00000000c00298a0                recentBuffer
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002a0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002a0a0        0xd hw/bus/pci.32
                0x00000000c002a0a0                thePCI
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002a0ad        0x3 
 .bss           0x00000000c002a0b0        0x8 hw/diskphys/ata.32
                0x00000000c002a0b0                ataSectorsWritten
                0x00000000c002a0b4                ataSectorsRead
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002a0b8        0x8 
 .bss           0x00000000c002a0c0       0x41 hw/intctrl/apic.32
                0x00000000c002a0c0                noOfIOAPICs
                0x00000000c002a0e0                ioapics
                0x00000000c002a100                IOAPICsSetupYet
 .bss           0x00000000c002a101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002a101        0x3 
 .bss           0x00000000c002a104        0x4 hw/timer/pit.32
                0x00000000c002a104                pitFreq
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002a108        0x0 crtn.32
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002a108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002f20f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
