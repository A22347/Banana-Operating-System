Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x201ee
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x225 dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006ef0                Dbg::logs(char*)
                0x00000000c0006f0f                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f2d                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f4e                Dbg::kprintf(char const*, ...)
 .text          0x00000000c0007084      0x2d4 dbg/usban.32
                0x00000000c0007084                KiUbsanPrintDetails(char const*, void*)
                0x00000000c00070f0                __ubsan_handle_type_mismatch_v1
                0x00000000c00071cc                __ubsan_handle_pointer_overflow
                0x00000000c00071f8                __ubsan_handle_out_of_bounds
                0x00000000c0007224                __ubsan_handle_add_overflow
                0x00000000c0007250                __ubsan_handle_load_invalid_value
                0x00000000c000727c                __ubsan_handle_divrem_overflow
                0x00000000c00072a8                __ubsan_handle_mul_overflow
                0x00000000c00072d4                __ubsan_handle_sub_overflow
                0x00000000c0007300                __ubsan_handle_shift_out_of_bounds
                0x00000000c000732c                __ubsan_handle_negate_overflow
 .text          0x00000000c0007358      0x812 fs/symlink.32
                0x00000000c00074a7                KiDeinitialiseSymlinks(void*)
                0x00000000c0007538                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075bb                KeInitialiseSymlinks()
                0x00000000c000771d                KiIsSymlinkRegistered(char const*)
                0x00000000c0007887                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a2e                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b6a      0xd9c fs/vfs.32
                0x00000000c0007b6a                File::read(unsigned long long, void*, int*)
                0x00000000c0007bc2                File::write(unsigned long long, void*, int*)
                0x00000000c0007c1a                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c72                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007ca0                File::isAtty()
                0x00000000c0007ca4                Directory::isAtty()
                0x00000000c0007ca8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cae                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cb4                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cba                File::~File()
                0x00000000c0007cba                File::~File()
                0x00000000c0007cde                File::~File()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d2c                Directory::~Directory()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d88                Filesystem::~Filesystem()
                0x00000000c0007dac                Fs::getcwd(Process*, char*, int)
                0x00000000c0007dd6                Fs::initVFS()
                0x00000000c0007e00                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000812c                File::File(char const*, Process*)
                0x00000000c000812c                File::File(char const*, Process*)
                0x00000000c000814a                File::open(FileOpenMode)
                0x00000000c00081a8                File::close()
                0x00000000c0008208                File::seek(unsigned long long)
                0x00000000c000825e                File::truncate(unsigned long long)
                0x00000000c00082b4                File::tell(unsigned long long*)
                0x00000000c0008304                File::rewind()
                0x00000000c0008318                File::unlink()
                0x00000000c0008364                File::rename(char const*)
                0x00000000c00083b2                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000840e                File::exists()
                0x00000000c000844c                File::stat(unsigned long long*, bool*)
                0x00000000c00084ad                Fs::setcwd(Process*, char*)
                0x00000000c000860c                Directory::Directory(char const*, Process*)
                0x00000000c000860c                Directory::Directory(char const*, Process*)
                0x00000000c00086d4                Directory::open()
                0x00000000c0008730                Directory::close()
                0x00000000c0008790                Directory::unlink()
                0x00000000c00087dc                Directory::rename(char const*)
                0x00000000c000882a                Directory::exists()
                0x00000000c0008868                Directory::read(dirent*)
                0x00000000c00088b4                Directory::create()
                0x00000000c0008900                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c0008906        0x2 
 .text          0x00000000c0008908       0x86 hal/bus.32
                0x00000000c0008908                Bus::Bus(char const*)
                0x00000000c0008908                Bus::Bus(char const*)
                0x00000000c0008940                Bus::~Bus()
                0x00000000c0008940                Bus::~Bus()
                0x00000000c0008964                Bus::~Bus()
 .text          0x00000000c000898e       0x99 hal/buzzer.32
                0x00000000c000898e                KeBeepThread(void*)
                0x00000000c00089ce                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a27        0x1 
 .text          0x00000000c0008a28      0x51b hal/clock.32
                0x00000000c0008a28                KeLoadClockSettings()
                0x00000000c0008b30                Clock::Clock(char const*)
                0x00000000c0008b30                Clock::Clock(char const*)
                0x00000000c0008b66                Clock::~Clock()
                0x00000000c0008b66                Clock::~Clock()
                0x00000000c0008b8a                Clock::~Clock()
                0x00000000c0008bb4                Clock::timeInSecondsLocal()
                0x00000000c0008bfc                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0008c55                KeDatetimeToSeconds(datetime_t)
                0x00000000c0008d7a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0008dda                KeSecondsToDatetime(unsigned long long)
                0x00000000c0008f1e                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0008f43        0x1 
 .text          0x00000000c0008f44      0x47a hal/device.32
                0x00000000c0008f44                Device::hibernate()
                0x00000000c0008f46                Device::wake()
                0x00000000c0008f48                Device::detect()
                0x00000000c0008f4a                Device::disableLegacy()
                0x00000000c0008f4c                Device::powerSaving(PowerSavingLevel)
                0x00000000c0008f4e                DriverlessDevice::close(int, int, void*)
                0x00000000c0008f52                DriverlessDevice::detect()
                0x00000000c0008f54                DriverlessDevice::open(int, int, void*)
                0x00000000c0008f68                Device::~Device()
                0x00000000c0008f68                Device::~Device()
                0x00000000c0008f76                Device::~Device()
                0x00000000c0008f9e                Device::findAndLoadDriver()
                0x00000000c0008fac                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0008fd2                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0009012                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000903c                Device::getParent()
                0x00000000c0009048                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009066                Device::addChild(Device*)
                0x00000000c00090aa                Device::removeAllChildren()
                0x00000000c00090f0                Device::hibernateAll()
                0x00000000c0009120                Device::wakeAll()
                0x00000000c0009150                Device::detectAll()
                0x00000000c0009180                Device::disableLegacyAll()
                0x00000000c0009182                Device::loadDriversForAll()
                0x00000000c0009184                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00091ba                Device::setName(char const*)
                0x00000000c00091c8                Device::Device(char const*)
                0x00000000c00091c8                Device::Device(char const*)
                0x00000000c00092c4                Device::getName()
                0x00000000c00092ce                Device::closeAll()
                0x00000000c000931a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000931a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009350                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009394                getDevicesOfType(DeviceType)
 *fill*         0x00000000c00093be        0x2 
 .text          0x00000000c00093c0       0x86 hal/diskctrl.32
                0x00000000c00093c0                HardDiskController::HardDiskController(char const*)
                0x00000000c00093c0                HardDiskController::HardDiskController(char const*)
                0x00000000c00093f8                HardDiskController::~HardDiskController()
                0x00000000c00093f8                HardDiskController::~HardDiskController()
                0x00000000c000941c                HardDiskController::~HardDiskController()
 .text          0x00000000c0009446       0xe2 hal/diskphys.32
                0x00000000c0009446                PhysicalDisk::eject()
                0x00000000c000944a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000944a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00094b2                PhysicalDisk::startCache()
                0x00000000c00094da                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094da                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094fe                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009528        0x0 hal/fpu.32
 .text          0x00000000c0009528        0x0 hal/intctrl.32
 .text          0x00000000c0009528      0x874 hal/keybrd.32
                0x00000000c0009528                startGUI(void*)
                0x00000000c000958d                startGUIVESA(void*)
                0x00000000c00095f2                sendKeyToTerminal(unsigned char)
                0x00000000c00096c8                sendKeyboardToken(KeyboardToken)
                0x00000000c0009b84                clearInternalKeybuffer(VgaText*)
                0x00000000c0009bb9                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0009d12                Keyboard::Keyboard(char const*)
                0x00000000c0009d12                Keyboard::Keyboard(char const*)
                0x00000000c0009d4e                Keyboard::~Keyboard()
                0x00000000c0009d4e                Keyboard::~Keyboard()
                0x00000000c0009d72                Keyboard::~Keyboard()
 .text          0x00000000c0009d9c      0x3f8 hal/logidisk.32
                0x00000000c0009d9c                LogicalDisk::close(int, int, void*)
                0x00000000c0009da0                LogicalDisk::~LogicalDisk()
                0x00000000c0009da0                LogicalDisk::~LogicalDisk()
                0x00000000c0009dc4                LogicalDisk::~LogicalDisk()
                0x00000000c0009dee                LogicalDisk::open(int, int, void*)
                0x00000000c0009e02                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0009e3a                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0009e80                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009e80                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009f40                LogicalDisk::assignDriveLetter()
                0x00000000c0009ffa                LogicalDisk::mount()
                0x00000000c000a042                LogicalDisk::unmount()
                0x00000000c000a052                LogicalDisk::eject()
                0x00000000c000a066                LogicalDisk::unassignDriveLetter()
                0x00000000c000a0bc                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000a128                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000a194       0x86 hal/mouse.32
                0x00000000c000a194                Mouse::Mouse(char const*)
                0x00000000c000a194                Mouse::Mouse(char const*)
                0x00000000c000a1cc                Mouse::~Mouse()
                0x00000000c000a1cc                Mouse::~Mouse()
                0x00000000c000a1f0                Mouse::~Mouse()
 .text          0x00000000c000a21a       0x90 hal/nic.32
                0x00000000c000a21a                NIC::getMAC()
                0x00000000c000a220                NIC::write(int, unsigned char*, int*)
                0x00000000c000a226                NIC::NIC(char const*)
                0x00000000c000a226                NIC::NIC(char const*)
                0x00000000c000a25c                NIC::~NIC()
                0x00000000c000a25c                NIC::~NIC()
                0x00000000c000a280                NIC::~NIC()
 .text          0x00000000c000a2aa      0x33b hal/partition.32
                0x00000000c000a2aa                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a352                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000a5e5        0x3 
 .text          0x00000000c000a5e8       0x86 hal/serial.32
                0x00000000c000a5e8                Serial::Serial(char const*)
                0x00000000c000a5e8                Serial::Serial(char const*)
                0x00000000c000a620                Serial::~Serial()
                0x00000000c000a620                Serial::~Serial()
                0x00000000c000a644                Serial::~Serial()
 *fill*         0x00000000c000a66e        0x2 
 .text          0x00000000c000a670      0x1ec hal/timer.32
                0x00000000c000a670                Timer::Timer(char const*)
                0x00000000c000a670                Timer::Timer(char const*)
                0x00000000c000a6a8                Timer::~Timer()
                0x00000000c000a6a8                Timer::~Timer()
                0x00000000c000a6cc                Timer::~Timer()
                0x00000000c000a6f6                Timer::read()
                0x00000000c000a701                setupTimer(int)
                0x00000000c000a73c                timerHandler(unsigned int)
 .text          0x00000000c000a85c      0x466 hal/vcache.32
                0x00000000c000a85c                VCache::VCache(PhysicalDisk*)
                0x00000000c000a85c                VCache::VCache(PhysicalDisk*)
                0x00000000c000a9cc                VCache::invalidateReadBuffer()
                0x00000000c000a9dc                VCache::writeWriteBuffer()
                0x00000000c000aa28                VCache::~VCache()
                0x00000000c000aa28                VCache::~VCache()
                0x00000000c000aa80                VCache::~VCache()
                0x00000000c000aaa8                VCache::write(unsigned long long, int, void*)
                0x00000000c000aba6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000acc2      0x71d hal/video.32
                0x00000000c000acc2                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ad0e                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ad7e                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000ae0e                Video::clearScreen(unsigned int)
                0x00000000c000ae42                Video::putpixel(int, int, unsigned int)
                0x00000000c000ae50                Video::readPixelApprox(int, int)
                0x00000000c000ae64                Video::Video(char const*)
                0x00000000c000ae64                Video::Video(char const*)
                0x00000000c000ae9a                Video::~Video()
                0x00000000c000ae9a                Video::~Video()
                0x00000000c000aebe                Video::~Video()
                0x00000000c000aee8                Video::isMonochrome()
                0x00000000c000aef4                Video::getWidth()
                0x00000000c000af00                Video::getHeight()
                0x00000000c000af0c                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000afc8                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000b36e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000b3df        0x1 
 .text          0x00000000c000b3e0     0x1096 hw/acpi.32
                0x00000000c000b3e0                ACPI::close(int, int, void*)
                0x00000000c000b3e8                loadACPITables(unsigned char*)
                0x00000000c000b648                findRSDT(unsigned char*)
                0x00000000c000b794                findDataTable(unsigned char*, char*)
                0x00000000c000b808                scanMADT()
                0x00000000c000bc60                ACPI::ACPI()
                0x00000000c000bc60                ACPI::ACPI()
                0x00000000c000bcb4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000bdb0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000be7c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000be84                ACPI::detectPCI()
                0x00000000c000c090                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000c0a8                ACPI::open(int, int, void*)
 .text          0x00000000c000c476       0xb6 krnl/atexit.32
                0x00000000c000c476                KeInitialiseAtexit()
                0x00000000c000c495                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000c4c9                KeExecuteAtexit()
 .text          0x00000000c000c52c       0x9f krnl/bootmsg.32
                0x00000000c000c52c                KeDisplaySplashScreen()
                0x00000000c000c55b                KeSetBootMessage(char const*)
 .text          0x00000000c000c5cb       0x5f krnl/c++.32
                0x00000000c000c5cb                __cxa_atexit
                0x00000000c000c5ce                __cxa_finalize
                0x00000000c000c5cf                __stack_chk_fail
                0x00000000c000c605                __cxa_pure_virtual
                0x00000000c000c616                operator new[](unsigned long)
                0x00000000c000c61b                operator delete(void*, unsigned long)
                0x00000000c000c620                operator delete[](void*)
                0x00000000c000c625                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000c62a        0x2 
 .text          0x00000000c000c62c       0x44 krnl/cdefs.32
                0x00000000c000c62c                CUnlockScheduler
                0x00000000c000c644                CLockScheduler
                0x00000000c000c654                CPrintf
 .text          0x00000000c000c670      0xd51 krnl/cm.32
                0x00000000c000c670                CmOpen(char const*)
                0x00000000c000c78e                CmClose(Reghive_Tag*)
                0x00000000c000c7a4                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000c7e0                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000c857                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000c896                CmGetNext(Reghive_Tag*, int)
                0x00000000c000c8c8                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000c904                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000c92c                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000c94d                CmExpand(Reghive_Tag*, int)
                0x00000000c000c9c8                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000ca4e                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000cb42                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000cc7a                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000ccdb                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000cd0b                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000cd42                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000cd6c                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000cdac                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000ce50                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000ce7e                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000d01b                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000d068                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d0e2                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000d135                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d1f9                zStrtok(char*, char const*)
                0x00000000c000d26b                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000d2ec                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000d38f                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000d3c1        0x3 
 .text          0x00000000c000d3c4       0x1d krnl/compat.32
                0x00000000c000d3c4                Krnl::handlePowerButton()
                0x00000000c000d3d4                Krnl::handleSleepButton()
 *fill*         0x00000000c000d3e1        0x1 
 .text          0x00000000c000d3e2      0x2c3 krnl/computer.32
                0x00000000c000d3e2                Computer::close(int, int, void*)
                0x00000000c000d3e8                Computer::open(int, int, void*)
                0x00000000c000d4ce                KeFirstTask()
                0x00000000c000d5f0                Computer::Computer()
                0x00000000c000d5f0                Computer::Computer()
                0x00000000c000d634                KePrepareShutdown()
                0x00000000c000d654                KeShutdown()
                0x00000000c000d678                KeSleep()
                0x00000000c000d684                KeRestart()
 .text          0x00000000c000d6a5       0x2b krnl/crc32.32
                0x00000000c000d6a5                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000d6d0      0x5bf krnl/env.32
                0x00000000c000d6d0                EnvVarContainer::getEnv(char const*)
                0x00000000c000d70e                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000d7d0                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000d7d2                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000d9f6                EnvVarContainer::__loadSystem()
                0x00000000c000da10                EnvVarContainer::__loadUser()
                0x00000000c000da12                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000da12                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000da34                EnvVarContainer::~EnvVarContainer()
                0x00000000c000da34                EnvVarContainer::~EnvVarContainer()
                0x00000000c000da64                KeGetEnv(Process*, char const*)
                0x00000000c000dac9                KeSetEnvSystem(char const*, char const*)
                0x00000000c000dae3                KeSetEnvUser(char const*, char const*)
                0x00000000c000db02                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000db15                KeDeleteEnvSystem(char const*)
                0x00000000c000db16                KeDeleteEnvUser(char const*)
                0x00000000c000db17                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000db18                KeNewProcessEnv(Process*)
                0x00000000c000db3a                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000db86                KeLoadSystemEnv()
                0x00000000c000dbb4                KeLoadUserEnv()
                0x00000000c000dbda                KeFlushEnv()
                0x00000000c000dbdb                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000dbfb                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000dc8f        0x1 
 .text          0x00000000c000dc90      0x371 krnl/fault.32
                0x00000000c000dc90                KeSetupInterrupts()
                0x00000000c000dd08                int_handler
                0x00000000c000de48                KeDisplayProgramFault(char const*)
                0x00000000c000de98                KeGeneralProtectionFault(void*, void*)
                0x00000000c000deec                KePageFault(void*, void*)
                0x00000000c000df50                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000df60                KeOtherFault(void*, void*)
                0x00000000c000df94                KeOpcodeFault(void*, void*)
                0x00000000c000dfe8                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000e001        0x1 
 .text          0x00000000c000e002      0x1db krnl/gdt.32
                0x00000000c000e002                GDTEntry::setBase(unsigned int)
                0x00000000c000e01e                GDTEntry::setLimit(unsigned int)
                0x00000000c000e03c                GDT::GDT()
                0x00000000c000e03c                GDT::GDT()
                0x00000000c000e052                GDT::addEntry(GDTEntry)
                0x00000000c000e074                GDT::getNumberOfEntries()
                0x00000000c000e07c                GDT::flush()
                0x00000000c000e09e                GDT::setup()
 .text          0x00000000c000e1dd       0x20 krnl/idle.32
                0x00000000c000e1dd                idleFunction(void*)
 *fill*         0x00000000c000e1fd        0x3 
 .text          0x00000000c000e200      0x46c krnl/idt.32
                0x00000000c000e200                IDTEntry::IDTEntry(bool)
                0x00000000c000e200                IDTEntry::IDTEntry(bool)
                0x00000000c000e27a                IDTEntry::setOffset(unsigned int)
                0x00000000c000e290                IDT::IDT()
                0x00000000c000e290                IDT::IDT()
                0x00000000c000e292                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000e29a                IDT::addEntry(IDTEntry, int)
                0x00000000c000e2b4                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000e2ec                IDT::flush()
                0x00000000c000e306                IDT::setup()
 .text          0x00000000c000e66c       0x9a krnl/inlines.32
                0x00000000c000e66c                CPU::current()
                0x00000000c000e678                operator new(unsigned long)
                0x00000000c000e67d                operator delete(void*)
                0x00000000c000e682                disableIRQs()
                0x00000000c000e684                enableIRQs()
                0x00000000c000e686                lockScheduler()
                0x00000000c000e68e                unlockScheduler()
                0x00000000c000e6a0                lockStuff()
                0x00000000c000e6ae                unlockStuff()
                0x00000000c000e6eb                Virt::getAKernelVAS()
                0x00000000c000e6f1                __not_memcpy
 .text          0x00000000c000e706      0x204 krnl/kheap.32
                0x00000000c000e706                sbrk
                0x00000000c000e79a                sbrk_thunk
                0x00000000c000e7d0                mmap
                0x00000000c000e82e                munmap
                0x00000000c000e843                liballoc_lock()
                0x00000000c000e851                liballoc_unlock()
                0x00000000c000e869                liballoc_alloc(int)
                0x00000000c000e881                liballoc_free(void*, int)
                0x00000000c000e89c                realloc
                0x00000000c000e8b0                malloc
                0x00000000c000e8c0                free
                0x00000000c000e8d0                rfree
                0x00000000c000e8e0                calloc
 *fill*         0x00000000c000e90a        0x2 
 .text          0x00000000c000e90c      0x1d3 krnl/mailbox.32
                0x00000000c000e90c                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000e96c                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000e9cc                KeMailboxCreate()
                0x00000000c000ea00                KeMailboxPost(Mailbox*, void*)
                0x00000000c000ea64                KeMailboxGet(Mailbox*, void**)
                0x00000000c000eac8                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000eadf       0xfd krnl/main.32
                0x00000000c000eadf                KeEntryPoint
 .text          0x00000000c000ebdc       0x1a krnl/mutex.32
                0x00000000c000ebdc                Mutex::Mutex()
                0x00000000c000ebdc                Mutex::Mutex()
 .text          0x00000000c000ebf6        0xc krnl/panic.32
                0x00000000c000ebf6                KePanic(char const*)
 .text          0x00000000c000ec02      0x666 krnl/physmgr.32
                0x00000000c000ec02                Phys::allocateDMA(unsigned long)
                0x00000000c000ecf0                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000ed2b                Phys::setPageState(unsigned long, bool)
                0x00000000c000ed6b                Phys::getPageState(unsigned long)
                0x00000000c000ed87                Phys::freePage(unsigned long)
                0x00000000c000edf0                Phys::allocatePage()
                0x00000000c000eece                Phys::allocateContiguousPages(int)
                0x00000000c000ef49                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000ef81                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000f268      0x271 krnl/pipe.32
                0x00000000c000f268                Pipe::isAtty()
                0x00000000c000f26c                Pipe::~Pipe()
                0x00000000c000f26c                Pipe::~Pipe()
                0x00000000c000f290                Pipe::~Pipe()
                0x00000000c000f2b8                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000f37c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000f472                Pipe::Pipe(int)
                0x00000000c000f472                Pipe::Pipe(int)
 .text          0x00000000c000f4d9      0x10b krnl/powctrl.32
                0x00000000c000f4d9                KePowerThread(void*)
                0x00000000c000f50a                KeChangePowerSettings(PowerSettings)
                0x00000000c000f520                KeUserIOReceived()
                0x00000000c000f52b                KeHandlePowerButton()
                0x00000000c000f543                KeHandleSleepButton()
                0x00000000c000f55b                KeSetupPowerManager()
 .text          0x00000000c000f5e4       0x9b krnl/random.32
                0x00000000c000f5e4                KeRand()
                0x00000000c000f624                KeSeedRand(unsigned int)
                0x00000000c000f64d                KeInitRand()
 *fill*         0x00000000c000f67f        0x1 
 .text          0x00000000c000f680      0x1bc krnl/resolve.32
                0x00000000c000f680                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c000f83c      0x401 krnl/semaphore.32
                0x00000000c000f83c                Semaphore::Semaphore(int)
                0x00000000c000f83c                Semaphore::Semaphore(int)
                0x00000000c000f86c                Semaphore::tryAcquire()
                0x00000000c000f940                Semaphore::assertLocked(char const*)
                0x00000000c000f9cc                Semaphore::acquire(int)
                0x00000000c000fb70                Semaphore::acquire()
                0x00000000c000fb8c                Semaphore::release()
 .text          0x00000000c000fc3d      0x31f krnl/signal.32
                0x00000000c000fc3d                KiSigKill(int)
                0x00000000c000fc51                KiDefaultSignalHandlerIgnore(int)
                0x00000000c000fc52                KiDefaultSignalHandlerPause(int)
                0x00000000c000fc7e                KiDefaultSignalHandlerResume(int)
                0x00000000c000fcaa                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c000fcaf                KeInitSignals()
                0x00000000c000fcfe                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c000fd34                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c000fdb1                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c000fea8                KiCheckSignalZ
                0x00000000c000feea                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c000ff25                KiFinishSignalZ
 .text          0x00000000c000ff5c      0xe83 krnl/syscalls.32
                0x00000000c000ff5c                SysSeekDir(regs*)
                0x00000000c000ff61                SysTellDir(regs*)
                0x00000000c000ff66                SysVerify(regs*)
                0x00000000c000ff70                SysGetArgc(regs*)
                0x00000000c000ff84                SysTTYName(regs*)
                0x00000000c000ff8c                SysFormatDisk(regs*)
                0x00000000c000fff3                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010047                SysGetDiskVolumeLabel(regs*)
                0x00000000c00100a0                SysRealpath(regs*)
                0x00000000c00100ee                SysReadDir(regs*)
                0x00000000c001016e                SysIsATTY(regs*)
                0x00000000c00101c8                SysSeek(regs*)
                0x00000000c0010222                SysTell(regs*)
                0x00000000c001028f                SysSize(regs*)
                0x00000000c0010309                SysSizeFromFilename(regs*)
                0x00000000c001043d                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0010571                SysClose(regs*)
                0x00000000c0010607                SysOpenDir(regs*)
                0x00000000c0010684                SysMakeDir(regs*)
                0x00000000c00106f2                SysCloseDir(regs*)
                0x00000000c0010772                SysWait(regs*)
                0x00000000c0010793                SysNotImpl(regs*)
                0x00000000c00107ae                SysPanic(regs*)
                0x00000000c00107c9                SysRmdir(regs*)
                0x00000000c0010827                SysUnlink(regs*)
                0x00000000c0010885                SysGetArgv(regs*)
                0x00000000c00108d2                SysUSleep(regs*)
                0x00000000c00108fb                SysSpawn(regs*)
                0x00000000c001096c                SysGetEnv(regs*)
                0x00000000c0010a21                SysSetFatAttrib(regs*)
                0x00000000c0010a8a                SysShutdown(regs*)
                0x00000000c0010ae7                SysPipe(regs*)
                0x00000000c0010b2c                SysGetUnixTime(regs*)
                0x00000000c0010b40                string_ends_with(char const*, char const*)
                0x00000000c0010b8b                SysOpen(regs*)
                0x00000000c0010d8a                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0010ddf        0x1 
 .text          0x00000000c0010de0      0xa85 krnl/terminal.32
                0x00000000c0010de0                VgaText::isAtty()
                0x00000000c0010de4                VgaText::~VgaText()
                0x00000000c0010de4                VgaText::~VgaText()
                0x00000000c0010e08                VgaText::~VgaText()
                0x00000000c0010e32                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0010e52                setTerminalScrollLock(bool)
                0x00000000c0010e53                doTerminalCycle()
                0x00000000c0010e54                addToTerminalCycle(VgaText*)
                0x00000000c0010e55                scrollTerminalScrollLock(int)
                0x00000000c0010e56                VgaText::updateTitle()
                0x00000000c0010e58                VgaText::load()
                0x00000000c0010e5a                VgaText::updateCursor()
                0x00000000c0010e70                VgaText::doANSI_SGR(int)
                0x00000000c0010ee4                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0010ef4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0010f04                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0010f24                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0010f30                VgaText::setTitleColour(VgaColour)
                0x00000000c0010f3c                VgaText::setTitle(char*)
                0x00000000c0010f3e                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0010f50                VgaText::scrollScreen()
                0x00000000c0010fe2                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0010ff2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0011082                VgaText::getCursorX()
                0x00000000c001108a                VgaText::getCursorY()
                0x00000000c0011092                VgaText::setCursor(int, int)
                0x00000000c00110a9                setActiveTerminal(VgaText*)
                0x00000000c00110f4                VgaText::clearScreen()
                0x00000000c0011142                VgaText::setCursorX(int)
                0x00000000c001115a                VgaText::setCursorY(int)
                0x00000000c0011172                VgaText::incrementCursor(bool)
                0x00000000c00111c6                VgaText::decrementCursor(bool)
                0x00000000c00111e8                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00112b8                VgaText::putchar(char)
                0x00000000c00113a0                VgaText::putx(unsigned int)
                0x00000000c00113e6                VgaText::puts(char const*)
                0x00000000c001140c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0011458                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00115a6                VgaText::VgaText(char const*)
                0x00000000c00115a6                VgaText::VgaText(char const*)
                0x00000000c00116f6                VgaText::receiveKey(unsigned char)
                0x00000000c0011864                VgaText::doUpdate()
 *fill*         0x00000000c0011865        0x3 
 .text          0x00000000c0011868      0x224 krnl/tss.32
                0x00000000c0011868                TSS::TSS()
                0x00000000c0011868                TSS::TSS()
                0x00000000c0011878                TSS::setESP(unsigned long)
                0x00000000c001188c                TSS::flush()
                0x00000000c00118ac                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0011a8c      0x50a krnl/unixfile.32
                0x00000000c0011a8c                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0011ae2                ReservedFilename::isAtty()
                0x00000000c0011afe                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011b5c                UnixFile::getFileDescriptor()
                0x00000000c0011b64                UnixFile::UnixFile(int)
                0x00000000c0011b64                UnixFile::UnixFile(int)
                0x00000000c0011d18                ReservedFilename::ReservedFilename(int)
                0x00000000c0011d18                ReservedFilename::ReservedFilename(int)
                0x00000000c0011d4a                UnixFile::~UnixFile()
                0x00000000c0011d4a                UnixFile::~UnixFile()
                0x00000000c0011de6                UnixFile::~UnixFile()
                0x00000000c0011e0e                ReservedFilename::~ReservedFilename()
                0x00000000c0011e0e                ReservedFilename::~ReservedFilename()
                0x00000000c0011e32                ReservedFilename::~ReservedFilename()
                0x00000000c0011e59                KeGetFileFromDescriptor(int)
 .text          0x00000000c0011f96     0x134a krnl/virtmgr.32
                0x00000000c0011f96                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0011fd0                Virt::getPageState(unsigned long)
                0x00000000c0011ff3                Virt::allocateKernelVirtualPages(int)
                0x00000000c001210f                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0012132                Virt::swapIDToSector(unsigned long)
                0x00000000c0012148                Virt::allocateSwapfilePage()
                0x00000000c00121c7                Virt::virtualMemorySetup()
                0x00000000c0012218                Virt::setupPageSwapping(int)
                0x00000000c001228a                VAS::setCPUSpecific(unsigned long)
                0x00000000c001228c                VAS::VAS(VAS*)
                0x00000000c001228c                VAS::VAS(VAS*)
                0x00000000c00122a4                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00122d2                VAS::getPageTableEntry(unsigned long)
                0x00000000c00122f1                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c001242e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0012452                VAS::virtualToPhysical(unsigned long)
                0x00000000c001246c                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c00124ae                VAS::VAS()
                0x00000000c00124ae                VAS::VAS()
                0x00000000c0012518                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0012538                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0012564                VAS::~VAS()
                0x00000000c0012564                VAS::~VAS()
                0x00000000c00126cc                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c00127d4                VAS::allocatePages(int, int)
                0x00000000c00128c6                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0012920                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0012a10                VAS::VAS(bool)
                0x00000000c0012a10                VAS::VAS(bool)
                0x00000000c0012bf8                VAS::evict(unsigned long)
                0x00000000c0012cfc                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c001300c                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0013080                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00130ac                VAS::scanForEviction()
                0x00000000c00131e5                mapVASFirstTime
 .text          0x00000000c00132e0       0x36 sys/eject.32
                0x00000000c00132e0                SysEject(regs*)
 .text          0x00000000c0013316       0x18 sys/exit.32
                0x00000000c0013316                SysExit(regs*)
 .text          0x00000000c001332e       0x1f sys/getcwd.32
                0x00000000c001332e                SysGetCwd(regs*)
 .text          0x00000000c001334d       0x26 sys/getpid.32
                0x00000000c001334d                SysGetPID(regs*)
 .text          0x00000000c0013373       0x21 sys/getramdata.32
                0x00000000c0013373                SysGetRAMData(regs*)
 .text          0x00000000c0013394       0x97 sys/getvgaptr.32
                0x00000000c0013394                SysGetVGAPtr(regs*)
 *fill*         0x00000000c001342b        0x1 
 .text          0x00000000c001342c       0xb9 sys/kill.32
                0x00000000c001342c                SysKill(regs*)
 .text          0x00000000c00134e5       0xa8 sys/loaddll.32
                0x00000000c00134e5                SysLoadDLL(regs*)
 .text          0x00000000c001358d       0x68 sys/read.32
                0x00000000c001358d                SysRead(regs*)
 .text          0x00000000c00135f5       0x29 sys/registersignal.32
                0x00000000c00135f5                SysRegisterSignal(regs*)
 .text          0x00000000c001361e      0x1cc sys/registry.32
                0x00000000c001361e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013662                SysRegistryReadExtent(regs*)
                0x00000000c00136aa                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00136c1                SysRegistryEnterDirectory(regs*)
                0x00000000c00136d8                SysRegistryGetNext(regs*)
                0x00000000c00136ef                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013729                SysRegistryOpen(regs*)
                0x00000000c001373d                SysRegistryClose(regs*)
                0x00000000c0013754                SysRegistryEasyReadString(regs*)
                0x00000000c00137a0                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c00137ea       0x55 sys/sbrk.32
                0x00000000c00137ea                SysSbrk(regs*)
 .text          0x00000000c001383f       0x1c sys/setcwd.32
                0x00000000c001383f                SysSetCwd(regs*)
 .text          0x00000000c001385b       0x96 sys/settime.32
                0x00000000c001385b                SysSetTime(regs*)
 .text          0x00000000c00138f1       0x73 sys/symlink.32
                0x00000000c00138f1                SysSymlink(regs*)
 .text          0x00000000c0013964       0x3f sys/timezone.32
                0x00000000c0013964                SysTimezone(regs*)
 .text          0x00000000c00139a3       0xfc sys/truncate.32
                0x00000000c00139a3                SysTruncate(regs*)
 .text          0x00000000c0013a9f       0x68 sys/write.32
                0x00000000c0013a9f                SysWrite(regs*)
 .text          0x00000000c0013b07       0x9d sys/wsbe.32
                0x00000000c0013b07                SysWsbe(regs*)
 .text          0x00000000c0013ba4       0x28 sys/yield.32
                0x00000000c0013ba4                SysYield(regs*)
 .text          0x00000000c0013bcc     0x1228 thr/elf.32
                0x00000000c0013bcc                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0013e57                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014076                Thr::runtimeReferenceHelper()
                0x00000000c0014089                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00140d8                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014396                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014ad7                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0014b09                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014b40                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0014b5a                Thr::loadDLL(char const*, bool)
                0x00000000c0014dbb                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0014df4       0x5a thr/exec.32
                0x00000000c0014df4                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0014e4e        0x2 
 .text          0x00000000c0014e50     0x1191 thr/prcssthr.32
                0x00000000c0014e50                userModeEntryPoint(void*)
                0x00000000c0014e7c                changeTSS
                0x00000000c0014eac                switchToThread(ThreadControlBlock*)
                0x00000000c0014f5c                Process::addArgs(char**)
                0x00000000c0014fc8                Process::Process(char const*, Process*, char**)
                0x00000000c0014fc8                Process::Process(char const*, Process*, char**)
                0x00000000c00151d4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00151d4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00153a8                taskStartupFunction
                0x00000000c00153b4                KeDisablePreemption()
                0x00000000c00153dc                KeRestorePreemption()
                0x00000000c00153fc                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015504                Process::createUserThread()
                0x00000000c0015524                setupMultitasking(void (*)())
                0x00000000c0015648                schedule()
                0x00000000c00156dc                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015708                blockTask(TaskState)
                0x00000000c0015754                waitTask(int, int*, int)
                0x00000000c0015798                milliTenthSleepUntil(unsigned int)
                0x00000000c0015840                milliTenthSleep(unsigned int)
                0x00000000c0015854                sleep(unsigned int)
                0x00000000c0015864                taskReturned
                0x00000000c00158ac                Thr::processFromPID(int)
                0x00000000c0015958                unblockTask(ThreadControlBlock*)
                0x00000000c0015a0c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015ce0                cleanerTaskFunction(void*)
                0x00000000c0015df8                terminateTask(int)
                0x00000000c0015f14                Thr::terminateFromIRQ(int)
 .text          0x00000000c0015fe1      0xd18 vm86/vm8086.32
                0x00000000c0015fe1                Vm::inbv(unsigned short)
                0x00000000c0015ff4                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001602a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001603a                Vm::getSegment(unsigned int)
                0x00000000c0016042                Vm::getOffset(unsigned int)
                0x00000000c0016047                Vm::mainloop2()
                0x00000000c0016081                Vm::mainVm8086Loop(void*)
                0x00000000c0016094                Vm::mainloop3(unsigned long)
                0x00000000c00160ba                Vm::initialise8086()
                0x00000000c00160fd                Vm::resetConventionalMemory8086()
                0x00000000c00160fe                Vm::finish8086()
                0x00000000c0016160                Vm::getOutput8086(unsigned char*)
                0x00000000c0016185                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00162b2                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00164be                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001655b                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001656c                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001657e                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001658f                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00165a4                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00165ba                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00165cf                Vm::faultHandler(regs*)
 *fill*         0x00000000c0016cf9        0x1 
 .text          0x00000000c0016cfa     0x1ee9 arch/i386/hal.32
                0x00000000c0016cfa                noCopro(unsigned long)
                0x00000000c0016cfc                CPU::close(int, int, void*)
                0x00000000c0016cff                x86ReadCMOS(unsigned char)
                0x00000000c0016d53                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0016db5                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0016dd4                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0016df1                AMD_K6_writeback(int, int, int)
                0x00000000c0016eb1                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0016f4f                cpuidCheckEDX(unsigned int)
                0x00000000c0016f7c                cpuidCheckECX(unsigned int)
                0x00000000c0016faa                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0016fd8                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0017006                HalDetectFeatures()
                0x00000000c0017dd1                HalEnableNMI()
                0x00000000c0017de4                HalDisableNMI()
                0x00000000c0017df7                HalGetNMIState()
                0x00000000c0017dfd                x86rdmsr(unsigned int)
                0x00000000c0017e3b                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0017e80                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0017e96                HalFindRSDP()
                0x00000000c0017f2b                HalHandlePageFault(void*, void*)
                0x00000000c0017fd8                HalHandleOpcodeFault(void*, void*)
                0x00000000c001801a                HalDisplayDebugInfo(void*)
                0x00000000c00183a8                HalReceivedNMI()
                0x00000000c0018443                HalSystemIdle()
                0x00000000c00184a2                i386SaveCoprocessor(void*)
                0x00000000c00184b6                i386LoadCoprocessor(void*)
                0x00000000c00184ca                x87EmulHandler(regs*, void*)
                0x00000000c0018567                HalInitialiseCoprocessor()
                0x00000000c00185eb                HalPanic(char const*)
                0x00000000c00186ff                HalQueryPerformanceCounter()
                0x00000000c001870f                HalInitialise()
                0x00000000c00188a1                HalMakeBeep(int)
                0x00000000c00188db                HalGetRand()
                0x00000000c00188de                HalEndOfInterrupt(int)
                0x00000000c0018909                HalRestart()
                0x00000000c001890a                HalShutdown()
                0x00000000c001890b                HalSleep()
                0x00000000c001890c                CPU::CPU()
                0x00000000c001890c                CPU::CPU()
                0x00000000c0018990                CPU::setupSMEP()
                0x00000000c001899c                CPU::setupUMIP()
                0x00000000c00189a6                CPU::setupTSC()
                0x00000000c00189b0                CPU::setupLargePages()
                0x00000000c00189ba                CPU::setupPAT()
                0x00000000c00189ec                CPU::setupMTRR()
                0x00000000c00189ee                CPU::setupGlobalPages()
                0x00000000c00189f8                CPU::allowUsermodeDataAccess()
                0x00000000c0018a06                CPU::prohibitUsermodeDataAccess()
                0x00000000c0018a14                CPU::setupSMAP()
                0x00000000c0018a22                CPU::setupFeatures()
                0x00000000c0018aee                CPU::open(int, int, void*)
 .text          0x00000000c0018be3      0x268 arch/i386/intctrl.32
                0x00000000c0018be3                convertLegacyIRQNumber(int)
                0x00000000c0018c1f                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0018c69                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0018da6                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0018dda                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c0018e4b        0x1 
 .text          0x00000000c0018e4c      0x2dc arch/i386/pic.32
                0x00000000c0018e4c                picIoWait()
                0x00000000c0018e54                picDisable()
                0x00000000c0018e88                picGetIRQReg(int)
                0x00000000c0018f04                picOpen()
                0x00000000c0019088                picEOI(int)
 .text          0x00000000c0019128      0x5ed arch/i386/rtc.32
                0x00000000c0019128                RTC::open(int, int, void*)
                0x00000000c001912c                RTC::close(int, int, void*)
                0x00000000c0019130                RTC::timeInSecondsUTC()
                0x00000000c0019142                RTC::timeInDatetimeUTC()
                0x00000000c0019168                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00191a6                RTC::~RTC()
                0x00000000c00191a6                RTC::~RTC()
                0x00000000c00191ca                RTC::~RTC()
                0x00000000c00191f4                RTC::get_update_in_progress_flag()
                0x00000000c0019208                RTC::completeRTCRefresh()
                0x00000000c00194b6                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001962c                rtcIRQHandler(regs*, void*)
                0x00000000c001966c                RTC::RTC()
                0x00000000c001966c                RTC::RTC()
 *fill*         0x00000000c0019715        0x3 
 .text          0x00000000c0019718      0x1f4 arch/i386/vga.32
                0x00000000c0019718                HalConsoleScroll(int, int)
                0x00000000c0019820                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0019884                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001990c     0x14f3 fs/fat/vfslink.32
                0x00000000c001990c                FAT::getName()
                0x00000000c0019914                FAT::tell(void*, unsigned long long*)
                0x00000000c0019950                FAT::stat(void*, unsigned long long*)
                0x00000000c001998c                FAT::~FAT()
                0x00000000c001998c                FAT::~FAT()
                0x00000000c00199b0                FAT::~FAT()
                0x00000000c00199d8                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019a7c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019b5c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019d40                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019f5c                FAT::allocateSwapfile(char const*, int)
                0x00000000c001a11c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a28c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001a2ec                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001a34c                FAT::close(void*)
                0x00000000c001a3a0                FAT::closeDir(void*)
                0x00000000c001a3f4                FAT::truncate(void*, unsigned long long)
                0x00000000c001a460                FAT::seek(void*, unsigned long long)
                0x00000000c001a4b8                fatWrapperReadDisk
                0x00000000c001a4f8                fatWrapperWriteDisk
                0x00000000c001a538                fatWrapperIoctl
                0x00000000c001a658                FAT::FAT()
                0x00000000c001a658                FAT::FAT()
                0x00000000c001a6b0                FAT::fixFilepath(char*)
                0x00000000c001a6f0                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001a864                FAT::openDir(char const*, void**)
                0x00000000c001a914                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001aa0c                FAT::unlink(char const*)
                0x00000000c001aa8c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ac44                FAT::rename(char const*, char const*)
                0x00000000c001ad10                FAT::mkdir(char const*)
                0x00000000c001ad90                FAT::exists(char const*)
 *fill*         0x00000000c001adff        0x1 
 .text          0x00000000c001ae00       0x94 fs/iso9660/helper.32
                0x00000000c001ae00                isoReadDiscSectorHelper
                0x00000000c001ae5c                iso_kprintf
                0x00000000c001ae78                iso_kprintfd
 .text          0x00000000c001ae94      0x71a fs/iso9660/vfslink.32
                0x00000000c001ae94                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001ae9a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001aea0                ISO9660::getName()
                0x00000000c001aea6                ISO9660::closeDir(void*)
                0x00000000c001aeb0                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001aeb6                ISO9660::unlink(char const*)
                0x00000000c001aebc                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001aec2                ISO9660::rename(char const*, char const*)
                0x00000000c001aec8                ISO9660::mkdir(char const*)
                0x00000000c001aece                ISO9660::~ISO9660()
                0x00000000c001aece                ISO9660::~ISO9660()
                0x00000000c001aef2                ISO9660::~ISO9660()
                0x00000000c001af1a                ISO9660::exists(char const*)
                0x00000000c001af2e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001b014                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001b05c                ISO9660::seek(void*, unsigned long long)
                0x00000000c001b09e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001b0dc                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001b12e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b270                ISO9660::close(void*)
                0x00000000c001b2a0                ISO9660::openDir(char const*, void**)
                0x00000000c001b37a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b495                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b514                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b586                ISO9660::ISO9660()
                0x00000000c001b586                ISO9660::ISO9660()
 .text          0x00000000c001b5ae      0x26c hal/sound/sndcard.32
                0x00000000c001b5ae                SoundCard::beginPlayback()
                0x00000000c001b5bc                SoundCard::stopPlayback()
                0x00000000c001b5ca                SoundCard::SoundCard(char const*)
                0x00000000c001b5ca                SoundCard::SoundCard(char const*)
                0x00000000c001b668                SoundCard::~SoundCard()
                0x00000000c001b668                SoundCard::~SoundCard()
                0x00000000c001b68c                SoundCard::~SoundCard()
                0x00000000c001b6b6                SoundCard::configureRates(int, int, int)
                0x00000000c001b6e6                SoundCard::getSamples16(int, short*)
                0x00000000c001b742                SoundCard::getSamples32(int, int*)
                0x00000000c001b7c8                SoundCard::addChannel(SoundPort*)
                0x00000000c001b806                SoundCard::removeChannel(int)
 *fill*         0x00000000c001b81a        0x2 
 .text          0x00000000c001b81c      0x42f hal/sound/sndport.32
                0x00000000c001b81c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b81c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b8a8                SoundPort::~SoundPort()
                0x00000000c001b8a8                SoundPort::~SoundPort()
                0x00000000c001b8dc                SoundPort::unpause()
                0x00000000c001b8e8                SoundPort::pause()
                0x00000000c001b8f4                SoundPort::getBufferUsed()
                0x00000000c001b8fc                SoundPort::getBufferSize()
                0x00000000c001b904                SoundPort::buffer8(signed char*, int)
                0x00000000c001b998                SoundPort::buffer16(short*, int)
                0x00000000c001ba2c                SoundPort::buffer32(int*, int)
                0x00000000c001bab8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001bb88                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001bc4b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001bc4b        0x1 
 .text          0x00000000c001bc4c      0xc25 hw/bus/pci.32
                0x00000000c001bc4c                PCI::open(int, int, void*)
                0x00000000c001bc6a                PCI::close(int, int, void*)
                0x00000000c001bc6e                PCI::PCI()
                0x00000000c001bc6e                PCI::PCI()
                0x00000000c001bd06                PCI::readBAR8(unsigned int, int)
                0x00000000c001bd22                PCI::readBAR16(unsigned int, int)
                0x00000000c001bd40                PCI::readBAR32(unsigned int, int)
                0x00000000c001bd5c                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001bd7c                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001bd9e                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001bdbe                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001be34                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bede                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001bf02                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001bf2a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001bf74                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001bf9c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001bfc0                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001bfe4                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001c00c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c070                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001c156                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001c420                PCI::checkBus(unsigned char)
                0x00000000c001c444                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001c62a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001c7a6                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001c818                PCI::detect()
 *fill*         0x00000000c001c871        0x1 
 .text          0x00000000c001c872      0xe50 hw/diskctrl/ide.32
                0x00000000c001c872                IDE::close(int, int, void*)
                0x00000000c001c876                IDE::IDE()
                0x00000000c001c876                IDE::IDE()
                0x00000000c001c8aa                IDE::prepareInterrupt(unsigned char)
                0x00000000c001c8bc                selectDrive(unsigned char, unsigned char)
                0x00000000c001c8be                IDE::getBase(unsigned char)
                0x00000000c001c8d0                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001c990                IDE::read(unsigned char, unsigned char)
                0x00000000c001ca44                IDE::waitInterrupt(unsigned char)
                0x00000000c001caa6                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001cac2                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001cade                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001cb28                IDE::open(int, int, void*)
                0x00000000c001d080                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001d150                IDE::detect()
                0x00000000c001d5b4                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001d66e                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001d6c2      0x33f hw/diskctrl/satabus.32
                0x00000000c001d6c2                SATABus::close(int, int, void*)
                0x00000000c001d6c6                SATABus::detect()
                0x00000000c001d6c8                SATABus::SATABus()
                0x00000000c001d6c8                SATABus::SATABus()
                0x00000000c001d74e                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d780                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d7c8                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d7e8                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d812                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001d924                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001d9ce                SATABus::open(int, int, void*)
 *fill*         0x00000000c001da01        0x1 
 .text          0x00000000c001da02      0x7c1 hw/diskphys/ata.32
                0x00000000c001da02                ATA::close(int, int, void*)
                0x00000000c001da26                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001da28                ATA::ATA()
                0x00000000c001da28                ATA::ATA()
                0x00000000c001da56                ATA::flush(bool)
                0x00000000c001daa4                ATA::readyForCommand()
                0x00000000c001daf0                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001def8                ATA::read(unsigned long long, int, void*)
                0x00000000c001df44                ATA::write(unsigned long long, int, void*)
                0x00000000c001df90                ATA::detectCHS()
                0x00000000c001dfba                ATA::open(int, int, void*)
                0x00000000c001e1a5                combineCharAndColour(char, unsigned char)
                0x00000000c001e1b6                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001e1c3        0x1 
 .text          0x00000000c001e1c4      0x612 hw/diskphys/atapi.32
                0x00000000c001e1c4                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001e1ca                ATAPI::close(int, int, void*)
                0x00000000c001e1ee                ATAPI::ATAPI()
                0x00000000c001e1ee                ATAPI::ATAPI()
                0x00000000c001e21c                ATAPI::readyForCommand()
                0x00000000c001e26e                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001e52e                ATAPI::diskRemoved()
                0x00000000c001e568                ATAPI::eject()
                0x00000000c001e5b0                ATAPI::diskInserted()
                0x00000000c001e5bc                ATAPI::detectMedia()
                0x00000000c001e67c                ATAPI::open(int, int, void*)
                0x00000000c001e75c                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e7d6      0x44a hw/diskphys/sata.32
                0x00000000c001e7d6                SATA::close(int, int, void*)
                0x00000000c001e7fa                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001e7fc                SATA::open(int, int, void*)
                0x00000000c001e8b4                SATA::SATA()
                0x00000000c001e8b4                SATA::SATA()
                0x00000000c001e8e2                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001eb68                SATA::read(unsigned long long, int, void*)
                0x00000000c001ebb4                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001ec20      0x5d8 hw/diskphys/satapi.32
                0x00000000c001ec20                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ec26                SATAPI::close(int, int, void*)
                0x00000000c001ec4a                SATAPI::SATAPI()
                0x00000000c001ec4a                SATAPI::SATAPI()
                0x00000000c001ec78                SATAPI::diskRemoved()
                0x00000000c001ec7a                SATAPI::diskInserted()
                0x00000000c001ec96                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001ef7c                SATAPI::eject()
                0x00000000c001efb8                SATAPI::detectMedia()
                0x00000000c001f00e                SATAPI::open(int, int, void*)
                0x00000000c001f10e                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001f1f8      0x443 hw/intctrl/apic.32
                0x00000000c001f1f8                IOAPIC::close(int, int, void*)
                0x00000000c001f1fe                apicGetBase()
                0x00000000c001f21c                IOAPIC::IOAPIC()
                0x00000000c001f21c                IOAPIC::IOAPIC()
                0x00000000c001f244                apicOpen()
                0x00000000c001f3d0                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001f402                IOAPIC::read(int)
                0x00000000c001f42a                IOAPIC::open(int, int, void*)
                0x00000000c001f510                IOAPIC::write(int, int)
                0x00000000c001f53c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001f63b        0x1 
 .text          0x00000000c001f63c       0xf0 hw/timer/apictimer.32
                0x00000000c001f63c                APICTimer::close(int, int, void*)
                0x00000000c001f644                apicTimerHandler(regs*, void*)
                0x00000000c001f66c                APICTimer::open(int, int, void*)
                0x00000000c001f6dc                APICTimer::write(int)
                0x00000000c001f704                APICTimer::APICTimer()
                0x00000000c001f704                APICTimer::APICTimer()
 .text          0x00000000c001f72c      0x1ad hw/timer/pit.32
                0x00000000c001f72c                PIT::write(int)
                0x00000000c001f7b0                pitHandler(regs*, void*)
                0x00000000c001f7d8                PIT::open(int, int, void*)
                0x00000000c001f828                PIT::close(int, int, void*)
                0x00000000c001f858                PIT::PIT()
                0x00000000c001f858                PIT::PIT()
 *fill*         0x00000000c001f8d9        0x7 
 .text          0x00000000c001f8e0       0x6f arch/i386/avx.32
                0x00000000c001f8e0                avxDetect
                0x00000000c001f90a                avxSave
                0x00000000c001f91b                avxLoad
                0x00000000c001f92c                avxInit
                0x00000000c001f94e                avxClose
 *fill*         0x00000000c001f94f        0x1 
 .text          0x00000000c001f950      0x2ec arch/i386/interrupt.32
                0x00000000c001f950                isr0
                0x00000000c001f960                isr1
                0x00000000c001f96a                isr2
                0x00000000c001f974                isr3
                0x00000000c001f97e                isr4
                0x00000000c001f988                isr5
                0x00000000c001f992                isr6
                0x00000000c001f99c                isr7
                0x00000000c001f9a6                isr8
                0x00000000c001f9ae                isr9
                0x00000000c001f9b8                isr10
                0x00000000c001f9c0                isr11
                0x00000000c001f9c8                isr12
                0x00000000c001f9d0                isr13
                0x00000000c001f9ea                isr14
                0x00000000c001f9f2                isr15
                0x00000000c001f9fc                isr16
                0x00000000c001fa06                isr17
                0x00000000c001fa10                isr18
                0x00000000c001fa1a                irq3
                0x00000000c001fa24                irq4
                0x00000000c001fa2e                irq5
                0x00000000c001fa38                irq6
                0x00000000c001fa42                irq7
                0x00000000c001fa4c                irq8
                0x00000000c001fa56                irq9
                0x00000000c001fa60                irq10
                0x00000000c001fa6a                irq11
                0x00000000c001fa74                irq12
                0x00000000c001fa7e                irq13
                0x00000000c001fa88                irq14
                0x00000000c001fa92                irq15
                0x00000000c001fa9c                irq1
                0x00000000c001faa3                irq2
                0x00000000c001faaa                isr96
                0x00000000c001fab1                irq0
                0x00000000c001fab6                int_common_stub
                0x00000000c001fae8                syscall_common_stub
                0x00000000c001fbec                irq16
                0x00000000c001fbf6                irq17
                0x00000000c001fc00                irq18
                0x00000000c001fc0a                irq19
                0x00000000c001fc14                irq20
                0x00000000c001fc1e                irq21
                0x00000000c001fc28                irq22
                0x00000000c001fc32                irq23
 *fill*         0x00000000c001fc3c        0x4 
 .text          0x00000000c001fc40       0x10 arch/i386/rdrand.32
                0x00000000c001fc40                i386GetRDRAND
 .text          0x00000000c001fc50       0x39 arch/i386/sse.32
                0x00000000c001fc50                sseDetect
                0x00000000c001fc68                sseSave
                0x00000000c001fc70                sseLoad
                0x00000000c001fc78                sseInit
                0x00000000c001fc88                sseClose
 *fill*         0x00000000c001fc89        0x7 
 .text          0x00000000c001fc90       0x4f arch/i386/x87.32
                0x00000000c001fc96                x87Detect
                0x00000000c001fcb7                x87Save
                0x00000000c001fcbe                x87Load
                0x00000000c001fcc5                x87Init
                0x00000000c001fcde                x87Close
 *fill*         0x00000000c001fcdf        0x1 
 .text          0x00000000c001fce0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001fd05        0x0 crtn.32
 *fill*         0x00000000c001fd05        0x3 
 .text          0x00000000c001fd08      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001fd08                __divdi3
 *fill*         0x00000000c001fe53        0x1 
 .text          0x00000000c001fe54      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001fe54                __moddi3
 *fill*         0x00000000c001ffd2        0x2 
 .text          0x00000000c001ffd4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001ffd4                __udivdi3
 *fill*         0x00000000c00200d3        0x1 
 .text          0x00000000c00200d4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c00200d4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c00201f0        0x0
 .iplt          0x00000000c00201f0        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c00201ee        0xf
 .init          0x00000000c00201ee        0x3 crti.32
                0x00000000c00201ee                _init
 .init          0x00000000c00201f1        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c00201f6        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c00201fb        0x2 crtn.32

.fini           0x00000000c00201fd        0xa
 .fini          0x00000000c00201fd        0x3 crti.32
                0x00000000c00201fd                _fini
 .fini          0x00000000c0020200        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0020205        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020208       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020208       0x1a hal/device.32
                0x00000000c0020208                DriverlessDevice::~DriverlessDevice()
                0x00000000c0020208                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020222       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020222       0x2a hal/device.32
                0x00000000c0020222                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002024c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002024c       0xdc hal/device.32
                0x00000000c002024c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020328       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020328       0x42 hal/device.32
                0x00000000c0020328                LinkedList<Device>::LinkedList()
                0x00000000c0020328                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002036c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002036c       0x1c hal/timer.32
                0x00000000c002036c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020388        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020388        0x7 hal/timer.32
                0x00000000c0020388                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020390       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020390       0xbc hal/timer.32
                0x00000000c0020390                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002044c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002044c       0xda hal/timer.32
                0x00000000c002044c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0020528       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0020528       0x23 hw/acpi.32
                0x00000000c0020528                ACPI::~ACPI()
                0x00000000c0020528                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002054c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002054c       0x2a hw/acpi.32
                0x00000000c002054c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0020578        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0020578        0x2 hw/acpi.32
                0x00000000c0020578                LinkedList<Device>::~LinkedList()
                0x00000000c0020578                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002057c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002057c       0x1c hw/acpi.32
                0x00000000c002057c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0020598        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0020598        0x7 hw/acpi.32
                0x00000000c0020598                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00205a0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00205a0       0xb8 hw/acpi.32
                0x00000000c00205a0                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0020658       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0020658       0x23 krnl/computer.32
                0x00000000c0020658                Computer::~Computer()
                0x00000000c0020658                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002067c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002067c       0x2a krnl/computer.32
                0x00000000c002067c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c00206a6       0x24
 .text._Z10idleCommonv
                0x00000000c00206a6       0x24 krnl/idle.32
                0x00000000c00206a6                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00206ca        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00206ca        0x2 krnl/unixfile.32
                0x00000000c00206ca                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00206ca                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00206cc       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00206cc       0x42 krnl/unixfile.32
                0x00000000c00206cc                LinkedList<UnixFile>::LinkedList()
                0x00000000c00206cc                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002070e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002070e       0xd3 krnl/unixfile.32
                0x00000000c002070e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00207e2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00207e2        0x7 krnl/unixfile.32
                0x00000000c00207e2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00207ea       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00207ea       0xa1 krnl/unixfile.32
                0x00000000c00207ea                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002088c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002088c        0x8 krnl/unixfile.32
                0x00000000c002088c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020894        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020894        0x8 sys/kill.32
                0x00000000c0020894                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002089c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002089c        0x2 thr/prcssthr.32
                0x00000000c002089c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002089c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00208a0       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00208a0       0x49 thr/prcssthr.32
                0x00000000c00208a0                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00208a0                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00208ec       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00208ec       0x42 thr/prcssthr.32
                0x00000000c00208ec                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00208ec                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c002092e       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002092e       0x23 arch/i386/hal.32
                0x00000000c002092e                CPU::~CPU()
                0x00000000c002092e                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020952       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020952       0x2a arch/i386/hal.32
                0x00000000c0020952                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002097c       0x23
 .text._ZN3PCID2Ev
                0x00000000c002097c       0x23 hw/bus/pci.32
                0x00000000c002097c                PCI::~PCI()
                0x00000000c002097c                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00209a0       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00209a0       0x2a hw/bus/pci.32
                0x00000000c00209a0                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00209ca       0x23
 .text._ZN3IDED2Ev
                0x00000000c00209ca       0x23 hw/diskctrl/ide.32
                0x00000000c00209ca                IDE::~IDE()
                0x00000000c00209ca                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00209ee       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00209ee       0x2a hw/diskctrl/ide.32
                0x00000000c00209ee                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020a18       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020a18       0x23 hw/diskctrl/satabus.32
                0x00000000c0020a18                SATABus::~SATABus()
                0x00000000c0020a18                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020a3c       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020a3c       0x2a hw/diskctrl/satabus.32
                0x00000000c0020a3c                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020a66       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020a66       0x23 hw/diskphys/ata.32
                0x00000000c0020a66                ATA::~ATA()
                0x00000000c0020a66                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020a8a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020a8a       0x2a hw/diskphys/ata.32
                0x00000000c0020a8a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0020ab4       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0020ab4       0x23 hw/diskphys/atapi.32
                0x00000000c0020ab4                ATAPI::~ATAPI()
                0x00000000c0020ab4                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020ad8       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020ad8       0x2a hw/diskphys/atapi.32
                0x00000000c0020ad8                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0020b02       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0020b02       0x23 hw/diskphys/sata.32
                0x00000000c0020b02                SATA::~SATA()
                0x00000000c0020b02                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020b26       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020b26       0x2a hw/diskphys/sata.32
                0x00000000c0020b26                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0020b50       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0020b50       0x23 hw/diskphys/satapi.32
                0x00000000c0020b50                SATAPI::~SATAPI()
                0x00000000c0020b50                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0020b74       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0020b74       0x2a hw/diskphys/satapi.32
                0x00000000c0020b74                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020b9e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020b9e       0x23 hw/intctrl/apic.32
                0x00000000c0020b9e                IOAPIC::~IOAPIC()
                0x00000000c0020b9e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0020bc2       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0020bc2       0x2a hw/intctrl/apic.32
                0x00000000c0020bc2                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020bec       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020bec       0x23 hw/timer/apictimer.32
                0x00000000c0020bec                APICTimer::~APICTimer()
                0x00000000c0020bec                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0020c10       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0020c10       0x2a hw/timer/apictimer.32
                0x00000000c0020c10                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020c3c       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020c3c       0x23 hw/timer/pit.32
                0x00000000c0020c3c                PIT::~PIT()
                0x00000000c0020c3c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0020c60       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0020c60       0x2a hw/timer/pit.32
                0x00000000c0020c60                PIT::~PIT()

.rodata         0x00000000c0020c8a     0x3926
                0x00000000c0020c8a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020c8a        0x2 
 .ctors         0x00000000c0020c8c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0020c90        0x4 krnl/unixfile.32
 .ctors         0x00000000c0020c94        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020c98        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020c9c                end_ctors = .
                0x00000000c0020c9c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020c9c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0020ca0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020ca0                __DTOR_END__
                0x00000000c0020ca4                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020ca4       0x1c 
 .rodata        0x00000000c0020cc0      0x101 acpica/utclib.32
                0x00000000c0020cc0                AcpiGbl_Ctypes
 *fill*         0x00000000c0020dc1        0x3 
 .rodata        0x00000000c0020dc4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c0020ddc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020e26       0x1a 
 .rodata        0x00000000c0020e40       0xed fs/fat/ff.32
 *fill*         0x00000000c0020f2d       0x13 
 .rodata        0x00000000c0020f40      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0021340       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c00213af        0x1 
 .rodata        0x00000000c00213b0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021500      0x169 dbg/usban.32
 *fill*         0x00000000c0021669        0x3 
 .rodata.str1.4
                0x00000000c002166c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00217a3      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c00218c6       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c002191f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021920       0x6c fs/vfs.32
                0x00000000c0021920                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002198c       0x1c fs/vfs.32
                0x00000000c002198c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00219a8       0x1c fs/vfs.32
                0x00000000c00219a8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00219c4       0x2c hal/bus.32
                0x00000000c00219c4                vtable for Bus
 .rodata.str1.1
                0x00000000c00219f0       0x70 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0021a60       0x3c hal/clock.32
                0x00000000c0021a60                vtable for Clock
 *fill*         0x00000000c0021a9c        0x4 
 .rodata        0x00000000c0021aa0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021ad0       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021b34       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021b56       0x15 hal/device.32
 *fill*         0x00000000c0021b6b        0x1 
 .rodata._ZTV6Device
                0x00000000c0021b6c       0x2c hal/device.32
                0x00000000c0021b6c                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021b98       0x2c hal/device.32
                0x00000000c0021b98                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021bc4       0x2c hal/diskctrl.32
                0x00000000c0021bc4                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021bf0       0x38 hal/diskphys.32
                0x00000000c0021bf0                vtable for PhysicalDisk
 .rodata        0x00000000c0021c28       0x53 hal/keybrd.32
 *fill*         0x00000000c0021c7b        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0021c7c       0x34 hal/keybrd.32
                0x00000000c0021c7c                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021cb0       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021cf4       0x2c hal/logidisk.32
                0x00000000c0021cf4                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021d20       0x2c hal/mouse.32
                0x00000000c0021d20                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021d4c       0x34 hal/nic.32
                0x00000000c0021d4c                vtable for NIC
 .rodata.str1.1
                0x00000000c0021d80        0xb hal/partition.32
 *fill*         0x00000000c0021d8b        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021d8c       0x44 hal/serial.32
                0x00000000c0021d8c                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021dd0       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021e1b        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021e23       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021e23       0x15 hal/timer.32
 *fill*         0x00000000c0021e23        0x1 
 .rodata._ZTV5Timer
                0x00000000c0021e24       0x30 hal/timer.32
                0x00000000c0021e24                vtable for Timer
 .rodata.str1.1
                0x00000000c0021e54       0x3e hal/vcache.32
 *fill*         0x00000000c0021e92        0x2 
 .rodata._ZTV6VCache
                0x00000000c0021e94       0x10 hal/vcache.32
                0x00000000c0021e94                vtable for VCache
 .rodata.str1.1
                0x00000000c0021ea4       0xba hal/video.32
 *fill*         0x00000000c0021f5e        0x2 
 .rodata._ZTV5Video
                0x00000000c0021f60       0x4c hal/video.32
                0x00000000c0021f60                vtable for Video
 .rodata.str1.1
                0x00000000c0021fac      0x17e hw/acpi.32
 *fill*         0x00000000c002212a        0x2 
 .rodata.str1.4
                0x00000000c002212c       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00221a3       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00221a3        0x8 hw/acpi.32
 *fill*         0x00000000c00221a3        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00221a4       0x2c hw/acpi.32
                0x00000000c00221a4                vtable for ACPI
 .rodata.str1.1
                0x00000000c00221d0       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022210       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0022231       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0022264        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0022267       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c00222dd        0x3 
 .rodata.str1.4
                0x00000000c00222e0       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c0022398       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0022441        0x3 
 .rodata._ZTV8Computer
                0x00000000c0022444       0x2c krnl/computer.32
                0x00000000c0022444                vtable for Computer
 .rodata.str1.1
                0x00000000c0022470       0x3c krnl/env.32
 .rodata        0x00000000c00224ac       0x76 krnl/fault.32
 *fill*         0x00000000c0022522        0x2 
 .rodata.str1.4
                0x00000000c0022524       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0022554        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0022563       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c00225c4      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00226c9       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0022721       0x39 krnl/pipe.32
 *fill*         0x00000000c002275a        0x2 
 .rodata._ZTV4Pipe
                0x00000000c002275c       0x1c krnl/pipe.32
                0x00000000c002275c                vtable for Pipe
 .rodata.str1.1
                0x00000000c0022778       0x91 krnl/resolve.32
 *fill*         0x00000000c0022809        0x3 
 .rodata.str1.4
                0x00000000c002280c       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c002282b       0xc9 krnl/signal.32
 .rodata.str1.4
                0x00000000c00228f4       0x72 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c0022966       0x7e krnl/syscalls.32
                                         0x86 (size before relaxing)
 .rodata.str1.1
                0x00000000c00229e4       0x2b krnl/terminal.32
 *fill*         0x00000000c0022a0f        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0022a10       0x1c krnl/terminal.32
                0x00000000c0022a10                vtable for VgaText
 .rodata        0x00000000c0022a2c       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0022a67       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0022a67       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0022a67       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0022a67        0x8 krnl/unixfile.32
 *fill*         0x00000000c0022a67        0x1 
 .rodata.str1.4
                0x00000000c0022a68       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0022a88       0x46 krnl/unixfile.32
 *fill*         0x00000000c0022ace        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c0022ad0       0x1c krnl/unixfile.32
                0x00000000c0022ad0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0022aec       0x1c krnl/unixfile.32
                0x00000000c0022aec                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0022b08      0x523 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c002302b      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c002318c        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c002319b        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00231a5       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00231c6       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c002321a       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0023246      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023450       0x7c thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00234cc       0xf0 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00235bc       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00235bc       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00235bc       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00235bc        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00235bc       0xdd vm86/vm8086.32
 *fill*         0x00000000c0023699        0x3 
 .rodata        0x00000000c002369c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00236cc      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c0023a17        0x1 
 .rodata.str1.4
                0x00000000c0023a18       0x57 arch/i386/hal.32
 *fill*         0x00000000c0023a6f        0x1 
 .rodata._ZTV3CPU
                0x00000000c0023a70       0x2c arch/i386/hal.32
                0x00000000c0023a70                vtable for CPU
 .rodata.str1.4
                0x00000000c0023a9c       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0023afd       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0023b3b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0023b50       0x3c arch/i386/rtc.32
                0x00000000c0023b50                vtable for RTC
 .rodata.str1.1
                0x00000000c0023b8c       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0023bcd        0x3 
 .rodata._ZTV3FAT
                0x00000000c0023bd0       0x6c fs/fat/vfslink.32
                0x00000000c0023bd0                vtable for FAT
 .rodata.str1.1
                0x00000000c0023c3c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0023c3c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0023d74       0x6c fs/iso9660/vfslink.32
                0x00000000c0023d74                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0023de0       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0023e24       0x34 hal/sound/sndcard.32
                0x00000000c0023e24                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0023e58       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023e97       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023ecf       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0023f70       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023fd4       0x2c hw/bus/pci.32
                0x00000000c0023fd4                vtable for PCI
 .rodata.str1.1
                0x00000000c0024000      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0024124       0x2c hw/diskctrl/ide.32
                0x00000000c0024124                vtable for IDE
 .rodata.str1.4
                0x00000000c0024150       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0024174       0x2c hw/diskctrl/satabus.32
                0x00000000c0024174                vtable for SATABus
 .rodata.str1.1
                0x00000000c00241a0       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c002425b        0x1 
 .rodata._ZTV3ATA
                0x00000000c002425c       0x38 hw/diskphys/ata.32
                0x00000000c002425c                vtable for ATA
 .rodata.str1.1
                0x00000000c0024294        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00242a1        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00242a4       0x38 hw/diskphys/atapi.32
                0x00000000c00242a4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00242dc       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0024364       0x38 hw/diskphys/sata.32
                0x00000000c0024364                vtable for SATA
 .rodata.str1.1
                0x00000000c002439c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0024486        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0024488       0x38 hw/diskphys/satapi.32
                0x00000000c0024488                vtable for SATAPI
 .rodata        0x00000000c00244c0       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c00244e6        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c00244e8       0x2c hw/intctrl/apic.32
                0x00000000c00244e8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0024514       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002452f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0024530       0x30 hw/timer/apictimer.32
                0x00000000c0024530                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0024560       0x1d hw/timer/pit.32
 *fill*         0x00000000c002457d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0024580       0x30 hw/timer/pit.32
                0x00000000c0024580                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00245b0      0xa55
 *(.data)
 .data          0x00000000c00245b0        0x0 crti.32
 .data          0x00000000c00245b0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00245b0                __dso_handle
 .data          0x00000000c00245b4        0x0 acpica/utclib.32
 .data          0x00000000c00245b4        0x0 krnl/malloc.32
 .data          0x00000000c00245b4        0x0 libk/ctype.32
 .data          0x00000000c00245b4        0x0 libk/string.32
 .data          0x00000000c00245b4        0x0 arch/i386/cc.32
 .data          0x00000000c00245b4        0x0 fs/fat/diskio.32
 .data          0x00000000c00245b4        0x0 fs/fat/ff.32
 .data          0x00000000c00245b4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00245b4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00245b4        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00245b4        0x0 dbg/kconsole.32
 *fill*         0x00000000c00245b4        0xc 
 .data          0x00000000c00245c0       0x28 dbg/usban.32
                0x00000000c00245c0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00245e8        0x0 fs/symlink.32
 .data          0x00000000c00245e8        0x0 fs/vfs.32
 .data          0x00000000c00245e8        0x0 hal/bus.32
 .data          0x00000000c00245e8        0x0 hal/buzzer.32
 .data          0x00000000c00245e8        0x0 hal/clock.32
 .data          0x00000000c00245e8        0x0 hal/device.32
 .data          0x00000000c00245e8        0x0 hal/diskctrl.32
 .data          0x00000000c00245e8        0x0 hal/diskphys.32
 .data          0x00000000c00245e8        0x0 hal/fpu.32
 .data          0x00000000c00245e8        0x0 hal/intctrl.32
 .data          0x00000000c00245e8        0x0 hal/keybrd.32
 .data          0x00000000c00245e8        0x0 hal/logidisk.32
 .data          0x00000000c00245e8        0x0 hal/mouse.32
 .data          0x00000000c00245e8        0x0 hal/nic.32
 .data          0x00000000c00245e8        0x0 hal/partition.32
 .data          0x00000000c00245e8        0x0 hal/serial.32
 .data          0x00000000c00245e8        0x0 hal/timer.32
 .data          0x00000000c00245e8        0x0 hal/vcache.32
 .data          0x00000000c00245e8        0x0 hal/video.32
 .data          0x00000000c00245e8       0x10 hw/acpi.32
                0x00000000c00245e8                legacyIRQRemaps
 .data          0x00000000c00245f8        0x0 krnl/atexit.32
 .data          0x00000000c00245f8        0x0 krnl/bootmsg.32
 .data          0x00000000c00245f8        0x4 krnl/c++.32
                0x00000000c00245f8                __stack_chk_guard
 .data          0x00000000c00245fc        0x0 krnl/cdefs.32
 *fill*         0x00000000c00245fc        0x4 
 .data          0x00000000c0024600      0x100 krnl/cm.32
                0x00000000c0024600                CmComponents
 .data          0x00000000c0024700        0x0 krnl/compat.32
 .data          0x00000000c0024700        0x0 krnl/computer.32
 .data          0x00000000c0024700      0x400 krnl/crc32.32
                0x00000000c0024700                KiPolyLookupCRC32
 .data          0x00000000c0024b00       0x4d krnl/env.32
                0x00000000c0024b00                defaultSysEnv
 .data          0x00000000c0024b4d        0x0 krnl/fault.32
 .data          0x00000000c0024b4d        0x0 krnl/gdt.32
 .data          0x00000000c0024b4d        0x0 krnl/idle.32
 .data          0x00000000c0024b4d        0x0 krnl/idt.32
 .data          0x00000000c0024b4d        0x0 krnl/inlines.32
 *fill*         0x00000000c0024b4d        0x3 
 .data          0x00000000c0024b50        0x4 krnl/kheap.32
 .data          0x00000000c0024b54        0x0 krnl/mailbox.32
 .data          0x00000000c0024b54        0x0 krnl/main.32
 .data          0x00000000c0024b54        0x0 krnl/mutex.32
 .data          0x00000000c0024b54        0x0 krnl/panic.32
 .data          0x00000000c0024b54        0x4 krnl/physmgr.32
                0x00000000c0024b54                Phys::bitmap
 .data          0x00000000c0024b58        0x0 krnl/pipe.32
 .data          0x00000000c0024b58        0x0 krnl/powctrl.32
 .data          0x00000000c0024b58        0x0 krnl/random.32
 .data          0x00000000c0024b58        0x0 krnl/resolve.32
 .data          0x00000000c0024b58        0x0 krnl/semaphore.32
 *fill*         0x00000000c0024b58        0x8 
 .data          0x00000000c0024b60       0x4c krnl/signal.32
                0x00000000c0024b60                KiDefaultSignalHandlers
 *fill*         0x00000000c0024bac       0x14 
 .data          0x00000000c0024bc0      0x104 krnl/syscalls.32
                0x00000000c0024bc0                systemCallHandlers
 *fill*         0x00000000c0024cc4       0x1c 
 .data          0x00000000c0024ce0       0x60 krnl/terminal.32
                0x00000000c0024ce0                VgaText::hiddenOut
                0x00000000c0024d00                ansiToVGAMappings
 .data          0x00000000c0024d40        0x0 krnl/tss.32
 .data          0x00000000c0024d40        0x4 krnl/unixfile.32
                0x00000000c0024d40                UnixFile::nextFd
 .data          0x00000000c0024d44       0x15 krnl/virtmgr.32
                0x00000000c0024d44                Virt::pageAllocPtr
                0x00000000c0024d48                Virt::bitmap
                0x00000000c0024d4c                Virt::swapfileSectorsPerPage
                0x00000000c0024d50                Virt::swapfileLength
                0x00000000c0024d54                Virt::swapfileSector
                0x00000000c0024d58                Virt::swapfileDrive
 .data          0x00000000c0024d59        0x0 sys/eject.32
 .data          0x00000000c0024d59        0x0 sys/exit.32
 .data          0x00000000c0024d59        0x0 sys/getcwd.32
 .data          0x00000000c0024d59        0x0 sys/getpid.32
 .data          0x00000000c0024d59        0x0 sys/getramdata.32
 .data          0x00000000c0024d59        0x0 sys/getvgaptr.32
 .data          0x00000000c0024d59        0x0 sys/kill.32
 .data          0x00000000c0024d59        0x0 sys/loaddll.32
 .data          0x00000000c0024d59        0x0 sys/read.32
 .data          0x00000000c0024d59        0x0 sys/registersignal.32
 .data          0x00000000c0024d59        0x0 sys/registry.32
 .data          0x00000000c0024d59        0x0 sys/sbrk.32
 .data          0x00000000c0024d59        0x0 sys/setcwd.32
 .data          0x00000000c0024d59        0x0 sys/settime.32
 .data          0x00000000c0024d59        0x0 sys/symlink.32
 .data          0x00000000c0024d59        0x0 sys/timezone.32
 .data          0x00000000c0024d59        0x0 sys/truncate.32
 .data          0x00000000c0024d59        0x0 sys/write.32
 .data          0x00000000c0024d59        0x0 sys/wsbe.32
 .data          0x00000000c0024d59        0x0 sys/yield.32
 .data          0x00000000c0024d59        0x0 thr/elf.32
 .data          0x00000000c0024d59        0x0 thr/exec.32
 *fill*         0x00000000c0024d59        0x3 
 .data          0x00000000c0024d5c        0x4 thr/prcssthr.32
                0x00000000c0024d5c                Thr::nextPID
 .data          0x00000000c0024d60        0x0 vm86/vm8086.32
 .data          0x00000000c0024d60      0x2a4 arch/i386/hal.32
                0x00000000c0024d60                exceptionNames
                0x00000000c0025000                lastCode
 .data          0x00000000c0025004        0x0 arch/i386/intctrl.32
 .data          0x00000000c0025004        0x0 arch/i386/pic.32
 .data          0x00000000c0025004        0x0 arch/i386/rtc.32
 .data          0x00000000c0025004        0x0 arch/i386/vga.32
 .data          0x00000000c0025004        0x0 fs/fat/vfslink.32
 .data          0x00000000c0025004        0x0 fs/iso9660/helper.32
 .data          0x00000000c0025004        0x1 fs/iso9660/vfslink.32
                0x00000000c0025004                recentDriveletter
 .data          0x00000000c0025005        0x0 hal/sound/sndcard.32
 .data          0x00000000c0025005        0x0 hal/sound/sndport.32
 .data          0x00000000c0025005        0x0 hw/bus/isa.32
 .data          0x00000000c0025005        0x0 hw/bus/pci.32
 .data          0x00000000c0025005        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0025005        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0025005        0x0 hw/diskphys/ata.32
 .data          0x00000000c0025005        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0025005        0x0 hw/diskphys/sata.32
 .data          0x00000000c0025005        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0025005        0x0 hw/intctrl/apic.32
 .data          0x00000000c0025005        0x0 hw/timer/apictimer.32
 .data          0x00000000c0025005        0x0 hw/timer/pit.32
 .data          0x00000000c0025005        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0025005        0x0 crtn.32
 .data          0x00000000c0025005        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0025005        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0025005        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0025005        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0025008        0x0
 .got           0x00000000c0025008        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0025008        0x0
 .got.plt       0x00000000c0025008        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0025008        0x0
 .igot.plt      0x00000000c0025008        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0025008        0x0
 .tm_clone_table
                0x00000000c0025008        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0025008        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0025005      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0025005        0x3 
 .eh_frame      0x00000000c0025008        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0025008        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0025008       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0025060       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00250a0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002510c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0026000       0x7d
 *(userkernel)
 userkernel     0x00000000c0026000       0x52 krnl/signal.32
                0x00000000c0026000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002602c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0026052       0x2b krnl/syscalls.32
                0x00000000c0026052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0027000        0x1
 *(align_previous)
 align_previous
                0x00000000c0027000        0x1 krnl/signal.32
                0x00000000c0027000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0027004        0x0
 .rel.got       0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0027001     0x7127
                0x00000000c0027001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0027001       0x1f 
 COMMON         0x00000000c0027020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0027020                dcache
                0x00000000c0027060                cdDriveLetter
                0x00000000c0027080                icache
 *(.bss)
 .bss           0x00000000c00270c0        0x0 crti.32
 .bss           0x00000000c00270c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00270e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00270e4       0x1c 
 .bss           0x00000000c0027100      0x378 krnl/malloc.32
 .bss           0x00000000c0027478        0x0 libk/ctype.32
 .bss           0x00000000c0027478        0x0 libk/string.32
 .bss           0x00000000c0027478        0x0 arch/i386/cc.32
 .bss           0x00000000c0027478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0027478        0x8 
 .bss           0x00000000c0027480       0x88 fs/fat/ff.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0027508       0x18 
 .bss           0x00000000c0027520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0027eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0027eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0027eb8        0x8 
 .bss           0x00000000c0027ec0     0x2444 fs/symlink.32
                0x00000000c0027ec0                kiNumWaitingRoomSymlinks
                0x00000000c0027ee0                kiNewlyCreatedIDs
                0x00000000c0027f00                kiNewlyCreatedSymlinks
                0x00000000c0028300                kiSymlinkHashTable
                0x00000000c002a300                kiBaseSymlinkID
 .bss           0x00000000c002a304        0x4 fs/vfs.32
                0x00000000c002a304                installedFilesystems
 .bss           0x00000000c002a308        0x0 hal/bus.32
 .bss           0x00000000c002a308        0x0 hal/buzzer.32
 .bss           0x00000000c002a308        0x8 hal/clock.32
                0x00000000c002a308                keDstOn
                0x00000000c002a309                keTimezoneHalfHourOffset
                0x00000000c002a30c                keTimezoneHourOffset
 .bss           0x00000000c002a310        0x0 hal/device.32
 .bss           0x00000000c002a310        0x0 hal/diskctrl.32
 .bss           0x00000000c002a310        0x0 hal/diskphys.32
 .bss           0x00000000c002a310        0x0 hal/fpu.32
 .bss           0x00000000c002a310        0x0 hal/intctrl.32
 *fill*         0x00000000c002a310       0x10 
 .bss           0x00000000c002a320      0x428 hal/keybrd.32
                0x00000000c002a320                keyboardWaitingTaskList
                0x00000000c002a324                keyboardSetupYet
                0x00000000c002a328                guiKeyboardHandler
                0x00000000c002a340                keystates
 *fill*         0x00000000c002a748       0x18 
 .bss           0x00000000c002a760       0x88 hal/logidisk.32
                0x00000000c002a760                diskAssignments
                0x00000000c002a780                disks
 .bss           0x00000000c002a7e8        0x4 hal/mouse.32
                0x00000000c002a7e8                guiMouseHandler
 .bss           0x00000000c002a7ec        0x0 hal/nic.32
 .bss           0x00000000c002a7ec        0x0 hal/partition.32
 .bss           0x00000000c002a7ec        0x0 hal/serial.32
 .bss           0x00000000c002a7ec        0x4 hal/timer.32
                0x00000000c002a7ec                milliTenthsSinceBoot
 .bss           0x00000000c002a7f0        0x0 hal/vcache.32
 .bss           0x00000000c002a7f0        0x4 hal/video.32
                0x00000000c002a7f0                screen
 *fill*         0x00000000c002a7f4        0xc 
 .bss           0x00000000c002a800      0x480 hw/acpi.32
                0x00000000c002a800                nextACPITable
                0x00000000c002a820                acpiTables
                0x00000000c002aa20                usingXSDT
                0x00000000c002aa24                RSDTpointer
                0x00000000c002aa28                RSDPpointer
                0x00000000c002aa2c                nextAPICNMI
                0x00000000c002aa40                apicNMIInfo
                0x00000000c002aac0                legacyIRQFlags
                0x00000000c002aae0                ioapicDiscoveryNumber
                0x00000000c002ab00                ioapicFoundInMADT
                0x00000000c002ab20                ioapicAddresses
                0x00000000c002aba0                ioapicGSIBase
                0x00000000c002ac20                processorDiscoveryNumber
                0x00000000c002ac40                matchingAPICID
                0x00000000c002ac60                processorID
 .bss           0x00000000c002ac80       0xe0 krnl/atexit.32
                0x00000000c002ac80                KiNextAtexitHandler
                0x00000000c002aca0                KiAtexitContexts
                0x00000000c002ad00                KiAtexitHandlers
 .bss           0x00000000c002ad60        0x0 krnl/bootmsg.32
 .bss           0x00000000c002ad60        0x0 krnl/c++.32
 .bss           0x00000000c002ad60        0x0 krnl/cdefs.32
 .bss           0x00000000c002ad60        0x4 krnl/cm.32
 .bss           0x00000000c002ad64        0x0 krnl/compat.32
 .bss           0x00000000c002ad64       0x12 krnl/computer.32
                0x00000000c002ad64                systemSleepFunction
                0x00000000c002ad68                systemResetFunction
                0x00000000c002ad6c                systemShutdownFunction
                0x00000000c002ad70                Krnl::computer
                0x00000000c002ad74                KeIsPreemptionOn
                0x00000000c002ad75                KeIsSchedulingOn
 .bss           0x00000000c002ad76        0x0 krnl/crc32.32
 *fill*         0x00000000c002ad76        0x2 
 .bss           0x00000000c002ad78        0x8 krnl/env.32
                0x00000000c002ad78                KeUserEnv
                0x00000000c002ad7c                KeSystemEnv
 .bss           0x00000000c002ad80     0x2000 krnl/fault.32
                0x00000000c002ad80                keInterruptContexts
                0x00000000c002bd80                keInterruptHandlers
 .bss           0x00000000c002cd80        0x6 krnl/gdt.32
                0x00000000c002cd80                gdtDescr
 .bss           0x00000000c002cd86        0x0 krnl/idle.32
 *fill*         0x00000000c002cd86        0x2 
 .bss           0x00000000c002cd88        0x6 krnl/idt.32
                0x00000000c002cd88                idtDescr
 .bss           0x00000000c002cd8e        0x0 krnl/inlines.32
 .bss           0x00000000c002cd8e        0x0 krnl/kheap.32
 .bss           0x00000000c002cd8e        0x0 krnl/mailbox.32
 *fill*         0x00000000c002cd8e        0x2 
 .bss           0x00000000c002cd90        0x4 krnl/main.32
                0x00000000c002cd90                keBootSettings
 .bss           0x00000000c002cd94        0x0 krnl/mutex.32
 .bss           0x00000000c002cd94        0x1 krnl/panic.32
                0x00000000c002cd94                KeIsKernelInPanic
 *fill*         0x00000000c002cd95        0x3 
 .bss           0x00000000c002cd98       0x29 krnl/physmgr.32
                0x00000000c002cd98                Phys::forbidEvictions
                0x00000000c002cd9c                Phys::currentPagePointer
                0x00000000c002cda0                Phys::highestMem
                0x00000000c002cda4                Phys::oldPercent
                0x00000000c002cda8                Phys::usedPages
                0x00000000c002cdac                Phys::usablePages
                0x00000000c002cdb0                Phys::dmaUsage
 .bss           0x00000000c002cdc1        0x0 krnl/pipe.32
 *fill*         0x00000000c002cdc1       0x1f 
 .bss           0x00000000c002cde0       0x48 krnl/powctrl.32
                0x00000000c002cde0                powCtrlOnBattery
                0x00000000c002ce00                currentPowerSettings
                0x00000000c002ce24                secondsSinceLastUserIO
 .bss           0x00000000c002ce28        0x8 krnl/random.32
                0x00000000c002ce28                kiRandSeed
 .bss           0x00000000c002ce30        0x0 krnl/resolve.32
 .bss           0x00000000c002ce30        0x0 krnl/semaphore.32
 .bss           0x00000000c002ce30        0x0 krnl/signal.32
 .bss           0x00000000c002ce30        0x0 krnl/syscalls.32
 .bss           0x00000000c002ce30        0x9 krnl/terminal.32
                0x00000000c002ce30                terminalCycle
                0x00000000c002ce34                activeTerminal
                0x00000000c002ce38                VgaText::graphicMode
 *fill*         0x00000000c002ce39        0x1 
 .bss           0x00000000c002ce3a        0x2 krnl/tss.32
                0x00000000c002ce3a                doubleFaultSelector
 *fill*         0x00000000c002ce3c        0x4 
 .bss           0x00000000c002ce40       0x84 krnl/unixfile.32
                0x00000000c002ce40                sfileLpt
                0x00000000c002ce80                sfileCom
                0x00000000c002cea4                sfileNul
                0x00000000c002cea8                sfilePnt
                0x00000000c002ceac                sfileAux
                0x00000000c002ceb0                sfileCon
                0x00000000c002ceb4                initialFilesAdded
                0x00000000c002ceb8                unixFileLinkedList
 .bss           0x00000000c002cec4       0x10 krnl/virtmgr.32
                0x00000000c002cec4                twswaps
                0x00000000c002cec8                swapBalance
                0x00000000c002cecc                Virt::swapfileBitmap
                0x00000000c002ced0                keFirstVAS
 .bss           0x00000000c002ced4        0x0 sys/eject.32
 .bss           0x00000000c002ced4        0x0 sys/exit.32
 .bss           0x00000000c002ced4        0x0 sys/getcwd.32
 .bss           0x00000000c002ced4        0x0 sys/getpid.32
 .bss           0x00000000c002ced4        0x0 sys/getramdata.32
 .bss           0x00000000c002ced4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002ced4        0x0 sys/kill.32
 .bss           0x00000000c002ced4        0x0 sys/loaddll.32
 .bss           0x00000000c002ced4        0x0 sys/read.32
 .bss           0x00000000c002ced4        0x0 sys/registersignal.32
 .bss           0x00000000c002ced4        0x0 sys/registry.32
 .bss           0x00000000c002ced4        0x0 sys/sbrk.32
 .bss           0x00000000c002ced4        0x0 sys/setcwd.32
 .bss           0x00000000c002ced4        0x0 sys/settime.32
 .bss           0x00000000c002ced4        0x0 sys/symlink.32
 .bss           0x00000000c002ced4        0x0 sys/timezone.32
 .bss           0x00000000c002ced4        0x0 sys/truncate.32
 .bss           0x00000000c002ced4        0x0 sys/write.32
 .bss           0x00000000c002ced4        0x0 sys/wsbe.32
 .bss           0x00000000c002ced4        0x0 sys/yield.32
 *fill*         0x00000000c002ced4        0xc 
 .bss           0x00000000c002cee0      0x7a4 thr/elf.32
                0x00000000c002cee0                Thr::driverLookupNext
                0x00000000c002cf00                Thr::driverLookupLen
                0x00000000c002d100                Thr::driverLookupAddr
                0x00000000c002d300                Thr::driverNameLookup
                0x00000000c002d500                Thr::kernelSymbols
                0x00000000c002d580                Thr::kernelStringTable
                0x00000000c002d600                Thr::kernelSymbolTable
                0x00000000c002d680                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002d684        0x0 thr/exec.32
 *fill*         0x00000000c002d684        0x4 
 .bss           0x00000000c002d688       0x70 thr/prcssthr.32
                0x00000000c002d688                KiRestorePreemptionValue
                0x00000000c002d68c                KiPreemptionDisableCounter
                0x00000000c002d690                cleanerThread
                0x00000000c002d694                weNeedTheCleanerToNotBlock
                0x00000000c002d698                retValLockStuff
                0x00000000c002d69c                retValSchedLock
                0x00000000c002d6a0                lockStuffLock
                0x00000000c002d6a4                schedulerLock
                0x00000000c002d6a8                taskSwitchesPostponedFlag
                0x00000000c002d6ac                postponeTaskSwitchesCounter
                0x00000000c002d6b0                irqDisableCounter
                0x00000000c002d6b4                terminatedTaskList
                0x00000000c002d6c0                sleepingTaskList
                0x00000000c002d6cc                taskList
                0x00000000c002d6d8                kernelProcess
 *fill*         0x00000000c002d6f8        0x8 
 .bss           0x00000000c002d700       0x40 vm86/vm8086.32
                0x00000000c002d700                Vm::started8086Yet
                0x00000000c002d704                Vm::vmRetV
                0x00000000c002d708                Vm::vmDone
                0x00000000c002d709                Vm::vmReady
                0x00000000c002d70c                Vm::vm86Thread
                0x00000000c002d710                Vm::vmToHostCommsPtr
                0x00000000c002d720                Vm::vmToHostComms
 .bss           0x00000000c002d740       0x54 arch/i386/hal.32
                0x00000000c002d740                apic
                0x00000000c002d744                guiPanicHandler
                0x00000000c002d748                fpuOwner
                0x00000000c002d74c                coproLoadFunc
                0x00000000c002d750                coproSaveFunc
                0x00000000c002d754                lastD
                0x00000000c002d758                lastC
                0x00000000c002d75c                lastB
                0x00000000c002d760                lastA
                0x00000000c002d764                HalPageWriteCombiningFlag
                0x00000000c002d768                HalPageGlobalFlag
                0x00000000c002d76c                nmi
                0x00000000c002d770                vendorIDString
                0x00000000c002d77d                familyID
                0x00000000c002d77e                model
                0x00000000c002d77f                processorType
                0x00000000c002d780                steppingID
                0x00000000c002d784                vendor
                0x00000000c002d788                opcodeDetectionMode
                0x00000000c002d78c                features
 .bss           0x00000000c002d794        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002d794        0x0 arch/i386/pic.32
 .bss           0x00000000c002d794        0x2 arch/i386/rtc.32
 .bss           0x00000000c002d796        0x0 arch/i386/vga.32
 *fill*         0x00000000c002d796        0xa 
 .bss           0x00000000c002d7a0       0xf0 fs/fat/vfslink.32
                0x00000000c002d7a0                FAT::fats
                0x00000000c002d7c0                FAT::vfsToFatRemaps
                0x00000000c002d840                fatToVFSRemaps
 .bss           0x00000000c002d890        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002d890       0x10 
 .bss           0x00000000c002d8a0      0x820 fs/iso9660/vfslink.32
                0x00000000c002d8a0                iso9660Owner
                0x00000000c002d8a4                recentSector
                0x00000000c002d8c0                recentBuffer
 .bss           0x00000000c002e0c0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002e0c0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002e0c0        0x0 hw/bus/isa.32
 .bss           0x00000000c002e0c0        0xd hw/bus/pci.32
                0x00000000c002e0c0                thePCI
 .bss           0x00000000c002e0cd        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002e0cd        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002e0cd        0x3 
 .bss           0x00000000c002e0d0        0x8 hw/diskphys/ata.32
                0x00000000c002e0d0                ataSectorsWritten
                0x00000000c002e0d4                ataSectorsRead
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002e0d8        0x8 
 .bss           0x00000000c002e0e0       0x41 hw/intctrl/apic.32
                0x00000000c002e0e0                noOfIOAPICs
                0x00000000c002e100                ioapics
                0x00000000c002e120                IOAPICsSetupYet
 .bss           0x00000000c002e121        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002e121        0x3 
 .bss           0x00000000c002e124        0x4 hw/timer/pit.32
                0x00000000c002e124                pitFreq
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002e128        0x0 crtn.32
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002e128                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003524f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
