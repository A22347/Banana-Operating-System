Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1fa5a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6f1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cfb                Krnl::firstTask()
                0x00000000c0006e38                Computer::Computer()
                0x00000000c0006e38                Computer::Computer()
                0x00000000c0006ee8                Computer::setBootMessage(char const*)
                0x00000000c0006eea                Computer::detectFeatures()
                0x00000000c0007110                Computer::displayFeatures()
                0x00000000c0007112                Computer::rdmsr(unsigned int)
                0x00000000c000713e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000717a                Computer::shutdown()
                0x00000000c0007192                Computer::restart()
                0x00000000c00071aa                Computer::sleep()
                0x00000000c00071be                Computer::nmiEnabled()
                0x00000000c00071ca                Computer::readCMOS(unsigned char)
                0x00000000c00071e6                Computer::enableNMI(bool)
                0x00000000c00071fe                Computer::open(int, int, void*)
                0x00000000c00072d2                Computer::disableNMI()
                0x00000000c00072e2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0007306                Computer::handleNMI()
 *fill*         0x00000000c0007371        0x1 
 .text          0x00000000c0007372      0x1db core/gdt.32
                0x00000000c0007372                GDTEntry::setBase(unsigned int)
                0x00000000c000738e                GDTEntry::setLimit(unsigned int)
                0x00000000c00073ac                GDT::GDT()
                0x00000000c00073ac                GDT::GDT()
                0x00000000c00073c2                GDT::addEntry(GDTEntry)
                0x00000000c00073e4                GDT::getNumberOfEntries()
                0x00000000c00073ec                GDT::flush()
                0x00000000c000740e                GDT::setup()
 .text          0x00000000c000754d       0x1d core/idle.32
                0x00000000c000754d                idleFunction(void*)
 *fill*         0x00000000c000756a        0x2 
 .text          0x00000000c000756c      0x46c core/idt.32
                0x00000000c000756c                IDTEntry::IDTEntry(bool)
                0x00000000c000756c                IDTEntry::IDTEntry(bool)
                0x00000000c00075e6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075fc                IDT::IDT()
                0x00000000c00075fc                IDT::IDT()
                0x00000000c00075fe                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0007606                IDT::addEntry(IDTEntry, int)
                0x00000000c0007620                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007658                IDT::flush()
                0x00000000c0007672                IDT::setup()
 .text          0x00000000c00079d8      0x185 core/kheap.32
                0x00000000c00079d8                sbrk
                0x00000000c0007a6c                mmap
                0x00000000c0007a82                munmap
                0x00000000c0007a98                liballoc_lock()
                0x00000000c0007aa6                liballoc_unlock()
                0x00000000c0007abc                liballoc_alloc(int)
                0x00000000c0007ad4                liballoc_free(void*, int)
                0x00000000c0007aef                realloc
                0x00000000c0007b03                malloc
                0x00000000c0007b13                free
                0x00000000c0007b23                rfree
                0x00000000c0007b33                calloc
 .text          0x00000000c0007b5d       0xc7 core/main.32
                0x00000000c0007b5d                KeEntryPoint
 .text          0x00000000c0007c24      0x643 core/physmgr.32
                0x00000000c0007c24                Phys::allocateDMA(unsigned long)
                0x00000000c0007d12                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d4d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d8d                Phys::getPageState(unsigned long)
                0x00000000c0007da9                Phys::freePage(unsigned long)
                0x00000000c0007e12                Phys::allocatePage()
                0x00000000c0007ee1                Phys::allocateContiguousPages(int)
                0x00000000c0007f48                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f80                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008267        0x1 
 .text          0x00000000c0008268      0x26d core/pipe.32
                0x00000000c0008268                Pipe::isAtty()
                0x00000000c000826c                Pipe::~Pipe()
                0x00000000c000826c                Pipe::~Pipe()
                0x00000000c0008290                Pipe::~Pipe()
                0x00000000c00082b8                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000837c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000846e                Pipe::Pipe(int)
                0x00000000c000846e                Pipe::Pipe(int)
 *fill*         0x00000000c00084d5        0x1 
 .text          0x00000000c00084d6      0xa85 core/terminal.32
                0x00000000c00084d6                VgaText::isAtty()
                0x00000000c00084da                VgaText::~VgaText()
                0x00000000c00084da                VgaText::~VgaText()
                0x00000000c00084fe                VgaText::~VgaText()
                0x00000000c0008528                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008548                setTerminalScrollLock(bool)
                0x00000000c0008549                doTerminalCycle()
                0x00000000c000854a                addToTerminalCycle(VgaText*)
                0x00000000c000854b                scrollTerminalScrollLock(int)
                0x00000000c000854c                VgaText::updateTitle()
                0x00000000c000854e                VgaText::load()
                0x00000000c0008550                VgaText::updateCursor()
                0x00000000c0008566                VgaText::doANSI_SGR(int)
                0x00000000c00085da                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ea                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085fa                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000861a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008626                VgaText::setTitleColour(VgaColour)
                0x00000000c0008632                VgaText::setTitle(char*)
                0x00000000c0008634                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008646                VgaText::scrollScreen()
                0x00000000c00086d8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086e8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008778                VgaText::getCursorX()
                0x00000000c0008780                VgaText::getCursorY()
                0x00000000c0008788                VgaText::setCursor(int, int)
                0x00000000c000879f                setActiveTerminal(VgaText*)
                0x00000000c00087ea                VgaText::clearScreen()
                0x00000000c0008838                VgaText::setCursorX(int)
                0x00000000c0008850                VgaText::setCursorY(int)
                0x00000000c0008868                VgaText::incrementCursor(bool)
                0x00000000c00088bc                VgaText::decrementCursor(bool)
                0x00000000c00088de                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00089ae                VgaText::putchar(char)
                0x00000000c0008a96                VgaText::putx(unsigned int)
                0x00000000c0008adc                VgaText::puts(char const*)
                0x00000000c0008b02                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b4e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c9c                VgaText::VgaText(char const*)
                0x00000000c0008c9c                VgaText::VgaText(char const*)
                0x00000000c0008dec                VgaText::receiveKey(unsigned char)
                0x00000000c0008f5a                VgaText::doUpdate()
 *fill*         0x00000000c0008f5b        0x1 
 .text          0x00000000c0008f5c      0x1a1 core/tss.32
                0x00000000c0008f5c                TSS::TSS()
                0x00000000c0008f5c                TSS::TSS()
                0x00000000c0008f6c                TSS::setESP(unsigned long)
                0x00000000c0008f80                TSS::flush()
                0x00000000c0008fa0                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090fd        0x1 
 .text          0x00000000c00090fe      0x4ca core/unixfile.32
                0x00000000c00090fe                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009154                ReservedFilename::isAtty()
                0x00000000c0009170                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091ce                UnixFile::getFileDescriptor()
                0x00000000c00091d6                UnixFile::UnixFile(int)
                0x00000000c00091d6                UnixFile::UnixFile(int)
                0x00000000c000938a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938a                ReservedFilename::ReservedFilename(int)
                0x00000000c00093bc                UnixFile::~UnixFile()
                0x00000000c00093bc                UnixFile::~UnixFile()
                0x00000000c0009458                UnixFile::~UnixFile()
                0x00000000c0009480                ReservedFilename::~ReservedFilename()
                0x00000000c0009480                ReservedFilename::~ReservedFilename()
                0x00000000c00094a4                ReservedFilename::~ReservedFilename()
                0x00000000c00094cb                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095c8     0x1224 core/virtmgr.32
                0x00000000c00095c8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009602                Virt::getPageState(unsigned long)
                0x00000000c0009625                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009741                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009764                Virt::swapIDToSector(unsigned long)
                0x00000000c000977a                Virt::allocateSwapfilePage()
                0x00000000c00097f9                Virt::virtualMemorySetup()
                0x00000000c000984a                Virt::setupPageSwapping(int)
                0x00000000c00098bc                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098be                VAS::VAS(VAS*)
                0x00000000c00098be                VAS::VAS(VAS*)
                0x00000000c00098ec                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000991a                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009939                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a76                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a9a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009ab4                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009af6                VAS::VAS()
                0x00000000c0009af6                VAS::VAS()
                0x00000000c0009b60                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b94                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bc0                VAS::~VAS()
                0x00000000c0009bc0                VAS::~VAS()
                0x00000000c0009d2e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e36                VAS::allocatePages(int, int)
                0x00000000c0009f38                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f92                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a082                VAS::VAS(bool)
                0x00000000c000a082                VAS::VAS(bool)
                0x00000000c000a2cc                VAS::evict(unsigned long)
                0x00000000c000a3aa                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a54e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a5c2                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ee                VAS::scanForEviction()
                0x00000000c000a6f1                mapVASFirstTime
 .text          0x00000000c000a7ec       0x5f coreobjs/c++.32
                0x00000000c000a7ec                __cxa_atexit
                0x00000000c000a7ef                __cxa_finalize
                0x00000000c000a7f0                __stack_chk_fail
                0x00000000c000a826                __cxa_pure_virtual
                0x00000000c000a837                operator new[](unsigned long)
                0x00000000c000a83c                operator delete(void*, unsigned long)
                0x00000000c000a841                operator delete[](void*)
                0x00000000c000a846                operator delete[](void*, unsigned long)
 .text          0x00000000c000a84b      0x225 dbg/kconsole.32
                0x00000000c000a84b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8bc                Dbg::logc(char)
                0x00000000c000a8dc                Dbg::logs(char*)
                0x00000000c000a8fb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a919                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a93a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa70      0x2d4 dbg/usban.32
                0x00000000c000aa70                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aadc                __ubsan_handle_type_mismatch_v1
                0x00000000c000abb8                __ubsan_handle_pointer_overflow
                0x00000000c000abe4                __ubsan_handle_out_of_bounds
                0x00000000c000ac10                __ubsan_handle_add_overflow
                0x00000000c000ac3c                __ubsan_handle_load_invalid_value
                0x00000000c000ac68                __ubsan_handle_divrem_overflow
                0x00000000c000ac94                __ubsan_handle_mul_overflow
                0x00000000c000acc0                __ubsan_handle_sub_overflow
                0x00000000c000acec                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad18                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad44      0x86b fs/symlink.32
                0x00000000c000ae93                KiDeinitialiseSymlinks(void*)
                0x00000000c000af24                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000afb6                KeInitialiseSymlinks()
                0x00000000c000b12a                KiIsSymlinkRegistered(char const*)
                0x00000000c000b2ae                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b455                KeCreateSymlink(char const*, char const*)
 *fill*         0x00000000c000b5af        0x1 
 .text          0x00000000c000b5b0      0xd7c fs/vfs.32
                0x00000000c000b5b0                File::read(unsigned long long, void*, int*)
                0x00000000c000b608                File::write(unsigned long long, void*, int*)
                0x00000000c000b660                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b6b8                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b6e6                File::isAtty()
                0x00000000c000b6ea                Directory::isAtty()
                0x00000000c000b6ee                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b6f4                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b6fa                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b700                File::~File()
                0x00000000c000b700                File::~File()
                0x00000000c000b724                File::~File()
                0x00000000c000b74e                Directory::~Directory()
                0x00000000c000b74e                Directory::~Directory()
                0x00000000c000b772                Directory::~Directory()
                0x00000000c000b79c                Filesystem::Filesystem()
                0x00000000c000b79c                Filesystem::Filesystem()
                0x00000000c000b7c0                Filesystem::~Filesystem()
                0x00000000c000b7c0                Filesystem::~Filesystem()
                0x00000000c000b7ce                Filesystem::~Filesystem()
                0x00000000c000b7f2                Fs::getcwd(Process*, char*, int)
                0x00000000c000b81c                Fs::initVFS()
                0x00000000c000b846                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000ba74                File::File(char const*, Process*, bool)
                0x00000000c000ba74                File::File(char const*, Process*, bool)
                0x00000000c000bb52                File::File(char const*, Process*)
                0x00000000c000bb52                File::File(char const*, Process*)
                0x00000000c000bb70                File::open(FileOpenMode)
                0x00000000c000bbce                File::close()
                0x00000000c000bc2e                File::seek(unsigned long long)
                0x00000000c000bc84                File::truncate(unsigned long long)
                0x00000000c000bcda                File::tell(unsigned long long*)
                0x00000000c000bd2a                File::rewind()
                0x00000000c000bd3e                File::unlink()
                0x00000000c000bd8a                File::rename(char const*)
                0x00000000c000bdd8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000be34                File::exists()
                0x00000000c000be72                File::stat(unsigned long long*, bool*)
                0x00000000c000bed3                Fs::setcwd(Process*, char*)
                0x00000000c000c032                Directory::Directory(char const*, Process*)
                0x00000000c000c032                Directory::Directory(char const*, Process*)
                0x00000000c000c0fa                Directory::open()
                0x00000000c000c156                Directory::close()
                0x00000000c000c1b6                Directory::unlink()
                0x00000000c000c202                Directory::rename(char const*)
                0x00000000c000c250                Directory::exists()
                0x00000000c000c28e                Directory::read(dirent*)
                0x00000000c000c2da                Directory::create()
                0x00000000c000c326                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c32c       0x86 hal/bus.32
                0x00000000c000c32c                Bus::Bus(char const*)
                0x00000000c000c32c                Bus::Bus(char const*)
                0x00000000c000c364                Bus::~Bus()
                0x00000000c000c364                Bus::~Bus()
                0x00000000c000c388                Bus::~Bus()
 .text          0x00000000c000c3b2       0x96 hal/buzzer.32
                0x00000000c000c3b2                beepThread(void*)
                0x00000000c000c3ef                Krnl::beep(int, int, bool)
 .text          0x00000000c000c448      0x465 hal/clock.32
                0x00000000c000c448                User::loadClockSettings(int)
                0x00000000c000c49a                Clock::Clock(char const*)
                0x00000000c000c49a                Clock::Clock(char const*)
                0x00000000c000c4d0                Clock::~Clock()
                0x00000000c000c4d0                Clock::~Clock()
                0x00000000c000c4f4                Clock::~Clock()
                0x00000000c000c51e                Clock::timeInSecondsLocal()
                0x00000000c000c566                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c5bf                datetimeToSeconds(datetime_t)
                0x00000000c000c6e4                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c744                secondsToDatetime(unsigned long long)
                0x00000000c000c888                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c8ad        0x1 
 .text          0x00000000c000c8ae      0x49e hal/device.32
                0x00000000c000c8ae                Device::hibernate()
                0x00000000c000c8b0                Device::wake()
                0x00000000c000c8b2                Device::detect()
                0x00000000c000c8b4                Device::disableLegacy()
                0x00000000c000c8b6                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c8b8                DriverlessDevice::close(int, int, void*)
                0x00000000c000c8bc                DriverlessDevice::detect()
                0x00000000c000c8be                DriverlessDevice::open(int, int, void*)
                0x00000000c000c8d2                Device::~Device()
                0x00000000c000c8d2                Device::~Device()
                0x00000000c000c8e0                Device::~Device()
                0x00000000c000c908                Device::findAndLoadDriver()
                0x00000000c000c916                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c93c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c97c                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c9a6                Device::getParent()
                0x00000000c000c9b2                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c9d0                Device::addChild(Device*)
                0x00000000c000ca14                Device::removeAllChildren()
                0x00000000c000ca5a                Device::hibernateAll()
                0x00000000c000ca8a                Device::wakeAll()
                0x00000000c000caba                Device::detectAll()
                0x00000000c000caea                Device::disableLegacyAll()
                0x00000000c000caec                Device::loadDriversForAll()
                0x00000000c000caee                Device::closeAll()
                0x00000000c000cb5e                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cb94                Device::setName(char const*)
                0x00000000c000cba2                Device::Device(char const*)
                0x00000000c000cba2                Device::Device(char const*)
                0x00000000c000cc9e                Device::getName()
                0x00000000c000cca8                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cca8                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000ccde                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cd22                getDevicesOfType(DeviceType)
 .text          0x00000000c000cd4c       0x86 hal/diskctrl.32
                0x00000000c000cd4c                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd4c                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd84                HardDiskController::~HardDiskController()
                0x00000000c000cd84                HardDiskController::~HardDiskController()
                0x00000000c000cda8                HardDiskController::~HardDiskController()
 .text          0x00000000c000cdd2       0xe2 hal/diskphys.32
                0x00000000c000cdd2                PhysicalDisk::eject()
                0x00000000c000cdd6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cdd6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ce3e                PhysicalDisk::startCache()
                0x00000000c000ce66                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce66                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce8a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ceb4        0x0 hal/fpu.32
 .text          0x00000000c000ceb4      0x360 hal/intctrl.32
                0x00000000c000ceb4                int_handler
                0x00000000c000cf3e                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cf88                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d0cb                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d0ff                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d175                setupINTS()
                0x00000000c000d1d2                convertLegacyIRQNumber(int)
 .text          0x00000000c000d214      0x8be hal/keybrd.32
                0x00000000c000d214                startGUI(void*)
                0x00000000c000d282                startGUIVESA(void*)
                0x00000000c000d2f0                sendKeyToTerminal(unsigned char)
                0x00000000c000d3cb                sendKeyboardToken(KeyboardToken)
                0x00000000c000d8b5                clearInternalKeybuffer(VgaText*)
                0x00000000c000d8ea                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000da48                Keyboard::Keyboard(char const*)
                0x00000000c000da48                Keyboard::Keyboard(char const*)
                0x00000000c000da84                Keyboard::~Keyboard()
                0x00000000c000da84                Keyboard::~Keyboard()
                0x00000000c000daa8                Keyboard::~Keyboard()
 .text          0x00000000c000dad2      0x3f8 hal/logidisk.32
                0x00000000c000dad2                LogicalDisk::close(int, int, void*)
                0x00000000c000dad6                LogicalDisk::~LogicalDisk()
                0x00000000c000dad6                LogicalDisk::~LogicalDisk()
                0x00000000c000dafa                LogicalDisk::~LogicalDisk()
                0x00000000c000db24                LogicalDisk::open(int, int, void*)
                0x00000000c000db38                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000db70                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000dbb6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dbb6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc76                LogicalDisk::assignDriveLetter()
                0x00000000c000dd30                LogicalDisk::mount()
                0x00000000c000dd78                LogicalDisk::unmount()
                0x00000000c000dd88                LogicalDisk::eject()
                0x00000000c000dd9c                LogicalDisk::unassignDriveLetter()
                0x00000000c000ddf2                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000de5e                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000deca        0x2 
 .text          0x00000000c000decc       0x86 hal/mouse.32
                0x00000000c000decc                Mouse::Mouse(char const*)
                0x00000000c000decc                Mouse::Mouse(char const*)
                0x00000000c000df04                Mouse::~Mouse()
                0x00000000c000df04                Mouse::~Mouse()
                0x00000000c000df28                Mouse::~Mouse()
 .text          0x00000000c000df52       0x90 hal/nic.32
                0x00000000c000df52                NIC::getMAC()
                0x00000000c000df58                NIC::write(int, unsigned char*, int*)
                0x00000000c000df5e                NIC::NIC(char const*)
                0x00000000c000df5e                NIC::NIC(char const*)
                0x00000000c000df94                NIC::~NIC()
                0x00000000c000df94                NIC::~NIC()
                0x00000000c000dfb8                NIC::~NIC()
 .text          0x00000000c000dfe2      0x33b hal/partition.32
                0x00000000c000dfe2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e08a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e31d        0x3 
 .text          0x00000000c000e320       0x86 hal/serial.32
                0x00000000c000e320                Serial::Serial(char const*)
                0x00000000c000e320                Serial::Serial(char const*)
                0x00000000c000e358                Serial::~Serial()
                0x00000000c000e358                Serial::~Serial()
                0x00000000c000e37c                Serial::~Serial()
 *fill*         0x00000000c000e3a6        0x2 
 .text          0x00000000c000e3a8      0x234 hal/timer.32
                0x00000000c000e3a8                Timer::Timer(char const*)
                0x00000000c000e3a8                Timer::Timer(char const*)
                0x00000000c000e3e0                Timer::~Timer()
                0x00000000c000e3e0                Timer::~Timer()
                0x00000000c000e404                Timer::~Timer()
                0x00000000c000e42e                Timer::read()
                0x00000000c000e439                setupTimer(int)
                0x00000000c000e474                timerHandler(unsigned int)
 .text          0x00000000c000e5dc      0x450 hal/vcache.32
                0x00000000c000e5dc                VCache::VCache(PhysicalDisk*)
                0x00000000c000e5dc                VCache::VCache(PhysicalDisk*)
                0x00000000c000e74c                VCache::invalidateReadBuffer()
                0x00000000c000e75c                VCache::writeWriteBuffer()
                0x00000000c000e7a8                VCache::~VCache()
                0x00000000c000e7a8                VCache::~VCache()
                0x00000000c000e800                VCache::~VCache()
                0x00000000c000e828                VCache::write(unsigned long long, int, void*)
                0x00000000c000e922                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ea2c      0x4d9 hal/video.32
                0x00000000c000ea2c                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ea78                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000eae8                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eb78                Video::clearScreen(unsigned int)
                0x00000000c000ebac                Video::putpixel(int, int, unsigned int)
                0x00000000c000ebba                Video::readPixelApprox(int, int)
                0x00000000c000ebce                Video::Video(char const*)
                0x00000000c000ebce                Video::Video(char const*)
                0x00000000c000ec04                Video::~Video()
                0x00000000c000ec04                Video::~Video()
                0x00000000c000ec28                Video::~Video()
                0x00000000c000ec52                Video::isMonochrome()
                0x00000000c000ec5e                Video::getWidth()
                0x00000000c000ec6a                Video::getHeight()
                0x00000000c000ec76                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ed32                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ee9a                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ef05        0x3 
 .text          0x00000000c000ef08     0x135a hw/acpi.32
                0x00000000c000ef08                ACPI::close(int, int, void*)
                0x00000000c000f044                findRSDP()
                0x00000000c000f0dc                loadACPITables(unsigned char*)
                0x00000000c000f348                findRSDT(unsigned char*)
                0x00000000c000f4a0                findDataTable(unsigned char*, char*)
                0x00000000c000f520                scanMADT()
                0x00000000c000f9d8                ACPI::ACPI()
                0x00000000c000f9d8                ACPI::ACPI()
                0x00000000c000fa2c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fb28                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fbf4                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fbfc                ACPI::detectPCI()
                0x00000000c000fe1c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fe64                ACPI::sleep()
                0x00000000c000fe80                ACPI::open(int, int, void*)
 .text          0x00000000c0010262      0xbc5 hw/cpu.32
                0x00000000c0010262                CPU::close(int, int, void*)
                0x00000000c0010266                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0010282                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c001029a                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c001030e                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0010392                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c00103c0                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00103ee                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001041c                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c001044a                CPU::CPU()
                0x00000000c001044a                CPU::CPU()
                0x00000000c00104d8                CPU::displayFeatures()
                0x00000000c00104da                CPU::detectFeatures()
                0x00000000c0010bae                CPU::setupSMEP()
                0x00000000c0010bba                CPU::setupUMIP()
                0x00000000c0010bc4                CPU::setupTSC()
                0x00000000c0010bce                CPU::setupLargePages()
                0x00000000c0010bd8                CPU::setupPAT()
                0x00000000c0010c14                CPU::setupMTRR()
                0x00000000c0010c16                CPU::setupGlobalPages()
                0x00000000c0010c20                CPU::allowUsermodeDataAccess()
                0x00000000c0010c32                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010c44                CPU::setupSMAP()
                0x00000000c0010c52                CPU::setupFeatures()
                0x00000000c0010d1e                CPU::open(int, int, void*)
 .text          0x00000000c0010e27       0xb6 krnl/atexit.32
                0x00000000c0010e27                KeInitialiseAtexit()
                0x00000000c0010e46                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010e7a                KeExecuteAtexit()
 .text          0x00000000c0010edd       0xdf krnl/bootmsg.32
                0x00000000c0010edd                KeDisplaySplashScreen()
                0x00000000c0010f59                KeSetBootMessage(char const*)
 .text          0x00000000c0010fbc       0x1d krnl/compat.32
                0x00000000c0010fbc                Krnl::handlePowerButton()
                0x00000000c0010fcc                Krnl::handleSleepButton()
 .text          0x00000000c0010fd9       0x2b krnl/crc32.32
                0x00000000c0010fd9                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0011004      0x5bf krnl/env.32
                0x00000000c0011004                EnvVarContainer::getEnv(char const*)
                0x00000000c0011042                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0011104                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0011106                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001132a                EnvVarContainer::__loadSystem()
                0x00000000c0011344                EnvVarContainer::__loadUser()
                0x00000000c0011346                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011346                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011368                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011368                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011398                KeGetEnv(Process*, char const*)
                0x00000000c00113fd                KeSetEnvSystem(char const*, char const*)
                0x00000000c0011417                KeSetEnvUser(char const*, char const*)
                0x00000000c0011436                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0011449                KeDeleteEnvSystem(char const*)
                0x00000000c001144a                KeDeleteEnvUser(char const*)
                0x00000000c001144b                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c001144c                KeNewProcessEnv(Process*)
                0x00000000c001146e                KeCopyProcessEnv(Process*, Process*)
                0x00000000c00114ba                KeLoadSystemEnv()
                0x00000000c00114e8                KeLoadUserEnv()
                0x00000000c001150e                KeFlushEnv()
                0x00000000c001150f                KeGetProcessTotalEnvCount(Process*)
                0x00000000c001152f                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c00115c3       0x94 krnl/inlines.32
                0x00000000c00115c3                CPU::current()
                0x00000000c00115cf                operator new(unsigned long)
                0x00000000c00115d4                operator delete(void*)
                0x00000000c00115d9                disableIRQs()
                0x00000000c00115db                enableIRQs()
                0x00000000c00115dd                lockScheduler()
                0x00000000c00115e5                unlockScheduler()
                0x00000000c00115f4                lockStuff()
                0x00000000c0011602                unlockStuff()
                0x00000000c001163c                Virt::getAKernelVAS()
                0x00000000c0011642                __not_memcpy
 .text          0x00000000c0011657        0xc krnl/panic.32
                0x00000000c0011657                KePanic(char const*)
 .text          0x00000000c0011663      0x142 krnl/powctrl.32
                0x00000000c0011663                KePowerThread(void*)
                0x00000000c0011691                KeChangePowerSettings(PowerSettings)
                0x00000000c00116a7                KeUserIOReceived()
                0x00000000c00116b2                KeHandlePowerButton()
                0x00000000c00116e7                KeHandleSleepButton()
                0x00000000c001171c                KeSetupPowerManager()
 .text          0x00000000c00117a5       0x9b krnl/random.32
                0x00000000c00117a5                KeRand()
                0x00000000c00117e5                KeSeedRand(unsigned int)
                0x00000000c001180e                KeInitRand()
 .text          0x00000000c0011840      0x1bc krnl/resolve.32
                0x00000000c0011840                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00119fc      0x31f krnl/signal.32
                0x00000000c00119fc                KiSigKill(int)
                0x00000000c0011a10                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011a11                KiDefaultSignalHandlerPause(int)
                0x00000000c0011a3d                KiDefaultSignalHandlerResume(int)
                0x00000000c0011a69                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011a6e                KeInitSignals()
                0x00000000c0011abd                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011af3                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011b70                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011c67                KiCheckSignalZ
                0x00000000c0011ca9                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011ce4                KiFinishSignalZ
 .text          0x00000000c0011d1b      0xe32 krnl/syscalls.32
                0x00000000c0011d1b                SysSeekDir(regs*)
                0x00000000c0011d20                SysTellDir(regs*)
                0x00000000c0011d25                SysVerify(regs*)
                0x00000000c0011d2f                SysGetArgc(regs*)
                0x00000000c0011d43                SysTTYName(regs*)
                0x00000000c0011d4b                SysFormatDisk(regs*)
                0x00000000c0011db2                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011e06                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011e5f                SysShutdown(regs*)
                0x00000000c0011eec                SysRealpath(regs*)
                0x00000000c0011f3a                SysReadDir(regs*)
                0x00000000c0011fba                SysIsATTY(regs*)
                0x00000000c0012014                SysSeek(regs*)
                0x00000000c001206e                SysTell(regs*)
                0x00000000c00120db                SysSize(regs*)
                0x00000000c001214e                SysSizeFromFilename(regs*)
                0x00000000c0012282                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c00123b6                SysClose(regs*)
                0x00000000c0012416                SysOpenDir(regs*)
                0x00000000c0012493                SysMakeDir(regs*)
                0x00000000c0012501                SysCloseDir(regs*)
                0x00000000c0012550                SysWait(regs*)
                0x00000000c0012571                SysNotImpl(regs*)
                0x00000000c001258c                SysPanic(regs*)
                0x00000000c00125a7                SysRmdir(regs*)
                0x00000000c0012605                SysUnlink(regs*)
                0x00000000c0012663                SysGetArgv(regs*)
                0x00000000c00126b0                SysUSleep(regs*)
                0x00000000c00126d9                SysSpawn(regs*)
                0x00000000c001274a                SysGetEnv(regs*)
                0x00000000c00127ff                SysSetFatAttrib(regs*)
                0x00000000c0012868                SysPipe(regs*)
                0x00000000c00128ad                SysGetUnixTime(regs*)
                0x00000000c00128c1                string_ends_with(char const*, char const*)
                0x00000000c001290c                SysOpen(regs*)
                0x00000000c0012b0b                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012b4d        0x3 
 .text          0x00000000c0012b50      0x159 net/ethernet.32
                0x00000000c0012b50                KeSwitchEndian16(unsigned short)
                0x00000000c0012b74                KeSwitchEndian32(unsigned int)
                0x00000000c0012ba4                EthernetCRC32(unsigned char*, int)
                0x00000000c0012c48                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012ca9      0xd51 reg/cm.32
                0x00000000c0012ca9                CmOpen(char const*)
                0x00000000c0012dc7                CmClose(Reghive_Tag*)
                0x00000000c0012ddd                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012e19                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012e90                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012ecf                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012f01                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012f3d                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012f65                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012f86                CmExpand(Reghive_Tag*, int)
                0x00000000c0013001                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0013087                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c001317b                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c00132b3                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0013314                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0013344                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c001337b                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00133a5                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c00133e5                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013489                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c00134b7                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013654                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00136a1                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001371b                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001376e                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013832                zStrtok(char*, char const*)
                0x00000000c00138a4                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013925                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00139c8                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00139fa      0x545 reg/registry.32
                0x00000000c00139fa                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013b86                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013cdb                Reg::getLine(char*, char*, char*)
                0x00000000c0013d12                Reg::readInt(char*, char*, int*)
                0x00000000c0013e00                Reg::readString(char*, char*, char*, int)
                0x00000000c0013e81                Reg::readBool(char*, char*, bool*)
                0x00000000c0013ea6                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013ed2                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013efe                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013f3f       0x36 sys/eject.32
                0x00000000c0013f3f                SysEject(regs*)
 .text          0x00000000c0013f75       0x18 sys/exit.32
                0x00000000c0013f75                SysExit(regs*)
 .text          0x00000000c0013f8d       0x1f sys/getcwd.32
                0x00000000c0013f8d                SysGetCwd(regs*)
 .text          0x00000000c0013fac        0xc sys/getpid.32
                0x00000000c0013fac                SysGetPID(regs*)
 .text          0x00000000c0013fb8       0x1a sys/getramdata.32
                0x00000000c0013fb8                SysGetRAMData(regs*)
 .text          0x00000000c0013fd2       0x82 sys/getvgaptr.32
                0x00000000c0013fd2                SysGetVGAPtr(regs*)
 .text          0x00000000c0014054       0xb9 sys/kill.32
                0x00000000c0014054                SysKill(regs*)
 .text          0x00000000c001410d       0xa8 sys/loaddll.32
                0x00000000c001410d                SysLoadDLL(regs*)
 .text          0x00000000c00141b5       0x68 sys/read.32
                0x00000000c00141b5                SysRead(regs*)
 .text          0x00000000c001421d       0x29 sys/registersignal.32
                0x00000000c001421d                SysRegisterSignal(regs*)
 .text          0x00000000c0014246      0x19c sys/registry.32
                0x00000000c0014246                SysRegistryGetTypeFromPath(regs*)
                0x00000000c00142bd                SysRegistryReadExtent(regs*)
                0x00000000c0014305                SysRegistryPathToExtentLookup(regs*)
                0x00000000c001432d                SysRegistryEnterDirectory(regs*)
                0x00000000c0014355                SysRegistryGetNext(regs*)
                0x00000000c001437d                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00143b7                SysRegistryOpen(regs*)
                0x00000000c00143cb                SysRegistryClose(regs*)
 .text          0x00000000c00143e2       0x55 sys/sbrk.32
                0x00000000c00143e2                SysSbrk(regs*)
 .text          0x00000000c0014437       0x1c sys/setcwd.32
                0x00000000c0014437                SysSetCwd(regs*)
 .text          0x00000000c0014453       0x96 sys/settime.32
                0x00000000c0014453                SysSetTime(regs*)
 .text          0x00000000c00144e9       0x73 sys/symlink.32
                0x00000000c00144e9                SysSymlink(regs*)
 .text          0x00000000c001455c       0x4a sys/timezone.32
                0x00000000c001455c                SysTimezone(regs*)
 .text          0x00000000c00145a6       0xfc sys/truncate.32
                0x00000000c00145a6                SysTruncate(regs*)
 .text          0x00000000c00146a2       0x68 sys/write.32
                0x00000000c00146a2                SysWrite(regs*)
 .text          0x00000000c001470a       0x62 sys/wsbe.32
                0x00000000c001470a                SysWsbe(regs*)
 .text          0x00000000c001476c       0x25 sys/yield.32
                0x00000000c001476c                SysYield(regs*)
 .text          0x00000000c0014791     0x1203 thr/elf.32
                0x00000000c0014791                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014a18                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014c37                Thr::runtimeReferenceHelper()
                0x00000000c0014c4a                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014c99                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014f57                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015698                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00156ca                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015701                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001571b                Thr::loadDLL(char const*, bool)
                0x00000000c001595b                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0015994     0x13b5 thr/prcssthr.32
                0x00000000c0015994                userModeEntryPoint(void*)
                0x00000000c00159bc                changeTSS
                0x00000000c00159ec                switchToThread(ThreadControlBlock*)
                0x00000000c0015a9c                Process::addArgs(char**)
                0x00000000c0015b08                Process::Process(char const*, Process*, char**)
                0x00000000c0015b08                Process::Process(char const*, Process*, char**)
                0x00000000c0015d14                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015d14                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015ee8                taskStartupFunction
                0x00000000c0015ef4                Semaphore::Semaphore(int)
                0x00000000c0015ef4                Semaphore::Semaphore(int)
                0x00000000c0015f24                Mutex::Mutex()
                0x00000000c0015f24                Mutex::Mutex()
                0x00000000c0015f38                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016040                Process::createUserThread()
                0x00000000c0016060                setupMultitasking(void (*)())
                0x00000000c0016184                schedule()
                0x00000000c0016218                Semaphore::tryAcquire()
                0x00000000c00162d8                Semaphore::assertLocked(char const*)
                0x00000000c001635c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016384                blockTask(TaskState)
                0x00000000c00163bc                waitTask(int, int*, int)
                0x00000000c0016400                milliTenthSleepUntil(unsigned int)
                0x00000000c00164a0                milliTenthSleep(unsigned int)
                0x00000000c00164b4                sleep(unsigned int)
                0x00000000c00164c4                Semaphore::acquire()
                0x00000000c001658c                taskReturned
                0x00000000c00165d0                Thr::processFromPID(int)
                0x00000000c001667c                unblockTask(ThreadControlBlock*)
                0x00000000c0016728                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00169fc                cleanerTaskFunction(void*)
                0x00000000c0016b04                terminateTask(int)
                0x00000000c0016bf0                Thr::terminateFromIRQ(int)
                0x00000000c0016c00                Semaphore::release()
 .text          0x00000000c0016d49      0xc31 vm86/vm8086.32
                0x00000000c0016d49                Vm::inbv(unsigned short)
                0x00000000c0016d5c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016d92                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016da2                Vm::getSegment(unsigned int)
                0x00000000c0016daa                Vm::getOffset(unsigned int)
                0x00000000c0016daf                Vm::mainloop2()
                0x00000000c0016de9                Vm::mainVm8086Loop(void*)
                0x00000000c0016df9                Vm::mainloop3(unsigned long)
                0x00000000c0016e1f                Vm::initialise8086()
                0x00000000c0016e62                Vm::finish8086()
                0x00000000c0016ec3                Vm::getOutput8086(unsigned char*)
                0x00000000c0016ee8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016fa1                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001713f                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00171dc                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00171ed                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00171ff                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017210                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017225                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001723b                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017250                Vm::faultHandler(regs*)
 .text          0x00000000c001797a      0xaf0 arch/i386/hal.32
                0x00000000c001797a                noCopro(unsigned long)
                0x00000000c001797b                nmiHandler(regs*, void*)
                0x00000000c0017994                doubleFault(regs*, void*)
                0x00000000c00179ad                displayDebugInfo(regs*)
                0x00000000c0017d32                HalSystemIdle()
                0x00000000c0017dae                displayProgramFault(char const*)
                0x00000000c0017dfa                gpFault(regs*, void*)
                0x00000000c0017e61                pgFault(regs*, void*)
                0x00000000c0017eea                otherISRHandler(regs*, void*)
                0x00000000c0017f1e                opcodeFault(regs*, void*)
                0x00000000c0017fa1                i386SaveCoprocessor(void*)
                0x00000000c0017fb5                i386LoadCoprocessor(void*)
                0x00000000c0017fc9                x87EmulHandler(regs*, void*)
                0x00000000c0018066                HalInitialiseCoprocessor()
                0x00000000c0018114                HalPanic(char const*)
                0x00000000c0018228                HalQueryPerformanceCounter()
                0x00000000c0018243                HalInitialise()
                0x00000000c00183f9                HalMakeBeep(int)
                0x00000000c0018433                HalGetRand()
                0x00000000c0018436                HalEndOfInterrupt(int)
                0x00000000c0018467                HalRestart()
                0x00000000c0018468                HalShutdown()
                0x00000000c0018469                HalSleep()
 *fill*         0x00000000c001846a        0x2 
 .text          0x00000000c001846c      0x2dc arch/i386/pic.32
                0x00000000c001846c                picIoWait()
                0x00000000c0018474                picDisable()
                0x00000000c00184a8                picGetIRQReg(int)
                0x00000000c0018524                picOpen()
                0x00000000c00186a8                picEOI(int)
 .text          0x00000000c0018748      0x66e arch/i386/rtc.32
                0x00000000c0018748                RTC::open(int, int, void*)
                0x00000000c001874c                RTC::close(int, int, void*)
                0x00000000c0018750                RTC::timeInSecondsUTC()
                0x00000000c0018762                RTC::timeInDatetimeUTC()
                0x00000000c0018788                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00187c6                RTC::~RTC()
                0x00000000c00187c6                RTC::~RTC()
                0x00000000c00187ea                RTC::~RTC()
                0x00000000c0018814                RTC::get_update_in_progress_flag()
                0x00000000c001882e                RTC::completeRTCRefresh()
                0x00000000c0018b08                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018cb6                rtcIRQHandler(regs*, void*)
                0x00000000c0018cfc                RTC::RTC()
                0x00000000c0018cfc                RTC::RTC()
 *fill*         0x00000000c0018db6        0x2 
 .text          0x00000000c0018db8      0x1f4 arch/i386/vga.32
                0x00000000c0018db8                HalConsoleScroll(int, int)
                0x00000000c0018ec0                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018f24                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018fac     0x14f3 fs/fat/vfslink.32
                0x00000000c0018fac                FAT::getName()
                0x00000000c0018fb4                FAT::tell(void*, unsigned long long*)
                0x00000000c0018ff0                FAT::stat(void*, unsigned long long*)
                0x00000000c001902c                FAT::~FAT()
                0x00000000c001902c                FAT::~FAT()
                0x00000000c0019050                FAT::~FAT()
                0x00000000c0019078                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001911c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00191fc                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00193e0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00195fc                FAT::allocateSwapfile(char const*, int)
                0x00000000c00197bc                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001992c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001998c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00199ec                FAT::close(void*)
                0x00000000c0019a40                FAT::closeDir(void*)
                0x00000000c0019a94                FAT::truncate(void*, unsigned long long)
                0x00000000c0019b00                FAT::seek(void*, unsigned long long)
                0x00000000c0019b58                fatWrapperReadDisk
                0x00000000c0019b98                fatWrapperWriteDisk
                0x00000000c0019bd8                fatWrapperIoctl
                0x00000000c0019cf8                FAT::FAT()
                0x00000000c0019cf8                FAT::FAT()
                0x00000000c0019d50                FAT::fixFilepath(char*)
                0x00000000c0019d90                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019f04                FAT::openDir(char const*, void**)
                0x00000000c0019fb4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a0ac                FAT::unlink(char const*)
                0x00000000c001a12c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a2e4                FAT::rename(char const*, char const*)
                0x00000000c001a3b0                FAT::mkdir(char const*)
                0x00000000c001a430                FAT::exists(char const*)
 *fill*         0x00000000c001a49f        0x1 
 .text          0x00000000c001a4a0       0x94 fs/iso9660/helper.32
                0x00000000c001a4a0                isoReadDiscSectorHelper
                0x00000000c001a4fc                iso_kprintf
                0x00000000c001a518                iso_kprintfd
 .text          0x00000000c001a534      0x71a fs/iso9660/vfslink.32
                0x00000000c001a534                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a53a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a540                ISO9660::getName()
                0x00000000c001a546                ISO9660::closeDir(void*)
                0x00000000c001a550                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a556                ISO9660::unlink(char const*)
                0x00000000c001a55c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a562                ISO9660::rename(char const*, char const*)
                0x00000000c001a568                ISO9660::mkdir(char const*)
                0x00000000c001a56e                ISO9660::~ISO9660()
                0x00000000c001a56e                ISO9660::~ISO9660()
                0x00000000c001a592                ISO9660::~ISO9660()
                0x00000000c001a5ba                ISO9660::exists(char const*)
                0x00000000c001a5ce                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a6b4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a6fc                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a73e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a77c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a7ce                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a910                ISO9660::close(void*)
                0x00000000c001a940                ISO9660::openDir(char const*, void**)
                0x00000000c001aa1a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001ab35                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001abb4                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001ac26                ISO9660::ISO9660()
                0x00000000c001ac26                ISO9660::ISO9660()
 .text          0x00000000c001ac4e      0x26c hal/sound/sndcard.32
                0x00000000c001ac4e                SoundCard::beginPlayback()
                0x00000000c001ac5c                SoundCard::stopPlayback()
                0x00000000c001ac6a                SoundCard::SoundCard(char const*)
                0x00000000c001ac6a                SoundCard::SoundCard(char const*)
                0x00000000c001ad08                SoundCard::~SoundCard()
                0x00000000c001ad08                SoundCard::~SoundCard()
                0x00000000c001ad2c                SoundCard::~SoundCard()
                0x00000000c001ad56                SoundCard::configureRates(int, int, int)
                0x00000000c001ad86                SoundCard::getSamples16(int, short*)
                0x00000000c001ade2                SoundCard::getSamples32(int, int*)
                0x00000000c001ae68                SoundCard::addChannel(SoundPort*)
                0x00000000c001aea6                SoundCard::removeChannel(int)
 *fill*         0x00000000c001aeba        0x2 
 .text          0x00000000c001aebc      0x393 hal/sound/sndport.32
                0x00000000c001aebc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001aebc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001af48                SoundPort::~SoundPort()
                0x00000000c001af48                SoundPort::~SoundPort()
                0x00000000c001af7c                SoundPort::unpause()
                0x00000000c001af88                SoundPort::pause()
                0x00000000c001af94                SoundPort::getBufferUsed()
                0x00000000c001af9c                SoundPort::getBufferSize()
                0x00000000c001afa4                SoundPort::buffer16(short*, int)
                0x00000000c001b030                SoundPort::buffer32(int*, int)
                0x00000000c001b0bc                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b18c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b24f        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b24f        0x1 
 .text          0x00000000c001b250      0xbc5 hw/bus/pci.32
                0x00000000c001b250                PCI::open(int, int, void*)
                0x00000000c001b26e                PCI::close(int, int, void*)
                0x00000000c001b272                PCI::PCI()
                0x00000000c001b272                PCI::PCI()
                0x00000000c001b30a                PCI::readBAR8(unsigned int, int)
                0x00000000c001b326                PCI::readBAR16(unsigned int, int)
                0x00000000c001b344                PCI::readBAR32(unsigned int, int)
                0x00000000c001b360                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b380                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b3a2                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b3c2                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b438                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b4e2                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b506                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b52e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b578                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5a0                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5c4                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5e8                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b610                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b674                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b75a                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001ba24                PCI::checkBus(unsigned char)
                0x00000000c001ba48                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bbce                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bd4a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bdbc                PCI::detect()
 *fill*         0x00000000c001be15        0x1 
 .text          0x00000000c001be16      0xb96 hw/diskctrl/ide.32
                0x00000000c001be16                IDE::close(int, int, void*)
                0x00000000c001be1a                IDE::IDE()
                0x00000000c001be1a                IDE::IDE()
                0x00000000c001be4e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001be60                selectDrive(unsigned char, unsigned char)
                0x00000000c001be62                IDE::getBase(unsigned char)
                0x00000000c001be74                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bf34                IDE::read(unsigned char, unsigned char)
                0x00000000c001bfe8                IDE::waitInterrupt(unsigned char)
                0x00000000c001c04a                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c066                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c082                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c0cc                IDE::open(int, int, void*)
                0x00000000c001c506                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c5d6                IDE::detect()
                0x00000000c001c89e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c958                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c9ac      0x32c hw/diskctrl/satabus.32
                0x00000000c001c9ac                SATABus::close(int, int, void*)
                0x00000000c001c9b0                SATABus::detect()
                0x00000000c001c9b2                SATABus::SATABus()
                0x00000000c001c9b2                SATABus::SATABus()
                0x00000000c001ca38                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca6a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cab2                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cad2                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cafc                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cc0e                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001ccb8                SATABus::open(int, int, void*)
 .text          0x00000000c001ccd8      0x96d hw/diskphys/ata.32
                0x00000000c001ccd8                ATA::close(int, int, void*)
                0x00000000c001ccfc                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001ccfe                ATA::ATA()
                0x00000000c001ccfe                ATA::ATA()
                0x00000000c001cd2c                ATA::flush(bool)
                0x00000000c001cd7a                ATA::readyForCommand()
                0x00000000c001cdc6                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d18a                ATA::detectCHS()
                0x00000000c001d1b4                ATA::open(int, int, void*)
                0x00000000c001d280                combineCharAndColour(char, unsigned char)
                0x00000000c001d291                combineColours(unsigned char, unsigned char)
                0x00000000c001d29e                ATA::read(unsigned long long, int, void*)
                0x00000000c001d474                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d645        0x1 
 .text          0x00000000c001d646      0x612 hw/diskphys/atapi.32
                0x00000000c001d646                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d64c                ATAPI::close(int, int, void*)
                0x00000000c001d670                ATAPI::ATAPI()
                0x00000000c001d670                ATAPI::ATAPI()
                0x00000000c001d69e                ATAPI::readyForCommand()
                0x00000000c001d6f0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d9b0                ATAPI::diskRemoved()
                0x00000000c001d9ea                ATAPI::eject()
                0x00000000c001da32                ATAPI::diskInserted()
                0x00000000c001da3e                ATAPI::detectMedia()
                0x00000000c001dafe                ATAPI::open(int, int, void*)
                0x00000000c001dbde                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001dc58      0x7ff hw/diskphys/sata.32
                0x00000000c001dc58                SATA::close(int, int, void*)
                0x00000000c001dc7c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001dc7e                SATA::open(int, int, void*)
                0x00000000c001dd28                SATA::SATA()
                0x00000000c001dd28                SATA::SATA()
                0x00000000c001dd56                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001dfa8                SATA::read(unsigned long long, int, void*)
                0x00000000c001e1f8                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e457        0x1 
 .text          0x00000000c001e458      0x5d8 hw/diskphys/satapi.32
                0x00000000c001e458                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e45e                SATAPI::close(int, int, void*)
                0x00000000c001e482                SATAPI::SATAPI()
                0x00000000c001e482                SATAPI::SATAPI()
                0x00000000c001e4b0                SATAPI::diskRemoved()
                0x00000000c001e4b2                SATAPI::diskInserted()
                0x00000000c001e4ce                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e7b4                SATAPI::eject()
                0x00000000c001e7f0                SATAPI::detectMedia()
                0x00000000c001e846                SATAPI::open(int, int, void*)
                0x00000000c001e946                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ea30      0x45b hw/intctrl/apic.32
                0x00000000c001ea30                IOAPIC::close(int, int, void*)
                0x00000000c001ea36                apicGetBase()
                0x00000000c001ea7c                IOAPIC::IOAPIC()
                0x00000000c001ea7c                IOAPIC::IOAPIC()
                0x00000000c001eaa4                apicOpen()
                0x00000000c001ec20                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001ec52                IOAPIC::read(int)
                0x00000000c001ec7a                IOAPIC::open(int, int, void*)
                0x00000000c001ed60                IOAPIC::write(int, int)
                0x00000000c001ed8c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ee8b        0x1 
 .text          0x00000000c001ee8c       0xf0 hw/timer/apictimer.32
                0x00000000c001ee8c                APICTimer::close(int, int, void*)
                0x00000000c001ee94                apicTimerHandler(regs*, void*)
                0x00000000c001eebc                APICTimer::open(int, int, void*)
                0x00000000c001ef2c                APICTimer::write(int)
                0x00000000c001ef54                APICTimer::APICTimer()
                0x00000000c001ef54                APICTimer::APICTimer()
 .text          0x00000000c001ef7c      0x1ad hw/timer/pit.32
                0x00000000c001ef7c                PIT::write(int)
                0x00000000c001f000                pitHandler(regs*, void*)
                0x00000000c001f028                PIT::open(int, int, void*)
                0x00000000c001f078                PIT::close(int, int, void*)
                0x00000000c001f0a8                PIT::PIT()
                0x00000000c001f0a8                PIT::PIT()
 *fill*         0x00000000c001f129        0x7 
 .text          0x00000000c001f130       0x83 arch/i386/avx.32
                0x00000000c001f130                avxDetect
                0x00000000c001f15a                avxSave
                0x00000000c001f16b                avxLoad
                0x00000000c001f17c                avxInit
                0x00000000c001f19e                avxClose
                0x00000000c001f19f                wouldSheSayYes
 *fill*         0x00000000c001f1b3        0xd 
 .text          0x00000000c001f1c0      0x2ec arch/i386/interrupt.32
                0x00000000c001f1c0                isr0
                0x00000000c001f1d0                isr1
                0x00000000c001f1da                isr2
                0x00000000c001f1e4                isr3
                0x00000000c001f1ee                isr4
                0x00000000c001f1f8                isr5
                0x00000000c001f202                isr6
                0x00000000c001f20c                isr7
                0x00000000c001f216                isr8
                0x00000000c001f21e                isr9
                0x00000000c001f228                isr10
                0x00000000c001f230                isr11
                0x00000000c001f238                isr12
                0x00000000c001f240                isr13
                0x00000000c001f25a                isr14
                0x00000000c001f262                isr15
                0x00000000c001f26c                isr16
                0x00000000c001f276                isr17
                0x00000000c001f280                isr18
                0x00000000c001f28a                irq3
                0x00000000c001f294                irq4
                0x00000000c001f29e                irq5
                0x00000000c001f2a8                irq6
                0x00000000c001f2b2                irq7
                0x00000000c001f2bc                irq8
                0x00000000c001f2c6                irq9
                0x00000000c001f2d0                irq10
                0x00000000c001f2da                irq11
                0x00000000c001f2e4                irq12
                0x00000000c001f2ee                irq13
                0x00000000c001f2f8                irq14
                0x00000000c001f302                irq15
                0x00000000c001f30c                irq1
                0x00000000c001f313                irq2
                0x00000000c001f31a                isr96
                0x00000000c001f321                irq0
                0x00000000c001f326                int_common_stub
                0x00000000c001f358                syscall_common_stub
                0x00000000c001f45c                irq16
                0x00000000c001f466                irq17
                0x00000000c001f470                irq18
                0x00000000c001f47a                irq19
                0x00000000c001f484                irq20
                0x00000000c001f48e                irq21
                0x00000000c001f498                irq22
                0x00000000c001f4a2                irq23
 *fill*         0x00000000c001f4ac        0x4 
 .text          0x00000000c001f4b0       0x10 arch/i386/rdrand.32
                0x00000000c001f4b0                i386GetRDRAND
 .text          0x00000000c001f4c0       0x39 arch/i386/sse.32
                0x00000000c001f4c0                absolutelyNoChanceInHell
                0x00000000c001f4c0                sseDetect
                0x00000000c001f4d8                sseSave
                0x00000000c001f4e0                sseLoad
                0x00000000c001f4e8                sseInit
                0x00000000c001f4f8                sseClose
 *fill*         0x00000000c001f4f9        0x7 
 .text          0x00000000c001f500       0x49 arch/i386/x87.32
                0x00000000c001f506                x87Detect
                0x00000000c001f521                x87Save
                0x00000000c001f528                x87Load
                0x00000000c001f52f                x87Init
                0x00000000c001f548                x87Close
 *fill*         0x00000000c001f549        0x3 
 .text          0x00000000c001f54c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f571        0x0 crtn.32
 *fill*         0x00000000c001f571        0x3 
 .text          0x00000000c001f574      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f574                __divdi3
 *fill*         0x00000000c001f6bf        0x1 
 .text          0x00000000c001f6c0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f6c0                __moddi3
 *fill*         0x00000000c001f83e        0x2 
 .text          0x00000000c001f840       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f840                __udivdi3
 *fill*         0x00000000c001f93f        0x1 
 .text          0x00000000c001f940      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f940                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001fa60        0x0
 .iplt          0x00000000c001fa60        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001fa5a        0xf
 .init          0x00000000c001fa5a        0x3 crti.32
                0x00000000c001fa5a                _init
 .init          0x00000000c001fa5d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001fa62        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001fa67        0x2 crtn.32

.fini           0x00000000c001fa69        0xa
 .fini          0x00000000c001fa69        0x3 crti.32
                0x00000000c001fa69                _fini
 .fini          0x00000000c001fa6c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001fa71        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001fa74       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001fa74       0x23 core/computer.32
                0x00000000c001fa74                Computer::~Computer()
                0x00000000c001fa74                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001fa98       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001fa98       0x2a core/computer.32
                0x00000000c001fa98                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001fac2       0x21
 .text._Z10idleCommonv
                0x00000000c001fac2       0x21 core/idle.32
                0x00000000c001fac2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fae4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fae4        0x2 core/unixfile.32
                0x00000000c001fae4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001fae4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fae6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fae6       0x42 core/unixfile.32
                0x00000000c001fae6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001fae6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fb28       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fb28       0xd3 core/unixfile.32
                0x00000000c001fb28                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fbfc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fbfc        0x7 core/unixfile.32
                0x00000000c001fbfc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fc04       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fc04       0xa1 core/unixfile.32
                0x00000000c001fc04                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fca6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fca6        0x8 core/unixfile.32
                0x00000000c001fca6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fcae       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fcae       0x1a hal/device.32
                0x00000000c001fcae                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fcae                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fcc8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fcc8       0x2a hal/device.32
                0x00000000c001fcc8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fcf2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fcf2       0xdc hal/device.32
                0x00000000c001fcf2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fdce       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fdce       0x42 hal/device.32
                0x00000000c001fdce                LinkedList<Device>::LinkedList()
                0x00000000c001fdce                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fe10       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fe10       0x1c hal/timer.32
                0x00000000c001fe10                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fe2c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fe2c        0x7 hal/timer.32
                0x00000000c001fe2c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fe34       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fe34       0xbc hal/timer.32
                0x00000000c001fe34                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fef0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fef0       0xda hal/timer.32
                0x00000000c001fef0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ffcc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ffcc       0x23 hw/acpi.32
                0x00000000c001ffcc                ACPI::~ACPI()
                0x00000000c001ffcc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fff0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fff0       0x2a hw/acpi.32
                0x00000000c001fff0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c002001c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c002001c        0x2 hw/acpi.32
                0x00000000c002001c                LinkedList<Device>::~LinkedList()
                0x00000000c002001c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0020020       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0020020       0x1c hw/acpi.32
                0x00000000c0020020                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c002003c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c002003c        0x7 hw/acpi.32
                0x00000000c002003c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020044       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020044       0xb8 hw/acpi.32
                0x00000000c0020044                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c00200fc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00200fc       0x23 hw/cpu.32
                0x00000000c00200fc                CPU::~CPU()
                0x00000000c00200fc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020120       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020120       0x2a hw/cpu.32
                0x00000000c0020120                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002014c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002014c        0x8 sys/kill.32
                0x00000000c002014c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020154        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020154        0x2 thr/prcssthr.32
                0x00000000c0020154                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020154                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020158       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020158       0x49 thr/prcssthr.32
                0x00000000c0020158                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020158                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00201a4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00201a4       0x42 thr/prcssthr.32
                0x00000000c00201a4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00201a4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c00201e6       0x23
 .text._ZN3PCID2Ev
                0x00000000c00201e6       0x23 hw/bus/pci.32
                0x00000000c00201e6                PCI::~PCI()
                0x00000000c00201e6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002020a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002020a       0x2a hw/bus/pci.32
                0x00000000c002020a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020234       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020234       0x23 hw/diskctrl/ide.32
                0x00000000c0020234                IDE::~IDE()
                0x00000000c0020234                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020258       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020258       0x2a hw/diskctrl/ide.32
                0x00000000c0020258                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020282       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020282       0x23 hw/diskctrl/satabus.32
                0x00000000c0020282                SATABus::~SATABus()
                0x00000000c0020282                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c00202a6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c00202a6       0x2a hw/diskctrl/satabus.32
                0x00000000c00202a6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c00202d0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c00202d0       0x23 hw/diskphys/ata.32
                0x00000000c00202d0                ATA::~ATA()
                0x00000000c00202d0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00202f4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00202f4       0x2a hw/diskphys/ata.32
                0x00000000c00202f4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c002031e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c002031e       0x23 hw/diskphys/atapi.32
                0x00000000c002031e                ATAPI::~ATAPI()
                0x00000000c002031e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020342       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020342       0x2a hw/diskphys/atapi.32
                0x00000000c0020342                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002036c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002036c       0x23 hw/diskphys/sata.32
                0x00000000c002036c                SATA::~SATA()
                0x00000000c002036c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020390       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020390       0x2a hw/diskphys/sata.32
                0x00000000c0020390                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00203ba       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00203ba       0x23 hw/diskphys/satapi.32
                0x00000000c00203ba                SATAPI::~SATAPI()
                0x00000000c00203ba                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00203de       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00203de       0x2a hw/diskphys/satapi.32
                0x00000000c00203de                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020408       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020408       0x23 hw/intctrl/apic.32
                0x00000000c0020408                IOAPIC::~IOAPIC()
                0x00000000c0020408                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002042c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002042c       0x2a hw/intctrl/apic.32
                0x00000000c002042c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020458       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020458       0x23 hw/timer/apictimer.32
                0x00000000c0020458                APICTimer::~APICTimer()
                0x00000000c0020458                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002047c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002047c       0x2a hw/timer/apictimer.32
                0x00000000c002047c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00204a8       0x23
 .text._ZN3PITD2Ev
                0x00000000c00204a8       0x23 hw/timer/pit.32
                0x00000000c00204a8                PIT::~PIT()
                0x00000000c00204a8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00204cc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00204cc       0x2a hw/timer/pit.32
                0x00000000c00204cc                PIT::~PIT()

.rodata         0x00000000c00204f6     0x3386
                0x00000000c00204f6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00204f6        0x2 
 .ctors         0x00000000c00204f8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00204fc        0x4 core/unixfile.32
 .ctors         0x00000000c0020500        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020504        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020508                end_ctors = .
                0x00000000c0020508                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020508        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002050c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002050c                __DTOR_END__
                0x00000000c0020510                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020510       0x10 
 .rodata        0x00000000c0020520      0x101 acpica/utclib.32
                0x00000000c0020520                AcpiGbl_Ctypes
 *fill*         0x00000000c0020621        0x3 
 .rodata        0x00000000c0020624       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002063c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020686       0x1a 
 .rodata        0x00000000c00206a0       0xed fs/fat/ff.32
 *fill*         0x00000000c002078d       0x13 
 .rodata        0x00000000c00207a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020ba0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020c0f      0x155 core/computer.32
 .rodata.str1.4
                0x00000000c0020d64       0x90 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020df4       0x2c core/computer.32
                0x00000000c0020df4                vtable for Computer
 .rodata.str1.4
                0x00000000c0020e20       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020e50        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020e5c       0x17 core/main.32
 *fill*         0x00000000c0020e73        0x1 
 .rodata.str1.4
                0x00000000c0020e74       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020f19       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020f71       0x39 core/pipe.32
 *fill*         0x00000000c0020faa        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020fac       0x1c core/pipe.32
                0x00000000c0020fac                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020fc8       0x2b core/terminal.32
 *fill*         0x00000000c0020ff3        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020ff4       0x1c core/terminal.32
                0x00000000c0020ff4                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0021010       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0021032       0x15 core/unixfile.32
 *fill*         0x00000000c0021047        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0021048       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0021093        0x8 core/unixfile.32
 *fill*         0x00000000c002109b        0x1 
 .rodata.str1.4
                0x00000000c002109c       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00210bc       0x1c core/unixfile.32
                0x00000000c00210bc                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00210d8       0x1c core/unixfile.32
                0x00000000c00210d8                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00210f4      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021388      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00214ae       0x33 coreobjs/c++.32
 *fill*         0x00000000c00214e1        0x3 
 .rodata        0x00000000c00214e4      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021634      0x169 dbg/usban.32
 *fill*         0x00000000c002179d        0x3 
 .rodata.str1.4
                0x00000000c00217a0      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00218d7      0x19b fs/symlink.32
 .rodata.str1.1
                0x00000000c0021a72       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c0021ab3        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021ab4       0x6c fs/vfs.32
                0x00000000c0021ab4                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021b20       0x1c fs/vfs.32
                0x00000000c0021b20                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021b3c       0x1c fs/vfs.32
                0x00000000c0021b3c                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021b58       0x2c hal/bus.32
                0x00000000c0021b58                vtable for Bus
 .rodata.str1.1
                0x00000000c0021b84       0x1e hal/clock.32
 *fill*         0x00000000c0021ba2        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021ba4       0x3c hal/clock.32
                0x00000000c0021ba4                vtable for Clock
 .rodata        0x00000000c0021be0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021c10       0xbc hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021ccc       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021ccc       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021ccc       0x2c hal/device.32
                0x00000000c0021ccc                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021cf8       0x2c hal/device.32
                0x00000000c0021cf8                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021d24       0x2c hal/diskctrl.32
                0x00000000c0021d24                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021d50       0x38 hal/diskphys.32
                0x00000000c0021d50                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021d88       0x3e hal/intctrl.32
 *fill*         0x00000000c0021dc6        0x2 
 .rodata.str1.4
                0x00000000c0021dc8       0x5d hal/intctrl.32
 .rodata        0x00000000c0021e25       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021e78       0x34 hal/keybrd.32
                0x00000000c0021e78                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021eac       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021ef0       0x2c hal/logidisk.32
                0x00000000c0021ef0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021f1c       0x2c hal/mouse.32
                0x00000000c0021f1c                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021f48       0x34 hal/nic.32
                0x00000000c0021f48                vtable for NIC
 .rodata.str1.1
                0x00000000c0021f7c        0xb hal/partition.32
 *fill*         0x00000000c0021f87        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021f88       0x44 hal/serial.32
                0x00000000c0021f88                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021fcc       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021fcc        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021fcc       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021fcc       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021fcc       0x30 hal/timer.32
                0x00000000c0021fcc                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021ffc       0x10 hal/vcache.32
                0x00000000c0021ffc                vtable for VCache
 .rodata.str1.1
                0x00000000c002200c       0x93 hal/video.32
 *fill*         0x00000000c002209f        0x1 
 .rodata._ZTV5Video
                0x00000000c00220a0       0x4c hal/video.32
                0x00000000c00220a0                vtable for Video
 .rodata.str1.1
                0x00000000c00220ec      0x1fd hw/acpi.32
                                        0x217 (size before relaxing)
 *fill*         0x00000000c00222e9        0x3 
 .rodata.str1.4
                0x00000000c00222ec       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0022387       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0022387        0x8 hw/acpi.32
 *fill*         0x00000000c0022387        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0022388       0x2c hw/acpi.32
                0x00000000c0022388                vtable for ACPI
 .rodata.str1.1
                0x00000000c00223b4      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c002252f        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022530       0x2c hw/cpu.32
                0x00000000c0022530                vtable for CPU
 .rodata.str1.1
                0x00000000c002255c       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c002259c       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00225d8       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0022669       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022732       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002277a       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00227a5       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002281b       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022860        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002286a       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002288b       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022921       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022975       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00229a1      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022b6d       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022bc4      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022cd4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022cd4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022cd4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022cd4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022cd4       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022d96        0x2 
 .rodata        0x00000000c0022d98       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022dc8      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022f67        0x1 
 .rodata.str1.4
                0x00000000c0022f68       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022fdb       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022ff0       0x3c arch/i386/rtc.32
                0x00000000c0022ff0                vtable for RTC
 .rodata.str1.1
                0x00000000c002302c       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c002306d        0x3 
 .rodata._ZTV3FAT
                0x00000000c0023070       0x6c fs/fat/vfslink.32
                0x00000000c0023070                vtable for FAT
 .rodata.str1.1
                0x00000000c00230dc       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00230dc      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0023214       0x6c fs/iso9660/vfslink.32
                0x00000000c0023214                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0023280       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00232c4       0x34 hal/sound/sndcard.32
                0x00000000c00232c4                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00232f8       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023337       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002336f       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023410       0x2c hw/bus/pci.32
                0x00000000c0023410                vtable for PCI
 .rodata.str1.1
                0x00000000c002343c       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c00234c3        0x1 
 .rodata._ZTV3IDE
                0x00000000c00234c4       0x2c hw/diskctrl/ide.32
                0x00000000c00234c4                vtable for IDE
 .rodata.str1.4
                0x00000000c00234f0       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0023514       0x2c hw/diskctrl/satabus.32
                0x00000000c0023514                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023540       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023552        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023554       0x38 hw/diskphys/ata.32
                0x00000000c0023554                vtable for ATA
 .rodata.str1.1
                0x00000000c002358c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0023599        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c002359c       0x38 hw/diskphys/atapi.32
                0x00000000c002359c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00235d4       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023650       0x38 hw/diskphys/sata.32
                0x00000000c0023650                vtable for SATA
 .rodata.str1.1
                0x00000000c0023688       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0023772        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0023774       0x38 hw/diskphys/satapi.32
                0x00000000c0023774                vtable for SATAPI
 .rodata        0x00000000c00237ac        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00237b4       0x2c hw/intctrl/apic.32
                0x00000000c00237b4                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00237e0       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00237fb        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00237fc       0x30 hw/timer/apictimer.32
                0x00000000c00237fc                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002382c       0x1d hw/timer/pit.32
 *fill*         0x00000000c0023849        0x3 
 .rodata._ZTV3PIT
                0x00000000c002384c       0x30 hw/timer/pit.32
                0x00000000c002384c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002387c      0xbc5
 *(.data)
 .data          0x00000000c002387c        0x0 crti.32
 .data          0x00000000c002387c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002387c                __dso_handle
 .data          0x00000000c0023880        0x0 acpica/utclib.32
 .data          0x00000000c0023880        0x0 core/malloc.32
 .data          0x00000000c0023880        0x0 libk/ctype.32
 .data          0x00000000c0023880        0x0 libk/string.32
 .data          0x00000000c0023880        0x0 fs/fat/diskio.32
 .data          0x00000000c0023880        0x0 fs/fat/ff.32
 .data          0x00000000c0023880        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023880        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023880        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023880        0x0 core/computer.32
 .data          0x00000000c0023880        0x0 core/gdt.32
 .data          0x00000000c0023880        0x0 core/idle.32
 .data          0x00000000c0023880        0x0 core/idt.32
 .data          0x00000000c0023880        0x4 core/kheap.32
 .data          0x00000000c0023884        0x0 core/main.32
 .data          0x00000000c0023884        0x4 core/physmgr.32
                0x00000000c0023884                Phys::bitmap
 .data          0x00000000c0023888        0x0 core/pipe.32
 *fill*         0x00000000c0023888       0x18 
 .data          0x00000000c00238a0       0x60 core/terminal.32
                0x00000000c00238a0                VgaText::hiddenOut
                0x00000000c00238c0                ansiToVGAMappings
 .data          0x00000000c0023900        0x0 core/tss.32
 .data          0x00000000c0023900        0x4 core/unixfile.32
                0x00000000c0023900                UnixFile::nextFd
 .data          0x00000000c0023904       0x15 core/virtmgr.32
                0x00000000c0023904                Virt::pageAllocPtr
                0x00000000c0023908                Virt::bitmap
                0x00000000c002390c                Virt::swapfileSectorsPerPage
                0x00000000c0023910                Virt::swapfileLength
                0x00000000c0023914                Virt::swapfileSector
                0x00000000c0023918                Virt::swapfileDrive
 *fill*         0x00000000c0023919        0x3 
 .data          0x00000000c002391c        0x4 coreobjs/c++.32
                0x00000000c002391c                __stack_chk_guard
 .data          0x00000000c0023920        0x0 dbg/kconsole.32
 .data          0x00000000c0023920       0x28 dbg/usban.32
                0x00000000c0023920                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023948        0x0 fs/symlink.32
 .data          0x00000000c0023948        0x0 fs/vfs.32
 .data          0x00000000c0023948        0x0 hal/bus.32
 .data          0x00000000c0023948        0x0 hal/buzzer.32
 .data          0x00000000c0023948        0x0 hal/clock.32
 .data          0x00000000c0023948        0x0 hal/device.32
 .data          0x00000000c0023948        0x0 hal/diskctrl.32
 .data          0x00000000c0023948        0x0 hal/diskphys.32
 .data          0x00000000c0023948        0x0 hal/fpu.32
 .data          0x00000000c0023948        0x0 hal/intctrl.32
 .data          0x00000000c0023948        0x0 hal/keybrd.32
 .data          0x00000000c0023948        0x0 hal/logidisk.32
 .data          0x00000000c0023948        0x0 hal/mouse.32
 .data          0x00000000c0023948        0x0 hal/nic.32
 .data          0x00000000c0023948        0x0 hal/partition.32
 .data          0x00000000c0023948        0x0 hal/serial.32
 .data          0x00000000c0023948        0x0 hal/timer.32
 .data          0x00000000c0023948        0x0 hal/vcache.32
 .data          0x00000000c0023948        0x0 hal/video.32
 .data          0x00000000c0023948       0x10 hw/acpi.32
                0x00000000c0023948                legacyIRQRemaps
 .data          0x00000000c0023958        0x4 hw/cpu.32
                0x00000000c0023958                lastCode
 .data          0x00000000c002395c        0x0 krnl/atexit.32
 *fill*         0x00000000c002395c        0x4 
 .data          0x00000000c0023960      0x142 krnl/bootmsg.32
                0x00000000c0023960                KiSplashScreen
 .data          0x00000000c0023aa2        0x0 krnl/compat.32
 *fill*         0x00000000c0023aa2       0x1e 
 .data          0x00000000c0023ac0      0x400 krnl/crc32.32
                0x00000000c0023ac0                KiPolyLookupCRC32
 .data          0x00000000c0023ec0       0x4d krnl/env.32
                0x00000000c0023ec0                defaultSysEnv
 .data          0x00000000c0023f0d        0x0 krnl/inlines.32
 .data          0x00000000c0023f0d        0x0 krnl/panic.32
 .data          0x00000000c0023f0d        0x0 krnl/powctrl.32
 .data          0x00000000c0023f0d        0x0 krnl/random.32
 .data          0x00000000c0023f0d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023f0d       0x13 
 .data          0x00000000c0023f20       0x4c krnl/signal.32
                0x00000000c0023f20                KiDefaultSignalHandlers
 *fill*         0x00000000c0023f6c       0x14 
 .data          0x00000000c0023f80       0xfc krnl/syscalls.32
                0x00000000c0023f80                systemCallHandlers
 .data          0x00000000c002407c        0x0 net/ethernet.32
 *fill*         0x00000000c002407c        0x4 
 .data          0x00000000c0024080      0x100 reg/cm.32
                0x00000000c0024080                CmComponents
 .data          0x00000000c0024180        0x0 reg/registry.32
 .data          0x00000000c0024180        0x0 sys/eject.32
 .data          0x00000000c0024180        0x0 sys/exit.32
 .data          0x00000000c0024180        0x0 sys/getcwd.32
 .data          0x00000000c0024180        0x0 sys/getpid.32
 .data          0x00000000c0024180        0x0 sys/getramdata.32
 .data          0x00000000c0024180        0x0 sys/getvgaptr.32
 .data          0x00000000c0024180        0x0 sys/kill.32
 .data          0x00000000c0024180        0x0 sys/loaddll.32
 .data          0x00000000c0024180        0x0 sys/read.32
 .data          0x00000000c0024180        0x0 sys/registersignal.32
 .data          0x00000000c0024180        0x0 sys/registry.32
 .data          0x00000000c0024180        0x0 sys/sbrk.32
 .data          0x00000000c0024180        0x0 sys/setcwd.32
 .data          0x00000000c0024180        0x0 sys/settime.32
 .data          0x00000000c0024180        0x0 sys/symlink.32
 .data          0x00000000c0024180        0x0 sys/timezone.32
 .data          0x00000000c0024180        0x0 sys/truncate.32
 .data          0x00000000c0024180        0x0 sys/write.32
 .data          0x00000000c0024180        0x0 sys/wsbe.32
 .data          0x00000000c0024180        0x0 sys/yield.32
 .data          0x00000000c0024180        0x0 thr/elf.32
 .data          0x00000000c0024180        0x4 thr/prcssthr.32
                0x00000000c0024180                Thr::nextPID
 .data          0x00000000c0024184        0x0 vm86/vm8086.32
 *fill*         0x00000000c0024184       0x1c 
 .data          0x00000000c00241a0      0x2a0 arch/i386/hal.32
                0x00000000c00241a0                exceptionNames
 .data          0x00000000c0024440        0x0 arch/i386/pic.32
 .data          0x00000000c0024440        0x0 arch/i386/rtc.32
 .data          0x00000000c0024440        0x0 arch/i386/vga.32
 .data          0x00000000c0024440        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024440        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024440        0x1 fs/iso9660/vfslink.32
                0x00000000c0024440                recentDriveletter
 .data          0x00000000c0024441        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024441        0x0 hal/sound/sndport.32
 .data          0x00000000c0024441        0x0 hw/bus/isa.32
 .data          0x00000000c0024441        0x0 hw/bus/pci.32
 .data          0x00000000c0024441        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024441        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024441        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024441        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024441        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024441        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024441        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024441        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024441        0x0 hw/timer/pit.32
 .data          0x00000000c0024441        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024441        0x0 crtn.32
 .data          0x00000000c0024441        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024441        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024441        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024441        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024444        0x0
 .got           0x00000000c0024444        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024444        0x0
 .got.plt       0x00000000c0024444        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024444        0x0
 .igot.plt      0x00000000c0024444        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024444        0x0
 .tm_clone_table
                0x00000000c0024444        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024444        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024441      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024441        0x3 
 .eh_frame      0x00000000c0024444        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024444        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024444       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002449c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00244dc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024548       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
