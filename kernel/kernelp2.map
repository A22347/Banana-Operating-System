Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x20c8e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x225 dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006ef0                Dbg::logs(char*)
                0x00000000c0006f0f                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f2d                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f4e                Dbg::kprintf(char const*, ...)
 .text          0x00000000c0007084      0x2d4 dbg/usban.32
                0x00000000c0007084                KiUbsanPrintDetails(char const*, void*)
                0x00000000c00070f0                __ubsan_handle_type_mismatch_v1
                0x00000000c00071cc                __ubsan_handle_pointer_overflow
                0x00000000c00071f8                __ubsan_handle_out_of_bounds
                0x00000000c0007224                __ubsan_handle_add_overflow
                0x00000000c0007250                __ubsan_handle_load_invalid_value
                0x00000000c000727c                __ubsan_handle_divrem_overflow
                0x00000000c00072a8                __ubsan_handle_mul_overflow
                0x00000000c00072d4                __ubsan_handle_sub_overflow
                0x00000000c0007300                __ubsan_handle_shift_out_of_bounds
                0x00000000c000732c                __ubsan_handle_negate_overflow
 .text          0x00000000c0007358      0x812 fs/symlink.32
                0x00000000c00074a7                KiDeinitialiseSymlinks(void*)
                0x00000000c0007538                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075bb                KeInitialiseSymlinks()
                0x00000000c000771d                KiIsSymlinkRegistered(char const*)
                0x00000000c0007887                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a2e                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b6a      0xd9c fs/vfs.32
                0x00000000c0007b6a                File::read(unsigned long long, void*, int*)
                0x00000000c0007bc2                File::write(unsigned long long, void*, int*)
                0x00000000c0007c1a                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c72                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007ca0                File::isAtty()
                0x00000000c0007ca4                Directory::isAtty()
                0x00000000c0007ca8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cae                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cb4                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cba                File::~File()
                0x00000000c0007cba                File::~File()
                0x00000000c0007cde                File::~File()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d2c                Directory::~Directory()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d88                Filesystem::~Filesystem()
                0x00000000c0007dac                Fs::getcwd(Process*, char*, int)
                0x00000000c0007dd6                Fs::initVFS()
                0x00000000c0007e00                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000812c                File::File(char const*, Process*)
                0x00000000c000812c                File::File(char const*, Process*)
                0x00000000c000814a                File::open(FileOpenMode)
                0x00000000c00081a8                File::close()
                0x00000000c0008208                File::seek(unsigned long long)
                0x00000000c000825e                File::truncate(unsigned long long)
                0x00000000c00082b4                File::tell(unsigned long long*)
                0x00000000c0008304                File::rewind()
                0x00000000c0008318                File::unlink()
                0x00000000c0008364                File::rename(char const*)
                0x00000000c00083b2                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000840e                File::exists()
                0x00000000c000844c                File::stat(unsigned long long*, bool*)
                0x00000000c00084ad                Fs::setcwd(Process*, char*)
                0x00000000c000860c                Directory::Directory(char const*, Process*)
                0x00000000c000860c                Directory::Directory(char const*, Process*)
                0x00000000c00086d4                Directory::open()
                0x00000000c0008730                Directory::close()
                0x00000000c0008790                Directory::unlink()
                0x00000000c00087dc                Directory::rename(char const*)
                0x00000000c000882a                Directory::exists()
                0x00000000c0008868                Directory::read(dirent*)
                0x00000000c00088b4                Directory::create()
                0x00000000c0008900                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c0008906        0x2 
 .text          0x00000000c0008908       0x86 hal/bus.32
                0x00000000c0008908                Bus::Bus(char const*)
                0x00000000c0008908                Bus::Bus(char const*)
                0x00000000c0008940                Bus::~Bus()
                0x00000000c0008940                Bus::~Bus()
                0x00000000c0008964                Bus::~Bus()
 .text          0x00000000c000898e       0x99 hal/buzzer.32
                0x00000000c000898e                KeBeepThread(void*)
                0x00000000c00089ce                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a27        0x1 
 .text          0x00000000c0008a28      0x547 hal/clock.32
                0x00000000c0008a28                KeLoadClockSettings()
                0x00000000c0008b30                Clock::Clock(char const*)
                0x00000000c0008b30                Clock::Clock(char const*)
                0x00000000c0008b66                Clock::~Clock()
                0x00000000c0008b66                Clock::~Clock()
                0x00000000c0008b8a                Clock::~Clock()
                0x00000000c0008bb4                Clock::timeInSecondsLocal()
                0x00000000c0008bfc                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0008c55                KeDatetimeToSeconds(datetime_t)
                0x00000000c0008d7a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0008e03                KeSecondsToDatetime(unsigned long long)
                0x00000000c0008f4a                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0008f6f        0x1 
 .text          0x00000000c0008f70      0x47a hal/device.32
                0x00000000c0008f70                Device::hibernate()
                0x00000000c0008f72                Device::wake()
                0x00000000c0008f74                Device::detect()
                0x00000000c0008f76                Device::disableLegacy()
                0x00000000c0008f78                Device::powerSaving(PowerSavingLevel)
                0x00000000c0008f7a                DriverlessDevice::close(int, int, void*)
                0x00000000c0008f7e                DriverlessDevice::detect()
                0x00000000c0008f80                DriverlessDevice::open(int, int, void*)
                0x00000000c0008f94                Device::~Device()
                0x00000000c0008f94                Device::~Device()
                0x00000000c0008fa2                Device::~Device()
                0x00000000c0008fca                Device::findAndLoadDriver()
                0x00000000c0008fd8                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0008ffe                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000903e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009068                Device::getParent()
                0x00000000c0009074                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009092                Device::addChild(Device*)
                0x00000000c00090d6                Device::removeAllChildren()
                0x00000000c000911c                Device::hibernateAll()
                0x00000000c000914c                Device::wakeAll()
                0x00000000c000917c                Device::detectAll()
                0x00000000c00091ac                Device::disableLegacyAll()
                0x00000000c00091ae                Device::loadDriversForAll()
                0x00000000c00091b0                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00091e6                Device::setName(char const*)
                0x00000000c00091f4                Device::Device(char const*)
                0x00000000c00091f4                Device::Device(char const*)
                0x00000000c00092f0                Device::getName()
                0x00000000c00092fa                Device::closeAll()
                0x00000000c0009346                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009346                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000937c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c00093c0                getDevicesOfType(DeviceType)
 *fill*         0x00000000c00093ea        0x2 
 .text          0x00000000c00093ec       0x86 hal/diskctrl.32
                0x00000000c00093ec                HardDiskController::HardDiskController(char const*)
                0x00000000c00093ec                HardDiskController::HardDiskController(char const*)
                0x00000000c0009424                HardDiskController::~HardDiskController()
                0x00000000c0009424                HardDiskController::~HardDiskController()
                0x00000000c0009448                HardDiskController::~HardDiskController()
 .text          0x00000000c0009472       0xe2 hal/diskphys.32
                0x00000000c0009472                PhysicalDisk::eject()
                0x00000000c0009476                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009476                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00094de                PhysicalDisk::startCache()
                0x00000000c0009506                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009506                PhysicalDisk::~PhysicalDisk()
                0x00000000c000952a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009554        0x0 hal/fpu.32
 .text          0x00000000c0009554        0x0 hal/intctrl.32
 .text          0x00000000c0009554      0x874 hal/keybrd.32
                0x00000000c0009554                startGUI(void*)
                0x00000000c00095b9                startGUIVESA(void*)
                0x00000000c000961e                sendKeyToTerminal(unsigned char)
                0x00000000c00096f4                sendKeyboardToken(KeyboardToken)
                0x00000000c0009bb0                clearInternalKeybuffer(VgaText*)
                0x00000000c0009be5                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0009d3e                Keyboard::Keyboard(char const*)
                0x00000000c0009d3e                Keyboard::Keyboard(char const*)
                0x00000000c0009d7a                Keyboard::~Keyboard()
                0x00000000c0009d7a                Keyboard::~Keyboard()
                0x00000000c0009d9e                Keyboard::~Keyboard()
 .text          0x00000000c0009dc8      0x3f8 hal/logidisk.32
                0x00000000c0009dc8                LogicalDisk::close(int, int, void*)
                0x00000000c0009dcc                LogicalDisk::~LogicalDisk()
                0x00000000c0009dcc                LogicalDisk::~LogicalDisk()
                0x00000000c0009df0                LogicalDisk::~LogicalDisk()
                0x00000000c0009e1a                LogicalDisk::open(int, int, void*)
                0x00000000c0009e2e                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0009e66                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0009eac                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009eac                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009f6c                LogicalDisk::assignDriveLetter()
                0x00000000c000a026                LogicalDisk::mount()
                0x00000000c000a06e                LogicalDisk::unmount()
                0x00000000c000a07e                LogicalDisk::eject()
                0x00000000c000a092                LogicalDisk::unassignDriveLetter()
                0x00000000c000a0e8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000a154                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000a1c0       0x86 hal/mouse.32
                0x00000000c000a1c0                Mouse::Mouse(char const*)
                0x00000000c000a1c0                Mouse::Mouse(char const*)
                0x00000000c000a1f8                Mouse::~Mouse()
                0x00000000c000a1f8                Mouse::~Mouse()
                0x00000000c000a21c                Mouse::~Mouse()
 .text          0x00000000c000a246       0x90 hal/nic.32
                0x00000000c000a246                NIC::getMAC()
                0x00000000c000a24c                NIC::write(int, unsigned char*, int*)
                0x00000000c000a252                NIC::NIC(char const*)
                0x00000000c000a252                NIC::NIC(char const*)
                0x00000000c000a288                NIC::~NIC()
                0x00000000c000a288                NIC::~NIC()
                0x00000000c000a2ac                NIC::~NIC()
 .text          0x00000000c000a2d6      0x33b hal/partition.32
                0x00000000c000a2d6                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a37e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000a611        0x3 
 .text          0x00000000c000a614       0x86 hal/serial.32
                0x00000000c000a614                Serial::Serial(char const*)
                0x00000000c000a614                Serial::Serial(char const*)
                0x00000000c000a64c                Serial::~Serial()
                0x00000000c000a64c                Serial::~Serial()
                0x00000000c000a670                Serial::~Serial()
 *fill*         0x00000000c000a69a        0x2 
 .text          0x00000000c000a69c      0x204 hal/timer.32
                0x00000000c000a69c                Timer::Timer(char const*)
                0x00000000c000a69c                Timer::Timer(char const*)
                0x00000000c000a6d4                Timer::~Timer()
                0x00000000c000a6d4                Timer::~Timer()
                0x00000000c000a6f8                Timer::~Timer()
                0x00000000c000a722                Timer::read()
                0x00000000c000a72d                setupTimer(int)
                0x00000000c000a768                timerHandler(unsigned int)
 .text          0x00000000c000a8a0      0x60e hal/vcache.32
                0x00000000c000a8a0                VCache::VCache(PhysicalDisk*)
                0x00000000c000a8a0                VCache::VCache(PhysicalDisk*)
                0x00000000c000aa10                VCache::invalidateReadBuffer()
                0x00000000c000aa20                VCache::writeWriteBuffer()
                0x00000000c000aa6c                VCache::~VCache()
                0x00000000c000aa6c                VCache::~VCache()
                0x00000000c000aac4                VCache::~VCache()
                0x00000000c000aaec                VCache::write(unsigned long long, int, void*)
                0x00000000c000acba                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000aeae      0x71d hal/video.32
                0x00000000c000aeae                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000aefa                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000af6a                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000affa                Video::clearScreen(unsigned int)
                0x00000000c000b02e                Video::putpixel(int, int, unsigned int)
                0x00000000c000b03c                Video::readPixelApprox(int, int)
                0x00000000c000b050                Video::Video(char const*)
                0x00000000c000b050                Video::Video(char const*)
                0x00000000c000b086                Video::~Video()
                0x00000000c000b086                Video::~Video()
                0x00000000c000b0aa                Video::~Video()
                0x00000000c000b0d4                Video::isMonochrome()
                0x00000000c000b0e0                Video::getWidth()
                0x00000000c000b0ec                Video::getHeight()
                0x00000000c000b0f8                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000b1b4                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000b55a                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000b5cb        0x1 
 .text          0x00000000c000b5cc     0x1096 hw/acpi.32
                0x00000000c000b5cc                ACPI::close(int, int, void*)
                0x00000000c000b5d4                loadACPITables(unsigned char*)
                0x00000000c000b834                findRSDT(unsigned char*)
                0x00000000c000b980                findDataTable(unsigned char*, char*)
                0x00000000c000b9f4                scanMADT()
                0x00000000c000be4c                ACPI::ACPI()
                0x00000000c000be4c                ACPI::ACPI()
                0x00000000c000bea0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000bf9c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000c068                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000c070                ACPI::detectPCI()
                0x00000000c000c27c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000c294                ACPI::open(int, int, void*)
 *fill*         0x00000000c000c662        0x2 
 .text          0x00000000c000c664       0xea krnl/assert.32
                0x00000000c000c664                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000c74e       0xb6 krnl/atexit.32
                0x00000000c000c74e                KeInitialiseAtexit()
                0x00000000c000c76d                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000c7a1                KeExecuteAtexit()
 .text          0x00000000c000c804       0x9f krnl/bootmsg.32
                0x00000000c000c804                KeDisplaySplashScreen()
                0x00000000c000c833                KeSetBootMessage(char const*)
 .text          0x00000000c000c8a3       0x5f krnl/c++.32
                0x00000000c000c8a3                __cxa_atexit
                0x00000000c000c8a6                __cxa_finalize
                0x00000000c000c8a7                __stack_chk_fail
                0x00000000c000c8dd                __cxa_pure_virtual
                0x00000000c000c8ee                operator new[](unsigned long)
                0x00000000c000c8f3                operator delete(void*, unsigned long)
                0x00000000c000c8f8                operator delete[](void*)
                0x00000000c000c8fd                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000c902        0x2 
 .text          0x00000000c000c904       0x44 krnl/cdefs.32
                0x00000000c000c904                CUnlockScheduler
                0x00000000c000c91c                CLockScheduler
                0x00000000c000c92c                CPrintf
 .text          0x00000000c000c948      0xd51 krnl/cm.32
                0x00000000c000c948                CmOpen(char const*)
                0x00000000c000ca66                CmClose(Reghive_Tag*)
                0x00000000c000ca7c                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000cab8                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000cb2f                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000cb6e                CmGetNext(Reghive_Tag*, int)
                0x00000000c000cba0                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000cbdc                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000cc04                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000cc25                CmExpand(Reghive_Tag*, int)
                0x00000000c000cca0                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000cd26                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000ce1a                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000cf52                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000cfb3                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000cfe3                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000d01a                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000d044                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000d084                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000d128                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000d156                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000d2f3                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000d340                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d3ba                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000d40d                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d4d1                zStrtok(char*, char const*)
                0x00000000c000d543                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000d5c4                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000d667                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000d699        0x3 
 .text          0x00000000c000d69c       0x1d krnl/compat.32
                0x00000000c000d69c                Krnl::handlePowerButton()
                0x00000000c000d6ac                Krnl::handleSleepButton()
 *fill*         0x00000000c000d6b9        0x1 
 .text          0x00000000c000d6ba      0x2c3 krnl/computer.32
                0x00000000c000d6ba                Computer::close(int, int, void*)
                0x00000000c000d6c0                Computer::open(int, int, void*)
                0x00000000c000d7a6                KeFirstTask()
                0x00000000c000d8c8                Computer::Computer()
                0x00000000c000d8c8                Computer::Computer()
                0x00000000c000d90c                KePrepareShutdown()
                0x00000000c000d92c                KeShutdown()
                0x00000000c000d950                KeSleep()
                0x00000000c000d95c                KeRestart()
 .text          0x00000000c000d97d       0x2b krnl/crc32.32
                0x00000000c000d97d                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000d9a8      0x5bf krnl/env.32
                0x00000000c000d9a8                EnvVarContainer::getEnv(char const*)
                0x00000000c000d9e6                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000daa8                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000daaa                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000dcce                EnvVarContainer::__loadSystem()
                0x00000000c000dce8                EnvVarContainer::__loadUser()
                0x00000000c000dcea                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000dcea                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000dd0c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000dd0c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000dd3c                KeGetEnv(Process*, char const*)
                0x00000000c000dda1                KeSetEnvSystem(char const*, char const*)
                0x00000000c000ddbb                KeSetEnvUser(char const*, char const*)
                0x00000000c000ddda                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000dded                KeDeleteEnvSystem(char const*)
                0x00000000c000ddee                KeDeleteEnvUser(char const*)
                0x00000000c000ddef                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000ddf0                KeNewProcessEnv(Process*)
                0x00000000c000de12                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000de5e                KeLoadSystemEnv()
                0x00000000c000de8c                KeLoadUserEnv()
                0x00000000c000deb2                KeFlushEnv()
                0x00000000c000deb3                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000ded3                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000df67        0x1 
 .text          0x00000000c000df68      0x361 krnl/fault.32
                0x00000000c000df68                KeSetupInterrupts()
                0x00000000c000dfe0                int_handler
                0x00000000c000e110                KeDisplayProgramFault(char const*)
                0x00000000c000e160                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e1b4                KePageFault(void*, void*)
                0x00000000c000e218                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e228                KeOtherFault(void*, void*)
                0x00000000c000e25c                KeOpcodeFault(void*, void*)
                0x00000000c000e2b0                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000e2c9        0x1 
 .text          0x00000000c000e2ca      0x1db krnl/gdt.32
                0x00000000c000e2ca                GDTEntry::setBase(unsigned int)
                0x00000000c000e2e6                GDTEntry::setLimit(unsigned int)
                0x00000000c000e304                GDT::GDT()
                0x00000000c000e304                GDT::GDT()
                0x00000000c000e31a                GDT::addEntry(GDTEntry)
                0x00000000c000e33c                GDT::getNumberOfEntries()
                0x00000000c000e344                GDT::flush()
                0x00000000c000e366                GDT::setup()
 .text          0x00000000c000e4a5       0x20 krnl/idle.32
                0x00000000c000e4a5                idleFunction(void*)
 *fill*         0x00000000c000e4c5        0x3 
 .text          0x00000000c000e4c8      0x46c krnl/idt.32
                0x00000000c000e4c8                IDTEntry::IDTEntry(bool)
                0x00000000c000e4c8                IDTEntry::IDTEntry(bool)
                0x00000000c000e542                IDTEntry::setOffset(unsigned int)
                0x00000000c000e558                IDT::IDT()
                0x00000000c000e558                IDT::IDT()
                0x00000000c000e55a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000e562                IDT::addEntry(IDTEntry, int)
                0x00000000c000e57c                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000e5b4                IDT::flush()
                0x00000000c000e5ce                IDT::setup()
 .text          0x00000000c000e934       0x9a krnl/inlines.32
                0x00000000c000e934                CPU::current()
                0x00000000c000e940                operator new(unsigned long)
                0x00000000c000e945                operator delete(void*)
                0x00000000c000e94a                disableIRQs()
                0x00000000c000e94c                enableIRQs()
                0x00000000c000e94e                lockScheduler()
                0x00000000c000e956                unlockScheduler()
                0x00000000c000e968                lockStuff()
                0x00000000c000e976                unlockStuff()
                0x00000000c000e9b3                Virt::getAKernelVAS()
                0x00000000c000e9b9                __not_memcpy
 .text          0x00000000c000e9ce      0x2ae krnl/intlformat.32
                0x00000000c000e9ce                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000ebb0                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000ebd2                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000ebf4                KeSetLocale(klocale_t)
                0x00000000c000ec0a                KeInitialiseLocale()
                0x00000000c000ec78                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000ec79                KeFormatCurrency(char*, int, double)
                0x00000000c000ec7a                KeFormatNumber(char*, long long, long long)
                0x00000000c000ec7b                KeFormatNumber(char*, double)
 .text          0x00000000c000ec7c      0x356 krnl/intops.32
                0x00000000c000ec7c                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000ed98                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000eed8                KeGetDigitsInNumber(long long)
                0x00000000c000ef44                KeItoa(unsigned long long, char*)
                0x00000000c000ef74                KeItoa(long long, char*)
                0x00000000c000efa4                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000efd2      0x204 krnl/kheap.32
                0x00000000c000efd2                sbrk
                0x00000000c000f066                sbrk_thunk
                0x00000000c000f09c                mmap
                0x00000000c000f0fa                munmap
                0x00000000c000f10f                liballoc_lock()
                0x00000000c000f11d                liballoc_unlock()
                0x00000000c000f135                liballoc_alloc(int)
                0x00000000c000f14d                liballoc_free(void*, int)
                0x00000000c000f168                realloc
                0x00000000c000f17c                malloc
                0x00000000c000f18c                free
                0x00000000c000f19c                rfree
                0x00000000c000f1ac                calloc
 *fill*         0x00000000c000f1d6        0x2 
 .text          0x00000000c000f1d8      0x1d3 krnl/mailbox.32
                0x00000000c000f1d8                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000f238                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000f298                KeMailboxCreate()
                0x00000000c000f2cc                KeMailboxPost(Mailbox*, void*)
                0x00000000c000f330                KeMailboxGet(Mailbox*, void**)
                0x00000000c000f394                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000f3ab       0xfd krnl/main.32
                0x00000000c000f3ab                KeEntryPoint
 .text          0x00000000c000f4a8       0x1a krnl/mutex.32
                0x00000000c000f4a8                Mutex::Mutex()
                0x00000000c000f4a8                Mutex::Mutex()
 .text          0x00000000c000f4c2        0xc krnl/panic.32
                0x00000000c000f4c2                KePanic(char const*)
 .text          0x00000000c000f4ce      0x666 krnl/physmgr.32
                0x00000000c000f4ce                Phys::allocateDMA(unsigned long)
                0x00000000c000f5bc                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000f5f7                Phys::setPageState(unsigned long, bool)
                0x00000000c000f637                Phys::getPageState(unsigned long)
                0x00000000c000f653                Phys::freePage(unsigned long)
                0x00000000c000f6bc                Phys::allocatePage()
                0x00000000c000f79a                Phys::allocateContiguousPages(int)
                0x00000000c000f815                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000f84d                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000fb34      0x271 krnl/pipe.32
                0x00000000c000fb34                Pipe::isAtty()
                0x00000000c000fb38                Pipe::~Pipe()
                0x00000000c000fb38                Pipe::~Pipe()
                0x00000000c000fb5c                Pipe::~Pipe()
                0x00000000c000fb84                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000fc48                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000fd3e                Pipe::Pipe(int)
                0x00000000c000fd3e                Pipe::Pipe(int)
 .text          0x00000000c000fda5      0x10b krnl/powctrl.32
                0x00000000c000fda5                KePowerThread(void*)
                0x00000000c000fdd6                KeChangePowerSettings(PowerSettings)
                0x00000000c000fdec                KeUserIOReceived()
                0x00000000c000fdf7                KeHandlePowerButton()
                0x00000000c000fe0f                KeHandleSleepButton()
                0x00000000c000fe27                KeSetupPowerManager()
 .text          0x00000000c000feb0       0x9b krnl/random.32
                0x00000000c000feb0                KeRand()
                0x00000000c000fef0                KeSeedRand(unsigned int)
                0x00000000c000ff19                KeInitRand()
 *fill*         0x00000000c000ff4b        0x1 
 .text          0x00000000c000ff4c      0x1bc krnl/resolve.32
                0x00000000c000ff4c                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010108      0x401 krnl/semaphore.32
                0x00000000c0010108                Semaphore::Semaphore(int)
                0x00000000c0010108                Semaphore::Semaphore(int)
                0x00000000c0010138                Semaphore::tryAcquire()
                0x00000000c001020c                Semaphore::assertLocked(char const*)
                0x00000000c0010298                Semaphore::acquire(int)
                0x00000000c001043c                Semaphore::acquire()
                0x00000000c0010458                Semaphore::release()
 .text          0x00000000c0010509      0x31f krnl/signal.32
                0x00000000c0010509                KiSigKill(int)
                0x00000000c001051d                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001051e                KiDefaultSignalHandlerPause(int)
                0x00000000c001054a                KiDefaultSignalHandlerResume(int)
                0x00000000c0010576                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001057b                KeInitSignals()
                0x00000000c00105ca                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010600                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001067d                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010774                KiCheckSignalZ
                0x00000000c00107b6                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00107f1                KiFinishSignalZ
 .text          0x00000000c0010828      0xe39 krnl/syscalls.32
                0x00000000c0010828                SysSeekDir(regs*)
                0x00000000c001082d                SysTellDir(regs*)
                0x00000000c0010832                SysVerify(regs*)
                0x00000000c001083c                SysGetArgc(regs*)
                0x00000000c0010850                SysTTYName(regs*)
                0x00000000c0010858                SysFormatDisk(regs*)
                0x00000000c00108bf                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010913                SysGetDiskVolumeLabel(regs*)
                0x00000000c001096c                SysRealpath(regs*)
                0x00000000c00109ba                SysReadDir(regs*)
                0x00000000c0010a3a                SysIsATTY(regs*)
                0x00000000c0010a94                SysSeek(regs*)
                0x00000000c0010af2                SysTell(regs*)
                0x00000000c0010b67                SysSize(regs*)
                0x00000000c0010be1                SysSizeFromFilename(regs*)
                0x00000000c0010d14                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0010e47                SysClose(regs*)
                0x00000000c0010eac                SysOpenDir(regs*)
                0x00000000c0010f29                SysMakeDir(regs*)
                0x00000000c0010f97                SysCloseDir(regs*)
                0x00000000c0010feb                SysWait(regs*)
                0x00000000c001100c                SysNotImpl(regs*)
                0x00000000c0011027                SysPanic(regs*)
                0x00000000c0011042                SysRmdir(regs*)
                0x00000000c00110a0                SysUnlink(regs*)
                0x00000000c00110fe                SysGetArgv(regs*)
                0x00000000c001114b                SysUSleep(regs*)
                0x00000000c0011174                SysSpawn(regs*)
                0x00000000c00111e5                SysGetEnv(regs*)
                0x00000000c001129a                SysSetFatAttrib(regs*)
                0x00000000c0011303                SysShutdown(regs*)
                0x00000000c0011360                SysPipe(regs*)
                0x00000000c00113a5                SysGetUnixTime(regs*)
                0x00000000c00113b9                string_ends_with(char const*, char const*)
                0x00000000c0011404                SysOpen(regs*)
                0x00000000c0011603                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011661        0x1 
 .text          0x00000000c0011662      0xadd krnl/terminal.32
                0x00000000c0011662                VgaText::isAtty()
                0x00000000c0011666                VgaText::~VgaText()
                0x00000000c0011666                VgaText::~VgaText()
                0x00000000c001168a                VgaText::~VgaText()
                0x00000000c00116b4                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00116d4                setTerminalScrollLock(bool)
                0x00000000c00116d5                doTerminalCycle()
                0x00000000c00116d6                addToTerminalCycle(VgaText*)
                0x00000000c00116d7                scrollTerminalScrollLock(int)
                0x00000000c00116d8                VgaText::updateTitle()
                0x00000000c00116da                VgaText::load()
                0x00000000c00116dc                VgaText::updateCursor()
                0x00000000c00116f2                VgaText::doANSI_SGR(int)
                0x00000000c0011766                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0011776                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0011786                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00117a6                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00117b2                VgaText::setTitleColour(VgaColour)
                0x00000000c00117be                VgaText::setTitle(char*)
                0x00000000c00117c0                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00117d2                VgaText::scrollScreen()
                0x00000000c0011864                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0011874                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0011920                VgaText::getCursorX()
                0x00000000c0011928                VgaText::getCursorY()
                0x00000000c0011930                VgaText::setCursor(int, int)
                0x00000000c0011947                setActiveTerminal(VgaText*)
                0x00000000c0011992                VgaText::clearScreen()
                0x00000000c00119e0                VgaText::setCursorX(int)
                0x00000000c00119f8                VgaText::setCursorY(int)
                0x00000000c0011a10                VgaText::incrementCursor(bool)
                0x00000000c0011a64                VgaText::decrementCursor(bool)
                0x00000000c0011a86                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0011b56                VgaText::putchar(char)
                0x00000000c0011c3e                VgaText::putx(unsigned int)
                0x00000000c0011c84                VgaText::puts(char const*)
                0x00000000c0011caa                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0011cf6                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0011e70                VgaText::VgaText(char const*)
                0x00000000c0011e70                VgaText::VgaText(char const*)
                0x00000000c0011fd0                VgaText::receiveKey(unsigned char)
                0x00000000c001213e                VgaText::doUpdate()
 *fill*         0x00000000c001213f        0x1 
 .text          0x00000000c0012140      0x224 krnl/tss.32
                0x00000000c0012140                TSS::TSS()
                0x00000000c0012140                TSS::TSS()
                0x00000000c0012150                TSS::setESP(unsigned long)
                0x00000000c0012164                TSS::flush()
                0x00000000c0012184                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012364      0x4dc krnl/unixfile.32
                0x00000000c0012364                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00123ba                ReservedFilename::isAtty()
                0x00000000c00123d6                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012434                UnixFile::getFileDescriptor()
                0x00000000c001243c                UnixFile::UnixFile(int)
                0x00000000c001243c                UnixFile::UnixFile(int)
                0x00000000c00125f0                ReservedFilename::ReservedFilename(int)
                0x00000000c00125f0                ReservedFilename::ReservedFilename(int)
                0x00000000c0012622                UnixFile::~UnixFile()
                0x00000000c0012622                UnixFile::~UnixFile()
                0x00000000c00126be                UnixFile::~UnixFile()
                0x00000000c00126e6                ReservedFilename::~ReservedFilename()
                0x00000000c00126e6                ReservedFilename::~ReservedFilename()
                0x00000000c001270a                ReservedFilename::~ReservedFilename()
                0x00000000c0012731                KeGetFileFromDescriptor(int)
 .text          0x00000000c0012840     0x14be krnl/virtmgr.32
                0x00000000c0012840                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c001287a                Virt::getPageState(unsigned long)
                0x00000000c001289d                Virt::allocateKernelVirtualPages(int)
                0x00000000c00129b9                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00129dc                Virt::swapIDToSector(unsigned long)
                0x00000000c00129f2                Virt::allocateSwapfilePage()
                0x00000000c0012a71                Virt::virtualMemorySetup()
                0x00000000c0012ac2                Virt::setupPageSwapping(int)
                0x00000000c0012b34                VAS::setCPUSpecific(unsigned long)
                0x00000000c0012b36                VAS::VAS(VAS*)
                0x00000000c0012b36                VAS::VAS(VAS*)
                0x00000000c0012b4e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0012b7c                VAS::getPageTableEntry(unsigned long)
                0x00000000c0012b9b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0012cd8                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0012cfc                VAS::virtualToPhysical(unsigned long)
                0x00000000c0012d16                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0012d58                VAS::VAS()
                0x00000000c0012d58                VAS::VAS()
                0x00000000c0012dc2                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0012de2                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0012e0e                VAS::~VAS()
                0x00000000c0012e0e                VAS::~VAS()
                0x00000000c0012f76                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c001307e                VAS::allocatePages(int, int)
                0x00000000c0013170                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c00131ca                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c00132ba                VAS::VAS(bool)
                0x00000000c00132ba                VAS::VAS(bool)
                0x00000000c00134a2                VAS::evict(unsigned long)
                0x00000000c00135a6                VAS::canLockPage(unsigned long)
                0x00000000c00135c0                VAS::unlockPage(unsigned long)
                0x00000000c00135f4                VAS::canLockPages(unsigned long, int)
                0x00000000c0013630                VAS::unlockPages(unsigned long, int)
                0x00000000c001366c                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c001397c                VAS::lockPage(unsigned long)
                0x00000000c00139ee                VAS::lockPages(unsigned long, int)
                0x00000000c0013a2a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0013a9e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0013aca                VAS::scanForEviction()
                0x00000000c0013c03                mapVASFirstTime
 .text          0x00000000c0013cfe       0x36 sys/eject.32
                0x00000000c0013cfe                SysEject(regs*)
 .text          0x00000000c0013d34       0x18 sys/exit.32
                0x00000000c0013d34                SysExit(regs*)
 .text          0x00000000c0013d4c       0x1f sys/getcwd.32
                0x00000000c0013d4c                SysGetCwd(regs*)
 .text          0x00000000c0013d6b       0x26 sys/getpid.32
                0x00000000c0013d6b                SysGetPID(regs*)
 .text          0x00000000c0013d91       0x21 sys/getramdata.32
                0x00000000c0013d91                SysGetRAMData(regs*)
 .text          0x00000000c0013db2       0x97 sys/getvgaptr.32
                0x00000000c0013db2                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013e49        0x3 
 .text          0x00000000c0013e4c       0xb9 sys/kill.32
                0x00000000c0013e4c                SysKill(regs*)
 .text          0x00000000c0013f05       0xa8 sys/loaddll.32
                0x00000000c0013f05                SysLoadDLL(regs*)
 .text          0x00000000c0013fad       0x68 sys/read.32
                0x00000000c0013fad                SysRead(regs*)
 .text          0x00000000c0014015       0x29 sys/registersignal.32
                0x00000000c0014015                SysRegisterSignal(regs*)
 .text          0x00000000c001403e      0x1cc sys/registry.32
                0x00000000c001403e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014082                SysRegistryReadExtent(regs*)
                0x00000000c00140ca                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00140e1                SysRegistryEnterDirectory(regs*)
                0x00000000c00140f8                SysRegistryGetNext(regs*)
                0x00000000c001410f                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014149                SysRegistryOpen(regs*)
                0x00000000c001415d                SysRegistryClose(regs*)
                0x00000000c0014174                SysRegistryEasyReadString(regs*)
                0x00000000c00141c0                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c001420a       0x55 sys/sbrk.32
                0x00000000c001420a                SysSbrk(regs*)
 .text          0x00000000c001425f       0x1c sys/setcwd.32
                0x00000000c001425f                SysSetCwd(regs*)
 .text          0x00000000c001427b       0xf1 sys/settime.32
                0x00000000c001427b                SysSetTime(regs*)
 .text          0x00000000c001436c       0x73 sys/symlink.32
                0x00000000c001436c                SysSymlink(regs*)
 .text          0x00000000c00143df       0x3f sys/timezone.32
                0x00000000c00143df                SysTimezone(regs*)
 .text          0x00000000c001441e       0xfc sys/truncate.32
                0x00000000c001441e                SysTruncate(regs*)
 .text          0x00000000c001451a       0x68 sys/write.32
                0x00000000c001451a                SysWrite(regs*)
 .text          0x00000000c0014582       0x9d sys/wsbe.32
                0x00000000c0014582                SysWsbe(regs*)
 .text          0x00000000c001461f       0x28 sys/yield.32
                0x00000000c001461f                SysYield(regs*)
 .text          0x00000000c0014647     0x1228 thr/elf.32
                0x00000000c0014647                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00148d2                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014af1                Thr::runtimeReferenceHelper()
                0x00000000c0014b04                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014b53                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014e11                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015552                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015584                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00155bb                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00155d5                Thr::loadDLL(char const*, bool)
                0x00000000c0015836                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c001586f       0x5a thr/exec.32
                0x00000000c001586f                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c00158c9        0x3 
 .text          0x00000000c00158cc     0x11b5 thr/prcssthr.32
                0x00000000c00158cc                userModeEntryPoint(void*)
                0x00000000c00158f8                changeTSS
                0x00000000c0015928                switchToThread(ThreadControlBlock*)
                0x00000000c00159d8                Process::addArgs(char**)
                0x00000000c0015a44                Process::Process(char const*, Process*, char**)
                0x00000000c0015a44                Process::Process(char const*, Process*, char**)
                0x00000000c0015c6c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015c6c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015e58                taskStartupFunction
                0x00000000c0015e64                KeDisablePreemption()
                0x00000000c0015e8c                KeRestorePreemption()
                0x00000000c0015eac                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015fc0                Process::createUserThread()
                0x00000000c0015fe0                setupMultitasking(void (*)())
                0x00000000c0016104                schedule()
                0x00000000c0016198                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00161c4                blockTask(TaskState)
                0x00000000c0016200                waitTask(int, int*, int)
                0x00000000c0016244                milliTenthSleepUntil(unsigned int)
                0x00000000c00162ec                milliTenthSleep(unsigned int)
                0x00000000c0016300                sleep(unsigned int)
                0x00000000c0016310                taskReturned
                0x00000000c0016358                Thr::processFromPID(int)
                0x00000000c0016404                unblockTask(ThreadControlBlock*)
                0x00000000c00164b8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001678c                cleanerTaskFunction(void*)
                0x00000000c00168a4                terminateTask(int)
                0x00000000c00169b4                Thr::terminateFromIRQ(int)
 .text          0x00000000c0016a81      0xd18 vm86/vm8086.32
                0x00000000c0016a81                Vm::inbv(unsigned short)
                0x00000000c0016a94                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016aca                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016ada                Vm::getSegment(unsigned int)
                0x00000000c0016ae2                Vm::getOffset(unsigned int)
                0x00000000c0016ae7                Vm::mainloop2()
                0x00000000c0016b21                Vm::mainVm8086Loop(void*)
                0x00000000c0016b34                Vm::mainloop3(unsigned long)
                0x00000000c0016b5a                Vm::initialise8086()
                0x00000000c0016b9d                Vm::resetConventionalMemory8086()
                0x00000000c0016b9e                Vm::finish8086()
                0x00000000c0016c00                Vm::getOutput8086(unsigned char*)
                0x00000000c0016c25                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016d52                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016f5e                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016ffb                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001700c                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001701e                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001702f                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017044                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001705a                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001706f                Vm::faultHandler(regs*)
 *fill*         0x00000000c0017799        0x1 
 .text          0x00000000c001779a     0x1ee9 arch/i386/hal.32
                0x00000000c001779a                noCopro(unsigned long)
                0x00000000c001779c                CPU::close(int, int, void*)
                0x00000000c001779f                x86ReadCMOS(unsigned char)
                0x00000000c00177f3                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0017855                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0017874                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0017891                AMD_K6_writeback(int, int, int)
                0x00000000c0017951                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00179ef                cpuidCheckEDX(unsigned int)
                0x00000000c0017a1c                cpuidCheckECX(unsigned int)
                0x00000000c0017a4a                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0017a78                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0017aa6                HalDetectFeatures()
                0x00000000c0018871                HalEnableNMI()
                0x00000000c0018884                HalDisableNMI()
                0x00000000c0018897                HalGetNMIState()
                0x00000000c001889d                x86rdmsr(unsigned int)
                0x00000000c00188db                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0018920                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0018936                HalFindRSDP()
                0x00000000c00189cb                HalHandlePageFault(void*, void*)
                0x00000000c0018a78                HalHandleOpcodeFault(void*, void*)
                0x00000000c0018aba                HalDisplayDebugInfo(void*)
                0x00000000c0018e48                HalReceivedNMI()
                0x00000000c0018ee3                HalSystemIdle()
                0x00000000c0018f42                i386SaveCoprocessor(void*)
                0x00000000c0018f56                i386LoadCoprocessor(void*)
                0x00000000c0018f6a                x87EmulHandler(regs*, void*)
                0x00000000c0019007                HalInitialiseCoprocessor()
                0x00000000c001908b                HalPanic(char const*)
                0x00000000c001919f                HalQueryPerformanceCounter()
                0x00000000c00191af                HalInitialise()
                0x00000000c0019341                HalMakeBeep(int)
                0x00000000c001937b                HalGetRand()
                0x00000000c001937e                HalEndOfInterrupt(int)
                0x00000000c00193a9                HalRestart()
                0x00000000c00193aa                HalShutdown()
                0x00000000c00193ab                HalSleep()
                0x00000000c00193ac                CPU::CPU()
                0x00000000c00193ac                CPU::CPU()
                0x00000000c0019430                CPU::setupSMEP()
                0x00000000c001943c                CPU::setupUMIP()
                0x00000000c0019446                CPU::setupTSC()
                0x00000000c0019450                CPU::setupLargePages()
                0x00000000c001945a                CPU::setupPAT()
                0x00000000c001948c                CPU::setupMTRR()
                0x00000000c001948e                CPU::setupGlobalPages()
                0x00000000c0019498                CPU::allowUsermodeDataAccess()
                0x00000000c00194a6                CPU::prohibitUsermodeDataAccess()
                0x00000000c00194b4                CPU::setupSMAP()
                0x00000000c00194c2                CPU::setupFeatures()
                0x00000000c001958e                CPU::open(int, int, void*)
 .text          0x00000000c0019683      0x268 arch/i386/intctrl.32
                0x00000000c0019683                convertLegacyIRQNumber(int)
                0x00000000c00196bf                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0019709                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0019846                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001987a                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c00198eb        0x1 
 .text          0x00000000c00198ec      0x2dc arch/i386/pic.32
                0x00000000c00198ec                picIoWait()
                0x00000000c00198f4                picDisable()
                0x00000000c0019928                picGetIRQReg(int)
                0x00000000c00199a4                picOpen()
                0x00000000c0019b28                picEOI(int)
 .text          0x00000000c0019bc8      0x5ed arch/i386/rtc.32
                0x00000000c0019bc8                RTC::open(int, int, void*)
                0x00000000c0019bcc                RTC::close(int, int, void*)
                0x00000000c0019bd0                RTC::timeInSecondsUTC()
                0x00000000c0019be2                RTC::timeInDatetimeUTC()
                0x00000000c0019c08                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0019c46                RTC::~RTC()
                0x00000000c0019c46                RTC::~RTC()
                0x00000000c0019c6a                RTC::~RTC()
                0x00000000c0019c94                RTC::get_update_in_progress_flag()
                0x00000000c0019ca8                RTC::completeRTCRefresh()
                0x00000000c0019f56                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001a0cc                rtcIRQHandler(regs*, void*)
                0x00000000c001a10c                RTC::RTC()
                0x00000000c001a10c                RTC::RTC()
 *fill*         0x00000000c001a1b5        0x3 
 .text          0x00000000c001a1b8      0x1f4 arch/i386/vga.32
                0x00000000c001a1b8                HalConsoleScroll(int, int)
                0x00000000c001a2c0                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001a324                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001a3ac     0x14f3 fs/fat/vfslink.32
                0x00000000c001a3ac                FAT::getName()
                0x00000000c001a3b4                FAT::tell(void*, unsigned long long*)
                0x00000000c001a3f0                FAT::stat(void*, unsigned long long*)
                0x00000000c001a42c                FAT::~FAT()
                0x00000000c001a42c                FAT::~FAT()
                0x00000000c001a450                FAT::~FAT()
                0x00000000c001a478                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001a51c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001a5fc                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a7e0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001a9fc                FAT::allocateSwapfile(char const*, int)
                0x00000000c001abbc                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001ad2c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001ad8c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001adec                FAT::close(void*)
                0x00000000c001ae40                FAT::closeDir(void*)
                0x00000000c001ae94                FAT::truncate(void*, unsigned long long)
                0x00000000c001af00                FAT::seek(void*, unsigned long long)
                0x00000000c001af58                fatWrapperReadDisk
                0x00000000c001af98                fatWrapperWriteDisk
                0x00000000c001afd8                fatWrapperIoctl
                0x00000000c001b0f8                FAT::FAT()
                0x00000000c001b0f8                FAT::FAT()
                0x00000000c001b150                FAT::fixFilepath(char*)
                0x00000000c001b190                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001b304                FAT::openDir(char const*, void**)
                0x00000000c001b3b4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b4ac                FAT::unlink(char const*)
                0x00000000c001b52c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b6e4                FAT::rename(char const*, char const*)
                0x00000000c001b7b0                FAT::mkdir(char const*)
                0x00000000c001b830                FAT::exists(char const*)
 *fill*         0x00000000c001b89f        0x1 
 .text          0x00000000c001b8a0       0x94 fs/iso9660/helper.32
                0x00000000c001b8a0                isoReadDiscSectorHelper
                0x00000000c001b8fc                iso_kprintf
                0x00000000c001b918                iso_kprintfd
 .text          0x00000000c001b934      0x71a fs/iso9660/vfslink.32
                0x00000000c001b934                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b93a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001b940                ISO9660::getName()
                0x00000000c001b946                ISO9660::closeDir(void*)
                0x00000000c001b950                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b956                ISO9660::unlink(char const*)
                0x00000000c001b95c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001b962                ISO9660::rename(char const*, char const*)
                0x00000000c001b968                ISO9660::mkdir(char const*)
                0x00000000c001b96e                ISO9660::~ISO9660()
                0x00000000c001b96e                ISO9660::~ISO9660()
                0x00000000c001b992                ISO9660::~ISO9660()
                0x00000000c001b9ba                ISO9660::exists(char const*)
                0x00000000c001b9ce                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001bab4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001bafc                ISO9660::seek(void*, unsigned long long)
                0x00000000c001bb3e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001bb7c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001bbce                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001bd10                ISO9660::close(void*)
                0x00000000c001bd40                ISO9660::openDir(char const*, void**)
                0x00000000c001be1a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001bf35                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001bfb4                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001c026                ISO9660::ISO9660()
                0x00000000c001c026                ISO9660::ISO9660()
 .text          0x00000000c001c04e      0x26c hal/sound/sndcard.32
                0x00000000c001c04e                SoundCard::beginPlayback()
                0x00000000c001c05c                SoundCard::stopPlayback()
                0x00000000c001c06a                SoundCard::SoundCard(char const*)
                0x00000000c001c06a                SoundCard::SoundCard(char const*)
                0x00000000c001c108                SoundCard::~SoundCard()
                0x00000000c001c108                SoundCard::~SoundCard()
                0x00000000c001c12c                SoundCard::~SoundCard()
                0x00000000c001c156                SoundCard::configureRates(int, int, int)
                0x00000000c001c186                SoundCard::getSamples16(int, short*)
                0x00000000c001c1e2                SoundCard::getSamples32(int, int*)
                0x00000000c001c268                SoundCard::addChannel(SoundPort*)
                0x00000000c001c2a6                SoundCard::removeChannel(int)
 *fill*         0x00000000c001c2ba        0x2 
 .text          0x00000000c001c2bc      0x42f hal/sound/sndport.32
                0x00000000c001c2bc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c2bc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c348                SoundPort::~SoundPort()
                0x00000000c001c348                SoundPort::~SoundPort()
                0x00000000c001c37c                SoundPort::unpause()
                0x00000000c001c388                SoundPort::pause()
                0x00000000c001c394                SoundPort::getBufferUsed()
                0x00000000c001c39c                SoundPort::getBufferSize()
                0x00000000c001c3a4                SoundPort::buffer8(signed char*, int)
                0x00000000c001c438                SoundPort::buffer16(short*, int)
                0x00000000c001c4cc                SoundPort::buffer32(int*, int)
                0x00000000c001c558                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001c628                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001c6eb        0x0 hw/bus/isa.32
 *fill*         0x00000000c001c6eb        0x1 
 .text          0x00000000c001c6ec      0xc25 hw/bus/pci.32
                0x00000000c001c6ec                PCI::open(int, int, void*)
                0x00000000c001c70a                PCI::close(int, int, void*)
                0x00000000c001c70e                PCI::PCI()
                0x00000000c001c70e                PCI::PCI()
                0x00000000c001c7a6                PCI::readBAR8(unsigned int, int)
                0x00000000c001c7c2                PCI::readBAR16(unsigned int, int)
                0x00000000c001c7e0                PCI::readBAR32(unsigned int, int)
                0x00000000c001c7fc                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001c81c                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001c83e                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001c85e                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c8d4                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c97e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c9a2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001c9ca                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001ca14                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001ca3c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ca60                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001ca84                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001caac                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cb10                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001cbf6                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001cec0                PCI::checkBus(unsigned char)
                0x00000000c001cee4                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001d0ca                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001d246                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001d2b8                PCI::detect()
 *fill*         0x00000000c001d311        0x1 
 .text          0x00000000c001d312      0xe50 hw/diskctrl/ide.32
                0x00000000c001d312                IDE::close(int, int, void*)
                0x00000000c001d316                IDE::IDE()
                0x00000000c001d316                IDE::IDE()
                0x00000000c001d34a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001d35c                selectDrive(unsigned char, unsigned char)
                0x00000000c001d35e                IDE::getBase(unsigned char)
                0x00000000c001d370                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001d430                IDE::read(unsigned char, unsigned char)
                0x00000000c001d4e4                IDE::waitInterrupt(unsigned char)
                0x00000000c001d546                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001d562                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001d57e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001d5c8                IDE::open(int, int, void*)
                0x00000000c001db20                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001dbf0                IDE::detect()
                0x00000000c001e054                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001e10e                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001e162      0x33f hw/diskctrl/satabus.32
                0x00000000c001e162                SATABus::close(int, int, void*)
                0x00000000c001e166                SATABus::detect()
                0x00000000c001e168                SATABus::SATABus()
                0x00000000c001e168                SATABus::SATABus()
                0x00000000c001e1ee                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e220                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e268                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e288                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e2b2                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001e3c4                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001e46e                SATABus::open(int, int, void*)
 *fill*         0x00000000c001e4a1        0x1 
 .text          0x00000000c001e4a2      0x7c1 hw/diskphys/ata.32
                0x00000000c001e4a2                ATA::close(int, int, void*)
                0x00000000c001e4c6                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001e4c8                ATA::ATA()
                0x00000000c001e4c8                ATA::ATA()
                0x00000000c001e4f6                ATA::flush(bool)
                0x00000000c001e544                ATA::readyForCommand()
                0x00000000c001e590                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001e998                ATA::read(unsigned long long, int, void*)
                0x00000000c001e9e4                ATA::write(unsigned long long, int, void*)
                0x00000000c001ea30                ATA::detectCHS()
                0x00000000c001ea5a                ATA::open(int, int, void*)
                0x00000000c001ec45                combineCharAndColour(char, unsigned char)
                0x00000000c001ec56                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001ec63        0x1 
 .text          0x00000000c001ec64      0x612 hw/diskphys/atapi.32
                0x00000000c001ec64                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001ec6a                ATAPI::close(int, int, void*)
                0x00000000c001ec8e                ATAPI::ATAPI()
                0x00000000c001ec8e                ATAPI::ATAPI()
                0x00000000c001ecbc                ATAPI::readyForCommand()
                0x00000000c001ed0e                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001efce                ATAPI::diskRemoved()
                0x00000000c001f008                ATAPI::eject()
                0x00000000c001f050                ATAPI::diskInserted()
                0x00000000c001f05c                ATAPI::detectMedia()
                0x00000000c001f11c                ATAPI::open(int, int, void*)
                0x00000000c001f1fc                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001f276      0x44a hw/diskphys/sata.32
                0x00000000c001f276                SATA::close(int, int, void*)
                0x00000000c001f29a                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001f29c                SATA::open(int, int, void*)
                0x00000000c001f354                SATA::SATA()
                0x00000000c001f354                SATA::SATA()
                0x00000000c001f382                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f608                SATA::read(unsigned long long, int, void*)
                0x00000000c001f654                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001f6c0      0x5d8 hw/diskphys/satapi.32
                0x00000000c001f6c0                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001f6c6                SATAPI::close(int, int, void*)
                0x00000000c001f6ea                SATAPI::SATAPI()
                0x00000000c001f6ea                SATAPI::SATAPI()
                0x00000000c001f718                SATAPI::diskRemoved()
                0x00000000c001f71a                SATAPI::diskInserted()
                0x00000000c001f736                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001fa1c                SATAPI::eject()
                0x00000000c001fa58                SATAPI::detectMedia()
                0x00000000c001faae                SATAPI::open(int, int, void*)
                0x00000000c001fbae                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001fc98      0x443 hw/intctrl/apic.32
                0x00000000c001fc98                IOAPIC::close(int, int, void*)
                0x00000000c001fc9e                apicGetBase()
                0x00000000c001fcbc                IOAPIC::IOAPIC()
                0x00000000c001fcbc                IOAPIC::IOAPIC()
                0x00000000c001fce4                apicOpen()
                0x00000000c001fe70                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001fea2                IOAPIC::read(int)
                0x00000000c001feca                IOAPIC::open(int, int, void*)
                0x00000000c001ffb0                IOAPIC::write(int, int)
                0x00000000c001ffdc                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c00200db        0x1 
 .text          0x00000000c00200dc       0xf0 hw/timer/apictimer.32
                0x00000000c00200dc                APICTimer::close(int, int, void*)
                0x00000000c00200e4                apicTimerHandler(regs*, void*)
                0x00000000c002010c                APICTimer::open(int, int, void*)
                0x00000000c002017c                APICTimer::write(int)
                0x00000000c00201a4                APICTimer::APICTimer()
                0x00000000c00201a4                APICTimer::APICTimer()
 .text          0x00000000c00201cc      0x1ad hw/timer/pit.32
                0x00000000c00201cc                PIT::write(int)
                0x00000000c0020250                pitHandler(regs*, void*)
                0x00000000c0020278                PIT::open(int, int, void*)
                0x00000000c00202c8                PIT::close(int, int, void*)
                0x00000000c00202f8                PIT::PIT()
                0x00000000c00202f8                PIT::PIT()
 *fill*         0x00000000c0020379        0x7 
 .text          0x00000000c0020380       0x6f arch/i386/avx.32
                0x00000000c0020380                avxDetect
                0x00000000c00203aa                avxSave
                0x00000000c00203bb                avxLoad
                0x00000000c00203cc                avxInit
                0x00000000c00203ee                avxClose
 *fill*         0x00000000c00203ef        0x1 
 .text          0x00000000c00203f0      0x2ec arch/i386/interrupt.32
                0x00000000c00203f0                isr0
                0x00000000c0020400                isr1
                0x00000000c002040a                isr2
                0x00000000c0020414                isr3
                0x00000000c002041e                isr4
                0x00000000c0020428                isr5
                0x00000000c0020432                isr6
                0x00000000c002043c                isr7
                0x00000000c0020446                isr8
                0x00000000c002044e                isr9
                0x00000000c0020458                isr10
                0x00000000c0020460                isr11
                0x00000000c0020468                isr12
                0x00000000c0020470                isr13
                0x00000000c002048a                isr14
                0x00000000c0020492                isr15
                0x00000000c002049c                isr16
                0x00000000c00204a6                isr17
                0x00000000c00204b0                isr18
                0x00000000c00204ba                irq3
                0x00000000c00204c4                irq4
                0x00000000c00204ce                irq5
                0x00000000c00204d8                irq6
                0x00000000c00204e2                irq7
                0x00000000c00204ec                irq8
                0x00000000c00204f6                irq9
                0x00000000c0020500                irq10
                0x00000000c002050a                irq11
                0x00000000c0020514                irq12
                0x00000000c002051e                irq13
                0x00000000c0020528                irq14
                0x00000000c0020532                irq15
                0x00000000c002053c                irq1
                0x00000000c0020543                irq2
                0x00000000c002054a                isr96
                0x00000000c0020551                irq0
                0x00000000c0020556                int_common_stub
                0x00000000c0020588                syscall_common_stub
                0x00000000c002068c                irq16
                0x00000000c0020696                irq17
                0x00000000c00206a0                irq18
                0x00000000c00206aa                irq19
                0x00000000c00206b4                irq20
                0x00000000c00206be                irq21
                0x00000000c00206c8                irq22
                0x00000000c00206d2                irq23
 *fill*         0x00000000c00206dc        0x4 
 .text          0x00000000c00206e0       0x10 arch/i386/rdrand.32
                0x00000000c00206e0                i386GetRDRAND
 .text          0x00000000c00206f0       0x39 arch/i386/sse.32
                0x00000000c00206f0                sseDetect
                0x00000000c0020708                sseSave
                0x00000000c0020710                sseLoad
                0x00000000c0020718                sseInit
                0x00000000c0020728                sseClose
 *fill*         0x00000000c0020729        0x7 
 .text          0x00000000c0020730       0x4f arch/i386/x87.32
                0x00000000c0020736                x87Detect
                0x00000000c0020757                x87Save
                0x00000000c002075e                x87Load
                0x00000000c0020765                x87Init
                0x00000000c002077e                x87Close
 *fill*         0x00000000c002077f        0x1 
 .text          0x00000000c0020780       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00207a5        0x0 crtn.32
 *fill*         0x00000000c00207a5        0x3 
 .text          0x00000000c00207a8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00207a8                __divdi3
 *fill*         0x00000000c00208f3        0x1 
 .text          0x00000000c00208f4      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c00208f4                __moddi3
 *fill*         0x00000000c0020a72        0x2 
 .text          0x00000000c0020a74       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0020a74                __udivdi3
 *fill*         0x00000000c0020b73        0x1 
 .text          0x00000000c0020b74      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0020b74                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0020c90        0x0
 .iplt          0x00000000c0020c90        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0020c8e        0xf
 .init          0x00000000c0020c8e        0x3 crti.32
                0x00000000c0020c8e                _init
 .init          0x00000000c0020c91        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0020c96        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0020c9b        0x2 crtn.32

.fini           0x00000000c0020c9d        0xa
 .fini          0x00000000c0020c9d        0x3 crti.32
                0x00000000c0020c9d                _fini
 .fini          0x00000000c0020ca0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0020ca5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020ca8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020ca8       0x1a hal/device.32
                0x00000000c0020ca8                DriverlessDevice::~DriverlessDevice()
                0x00000000c0020ca8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020cc2       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020cc2       0x2a hal/device.32
                0x00000000c0020cc2                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0020cec       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0020cec       0xdc hal/device.32
                0x00000000c0020cec                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020dc8       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020dc8       0x42 hal/device.32
                0x00000000c0020dc8                LinkedList<Device>::LinkedList()
                0x00000000c0020dc8                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0020e0c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0020e0c       0x1c hal/timer.32
                0x00000000c0020e0c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020e28        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020e28        0x7 hal/timer.32
                0x00000000c0020e28                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020e30       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020e30       0xbc hal/timer.32
                0x00000000c0020e30                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0020eec       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0020eec       0xda hal/timer.32
                0x00000000c0020eec                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0020fc8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0020fc8       0x23 hw/acpi.32
                0x00000000c0020fc8                ACPI::~ACPI()
                0x00000000c0020fc8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0020fec       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0020fec       0x2a hw/acpi.32
                0x00000000c0020fec                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021018        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021018        0x2 hw/acpi.32
                0x00000000c0021018                LinkedList<Device>::~LinkedList()
                0x00000000c0021018                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002101c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002101c       0x1c hw/acpi.32
                0x00000000c002101c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021038        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021038        0x7 hw/acpi.32
                0x00000000c0021038                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021040       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021040       0xb8 hw/acpi.32
                0x00000000c0021040                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c00210f8       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c00210f8       0x23 krnl/computer.32
                0x00000000c00210f8                Computer::~Computer()
                0x00000000c00210f8                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002111c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002111c       0x2a krnl/computer.32
                0x00000000c002111c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021146       0x24
 .text._Z10idleCommonv
                0x00000000c0021146       0x24 krnl/idle.32
                0x00000000c0021146                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002116a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002116a        0x2 krnl/unixfile.32
                0x00000000c002116a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c002116a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002116c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002116c       0x42 krnl/unixfile.32
                0x00000000c002116c                LinkedList<UnixFile>::LinkedList()
                0x00000000c002116c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00211ae       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00211ae       0xd3 krnl/unixfile.32
                0x00000000c00211ae                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0021282        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0021282        0x7 krnl/unixfile.32
                0x00000000c0021282                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002128a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002128a       0xa1 krnl/unixfile.32
                0x00000000c002128a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002132c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002132c        0x8 krnl/unixfile.32
                0x00000000c002132c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021334        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021334        0x8 sys/kill.32
                0x00000000c0021334                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002133c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002133c        0x2 thr/prcssthr.32
                0x00000000c002133c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002133c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021340       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021340       0x49 thr/prcssthr.32
                0x00000000c0021340                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0021340                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002138c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002138c       0x42 thr/prcssthr.32
                0x00000000c002138c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c002138c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c00213ce       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00213ce       0x23 arch/i386/hal.32
                0x00000000c00213ce                CPU::~CPU()
                0x00000000c00213ce                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00213f2       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00213f2       0x2a arch/i386/hal.32
                0x00000000c00213f2                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002141c       0x23
 .text._ZN3PCID2Ev
                0x00000000c002141c       0x23 hw/bus/pci.32
                0x00000000c002141c                PCI::~PCI()
                0x00000000c002141c                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0021440       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0021440       0x2a hw/bus/pci.32
                0x00000000c0021440                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c002146a       0x23
 .text._ZN3IDED2Ev
                0x00000000c002146a       0x23 hw/diskctrl/ide.32
                0x00000000c002146a                IDE::~IDE()
                0x00000000c002146a                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002148e       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002148e       0x2a hw/diskctrl/ide.32
                0x00000000c002148e                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c00214b8       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c00214b8       0x23 hw/diskctrl/satabus.32
                0x00000000c00214b8                SATABus::~SATABus()
                0x00000000c00214b8                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c00214dc       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c00214dc       0x2a hw/diskctrl/satabus.32
                0x00000000c00214dc                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0021506       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0021506       0x23 hw/diskphys/ata.32
                0x00000000c0021506                ATA::~ATA()
                0x00000000c0021506                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c002152a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c002152a       0x2a hw/diskphys/ata.32
                0x00000000c002152a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0021554       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0021554       0x23 hw/diskphys/atapi.32
                0x00000000c0021554                ATAPI::~ATAPI()
                0x00000000c0021554                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0021578       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0021578       0x2a hw/diskphys/atapi.32
                0x00000000c0021578                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00215a2       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00215a2       0x23 hw/diskphys/sata.32
                0x00000000c00215a2                SATA::~SATA()
                0x00000000c00215a2                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c00215c6       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c00215c6       0x2a hw/diskphys/sata.32
                0x00000000c00215c6                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00215f0       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00215f0       0x23 hw/diskphys/satapi.32
                0x00000000c00215f0                SATAPI::~SATAPI()
                0x00000000c00215f0                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0021614       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0021614       0x2a hw/diskphys/satapi.32
                0x00000000c0021614                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c002163e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002163e       0x23 hw/intctrl/apic.32
                0x00000000c002163e                IOAPIC::~IOAPIC()
                0x00000000c002163e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0021662       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0021662       0x2a hw/intctrl/apic.32
                0x00000000c0021662                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c002168c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c002168c       0x23 hw/timer/apictimer.32
                0x00000000c002168c                APICTimer::~APICTimer()
                0x00000000c002168c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00216b0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00216b0       0x2a hw/timer/apictimer.32
                0x00000000c00216b0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00216dc       0x23
 .text._ZN3PITD2Ev
                0x00000000c00216dc       0x23 hw/timer/pit.32
                0x00000000c00216dc                PIT::~PIT()
                0x00000000c00216dc                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0021700       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0021700       0x2a hw/timer/pit.32
                0x00000000c0021700                PIT::~PIT()

.rodata         0x00000000c002172a     0x398a
                0x00000000c002172a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002172a        0x2 
 .ctors         0x00000000c002172c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0021730        0x4 krnl/unixfile.32
 .ctors         0x00000000c0021734        0x4 thr/prcssthr.32
 .ctors         0x00000000c0021738        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002173c                end_ctors = .
                0x00000000c002173c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c002173c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0021740        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0021740                __DTOR_END__
                0x00000000c0021744                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0021744       0x1c 
 .rodata        0x00000000c0021760      0x101 acpica/utclib.32
                0x00000000c0021760                AcpiGbl_Ctypes
 *fill*         0x00000000c0021861        0x3 
 .rodata        0x00000000c0021864       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c002187c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c00218c6       0x1a 
 .rodata        0x00000000c00218e0       0xed fs/fat/ff.32
 *fill*         0x00000000c00219cd       0x13 
 .rodata        0x00000000c00219e0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0021de0       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c0021e4f        0x1 
 .rodata        0x00000000c0021e50      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021fa0      0x169 dbg/usban.32
 *fill*         0x00000000c0022109        0x3 
 .rodata.str1.4
                0x00000000c002210c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0022243      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c0022366       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c00223bf        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c00223c0       0x6c fs/vfs.32
                0x00000000c00223c0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002242c       0x1c fs/vfs.32
                0x00000000c002242c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0022448       0x1c fs/vfs.32
                0x00000000c0022448                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0022464       0x2c hal/bus.32
                0x00000000c0022464                vtable for Bus
 .rodata.str1.1
                0x00000000c0022490       0x80 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0022510       0x3c hal/clock.32
                0x00000000c0022510                vtable for Clock
 *fill*         0x00000000c002254c       0x14 
 .rodata        0x00000000c0022560       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0022590       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00225f4       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0022616       0x15 hal/device.32
 *fill*         0x00000000c002262b        0x1 
 .rodata._ZTV6Device
                0x00000000c002262c       0x2c hal/device.32
                0x00000000c002262c                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0022658       0x2c hal/device.32
                0x00000000c0022658                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0022684       0x2c hal/diskctrl.32
                0x00000000c0022684                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00226b0       0x38 hal/diskphys.32
                0x00000000c00226b0                vtable for PhysicalDisk
 .rodata        0x00000000c00226e8       0x53 hal/keybrd.32
 *fill*         0x00000000c002273b        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c002273c       0x34 hal/keybrd.32
                0x00000000c002273c                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0022770       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00227b4       0x2c hal/logidisk.32
                0x00000000c00227b4                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00227e0       0x2c hal/mouse.32
                0x00000000c00227e0                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c002280c       0x34 hal/nic.32
                0x00000000c002280c                vtable for NIC
 .rodata.str1.1
                0x00000000c0022840        0xb hal/partition.32
 *fill*         0x00000000c002284b        0x1 
 .rodata._ZTV6Serial
                0x00000000c002284c       0x44 hal/serial.32
                0x00000000c002284c                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022890       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00228db        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00228e3       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00228e3       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c00228e3       0x1e hal/timer.32
 *fill*         0x00000000c0022901        0x3 
 .rodata._ZTV5Timer
                0x00000000c0022904       0x30 hal/timer.32
                0x00000000c0022904                vtable for Timer
 .rodata.str1.1
                0x00000000c0022934       0x3e hal/vcache.32
 *fill*         0x00000000c0022972        0x2 
 .rodata._ZTV6VCache
                0x00000000c0022974       0x10 hal/vcache.32
                0x00000000c0022974                vtable for VCache
 .rodata.str1.1
                0x00000000c0022984       0xba hal/video.32
 *fill*         0x00000000c0022a3e        0x2 
 .rodata._ZTV5Video
                0x00000000c0022a40       0x4c hal/video.32
                0x00000000c0022a40                vtable for Video
 .rodata.str1.1
                0x00000000c0022a8c      0x17e hw/acpi.32
 *fill*         0x00000000c0022c0a        0x2 
 .rodata.str1.4
                0x00000000c0022c0c       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0022c83       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0022c83        0x8 hw/acpi.32
 *fill*         0x00000000c0022c83        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0022c84       0x2c hw/acpi.32
                0x00000000c0022c84                vtable for ACPI
 .rodata.str1.1
                0x00000000c0022cb0       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0022cc3       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022d03       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0022d24       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0022d57        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0022d5a       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.4
                0x00000000c0022dd0       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c0022e88       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0022f31        0x3 
 .rodata._ZTV8Computer
                0x00000000c0022f34       0x2c krnl/computer.32
                0x00000000c0022f34                vtable for Computer
 .rodata.str1.1
                0x00000000c0022f60       0x3c krnl/env.32
 .rodata        0x00000000c0022f9c       0x76 krnl/fault.32
 .rodata.str1.1
                0x00000000c0023012        0x4 krnl/intlformat.32
 *fill*         0x00000000c0023016        0x2 
 .rodata.str1.4
                0x00000000c0023018       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023048        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023057       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c00230b8      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00231bd       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0023215       0x39 krnl/pipe.32
 *fill*         0x00000000c002324e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0023250       0x1c krnl/pipe.32
                0x00000000c0023250                vtable for Pipe
 .rodata.str1.1
                0x00000000c002326c       0x91 krnl/resolve.32
 *fill*         0x00000000c00232fd        0x3 
 .rodata.str1.4
                0x00000000c0023300       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c002331f       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c00233e8       0x5a krnl/syscalls.32
                                         0x64 (size before relaxing)
 *fill*         0x00000000c0023442        0x2 
 .rodata        0x00000000c0023444        0xd krnl/syscalls.32
 .rodata.str1.1
                0x00000000c0023451       0x5e krnl/terminal.32
 *fill*         0x00000000c00234af        0x1 
 .rodata._ZTV7VgaText
                0x00000000c00234b0       0x1c krnl/terminal.32
                0x00000000c00234b0                vtable for VgaText
 .rodata        0x00000000c00234cc       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0023507       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0023507       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0023507       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0023507        0x8 krnl/unixfile.32
 *fill*         0x00000000c0023507        0x1 
 .rodata.str1.4
                0x00000000c0023508       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0023528       0x22 krnl/unixfile.32
 *fill*         0x00000000c002354a        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c002354c       0x1c krnl/unixfile.32
                0x00000000c002354c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0023568       0x1c krnl/unixfile.32
                0x00000000c0023568                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0023584      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0023b07      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0023c68        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0023c77        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0023c81       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0023ca2       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0023ce6       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0023d3a       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0023d66      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023f70       0x57 thr/prcssthr.32
 *fill*         0x00000000c0023fc7        0x1 
 .rodata.str1.4
                0x00000000c0023fc8       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00240c0       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00240c0       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00240c0       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00240c0        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00240c0       0xdd vm86/vm8086.32
 *fill*         0x00000000c002419d        0x3 
 .rodata        0x00000000c00241a0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00241d0      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c002451b        0x1 
 .rodata.str1.4
                0x00000000c002451c       0x57 arch/i386/hal.32
 *fill*         0x00000000c0024573        0x1 
 .rodata._ZTV3CPU
                0x00000000c0024574       0x2c arch/i386/hal.32
                0x00000000c0024574                vtable for CPU
 .rodata.str1.4
                0x00000000c00245a0       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0024601       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c002463f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0024654       0x3c arch/i386/rtc.32
                0x00000000c0024654                vtable for RTC
 .rodata.str1.1
                0x00000000c0024690       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00246d1        0x3 
 .rodata._ZTV3FAT
                0x00000000c00246d4       0x6c fs/fat/vfslink.32
                0x00000000c00246d4                vtable for FAT
 .rodata.str1.1
                0x00000000c0024740       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0024740      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0024878       0x6c fs/iso9660/vfslink.32
                0x00000000c0024878                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00248e4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0024928       0x34 hal/sound/sndcard.32
                0x00000000c0024928                vtable for SoundCard
 .rodata.str1.4
                0x00000000c002495c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002499b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00249d3       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0024a74       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0024ad8       0x2c hw/bus/pci.32
                0x00000000c0024ad8                vtable for PCI
 .rodata.str1.1
                0x00000000c0024b04      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0024c28       0x2c hw/diskctrl/ide.32
                0x00000000c0024c28                vtable for IDE
 .rodata.str1.4
                0x00000000c0024c54       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0024c78       0x2c hw/diskctrl/satabus.32
                0x00000000c0024c78                vtable for SATABus
 .rodata.str1.1
                0x00000000c0024ca4       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0024d5f        0x1 
 .rodata._ZTV3ATA
                0x00000000c0024d60       0x38 hw/diskphys/ata.32
                0x00000000c0024d60                vtable for ATA
 .rodata.str1.1
                0x00000000c0024d98        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0024da5        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0024da8       0x38 hw/diskphys/atapi.32
                0x00000000c0024da8                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0024de0       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0024e68       0x38 hw/diskphys/sata.32
                0x00000000c0024e68                vtable for SATA
 .rodata.str1.1
                0x00000000c0024ea0       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0024f8a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0024f8c       0x38 hw/diskphys/satapi.32
                0x00000000c0024f8c                vtable for SATAPI
 .rodata        0x00000000c0024fc4       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c0024fea        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c0024fec       0x2c hw/intctrl/apic.32
                0x00000000c0024fec                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0025018       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0025033        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0025034       0x30 hw/timer/apictimer.32
                0x00000000c0025034                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0025064       0x1d hw/timer/pit.32
 *fill*         0x00000000c0025081        0x3 
 .rodata._ZTV3PIT
                0x00000000c0025084       0x30 hw/timer/pit.32
                0x00000000c0025084                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00250b4      0xa51
 *(.data)
 .data          0x00000000c00250b4        0x0 crti.32
 .data          0x00000000c00250b4        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00250b4                __dso_handle
 .data          0x00000000c00250b8        0x0 acpica/utclib.32
 .data          0x00000000c00250b8        0x0 krnl/malloc.32
 .data          0x00000000c00250b8        0x0 libk/ctype.32
 .data          0x00000000c00250b8        0x0 libk/string.32
 .data          0x00000000c00250b8        0x0 arch/i386/cc.32
 .data          0x00000000c00250b8        0x0 fs/fat/diskio.32
 .data          0x00000000c00250b8        0x0 fs/fat/ff.32
 .data          0x00000000c00250b8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00250b8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00250b8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00250b8        0x0 dbg/kconsole.32
 *fill*         0x00000000c00250b8        0x8 
 .data          0x00000000c00250c0       0x28 dbg/usban.32
                0x00000000c00250c0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00250e8        0x0 fs/symlink.32
 .data          0x00000000c00250e8        0x0 fs/vfs.32
 .data          0x00000000c00250e8        0x0 hal/bus.32
 .data          0x00000000c00250e8        0x0 hal/buzzer.32
 .data          0x00000000c00250e8        0x0 hal/clock.32
 .data          0x00000000c00250e8        0x0 hal/device.32
 .data          0x00000000c00250e8        0x0 hal/diskctrl.32
 .data          0x00000000c00250e8        0x0 hal/diskphys.32
 .data          0x00000000c00250e8        0x0 hal/fpu.32
 .data          0x00000000c00250e8        0x0 hal/intctrl.32
 .data          0x00000000c00250e8        0x0 hal/keybrd.32
 .data          0x00000000c00250e8        0x0 hal/logidisk.32
 .data          0x00000000c00250e8        0x0 hal/mouse.32
 .data          0x00000000c00250e8        0x0 hal/nic.32
 .data          0x00000000c00250e8        0x0 hal/partition.32
 .data          0x00000000c00250e8        0x0 hal/serial.32
 .data          0x00000000c00250e8        0x0 hal/timer.32
 .data          0x00000000c00250e8        0x0 hal/vcache.32
 .data          0x00000000c00250e8        0x0 hal/video.32
 .data          0x00000000c00250e8       0x10 hw/acpi.32
                0x00000000c00250e8                legacyIRQRemaps
 .data          0x00000000c00250f8        0x0 krnl/assert.32
 .data          0x00000000c00250f8        0x0 krnl/atexit.32
 .data          0x00000000c00250f8        0x0 krnl/bootmsg.32
 .data          0x00000000c00250f8        0x4 krnl/c++.32
                0x00000000c00250f8                __stack_chk_guard
 .data          0x00000000c00250fc        0x0 krnl/cdefs.32
 *fill*         0x00000000c00250fc        0x4 
 .data          0x00000000c0025100      0x100 krnl/cm.32
                0x00000000c0025100                CmComponents
 .data          0x00000000c0025200        0x0 krnl/compat.32
 .data          0x00000000c0025200        0x0 krnl/computer.32
 .data          0x00000000c0025200      0x400 krnl/crc32.32
                0x00000000c0025200                KiPolyLookupCRC32
 .data          0x00000000c0025600       0x4d krnl/env.32
                0x00000000c0025600                defaultSysEnv
 .data          0x00000000c002564d        0x0 krnl/fault.32
 .data          0x00000000c002564d        0x0 krnl/gdt.32
 .data          0x00000000c002564d        0x0 krnl/idle.32
 .data          0x00000000c002564d        0x0 krnl/idt.32
 .data          0x00000000c002564d        0x0 krnl/inlines.32
 .data          0x00000000c002564d        0x0 krnl/intlformat.32
 .data          0x00000000c002564d        0x0 krnl/intops.32
 *fill*         0x00000000c002564d        0x3 
 .data          0x00000000c0025650        0x4 krnl/kheap.32
 .data          0x00000000c0025654        0x0 krnl/mailbox.32
 .data          0x00000000c0025654        0x0 krnl/main.32
 .data          0x00000000c0025654        0x0 krnl/mutex.32
 .data          0x00000000c0025654        0x0 krnl/panic.32
 .data          0x00000000c0025654        0x4 krnl/physmgr.32
                0x00000000c0025654                Phys::bitmap
 .data          0x00000000c0025658        0x0 krnl/pipe.32
 .data          0x00000000c0025658        0x0 krnl/powctrl.32
 .data          0x00000000c0025658        0x0 krnl/random.32
 .data          0x00000000c0025658        0x0 krnl/resolve.32
 .data          0x00000000c0025658        0x0 krnl/semaphore.32
 *fill*         0x00000000c0025658        0x8 
 .data          0x00000000c0025660       0x4c krnl/signal.32
                0x00000000c0025660                KiDefaultSignalHandlers
 *fill*         0x00000000c00256ac       0x14 
 .data          0x00000000c00256c0      0x104 krnl/syscalls.32
                0x00000000c00256c0                systemCallHandlers
 *fill*         0x00000000c00257c4       0x1c 
 .data          0x00000000c00257e0       0x60 krnl/terminal.32
                0x00000000c00257e0                VgaText::hiddenOut
                0x00000000c0025800                ansiToVGAMappings
 .data          0x00000000c0025840        0x0 krnl/tss.32
 .data          0x00000000c0025840        0x4 krnl/unixfile.32
                0x00000000c0025840                UnixFile::nextFd
 .data          0x00000000c0025844       0x15 krnl/virtmgr.32
                0x00000000c0025844                Virt::pageAllocPtr
                0x00000000c0025848                Virt::bitmap
                0x00000000c002584c                Virt::swapfileSectorsPerPage
                0x00000000c0025850                Virt::swapfileLength
                0x00000000c0025854                Virt::swapfileSector
                0x00000000c0025858                Virt::swapfileDrive
 .data          0x00000000c0025859        0x0 sys/eject.32
 .data          0x00000000c0025859        0x0 sys/exit.32
 .data          0x00000000c0025859        0x0 sys/getcwd.32
 .data          0x00000000c0025859        0x0 sys/getpid.32
 .data          0x00000000c0025859        0x0 sys/getramdata.32
 .data          0x00000000c0025859        0x0 sys/getvgaptr.32
 .data          0x00000000c0025859        0x0 sys/kill.32
 .data          0x00000000c0025859        0x0 sys/loaddll.32
 .data          0x00000000c0025859        0x0 sys/read.32
 .data          0x00000000c0025859        0x0 sys/registersignal.32
 .data          0x00000000c0025859        0x0 sys/registry.32
 .data          0x00000000c0025859        0x0 sys/sbrk.32
 .data          0x00000000c0025859        0x0 sys/setcwd.32
 .data          0x00000000c0025859        0x0 sys/settime.32
 .data          0x00000000c0025859        0x0 sys/symlink.32
 .data          0x00000000c0025859        0x0 sys/timezone.32
 .data          0x00000000c0025859        0x0 sys/truncate.32
 .data          0x00000000c0025859        0x0 sys/write.32
 .data          0x00000000c0025859        0x0 sys/wsbe.32
 .data          0x00000000c0025859        0x0 sys/yield.32
 .data          0x00000000c0025859        0x0 thr/elf.32
 .data          0x00000000c0025859        0x0 thr/exec.32
 *fill*         0x00000000c0025859        0x3 
 .data          0x00000000c002585c        0x4 thr/prcssthr.32
                0x00000000c002585c                Thr::nextPID
 .data          0x00000000c0025860        0x0 vm86/vm8086.32
 .data          0x00000000c0025860      0x2a4 arch/i386/hal.32
                0x00000000c0025860                exceptionNames
                0x00000000c0025b00                lastCode
 .data          0x00000000c0025b04        0x0 arch/i386/intctrl.32
 .data          0x00000000c0025b04        0x0 arch/i386/pic.32
 .data          0x00000000c0025b04        0x0 arch/i386/rtc.32
 .data          0x00000000c0025b04        0x0 arch/i386/vga.32
 .data          0x00000000c0025b04        0x0 fs/fat/vfslink.32
 .data          0x00000000c0025b04        0x0 fs/iso9660/helper.32
 .data          0x00000000c0025b04        0x1 fs/iso9660/vfslink.32
                0x00000000c0025b04                recentDriveletter
 .data          0x00000000c0025b05        0x0 hal/sound/sndcard.32
 .data          0x00000000c0025b05        0x0 hal/sound/sndport.32
 .data          0x00000000c0025b05        0x0 hw/bus/isa.32
 .data          0x00000000c0025b05        0x0 hw/bus/pci.32
 .data          0x00000000c0025b05        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0025b05        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0025b05        0x0 hw/diskphys/ata.32
 .data          0x00000000c0025b05        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0025b05        0x0 hw/diskphys/sata.32
 .data          0x00000000c0025b05        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0025b05        0x0 hw/intctrl/apic.32
 .data          0x00000000c0025b05        0x0 hw/timer/apictimer.32
 .data          0x00000000c0025b05        0x0 hw/timer/pit.32
 .data          0x00000000c0025b05        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0025b05        0x0 crtn.32
 .data          0x00000000c0025b05        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0025b05        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0025b05        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0025b05        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0025b08        0x0
 .got           0x00000000c0025b08        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0025b08        0x0
 .got.plt       0x00000000c0025b08        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0025b08        0x0
 .igot.plt      0x00000000c0025b08        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0025b08        0x0
 .tm_clone_table
                0x00000000c0025b08        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0025b08        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0025b05      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0025b05        0x3 
 .eh_frame      0x00000000c0025b08        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0025b08        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0025b08       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0025b60       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0025ba0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0025c0c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0026000       0x7d
 *(userkernel)
 userkernel     0x00000000c0026000       0x52 krnl/signal.32
                0x00000000c0026000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002602c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0026052       0x2b krnl/syscalls.32
                0x00000000c0026052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0027000        0x1
 *(align_previous)
 align_previous
                0x00000000c0027000        0x1 krnl/signal.32
                0x00000000c0027000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0027004        0x0
 .rel.got       0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0027001     0x7147
                0x00000000c0027001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0027001       0x1f 
 COMMON         0x00000000c0027020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0027020                dcache
                0x00000000c0027060                cdDriveLetter
                0x00000000c0027080                icache
 *(.bss)
 .bss           0x00000000c00270c0        0x0 crti.32
 .bss           0x00000000c00270c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00270e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00270e4       0x1c 
 .bss           0x00000000c0027100      0x378 krnl/malloc.32
 .bss           0x00000000c0027478        0x0 libk/ctype.32
 .bss           0x00000000c0027478        0x0 libk/string.32
 .bss           0x00000000c0027478        0x0 arch/i386/cc.32
 .bss           0x00000000c0027478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0027478        0x8 
 .bss           0x00000000c0027480       0x88 fs/fat/ff.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0027508       0x18 
 .bss           0x00000000c0027520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0027eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0027eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0027eb8        0x8 
 .bss           0x00000000c0027ec0     0x2444 fs/symlink.32
                0x00000000c0027ec0                kiNumWaitingRoomSymlinks
                0x00000000c0027ee0                kiNewlyCreatedIDs
                0x00000000c0027f00                kiNewlyCreatedSymlinks
                0x00000000c0028300                kiSymlinkHashTable
                0x00000000c002a300                kiBaseSymlinkID
 .bss           0x00000000c002a304        0x4 fs/vfs.32
                0x00000000c002a304                installedFilesystems
 .bss           0x00000000c002a308        0x0 hal/bus.32
 .bss           0x00000000c002a308        0x0 hal/buzzer.32
 .bss           0x00000000c002a308        0x8 hal/clock.32
                0x00000000c002a308                keDstOn
                0x00000000c002a309                keTimezoneHalfHourOffset
                0x00000000c002a30c                keTimezoneHourOffset
 .bss           0x00000000c002a310        0x0 hal/device.32
 .bss           0x00000000c002a310        0x0 hal/diskctrl.32
 .bss           0x00000000c002a310        0x0 hal/diskphys.32
 .bss           0x00000000c002a310        0x0 hal/fpu.32
 .bss           0x00000000c002a310        0x0 hal/intctrl.32
 *fill*         0x00000000c002a310       0x10 
 .bss           0x00000000c002a320      0x428 hal/keybrd.32
                0x00000000c002a320                keyboardWaitingTaskList
                0x00000000c002a324                keyboardSetupYet
                0x00000000c002a328                guiKeyboardHandler
                0x00000000c002a340                keystates
 *fill*         0x00000000c002a748       0x18 
 .bss           0x00000000c002a760       0x88 hal/logidisk.32
                0x00000000c002a760                diskAssignments
                0x00000000c002a780                disks
 .bss           0x00000000c002a7e8        0x4 hal/mouse.32
                0x00000000c002a7e8                guiMouseHandler
 .bss           0x00000000c002a7ec        0x0 hal/nic.32
 .bss           0x00000000c002a7ec        0x0 hal/partition.32
 .bss           0x00000000c002a7ec        0x0 hal/serial.32
 .bss           0x00000000c002a7ec        0x4 hal/timer.32
                0x00000000c002a7ec                milliTenthsSinceBoot
 .bss           0x00000000c002a7f0        0x0 hal/vcache.32
 .bss           0x00000000c002a7f0        0x4 hal/video.32
                0x00000000c002a7f0                screen
 *fill*         0x00000000c002a7f4        0xc 
 .bss           0x00000000c002a800      0x480 hw/acpi.32
                0x00000000c002a800                nextACPITable
                0x00000000c002a820                acpiTables
                0x00000000c002aa20                usingXSDT
                0x00000000c002aa24                RSDTpointer
                0x00000000c002aa28                RSDPpointer
                0x00000000c002aa2c                nextAPICNMI
                0x00000000c002aa40                apicNMIInfo
                0x00000000c002aac0                legacyIRQFlags
                0x00000000c002aae0                ioapicDiscoveryNumber
                0x00000000c002ab00                ioapicFoundInMADT
                0x00000000c002ab20                ioapicAddresses
                0x00000000c002aba0                ioapicGSIBase
                0x00000000c002ac20                processorDiscoveryNumber
                0x00000000c002ac40                matchingAPICID
                0x00000000c002ac60                processorID
 .bss           0x00000000c002ac80        0x0 krnl/assert.32
 .bss           0x00000000c002ac80       0xe0 krnl/atexit.32
                0x00000000c002ac80                KiNextAtexitHandler
                0x00000000c002aca0                KiAtexitContexts
                0x00000000c002ad00                KiAtexitHandlers
 .bss           0x00000000c002ad60        0x0 krnl/bootmsg.32
 .bss           0x00000000c002ad60        0x0 krnl/c++.32
 .bss           0x00000000c002ad60        0x0 krnl/cdefs.32
 .bss           0x00000000c002ad60        0x4 krnl/cm.32
 .bss           0x00000000c002ad64        0x0 krnl/compat.32
 .bss           0x00000000c002ad64       0x12 krnl/computer.32
                0x00000000c002ad64                systemSleepFunction
                0x00000000c002ad68                systemResetFunction
                0x00000000c002ad6c                systemShutdownFunction
                0x00000000c002ad70                Krnl::computer
                0x00000000c002ad74                KeIsPreemptionOn
                0x00000000c002ad75                KeIsSchedulingOn
 .bss           0x00000000c002ad76        0x0 krnl/crc32.32
 *fill*         0x00000000c002ad76        0x2 
 .bss           0x00000000c002ad78        0x8 krnl/env.32
                0x00000000c002ad78                KeUserEnv
                0x00000000c002ad7c                KeSystemEnv
 .bss           0x00000000c002ad80     0x2000 krnl/fault.32
                0x00000000c002ad80                keInterruptContexts
                0x00000000c002bd80                keInterruptHandlers
 .bss           0x00000000c002cd80        0x6 krnl/gdt.32
                0x00000000c002cd80                gdtDescr
 .bss           0x00000000c002cd86        0x0 krnl/idle.32
 *fill*         0x00000000c002cd86        0x2 
 .bss           0x00000000c002cd88        0x6 krnl/idt.32
                0x00000000c002cd88                idtDescr
 .bss           0x00000000c002cd8e        0x0 krnl/inlines.32
 *fill*         0x00000000c002cd8e       0x12 
 .bss           0x00000000c002cda0       0x24 krnl/intlformat.32
                0x00000000c002cda0                keLocale
 .bss           0x00000000c002cdc4        0x0 krnl/intops.32
 .bss           0x00000000c002cdc4        0x0 krnl/kheap.32
 .bss           0x00000000c002cdc4        0x0 krnl/mailbox.32
 .bss           0x00000000c002cdc4        0x4 krnl/main.32
                0x00000000c002cdc4                keBootSettings
 .bss           0x00000000c002cdc8        0x0 krnl/mutex.32
 .bss           0x00000000c002cdc8        0x1 krnl/panic.32
                0x00000000c002cdc8                KeIsKernelInPanic
 *fill*         0x00000000c002cdc9        0x3 
 .bss           0x00000000c002cdcc       0x29 krnl/physmgr.32
                0x00000000c002cdcc                Phys::forbidEvictions
                0x00000000c002cdd0                Phys::currentPagePointer
                0x00000000c002cdd4                Phys::highestMem
                0x00000000c002cdd8                Phys::oldPercent
                0x00000000c002cddc                Phys::usedPages
                0x00000000c002cde0                Phys::usablePages
                0x00000000c002cde4                Phys::dmaUsage
 .bss           0x00000000c002cdf5        0x0 krnl/pipe.32
 *fill*         0x00000000c002cdf5        0xb 
 .bss           0x00000000c002ce00       0x48 krnl/powctrl.32
                0x00000000c002ce00                powCtrlOnBattery
                0x00000000c002ce20                currentPowerSettings
                0x00000000c002ce44                secondsSinceLastUserIO
 .bss           0x00000000c002ce48        0x8 krnl/random.32
                0x00000000c002ce48                kiRandSeed
 .bss           0x00000000c002ce50        0x0 krnl/resolve.32
 .bss           0x00000000c002ce50        0x0 krnl/semaphore.32
 .bss           0x00000000c002ce50        0x0 krnl/signal.32
 .bss           0x00000000c002ce50        0x0 krnl/syscalls.32
 .bss           0x00000000c002ce50        0x9 krnl/terminal.32
                0x00000000c002ce50                terminalCycle
                0x00000000c002ce54                activeTerminal
                0x00000000c002ce58                VgaText::graphicMode
 *fill*         0x00000000c002ce59        0x1 
 .bss           0x00000000c002ce5a        0x2 krnl/tss.32
                0x00000000c002ce5a                doubleFaultSelector
 *fill*         0x00000000c002ce5c        0x4 
 .bss           0x00000000c002ce60       0x84 krnl/unixfile.32
                0x00000000c002ce60                sfileLpt
                0x00000000c002cea0                sfileCom
                0x00000000c002cec4                sfileNul
                0x00000000c002cec8                sfilePnt
                0x00000000c002cecc                sfileAux
                0x00000000c002ced0                sfileCon
                0x00000000c002ced4                initialFilesAdded
                0x00000000c002ced8                unixFileLinkedList
 .bss           0x00000000c002cee4       0x10 krnl/virtmgr.32
                0x00000000c002cee4                twswaps
                0x00000000c002cee8                swapBalance
                0x00000000c002ceec                Virt::swapfileBitmap
                0x00000000c002cef0                keFirstVAS
 .bss           0x00000000c002cef4        0x0 sys/eject.32
 .bss           0x00000000c002cef4        0x0 sys/exit.32
 .bss           0x00000000c002cef4        0x0 sys/getcwd.32
 .bss           0x00000000c002cef4        0x0 sys/getpid.32
 .bss           0x00000000c002cef4        0x0 sys/getramdata.32
 .bss           0x00000000c002cef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002cef4        0x0 sys/kill.32
 .bss           0x00000000c002cef4        0x0 sys/loaddll.32
 .bss           0x00000000c002cef4        0x0 sys/read.32
 .bss           0x00000000c002cef4        0x0 sys/registersignal.32
 .bss           0x00000000c002cef4        0x0 sys/registry.32
 .bss           0x00000000c002cef4        0x0 sys/sbrk.32
 .bss           0x00000000c002cef4        0x0 sys/setcwd.32
 .bss           0x00000000c002cef4        0x0 sys/settime.32
 .bss           0x00000000c002cef4        0x0 sys/symlink.32
 .bss           0x00000000c002cef4        0x0 sys/timezone.32
 .bss           0x00000000c002cef4        0x0 sys/truncate.32
 .bss           0x00000000c002cef4        0x0 sys/write.32
 .bss           0x00000000c002cef4        0x0 sys/wsbe.32
 .bss           0x00000000c002cef4        0x0 sys/yield.32
 *fill*         0x00000000c002cef4        0xc 
 .bss           0x00000000c002cf00      0x7a4 thr/elf.32
                0x00000000c002cf00                Thr::driverLookupNext
                0x00000000c002cf20                Thr::driverLookupLen
                0x00000000c002d120                Thr::driverLookupAddr
                0x00000000c002d320                Thr::driverNameLookup
                0x00000000c002d520                Thr::kernelSymbols
                0x00000000c002d5a0                Thr::kernelStringTable
                0x00000000c002d620                Thr::kernelSymbolTable
                0x00000000c002d6a0                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002d6a4        0x0 thr/exec.32
 *fill*         0x00000000c002d6a4        0x4 
 .bss           0x00000000c002d6a8       0x70 thr/prcssthr.32
                0x00000000c002d6a8                KiRestorePreemptionValue
                0x00000000c002d6ac                KiPreemptionDisableCounter
                0x00000000c002d6b0                cleanerThread
                0x00000000c002d6b4                weNeedTheCleanerToNotBlock
                0x00000000c002d6b8                retValLockStuff
                0x00000000c002d6bc                retValSchedLock
                0x00000000c002d6c0                lockStuffLock
                0x00000000c002d6c4                schedulerLock
                0x00000000c002d6c8                taskSwitchesPostponedFlag
                0x00000000c002d6cc                postponeTaskSwitchesCounter
                0x00000000c002d6d0                irqDisableCounter
                0x00000000c002d6d4                terminatedTaskList
                0x00000000c002d6e0                sleepingTaskList
                0x00000000c002d6ec                taskList
                0x00000000c002d6f8                kernelProcess
 *fill*         0x00000000c002d718        0x8 
 .bss           0x00000000c002d720       0x40 vm86/vm8086.32
                0x00000000c002d720                Vm::started8086Yet
                0x00000000c002d724                Vm::vmRetV
                0x00000000c002d728                Vm::vmDone
                0x00000000c002d729                Vm::vmReady
                0x00000000c002d72c                Vm::vm86Thread
                0x00000000c002d730                Vm::vmToHostCommsPtr
                0x00000000c002d740                Vm::vmToHostComms
 .bss           0x00000000c002d760       0x54 arch/i386/hal.32
                0x00000000c002d760                apic
                0x00000000c002d764                guiPanicHandler
                0x00000000c002d768                fpuOwner
                0x00000000c002d76c                coproLoadFunc
                0x00000000c002d770                coproSaveFunc
                0x00000000c002d774                lastD
                0x00000000c002d778                lastC
                0x00000000c002d77c                lastB
                0x00000000c002d780                lastA
                0x00000000c002d784                HalPageWriteCombiningFlag
                0x00000000c002d788                HalPageGlobalFlag
                0x00000000c002d78c                nmi
                0x00000000c002d790                vendorIDString
                0x00000000c002d79d                familyID
                0x00000000c002d79e                model
                0x00000000c002d79f                processorType
                0x00000000c002d7a0                steppingID
                0x00000000c002d7a4                vendor
                0x00000000c002d7a8                opcodeDetectionMode
                0x00000000c002d7ac                features
 .bss           0x00000000c002d7b4        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002d7b4        0x0 arch/i386/pic.32
 .bss           0x00000000c002d7b4        0x2 arch/i386/rtc.32
 .bss           0x00000000c002d7b6        0x0 arch/i386/vga.32
 *fill*         0x00000000c002d7b6        0xa 
 .bss           0x00000000c002d7c0       0xf0 fs/fat/vfslink.32
                0x00000000c002d7c0                FAT::fats
                0x00000000c002d7e0                FAT::vfsToFatRemaps
                0x00000000c002d860                fatToVFSRemaps
 .bss           0x00000000c002d8b0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002d8b0       0x10 
 .bss           0x00000000c002d8c0      0x820 fs/iso9660/vfslink.32
                0x00000000c002d8c0                iso9660Owner
                0x00000000c002d8c4                recentSector
                0x00000000c002d8e0                recentBuffer
 .bss           0x00000000c002e0e0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002e0e0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002e0e0        0x0 hw/bus/isa.32
 .bss           0x00000000c002e0e0        0xd hw/bus/pci.32
                0x00000000c002e0e0                thePCI
 .bss           0x00000000c002e0ed        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002e0ed        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002e0ed        0x3 
 .bss           0x00000000c002e0f0        0x8 hw/diskphys/ata.32
                0x00000000c002e0f0                ataSectorsWritten
                0x00000000c002e0f4                ataSectorsRead
 .bss           0x00000000c002e0f8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002e0f8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002e0f8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002e0f8        0x8 
 .bss           0x00000000c002e100       0x41 hw/intctrl/apic.32
                0x00000000c002e100                noOfIOAPICs
                0x00000000c002e120                ioapics
                0x00000000c002e140                IOAPICsSetupYet
 .bss           0x00000000c002e141        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002e141        0x3 
 .bss           0x00000000c002e144        0x4 hw/timer/pit.32
                0x00000000c002e144                pitFreq
 .bss           0x00000000c002e148        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002e148        0x0 crtn.32
 .bss           0x00000000c002e148        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002e148        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002e148        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002e148        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002e148                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003528f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
