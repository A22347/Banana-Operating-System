Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f46a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x601 fs/symlink.32
                0x00000000c000ad14                KiCreateSymlinkID()
                0x00000000c000ad7f                KiFlushSymlinkChanges()
                0x00000000c000ae52                KiDeinitialiseSymlinks(void*)
                0x00000000c000ae57                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000aec6                KiIsSymlinkRegistered(char const*)
                0x00000000c000af0d                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b122                KeCreateSymlink(char const*, char const*)
                0x00000000c000b25f                KeInitialiseSymlinks()
 *fill*         0x00000000c000b315        0x1 
 .text          0x00000000c000b316      0xd38 fs/vfs.32
                0x00000000c000b316                File::read(unsigned long long, void*, int*)
                0x00000000c000b36e                File::write(unsigned long long, void*, int*)
                0x00000000c000b3c6                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b41e                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b44c                File::isAtty()
                0x00000000c000b450                Directory::isAtty()
                0x00000000c000b454                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b45a                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b460                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b466                File::~File()
                0x00000000c000b466                File::~File()
                0x00000000c000b48a                File::~File()
                0x00000000c000b4b4                Directory::~Directory()
                0x00000000c000b4b4                Directory::~Directory()
                0x00000000c000b4d8                Directory::~Directory()
                0x00000000c000b502                Filesystem::Filesystem()
                0x00000000c000b502                Filesystem::Filesystem()
                0x00000000c000b526                Filesystem::~Filesystem()
                0x00000000c000b526                Filesystem::~Filesystem()
                0x00000000c000b534                Filesystem::~Filesystem()
                0x00000000c000b558                Fs::getcwd(Process*, char*, int)
                0x00000000c000b582                Fs::initVFS()
                0x00000000c000b5ac                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000b7ca                File::File(char const*, Process*)
                0x00000000c000b7ca                File::File(char const*, Process*)
                0x00000000c000b892                File::open(FileOpenMode)
                0x00000000c000b8f0                File::close()
                0x00000000c000b950                File::seek(unsigned long long)
                0x00000000c000b9a6                File::truncate(unsigned long long)
                0x00000000c000b9fc                File::tell(unsigned long long*)
                0x00000000c000ba4c                File::rewind()
                0x00000000c000ba60                File::unlink()
                0x00000000c000baac                File::rename(char const*)
                0x00000000c000bafa                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bb56                File::exists()
                0x00000000c000bb94                File::stat(unsigned long long*, bool*)
                0x00000000c000bbf5                Fs::setcwd(Process*, char*)
                0x00000000c000bd54                Directory::Directory(char const*, Process*)
                0x00000000c000bd54                Directory::Directory(char const*, Process*)
                0x00000000c000be1c                Directory::open()
                0x00000000c000be78                Directory::close()
                0x00000000c000bed8                Directory::unlink()
                0x00000000c000bf24                Directory::rename(char const*)
                0x00000000c000bf72                Directory::exists()
                0x00000000c000bfb0                Directory::read(dirent*)
                0x00000000c000bffc                Directory::create()
                0x00000000c000c048                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c04e        0x2 
 .text          0x00000000c000c050       0x86 hal/bus.32
                0x00000000c000c050                Bus::Bus(char const*)
                0x00000000c000c050                Bus::Bus(char const*)
                0x00000000c000c088                Bus::~Bus()
                0x00000000c000c088                Bus::~Bus()
                0x00000000c000c0ac                Bus::~Bus()
 .text          0x00000000c000c0d6       0x96 hal/buzzer.32
                0x00000000c000c0d6                beepThread(void*)
                0x00000000c000c113                Krnl::beep(int, int, bool)
 .text          0x00000000c000c16c      0x465 hal/clock.32
                0x00000000c000c16c                User::loadClockSettings(int)
                0x00000000c000c1be                Clock::Clock(char const*)
                0x00000000c000c1be                Clock::Clock(char const*)
                0x00000000c000c1f4                Clock::~Clock()
                0x00000000c000c1f4                Clock::~Clock()
                0x00000000c000c218                Clock::~Clock()
                0x00000000c000c242                Clock::timeInSecondsLocal()
                0x00000000c000c28a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c2e3                datetimeToSeconds(datetime_t)
                0x00000000c000c408                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c468                secondsToDatetime(unsigned long long)
                0x00000000c000c5ac                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c5d1        0x1 
 .text          0x00000000c000c5d2      0x464 hal/device.32
                0x00000000c000c5d2                Device::hibernate()
                0x00000000c000c5d4                Device::wake()
                0x00000000c000c5d6                Device::detect()
                0x00000000c000c5d8                Device::disableLegacy()
                0x00000000c000c5da                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c5dc                DriverlessDevice::close(int, int, void*)
                0x00000000c000c5e0                DriverlessDevice::detect()
                0x00000000c000c5e2                DriverlessDevice::open(int, int, void*)
                0x00000000c000c5f6                Device::~Device()
                0x00000000c000c5f6                Device::~Device()
                0x00000000c000c604                Device::~Device()
                0x00000000c000c62c                Device::findAndLoadDriver()
                0x00000000c000c63a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c660                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c6a0                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c6ca                Device::getParent()
                0x00000000c000c6d6                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c6f4                Device::addChild(Device*)
                0x00000000c000c738                Device::removeAllChildren()
                0x00000000c000c77e                Device::hibernateAll()
                0x00000000c000c7ae                Device::wakeAll()
                0x00000000c000c7de                Device::detectAll()
                0x00000000c000c80e                Device::disableLegacyAll()
                0x00000000c000c810                Device::loadDriversForAll()
                0x00000000c000c812                Device::closeAll()
                0x00000000c000c848                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c87e                Device::setName(char const*)
                0x00000000c000c88c                Device::Device(char const*)
                0x00000000c000c88c                Device::Device(char const*)
                0x00000000c000c988                Device::getName()
                0x00000000c000c992                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c992                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c9c8                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ca0c                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000ca36        0x2 
 .text          0x00000000c000ca38       0x86 hal/diskctrl.32
                0x00000000c000ca38                HardDiskController::HardDiskController(char const*)
                0x00000000c000ca38                HardDiskController::HardDiskController(char const*)
                0x00000000c000ca70                HardDiskController::~HardDiskController()
                0x00000000c000ca70                HardDiskController::~HardDiskController()
                0x00000000c000ca94                HardDiskController::~HardDiskController()
 .text          0x00000000c000cabe       0xe2 hal/diskphys.32
                0x00000000c000cabe                PhysicalDisk::eject()
                0x00000000c000cac2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cac2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cb2a                PhysicalDisk::startCache()
                0x00000000c000cb52                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cb52                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cb76                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cba0        0x0 hal/fpu.32
 .text          0x00000000c000cba0      0x360 hal/intctrl.32
                0x00000000c000cba0                int_handler
                0x00000000c000cc2a                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cc74                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000cdb7                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000cdeb                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ce61                setupINTS()
                0x00000000c000cebe                convertLegacyIRQNumber(int)
 .text          0x00000000c000cf00      0x8be hal/keybrd.32
                0x00000000c000cf00                startGUI(void*)
                0x00000000c000cf6e                startGUIVESA(void*)
                0x00000000c000cfdc                sendKeyToTerminal(unsigned char)
                0x00000000c000d0b7                sendKeyboardToken(KeyboardToken)
                0x00000000c000d5a1                clearInternalKeybuffer(VgaText*)
                0x00000000c000d5d6                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d734                Keyboard::Keyboard(char const*)
                0x00000000c000d734                Keyboard::Keyboard(char const*)
                0x00000000c000d770                Keyboard::~Keyboard()
                0x00000000c000d770                Keyboard::~Keyboard()
                0x00000000c000d794                Keyboard::~Keyboard()
 .text          0x00000000c000d7be      0x3f8 hal/logidisk.32
                0x00000000c000d7be                LogicalDisk::close(int, int, void*)
                0x00000000c000d7c2                LogicalDisk::~LogicalDisk()
                0x00000000c000d7c2                LogicalDisk::~LogicalDisk()
                0x00000000c000d7e6                LogicalDisk::~LogicalDisk()
                0x00000000c000d810                LogicalDisk::open(int, int, void*)
                0x00000000c000d824                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d85c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d8a2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d8a2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d962                LogicalDisk::assignDriveLetter()
                0x00000000c000da1c                LogicalDisk::mount()
                0x00000000c000da64                LogicalDisk::unmount()
                0x00000000c000da74                LogicalDisk::eject()
                0x00000000c000da88                LogicalDisk::unassignDriveLetter()
                0x00000000c000dade                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000db4a                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000dbb6        0x2 
 .text          0x00000000c000dbb8       0x86 hal/mouse.32
                0x00000000c000dbb8                Mouse::Mouse(char const*)
                0x00000000c000dbb8                Mouse::Mouse(char const*)
                0x00000000c000dbf0                Mouse::~Mouse()
                0x00000000c000dbf0                Mouse::~Mouse()
                0x00000000c000dc14                Mouse::~Mouse()
 .text          0x00000000c000dc3e       0x90 hal/nic.32
                0x00000000c000dc3e                NIC::getMAC()
                0x00000000c000dc44                NIC::write(int, unsigned char*, int*)
                0x00000000c000dc4a                NIC::NIC(char const*)
                0x00000000c000dc4a                NIC::NIC(char const*)
                0x00000000c000dc80                NIC::~NIC()
                0x00000000c000dc80                NIC::~NIC()
                0x00000000c000dca4                NIC::~NIC()
 .text          0x00000000c000dcce      0x33b hal/partition.32
                0x00000000c000dcce                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dd76                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e009        0x3 
 .text          0x00000000c000e00c       0x86 hal/serial.32
                0x00000000c000e00c                Serial::Serial(char const*)
                0x00000000c000e00c                Serial::Serial(char const*)
                0x00000000c000e044                Serial::~Serial()
                0x00000000c000e044                Serial::~Serial()
                0x00000000c000e068                Serial::~Serial()
 *fill*         0x00000000c000e092        0x2 
 .text          0x00000000c000e094      0x234 hal/timer.32
                0x00000000c000e094                Timer::Timer(char const*)
                0x00000000c000e094                Timer::Timer(char const*)
                0x00000000c000e0cc                Timer::~Timer()
                0x00000000c000e0cc                Timer::~Timer()
                0x00000000c000e0f0                Timer::~Timer()
                0x00000000c000e11a                Timer::read()
                0x00000000c000e125                setupTimer(int)
                0x00000000c000e160                timerHandler(unsigned int)
 .text          0x00000000c000e2c8      0x450 hal/vcache.32
                0x00000000c000e2c8                VCache::VCache(PhysicalDisk*)
                0x00000000c000e2c8                VCache::VCache(PhysicalDisk*)
                0x00000000c000e438                VCache::invalidateReadBuffer()
                0x00000000c000e448                VCache::writeWriteBuffer()
                0x00000000c000e494                VCache::~VCache()
                0x00000000c000e494                VCache::~VCache()
                0x00000000c000e4ec                VCache::~VCache()
                0x00000000c000e514                VCache::write(unsigned long long, int, void*)
                0x00000000c000e60e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e718      0x4d9 hal/video.32
                0x00000000c000e718                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e764                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e7d4                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e864                Video::clearScreen(unsigned int)
                0x00000000c000e898                Video::putpixel(int, int, unsigned int)
                0x00000000c000e8a6                Video::readPixelApprox(int, int)
                0x00000000c000e8ba                Video::Video(char const*)
                0x00000000c000e8ba                Video::Video(char const*)
                0x00000000c000e8f0                Video::~Video()
                0x00000000c000e8f0                Video::~Video()
                0x00000000c000e914                Video::~Video()
                0x00000000c000e93e                Video::isMonochrome()
                0x00000000c000e94a                Video::getWidth()
                0x00000000c000e956                Video::getHeight()
                0x00000000c000e962                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ea1e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000eb86                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ebf1        0x3 
 .text          0x00000000c000ebf4     0x12d2 hw/acpi.32
                0x00000000c000ebf4                ACPI::close(int, int, void*)
                0x00000000c000eca8                findRSDP()
                0x00000000c000ed40                loadACPITables(unsigned char*)
                0x00000000c000efac                findRSDT(unsigned char*)
                0x00000000c000f104                findDataTable(unsigned char*, char*)
                0x00000000c000f184                scanMADT()
                0x00000000c000f63c                ACPI::ACPI()
                0x00000000c000f63c                ACPI::ACPI()
                0x00000000c000f690                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f78c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f858                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f860                ACPI::detectPCI()
                0x00000000c000fa80                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fac8                ACPI::sleep()
                0x00000000c000fae4                ACPI::open(int, int, void*)
 .text          0x00000000c000fec6      0xbc5 hw/cpu.32
                0x00000000c000fec6                CPU::close(int, int, void*)
                0x00000000c000feca                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000fee6                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000fefe                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ff72                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000fff6                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010024                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0010052                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0010080                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00100ae                CPU::CPU()
                0x00000000c00100ae                CPU::CPU()
                0x00000000c001013c                CPU::displayFeatures()
                0x00000000c001013e                CPU::detectFeatures()
                0x00000000c0010812                CPU::setupSMEP()
                0x00000000c001081e                CPU::setupUMIP()
                0x00000000c0010828                CPU::setupTSC()
                0x00000000c0010832                CPU::setupLargePages()
                0x00000000c001083c                CPU::setupPAT()
                0x00000000c0010878                CPU::setupMTRR()
                0x00000000c001087a                CPU::setupGlobalPages()
                0x00000000c0010884                CPU::allowUsermodeDataAccess()
                0x00000000c0010896                CPU::prohibitUsermodeDataAccess()
                0x00000000c00108a8                CPU::setupSMAP()
                0x00000000c00108b6                CPU::setupFeatures()
                0x00000000c0010982                CPU::open(int, int, void*)
 .text          0x00000000c0010a8b       0xb6 krnl/atexit.32
                0x00000000c0010a8b                KeInitialiseAtexit()
                0x00000000c0010aaa                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010ade                KeExecuteAtexit()
 .text          0x00000000c0010b41       0xdf krnl/bootmsg.32
                0x00000000c0010b41                KeDisplaySplashScreen()
                0x00000000c0010bbd                KeSetBootMessage(char const*)
 .text          0x00000000c0010c20       0x1d krnl/compat.32
                0x00000000c0010c20                Krnl::handlePowerButton()
                0x00000000c0010c30                Krnl::handleSleepButton()
 *fill*         0x00000000c0010c3d        0x1 
 .text          0x00000000c0010c3e      0x5bf krnl/env.32
                0x00000000c0010c3e                EnvVarContainer::getEnv(char const*)
                0x00000000c0010c7c                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010d3e                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010d40                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010f64                EnvVarContainer::__loadSystem()
                0x00000000c0010f7e                EnvVarContainer::__loadUser()
                0x00000000c0010f80                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010f80                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010fa2                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010fa2                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010fd2                KeGetEnv(Process*, char const*)
                0x00000000c0011037                KeSetEnvSystem(char const*, char const*)
                0x00000000c0011051                KeSetEnvUser(char const*, char const*)
                0x00000000c0011070                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0011083                KeDeleteEnvSystem(char const*)
                0x00000000c0011084                KeDeleteEnvUser(char const*)
                0x00000000c0011085                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0011086                KeNewProcessEnv(Process*)
                0x00000000c00110a8                KeCopyProcessEnv(Process*, Process*)
                0x00000000c00110f4                KeLoadSystemEnv()
                0x00000000c0011122                KeLoadUserEnv()
                0x00000000c0011148                KeFlushEnv()
                0x00000000c0011149                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0011169                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c00111fd       0x94 krnl/inlines.32
                0x00000000c00111fd                CPU::current()
                0x00000000c0011209                operator new(unsigned long)
                0x00000000c001120e                operator delete(void*)
                0x00000000c0011213                disableIRQs()
                0x00000000c0011215                enableIRQs()
                0x00000000c0011217                lockScheduler()
                0x00000000c001121f                unlockScheduler()
                0x00000000c001122e                lockStuff()
                0x00000000c001123c                unlockStuff()
                0x00000000c0011276                Virt::getAKernelVAS()
                0x00000000c001127c                __not_memcpy
 .text          0x00000000c0011291        0xc krnl/panic.32
                0x00000000c0011291                KePanic(char const*)
 .text          0x00000000c001129d      0x142 krnl/powctrl.32
                0x00000000c001129d                KePowerThread(void*)
                0x00000000c00112cb                KeChangePowerSettings(PowerSettings)
                0x00000000c00112e1                KeUserIOReceived()
                0x00000000c00112ec                KeHandlePowerButton()
                0x00000000c0011321                KeHandleSleepButton()
                0x00000000c0011356                KeSetupPowerManager()
 .text          0x00000000c00113df       0x9b krnl/random.32
                0x00000000c00113df                KeRand()
                0x00000000c001141f                KeSeedRand(unsigned int)
                0x00000000c0011448                KeInitRand()
 *fill*         0x00000000c001147a        0x2 
 .text          0x00000000c001147c      0x1bc krnl/resolve.32
                0x00000000c001147c                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011638      0x31f krnl/signal.32
                0x00000000c0011638                KiSigKill(int)
                0x00000000c001164c                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001164d                KiDefaultSignalHandlerPause(int)
                0x00000000c0011679                KiDefaultSignalHandlerResume(int)
                0x00000000c00116a5                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00116aa                KeInitSignals()
                0x00000000c00116f9                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c001172f                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00117ac                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c00118a3                KiCheckSignalZ
                0x00000000c00118e5                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011920                KiFinishSignalZ
 .text          0x00000000c0011957      0xc74 krnl/syscalls.32
                0x00000000c0011957                SysSeekDir(regs*)
                0x00000000c001195c                SysTellDir(regs*)
                0x00000000c0011961                SysVerify(regs*)
                0x00000000c001196b                SysGetArgc(regs*)
                0x00000000c001197f                SysTTYName(regs*)
                0x00000000c0011987                SysFormatDisk(regs*)
                0x00000000c00119ee                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011a42                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011a9b                SysShutdown(regs*)
                0x00000000c0011b28                SysRealpath(regs*)
                0x00000000c0011b76                SysReadDir(regs*)
                0x00000000c0011bf6                SysIsATTY(regs*)
                0x00000000c0011c50                SysSeek(regs*)
                0x00000000c0011caa                SysTell(regs*)
                0x00000000c0011d17                SysSize(regs*)
                0x00000000c0011d8a                SysSizeFromFilename(regs*)
                0x00000000c0011e34                SysClose(regs*)
                0x00000000c0011e94                SysOpenDir(regs*)
                0x00000000c0011f11                SysMakeDir(regs*)
                0x00000000c0011f7f                SysCloseDir(regs*)
                0x00000000c0011fce                SysWait(regs*)
                0x00000000c0011fef                SysNotImpl(regs*)
                0x00000000c001200a                SysPanic(regs*)
                0x00000000c0012025                SysRmdir(regs*)
                0x00000000c0012083                SysUnlink(regs*)
                0x00000000c00120e1                SysGetArgv(regs*)
                0x00000000c001212e                SysUSleep(regs*)
                0x00000000c0012157                SysSpawn(regs*)
                0x00000000c00121c8                SysGetEnv(regs*)
                0x00000000c001227d                SysSetFatAttrib(regs*)
                0x00000000c00122e6                SysPipe(regs*)
                0x00000000c001232b                SysGetUnixTime(regs*)
                0x00000000c001233f                string_ends_with(char const*, char const*)
                0x00000000c001238a                SysOpen(regs*)
                0x00000000c0012589                KeSystemCall(regs*, void*)
 *fill*         0x00000000c00125cb        0x1 
 .text          0x00000000c00125cc      0x159 net/ethernet.32
                0x00000000c00125cc                KeSwitchEndian16(unsigned short)
                0x00000000c00125f0                KeSwitchEndian32(unsigned int)
                0x00000000c0012620                EthernetCRC32(unsigned char*, int)
                0x00000000c00126c4                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012725      0xd51 reg/cm.32
                0x00000000c0012725                CmOpen(char const*)
                0x00000000c0012843                CmClose(Reghive_Tag*)
                0x00000000c0012859                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012895                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c001290c                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c001294b                CmGetNext(Reghive_Tag*, int)
                0x00000000c001297d                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c00129b9                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c00129e1                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012a02                CmExpand(Reghive_Tag*, int)
                0x00000000c0012a7d                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012b03                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012bf7                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012d2f                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012d90                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012dc0                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012df7                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012e21                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012e61                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012f05                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012f33                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00130d0                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c001311d                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013197                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00131ea                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00132ae                zStrtok(char*, char const*)
                0x00000000c0013320                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00133a1                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013444                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0013476      0x545 reg/registry.32
                0x00000000c0013476                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013602                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013757                Reg::getLine(char*, char*, char*)
                0x00000000c001378e                Reg::readInt(char*, char*, int*)
                0x00000000c001387c                Reg::readString(char*, char*, char*, int)
                0x00000000c00138fd                Reg::readBool(char*, char*, bool*)
                0x00000000c0013922                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001394e                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001397a                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00139bb       0x36 sys/eject.32
                0x00000000c00139bb                SysEject(regs*)
 .text          0x00000000c00139f1       0x18 sys/exit.32
                0x00000000c00139f1                SysExit(regs*)
 .text          0x00000000c0013a09       0x1f sys/getcwd.32
                0x00000000c0013a09                SysGetCwd(regs*)
 .text          0x00000000c0013a28        0xc sys/getpid.32
                0x00000000c0013a28                SysGetPID(regs*)
 .text          0x00000000c0013a34       0x1a sys/getramdata.32
                0x00000000c0013a34                SysGetRAMData(regs*)
 .text          0x00000000c0013a4e       0x82 sys/getvgaptr.32
                0x00000000c0013a4e                SysGetVGAPtr(regs*)
 .text          0x00000000c0013ad0       0xb9 sys/kill.32
                0x00000000c0013ad0                SysKill(regs*)
 .text          0x00000000c0013b89       0xa8 sys/loaddll.32
                0x00000000c0013b89                SysLoadDLL(regs*)
 .text          0x00000000c0013c31       0x68 sys/read.32
                0x00000000c0013c31                SysRead(regs*)
 .text          0x00000000c0013c99       0x29 sys/registersignal.32
                0x00000000c0013c99                SysRegisterSignal(regs*)
 .text          0x00000000c0013cc2      0x19c sys/registry.32
                0x00000000c0013cc2                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013d39                SysRegistryReadExtent(regs*)
                0x00000000c0013d81                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013da9                SysRegistryEnterDirectory(regs*)
                0x00000000c0013dd1                SysRegistryGetNext(regs*)
                0x00000000c0013df9                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013e33                SysRegistryOpen(regs*)
                0x00000000c0013e47                SysRegistryClose(regs*)
 .text          0x00000000c0013e5e       0x55 sys/sbrk.32
                0x00000000c0013e5e                SysSbrk(regs*)
 .text          0x00000000c0013eb3       0x1c sys/setcwd.32
                0x00000000c0013eb3                SysSetCwd(regs*)
 .text          0x00000000c0013ecf       0x96 sys/settime.32
                0x00000000c0013ecf                SysSetTime(regs*)
 .text          0x00000000c0013f65       0x4a sys/timezone.32
                0x00000000c0013f65                SysTimezone(regs*)
 .text          0x00000000c0013faf       0xfc sys/truncate.32
                0x00000000c0013faf                SysTruncate(regs*)
 .text          0x00000000c00140ab       0x68 sys/write.32
                0x00000000c00140ab                SysWrite(regs*)
 .text          0x00000000c0014113       0x62 sys/wsbe.32
                0x00000000c0014113                SysWsbe(regs*)
 .text          0x00000000c0014175       0x25 sys/yield.32
                0x00000000c0014175                SysYield(regs*)
 .text          0x00000000c001419a     0x1203 thr/elf.32
                0x00000000c001419a                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014421                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014640                Thr::runtimeReferenceHelper()
                0x00000000c0014653                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00146a2                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014960                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00150a1                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00150d3                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001510a                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015124                Thr::loadDLL(char const*, bool)
                0x00000000c0015364                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001539d        0x3 
 .text          0x00000000c00153a0     0x13b5 thr/prcssthr.32
                0x00000000c00153a0                userModeEntryPoint(void*)
                0x00000000c00153c8                changeTSS
                0x00000000c00153f8                switchToThread(ThreadControlBlock*)
                0x00000000c00154a8                Process::addArgs(char**)
                0x00000000c0015514                Process::Process(char const*, Process*, char**)
                0x00000000c0015514                Process::Process(char const*, Process*, char**)
                0x00000000c0015720                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015720                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00158f4                taskStartupFunction
                0x00000000c0015900                Semaphore::Semaphore(int)
                0x00000000c0015900                Semaphore::Semaphore(int)
                0x00000000c0015930                Mutex::Mutex()
                0x00000000c0015930                Mutex::Mutex()
                0x00000000c0015944                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015a4c                Process::createUserThread()
                0x00000000c0015a6c                setupMultitasking(void (*)())
                0x00000000c0015b90                schedule()
                0x00000000c0015c24                Semaphore::tryAcquire()
                0x00000000c0015ce4                Semaphore::assertLocked(char const*)
                0x00000000c0015d68                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015d90                blockTask(TaskState)
                0x00000000c0015dc8                waitTask(int, int*, int)
                0x00000000c0015e0c                milliTenthSleepUntil(unsigned int)
                0x00000000c0015eac                milliTenthSleep(unsigned int)
                0x00000000c0015ec0                sleep(unsigned int)
                0x00000000c0015ed0                Semaphore::acquire()
                0x00000000c0015f98                taskReturned
                0x00000000c0015fdc                Thr::processFromPID(int)
                0x00000000c0016088                unblockTask(ThreadControlBlock*)
                0x00000000c0016134                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016408                cleanerTaskFunction(void*)
                0x00000000c0016510                terminateTask(int)
                0x00000000c00165fc                Thr::terminateFromIRQ(int)
                0x00000000c001660c                Semaphore::release()
 .text          0x00000000c0016755      0xc31 vm86/vm8086.32
                0x00000000c0016755                Vm::inbv(unsigned short)
                0x00000000c0016768                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001679e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00167ae                Vm::getSegment(unsigned int)
                0x00000000c00167b6                Vm::getOffset(unsigned int)
                0x00000000c00167bb                Vm::mainloop2()
                0x00000000c00167f5                Vm::mainVm8086Loop(void*)
                0x00000000c0016805                Vm::mainloop3(unsigned long)
                0x00000000c001682b                Vm::initialise8086()
                0x00000000c001686e                Vm::finish8086()
                0x00000000c00168cf                Vm::getOutput8086(unsigned char*)
                0x00000000c00168f4                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00169ad                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016b4b                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016be8                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016bf9                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016c0b                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016c1c                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016c31                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016c47                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016c5c                Vm::faultHandler(regs*)
 .text          0x00000000c0017386      0xaf0 arch/i386/hal.32
                0x00000000c0017386                noCopro(unsigned long)
                0x00000000c0017387                nmiHandler(regs*, void*)
                0x00000000c00173a0                doubleFault(regs*, void*)
                0x00000000c00173b9                displayDebugInfo(regs*)
                0x00000000c001773e                HalSystemIdle()
                0x00000000c00177ba                displayProgramFault(char const*)
                0x00000000c0017806                gpFault(regs*, void*)
                0x00000000c001786d                pgFault(regs*, void*)
                0x00000000c00178f6                otherISRHandler(regs*, void*)
                0x00000000c001792a                opcodeFault(regs*, void*)
                0x00000000c00179ad                i386SaveCoprocessor(void*)
                0x00000000c00179c1                i386LoadCoprocessor(void*)
                0x00000000c00179d5                x87EmulHandler(regs*, void*)
                0x00000000c0017a72                HalInitialiseCoprocessor()
                0x00000000c0017b20                HalPanic(char const*)
                0x00000000c0017c34                HalQueryPerformanceCounter()
                0x00000000c0017c4f                HalInitialise()
                0x00000000c0017e05                HalMakeBeep(int)
                0x00000000c0017e3f                HalGetRand()
                0x00000000c0017e42                HalEndOfInterrupt(int)
                0x00000000c0017e73                HalRestart()
                0x00000000c0017e74                HalShutdown()
                0x00000000c0017e75                HalSleep()
 *fill*         0x00000000c0017e76        0x2 
 .text          0x00000000c0017e78      0x2dc arch/i386/pic.32
                0x00000000c0017e78                picIoWait()
                0x00000000c0017e80                picDisable()
                0x00000000c0017eb4                picGetIRQReg(int)
                0x00000000c0017f30                picOpen()
                0x00000000c00180b4                picEOI(int)
 .text          0x00000000c0018154      0x66e arch/i386/rtc.32
                0x00000000c0018154                RTC::open(int, int, void*)
                0x00000000c0018158                RTC::close(int, int, void*)
                0x00000000c001815c                RTC::timeInSecondsUTC()
                0x00000000c001816e                RTC::timeInDatetimeUTC()
                0x00000000c0018194                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00181d2                RTC::~RTC()
                0x00000000c00181d2                RTC::~RTC()
                0x00000000c00181f6                RTC::~RTC()
                0x00000000c0018220                RTC::get_update_in_progress_flag()
                0x00000000c001823a                RTC::completeRTCRefresh()
                0x00000000c0018514                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00186c2                rtcIRQHandler(regs*, void*)
                0x00000000c0018708                RTC::RTC()
                0x00000000c0018708                RTC::RTC()
 *fill*         0x00000000c00187c2        0x2 
 .text          0x00000000c00187c4      0x1f4 arch/i386/vga.32
                0x00000000c00187c4                HalConsoleScroll(int, int)
                0x00000000c00188cc                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018930                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c00189b8     0x14f3 fs/fat/vfslink.32
                0x00000000c00189b8                FAT::getName()
                0x00000000c00189c0                FAT::tell(void*, unsigned long long*)
                0x00000000c00189fc                FAT::stat(void*, unsigned long long*)
                0x00000000c0018a38                FAT::~FAT()
                0x00000000c0018a38                FAT::~FAT()
                0x00000000c0018a5c                FAT::~FAT()
                0x00000000c0018a84                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018b28                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018c08                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018dec                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019008                FAT::allocateSwapfile(char const*, int)
                0x00000000c00191c8                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019338                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019398                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00193f8                FAT::close(void*)
                0x00000000c001944c                FAT::closeDir(void*)
                0x00000000c00194a0                FAT::truncate(void*, unsigned long long)
                0x00000000c001950c                FAT::seek(void*, unsigned long long)
                0x00000000c0019564                fatWrapperReadDisk
                0x00000000c00195a4                fatWrapperWriteDisk
                0x00000000c00195e4                fatWrapperIoctl
                0x00000000c0019704                FAT::FAT()
                0x00000000c0019704                FAT::FAT()
                0x00000000c001975c                FAT::fixFilepath(char*)
                0x00000000c001979c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019910                FAT::openDir(char const*, void**)
                0x00000000c00199c0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019ab8                FAT::unlink(char const*)
                0x00000000c0019b38                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019cf0                FAT::rename(char const*, char const*)
                0x00000000c0019dbc                FAT::mkdir(char const*)
                0x00000000c0019e3c                FAT::exists(char const*)
 *fill*         0x00000000c0019eab        0x1 
 .text          0x00000000c0019eac       0x94 fs/iso9660/helper.32
                0x00000000c0019eac                isoReadDiscSectorHelper
                0x00000000c0019f08                iso_kprintf
                0x00000000c0019f24                iso_kprintfd
 .text          0x00000000c0019f40      0x71a fs/iso9660/vfslink.32
                0x00000000c0019f40                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019f46                ISO9660::truncate(void*, unsigned long long)
                0x00000000c0019f4c                ISO9660::getName()
                0x00000000c0019f52                ISO9660::closeDir(void*)
                0x00000000c0019f5c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019f62                ISO9660::unlink(char const*)
                0x00000000c0019f68                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019f6e                ISO9660::rename(char const*, char const*)
                0x00000000c0019f74                ISO9660::mkdir(char const*)
                0x00000000c0019f7a                ISO9660::~ISO9660()
                0x00000000c0019f7a                ISO9660::~ISO9660()
                0x00000000c0019f9e                ISO9660::~ISO9660()
                0x00000000c0019fc6                ISO9660::exists(char const*)
                0x00000000c0019fda                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a0c0                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a108                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a14a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a188                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a1da                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a31c                ISO9660::close(void*)
                0x00000000c001a34c                ISO9660::openDir(char const*, void**)
                0x00000000c001a426                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a541                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a5c0                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a632                ISO9660::ISO9660()
                0x00000000c001a632                ISO9660::ISO9660()
 .text          0x00000000c001a65a      0x26c hal/sound/sndcard.32
                0x00000000c001a65a                SoundCard::beginPlayback()
                0x00000000c001a668                SoundCard::stopPlayback()
                0x00000000c001a676                SoundCard::SoundCard(char const*)
                0x00000000c001a676                SoundCard::SoundCard(char const*)
                0x00000000c001a714                SoundCard::~SoundCard()
                0x00000000c001a714                SoundCard::~SoundCard()
                0x00000000c001a738                SoundCard::~SoundCard()
                0x00000000c001a762                SoundCard::configureRates(int, int, int)
                0x00000000c001a792                SoundCard::getSamples16(int, short*)
                0x00000000c001a7ee                SoundCard::getSamples32(int, int*)
                0x00000000c001a874                SoundCard::addChannel(SoundPort*)
                0x00000000c001a8b2                SoundCard::removeChannel(int)
 *fill*         0x00000000c001a8c6        0x2 
 .text          0x00000000c001a8c8      0x393 hal/sound/sndport.32
                0x00000000c001a8c8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a8c8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a954                SoundPort::~SoundPort()
                0x00000000c001a954                SoundPort::~SoundPort()
                0x00000000c001a988                SoundPort::unpause()
                0x00000000c001a994                SoundPort::pause()
                0x00000000c001a9a0                SoundPort::getBufferUsed()
                0x00000000c001a9a8                SoundPort::getBufferSize()
                0x00000000c001a9b0                SoundPort::buffer16(short*, int)
                0x00000000c001aa3c                SoundPort::buffer32(int*, int)
                0x00000000c001aac8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001ab98                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001ac5b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001ac5b        0x1 
 .text          0x00000000c001ac5c      0xbc5 hw/bus/pci.32
                0x00000000c001ac5c                PCI::open(int, int, void*)
                0x00000000c001ac7a                PCI::close(int, int, void*)
                0x00000000c001ac7e                PCI::PCI()
                0x00000000c001ac7e                PCI::PCI()
                0x00000000c001ad16                PCI::readBAR8(unsigned int, int)
                0x00000000c001ad32                PCI::readBAR16(unsigned int, int)
                0x00000000c001ad50                PCI::readBAR32(unsigned int, int)
                0x00000000c001ad6c                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001ad8c                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001adae                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001adce                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ae44                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001aeee                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001af12                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001af3a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001af84                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001afac                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001afd0                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001aff4                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b01c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b080                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b166                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b430                PCI::checkBus(unsigned char)
                0x00000000c001b454                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b5da                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b756                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b7c8                PCI::detect()
 *fill*         0x00000000c001b821        0x1 
 .text          0x00000000c001b822      0xb96 hw/diskctrl/ide.32
                0x00000000c001b822                IDE::close(int, int, void*)
                0x00000000c001b826                IDE::IDE()
                0x00000000c001b826                IDE::IDE()
                0x00000000c001b85a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b86c                selectDrive(unsigned char, unsigned char)
                0x00000000c001b86e                IDE::getBase(unsigned char)
                0x00000000c001b880                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b940                IDE::read(unsigned char, unsigned char)
                0x00000000c001b9f4                IDE::waitInterrupt(unsigned char)
                0x00000000c001ba56                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ba72                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ba8e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bad8                IDE::open(int, int, void*)
                0x00000000c001bf12                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001bfe2                IDE::detect()
                0x00000000c001c2aa                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c364                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c3b8      0x32c hw/diskctrl/satabus.32
                0x00000000c001c3b8                SATABus::close(int, int, void*)
                0x00000000c001c3bc                SATABus::detect()
                0x00000000c001c3be                SATABus::SATABus()
                0x00000000c001c3be                SATABus::SATABus()
                0x00000000c001c444                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c476                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c4be                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c4de                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c508                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c61a                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c6c4                SATABus::open(int, int, void*)
 .text          0x00000000c001c6e4      0x96d hw/diskphys/ata.32
                0x00000000c001c6e4                ATA::close(int, int, void*)
                0x00000000c001c708                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c70a                ATA::ATA()
                0x00000000c001c70a                ATA::ATA()
                0x00000000c001c738                ATA::flush(bool)
                0x00000000c001c786                ATA::readyForCommand()
                0x00000000c001c7d2                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cb96                ATA::detectCHS()
                0x00000000c001cbc0                ATA::open(int, int, void*)
                0x00000000c001cc8c                combineCharAndColour(char, unsigned char)
                0x00000000c001cc9d                combineColours(unsigned char, unsigned char)
                0x00000000c001ccaa                ATA::read(unsigned long long, int, void*)
                0x00000000c001ce80                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d051        0x1 
 .text          0x00000000c001d052      0x612 hw/diskphys/atapi.32
                0x00000000c001d052                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d058                ATAPI::close(int, int, void*)
                0x00000000c001d07c                ATAPI::ATAPI()
                0x00000000c001d07c                ATAPI::ATAPI()
                0x00000000c001d0aa                ATAPI::readyForCommand()
                0x00000000c001d0fc                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d3bc                ATAPI::diskRemoved()
                0x00000000c001d3f6                ATAPI::eject()
                0x00000000c001d43e                ATAPI::diskInserted()
                0x00000000c001d44a                ATAPI::detectMedia()
                0x00000000c001d50a                ATAPI::open(int, int, void*)
                0x00000000c001d5ea                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d664      0x7ff hw/diskphys/sata.32
                0x00000000c001d664                SATA::close(int, int, void*)
                0x00000000c001d688                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d68a                SATA::open(int, int, void*)
                0x00000000c001d734                SATA::SATA()
                0x00000000c001d734                SATA::SATA()
                0x00000000c001d762                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d9b4                SATA::read(unsigned long long, int, void*)
                0x00000000c001dc04                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001de63        0x1 
 .text          0x00000000c001de64      0x5d8 hw/diskphys/satapi.32
                0x00000000c001de64                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001de6a                SATAPI::close(int, int, void*)
                0x00000000c001de8e                SATAPI::SATAPI()
                0x00000000c001de8e                SATAPI::SATAPI()
                0x00000000c001debc                SATAPI::diskRemoved()
                0x00000000c001debe                SATAPI::diskInserted()
                0x00000000c001deda                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e1c0                SATAPI::eject()
                0x00000000c001e1fc                SATAPI::detectMedia()
                0x00000000c001e252                SATAPI::open(int, int, void*)
                0x00000000c001e352                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e43c      0x45b hw/intctrl/apic.32
                0x00000000c001e43c                IOAPIC::close(int, int, void*)
                0x00000000c001e442                apicGetBase()
                0x00000000c001e488                IOAPIC::IOAPIC()
                0x00000000c001e488                IOAPIC::IOAPIC()
                0x00000000c001e4b0                apicOpen()
                0x00000000c001e62c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e65e                IOAPIC::read(int)
                0x00000000c001e686                IOAPIC::open(int, int, void*)
                0x00000000c001e76c                IOAPIC::write(int, int)
                0x00000000c001e798                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e897        0x1 
 .text          0x00000000c001e898       0xf0 hw/timer/apictimer.32
                0x00000000c001e898                APICTimer::close(int, int, void*)
                0x00000000c001e8a0                apicTimerHandler(regs*, void*)
                0x00000000c001e8c8                APICTimer::open(int, int, void*)
                0x00000000c001e938                APICTimer::write(int)
                0x00000000c001e960                APICTimer::APICTimer()
                0x00000000c001e960                APICTimer::APICTimer()
 .text          0x00000000c001e988      0x1ad hw/timer/pit.32
                0x00000000c001e988                PIT::write(int)
                0x00000000c001ea0c                pitHandler(regs*, void*)
                0x00000000c001ea34                PIT::open(int, int, void*)
                0x00000000c001ea84                PIT::close(int, int, void*)
                0x00000000c001eab4                PIT::PIT()
                0x00000000c001eab4                PIT::PIT()
 *fill*         0x00000000c001eb35        0xb 
 .text          0x00000000c001eb40       0x83 arch/i386/avx.32
                0x00000000c001eb40                avxDetect
                0x00000000c001eb6a                avxSave
                0x00000000c001eb7b                avxLoad
                0x00000000c001eb8c                avxInit
                0x00000000c001ebae                avxClose
                0x00000000c001ebaf                wouldSheSayYes
 *fill*         0x00000000c001ebc3        0xd 
 .text          0x00000000c001ebd0      0x2ec arch/i386/interrupt.32
                0x00000000c001ebd0                isr0
                0x00000000c001ebe0                isr1
                0x00000000c001ebea                isr2
                0x00000000c001ebf4                isr3
                0x00000000c001ebfe                isr4
                0x00000000c001ec08                isr5
                0x00000000c001ec12                isr6
                0x00000000c001ec1c                isr7
                0x00000000c001ec26                isr8
                0x00000000c001ec2e                isr9
                0x00000000c001ec38                isr10
                0x00000000c001ec40                isr11
                0x00000000c001ec48                isr12
                0x00000000c001ec50                isr13
                0x00000000c001ec6a                isr14
                0x00000000c001ec72                isr15
                0x00000000c001ec7c                isr16
                0x00000000c001ec86                isr17
                0x00000000c001ec90                isr18
                0x00000000c001ec9a                irq3
                0x00000000c001eca4                irq4
                0x00000000c001ecae                irq5
                0x00000000c001ecb8                irq6
                0x00000000c001ecc2                irq7
                0x00000000c001eccc                irq8
                0x00000000c001ecd6                irq9
                0x00000000c001ece0                irq10
                0x00000000c001ecea                irq11
                0x00000000c001ecf4                irq12
                0x00000000c001ecfe                irq13
                0x00000000c001ed08                irq14
                0x00000000c001ed12                irq15
                0x00000000c001ed1c                irq1
                0x00000000c001ed23                irq2
                0x00000000c001ed2a                isr96
                0x00000000c001ed31                irq0
                0x00000000c001ed36                int_common_stub
                0x00000000c001ed68                syscall_common_stub
                0x00000000c001ee6c                irq16
                0x00000000c001ee76                irq17
                0x00000000c001ee80                irq18
                0x00000000c001ee8a                irq19
                0x00000000c001ee94                irq20
                0x00000000c001ee9e                irq21
                0x00000000c001eea8                irq22
                0x00000000c001eeb2                irq23
 *fill*         0x00000000c001eebc        0x4 
 .text          0x00000000c001eec0       0x10 arch/i386/rdrand.32
                0x00000000c001eec0                i386GetRDRAND
 .text          0x00000000c001eed0       0x39 arch/i386/sse.32
                0x00000000c001eed0                absolutelyNoChanceInHell
                0x00000000c001eed0                sseDetect
                0x00000000c001eee8                sseSave
                0x00000000c001eef0                sseLoad
                0x00000000c001eef8                sseInit
                0x00000000c001ef08                sseClose
 *fill*         0x00000000c001ef09        0x7 
 .text          0x00000000c001ef10       0x49 arch/i386/x87.32
                0x00000000c001ef16                x87Detect
                0x00000000c001ef31                x87Save
                0x00000000c001ef38                x87Load
                0x00000000c001ef3f                x87Init
                0x00000000c001ef58                x87Close
 *fill*         0x00000000c001ef59        0x3 
 .text          0x00000000c001ef5c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001ef81        0x0 crtn.32
 *fill*         0x00000000c001ef81        0x3 
 .text          0x00000000c001ef84      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001ef84                __divdi3
 *fill*         0x00000000c001f0cf        0x1 
 .text          0x00000000c001f0d0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f0d0                __moddi3
 *fill*         0x00000000c001f24e        0x2 
 .text          0x00000000c001f250       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f250                __udivdi3
 *fill*         0x00000000c001f34f        0x1 
 .text          0x00000000c001f350      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f350                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f470        0x0
 .iplt          0x00000000c001f470        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f46a        0xf
 .init          0x00000000c001f46a        0x3 crti.32
                0x00000000c001f46a                _init
 .init          0x00000000c001f46d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f472        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f477        0x2 crtn.32

.fini           0x00000000c001f479        0xa
 .fini          0x00000000c001f479        0x3 crti.32
                0x00000000c001f479                _fini
 .fini          0x00000000c001f47c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f481        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f484       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f484       0x23 core/computer.32
                0x00000000c001f484                Computer::~Computer()
                0x00000000c001f484                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f4a8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f4a8       0x2a core/computer.32
                0x00000000c001f4a8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f4d2       0x21
 .text._Z10idleCommonv
                0x00000000c001f4d2       0x21 core/idle.32
                0x00000000c001f4d2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f4f4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f4f4        0x2 core/unixfile.32
                0x00000000c001f4f4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f4f4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f4f6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f4f6       0x42 core/unixfile.32
                0x00000000c001f4f6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f4f6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f538       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f538       0xd3 core/unixfile.32
                0x00000000c001f538                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f60c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f60c        0x7 core/unixfile.32
                0x00000000c001f60c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f614       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f614       0xa1 core/unixfile.32
                0x00000000c001f614                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f6b6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f6b6        0x8 core/unixfile.32
                0x00000000c001f6b6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f6be       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f6be       0x1a hal/device.32
                0x00000000c001f6be                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f6be                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f6d8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f6d8       0x2a hal/device.32
                0x00000000c001f6d8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f702       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f702       0xdc hal/device.32
                0x00000000c001f702                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f7de       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f7de       0x42 hal/device.32
                0x00000000c001f7de                LinkedList<Device>::LinkedList()
                0x00000000c001f7de                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f820       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f820       0x1c hal/timer.32
                0x00000000c001f820                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f83c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f83c        0x7 hal/timer.32
                0x00000000c001f83c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f844       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f844       0xbc hal/timer.32
                0x00000000c001f844                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f900       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f900       0xda hal/timer.32
                0x00000000c001f900                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f9dc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f9dc       0x23 hw/acpi.32
                0x00000000c001f9dc                ACPI::~ACPI()
                0x00000000c001f9dc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fa00       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fa00       0x2a hw/acpi.32
                0x00000000c001fa00                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fa2c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fa2c        0x2 hw/acpi.32
                0x00000000c001fa2c                LinkedList<Device>::~LinkedList()
                0x00000000c001fa2c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fa30       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fa30       0x1c hw/acpi.32
                0x00000000c001fa30                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fa4c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fa4c        0x7 hw/acpi.32
                0x00000000c001fa4c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fa54       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fa54       0xb8 hw/acpi.32
                0x00000000c001fa54                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001fb0c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fb0c       0x23 hw/cpu.32
                0x00000000c001fb0c                CPU::~CPU()
                0x00000000c001fb0c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fb30       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fb30       0x2a hw/cpu.32
                0x00000000c001fb30                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fb5c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fb5c        0x8 sys/kill.32
                0x00000000c001fb5c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fb64        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fb64        0x2 thr/prcssthr.32
                0x00000000c001fb64                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fb64                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fb68       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fb68       0x49 thr/prcssthr.32
                0x00000000c001fb68                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fb68                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fbb4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fbb4       0x42 thr/prcssthr.32
                0x00000000c001fbb4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fbb4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fbf6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fbf6       0x23 hw/bus/pci.32
                0x00000000c001fbf6                PCI::~PCI()
                0x00000000c001fbf6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fc1a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fc1a       0x2a hw/bus/pci.32
                0x00000000c001fc1a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fc44       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fc44       0x23 hw/diskctrl/ide.32
                0x00000000c001fc44                IDE::~IDE()
                0x00000000c001fc44                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fc68       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fc68       0x2a hw/diskctrl/ide.32
                0x00000000c001fc68                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001fc92       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001fc92       0x23 hw/diskctrl/satabus.32
                0x00000000c001fc92                SATABus::~SATABus()
                0x00000000c001fc92                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001fcb6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001fcb6       0x2a hw/diskctrl/satabus.32
                0x00000000c001fcb6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001fce0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fce0       0x23 hw/diskphys/ata.32
                0x00000000c001fce0                ATA::~ATA()
                0x00000000c001fce0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fd04       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fd04       0x2a hw/diskphys/ata.32
                0x00000000c001fd04                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fd2e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fd2e       0x23 hw/diskphys/atapi.32
                0x00000000c001fd2e                ATAPI::~ATAPI()
                0x00000000c001fd2e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fd52       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fd52       0x2a hw/diskphys/atapi.32
                0x00000000c001fd52                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001fd7c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001fd7c       0x23 hw/diskphys/sata.32
                0x00000000c001fd7c                SATA::~SATA()
                0x00000000c001fd7c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001fda0       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001fda0       0x2a hw/diskphys/sata.32
                0x00000000c001fda0                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001fdca       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001fdca       0x23 hw/diskphys/satapi.32
                0x00000000c001fdca                SATAPI::~SATAPI()
                0x00000000c001fdca                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001fdee       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001fdee       0x2a hw/diskphys/satapi.32
                0x00000000c001fdee                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001fe18       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001fe18       0x23 hw/intctrl/apic.32
                0x00000000c001fe18                IOAPIC::~IOAPIC()
                0x00000000c001fe18                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001fe3c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001fe3c       0x2a hw/intctrl/apic.32
                0x00000000c001fe3c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001fe68       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001fe68       0x23 hw/timer/apictimer.32
                0x00000000c001fe68                APICTimer::~APICTimer()
                0x00000000c001fe68                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001fe8c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001fe8c       0x2a hw/timer/apictimer.32
                0x00000000c001fe8c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001feb8       0x23
 .text._ZN3PITD2Ev
                0x00000000c001feb8       0x23 hw/timer/pit.32
                0x00000000c001feb8                PIT::~PIT()
                0x00000000c001feb8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001fedc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001fedc       0x2a hw/timer/pit.32
                0x00000000c001fedc                PIT::~PIT()

.rodata         0x00000000c001ff06     0x318a
                0x00000000c001ff06                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001ff06        0x2 
 .ctors         0x00000000c001ff08        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001ff0c        0x4 core/unixfile.32
 .ctors         0x00000000c001ff10        0x4 thr/prcssthr.32
 .ctors         0x00000000c001ff14        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ff18                end_ctors = .
                0x00000000c001ff18                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001ff18        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001ff1c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ff1c                __DTOR_END__
                0x00000000c001ff20                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001ff20        0x0 
 .rodata        0x00000000c001ff20      0x101 acpica/utclib.32
                0x00000000c001ff20                AcpiGbl_Ctypes
 *fill*         0x00000000c0020021        0x3 
 .rodata        0x00000000c0020024       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002003c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020086       0x1a 
 .rodata        0x00000000c00200a0       0xed fs/fat/ff.32
 *fill*         0x00000000c002018d       0x13 
 .rodata        0x00000000c00201a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00205a0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002060f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020724       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c002078c       0x2c core/computer.32
                0x00000000c002078c                vtable for Computer
 .rodata.str1.4
                0x00000000c00207b8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00207e8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00207f4       0x17 core/main.32
 *fill*         0x00000000c002080b        0x1 
 .rodata.str1.4
                0x00000000c002080c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c00208b1       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020909       0x39 core/pipe.32
 *fill*         0x00000000c0020942        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020944       0x1c core/pipe.32
                0x00000000c0020944                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020960       0x2b core/terminal.32
 *fill*         0x00000000c002098b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c002098c       0x1c core/terminal.32
                0x00000000c002098c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00209a8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00209ca       0x15 core/unixfile.32
 *fill*         0x00000000c00209df        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00209e0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020a2b        0x8 core/unixfile.32
 *fill*         0x00000000c0020a33        0x1 
 .rodata.str1.4
                0x00000000c0020a34       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020a54       0x1c core/unixfile.32
                0x00000000c0020a54                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020a70       0x1c core/unixfile.32
                0x00000000c0020a70                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020a8c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020d20      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020e46       0x33 coreobjs/c++.32
 *fill*         0x00000000c0020e79        0x3 
 .rodata        0x00000000c0020e7c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020fcc      0x169 dbg/usban.32
 *fill*         0x00000000c0021135        0x3 
 .rodata.str1.4
                0x00000000c0021138      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002126f      0x120 fs/symlink.32
                                        0x12c (size before relaxing)
 .rodata.str1.1
                0x00000000c002138f       0x26 fs/vfs.32
                                         0x28 (size before relaxing)
 *fill*         0x00000000c00213b5        0x3 
 .rodata._ZTV10Filesystem
                0x00000000c00213b8       0x6c fs/vfs.32
                0x00000000c00213b8                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021424       0x1c fs/vfs.32
                0x00000000c0021424                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021440       0x1c fs/vfs.32
                0x00000000c0021440                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002145c       0x2c hal/bus.32
                0x00000000c002145c                vtable for Bus
 .rodata.str1.1
                0x00000000c0021488       0x1e hal/clock.32
 *fill*         0x00000000c00214a6        0x2 
 .rodata._ZTV5Clock
                0x00000000c00214a8       0x3c hal/clock.32
                0x00000000c00214a8                vtable for Clock
 *fill*         0x00000000c00214e4       0x1c 
 .rodata        0x00000000c0021500       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021530       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021588       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021588       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021588       0x2c hal/device.32
                0x00000000c0021588                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00215b4       0x2c hal/device.32
                0x00000000c00215b4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00215e0       0x2c hal/diskctrl.32
                0x00000000c00215e0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002160c       0x38 hal/diskphys.32
                0x00000000c002160c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021644       0x3e hal/intctrl.32
 *fill*         0x00000000c0021682        0x2 
 .rodata.str1.4
                0x00000000c0021684       0x5d hal/intctrl.32
 .rodata        0x00000000c00216e1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021734       0x34 hal/keybrd.32
                0x00000000c0021734                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021768       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00217ac       0x2c hal/logidisk.32
                0x00000000c00217ac                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00217d8       0x2c hal/mouse.32
                0x00000000c00217d8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021804       0x34 hal/nic.32
                0x00000000c0021804                vtable for NIC
 .rodata.str1.1
                0x00000000c0021838        0xb hal/partition.32
 *fill*         0x00000000c0021843        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021844       0x44 hal/serial.32
                0x00000000c0021844                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021888       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021888        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021888       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021888       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021888       0x30 hal/timer.32
                0x00000000c0021888                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00218b8       0x10 hal/vcache.32
                0x00000000c00218b8                vtable for VCache
 .rodata.str1.1
                0x00000000c00218c8       0x93 hal/video.32
 *fill*         0x00000000c002195b        0x1 
 .rodata._ZTV5Video
                0x00000000c002195c       0x4c hal/video.32
                0x00000000c002195c                vtable for Video
 .rodata.str1.4
                0x00000000c00219a8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021a43      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021b99       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021b99        0x8 hw/acpi.32
 *fill*         0x00000000c0021b99        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021b9c       0x2c hw/acpi.32
                0x00000000c0021b9c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021bc8      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0021d43        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021d44       0x2c hw/cpu.32
                0x00000000c0021d44                vtable for CPU
 .rodata.str1.1
                0x00000000c0021d70       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021db0       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021dec       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0021e7d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0021f46       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021f8e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0021fb9       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002202f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022074        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002207e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002209f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022135       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022189       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00221b5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022381       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00223d8      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00224e8       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00224e8       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00224e8       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00224e8        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00224e8       0xc2 vm86/vm8086.32
 *fill*         0x00000000c00225aa        0x2 
 .rodata        0x00000000c00225ac       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00225dc      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c002277b        0x1 
 .rodata.str1.4
                0x00000000c002277c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c00227ef       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022804       0x3c arch/i386/rtc.32
                0x00000000c0022804                vtable for RTC
 .rodata.str1.1
                0x00000000c0022840       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022881        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022884       0x6c fs/fat/vfslink.32
                0x00000000c0022884                vtable for FAT
 .rodata.str1.1
                0x00000000c00228f0       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00228f0      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022a28       0x6c fs/iso9660/vfslink.32
                0x00000000c0022a28                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022a94       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022ad8       0x34 hal/sound/sndcard.32
                0x00000000c0022ad8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022b0c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022b4b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022b83       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022c24       0x2c hw/bus/pci.32
                0x00000000c0022c24                vtable for PCI
 .rodata.str1.1
                0x00000000c0022c50       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022cd7        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022cd8       0x2c hw/diskctrl/ide.32
                0x00000000c0022cd8                vtable for IDE
 .rodata.str1.4
                0x00000000c0022d04       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022d28       0x2c hw/diskctrl/satabus.32
                0x00000000c0022d28                vtable for SATABus
 .rodata.str1.1
                0x00000000c0022d54       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0022d66        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022d68       0x38 hw/diskphys/ata.32
                0x00000000c0022d68                vtable for ATA
 .rodata.str1.1
                0x00000000c0022da0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022dad        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0022db0       0x38 hw/diskphys/atapi.32
                0x00000000c0022db0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022de8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0022e64       0x38 hw/diskphys/sata.32
                0x00000000c0022e64                vtable for SATA
 .rodata.str1.1
                0x00000000c0022e9c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0022f86        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0022f88       0x38 hw/diskphys/satapi.32
                0x00000000c0022f88                vtable for SATAPI
 .rodata        0x00000000c0022fc0        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0022fc8       0x2c hw/intctrl/apic.32
                0x00000000c0022fc8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0022ff4       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002300f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023010       0x30 hw/timer/apictimer.32
                0x00000000c0023010                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023040       0x1d hw/timer/pit.32
 *fill*         0x00000000c002305d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023060       0x30 hw/timer/pit.32
                0x00000000c0023060                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023090      0x7b1
 *(.data)
 .data          0x00000000c0023090        0x0 crti.32
 .data          0x00000000c0023090        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023090                __dso_handle
 .data          0x00000000c0023094        0x0 acpica/utclib.32
 .data          0x00000000c0023094        0x0 core/malloc.32
 .data          0x00000000c0023094        0x0 libk/ctype.32
 .data          0x00000000c0023094        0x0 libk/string.32
 .data          0x00000000c0023094        0x0 fs/fat/diskio.32
 .data          0x00000000c0023094        0x0 fs/fat/ff.32
 .data          0x00000000c0023094        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023094        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023094        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023094        0x0 core/computer.32
 .data          0x00000000c0023094        0x0 core/gdt.32
 .data          0x00000000c0023094        0x0 core/idle.32
 .data          0x00000000c0023094        0x0 core/idt.32
 .data          0x00000000c0023094        0x4 core/kheap.32
 .data          0x00000000c0023098        0x0 core/main.32
 .data          0x00000000c0023098        0x4 core/physmgr.32
                0x00000000c0023098                Phys::bitmap
 .data          0x00000000c002309c        0x0 core/pipe.32
 *fill*         0x00000000c002309c        0x4 
 .data          0x00000000c00230a0       0x60 core/terminal.32
                0x00000000c00230a0                VgaText::hiddenOut
                0x00000000c00230c0                ansiToVGAMappings
 .data          0x00000000c0023100        0x0 core/tss.32
 .data          0x00000000c0023100        0x4 core/unixfile.32
                0x00000000c0023100                UnixFile::nextFd
 .data          0x00000000c0023104       0x15 core/virtmgr.32
                0x00000000c0023104                Virt::pageAllocPtr
                0x00000000c0023108                Virt::bitmap
                0x00000000c002310c                Virt::swapfileSectorsPerPage
                0x00000000c0023110                Virt::swapfileLength
                0x00000000c0023114                Virt::swapfileSector
                0x00000000c0023118                Virt::swapfileDrive
 *fill*         0x00000000c0023119        0x3 
 .data          0x00000000c002311c        0x4 coreobjs/c++.32
                0x00000000c002311c                __stack_chk_guard
 .data          0x00000000c0023120        0x0 dbg/kconsole.32
 .data          0x00000000c0023120       0x28 dbg/usban.32
                0x00000000c0023120                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023148        0x0 fs/symlink.32
 .data          0x00000000c0023148        0x0 fs/vfs.32
 .data          0x00000000c0023148        0x0 hal/bus.32
 .data          0x00000000c0023148        0x0 hal/buzzer.32
 .data          0x00000000c0023148        0x0 hal/clock.32
 .data          0x00000000c0023148        0x0 hal/device.32
 .data          0x00000000c0023148        0x0 hal/diskctrl.32
 .data          0x00000000c0023148        0x0 hal/diskphys.32
 .data          0x00000000c0023148        0x0 hal/fpu.32
 .data          0x00000000c0023148        0x0 hal/intctrl.32
 .data          0x00000000c0023148        0x0 hal/keybrd.32
 .data          0x00000000c0023148        0x0 hal/logidisk.32
 .data          0x00000000c0023148        0x0 hal/mouse.32
 .data          0x00000000c0023148        0x0 hal/nic.32
 .data          0x00000000c0023148        0x0 hal/partition.32
 .data          0x00000000c0023148        0x0 hal/serial.32
 .data          0x00000000c0023148        0x0 hal/timer.32
 .data          0x00000000c0023148        0x0 hal/vcache.32
 .data          0x00000000c0023148        0x0 hal/video.32
 .data          0x00000000c0023148       0x10 hw/acpi.32
                0x00000000c0023148                legacyIRQRemaps
 .data          0x00000000c0023158        0x4 hw/cpu.32
                0x00000000c0023158                lastCode
 .data          0x00000000c002315c        0x0 krnl/atexit.32
 *fill*         0x00000000c002315c        0x4 
 .data          0x00000000c0023160      0x142 krnl/bootmsg.32
                0x00000000c0023160                KiSplashScreen
 .data          0x00000000c00232a2        0x0 krnl/compat.32
 *fill*         0x00000000c00232a2       0x1e 
 .data          0x00000000c00232c0       0x4d krnl/env.32
                0x00000000c00232c0                defaultSysEnv
 .data          0x00000000c002330d        0x0 krnl/inlines.32
 .data          0x00000000c002330d        0x0 krnl/panic.32
 .data          0x00000000c002330d        0x0 krnl/powctrl.32
 .data          0x00000000c002330d        0x0 krnl/random.32
 .data          0x00000000c002330d        0x0 krnl/resolve.32
 *fill*         0x00000000c002330d       0x13 
 .data          0x00000000c0023320       0x4c krnl/signal.32
                0x00000000c0023320                KiDefaultSignalHandlers
 *fill*         0x00000000c002336c       0x14 
 .data          0x00000000c0023380       0xf0 krnl/syscalls.32
                0x00000000c0023380                systemCallHandlers
 .data          0x00000000c0023470        0x0 net/ethernet.32
 *fill*         0x00000000c0023470       0x10 
 .data          0x00000000c0023480      0x100 reg/cm.32
                0x00000000c0023480                CmComponents
 .data          0x00000000c0023580        0x0 reg/registry.32
 .data          0x00000000c0023580        0x0 sys/eject.32
 .data          0x00000000c0023580        0x0 sys/exit.32
 .data          0x00000000c0023580        0x0 sys/getcwd.32
 .data          0x00000000c0023580        0x0 sys/getpid.32
 .data          0x00000000c0023580        0x0 sys/getramdata.32
 .data          0x00000000c0023580        0x0 sys/getvgaptr.32
 .data          0x00000000c0023580        0x0 sys/kill.32
 .data          0x00000000c0023580        0x0 sys/loaddll.32
 .data          0x00000000c0023580        0x0 sys/read.32
 .data          0x00000000c0023580        0x0 sys/registersignal.32
 .data          0x00000000c0023580        0x0 sys/registry.32
 .data          0x00000000c0023580        0x0 sys/sbrk.32
 .data          0x00000000c0023580        0x0 sys/setcwd.32
 .data          0x00000000c0023580        0x0 sys/settime.32
 .data          0x00000000c0023580        0x0 sys/timezone.32
 .data          0x00000000c0023580        0x0 sys/truncate.32
 .data          0x00000000c0023580        0x0 sys/write.32
 .data          0x00000000c0023580        0x0 sys/wsbe.32
 .data          0x00000000c0023580        0x0 sys/yield.32
 .data          0x00000000c0023580        0x0 thr/elf.32
 .data          0x00000000c0023580        0x4 thr/prcssthr.32
                0x00000000c0023580                Thr::nextPID
 .data          0x00000000c0023584        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023584       0x1c 
 .data          0x00000000c00235a0      0x2a0 arch/i386/hal.32
                0x00000000c00235a0                exceptionNames
 .data          0x00000000c0023840        0x0 arch/i386/pic.32
 .data          0x00000000c0023840        0x0 arch/i386/rtc.32
 .data          0x00000000c0023840        0x0 arch/i386/vga.32
 .data          0x00000000c0023840        0x0 fs/fat/vfslink.32
 .data          0x00000000c0023840        0x0 fs/iso9660/helper.32
 .data          0x00000000c0023840        0x1 fs/iso9660/vfslink.32
                0x00000000c0023840                recentDriveletter
 .data          0x00000000c0023841        0x0 hal/sound/sndcard.32
 .data          0x00000000c0023841        0x0 hal/sound/sndport.32
 .data          0x00000000c0023841        0x0 hw/bus/isa.32
 .data          0x00000000c0023841        0x0 hw/bus/pci.32
 .data          0x00000000c0023841        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0023841        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0023841        0x0 hw/diskphys/ata.32
 .data          0x00000000c0023841        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0023841        0x0 hw/diskphys/sata.32
 .data          0x00000000c0023841        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0023841        0x0 hw/intctrl/apic.32
 .data          0x00000000c0023841        0x0 hw/timer/apictimer.32
 .data          0x00000000c0023841        0x0 hw/timer/pit.32
 .data          0x00000000c0023841        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0023841        0x0 crtn.32
 .data          0x00000000c0023841        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0023841        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0023841        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0023841        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0023844        0x0
 .got           0x00000000c0023844        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0023844        0x0
 .got.plt       0x00000000c0023844        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0023844        0x0
 .igot.plt      0x00000000c0023844        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0023844        0x0
 .tm_clone_table
                0x00000000c0023844        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0023844        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0023841      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0023841        0x3 
 .eh_frame      0x00000000c0023844        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0023844        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0023844       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002389c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00238dc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0023948       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x5107
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0025fb4        0xc 
 .bss           0x00000000c0025fc0      0x444 fs/symlink.32
                0x00000000c0025fc0                KiNumWaitingRoomSymlinks
                0x00000000c0025fe0                KiNewlyCreatedIDs
                0x00000000c0026000                KiNewlyCreatedSymlinks
                0x00000000c0026400                KiBaseSymlinkID
 .bss           0x00000000c0026404        0x4 fs/vfs.32
                0x00000000c0026404                installedFilesystems
 .bss           0x00000000c0026408        0x0 hal/bus.32
 .bss           0x00000000c0026408        0x0 hal/buzzer.32
 .bss           0x00000000c0026408        0x8 hal/clock.32
                0x00000000c0026408                User::dstOn
                0x00000000c0026409                User::timezoneHalfHourOffset
                0x00000000c002640c                User::timezoneHourOffset
 .bss           0x00000000c0026410        0x0 hal/device.32
 .bss           0x00000000c0026410        0x0 hal/diskctrl.32
 .bss           0x00000000c0026410        0x0 hal/diskphys.32
 .bss           0x00000000c0026410        0x0 hal/fpu.32
 *fill*         0x00000000c0026410       0x10 
 .bss           0x00000000c0026420     0x2000 hal/intctrl.32
                0x00000000c0026420                INT_contexts
                0x00000000c0027420                INT_handlers
 .bss           0x00000000c0028420      0x429 hal/keybrd.32
                0x00000000c0028420                keyboardWaitingTaskList
                0x00000000c0028424                keyboardSetupYet
                0x00000000c0028428                guiKeyboardHandler
                0x00000000c0028440                keystates
 *fill*         0x00000000c0028849       0x17 
 .bss           0x00000000c0028860       0x88 hal/logidisk.32
                0x00000000c0028860                diskAssignments
                0x00000000c0028880                disks
 .bss           0x00000000c00288e8        0x4 hal/mouse.32
                0x00000000c00288e8                guiMouseHandler
 .bss           0x00000000c00288ec        0x0 hal/nic.32
 .bss           0x00000000c00288ec        0x0 hal/partition.32
 .bss           0x00000000c00288ec        0x0 hal/serial.32
 .bss           0x00000000c00288ec        0x4 hal/timer.32
                0x00000000c00288ec                milliTenthsSinceBoot
 .bss           0x00000000c00288f0        0x0 hal/vcache.32
 .bss           0x00000000c00288f0        0x4 hal/video.32
                0x00000000c00288f0                screen
 *fill*         0x00000000c00288f4        0xc 
 .bss           0x00000000c0028900      0x480 hw/acpi.32
                0x00000000c0028900                systemSleepFunction
                0x00000000c0028904                systemResetFunction
                0x00000000c0028908                systemShutdownFunction
                0x00000000c002890c                nextACPITable
                0x00000000c0028920                acpiTables
                0x00000000c0028b20                usingXSDT
                0x00000000c0028b24                MADTpointer
                0x00000000c0028b28                RSDTpointer
                0x00000000c0028b2c                RSDPpointer
                0x00000000c0028b30                nextAPICNMI
                0x00000000c0028b40                apicNMIInfo
                0x00000000c0028bc0                legacyIRQFlags
                0x00000000c0028be0                ioapicDiscoveryNumber
                0x00000000c0028c00                ioapicFoundInMADT
                0x00000000c0028c20                ioapicAddresses
                0x00000000c0028ca0                ioapicGSIBase
                0x00000000c0028d20                processorDiscoveryNumber
                0x00000000c0028d40                matchingAPICID
                0x00000000c0028d60                processorID
 .bss           0x00000000c0028d80       0x10 hw/cpu.32
                0x00000000c0028d80                lastD
                0x00000000c0028d84                lastC
                0x00000000c0028d88                lastB
                0x00000000c0028d8c                lastA
 *fill*         0x00000000c0028d90       0x10 
 .bss           0x00000000c0028da0       0xe0 krnl/atexit.32
                0x00000000c0028da0                KiNextAtexitHandler
                0x00000000c0028dc0                KiAtexitContexts
                0x00000000c0028e20                KiAtexitHandlers
 .bss           0x00000000c0028e80        0x0 krnl/bootmsg.32
 .bss           0x00000000c0028e80        0x0 krnl/compat.32
 .bss           0x00000000c0028e80        0x8 krnl/env.32
                0x00000000c0028e80                KeUserEnv
                0x00000000c0028e84                KeSystemEnv
 .bss           0x00000000c0028e88        0x0 krnl/inlines.32
 .bss           0x00000000c0028e88        0x1 krnl/panic.32
                0x00000000c0028e88                KeIsKernelInPanic
 *fill*         0x00000000c0028e89       0x17 
 .bss           0x00000000c0028ea0       0x48 krnl/powctrl.32
                0x00000000c0028ea0                powCtrlOnBattery
                0x00000000c0028ec0                currentPowerSettings
                0x00000000c0028ee4                secondsSinceLastUserIO
 .bss           0x00000000c0028ee8        0x8 krnl/random.32
                0x00000000c0028ee8                kiRandSeed
 .bss           0x00000000c0028ef0        0x0 krnl/resolve.32
 .bss           0x00000000c0028ef0        0x0 krnl/signal.32
 .bss           0x00000000c0028ef0        0x0 krnl/syscalls.32
 .bss           0x00000000c0028ef0        0x0 net/ethernet.32
 .bss           0x00000000c0028ef0        0x4 reg/cm.32
 .bss           0x00000000c0028ef4        0x0 reg/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/eject.32
 .bss           0x00000000c0028ef4        0x0 sys/exit.32
 .bss           0x00000000c0028ef4        0x0 sys/getcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/getpid.32
 .bss           0x00000000c0028ef4        0x0 sys/getramdata.32
 .bss           0x00000000c0028ef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c0028ef4        0x0 sys/kill.32
 .bss           0x00000000c0028ef4        0x0 sys/loaddll.32
 .bss           0x00000000c0028ef4        0x0 sys/read.32
 .bss           0x00000000c0028ef4        0x0 sys/registersignal.32
 .bss           0x00000000c0028ef4        0x0 sys/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/sbrk.32
 .bss           0x00000000c0028ef4        0x0 sys/setcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/settime.32
 .bss           0x00000000c0028ef4        0x0 sys/timezone.32
 .bss           0x00000000c0028ef4        0x0 sys/truncate.32
 .bss           0x00000000c0028ef4        0x0 sys/write.32
 .bss           0x00000000c0028ef4        0x0 sys/wsbe.32
 .bss           0x00000000c0028ef4        0x0 sys/yield.32
 *fill*         0x00000000c0028ef4        0xc 
 .bss           0x00000000c0028f00      0x7a4 thr/elf.32
                0x00000000c0028f00                Thr::driverLookupNext
                0x00000000c0028f20                Thr::driverLookupLen
                0x00000000c0029120                Thr::driverLookupAddr
                0x00000000c0029320                Thr::driverNameLookup
                0x00000000c0029520                Thr::kernelSymbols
                0x00000000c00295a0                Thr::kernelStringTable
                0x00000000c0029620                Thr::kernelSymbolTable
                0x00000000c00296a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00296a4        0x4 
 .bss           0x00000000c00296a8       0x68 thr/prcssthr.32
                0x00000000c00296a8                cleanerThread
                0x00000000c00296ac                weNeedTheCleanerToNotBlock
                0x00000000c00296b0                retValLockStuff
                0x00000000c00296b4                retValSchedLock
                0x00000000c00296b8                lockStuffLock
                0x00000000c00296bc                schedulerLock
                0x00000000c00296c0                taskSwitchesPostponedFlag
                0x00000000c00296c4                postponeTaskSwitchesCounter
                0x00000000c00296c8                irqDisableCounter
                0x00000000c00296cc                terminatedTaskList
                0x00000000c00296d8                sleepingTaskList
                0x00000000c00296e4                taskList
                0x00000000c00296f0                kernelProcess
 *fill*         0x00000000c0029710       0x10 
 .bss           0x00000000c0029720       0x40 vm86/vm8086.32
                0x00000000c0029720                Vm::vmRetV
                0x00000000c0029724                Vm::vmDone
                0x00000000c0029725                Vm::vmReady
                0x00000000c0029728                Vm::vm86Thread
                0x00000000c002972c                Vm::vmToHostCommsPtr
                0x00000000c0029740                Vm::vmToHostComms
 .bss           0x00000000c0029760       0x18 arch/i386/hal.32
                0x00000000c0029760                apic
                0x00000000c0029764                guiPanicHandler
                0x00000000c0029768                fpuOwner
                0x00000000c002976c                coproLoadFunc
                0x00000000c0029770                coproSaveFunc
                0x00000000c0029774                gpFaultIntercept
 .bss           0x00000000c0029778        0x0 arch/i386/pic.32
 .bss           0x00000000c0029778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002977a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002977a        0x6 
 .bss           0x00000000c0029780       0xf0 fs/fat/vfslink.32
                0x00000000c0029780                FAT::fats
                0x00000000c00297a0                FAT::vfsToFatRemaps
                0x00000000c0029820                fatToVFSRemaps
 .bss           0x00000000c0029870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0029870       0x10 
 .bss           0x00000000c0029880      0x820 fs/iso9660/vfslink.32
                0x00000000c0029880                iso9660Owner
                0x00000000c0029884                recentSector
                0x00000000c00298a0                recentBuffer
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002a0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002a0a0        0xd hw/bus/pci.32
                0x00000000c002a0a0                thePCI
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002a0ad        0x3 
 .bss           0x00000000c002a0b0        0x8 hw/diskphys/ata.32
                0x00000000c002a0b0                ataSectorsWritten
                0x00000000c002a0b4                ataSectorsRead
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002a0b8        0x8 
 .bss           0x00000000c002a0c0       0x41 hw/intctrl/apic.32
                0x00000000c002a0c0                noOfIOAPICs
                0x00000000c002a0e0                ioapics
                0x00000000c002a100                IOAPICsSetupYet
 .bss           0x00000000c002a101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002a101        0x3 
 .bss           0x00000000c002a104        0x4 hw/timer/pit.32
                0x00000000c002a104                pitFreq
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002a108        0x0 crtn.32
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002a108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002f20f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
