Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f9ba
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x8fc fs/symlink.32
                0x00000000c000aedc                KiDeinitialiseSymlinks(void*)
                0x00000000c000af6d                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000aff0                KiIsSymlinkRegistered(char const*)
                0x00000000c000b15a                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b301                KeCreateSymlink(char const*, char const*)
                0x00000000c000b43d                KeInitialiseSymlinks()
 .text          0x00000000c000b610      0xd7c fs/vfs.32
                0x00000000c000b610                File::read(unsigned long long, void*, int*)
                0x00000000c000b668                File::write(unsigned long long, void*, int*)
                0x00000000c000b6c0                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b718                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b746                File::isAtty()
                0x00000000c000b74a                Directory::isAtty()
                0x00000000c000b74e                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b754                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b75a                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b760                File::~File()
                0x00000000c000b760                File::~File()
                0x00000000c000b784                File::~File()
                0x00000000c000b7ae                Directory::~Directory()
                0x00000000c000b7ae                Directory::~Directory()
                0x00000000c000b7d2                Directory::~Directory()
                0x00000000c000b7fc                Filesystem::Filesystem()
                0x00000000c000b7fc                Filesystem::Filesystem()
                0x00000000c000b820                Filesystem::~Filesystem()
                0x00000000c000b820                Filesystem::~Filesystem()
                0x00000000c000b82e                Filesystem::~Filesystem()
                0x00000000c000b852                Fs::getcwd(Process*, char*, int)
                0x00000000c000b87c                Fs::initVFS()
                0x00000000c000b8a6                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000bad4                File::File(char const*, Process*, bool)
                0x00000000c000bad4                File::File(char const*, Process*, bool)
                0x00000000c000bbb2                File::File(char const*, Process*)
                0x00000000c000bbb2                File::File(char const*, Process*)
                0x00000000c000bbd0                File::open(FileOpenMode)
                0x00000000c000bc2e                File::close()
                0x00000000c000bc8e                File::seek(unsigned long long)
                0x00000000c000bce4                File::truncate(unsigned long long)
                0x00000000c000bd3a                File::tell(unsigned long long*)
                0x00000000c000bd8a                File::rewind()
                0x00000000c000bd9e                File::unlink()
                0x00000000c000bdea                File::rename(char const*)
                0x00000000c000be38                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000be94                File::exists()
                0x00000000c000bed2                File::stat(unsigned long long*, bool*)
                0x00000000c000bf33                Fs::setcwd(Process*, char*)
                0x00000000c000c092                Directory::Directory(char const*, Process*)
                0x00000000c000c092                Directory::Directory(char const*, Process*)
                0x00000000c000c15a                Directory::open()
                0x00000000c000c1b6                Directory::close()
                0x00000000c000c216                Directory::unlink()
                0x00000000c000c262                Directory::rename(char const*)
                0x00000000c000c2b0                Directory::exists()
                0x00000000c000c2ee                Directory::read(dirent*)
                0x00000000c000c33a                Directory::create()
                0x00000000c000c386                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c38c       0x86 hal/bus.32
                0x00000000c000c38c                Bus::Bus(char const*)
                0x00000000c000c38c                Bus::Bus(char const*)
                0x00000000c000c3c4                Bus::~Bus()
                0x00000000c000c3c4                Bus::~Bus()
                0x00000000c000c3e8                Bus::~Bus()
 .text          0x00000000c000c412       0x96 hal/buzzer.32
                0x00000000c000c412                beepThread(void*)
                0x00000000c000c44f                Krnl::beep(int, int, bool)
 .text          0x00000000c000c4a8      0x465 hal/clock.32
                0x00000000c000c4a8                User::loadClockSettings(int)
                0x00000000c000c4fa                Clock::Clock(char const*)
                0x00000000c000c4fa                Clock::Clock(char const*)
                0x00000000c000c530                Clock::~Clock()
                0x00000000c000c530                Clock::~Clock()
                0x00000000c000c554                Clock::~Clock()
                0x00000000c000c57e                Clock::timeInSecondsLocal()
                0x00000000c000c5c6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c61f                datetimeToSeconds(datetime_t)
                0x00000000c000c744                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c7a4                secondsToDatetime(unsigned long long)
                0x00000000c000c8e8                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c90d        0x1 
 .text          0x00000000c000c90e      0x464 hal/device.32
                0x00000000c000c90e                Device::hibernate()
                0x00000000c000c910                Device::wake()
                0x00000000c000c912                Device::detect()
                0x00000000c000c914                Device::disableLegacy()
                0x00000000c000c916                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c918                DriverlessDevice::close(int, int, void*)
                0x00000000c000c91c                DriverlessDevice::detect()
                0x00000000c000c91e                DriverlessDevice::open(int, int, void*)
                0x00000000c000c932                Device::~Device()
                0x00000000c000c932                Device::~Device()
                0x00000000c000c940                Device::~Device()
                0x00000000c000c968                Device::findAndLoadDriver()
                0x00000000c000c976                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c99c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c9dc                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ca06                Device::getParent()
                0x00000000c000ca12                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ca30                Device::addChild(Device*)
                0x00000000c000ca74                Device::removeAllChildren()
                0x00000000c000caba                Device::hibernateAll()
                0x00000000c000caea                Device::wakeAll()
                0x00000000c000cb1a                Device::detectAll()
                0x00000000c000cb4a                Device::disableLegacyAll()
                0x00000000c000cb4c                Device::loadDriversForAll()
                0x00000000c000cb4e                Device::closeAll()
                0x00000000c000cb84                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cbba                Device::setName(char const*)
                0x00000000c000cbc8                Device::Device(char const*)
                0x00000000c000cbc8                Device::Device(char const*)
                0x00000000c000ccc4                Device::getName()
                0x00000000c000ccce                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000ccce                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cd04                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cd48                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000cd72        0x2 
 .text          0x00000000c000cd74       0x86 hal/diskctrl.32
                0x00000000c000cd74                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd74                HardDiskController::HardDiskController(char const*)
                0x00000000c000cdac                HardDiskController::~HardDiskController()
                0x00000000c000cdac                HardDiskController::~HardDiskController()
                0x00000000c000cdd0                HardDiskController::~HardDiskController()
 .text          0x00000000c000cdfa       0xe2 hal/diskphys.32
                0x00000000c000cdfa                PhysicalDisk::eject()
                0x00000000c000cdfe                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cdfe                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ce66                PhysicalDisk::startCache()
                0x00000000c000ce8e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce8e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ceb2                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cedc        0x0 hal/fpu.32
 .text          0x00000000c000cedc      0x360 hal/intctrl.32
                0x00000000c000cedc                int_handler
                0x00000000c000cf66                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cfb0                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d0f3                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d127                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d19d                setupINTS()
                0x00000000c000d1fa                convertLegacyIRQNumber(int)
 .text          0x00000000c000d23c      0x8be hal/keybrd.32
                0x00000000c000d23c                startGUI(void*)
                0x00000000c000d2aa                startGUIVESA(void*)
                0x00000000c000d318                sendKeyToTerminal(unsigned char)
                0x00000000c000d3f3                sendKeyboardToken(KeyboardToken)
                0x00000000c000d8dd                clearInternalKeybuffer(VgaText*)
                0x00000000c000d912                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000da70                Keyboard::Keyboard(char const*)
                0x00000000c000da70                Keyboard::Keyboard(char const*)
                0x00000000c000daac                Keyboard::~Keyboard()
                0x00000000c000daac                Keyboard::~Keyboard()
                0x00000000c000dad0                Keyboard::~Keyboard()
 .text          0x00000000c000dafa      0x3f8 hal/logidisk.32
                0x00000000c000dafa                LogicalDisk::close(int, int, void*)
                0x00000000c000dafe                LogicalDisk::~LogicalDisk()
                0x00000000c000dafe                LogicalDisk::~LogicalDisk()
                0x00000000c000db22                LogicalDisk::~LogicalDisk()
                0x00000000c000db4c                LogicalDisk::open(int, int, void*)
                0x00000000c000db60                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000db98                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000dbde                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dbde                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc9e                LogicalDisk::assignDriveLetter()
                0x00000000c000dd58                LogicalDisk::mount()
                0x00000000c000dda0                LogicalDisk::unmount()
                0x00000000c000ddb0                LogicalDisk::eject()
                0x00000000c000ddc4                LogicalDisk::unassignDriveLetter()
                0x00000000c000de1a                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000de86                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000def2        0x2 
 .text          0x00000000c000def4       0x86 hal/mouse.32
                0x00000000c000def4                Mouse::Mouse(char const*)
                0x00000000c000def4                Mouse::Mouse(char const*)
                0x00000000c000df2c                Mouse::~Mouse()
                0x00000000c000df2c                Mouse::~Mouse()
                0x00000000c000df50                Mouse::~Mouse()
 .text          0x00000000c000df7a       0x90 hal/nic.32
                0x00000000c000df7a                NIC::getMAC()
                0x00000000c000df80                NIC::write(int, unsigned char*, int*)
                0x00000000c000df86                NIC::NIC(char const*)
                0x00000000c000df86                NIC::NIC(char const*)
                0x00000000c000dfbc                NIC::~NIC()
                0x00000000c000dfbc                NIC::~NIC()
                0x00000000c000dfe0                NIC::~NIC()
 .text          0x00000000c000e00a      0x33b hal/partition.32
                0x00000000c000e00a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e0b2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e345        0x3 
 .text          0x00000000c000e348       0x86 hal/serial.32
                0x00000000c000e348                Serial::Serial(char const*)
                0x00000000c000e348                Serial::Serial(char const*)
                0x00000000c000e380                Serial::~Serial()
                0x00000000c000e380                Serial::~Serial()
                0x00000000c000e3a4                Serial::~Serial()
 *fill*         0x00000000c000e3ce        0x2 
 .text          0x00000000c000e3d0      0x234 hal/timer.32
                0x00000000c000e3d0                Timer::Timer(char const*)
                0x00000000c000e3d0                Timer::Timer(char const*)
                0x00000000c000e408                Timer::~Timer()
                0x00000000c000e408                Timer::~Timer()
                0x00000000c000e42c                Timer::~Timer()
                0x00000000c000e456                Timer::read()
                0x00000000c000e461                setupTimer(int)
                0x00000000c000e49c                timerHandler(unsigned int)
 .text          0x00000000c000e604      0x450 hal/vcache.32
                0x00000000c000e604                VCache::VCache(PhysicalDisk*)
                0x00000000c000e604                VCache::VCache(PhysicalDisk*)
                0x00000000c000e774                VCache::invalidateReadBuffer()
                0x00000000c000e784                VCache::writeWriteBuffer()
                0x00000000c000e7d0                VCache::~VCache()
                0x00000000c000e7d0                VCache::~VCache()
                0x00000000c000e828                VCache::~VCache()
                0x00000000c000e850                VCache::write(unsigned long long, int, void*)
                0x00000000c000e94a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ea54      0x4d9 hal/video.32
                0x00000000c000ea54                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000eaa0                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000eb10                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eba0                Video::clearScreen(unsigned int)
                0x00000000c000ebd4                Video::putpixel(int, int, unsigned int)
                0x00000000c000ebe2                Video::readPixelApprox(int, int)
                0x00000000c000ebf6                Video::Video(char const*)
                0x00000000c000ebf6                Video::Video(char const*)
                0x00000000c000ec2c                Video::~Video()
                0x00000000c000ec2c                Video::~Video()
                0x00000000c000ec50                Video::~Video()
                0x00000000c000ec7a                Video::isMonochrome()
                0x00000000c000ec86                Video::getWidth()
                0x00000000c000ec92                Video::getHeight()
                0x00000000c000ec9e                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ed5a                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000eec2                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ef2d        0x3 
 .text          0x00000000c000ef30     0x12d2 hw/acpi.32
                0x00000000c000ef30                ACPI::close(int, int, void*)
                0x00000000c000efe4                findRSDP()
                0x00000000c000f07c                loadACPITables(unsigned char*)
                0x00000000c000f2e8                findRSDT(unsigned char*)
                0x00000000c000f440                findDataTable(unsigned char*, char*)
                0x00000000c000f4c0                scanMADT()
                0x00000000c000f978                ACPI::ACPI()
                0x00000000c000f978                ACPI::ACPI()
                0x00000000c000f9cc                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fac8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fb94                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fb9c                ACPI::detectPCI()
                0x00000000c000fdbc                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fe04                ACPI::sleep()
                0x00000000c000fe20                ACPI::open(int, int, void*)
 .text          0x00000000c0010202      0xbc5 hw/cpu.32
                0x00000000c0010202                CPU::close(int, int, void*)
                0x00000000c0010206                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0010222                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c001023a                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c00102ae                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0010332                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010360                CPU::cpuidCheckECX(unsigned int)
                0x00000000c001038e                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00103bc                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00103ea                CPU::CPU()
                0x00000000c00103ea                CPU::CPU()
                0x00000000c0010478                CPU::displayFeatures()
                0x00000000c001047a                CPU::detectFeatures()
                0x00000000c0010b4e                CPU::setupSMEP()
                0x00000000c0010b5a                CPU::setupUMIP()
                0x00000000c0010b64                CPU::setupTSC()
                0x00000000c0010b6e                CPU::setupLargePages()
                0x00000000c0010b78                CPU::setupPAT()
                0x00000000c0010bb4                CPU::setupMTRR()
                0x00000000c0010bb6                CPU::setupGlobalPages()
                0x00000000c0010bc0                CPU::allowUsermodeDataAccess()
                0x00000000c0010bd2                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010be4                CPU::setupSMAP()
                0x00000000c0010bf2                CPU::setupFeatures()
                0x00000000c0010cbe                CPU::open(int, int, void*)
 .text          0x00000000c0010dc7       0xb6 krnl/atexit.32
                0x00000000c0010dc7                KeInitialiseAtexit()
                0x00000000c0010de6                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010e1a                KeExecuteAtexit()
 .text          0x00000000c0010e7d       0xdf krnl/bootmsg.32
                0x00000000c0010e7d                KeDisplaySplashScreen()
                0x00000000c0010ef9                KeSetBootMessage(char const*)
 .text          0x00000000c0010f5c       0x1d krnl/compat.32
                0x00000000c0010f5c                Krnl::handlePowerButton()
                0x00000000c0010f6c                Krnl::handleSleepButton()
 .text          0x00000000c0010f79       0x2b krnl/crc32.32
                0x00000000c0010f79                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010fa4      0x5bf krnl/env.32
                0x00000000c0010fa4                EnvVarContainer::getEnv(char const*)
                0x00000000c0010fe2                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00110a4                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00110a6                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00112ca                EnvVarContainer::__loadSystem()
                0x00000000c00112e4                EnvVarContainer::__loadUser()
                0x00000000c00112e6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00112e6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011308                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011308                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011338                KeGetEnv(Process*, char const*)
                0x00000000c001139d                KeSetEnvSystem(char const*, char const*)
                0x00000000c00113b7                KeSetEnvUser(char const*, char const*)
                0x00000000c00113d6                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00113e9                KeDeleteEnvSystem(char const*)
                0x00000000c00113ea                KeDeleteEnvUser(char const*)
                0x00000000c00113eb                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00113ec                KeNewProcessEnv(Process*)
                0x00000000c001140e                KeCopyProcessEnv(Process*, Process*)
                0x00000000c001145a                KeLoadSystemEnv()
                0x00000000c0011488                KeLoadUserEnv()
                0x00000000c00114ae                KeFlushEnv()
                0x00000000c00114af                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00114cf                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011563       0x94 krnl/inlines.32
                0x00000000c0011563                CPU::current()
                0x00000000c001156f                operator new(unsigned long)
                0x00000000c0011574                operator delete(void*)
                0x00000000c0011579                disableIRQs()
                0x00000000c001157b                enableIRQs()
                0x00000000c001157d                lockScheduler()
                0x00000000c0011585                unlockScheduler()
                0x00000000c0011594                lockStuff()
                0x00000000c00115a2                unlockStuff()
                0x00000000c00115dc                Virt::getAKernelVAS()
                0x00000000c00115e2                __not_memcpy
 .text          0x00000000c00115f7        0xc krnl/panic.32
                0x00000000c00115f7                KePanic(char const*)
 .text          0x00000000c0011603      0x142 krnl/powctrl.32
                0x00000000c0011603                KePowerThread(void*)
                0x00000000c0011631                KeChangePowerSettings(PowerSettings)
                0x00000000c0011647                KeUserIOReceived()
                0x00000000c0011652                KeHandlePowerButton()
                0x00000000c0011687                KeHandleSleepButton()
                0x00000000c00116bc                KeSetupPowerManager()
 .text          0x00000000c0011745       0x9b krnl/random.32
                0x00000000c0011745                KeRand()
                0x00000000c0011785                KeSeedRand(unsigned int)
                0x00000000c00117ae                KeInitRand()
 .text          0x00000000c00117e0      0x1bc krnl/resolve.32
                0x00000000c00117e0                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c001199c      0x31f krnl/signal.32
                0x00000000c001199c                KiSigKill(int)
                0x00000000c00119b0                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00119b1                KiDefaultSignalHandlerPause(int)
                0x00000000c00119dd                KiDefaultSignalHandlerResume(int)
                0x00000000c0011a09                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011a0e                KeInitSignals()
                0x00000000c0011a5d                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011a93                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011b10                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011c07                KiCheckSignalZ
                0x00000000c0011c49                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011c84                KiFinishSignalZ
 .text          0x00000000c0011cbb      0xe32 krnl/syscalls.32
                0x00000000c0011cbb                SysSeekDir(regs*)
                0x00000000c0011cc0                SysTellDir(regs*)
                0x00000000c0011cc5                SysVerify(regs*)
                0x00000000c0011ccf                SysGetArgc(regs*)
                0x00000000c0011ce3                SysTTYName(regs*)
                0x00000000c0011ceb                SysFormatDisk(regs*)
                0x00000000c0011d52                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011da6                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011dff                SysShutdown(regs*)
                0x00000000c0011e8c                SysRealpath(regs*)
                0x00000000c0011eda                SysReadDir(regs*)
                0x00000000c0011f5a                SysIsATTY(regs*)
                0x00000000c0011fb4                SysSeek(regs*)
                0x00000000c001200e                SysTell(regs*)
                0x00000000c001207b                SysSize(regs*)
                0x00000000c00120ee                SysSizeFromFilename(regs*)
                0x00000000c0012222                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0012356                SysClose(regs*)
                0x00000000c00123b6                SysOpenDir(regs*)
                0x00000000c0012433                SysMakeDir(regs*)
                0x00000000c00124a1                SysCloseDir(regs*)
                0x00000000c00124f0                SysWait(regs*)
                0x00000000c0012511                SysNotImpl(regs*)
                0x00000000c001252c                SysPanic(regs*)
                0x00000000c0012547                SysRmdir(regs*)
                0x00000000c00125a5                SysUnlink(regs*)
                0x00000000c0012603                SysGetArgv(regs*)
                0x00000000c0012650                SysUSleep(regs*)
                0x00000000c0012679                SysSpawn(regs*)
                0x00000000c00126ea                SysGetEnv(regs*)
                0x00000000c001279f                SysSetFatAttrib(regs*)
                0x00000000c0012808                SysPipe(regs*)
                0x00000000c001284d                SysGetUnixTime(regs*)
                0x00000000c0012861                string_ends_with(char const*, char const*)
                0x00000000c00128ac                SysOpen(regs*)
                0x00000000c0012aab                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012aed        0x3 
 .text          0x00000000c0012af0      0x159 net/ethernet.32
                0x00000000c0012af0                KeSwitchEndian16(unsigned short)
                0x00000000c0012b14                KeSwitchEndian32(unsigned int)
                0x00000000c0012b44                EthernetCRC32(unsigned char*, int)
                0x00000000c0012be8                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012c49      0xd51 reg/cm.32
                0x00000000c0012c49                CmOpen(char const*)
                0x00000000c0012d67                CmClose(Reghive_Tag*)
                0x00000000c0012d7d                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012db9                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012e30                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012e6f                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012ea1                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012edd                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012f05                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012f26                CmExpand(Reghive_Tag*, int)
                0x00000000c0012fa1                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0013027                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c001311b                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0013253                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c00132b4                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c00132e4                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c001331b                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0013345                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013385                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013429                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0013457                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00135f4                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013641                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00136bb                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001370e                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00137d2                zStrtok(char*, char const*)
                0x00000000c0013844                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00138c5                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013968                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c001399a      0x545 reg/registry.32
                0x00000000c001399a                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013b26                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013c7b                Reg::getLine(char*, char*, char*)
                0x00000000c0013cb2                Reg::readInt(char*, char*, int*)
                0x00000000c0013da0                Reg::readString(char*, char*, char*, int)
                0x00000000c0013e21                Reg::readBool(char*, char*, bool*)
                0x00000000c0013e46                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013e72                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013e9e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013edf       0x36 sys/eject.32
                0x00000000c0013edf                SysEject(regs*)
 .text          0x00000000c0013f15       0x18 sys/exit.32
                0x00000000c0013f15                SysExit(regs*)
 .text          0x00000000c0013f2d       0x1f sys/getcwd.32
                0x00000000c0013f2d                SysGetCwd(regs*)
 .text          0x00000000c0013f4c        0xc sys/getpid.32
                0x00000000c0013f4c                SysGetPID(regs*)
 .text          0x00000000c0013f58       0x1a sys/getramdata.32
                0x00000000c0013f58                SysGetRAMData(regs*)
 .text          0x00000000c0013f72       0x82 sys/getvgaptr.32
                0x00000000c0013f72                SysGetVGAPtr(regs*)
 .text          0x00000000c0013ff4       0xb9 sys/kill.32
                0x00000000c0013ff4                SysKill(regs*)
 .text          0x00000000c00140ad       0xa8 sys/loaddll.32
                0x00000000c00140ad                SysLoadDLL(regs*)
 .text          0x00000000c0014155       0x68 sys/read.32
                0x00000000c0014155                SysRead(regs*)
 .text          0x00000000c00141bd       0x29 sys/registersignal.32
                0x00000000c00141bd                SysRegisterSignal(regs*)
 .text          0x00000000c00141e6      0x19c sys/registry.32
                0x00000000c00141e6                SysRegistryGetTypeFromPath(regs*)
                0x00000000c001425d                SysRegistryReadExtent(regs*)
                0x00000000c00142a5                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00142cd                SysRegistryEnterDirectory(regs*)
                0x00000000c00142f5                SysRegistryGetNext(regs*)
                0x00000000c001431d                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014357                SysRegistryOpen(regs*)
                0x00000000c001436b                SysRegistryClose(regs*)
 .text          0x00000000c0014382       0x55 sys/sbrk.32
                0x00000000c0014382                SysSbrk(regs*)
 .text          0x00000000c00143d7       0x1c sys/setcwd.32
                0x00000000c00143d7                SysSetCwd(regs*)
 .text          0x00000000c00143f3       0x96 sys/settime.32
                0x00000000c00143f3                SysSetTime(regs*)
 .text          0x00000000c0014489       0x2d sys/symlink.32
                0x00000000c0014489                SysSymlink(regs*)
 .text          0x00000000c00144b6       0x4a sys/timezone.32
                0x00000000c00144b6                SysTimezone(regs*)
 .text          0x00000000c0014500       0xfc sys/truncate.32
                0x00000000c0014500                SysTruncate(regs*)
 .text          0x00000000c00145fc       0x68 sys/write.32
                0x00000000c00145fc                SysWrite(regs*)
 .text          0x00000000c0014664       0x62 sys/wsbe.32
                0x00000000c0014664                SysWsbe(regs*)
 .text          0x00000000c00146c6       0x25 sys/yield.32
                0x00000000c00146c6                SysYield(regs*)
 .text          0x00000000c00146eb     0x1203 thr/elf.32
                0x00000000c00146eb                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014972                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014b91                Thr::runtimeReferenceHelper()
                0x00000000c0014ba4                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014bf3                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014eb1                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00155f2                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015624                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001565b                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015675                Thr::loadDLL(char const*, bool)
                0x00000000c00158b5                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00158ee        0x2 
 .text          0x00000000c00158f0     0x13b5 thr/prcssthr.32
                0x00000000c00158f0                userModeEntryPoint(void*)
                0x00000000c0015918                changeTSS
                0x00000000c0015948                switchToThread(ThreadControlBlock*)
                0x00000000c00159f8                Process::addArgs(char**)
                0x00000000c0015a64                Process::Process(char const*, Process*, char**)
                0x00000000c0015a64                Process::Process(char const*, Process*, char**)
                0x00000000c0015c70                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015c70                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015e44                taskStartupFunction
                0x00000000c0015e50                Semaphore::Semaphore(int)
                0x00000000c0015e50                Semaphore::Semaphore(int)
                0x00000000c0015e80                Mutex::Mutex()
                0x00000000c0015e80                Mutex::Mutex()
                0x00000000c0015e94                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015f9c                Process::createUserThread()
                0x00000000c0015fbc                setupMultitasking(void (*)())
                0x00000000c00160e0                schedule()
                0x00000000c0016174                Semaphore::tryAcquire()
                0x00000000c0016234                Semaphore::assertLocked(char const*)
                0x00000000c00162b8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00162e0                blockTask(TaskState)
                0x00000000c0016318                waitTask(int, int*, int)
                0x00000000c001635c                milliTenthSleepUntil(unsigned int)
                0x00000000c00163fc                milliTenthSleep(unsigned int)
                0x00000000c0016410                sleep(unsigned int)
                0x00000000c0016420                Semaphore::acquire()
                0x00000000c00164e8                taskReturned
                0x00000000c001652c                Thr::processFromPID(int)
                0x00000000c00165d8                unblockTask(ThreadControlBlock*)
                0x00000000c0016684                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016958                cleanerTaskFunction(void*)
                0x00000000c0016a60                terminateTask(int)
                0x00000000c0016b4c                Thr::terminateFromIRQ(int)
                0x00000000c0016b5c                Semaphore::release()
 .text          0x00000000c0016ca5      0xc31 vm86/vm8086.32
                0x00000000c0016ca5                Vm::inbv(unsigned short)
                0x00000000c0016cb8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016cee                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016cfe                Vm::getSegment(unsigned int)
                0x00000000c0016d06                Vm::getOffset(unsigned int)
                0x00000000c0016d0b                Vm::mainloop2()
                0x00000000c0016d45                Vm::mainVm8086Loop(void*)
                0x00000000c0016d55                Vm::mainloop3(unsigned long)
                0x00000000c0016d7b                Vm::initialise8086()
                0x00000000c0016dbe                Vm::finish8086()
                0x00000000c0016e1f                Vm::getOutput8086(unsigned char*)
                0x00000000c0016e44                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016efd                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001709b                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017138                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017149                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001715b                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001716c                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017181                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017197                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00171ac                Vm::faultHandler(regs*)
 .text          0x00000000c00178d6      0xaf0 arch/i386/hal.32
                0x00000000c00178d6                noCopro(unsigned long)
                0x00000000c00178d7                nmiHandler(regs*, void*)
                0x00000000c00178f0                doubleFault(regs*, void*)
                0x00000000c0017909                displayDebugInfo(regs*)
                0x00000000c0017c8e                HalSystemIdle()
                0x00000000c0017d0a                displayProgramFault(char const*)
                0x00000000c0017d56                gpFault(regs*, void*)
                0x00000000c0017dbd                pgFault(regs*, void*)
                0x00000000c0017e46                otherISRHandler(regs*, void*)
                0x00000000c0017e7a                opcodeFault(regs*, void*)
                0x00000000c0017efd                i386SaveCoprocessor(void*)
                0x00000000c0017f11                i386LoadCoprocessor(void*)
                0x00000000c0017f25                x87EmulHandler(regs*, void*)
                0x00000000c0017fc2                HalInitialiseCoprocessor()
                0x00000000c0018070                HalPanic(char const*)
                0x00000000c0018184                HalQueryPerformanceCounter()
                0x00000000c001819f                HalInitialise()
                0x00000000c0018355                HalMakeBeep(int)
                0x00000000c001838f                HalGetRand()
                0x00000000c0018392                HalEndOfInterrupt(int)
                0x00000000c00183c3                HalRestart()
                0x00000000c00183c4                HalShutdown()
                0x00000000c00183c5                HalSleep()
 *fill*         0x00000000c00183c6        0x2 
 .text          0x00000000c00183c8      0x2dc arch/i386/pic.32
                0x00000000c00183c8                picIoWait()
                0x00000000c00183d0                picDisable()
                0x00000000c0018404                picGetIRQReg(int)
                0x00000000c0018480                picOpen()
                0x00000000c0018604                picEOI(int)
 .text          0x00000000c00186a4      0x66e arch/i386/rtc.32
                0x00000000c00186a4                RTC::open(int, int, void*)
                0x00000000c00186a8                RTC::close(int, int, void*)
                0x00000000c00186ac                RTC::timeInSecondsUTC()
                0x00000000c00186be                RTC::timeInDatetimeUTC()
                0x00000000c00186e4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018722                RTC::~RTC()
                0x00000000c0018722                RTC::~RTC()
                0x00000000c0018746                RTC::~RTC()
                0x00000000c0018770                RTC::get_update_in_progress_flag()
                0x00000000c001878a                RTC::completeRTCRefresh()
                0x00000000c0018a64                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018c12                rtcIRQHandler(regs*, void*)
                0x00000000c0018c58                RTC::RTC()
                0x00000000c0018c58                RTC::RTC()
 *fill*         0x00000000c0018d12        0x2 
 .text          0x00000000c0018d14      0x1f4 arch/i386/vga.32
                0x00000000c0018d14                HalConsoleScroll(int, int)
                0x00000000c0018e1c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018e80                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018f08     0x14f3 fs/fat/vfslink.32
                0x00000000c0018f08                FAT::getName()
                0x00000000c0018f10                FAT::tell(void*, unsigned long long*)
                0x00000000c0018f4c                FAT::stat(void*, unsigned long long*)
                0x00000000c0018f88                FAT::~FAT()
                0x00000000c0018f88                FAT::~FAT()
                0x00000000c0018fac                FAT::~FAT()
                0x00000000c0018fd4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019078                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019158                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001933c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019558                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019718                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019888                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00198e8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019948                FAT::close(void*)
                0x00000000c001999c                FAT::closeDir(void*)
                0x00000000c00199f0                FAT::truncate(void*, unsigned long long)
                0x00000000c0019a5c                FAT::seek(void*, unsigned long long)
                0x00000000c0019ab4                fatWrapperReadDisk
                0x00000000c0019af4                fatWrapperWriteDisk
                0x00000000c0019b34                fatWrapperIoctl
                0x00000000c0019c54                FAT::FAT()
                0x00000000c0019c54                FAT::FAT()
                0x00000000c0019cac                FAT::fixFilepath(char*)
                0x00000000c0019cec                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019e60                FAT::openDir(char const*, void**)
                0x00000000c0019f10                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a008                FAT::unlink(char const*)
                0x00000000c001a088                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a240                FAT::rename(char const*, char const*)
                0x00000000c001a30c                FAT::mkdir(char const*)
                0x00000000c001a38c                FAT::exists(char const*)
 *fill*         0x00000000c001a3fb        0x1 
 .text          0x00000000c001a3fc       0x94 fs/iso9660/helper.32
                0x00000000c001a3fc                isoReadDiscSectorHelper
                0x00000000c001a458                iso_kprintf
                0x00000000c001a474                iso_kprintfd
 .text          0x00000000c001a490      0x71a fs/iso9660/vfslink.32
                0x00000000c001a490                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a496                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a49c                ISO9660::getName()
                0x00000000c001a4a2                ISO9660::closeDir(void*)
                0x00000000c001a4ac                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a4b2                ISO9660::unlink(char const*)
                0x00000000c001a4b8                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a4be                ISO9660::rename(char const*, char const*)
                0x00000000c001a4c4                ISO9660::mkdir(char const*)
                0x00000000c001a4ca                ISO9660::~ISO9660()
                0x00000000c001a4ca                ISO9660::~ISO9660()
                0x00000000c001a4ee                ISO9660::~ISO9660()
                0x00000000c001a516                ISO9660::exists(char const*)
                0x00000000c001a52a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a610                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a658                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a69a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a6d8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a72a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a86c                ISO9660::close(void*)
                0x00000000c001a89c                ISO9660::openDir(char const*, void**)
                0x00000000c001a976                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001aa91                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001ab10                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001ab82                ISO9660::ISO9660()
                0x00000000c001ab82                ISO9660::ISO9660()
 .text          0x00000000c001abaa      0x26c hal/sound/sndcard.32
                0x00000000c001abaa                SoundCard::beginPlayback()
                0x00000000c001abb8                SoundCard::stopPlayback()
                0x00000000c001abc6                SoundCard::SoundCard(char const*)
                0x00000000c001abc6                SoundCard::SoundCard(char const*)
                0x00000000c001ac64                SoundCard::~SoundCard()
                0x00000000c001ac64                SoundCard::~SoundCard()
                0x00000000c001ac88                SoundCard::~SoundCard()
                0x00000000c001acb2                SoundCard::configureRates(int, int, int)
                0x00000000c001ace2                SoundCard::getSamples16(int, short*)
                0x00000000c001ad3e                SoundCard::getSamples32(int, int*)
                0x00000000c001adc4                SoundCard::addChannel(SoundPort*)
                0x00000000c001ae02                SoundCard::removeChannel(int)
 *fill*         0x00000000c001ae16        0x2 
 .text          0x00000000c001ae18      0x393 hal/sound/sndport.32
                0x00000000c001ae18                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ae18                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001aea4                SoundPort::~SoundPort()
                0x00000000c001aea4                SoundPort::~SoundPort()
                0x00000000c001aed8                SoundPort::unpause()
                0x00000000c001aee4                SoundPort::pause()
                0x00000000c001aef0                SoundPort::getBufferUsed()
                0x00000000c001aef8                SoundPort::getBufferSize()
                0x00000000c001af00                SoundPort::buffer16(short*, int)
                0x00000000c001af8c                SoundPort::buffer32(int*, int)
                0x00000000c001b018                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b0e8                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b1ab        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b1ab        0x1 
 .text          0x00000000c001b1ac      0xbc5 hw/bus/pci.32
                0x00000000c001b1ac                PCI::open(int, int, void*)
                0x00000000c001b1ca                PCI::close(int, int, void*)
                0x00000000c001b1ce                PCI::PCI()
                0x00000000c001b1ce                PCI::PCI()
                0x00000000c001b266                PCI::readBAR8(unsigned int, int)
                0x00000000c001b282                PCI::readBAR16(unsigned int, int)
                0x00000000c001b2a0                PCI::readBAR32(unsigned int, int)
                0x00000000c001b2bc                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b2dc                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b2fe                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b31e                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b394                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b43e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b462                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b48a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4d4                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4fc                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b520                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b544                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b56c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b5d0                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b6b6                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b980                PCI::checkBus(unsigned char)
                0x00000000c001b9a4                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bb2a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bca6                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bd18                PCI::detect()
 *fill*         0x00000000c001bd71        0x1 
 .text          0x00000000c001bd72      0xb96 hw/diskctrl/ide.32
                0x00000000c001bd72                IDE::close(int, int, void*)
                0x00000000c001bd76                IDE::IDE()
                0x00000000c001bd76                IDE::IDE()
                0x00000000c001bdaa                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bdbc                selectDrive(unsigned char, unsigned char)
                0x00000000c001bdbe                IDE::getBase(unsigned char)
                0x00000000c001bdd0                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001be90                IDE::read(unsigned char, unsigned char)
                0x00000000c001bf44                IDE::waitInterrupt(unsigned char)
                0x00000000c001bfa6                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bfc2                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bfde                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c028                IDE::open(int, int, void*)
                0x00000000c001c462                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c532                IDE::detect()
                0x00000000c001c7fa                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c8b4                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c908      0x32c hw/diskctrl/satabus.32
                0x00000000c001c908                SATABus::close(int, int, void*)
                0x00000000c001c90c                SATABus::detect()
                0x00000000c001c90e                SATABus::SATABus()
                0x00000000c001c90e                SATABus::SATABus()
                0x00000000c001c994                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c9c6                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca0e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca2e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca58                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cb6a                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cc14                SATABus::open(int, int, void*)
 .text          0x00000000c001cc34      0x96d hw/diskphys/ata.32
                0x00000000c001cc34                ATA::close(int, int, void*)
                0x00000000c001cc58                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cc5a                ATA::ATA()
                0x00000000c001cc5a                ATA::ATA()
                0x00000000c001cc88                ATA::flush(bool)
                0x00000000c001ccd6                ATA::readyForCommand()
                0x00000000c001cd22                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d0e6                ATA::detectCHS()
                0x00000000c001d110                ATA::open(int, int, void*)
                0x00000000c001d1dc                combineCharAndColour(char, unsigned char)
                0x00000000c001d1ed                combineColours(unsigned char, unsigned char)
                0x00000000c001d1fa                ATA::read(unsigned long long, int, void*)
                0x00000000c001d3d0                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d5a1        0x1 
 .text          0x00000000c001d5a2      0x612 hw/diskphys/atapi.32
                0x00000000c001d5a2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d5a8                ATAPI::close(int, int, void*)
                0x00000000c001d5cc                ATAPI::ATAPI()
                0x00000000c001d5cc                ATAPI::ATAPI()
                0x00000000c001d5fa                ATAPI::readyForCommand()
                0x00000000c001d64c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d90c                ATAPI::diskRemoved()
                0x00000000c001d946                ATAPI::eject()
                0x00000000c001d98e                ATAPI::diskInserted()
                0x00000000c001d99a                ATAPI::detectMedia()
                0x00000000c001da5a                ATAPI::open(int, int, void*)
                0x00000000c001db3a                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001dbb4      0x7ff hw/diskphys/sata.32
                0x00000000c001dbb4                SATA::close(int, int, void*)
                0x00000000c001dbd8                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001dbda                SATA::open(int, int, void*)
                0x00000000c001dc84                SATA::SATA()
                0x00000000c001dc84                SATA::SATA()
                0x00000000c001dcb2                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001df04                SATA::read(unsigned long long, int, void*)
                0x00000000c001e154                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e3b3        0x1 
 .text          0x00000000c001e3b4      0x5d8 hw/diskphys/satapi.32
                0x00000000c001e3b4                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e3ba                SATAPI::close(int, int, void*)
                0x00000000c001e3de                SATAPI::SATAPI()
                0x00000000c001e3de                SATAPI::SATAPI()
                0x00000000c001e40c                SATAPI::diskRemoved()
                0x00000000c001e40e                SATAPI::diskInserted()
                0x00000000c001e42a                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e710                SATAPI::eject()
                0x00000000c001e74c                SATAPI::detectMedia()
                0x00000000c001e7a2                SATAPI::open(int, int, void*)
                0x00000000c001e8a2                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e98c      0x45b hw/intctrl/apic.32
                0x00000000c001e98c                IOAPIC::close(int, int, void*)
                0x00000000c001e992                apicGetBase()
                0x00000000c001e9d8                IOAPIC::IOAPIC()
                0x00000000c001e9d8                IOAPIC::IOAPIC()
                0x00000000c001ea00                apicOpen()
                0x00000000c001eb7c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001ebae                IOAPIC::read(int)
                0x00000000c001ebd6                IOAPIC::open(int, int, void*)
                0x00000000c001ecbc                IOAPIC::write(int, int)
                0x00000000c001ece8                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ede7        0x1 
 .text          0x00000000c001ede8       0xf0 hw/timer/apictimer.32
                0x00000000c001ede8                APICTimer::close(int, int, void*)
                0x00000000c001edf0                apicTimerHandler(regs*, void*)
                0x00000000c001ee18                APICTimer::open(int, int, void*)
                0x00000000c001ee88                APICTimer::write(int)
                0x00000000c001eeb0                APICTimer::APICTimer()
                0x00000000c001eeb0                APICTimer::APICTimer()
 .text          0x00000000c001eed8      0x1ad hw/timer/pit.32
                0x00000000c001eed8                PIT::write(int)
                0x00000000c001ef5c                pitHandler(regs*, void*)
                0x00000000c001ef84                PIT::open(int, int, void*)
                0x00000000c001efd4                PIT::close(int, int, void*)
                0x00000000c001f004                PIT::PIT()
                0x00000000c001f004                PIT::PIT()
 *fill*         0x00000000c001f085        0xb 
 .text          0x00000000c001f090       0x83 arch/i386/avx.32
                0x00000000c001f090                avxDetect
                0x00000000c001f0ba                avxSave
                0x00000000c001f0cb                avxLoad
                0x00000000c001f0dc                avxInit
                0x00000000c001f0fe                avxClose
                0x00000000c001f0ff                wouldSheSayYes
 *fill*         0x00000000c001f113        0xd 
 .text          0x00000000c001f120      0x2ec arch/i386/interrupt.32
                0x00000000c001f120                isr0
                0x00000000c001f130                isr1
                0x00000000c001f13a                isr2
                0x00000000c001f144                isr3
                0x00000000c001f14e                isr4
                0x00000000c001f158                isr5
                0x00000000c001f162                isr6
                0x00000000c001f16c                isr7
                0x00000000c001f176                isr8
                0x00000000c001f17e                isr9
                0x00000000c001f188                isr10
                0x00000000c001f190                isr11
                0x00000000c001f198                isr12
                0x00000000c001f1a0                isr13
                0x00000000c001f1ba                isr14
                0x00000000c001f1c2                isr15
                0x00000000c001f1cc                isr16
                0x00000000c001f1d6                isr17
                0x00000000c001f1e0                isr18
                0x00000000c001f1ea                irq3
                0x00000000c001f1f4                irq4
                0x00000000c001f1fe                irq5
                0x00000000c001f208                irq6
                0x00000000c001f212                irq7
                0x00000000c001f21c                irq8
                0x00000000c001f226                irq9
                0x00000000c001f230                irq10
                0x00000000c001f23a                irq11
                0x00000000c001f244                irq12
                0x00000000c001f24e                irq13
                0x00000000c001f258                irq14
                0x00000000c001f262                irq15
                0x00000000c001f26c                irq1
                0x00000000c001f273                irq2
                0x00000000c001f27a                isr96
                0x00000000c001f281                irq0
                0x00000000c001f286                int_common_stub
                0x00000000c001f2b8                syscall_common_stub
                0x00000000c001f3bc                irq16
                0x00000000c001f3c6                irq17
                0x00000000c001f3d0                irq18
                0x00000000c001f3da                irq19
                0x00000000c001f3e4                irq20
                0x00000000c001f3ee                irq21
                0x00000000c001f3f8                irq22
                0x00000000c001f402                irq23
 *fill*         0x00000000c001f40c        0x4 
 .text          0x00000000c001f410       0x10 arch/i386/rdrand.32
                0x00000000c001f410                i386GetRDRAND
 .text          0x00000000c001f420       0x39 arch/i386/sse.32
                0x00000000c001f420                absolutelyNoChanceInHell
                0x00000000c001f420                sseDetect
                0x00000000c001f438                sseSave
                0x00000000c001f440                sseLoad
                0x00000000c001f448                sseInit
                0x00000000c001f458                sseClose
 *fill*         0x00000000c001f459        0x7 
 .text          0x00000000c001f460       0x49 arch/i386/x87.32
                0x00000000c001f466                x87Detect
                0x00000000c001f481                x87Save
                0x00000000c001f488                x87Load
                0x00000000c001f48f                x87Init
                0x00000000c001f4a8                x87Close
 *fill*         0x00000000c001f4a9        0x3 
 .text          0x00000000c001f4ac       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f4d1        0x0 crtn.32
 *fill*         0x00000000c001f4d1        0x3 
 .text          0x00000000c001f4d4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f4d4                __divdi3
 *fill*         0x00000000c001f61f        0x1 
 .text          0x00000000c001f620      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f620                __moddi3
 *fill*         0x00000000c001f79e        0x2 
 .text          0x00000000c001f7a0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f7a0                __udivdi3
 *fill*         0x00000000c001f89f        0x1 
 .text          0x00000000c001f8a0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f8a0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f9c0        0x0
 .iplt          0x00000000c001f9c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f9ba        0xf
 .init          0x00000000c001f9ba        0x3 crti.32
                0x00000000c001f9ba                _init
 .init          0x00000000c001f9bd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f9c2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f9c7        0x2 crtn.32

.fini           0x00000000c001f9c9        0xa
 .fini          0x00000000c001f9c9        0x3 crti.32
                0x00000000c001f9c9                _fini
 .fini          0x00000000c001f9cc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f9d1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f9d4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f9d4       0x23 core/computer.32
                0x00000000c001f9d4                Computer::~Computer()
                0x00000000c001f9d4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f9f8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f9f8       0x2a core/computer.32
                0x00000000c001f9f8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001fa22       0x21
 .text._Z10idleCommonv
                0x00000000c001fa22       0x21 core/idle.32
                0x00000000c001fa22                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fa44        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fa44        0x2 core/unixfile.32
                0x00000000c001fa44                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001fa44                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fa46       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fa46       0x42 core/unixfile.32
                0x00000000c001fa46                LinkedList<UnixFile>::LinkedList()
                0x00000000c001fa46                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fa88       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fa88       0xd3 core/unixfile.32
                0x00000000c001fa88                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fb5c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fb5c        0x7 core/unixfile.32
                0x00000000c001fb5c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fb64       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fb64       0xa1 core/unixfile.32
                0x00000000c001fb64                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc06        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc06        0x8 core/unixfile.32
                0x00000000c001fc06                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc0e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc0e       0x1a hal/device.32
                0x00000000c001fc0e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fc0e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fc28       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fc28       0x2a hal/device.32
                0x00000000c001fc28                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fc52       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fc52       0xdc hal/device.32
                0x00000000c001fc52                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fd2e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fd2e       0x42 hal/device.32
                0x00000000c001fd2e                LinkedList<Device>::LinkedList()
                0x00000000c001fd2e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fd70       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fd70       0x1c hal/timer.32
                0x00000000c001fd70                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fd8c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fd8c        0x7 hal/timer.32
                0x00000000c001fd8c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fd94       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fd94       0xbc hal/timer.32
                0x00000000c001fd94                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fe50       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fe50       0xda hal/timer.32
                0x00000000c001fe50                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ff2c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ff2c       0x23 hw/acpi.32
                0x00000000c001ff2c                ACPI::~ACPI()
                0x00000000c001ff2c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ff50       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ff50       0x2a hw/acpi.32
                0x00000000c001ff50                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ff7c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ff7c        0x2 hw/acpi.32
                0x00000000c001ff7c                LinkedList<Device>::~LinkedList()
                0x00000000c001ff7c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ff80       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ff80       0x1c hw/acpi.32
                0x00000000c001ff80                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ff9c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ff9c        0x7 hw/acpi.32
                0x00000000c001ff9c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ffa4       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ffa4       0xb8 hw/acpi.32
                0x00000000c001ffa4                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c002005c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002005c       0x23 hw/cpu.32
                0x00000000c002005c                CPU::~CPU()
                0x00000000c002005c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020080       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020080       0x2a hw/cpu.32
                0x00000000c0020080                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00200ac        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00200ac        0x8 sys/kill.32
                0x00000000c00200ac                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00200b4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00200b4        0x2 thr/prcssthr.32
                0x00000000c00200b4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00200b4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00200b8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00200b8       0x49 thr/prcssthr.32
                0x00000000c00200b8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00200b8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020104       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020104       0x42 thr/prcssthr.32
                0x00000000c0020104                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020104                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c0020146       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020146       0x23 hw/bus/pci.32
                0x00000000c0020146                PCI::~PCI()
                0x00000000c0020146                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002016a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002016a       0x2a hw/bus/pci.32
                0x00000000c002016a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020194       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020194       0x23 hw/diskctrl/ide.32
                0x00000000c0020194                IDE::~IDE()
                0x00000000c0020194                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00201b8       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00201b8       0x2a hw/diskctrl/ide.32
                0x00000000c00201b8                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c00201e2       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c00201e2       0x23 hw/diskctrl/satabus.32
                0x00000000c00201e2                SATABus::~SATABus()
                0x00000000c00201e2                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020206       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020206       0x2a hw/diskctrl/satabus.32
                0x00000000c0020206                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020230       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020230       0x23 hw/diskphys/ata.32
                0x00000000c0020230                ATA::~ATA()
                0x00000000c0020230                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020254       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020254       0x2a hw/diskphys/ata.32
                0x00000000c0020254                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c002027e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c002027e       0x23 hw/diskphys/atapi.32
                0x00000000c002027e                ATAPI::~ATAPI()
                0x00000000c002027e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00202a2       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00202a2       0x2a hw/diskphys/atapi.32
                0x00000000c00202a2                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00202cc       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00202cc       0x23 hw/diskphys/sata.32
                0x00000000c00202cc                SATA::~SATA()
                0x00000000c00202cc                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c00202f0       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c00202f0       0x2a hw/diskphys/sata.32
                0x00000000c00202f0                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002031a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002031a       0x23 hw/diskphys/satapi.32
                0x00000000c002031a                SATAPI::~SATAPI()
                0x00000000c002031a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002033e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002033e       0x2a hw/diskphys/satapi.32
                0x00000000c002033e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020368       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020368       0x23 hw/intctrl/apic.32
                0x00000000c0020368                IOAPIC::~IOAPIC()
                0x00000000c0020368                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002038c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002038c       0x2a hw/intctrl/apic.32
                0x00000000c002038c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00203b8       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00203b8       0x23 hw/timer/apictimer.32
                0x00000000c00203b8                APICTimer::~APICTimer()
                0x00000000c00203b8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00203dc       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00203dc       0x2a hw/timer/apictimer.32
                0x00000000c00203dc                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020408       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020408       0x23 hw/timer/pit.32
                0x00000000c0020408                PIT::~PIT()
                0x00000000c0020408                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002042c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002042c       0x2a hw/timer/pit.32
                0x00000000c002042c                PIT::~PIT()

.rodata         0x00000000c0020456     0x323a
                0x00000000c0020456                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020456        0x2 
 .ctors         0x00000000c0020458        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c002045c        0x4 core/unixfile.32
 .ctors         0x00000000c0020460        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020464        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020468                end_ctors = .
                0x00000000c0020468                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020468        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002046c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002046c                __DTOR_END__
                0x00000000c0020470                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020470       0x10 
 .rodata        0x00000000c0020480      0x101 acpica/utclib.32
                0x00000000c0020480                AcpiGbl_Ctypes
 *fill*         0x00000000c0020581        0x3 
 .rodata        0x00000000c0020584       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002059c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c00205e6       0x1a 
 .rodata        0x00000000c0020600       0xed fs/fat/ff.32
 *fill*         0x00000000c00206ed       0x13 
 .rodata        0x00000000c0020700      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020b00       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020b6f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020c84       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020cec       0x2c core/computer.32
                0x00000000c0020cec                vtable for Computer
 .rodata.str1.4
                0x00000000c0020d18       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020d48        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020d54       0x17 core/main.32
 *fill*         0x00000000c0020d6b        0x1 
 .rodata.str1.4
                0x00000000c0020d6c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020e11       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020e69       0x39 core/pipe.32
 *fill*         0x00000000c0020ea2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020ea4       0x1c core/pipe.32
                0x00000000c0020ea4                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020ec0       0x2b core/terminal.32
 *fill*         0x00000000c0020eeb        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020eec       0x1c core/terminal.32
                0x00000000c0020eec                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020f08       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020f2a       0x15 core/unixfile.32
 *fill*         0x00000000c0020f3f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020f40       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020f8b        0x8 core/unixfile.32
 *fill*         0x00000000c0020f93        0x1 
 .rodata.str1.4
                0x00000000c0020f94       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020fb4       0x1c core/unixfile.32
                0x00000000c0020fb4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020fd0       0x1c core/unixfile.32
                0x00000000c0020fd0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020fec      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021280      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00213a6       0x33 coreobjs/c++.32
 *fill*         0x00000000c00213d9        0x3 
 .rodata        0x00000000c00213dc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002152c      0x169 dbg/usban.32
 *fill*         0x00000000c0021695        0x3 
 .rodata.str1.4
                0x00000000c0021698      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00217cf      0x1ad fs/symlink.32
                                        0x1bb (size before relaxing)
 .rodata.str1.1
                0x00000000c002197c       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c00219bd        0x3 
 .rodata._ZTV10Filesystem
                0x00000000c00219c0       0x6c fs/vfs.32
                0x00000000c00219c0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021a2c       0x1c fs/vfs.32
                0x00000000c0021a2c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021a48       0x1c fs/vfs.32
                0x00000000c0021a48                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021a64       0x2c hal/bus.32
                0x00000000c0021a64                vtable for Bus
 .rodata.str1.1
                0x00000000c0021a90       0x1e hal/clock.32
 *fill*         0x00000000c0021aae        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021ab0       0x3c hal/clock.32
                0x00000000c0021ab0                vtable for Clock
 *fill*         0x00000000c0021aec       0x14 
 .rodata        0x00000000c0021b00       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021b30       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021b88       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021b88       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021b88       0x2c hal/device.32
                0x00000000c0021b88                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021bb4       0x2c hal/device.32
                0x00000000c0021bb4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021be0       0x2c hal/diskctrl.32
                0x00000000c0021be0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021c0c       0x38 hal/diskphys.32
                0x00000000c0021c0c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021c44       0x3e hal/intctrl.32
 *fill*         0x00000000c0021c82        0x2 
 .rodata.str1.4
                0x00000000c0021c84       0x5d hal/intctrl.32
 .rodata        0x00000000c0021ce1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021d34       0x34 hal/keybrd.32
                0x00000000c0021d34                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021d68       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021dac       0x2c hal/logidisk.32
                0x00000000c0021dac                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021dd8       0x2c hal/mouse.32
                0x00000000c0021dd8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021e04       0x34 hal/nic.32
                0x00000000c0021e04                vtable for NIC
 .rodata.str1.1
                0x00000000c0021e38        0xb hal/partition.32
 *fill*         0x00000000c0021e43        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021e44       0x44 hal/serial.32
                0x00000000c0021e44                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021e88       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021e88        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021e88       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021e88       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021e88       0x30 hal/timer.32
                0x00000000c0021e88                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021eb8       0x10 hal/vcache.32
                0x00000000c0021eb8                vtable for VCache
 .rodata.str1.1
                0x00000000c0021ec8       0x93 hal/video.32
 *fill*         0x00000000c0021f5b        0x1 
 .rodata._ZTV5Video
                0x00000000c0021f5c       0x4c hal/video.32
                0x00000000c0021f5c                vtable for Video
 .rodata.str1.4
                0x00000000c0021fa8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0022043      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0022199       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0022199        0x8 hw/acpi.32
 *fill*         0x00000000c0022199        0x3 
 .rodata._ZTV4ACPI
                0x00000000c002219c       0x2c hw/acpi.32
                0x00000000c002219c                vtable for ACPI
 .rodata.str1.1
                0x00000000c00221c8      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022343        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022344       0x2c hw/cpu.32
                0x00000000c0022344                vtable for CPU
 .rodata.str1.1
                0x00000000c0022370       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00223b0       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00223ec       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c002247d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022546       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002258e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00225b9       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002262f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022674        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002267e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002269f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022735       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022789       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00227b5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022981       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00229d8      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022ae8       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022ae8       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022ae8       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022ae8        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022ae8       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022baa        0x2 
 .rodata        0x00000000c0022bac       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022bdc      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022d7b        0x1 
 .rodata.str1.4
                0x00000000c0022d7c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022def       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022e04       0x3c arch/i386/rtc.32
                0x00000000c0022e04                vtable for RTC
 .rodata.str1.1
                0x00000000c0022e40       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022e81        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022e84       0x6c fs/fat/vfslink.32
                0x00000000c0022e84                vtable for FAT
 .rodata.str1.1
                0x00000000c0022ef0       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022ef0      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0023028       0x6c fs/iso9660/vfslink.32
                0x00000000c0023028                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0023094       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00230d8       0x34 hal/sound/sndcard.32
                0x00000000c00230d8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c002310c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002314b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023183       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023224       0x2c hw/bus/pci.32
                0x00000000c0023224                vtable for PCI
 .rodata.str1.1
                0x00000000c0023250       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c00232d7        0x1 
 .rodata._ZTV3IDE
                0x00000000c00232d8       0x2c hw/diskctrl/ide.32
                0x00000000c00232d8                vtable for IDE
 .rodata.str1.4
                0x00000000c0023304       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0023328       0x2c hw/diskctrl/satabus.32
                0x00000000c0023328                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023354       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023366        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023368       0x38 hw/diskphys/ata.32
                0x00000000c0023368                vtable for ATA
 .rodata.str1.1
                0x00000000c00233a0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00233ad        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00233b0       0x38 hw/diskphys/atapi.32
                0x00000000c00233b0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00233e8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023464       0x38 hw/diskphys/sata.32
                0x00000000c0023464                vtable for SATA
 .rodata.str1.1
                0x00000000c002349c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0023586        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0023588       0x38 hw/diskphys/satapi.32
                0x00000000c0023588                vtable for SATAPI
 .rodata        0x00000000c00235c0        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00235c8       0x2c hw/intctrl/apic.32
                0x00000000c00235c8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00235f4       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002360f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023610       0x30 hw/timer/apictimer.32
                0x00000000c0023610                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023640       0x1d hw/timer/pit.32
 *fill*         0x00000000c002365d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023660       0x30 hw/timer/pit.32
                0x00000000c0023660                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023690      0xbb1
 *(.data)
 .data          0x00000000c0023690        0x0 crti.32
 .data          0x00000000c0023690        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023690                __dso_handle
 .data          0x00000000c0023694        0x0 acpica/utclib.32
 .data          0x00000000c0023694        0x0 core/malloc.32
 .data          0x00000000c0023694        0x0 libk/ctype.32
 .data          0x00000000c0023694        0x0 libk/string.32
 .data          0x00000000c0023694        0x0 fs/fat/diskio.32
 .data          0x00000000c0023694        0x0 fs/fat/ff.32
 .data          0x00000000c0023694        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023694        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023694        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023694        0x0 core/computer.32
 .data          0x00000000c0023694        0x0 core/gdt.32
 .data          0x00000000c0023694        0x0 core/idle.32
 .data          0x00000000c0023694        0x0 core/idt.32
 .data          0x00000000c0023694        0x4 core/kheap.32
 .data          0x00000000c0023698        0x0 core/main.32
 .data          0x00000000c0023698        0x4 core/physmgr.32
                0x00000000c0023698                Phys::bitmap
 .data          0x00000000c002369c        0x0 core/pipe.32
 *fill*         0x00000000c002369c        0x4 
 .data          0x00000000c00236a0       0x60 core/terminal.32
                0x00000000c00236a0                VgaText::hiddenOut
                0x00000000c00236c0                ansiToVGAMappings
 .data          0x00000000c0023700        0x0 core/tss.32
 .data          0x00000000c0023700        0x4 core/unixfile.32
                0x00000000c0023700                UnixFile::nextFd
 .data          0x00000000c0023704       0x15 core/virtmgr.32
                0x00000000c0023704                Virt::pageAllocPtr
                0x00000000c0023708                Virt::bitmap
                0x00000000c002370c                Virt::swapfileSectorsPerPage
                0x00000000c0023710                Virt::swapfileLength
                0x00000000c0023714                Virt::swapfileSector
                0x00000000c0023718                Virt::swapfileDrive
 *fill*         0x00000000c0023719        0x3 
 .data          0x00000000c002371c        0x4 coreobjs/c++.32
                0x00000000c002371c                __stack_chk_guard
 .data          0x00000000c0023720        0x0 dbg/kconsole.32
 .data          0x00000000c0023720       0x28 dbg/usban.32
                0x00000000c0023720                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023748        0x0 fs/symlink.32
 .data          0x00000000c0023748        0x0 fs/vfs.32
 .data          0x00000000c0023748        0x0 hal/bus.32
 .data          0x00000000c0023748        0x0 hal/buzzer.32
 .data          0x00000000c0023748        0x0 hal/clock.32
 .data          0x00000000c0023748        0x0 hal/device.32
 .data          0x00000000c0023748        0x0 hal/diskctrl.32
 .data          0x00000000c0023748        0x0 hal/diskphys.32
 .data          0x00000000c0023748        0x0 hal/fpu.32
 .data          0x00000000c0023748        0x0 hal/intctrl.32
 .data          0x00000000c0023748        0x0 hal/keybrd.32
 .data          0x00000000c0023748        0x0 hal/logidisk.32
 .data          0x00000000c0023748        0x0 hal/mouse.32
 .data          0x00000000c0023748        0x0 hal/nic.32
 .data          0x00000000c0023748        0x0 hal/partition.32
 .data          0x00000000c0023748        0x0 hal/serial.32
 .data          0x00000000c0023748        0x0 hal/timer.32
 .data          0x00000000c0023748        0x0 hal/vcache.32
 .data          0x00000000c0023748        0x0 hal/video.32
 .data          0x00000000c0023748       0x10 hw/acpi.32
                0x00000000c0023748                legacyIRQRemaps
 .data          0x00000000c0023758        0x4 hw/cpu.32
                0x00000000c0023758                lastCode
 .data          0x00000000c002375c        0x0 krnl/atexit.32
 *fill*         0x00000000c002375c        0x4 
 .data          0x00000000c0023760      0x142 krnl/bootmsg.32
                0x00000000c0023760                KiSplashScreen
 .data          0x00000000c00238a2        0x0 krnl/compat.32
 *fill*         0x00000000c00238a2       0x1e 
 .data          0x00000000c00238c0      0x400 krnl/crc32.32
                0x00000000c00238c0                KiPolyLookupCRC32
 .data          0x00000000c0023cc0       0x4d krnl/env.32
                0x00000000c0023cc0                defaultSysEnv
 .data          0x00000000c0023d0d        0x0 krnl/inlines.32
 .data          0x00000000c0023d0d        0x0 krnl/panic.32
 .data          0x00000000c0023d0d        0x0 krnl/powctrl.32
 .data          0x00000000c0023d0d        0x0 krnl/random.32
 .data          0x00000000c0023d0d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023d0d       0x13 
 .data          0x00000000c0023d20       0x4c krnl/signal.32
                0x00000000c0023d20                KiDefaultSignalHandlers
 *fill*         0x00000000c0023d6c       0x14 
 .data          0x00000000c0023d80       0xfc krnl/syscalls.32
                0x00000000c0023d80                systemCallHandlers
 .data          0x00000000c0023e7c        0x0 net/ethernet.32
 *fill*         0x00000000c0023e7c        0x4 
 .data          0x00000000c0023e80      0x100 reg/cm.32
                0x00000000c0023e80                CmComponents
 .data          0x00000000c0023f80        0x0 reg/registry.32
 .data          0x00000000c0023f80        0x0 sys/eject.32
 .data          0x00000000c0023f80        0x0 sys/exit.32
 .data          0x00000000c0023f80        0x0 sys/getcwd.32
 .data          0x00000000c0023f80        0x0 sys/getpid.32
 .data          0x00000000c0023f80        0x0 sys/getramdata.32
 .data          0x00000000c0023f80        0x0 sys/getvgaptr.32
 .data          0x00000000c0023f80        0x0 sys/kill.32
 .data          0x00000000c0023f80        0x0 sys/loaddll.32
 .data          0x00000000c0023f80        0x0 sys/read.32
 .data          0x00000000c0023f80        0x0 sys/registersignal.32
 .data          0x00000000c0023f80        0x0 sys/registry.32
 .data          0x00000000c0023f80        0x0 sys/sbrk.32
 .data          0x00000000c0023f80        0x0 sys/setcwd.32
 .data          0x00000000c0023f80        0x0 sys/settime.32
 .data          0x00000000c0023f80        0x0 sys/symlink.32
 .data          0x00000000c0023f80        0x0 sys/timezone.32
 .data          0x00000000c0023f80        0x0 sys/truncate.32
 .data          0x00000000c0023f80        0x0 sys/write.32
 .data          0x00000000c0023f80        0x0 sys/wsbe.32
 .data          0x00000000c0023f80        0x0 sys/yield.32
 .data          0x00000000c0023f80        0x0 thr/elf.32
 .data          0x00000000c0023f80        0x4 thr/prcssthr.32
                0x00000000c0023f80                Thr::nextPID
 .data          0x00000000c0023f84        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023f84       0x1c 
 .data          0x00000000c0023fa0      0x2a0 arch/i386/hal.32
                0x00000000c0023fa0                exceptionNames
 .data          0x00000000c0024240        0x0 arch/i386/pic.32
 .data          0x00000000c0024240        0x0 arch/i386/rtc.32
 .data          0x00000000c0024240        0x0 arch/i386/vga.32
 .data          0x00000000c0024240        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024240        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024240        0x1 fs/iso9660/vfslink.32
                0x00000000c0024240                recentDriveletter
 .data          0x00000000c0024241        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024241        0x0 hal/sound/sndport.32
 .data          0x00000000c0024241        0x0 hw/bus/isa.32
 .data          0x00000000c0024241        0x0 hw/bus/pci.32
 .data          0x00000000c0024241        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024241        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024241        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024241        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024241        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024241        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024241        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024241        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024241        0x0 hw/timer/pit.32
 .data          0x00000000c0024241        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024241        0x0 crtn.32
 .data          0x00000000c0024241        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024241        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024241        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024241        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024244        0x0
 .got           0x00000000c0024244        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024244        0x0
 .got.plt       0x00000000c0024244        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024244        0x0
 .igot.plt      0x00000000c0024244        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024244        0x0
 .tm_clone_table
                0x00000000c0024244        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024244        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024241      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024241        0x3 
 .eh_frame      0x00000000c0024244        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024244        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024244       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002429c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00242dc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024348       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
