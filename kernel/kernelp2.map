Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x20e8e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x225 dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006ef0                Dbg::logs(char*)
                0x00000000c0006f0f                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f2d                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f4e                Dbg::kprintf(char const*, ...)
 .text          0x00000000c0007084      0x2d4 dbg/usban.32
                0x00000000c0007084                KiUbsanPrintDetails(char const*, void*)
                0x00000000c00070f0                __ubsan_handle_type_mismatch_v1
                0x00000000c00071cc                __ubsan_handle_pointer_overflow
                0x00000000c00071f8                __ubsan_handle_out_of_bounds
                0x00000000c0007224                __ubsan_handle_add_overflow
                0x00000000c0007250                __ubsan_handle_load_invalid_value
                0x00000000c000727c                __ubsan_handle_divrem_overflow
                0x00000000c00072a8                __ubsan_handle_mul_overflow
                0x00000000c00072d4                __ubsan_handle_sub_overflow
                0x00000000c0007300                __ubsan_handle_shift_out_of_bounds
                0x00000000c000732c                __ubsan_handle_negate_overflow
 .text          0x00000000c0007358      0x812 fs/symlink.32
                0x00000000c00074a7                KiDeinitialiseSymlinks(void*)
                0x00000000c0007538                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075bb                KeInitialiseSymlinks()
                0x00000000c000771d                KiIsSymlinkRegistered(char const*)
                0x00000000c0007887                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a2e                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b6a      0xd9c fs/vfs.32
                0x00000000c0007b6a                File::read(unsigned long long, void*, int*)
                0x00000000c0007bc2                File::write(unsigned long long, void*, int*)
                0x00000000c0007c1a                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c72                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007ca0                File::isAtty()
                0x00000000c0007ca4                Directory::isAtty()
                0x00000000c0007ca8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cae                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cb4                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cba                File::~File()
                0x00000000c0007cba                File::~File()
                0x00000000c0007cde                File::~File()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d2c                Directory::~Directory()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d88                Filesystem::~Filesystem()
                0x00000000c0007dac                Fs::getcwd(Process*, char*, int)
                0x00000000c0007dd6                Fs::initVFS()
                0x00000000c0007e00                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000812c                File::File(char const*, Process*)
                0x00000000c000812c                File::File(char const*, Process*)
                0x00000000c000814a                File::open(FileOpenMode)
                0x00000000c00081a8                File::close()
                0x00000000c0008208                File::seek(unsigned long long)
                0x00000000c000825e                File::truncate(unsigned long long)
                0x00000000c00082b4                File::tell(unsigned long long*)
                0x00000000c0008304                File::rewind()
                0x00000000c0008318                File::unlink()
                0x00000000c0008364                File::rename(char const*)
                0x00000000c00083b2                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000840e                File::exists()
                0x00000000c000844c                File::stat(unsigned long long*, bool*)
                0x00000000c00084ad                Fs::setcwd(Process*, char*)
                0x00000000c000860c                Directory::Directory(char const*, Process*)
                0x00000000c000860c                Directory::Directory(char const*, Process*)
                0x00000000c00086d4                Directory::open()
                0x00000000c0008730                Directory::close()
                0x00000000c0008790                Directory::unlink()
                0x00000000c00087dc                Directory::rename(char const*)
                0x00000000c000882a                Directory::exists()
                0x00000000c0008868                Directory::read(dirent*)
                0x00000000c00088b4                Directory::create()
                0x00000000c0008900                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c0008906        0x2 
 .text          0x00000000c0008908       0x86 hal/bus.32
                0x00000000c0008908                Bus::Bus(char const*)
                0x00000000c0008908                Bus::Bus(char const*)
                0x00000000c0008940                Bus::~Bus()
                0x00000000c0008940                Bus::~Bus()
                0x00000000c0008964                Bus::~Bus()
 .text          0x00000000c000898e       0x99 hal/buzzer.32
                0x00000000c000898e                KeBeepThread(void*)
                0x00000000c00089ce                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a27        0x1 
 .text          0x00000000c0008a28      0x763 hal/clock.32
                0x00000000c0008a28                KeLoadTimezoneStrings()
                0x00000000c0008bdc                KeGetTimezoneStringFromID(int)
                0x00000000c0008c07                KeUpdateTimezone(char const*)
                0x00000000c0008c89                KeSetTimezone(char const*)
                0x00000000c0008ccc                KeSetTimezone(int)
                0x00000000c0008cf5                KeLoadTimezone()
                0x00000000c0008d4c                Clock::Clock(char const*)
                0x00000000c0008d4c                Clock::Clock(char const*)
                0x00000000c0008d82                Clock::~Clock()
                0x00000000c0008d82                Clock::~Clock()
                0x00000000c0008da6                Clock::~Clock()
                0x00000000c0008dd0                Clock::timeInSecondsLocal()
                0x00000000c0008e18                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0008e71                KeDatetimeToSeconds(datetime_t)
                0x00000000c0008f96                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000901f                KeSecondsToDatetime(unsigned long long)
                0x00000000c0009166                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000918b        0x1 
 .text          0x00000000c000918c      0x47a hal/device.32
                0x00000000c000918c                Device::hibernate()
                0x00000000c000918e                Device::wake()
                0x00000000c0009190                Device::detect()
                0x00000000c0009192                Device::disableLegacy()
                0x00000000c0009194                Device::powerSaving(PowerSavingLevel)
                0x00000000c0009196                DriverlessDevice::close(int, int, void*)
                0x00000000c000919a                DriverlessDevice::detect()
                0x00000000c000919c                DriverlessDevice::open(int, int, void*)
                0x00000000c00091b0                Device::~Device()
                0x00000000c00091b0                Device::~Device()
                0x00000000c00091be                Device::~Device()
                0x00000000c00091e6                Device::findAndLoadDriver()
                0x00000000c00091f4                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000921a                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000925a                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009284                Device::getParent()
                0x00000000c0009290                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00092ae                Device::addChild(Device*)
                0x00000000c00092f2                Device::removeAllChildren()
                0x00000000c0009338                Device::hibernateAll()
                0x00000000c0009368                Device::wakeAll()
                0x00000000c0009398                Device::detectAll()
                0x00000000c00093c8                Device::disableLegacyAll()
                0x00000000c00093ca                Device::loadDriversForAll()
                0x00000000c00093cc                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009402                Device::setName(char const*)
                0x00000000c0009410                Device::Device(char const*)
                0x00000000c0009410                Device::Device(char const*)
                0x00000000c000950c                Device::getName()
                0x00000000c0009516                Device::closeAll()
                0x00000000c0009562                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009562                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009598                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c00095dc                getDevicesOfType(DeviceType)
 *fill*         0x00000000c0009606        0x2 
 .text          0x00000000c0009608       0x86 hal/diskctrl.32
                0x00000000c0009608                HardDiskController::HardDiskController(char const*)
                0x00000000c0009608                HardDiskController::HardDiskController(char const*)
                0x00000000c0009640                HardDiskController::~HardDiskController()
                0x00000000c0009640                HardDiskController::~HardDiskController()
                0x00000000c0009664                HardDiskController::~HardDiskController()
 .text          0x00000000c000968e       0xe2 hal/diskphys.32
                0x00000000c000968e                PhysicalDisk::eject()
                0x00000000c0009692                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009692                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00096fa                PhysicalDisk::startCache()
                0x00000000c0009722                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009722                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009746                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009770        0x0 hal/fpu.32
 .text          0x00000000c0009770        0x0 hal/intctrl.32
 .text          0x00000000c0009770      0x874 hal/keybrd.32
                0x00000000c0009770                startGUI(void*)
                0x00000000c00097d5                startGUIVESA(void*)
                0x00000000c000983a                sendKeyToTerminal(unsigned char)
                0x00000000c0009910                sendKeyboardToken(KeyboardToken)
                0x00000000c0009dcc                clearInternalKeybuffer(VgaText*)
                0x00000000c0009e01                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0009f5a                Keyboard::Keyboard(char const*)
                0x00000000c0009f5a                Keyboard::Keyboard(char const*)
                0x00000000c0009f96                Keyboard::~Keyboard()
                0x00000000c0009f96                Keyboard::~Keyboard()
                0x00000000c0009fba                Keyboard::~Keyboard()
 .text          0x00000000c0009fe4      0x3f8 hal/logidisk.32
                0x00000000c0009fe4                LogicalDisk::close(int, int, void*)
                0x00000000c0009fe8                LogicalDisk::~LogicalDisk()
                0x00000000c0009fe8                LogicalDisk::~LogicalDisk()
                0x00000000c000a00c                LogicalDisk::~LogicalDisk()
                0x00000000c000a036                LogicalDisk::open(int, int, void*)
                0x00000000c000a04a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a082                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a0c8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a0c8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a188                LogicalDisk::assignDriveLetter()
                0x00000000c000a242                LogicalDisk::mount()
                0x00000000c000a28a                LogicalDisk::unmount()
                0x00000000c000a29a                LogicalDisk::eject()
                0x00000000c000a2ae                LogicalDisk::unassignDriveLetter()
                0x00000000c000a304                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000a370                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000a3dc       0x86 hal/mouse.32
                0x00000000c000a3dc                Mouse::Mouse(char const*)
                0x00000000c000a3dc                Mouse::Mouse(char const*)
                0x00000000c000a414                Mouse::~Mouse()
                0x00000000c000a414                Mouse::~Mouse()
                0x00000000c000a438                Mouse::~Mouse()
 .text          0x00000000c000a462       0x90 hal/nic.32
                0x00000000c000a462                NIC::getMAC()
                0x00000000c000a468                NIC::write(int, unsigned char*, int*)
                0x00000000c000a46e                NIC::NIC(char const*)
                0x00000000c000a46e                NIC::NIC(char const*)
                0x00000000c000a4a4                NIC::~NIC()
                0x00000000c000a4a4                NIC::~NIC()
                0x00000000c000a4c8                NIC::~NIC()
 .text          0x00000000c000a4f2      0x33b hal/partition.32
                0x00000000c000a4f2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a59a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000a82d        0x3 
 .text          0x00000000c000a830       0x86 hal/serial.32
                0x00000000c000a830                Serial::Serial(char const*)
                0x00000000c000a830                Serial::Serial(char const*)
                0x00000000c000a868                Serial::~Serial()
                0x00000000c000a868                Serial::~Serial()
                0x00000000c000a88c                Serial::~Serial()
 *fill*         0x00000000c000a8b6        0x2 
 .text          0x00000000c000a8b8      0x204 hal/timer.32
                0x00000000c000a8b8                Timer::Timer(char const*)
                0x00000000c000a8b8                Timer::Timer(char const*)
                0x00000000c000a8f0                Timer::~Timer()
                0x00000000c000a8f0                Timer::~Timer()
                0x00000000c000a914                Timer::~Timer()
                0x00000000c000a93e                Timer::read()
                0x00000000c000a949                setupTimer(int)
                0x00000000c000a984                timerHandler(unsigned int)
 .text          0x00000000c000aabc      0x60e hal/vcache.32
                0x00000000c000aabc                VCache::VCache(PhysicalDisk*)
                0x00000000c000aabc                VCache::VCache(PhysicalDisk*)
                0x00000000c000ac2c                VCache::invalidateReadBuffer()
                0x00000000c000ac3c                VCache::writeWriteBuffer()
                0x00000000c000ac88                VCache::~VCache()
                0x00000000c000ac88                VCache::~VCache()
                0x00000000c000ace0                VCache::~VCache()
                0x00000000c000ad08                VCache::write(unsigned long long, int, void*)
                0x00000000c000aed6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b0ca      0x71d hal/video.32
                0x00000000c000b0ca                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b116                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b186                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b216                Video::clearScreen(unsigned int)
                0x00000000c000b24a                Video::putpixel(int, int, unsigned int)
                0x00000000c000b258                Video::readPixelApprox(int, int)
                0x00000000c000b26c                Video::Video(char const*)
                0x00000000c000b26c                Video::Video(char const*)
                0x00000000c000b2a2                Video::~Video()
                0x00000000c000b2a2                Video::~Video()
                0x00000000c000b2c6                Video::~Video()
                0x00000000c000b2f0                Video::isMonochrome()
                0x00000000c000b2fc                Video::getWidth()
                0x00000000c000b308                Video::getHeight()
                0x00000000c000b314                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000b3d0                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000b776                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000b7e7        0x1 
 .text          0x00000000c000b7e8     0x1096 hw/acpi.32
                0x00000000c000b7e8                ACPI::close(int, int, void*)
                0x00000000c000b7f0                loadACPITables(unsigned char*)
                0x00000000c000ba50                findRSDT(unsigned char*)
                0x00000000c000bb9c                findDataTable(unsigned char*, char*)
                0x00000000c000bc10                scanMADT()
                0x00000000c000c068                ACPI::ACPI()
                0x00000000c000c068                ACPI::ACPI()
                0x00000000c000c0bc                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c1b8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000c284                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000c28c                ACPI::detectPCI()
                0x00000000c000c498                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000c4b0                ACPI::open(int, int, void*)
 *fill*         0x00000000c000c87e        0x2 
 .text          0x00000000c000c880       0xea krnl/assert.32
                0x00000000c000c880                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000c96a       0xb6 krnl/atexit.32
                0x00000000c000c96a                KeInitialiseAtexit()
                0x00000000c000c989                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000c9bd                KeExecuteAtexit()
 .text          0x00000000c000ca20       0x9f krnl/bootmsg.32
                0x00000000c000ca20                KeDisplaySplashScreen()
                0x00000000c000ca4f                KeSetBootMessage(char const*)
 .text          0x00000000c000cabf       0x5f krnl/c++.32
                0x00000000c000cabf                __cxa_atexit
                0x00000000c000cac2                __cxa_finalize
                0x00000000c000cac3                __stack_chk_fail
                0x00000000c000caf9                __cxa_pure_virtual
                0x00000000c000cb0a                operator new[](unsigned long)
                0x00000000c000cb0f                operator delete(void*, unsigned long)
                0x00000000c000cb14                operator delete[](void*)
                0x00000000c000cb19                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000cb1e        0x2 
 .text          0x00000000c000cb20       0x44 krnl/cdefs.32
                0x00000000c000cb20                CUnlockScheduler
                0x00000000c000cb38                CLockScheduler
                0x00000000c000cb48                CPrintf
 .text          0x00000000c000cb64      0xd51 krnl/cm.32
                0x00000000c000cb64                CmOpen(char const*)
                0x00000000c000cc82                CmClose(Reghive_Tag*)
                0x00000000c000cc98                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000ccd4                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000cd4b                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000cd8a                CmGetNext(Reghive_Tag*, int)
                0x00000000c000cdbc                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000cdf8                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000ce20                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000ce41                CmExpand(Reghive_Tag*, int)
                0x00000000c000cebc                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000cf42                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d036                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d16e                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d1cf                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d1ff                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000d236                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000d260                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000d2a0                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000d344                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000d372                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000d50f                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000d55c                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d5d6                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000d629                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d6ed                zStrtok(char*, char const*)
                0x00000000c000d75f                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000d7e0                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000d883                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000d8b5        0x3 
 .text          0x00000000c000d8b8       0x1d krnl/compat.32
                0x00000000c000d8b8                Krnl::handlePowerButton()
                0x00000000c000d8c8                Krnl::handleSleepButton()
 *fill*         0x00000000c000d8d5        0x1 
 .text          0x00000000c000d8d6      0x2c3 krnl/computer.32
                0x00000000c000d8d6                Computer::close(int, int, void*)
                0x00000000c000d8dc                Computer::open(int, int, void*)
                0x00000000c000d9c2                KeFirstTask()
                0x00000000c000dae4                Computer::Computer()
                0x00000000c000dae4                Computer::Computer()
                0x00000000c000db28                KePrepareShutdown()
                0x00000000c000db48                KeShutdown()
                0x00000000c000db6c                KeSleep()
                0x00000000c000db78                KeRestart()
 .text          0x00000000c000db99       0x2b krnl/crc32.32
                0x00000000c000db99                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000dbc4      0x5bf krnl/env.32
                0x00000000c000dbc4                EnvVarContainer::getEnv(char const*)
                0x00000000c000dc02                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000dcc4                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000dcc6                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000deea                EnvVarContainer::__loadSystem()
                0x00000000c000df04                EnvVarContainer::__loadUser()
                0x00000000c000df06                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000df06                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000df28                EnvVarContainer::~EnvVarContainer()
                0x00000000c000df28                EnvVarContainer::~EnvVarContainer()
                0x00000000c000df58                KeGetEnv(Process*, char const*)
                0x00000000c000dfbd                KeSetEnvSystem(char const*, char const*)
                0x00000000c000dfd7                KeSetEnvUser(char const*, char const*)
                0x00000000c000dff6                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e009                KeDeleteEnvSystem(char const*)
                0x00000000c000e00a                KeDeleteEnvUser(char const*)
                0x00000000c000e00b                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e00c                KeNewProcessEnv(Process*)
                0x00000000c000e02e                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e07a                KeLoadSystemEnv()
                0x00000000c000e0a8                KeLoadUserEnv()
                0x00000000c000e0ce                KeFlushEnv()
                0x00000000c000e0cf                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e0ef                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e183        0x1 
 .text          0x00000000c000e184      0x361 krnl/fault.32
                0x00000000c000e184                KeSetupInterrupts()
                0x00000000c000e1fc                int_handler
                0x00000000c000e32c                KeDisplayProgramFault(char const*)
                0x00000000c000e37c                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e3d0                KePageFault(void*, void*)
                0x00000000c000e434                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e444                KeOtherFault(void*, void*)
                0x00000000c000e478                KeOpcodeFault(void*, void*)
                0x00000000c000e4cc                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000e4e5        0x1 
 .text          0x00000000c000e4e6      0x1db krnl/gdt.32
                0x00000000c000e4e6                GDTEntry::setBase(unsigned int)
                0x00000000c000e502                GDTEntry::setLimit(unsigned int)
                0x00000000c000e520                GDT::GDT()
                0x00000000c000e520                GDT::GDT()
                0x00000000c000e536                GDT::addEntry(GDTEntry)
                0x00000000c000e558                GDT::getNumberOfEntries()
                0x00000000c000e560                GDT::flush()
                0x00000000c000e582                GDT::setup()
 .text          0x00000000c000e6c1       0x20 krnl/idle.32
                0x00000000c000e6c1                idleFunction(void*)
 *fill*         0x00000000c000e6e1        0x3 
 .text          0x00000000c000e6e4      0x46c krnl/idt.32
                0x00000000c000e6e4                IDTEntry::IDTEntry(bool)
                0x00000000c000e6e4                IDTEntry::IDTEntry(bool)
                0x00000000c000e75e                IDTEntry::setOffset(unsigned int)
                0x00000000c000e774                IDT::IDT()
                0x00000000c000e774                IDT::IDT()
                0x00000000c000e776                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000e77e                IDT::addEntry(IDTEntry, int)
                0x00000000c000e798                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000e7d0                IDT::flush()
                0x00000000c000e7ea                IDT::setup()
 .text          0x00000000c000eb50       0x9a krnl/inlines.32
                0x00000000c000eb50                CPU::current()
                0x00000000c000eb5c                operator new(unsigned long)
                0x00000000c000eb61                operator delete(void*)
                0x00000000c000eb66                disableIRQs()
                0x00000000c000eb68                enableIRQs()
                0x00000000c000eb6a                lockScheduler()
                0x00000000c000eb72                unlockScheduler()
                0x00000000c000eb84                lockStuff()
                0x00000000c000eb92                unlockStuff()
                0x00000000c000ebcf                Virt::getAKernelVAS()
                0x00000000c000ebd5                __not_memcpy
 .text          0x00000000c000ebea      0x2ae krnl/intlformat.32
                0x00000000c000ebea                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000edcc                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000edee                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000ee10                KeSetLocale(klocale_t)
                0x00000000c000ee26                KeInitialiseLocale()
                0x00000000c000ee94                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000ee95                KeFormatCurrency(char*, int, double)
                0x00000000c000ee96                KeFormatNumber(char*, long long, long long)
                0x00000000c000ee97                KeFormatNumber(char*, double)
 .text          0x00000000c000ee98      0x356 krnl/intops.32
                0x00000000c000ee98                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000efb4                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f0f4                KeGetDigitsInNumber(long long)
                0x00000000c000f160                KeItoa(unsigned long long, char*)
                0x00000000c000f190                KeItoa(long long, char*)
                0x00000000c000f1c0                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f1ee      0x204 krnl/kheap.32
                0x00000000c000f1ee                sbrk
                0x00000000c000f282                sbrk_thunk
                0x00000000c000f2b8                mmap
                0x00000000c000f316                munmap
                0x00000000c000f32b                liballoc_lock()
                0x00000000c000f339                liballoc_unlock()
                0x00000000c000f351                liballoc_alloc(int)
                0x00000000c000f369                liballoc_free(void*, int)
                0x00000000c000f384                realloc
                0x00000000c000f398                malloc
                0x00000000c000f3a8                free
                0x00000000c000f3b8                rfree
                0x00000000c000f3c8                calloc
 *fill*         0x00000000c000f3f2        0x2 
 .text          0x00000000c000f3f4      0x1d3 krnl/mailbox.32
                0x00000000c000f3f4                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000f454                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000f4b4                KeMailboxCreate()
                0x00000000c000f4e8                KeMailboxPost(Mailbox*, void*)
                0x00000000c000f54c                KeMailboxGet(Mailbox*, void**)
                0x00000000c000f5b0                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000f5c7       0xfd krnl/main.32
                0x00000000c000f5c7                KeEntryPoint
 .text          0x00000000c000f6c4       0x1a krnl/mutex.32
                0x00000000c000f6c4                Mutex::Mutex()
                0x00000000c000f6c4                Mutex::Mutex()
 .text          0x00000000c000f6de        0xc krnl/panic.32
                0x00000000c000f6de                KePanic(char const*)
 .text          0x00000000c000f6ea      0x666 krnl/physmgr.32
                0x00000000c000f6ea                Phys::allocateDMA(unsigned long)
                0x00000000c000f7d8                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000f813                Phys::setPageState(unsigned long, bool)
                0x00000000c000f853                Phys::getPageState(unsigned long)
                0x00000000c000f86f                Phys::freePage(unsigned long)
                0x00000000c000f8d8                Phys::allocatePage()
                0x00000000c000f9b6                Phys::allocateContiguousPages(int)
                0x00000000c000fa31                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000fa69                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000fd50      0x271 krnl/pipe.32
                0x00000000c000fd50                Pipe::isAtty()
                0x00000000c000fd54                Pipe::~Pipe()
                0x00000000c000fd54                Pipe::~Pipe()
                0x00000000c000fd78                Pipe::~Pipe()
                0x00000000c000fda0                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000fe64                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000ff5a                Pipe::Pipe(int)
                0x00000000c000ff5a                Pipe::Pipe(int)
 .text          0x00000000c000ffc1      0x10b krnl/powctrl.32
                0x00000000c000ffc1                KePowerThread(void*)
                0x00000000c000fff2                KeChangePowerSettings(PowerSettings)
                0x00000000c0010008                KeUserIOReceived()
                0x00000000c0010013                KeHandlePowerButton()
                0x00000000c001002b                KeHandleSleepButton()
                0x00000000c0010043                KeSetupPowerManager()
 .text          0x00000000c00100cc       0x9b krnl/random.32
                0x00000000c00100cc                KeRand()
                0x00000000c001010c                KeSeedRand(unsigned int)
                0x00000000c0010135                KeInitRand()
 *fill*         0x00000000c0010167        0x1 
 .text          0x00000000c0010168      0x1bc krnl/resolve.32
                0x00000000c0010168                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010324      0x401 krnl/semaphore.32
                0x00000000c0010324                Semaphore::Semaphore(int)
                0x00000000c0010324                Semaphore::Semaphore(int)
                0x00000000c0010354                Semaphore::tryAcquire()
                0x00000000c0010428                Semaphore::assertLocked(char const*)
                0x00000000c00104b4                Semaphore::acquire(int)
                0x00000000c0010658                Semaphore::acquire()
                0x00000000c0010674                Semaphore::release()
 .text          0x00000000c0010725      0x31f krnl/signal.32
                0x00000000c0010725                KiSigKill(int)
                0x00000000c0010739                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001073a                KiDefaultSignalHandlerPause(int)
                0x00000000c0010766                KiDefaultSignalHandlerResume(int)
                0x00000000c0010792                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010797                KeInitSignals()
                0x00000000c00107e6                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c001081c                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010899                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010990                KiCheckSignalZ
                0x00000000c00109d2                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010a0d                KiFinishSignalZ
 .text          0x00000000c0010a44      0xe1d krnl/syscalls.32
                0x00000000c0010a44                SysSeekDir(regs*)
                0x00000000c0010a49                SysTellDir(regs*)
                0x00000000c0010a4e                SysVerify(regs*)
                0x00000000c0010a58                SysGetArgc(regs*)
                0x00000000c0010a6c                SysTTYName(regs*)
                0x00000000c0010a74                SysFormatDisk(regs*)
                0x00000000c0010adb                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010b2f                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010b88                SysRealpath(regs*)
                0x00000000c0010bd6                SysReadDir(regs*)
                0x00000000c0010c56                SysIsATTY(regs*)
                0x00000000c0010cb0                SysSeek(regs*)
                0x00000000c0010d0e                SysTell(regs*)
                0x00000000c0010d83                SysSize(regs*)
                0x00000000c0010dfd                SysSizeFromFilename(regs*)
                0x00000000c0010f30                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011063                SysClose(regs*)
                0x00000000c00110c8                SysOpenDir(regs*)
                0x00000000c0011145                SysMakeDir(regs*)
                0x00000000c00111b3                SysCloseDir(regs*)
                0x00000000c0011207                SysWait(regs*)
                0x00000000c0011228                SysNotImpl(regs*)
                0x00000000c0011243                SysPanic(regs*)
                0x00000000c001125e                SysRmdir(regs*)
                0x00000000c00112bc                SysUnlink(regs*)
                0x00000000c001131a                SysGetArgv(regs*)
                0x00000000c0011367                SysUSleep(regs*)
                0x00000000c0011390                SysSpawn(regs*)
                0x00000000c0011401                SysGetEnv(regs*)
                0x00000000c00114b6                SysSetFatAttrib(regs*)
                0x00000000c001151f                SysShutdown(regs*)
                0x00000000c001157c                SysPipe(regs*)
                0x00000000c00115c1                SysGetUnixTime(regs*)
                0x00000000c00115d5                string_ends_with(char const*, char const*)
                0x00000000c0011620                SysOpen(regs*)
                0x00000000c001181f                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011861        0x1 
 .text          0x00000000c0011862      0xadd krnl/terminal.32
                0x00000000c0011862                VgaText::isAtty()
                0x00000000c0011866                VgaText::~VgaText()
                0x00000000c0011866                VgaText::~VgaText()
                0x00000000c001188a                VgaText::~VgaText()
                0x00000000c00118b4                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00118d4                setTerminalScrollLock(bool)
                0x00000000c00118d5                doTerminalCycle()
                0x00000000c00118d6                addToTerminalCycle(VgaText*)
                0x00000000c00118d7                scrollTerminalScrollLock(int)
                0x00000000c00118d8                VgaText::updateTitle()
                0x00000000c00118da                VgaText::load()
                0x00000000c00118dc                VgaText::updateCursor()
                0x00000000c00118f2                VgaText::doANSI_SGR(int)
                0x00000000c0011966                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0011976                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0011986                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00119a6                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00119b2                VgaText::setTitleColour(VgaColour)
                0x00000000c00119be                VgaText::setTitle(char*)
                0x00000000c00119c0                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00119d2                VgaText::scrollScreen()
                0x00000000c0011a64                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0011a74                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0011b20                VgaText::getCursorX()
                0x00000000c0011b28                VgaText::getCursorY()
                0x00000000c0011b30                VgaText::setCursor(int, int)
                0x00000000c0011b47                setActiveTerminal(VgaText*)
                0x00000000c0011b92                VgaText::clearScreen()
                0x00000000c0011be0                VgaText::setCursorX(int)
                0x00000000c0011bf8                VgaText::setCursorY(int)
                0x00000000c0011c10                VgaText::incrementCursor(bool)
                0x00000000c0011c64                VgaText::decrementCursor(bool)
                0x00000000c0011c86                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0011d56                VgaText::putchar(char)
                0x00000000c0011e3e                VgaText::putx(unsigned int)
                0x00000000c0011e84                VgaText::puts(char const*)
                0x00000000c0011eaa                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0011ef6                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0012070                VgaText::VgaText(char const*)
                0x00000000c0012070                VgaText::VgaText(char const*)
                0x00000000c00121d0                VgaText::receiveKey(unsigned char)
                0x00000000c001233e                VgaText::doUpdate()
 *fill*         0x00000000c001233f        0x1 
 .text          0x00000000c0012340      0x224 krnl/tss.32
                0x00000000c0012340                TSS::TSS()
                0x00000000c0012340                TSS::TSS()
                0x00000000c0012350                TSS::setESP(unsigned long)
                0x00000000c0012364                TSS::flush()
                0x00000000c0012384                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012564      0x4dc krnl/unixfile.32
                0x00000000c0012564                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00125ba                ReservedFilename::isAtty()
                0x00000000c00125d6                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012634                UnixFile::getFileDescriptor()
                0x00000000c001263c                UnixFile::UnixFile(int)
                0x00000000c001263c                UnixFile::UnixFile(int)
                0x00000000c00127f0                ReservedFilename::ReservedFilename(int)
                0x00000000c00127f0                ReservedFilename::ReservedFilename(int)
                0x00000000c0012822                UnixFile::~UnixFile()
                0x00000000c0012822                UnixFile::~UnixFile()
                0x00000000c00128be                UnixFile::~UnixFile()
                0x00000000c00128e6                ReservedFilename::~ReservedFilename()
                0x00000000c00128e6                ReservedFilename::~ReservedFilename()
                0x00000000c001290a                ReservedFilename::~ReservedFilename()
                0x00000000c0012931                KeGetFileFromDescriptor(int)
 .text          0x00000000c0012a40     0x14be krnl/virtmgr.32
                0x00000000c0012a40                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0012a7a                Virt::getPageState(unsigned long)
                0x00000000c0012a9d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0012bb9                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0012bdc                Virt::swapIDToSector(unsigned long)
                0x00000000c0012bf2                Virt::allocateSwapfilePage()
                0x00000000c0012c71                Virt::virtualMemorySetup()
                0x00000000c0012cc2                Virt::setupPageSwapping(int)
                0x00000000c0012d34                VAS::setCPUSpecific(unsigned long)
                0x00000000c0012d36                VAS::VAS(VAS*)
                0x00000000c0012d36                VAS::VAS(VAS*)
                0x00000000c0012d4e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0012d7c                VAS::getPageTableEntry(unsigned long)
                0x00000000c0012d9b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0012ed8                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0012efc                VAS::virtualToPhysical(unsigned long)
                0x00000000c0012f16                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0012f58                VAS::VAS()
                0x00000000c0012f58                VAS::VAS()
                0x00000000c0012fc2                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0012fe2                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c001300e                VAS::~VAS()
                0x00000000c001300e                VAS::~VAS()
                0x00000000c0013176                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c001327e                VAS::allocatePages(int, int)
                0x00000000c0013370                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c00133ca                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c00134ba                VAS::VAS(bool)
                0x00000000c00134ba                VAS::VAS(bool)
                0x00000000c00136a2                VAS::evict(unsigned long)
                0x00000000c00137a6                VAS::canLockPage(unsigned long)
                0x00000000c00137c0                VAS::unlockPage(unsigned long)
                0x00000000c00137f4                VAS::canLockPages(unsigned long, int)
                0x00000000c0013830                VAS::unlockPages(unsigned long, int)
                0x00000000c001386c                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0013b7c                VAS::lockPage(unsigned long)
                0x00000000c0013bee                VAS::lockPages(unsigned long, int)
                0x00000000c0013c2a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0013c9e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0013cca                VAS::scanForEviction()
                0x00000000c0013e03                mapVASFirstTime
 .text          0x00000000c0013efe       0x36 sys/eject.32
                0x00000000c0013efe                SysEject(regs*)
 .text          0x00000000c0013f34       0x18 sys/exit.32
                0x00000000c0013f34                SysExit(regs*)
 .text          0x00000000c0013f4c       0x1f sys/getcwd.32
                0x00000000c0013f4c                SysGetCwd(regs*)
 .text          0x00000000c0013f6b       0x26 sys/getpid.32
                0x00000000c0013f6b                SysGetPID(regs*)
 .text          0x00000000c0013f91       0x21 sys/getramdata.32
                0x00000000c0013f91                SysGetRAMData(regs*)
 .text          0x00000000c0013fb2       0x97 sys/getvgaptr.32
                0x00000000c0013fb2                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014049        0x3 
 .text          0x00000000c001404c       0xb9 sys/kill.32
                0x00000000c001404c                SysKill(regs*)
 .text          0x00000000c0014105       0xa8 sys/loaddll.32
                0x00000000c0014105                SysLoadDLL(regs*)
 .text          0x00000000c00141ad       0x68 sys/read.32
                0x00000000c00141ad                SysRead(regs*)
 .text          0x00000000c0014215       0x29 sys/registersignal.32
                0x00000000c0014215                SysRegisterSignal(regs*)
 .text          0x00000000c001423e      0x1cc sys/registry.32
                0x00000000c001423e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014282                SysRegistryReadExtent(regs*)
                0x00000000c00142ca                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00142e1                SysRegistryEnterDirectory(regs*)
                0x00000000c00142f8                SysRegistryGetNext(regs*)
                0x00000000c001430f                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014349                SysRegistryOpen(regs*)
                0x00000000c001435d                SysRegistryClose(regs*)
                0x00000000c0014374                SysRegistryEasyReadString(regs*)
                0x00000000c00143c0                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c001440a       0x55 sys/sbrk.32
                0x00000000c001440a                SysSbrk(regs*)
 .text          0x00000000c001445f       0x1c sys/setcwd.32
                0x00000000c001445f                SysSetCwd(regs*)
 .text          0x00000000c001447b       0xf1 sys/settime.32
                0x00000000c001447b                SysSetTime(regs*)
 .text          0x00000000c001456c       0x73 sys/symlink.32
                0x00000000c001456c                SysSymlink(regs*)
 .text          0x00000000c00145df       0x3e sys/timezone.32
                0x00000000c00145df                SysTimezone(regs*)
 .text          0x00000000c001461d       0xfc sys/truncate.32
                0x00000000c001461d                SysTruncate(regs*)
 .text          0x00000000c0014719       0x68 sys/write.32
                0x00000000c0014719                SysWrite(regs*)
 .text          0x00000000c0014781       0x9d sys/wsbe.32
                0x00000000c0014781                SysWsbe(regs*)
 .text          0x00000000c001481e       0x28 sys/yield.32
                0x00000000c001481e                SysYield(regs*)
 .text          0x00000000c0014846     0x1228 thr/elf.32
                0x00000000c0014846                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014ad1                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014cf0                Thr::runtimeReferenceHelper()
                0x00000000c0014d03                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014d52                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015010                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015751                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015783                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00157ba                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00157d4                Thr::loadDLL(char const*, bool)
                0x00000000c0015a35                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0015a6e       0x5a thr/exec.32
                0x00000000c0015a6e                KeProcessExec(Process*, char const*)
 .text          0x00000000c0015ac8     0x11b5 thr/prcssthr.32
                0x00000000c0015ac8                userModeEntryPoint(void*)
                0x00000000c0015af4                changeTSS
                0x00000000c0015b24                switchToThread(ThreadControlBlock*)
                0x00000000c0015bd4                Process::addArgs(char**)
                0x00000000c0015c40                Process::Process(char const*, Process*, char**)
                0x00000000c0015c40                Process::Process(char const*, Process*, char**)
                0x00000000c0015e68                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015e68                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016054                taskStartupFunction
                0x00000000c0016060                KeDisablePreemption()
                0x00000000c0016088                KeRestorePreemption()
                0x00000000c00160a8                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00161bc                Process::createUserThread()
                0x00000000c00161dc                setupMultitasking(void (*)())
                0x00000000c0016300                schedule()
                0x00000000c0016394                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00163c0                blockTask(TaskState)
                0x00000000c00163fc                waitTask(int, int*, int)
                0x00000000c0016440                milliTenthSleepUntil(unsigned int)
                0x00000000c00164e8                milliTenthSleep(unsigned int)
                0x00000000c00164fc                sleep(unsigned int)
                0x00000000c001650c                taskReturned
                0x00000000c0016554                Thr::processFromPID(int)
                0x00000000c0016600                unblockTask(ThreadControlBlock*)
                0x00000000c00166b4                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016988                cleanerTaskFunction(void*)
                0x00000000c0016aa0                terminateTask(int)
                0x00000000c0016bb0                Thr::terminateFromIRQ(int)
 .text          0x00000000c0016c7d      0xd18 vm86/vm8086.32
                0x00000000c0016c7d                Vm::inbv(unsigned short)
                0x00000000c0016c90                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016cc6                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016cd6                Vm::getSegment(unsigned int)
                0x00000000c0016cde                Vm::getOffset(unsigned int)
                0x00000000c0016ce3                Vm::mainloop2()
                0x00000000c0016d1d                Vm::mainVm8086Loop(void*)
                0x00000000c0016d30                Vm::mainloop3(unsigned long)
                0x00000000c0016d56                Vm::initialise8086()
                0x00000000c0016d99                Vm::resetConventionalMemory8086()
                0x00000000c0016d9a                Vm::finish8086()
                0x00000000c0016dfc                Vm::getOutput8086(unsigned char*)
                0x00000000c0016e21                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016f4e                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001715a                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00171f7                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017208                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001721a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001722b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017240                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017256                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001726b                Vm::faultHandler(regs*)
 *fill*         0x00000000c0017995        0x1 
 .text          0x00000000c0017996     0x1ee9 arch/i386/hal.32
                0x00000000c0017996                noCopro(unsigned long)
                0x00000000c0017998                CPU::close(int, int, void*)
                0x00000000c001799b                x86ReadCMOS(unsigned char)
                0x00000000c00179ef                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0017a51                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0017a70                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0017a8d                AMD_K6_writeback(int, int, int)
                0x00000000c0017b4d                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0017beb                cpuidCheckEDX(unsigned int)
                0x00000000c0017c18                cpuidCheckECX(unsigned int)
                0x00000000c0017c46                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0017c74                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0017ca2                HalDetectFeatures()
                0x00000000c0018a6d                HalEnableNMI()
                0x00000000c0018a80                HalDisableNMI()
                0x00000000c0018a93                HalGetNMIState()
                0x00000000c0018a99                x86rdmsr(unsigned int)
                0x00000000c0018ad7                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0018b1c                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0018b32                HalFindRSDP()
                0x00000000c0018bc7                HalHandlePageFault(void*, void*)
                0x00000000c0018c74                HalHandleOpcodeFault(void*, void*)
                0x00000000c0018cb6                HalDisplayDebugInfo(void*)
                0x00000000c0019044                HalReceivedNMI()
                0x00000000c00190df                HalSystemIdle()
                0x00000000c001913e                i386SaveCoprocessor(void*)
                0x00000000c0019152                i386LoadCoprocessor(void*)
                0x00000000c0019166                x87EmulHandler(regs*, void*)
                0x00000000c0019203                HalInitialiseCoprocessor()
                0x00000000c0019287                HalPanic(char const*)
                0x00000000c001939b                HalQueryPerformanceCounter()
                0x00000000c00193ab                HalInitialise()
                0x00000000c001953d                HalMakeBeep(int)
                0x00000000c0019577                HalGetRand()
                0x00000000c001957a                HalEndOfInterrupt(int)
                0x00000000c00195a5                HalRestart()
                0x00000000c00195a6                HalShutdown()
                0x00000000c00195a7                HalSleep()
                0x00000000c00195a8                CPU::CPU()
                0x00000000c00195a8                CPU::CPU()
                0x00000000c001962c                CPU::setupSMEP()
                0x00000000c0019638                CPU::setupUMIP()
                0x00000000c0019642                CPU::setupTSC()
                0x00000000c001964c                CPU::setupLargePages()
                0x00000000c0019656                CPU::setupPAT()
                0x00000000c0019688                CPU::setupMTRR()
                0x00000000c001968a                CPU::setupGlobalPages()
                0x00000000c0019694                CPU::allowUsermodeDataAccess()
                0x00000000c00196a2                CPU::prohibitUsermodeDataAccess()
                0x00000000c00196b0                CPU::setupSMAP()
                0x00000000c00196be                CPU::setupFeatures()
                0x00000000c001978a                CPU::open(int, int, void*)
 .text          0x00000000c001987f      0x268 arch/i386/intctrl.32
                0x00000000c001987f                convertLegacyIRQNumber(int)
                0x00000000c00198bb                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0019905                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0019a42                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0019a76                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c0019ae7        0x1 
 .text          0x00000000c0019ae8      0x2dc arch/i386/pic.32
                0x00000000c0019ae8                picIoWait()
                0x00000000c0019af0                picDisable()
                0x00000000c0019b24                picGetIRQReg(int)
                0x00000000c0019ba0                picOpen()
                0x00000000c0019d24                picEOI(int)
 .text          0x00000000c0019dc4      0x5ed arch/i386/rtc.32
                0x00000000c0019dc4                RTC::open(int, int, void*)
                0x00000000c0019dc8                RTC::close(int, int, void*)
                0x00000000c0019dcc                RTC::timeInSecondsUTC()
                0x00000000c0019dde                RTC::timeInDatetimeUTC()
                0x00000000c0019e04                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0019e42                RTC::~RTC()
                0x00000000c0019e42                RTC::~RTC()
                0x00000000c0019e66                RTC::~RTC()
                0x00000000c0019e90                RTC::get_update_in_progress_flag()
                0x00000000c0019ea4                RTC::completeRTCRefresh()
                0x00000000c001a152                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001a2c8                rtcIRQHandler(regs*, void*)
                0x00000000c001a308                RTC::RTC()
                0x00000000c001a308                RTC::RTC()
 *fill*         0x00000000c001a3b1        0x3 
 .text          0x00000000c001a3b4      0x1f4 arch/i386/vga.32
                0x00000000c001a3b4                HalConsoleScroll(int, int)
                0x00000000c001a4bc                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001a520                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001a5a8     0x14f3 fs/fat/vfslink.32
                0x00000000c001a5a8                FAT::getName()
                0x00000000c001a5b0                FAT::tell(void*, unsigned long long*)
                0x00000000c001a5ec                FAT::stat(void*, unsigned long long*)
                0x00000000c001a628                FAT::~FAT()
                0x00000000c001a628                FAT::~FAT()
                0x00000000c001a64c                FAT::~FAT()
                0x00000000c001a674                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001a718                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001a7f8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a9dc                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001abf8                FAT::allocateSwapfile(char const*, int)
                0x00000000c001adb8                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001af28                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001af88                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001afe8                FAT::close(void*)
                0x00000000c001b03c                FAT::closeDir(void*)
                0x00000000c001b090                FAT::truncate(void*, unsigned long long)
                0x00000000c001b0fc                FAT::seek(void*, unsigned long long)
                0x00000000c001b154                fatWrapperReadDisk
                0x00000000c001b194                fatWrapperWriteDisk
                0x00000000c001b1d4                fatWrapperIoctl
                0x00000000c001b2f4                FAT::FAT()
                0x00000000c001b2f4                FAT::FAT()
                0x00000000c001b34c                FAT::fixFilepath(char*)
                0x00000000c001b38c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001b500                FAT::openDir(char const*, void**)
                0x00000000c001b5b0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b6a8                FAT::unlink(char const*)
                0x00000000c001b728                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b8e0                FAT::rename(char const*, char const*)
                0x00000000c001b9ac                FAT::mkdir(char const*)
                0x00000000c001ba2c                FAT::exists(char const*)
 *fill*         0x00000000c001ba9b        0x1 
 .text          0x00000000c001ba9c       0x94 fs/iso9660/helper.32
                0x00000000c001ba9c                isoReadDiscSectorHelper
                0x00000000c001baf8                iso_kprintf
                0x00000000c001bb14                iso_kprintfd
 .text          0x00000000c001bb30      0x71a fs/iso9660/vfslink.32
                0x00000000c001bb30                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001bb36                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001bb3c                ISO9660::getName()
                0x00000000c001bb42                ISO9660::closeDir(void*)
                0x00000000c001bb4c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001bb52                ISO9660::unlink(char const*)
                0x00000000c001bb58                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001bb5e                ISO9660::rename(char const*, char const*)
                0x00000000c001bb64                ISO9660::mkdir(char const*)
                0x00000000c001bb6a                ISO9660::~ISO9660()
                0x00000000c001bb6a                ISO9660::~ISO9660()
                0x00000000c001bb8e                ISO9660::~ISO9660()
                0x00000000c001bbb6                ISO9660::exists(char const*)
                0x00000000c001bbca                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001bcb0                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001bcf8                ISO9660::seek(void*, unsigned long long)
                0x00000000c001bd3a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001bd78                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001bdca                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001bf0c                ISO9660::close(void*)
                0x00000000c001bf3c                ISO9660::openDir(char const*, void**)
                0x00000000c001c016                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c131                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001c1b0                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001c222                ISO9660::ISO9660()
                0x00000000c001c222                ISO9660::ISO9660()
 .text          0x00000000c001c24a      0x26c hal/sound/sndcard.32
                0x00000000c001c24a                SoundCard::beginPlayback()
                0x00000000c001c258                SoundCard::stopPlayback()
                0x00000000c001c266                SoundCard::SoundCard(char const*)
                0x00000000c001c266                SoundCard::SoundCard(char const*)
                0x00000000c001c304                SoundCard::~SoundCard()
                0x00000000c001c304                SoundCard::~SoundCard()
                0x00000000c001c328                SoundCard::~SoundCard()
                0x00000000c001c352                SoundCard::configureRates(int, int, int)
                0x00000000c001c382                SoundCard::getSamples16(int, short*)
                0x00000000c001c3de                SoundCard::getSamples32(int, int*)
                0x00000000c001c464                SoundCard::addChannel(SoundPort*)
                0x00000000c001c4a2                SoundCard::removeChannel(int)
 *fill*         0x00000000c001c4b6        0x2 
 .text          0x00000000c001c4b8      0x42f hal/sound/sndport.32
                0x00000000c001c4b8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c4b8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c544                SoundPort::~SoundPort()
                0x00000000c001c544                SoundPort::~SoundPort()
                0x00000000c001c578                SoundPort::unpause()
                0x00000000c001c584                SoundPort::pause()
                0x00000000c001c590                SoundPort::getBufferUsed()
                0x00000000c001c598                SoundPort::getBufferSize()
                0x00000000c001c5a0                SoundPort::buffer8(signed char*, int)
                0x00000000c001c634                SoundPort::buffer16(short*, int)
                0x00000000c001c6c8                SoundPort::buffer32(int*, int)
                0x00000000c001c754                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001c824                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001c8e7        0x0 hw/bus/isa.32
 *fill*         0x00000000c001c8e7        0x1 
 .text          0x00000000c001c8e8      0xc25 hw/bus/pci.32
                0x00000000c001c8e8                PCI::open(int, int, void*)
                0x00000000c001c906                PCI::close(int, int, void*)
                0x00000000c001c90a                PCI::PCI()
                0x00000000c001c90a                PCI::PCI()
                0x00000000c001c9a2                PCI::readBAR8(unsigned int, int)
                0x00000000c001c9be                PCI::readBAR16(unsigned int, int)
                0x00000000c001c9dc                PCI::readBAR32(unsigned int, int)
                0x00000000c001c9f8                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001ca18                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001ca3a                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001ca5a                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cad0                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cb7a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001cb9e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001cbc6                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001cc10                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001cc38                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001cc5c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001cc80                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001cca8                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cd0c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001cdf2                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001d0bc                PCI::checkBus(unsigned char)
                0x00000000c001d0e0                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001d2c6                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001d442                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001d4b4                PCI::detect()
 *fill*         0x00000000c001d50d        0x1 
 .text          0x00000000c001d50e      0xe50 hw/diskctrl/ide.32
                0x00000000c001d50e                IDE::close(int, int, void*)
                0x00000000c001d512                IDE::IDE()
                0x00000000c001d512                IDE::IDE()
                0x00000000c001d546                IDE::prepareInterrupt(unsigned char)
                0x00000000c001d558                selectDrive(unsigned char, unsigned char)
                0x00000000c001d55a                IDE::getBase(unsigned char)
                0x00000000c001d56c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001d62c                IDE::read(unsigned char, unsigned char)
                0x00000000c001d6e0                IDE::waitInterrupt(unsigned char)
                0x00000000c001d742                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001d75e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001d77a                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001d7c4                IDE::open(int, int, void*)
                0x00000000c001dd1c                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ddec                IDE::detect()
                0x00000000c001e250                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001e30a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001e35e      0x33f hw/diskctrl/satabus.32
                0x00000000c001e35e                SATABus::close(int, int, void*)
                0x00000000c001e362                SATABus::detect()
                0x00000000c001e364                SATABus::SATABus()
                0x00000000c001e364                SATABus::SATABus()
                0x00000000c001e3ea                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e41c                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e464                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e484                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e4ae                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001e5c0                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001e66a                SATABus::open(int, int, void*)
 *fill*         0x00000000c001e69d        0x1 
 .text          0x00000000c001e69e      0x7c1 hw/diskphys/ata.32
                0x00000000c001e69e                ATA::close(int, int, void*)
                0x00000000c001e6c2                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001e6c4                ATA::ATA()
                0x00000000c001e6c4                ATA::ATA()
                0x00000000c001e6f2                ATA::flush(bool)
                0x00000000c001e740                ATA::readyForCommand()
                0x00000000c001e78c                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001eb94                ATA::read(unsigned long long, int, void*)
                0x00000000c001ebe0                ATA::write(unsigned long long, int, void*)
                0x00000000c001ec2c                ATA::detectCHS()
                0x00000000c001ec56                ATA::open(int, int, void*)
                0x00000000c001ee41                combineCharAndColour(char, unsigned char)
                0x00000000c001ee52                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001ee5f        0x1 
 .text          0x00000000c001ee60      0x612 hw/diskphys/atapi.32
                0x00000000c001ee60                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001ee66                ATAPI::close(int, int, void*)
                0x00000000c001ee8a                ATAPI::ATAPI()
                0x00000000c001ee8a                ATAPI::ATAPI()
                0x00000000c001eeb8                ATAPI::readyForCommand()
                0x00000000c001ef0a                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001f1ca                ATAPI::diskRemoved()
                0x00000000c001f204                ATAPI::eject()
                0x00000000c001f24c                ATAPI::diskInserted()
                0x00000000c001f258                ATAPI::detectMedia()
                0x00000000c001f318                ATAPI::open(int, int, void*)
                0x00000000c001f3f8                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001f472      0x44a hw/diskphys/sata.32
                0x00000000c001f472                SATA::close(int, int, void*)
                0x00000000c001f496                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001f498                SATA::open(int, int, void*)
                0x00000000c001f550                SATA::SATA()
                0x00000000c001f550                SATA::SATA()
                0x00000000c001f57e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f804                SATA::read(unsigned long long, int, void*)
                0x00000000c001f850                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001f8bc      0x5d8 hw/diskphys/satapi.32
                0x00000000c001f8bc                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001f8c2                SATAPI::close(int, int, void*)
                0x00000000c001f8e6                SATAPI::SATAPI()
                0x00000000c001f8e6                SATAPI::SATAPI()
                0x00000000c001f914                SATAPI::diskRemoved()
                0x00000000c001f916                SATAPI::diskInserted()
                0x00000000c001f932                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001fc18                SATAPI::eject()
                0x00000000c001fc54                SATAPI::detectMedia()
                0x00000000c001fcaa                SATAPI::open(int, int, void*)
                0x00000000c001fdaa                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001fe94      0x443 hw/intctrl/apic.32
                0x00000000c001fe94                IOAPIC::close(int, int, void*)
                0x00000000c001fe9a                apicGetBase()
                0x00000000c001feb8                IOAPIC::IOAPIC()
                0x00000000c001feb8                IOAPIC::IOAPIC()
                0x00000000c001fee0                apicOpen()
                0x00000000c002006c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c002009e                IOAPIC::read(int)
                0x00000000c00200c6                IOAPIC::open(int, int, void*)
                0x00000000c00201ac                IOAPIC::write(int, int)
                0x00000000c00201d8                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c00202d7        0x1 
 .text          0x00000000c00202d8       0xf0 hw/timer/apictimer.32
                0x00000000c00202d8                APICTimer::close(int, int, void*)
                0x00000000c00202e0                apicTimerHandler(regs*, void*)
                0x00000000c0020308                APICTimer::open(int, int, void*)
                0x00000000c0020378                APICTimer::write(int)
                0x00000000c00203a0                APICTimer::APICTimer()
                0x00000000c00203a0                APICTimer::APICTimer()
 .text          0x00000000c00203c8      0x1ad hw/timer/pit.32
                0x00000000c00203c8                PIT::write(int)
                0x00000000c002044c                pitHandler(regs*, void*)
                0x00000000c0020474                PIT::open(int, int, void*)
                0x00000000c00204c4                PIT::close(int, int, void*)
                0x00000000c00204f4                PIT::PIT()
                0x00000000c00204f4                PIT::PIT()
 *fill*         0x00000000c0020575        0xb 
 .text          0x00000000c0020580       0x6f arch/i386/avx.32
                0x00000000c0020580                avxDetect
                0x00000000c00205aa                avxSave
                0x00000000c00205bb                avxLoad
                0x00000000c00205cc                avxInit
                0x00000000c00205ee                avxClose
 *fill*         0x00000000c00205ef        0x1 
 .text          0x00000000c00205f0      0x2ec arch/i386/interrupt.32
                0x00000000c00205f0                isr0
                0x00000000c0020600                isr1
                0x00000000c002060a                isr2
                0x00000000c0020614                isr3
                0x00000000c002061e                isr4
                0x00000000c0020628                isr5
                0x00000000c0020632                isr6
                0x00000000c002063c                isr7
                0x00000000c0020646                isr8
                0x00000000c002064e                isr9
                0x00000000c0020658                isr10
                0x00000000c0020660                isr11
                0x00000000c0020668                isr12
                0x00000000c0020670                isr13
                0x00000000c002068a                isr14
                0x00000000c0020692                isr15
                0x00000000c002069c                isr16
                0x00000000c00206a6                isr17
                0x00000000c00206b0                isr18
                0x00000000c00206ba                irq3
                0x00000000c00206c4                irq4
                0x00000000c00206ce                irq5
                0x00000000c00206d8                irq6
                0x00000000c00206e2                irq7
                0x00000000c00206ec                irq8
                0x00000000c00206f6                irq9
                0x00000000c0020700                irq10
                0x00000000c002070a                irq11
                0x00000000c0020714                irq12
                0x00000000c002071e                irq13
                0x00000000c0020728                irq14
                0x00000000c0020732                irq15
                0x00000000c002073c                irq1
                0x00000000c0020743                irq2
                0x00000000c002074a                isr96
                0x00000000c0020751                irq0
                0x00000000c0020756                int_common_stub
                0x00000000c0020788                syscall_common_stub
                0x00000000c002088c                irq16
                0x00000000c0020896                irq17
                0x00000000c00208a0                irq18
                0x00000000c00208aa                irq19
                0x00000000c00208b4                irq20
                0x00000000c00208be                irq21
                0x00000000c00208c8                irq22
                0x00000000c00208d2                irq23
 *fill*         0x00000000c00208dc        0x4 
 .text          0x00000000c00208e0       0x10 arch/i386/rdrand.32
                0x00000000c00208e0                i386GetRDRAND
 .text          0x00000000c00208f0       0x39 arch/i386/sse.32
                0x00000000c00208f0                sseDetect
                0x00000000c0020908                sseSave
                0x00000000c0020910                sseLoad
                0x00000000c0020918                sseInit
                0x00000000c0020928                sseClose
 *fill*         0x00000000c0020929        0x7 
 .text          0x00000000c0020930       0x4f arch/i386/x87.32
                0x00000000c0020936                x87Detect
                0x00000000c0020957                x87Save
                0x00000000c002095e                x87Load
                0x00000000c0020965                x87Init
                0x00000000c002097e                x87Close
 *fill*         0x00000000c002097f        0x1 
 .text          0x00000000c0020980       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00209a5        0x0 crtn.32
 *fill*         0x00000000c00209a5        0x3 
 .text          0x00000000c00209a8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00209a8                __divdi3
 *fill*         0x00000000c0020af3        0x1 
 .text          0x00000000c0020af4      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0020af4                __moddi3
 *fill*         0x00000000c0020c72        0x2 
 .text          0x00000000c0020c74       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0020c74                __udivdi3
 *fill*         0x00000000c0020d73        0x1 
 .text          0x00000000c0020d74      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0020d74                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0020e90        0x0
 .iplt          0x00000000c0020e90        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0020e8e        0xf
 .init          0x00000000c0020e8e        0x3 crti.32
                0x00000000c0020e8e                _init
 .init          0x00000000c0020e91        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0020e96        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0020e9b        0x2 crtn.32

.fini           0x00000000c0020e9d        0xa
 .fini          0x00000000c0020e9d        0x3 crti.32
                0x00000000c0020e9d                _fini
 .fini          0x00000000c0020ea0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0020ea5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020ea8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020ea8       0x1a hal/device.32
                0x00000000c0020ea8                DriverlessDevice::~DriverlessDevice()
                0x00000000c0020ea8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020ec2       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020ec2       0x2a hal/device.32
                0x00000000c0020ec2                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0020eec       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0020eec       0xdc hal/device.32
                0x00000000c0020eec                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020fc8       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020fc8       0x42 hal/device.32
                0x00000000c0020fc8                LinkedList<Device>::LinkedList()
                0x00000000c0020fc8                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002100c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002100c       0x1c hal/timer.32
                0x00000000c002100c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021028        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021028        0x7 hal/timer.32
                0x00000000c0021028                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021030       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021030       0xbc hal/timer.32
                0x00000000c0021030                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00210ec       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00210ec       0xda hal/timer.32
                0x00000000c00210ec                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c00211c8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c00211c8       0x23 hw/acpi.32
                0x00000000c00211c8                ACPI::~ACPI()
                0x00000000c00211c8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c00211ec       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c00211ec       0x2a hw/acpi.32
                0x00000000c00211ec                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021218        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021218        0x2 hw/acpi.32
                0x00000000c0021218                LinkedList<Device>::~LinkedList()
                0x00000000c0021218                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002121c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002121c       0x1c hw/acpi.32
                0x00000000c002121c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021238        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021238        0x7 hw/acpi.32
                0x00000000c0021238                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021240       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021240       0xb8 hw/acpi.32
                0x00000000c0021240                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c00212f8       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c00212f8       0x23 krnl/computer.32
                0x00000000c00212f8                Computer::~Computer()
                0x00000000c00212f8                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002131c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002131c       0x2a krnl/computer.32
                0x00000000c002131c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021346       0x24
 .text._Z10idleCommonv
                0x00000000c0021346       0x24 krnl/idle.32
                0x00000000c0021346                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002136a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002136a        0x2 krnl/unixfile.32
                0x00000000c002136a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c002136a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002136c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002136c       0x42 krnl/unixfile.32
                0x00000000c002136c                LinkedList<UnixFile>::LinkedList()
                0x00000000c002136c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00213ae       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00213ae       0xd3 krnl/unixfile.32
                0x00000000c00213ae                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0021482        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0021482        0x7 krnl/unixfile.32
                0x00000000c0021482                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002148a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002148a       0xa1 krnl/unixfile.32
                0x00000000c002148a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002152c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002152c        0x8 krnl/unixfile.32
                0x00000000c002152c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021534        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021534        0x8 sys/kill.32
                0x00000000c0021534                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002153c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002153c        0x2 thr/prcssthr.32
                0x00000000c002153c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002153c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021540       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021540       0x49 thr/prcssthr.32
                0x00000000c0021540                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0021540                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002158c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002158c       0x42 thr/prcssthr.32
                0x00000000c002158c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c002158c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c00215ce       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00215ce       0x23 arch/i386/hal.32
                0x00000000c00215ce                CPU::~CPU()
                0x00000000c00215ce                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00215f2       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00215f2       0x2a arch/i386/hal.32
                0x00000000c00215f2                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002161c       0x23
 .text._ZN3PCID2Ev
                0x00000000c002161c       0x23 hw/bus/pci.32
                0x00000000c002161c                PCI::~PCI()
                0x00000000c002161c                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0021640       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0021640       0x2a hw/bus/pci.32
                0x00000000c0021640                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c002166a       0x23
 .text._ZN3IDED2Ev
                0x00000000c002166a       0x23 hw/diskctrl/ide.32
                0x00000000c002166a                IDE::~IDE()
                0x00000000c002166a                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002168e       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002168e       0x2a hw/diskctrl/ide.32
                0x00000000c002168e                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c00216b8       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c00216b8       0x23 hw/diskctrl/satabus.32
                0x00000000c00216b8                SATABus::~SATABus()
                0x00000000c00216b8                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c00216dc       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c00216dc       0x2a hw/diskctrl/satabus.32
                0x00000000c00216dc                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0021706       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0021706       0x23 hw/diskphys/ata.32
                0x00000000c0021706                ATA::~ATA()
                0x00000000c0021706                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c002172a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c002172a       0x2a hw/diskphys/ata.32
                0x00000000c002172a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0021754       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0021754       0x23 hw/diskphys/atapi.32
                0x00000000c0021754                ATAPI::~ATAPI()
                0x00000000c0021754                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0021778       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0021778       0x2a hw/diskphys/atapi.32
                0x00000000c0021778                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00217a2       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00217a2       0x23 hw/diskphys/sata.32
                0x00000000c00217a2                SATA::~SATA()
                0x00000000c00217a2                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c00217c6       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c00217c6       0x2a hw/diskphys/sata.32
                0x00000000c00217c6                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00217f0       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00217f0       0x23 hw/diskphys/satapi.32
                0x00000000c00217f0                SATAPI::~SATAPI()
                0x00000000c00217f0                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0021814       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0021814       0x2a hw/diskphys/satapi.32
                0x00000000c0021814                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c002183e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002183e       0x23 hw/intctrl/apic.32
                0x00000000c002183e                IOAPIC::~IOAPIC()
                0x00000000c002183e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0021862       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0021862       0x2a hw/intctrl/apic.32
                0x00000000c0021862                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c002188c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c002188c       0x23 hw/timer/apictimer.32
                0x00000000c002188c                APICTimer::~APICTimer()
                0x00000000c002188c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00218b0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00218b0       0x2a hw/timer/apictimer.32
                0x00000000c00218b0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00218dc       0x23
 .text._ZN3PITD2Ev
                0x00000000c00218dc       0x23 hw/timer/pit.32
                0x00000000c00218dc                PIT::~PIT()
                0x00000000c00218dc                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0021900       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0021900       0x2a hw/timer/pit.32
                0x00000000c0021900                PIT::~PIT()

.rodata         0x00000000c002192a     0x390a
                0x00000000c002192a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002192a        0x2 
 .ctors         0x00000000c002192c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0021930        0x4 krnl/unixfile.32
 .ctors         0x00000000c0021934        0x4 thr/prcssthr.32
 .ctors         0x00000000c0021938        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002193c                end_ctors = .
                0x00000000c002193c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c002193c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0021940        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0021940                __DTOR_END__
                0x00000000c0021944                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0021944       0x1c 
 .rodata        0x00000000c0021960      0x101 acpica/utclib.32
                0x00000000c0021960                AcpiGbl_Ctypes
 *fill*         0x00000000c0021a61        0x3 
 .rodata        0x00000000c0021a64       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c0021a7c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0021ac6       0x1a 
 .rodata        0x00000000c0021ae0       0xed fs/fat/ff.32
 *fill*         0x00000000c0021bcd       0x13 
 .rodata        0x00000000c0021be0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0021fe0       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c002204f        0x1 
 .rodata        0x00000000c0022050      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00221a0      0x169 dbg/usban.32
 *fill*         0x00000000c0022309        0x3 
 .rodata.str1.4
                0x00000000c002230c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0022443      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c0022566       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c00225bf        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c00225c0       0x6c fs/vfs.32
                0x00000000c00225c0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002262c       0x1c fs/vfs.32
                0x00000000c002262c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0022648       0x1c fs/vfs.32
                0x00000000c0022648                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0022664       0x2c hal/bus.32
                0x00000000c0022664                vtable for Bus
 .rodata.str1.1
                0x00000000c0022690       0x6e hal/clock.32
                                         0x70 (size before relaxing)
 *fill*         0x00000000c00226fe        0x2 
 .rodata._ZTV5Clock
                0x00000000c0022700       0x3c hal/clock.32
                0x00000000c0022700                vtable for Clock
 *fill*         0x00000000c002273c        0x4 
 .rodata        0x00000000c0022740       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0022770       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00227d4       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00227f6       0x15 hal/device.32
 *fill*         0x00000000c002280b        0x1 
 .rodata._ZTV6Device
                0x00000000c002280c       0x2c hal/device.32
                0x00000000c002280c                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0022838       0x2c hal/device.32
                0x00000000c0022838                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0022864       0x2c hal/diskctrl.32
                0x00000000c0022864                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0022890       0x38 hal/diskphys.32
                0x00000000c0022890                vtable for PhysicalDisk
 .rodata        0x00000000c00228c8       0x53 hal/keybrd.32
 *fill*         0x00000000c002291b        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c002291c       0x34 hal/keybrd.32
                0x00000000c002291c                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0022950       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0022994       0x2c hal/logidisk.32
                0x00000000c0022994                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00229c0       0x2c hal/mouse.32
                0x00000000c00229c0                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c00229ec       0x34 hal/nic.32
                0x00000000c00229ec                vtable for NIC
 .rodata.str1.1
                0x00000000c0022a20        0xb hal/partition.32
 *fill*         0x00000000c0022a2b        0x1 
 .rodata._ZTV6Serial
                0x00000000c0022a2c       0x44 hal/serial.32
                0x00000000c0022a2c                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022a70       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022abb        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022ac3       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022ac3       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0022ac3       0x1e hal/timer.32
 *fill*         0x00000000c0022ae1        0x3 
 .rodata._ZTV5Timer
                0x00000000c0022ae4       0x30 hal/timer.32
                0x00000000c0022ae4                vtable for Timer
 .rodata.str1.1
                0x00000000c0022b14       0x3e hal/vcache.32
 *fill*         0x00000000c0022b52        0x2 
 .rodata._ZTV6VCache
                0x00000000c0022b54       0x10 hal/vcache.32
                0x00000000c0022b54                vtable for VCache
 .rodata.str1.1
                0x00000000c0022b64       0xba hal/video.32
 *fill*         0x00000000c0022c1e        0x2 
 .rodata._ZTV5Video
                0x00000000c0022c20       0x4c hal/video.32
                0x00000000c0022c20                vtable for Video
 .rodata.str1.1
                0x00000000c0022c6c      0x17e hw/acpi.32
 *fill*         0x00000000c0022dea        0x2 
 .rodata.str1.4
                0x00000000c0022dec       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0022e63       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0022e63        0x8 hw/acpi.32
 *fill*         0x00000000c0022e63        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0022e64       0x2c hw/acpi.32
                0x00000000c0022e64                vtable for ACPI
 .rodata.str1.1
                0x00000000c0022e90       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0022ea3       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022ee3       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0022f04       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0022f37        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0022f3a       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.4
                0x00000000c0022fb0       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c0023068       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0023111        0x3 
 .rodata._ZTV8Computer
                0x00000000c0023114       0x2c krnl/computer.32
                0x00000000c0023114                vtable for Computer
 .rodata.str1.1
                0x00000000c0023140       0x3c krnl/env.32
 .rodata        0x00000000c002317c       0x76 krnl/fault.32
 .rodata.str1.1
                0x00000000c00231f2        0x4 krnl/intlformat.32
 *fill*         0x00000000c00231f6        0x2 
 .rodata.str1.4
                0x00000000c00231f8       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023228        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023237       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c0023298      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c002339d       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00233f5       0x39 krnl/pipe.32
 *fill*         0x00000000c002342e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0023430       0x1c krnl/pipe.32
                0x00000000c0023430                vtable for Pipe
 .rodata.str1.1
                0x00000000c002344c       0x91 krnl/resolve.32
 *fill*         0x00000000c00234dd        0x3 
 .rodata.str1.4
                0x00000000c00234e0       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c00234ff       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c00235c8       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023610       0x5e krnl/terminal.32
 *fill*         0x00000000c002366e        0x2 
 .rodata._ZTV7VgaText
                0x00000000c0023670       0x1c krnl/terminal.32
                0x00000000c0023670                vtable for VgaText
 .rodata        0x00000000c002368c       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00236c7       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00236c7       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00236c7       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00236c7        0x8 krnl/unixfile.32
 *fill*         0x00000000c00236c7        0x1 
 .rodata.str1.4
                0x00000000c00236c8       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c00236e8       0x22 krnl/unixfile.32
 *fill*         0x00000000c002370a        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c002370c       0x1c krnl/unixfile.32
                0x00000000c002370c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0023728       0x1c krnl/unixfile.32
                0x00000000c0023728                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0023744      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0023cc7      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0023e28        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0023e37        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0023e41       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0023e62       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0023ea6       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0023ebb       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0023ee7      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c00240f1       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0024148       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0024240       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0024240       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0024240       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0024240        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0024240       0xdd vm86/vm8086.32
 *fill*         0x00000000c002431d        0x3 
 .rodata        0x00000000c0024320       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0024350      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c002469b        0x1 
 .rodata.str1.4
                0x00000000c002469c       0x57 arch/i386/hal.32
 *fill*         0x00000000c00246f3        0x1 
 .rodata._ZTV3CPU
                0x00000000c00246f4       0x2c arch/i386/hal.32
                0x00000000c00246f4                vtable for CPU
 .rodata.str1.4
                0x00000000c0024720       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0024781       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c00247bf       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c00247d4       0x3c arch/i386/rtc.32
                0x00000000c00247d4                vtable for RTC
 .rodata.str1.1
                0x00000000c0024810       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0024851        0x3 
 .rodata._ZTV3FAT
                0x00000000c0024854       0x6c fs/fat/vfslink.32
                0x00000000c0024854                vtable for FAT
 .rodata.str1.1
                0x00000000c00248c0       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00248c0      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00249f8       0x6c fs/iso9660/vfslink.32
                0x00000000c00249f8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0024a64       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0024aa8       0x34 hal/sound/sndcard.32
                0x00000000c0024aa8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0024adc       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0024b1b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0024b53       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0024bf4       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0024c58       0x2c hw/bus/pci.32
                0x00000000c0024c58                vtable for PCI
 .rodata.str1.1
                0x00000000c0024c84      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0024da8       0x2c hw/diskctrl/ide.32
                0x00000000c0024da8                vtable for IDE
 .rodata.str1.4
                0x00000000c0024dd4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0024df8       0x2c hw/diskctrl/satabus.32
                0x00000000c0024df8                vtable for SATABus
 .rodata.str1.1
                0x00000000c0024e24       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0024edf        0x1 
 .rodata._ZTV3ATA
                0x00000000c0024ee0       0x38 hw/diskphys/ata.32
                0x00000000c0024ee0                vtable for ATA
 .rodata.str1.1
                0x00000000c0024f18        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0024f25        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0024f28       0x38 hw/diskphys/atapi.32
                0x00000000c0024f28                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0024f60       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0024fe8       0x38 hw/diskphys/sata.32
                0x00000000c0024fe8                vtable for SATA
 .rodata.str1.1
                0x00000000c0025020       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c002510a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c002510c       0x38 hw/diskphys/satapi.32
                0x00000000c002510c                vtable for SATAPI
 .rodata        0x00000000c0025144       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c002516a        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c002516c       0x2c hw/intctrl/apic.32
                0x00000000c002516c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0025198       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00251b3        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00251b4       0x30 hw/timer/apictimer.32
                0x00000000c00251b4                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00251e4       0x1d hw/timer/pit.32
 *fill*         0x00000000c0025201        0x3 
 .rodata._ZTV3PIT
                0x00000000c0025204       0x30 hw/timer/pit.32
                0x00000000c0025204                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0025234      0xa51
 *(.data)
 .data          0x00000000c0025234        0x0 crti.32
 .data          0x00000000c0025234        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0025234                __dso_handle
 .data          0x00000000c0025238        0x0 acpica/utclib.32
 .data          0x00000000c0025238        0x0 krnl/malloc.32
 .data          0x00000000c0025238        0x0 libk/ctype.32
 .data          0x00000000c0025238        0x0 libk/string.32
 .data          0x00000000c0025238        0x0 arch/i386/cc.32
 .data          0x00000000c0025238        0x0 fs/fat/diskio.32
 .data          0x00000000c0025238        0x0 fs/fat/ff.32
 .data          0x00000000c0025238        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0025238        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0025238        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0025238        0x0 dbg/kconsole.32
 *fill*         0x00000000c0025238        0x8 
 .data          0x00000000c0025240       0x28 dbg/usban.32
                0x00000000c0025240                KiUsbanTypeMismatchTypes
 .data          0x00000000c0025268        0x0 fs/symlink.32
 .data          0x00000000c0025268        0x0 fs/vfs.32
 .data          0x00000000c0025268        0x0 hal/bus.32
 .data          0x00000000c0025268        0x0 hal/buzzer.32
 .data          0x00000000c0025268        0x0 hal/clock.32
 .data          0x00000000c0025268        0x0 hal/device.32
 .data          0x00000000c0025268        0x0 hal/diskctrl.32
 .data          0x00000000c0025268        0x0 hal/diskphys.32
 .data          0x00000000c0025268        0x0 hal/fpu.32
 .data          0x00000000c0025268        0x0 hal/intctrl.32
 .data          0x00000000c0025268        0x0 hal/keybrd.32
 .data          0x00000000c0025268        0x0 hal/logidisk.32
 .data          0x00000000c0025268        0x0 hal/mouse.32
 .data          0x00000000c0025268        0x0 hal/nic.32
 .data          0x00000000c0025268        0x0 hal/partition.32
 .data          0x00000000c0025268        0x0 hal/serial.32
 .data          0x00000000c0025268        0x0 hal/timer.32
 .data          0x00000000c0025268        0x0 hal/vcache.32
 .data          0x00000000c0025268        0x0 hal/video.32
 .data          0x00000000c0025268       0x10 hw/acpi.32
                0x00000000c0025268                legacyIRQRemaps
 .data          0x00000000c0025278        0x0 krnl/assert.32
 .data          0x00000000c0025278        0x0 krnl/atexit.32
 .data          0x00000000c0025278        0x0 krnl/bootmsg.32
 .data          0x00000000c0025278        0x4 krnl/c++.32
                0x00000000c0025278                __stack_chk_guard
 .data          0x00000000c002527c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002527c        0x4 
 .data          0x00000000c0025280      0x100 krnl/cm.32
                0x00000000c0025280                CmComponents
 .data          0x00000000c0025380        0x0 krnl/compat.32
 .data          0x00000000c0025380        0x0 krnl/computer.32
 .data          0x00000000c0025380      0x400 krnl/crc32.32
                0x00000000c0025380                KiPolyLookupCRC32
 .data          0x00000000c0025780       0x4d krnl/env.32
                0x00000000c0025780                defaultSysEnv
 .data          0x00000000c00257cd        0x0 krnl/fault.32
 .data          0x00000000c00257cd        0x0 krnl/gdt.32
 .data          0x00000000c00257cd        0x0 krnl/idle.32
 .data          0x00000000c00257cd        0x0 krnl/idt.32
 .data          0x00000000c00257cd        0x0 krnl/inlines.32
 .data          0x00000000c00257cd        0x0 krnl/intlformat.32
 .data          0x00000000c00257cd        0x0 krnl/intops.32
 *fill*         0x00000000c00257cd        0x3 
 .data          0x00000000c00257d0        0x4 krnl/kheap.32
 .data          0x00000000c00257d4        0x0 krnl/mailbox.32
 .data          0x00000000c00257d4        0x0 krnl/main.32
 .data          0x00000000c00257d4        0x0 krnl/mutex.32
 .data          0x00000000c00257d4        0x0 krnl/panic.32
 .data          0x00000000c00257d4        0x4 krnl/physmgr.32
                0x00000000c00257d4                Phys::bitmap
 .data          0x00000000c00257d8        0x0 krnl/pipe.32
 .data          0x00000000c00257d8        0x0 krnl/powctrl.32
 .data          0x00000000c00257d8        0x0 krnl/random.32
 .data          0x00000000c00257d8        0x0 krnl/resolve.32
 .data          0x00000000c00257d8        0x0 krnl/semaphore.32
 *fill*         0x00000000c00257d8        0x8 
 .data          0x00000000c00257e0       0x4c krnl/signal.32
                0x00000000c00257e0                KiDefaultSignalHandlers
 *fill*         0x00000000c002582c       0x14 
 .data          0x00000000c0025840      0x104 krnl/syscalls.32
                0x00000000c0025840                systemCallHandlers
 *fill*         0x00000000c0025944       0x1c 
 .data          0x00000000c0025960       0x60 krnl/terminal.32
                0x00000000c0025960                VgaText::hiddenOut
                0x00000000c0025980                ansiToVGAMappings
 .data          0x00000000c00259c0        0x0 krnl/tss.32
 .data          0x00000000c00259c0        0x4 krnl/unixfile.32
                0x00000000c00259c0                UnixFile::nextFd
 .data          0x00000000c00259c4       0x15 krnl/virtmgr.32
                0x00000000c00259c4                Virt::pageAllocPtr
                0x00000000c00259c8                Virt::bitmap
                0x00000000c00259cc                Virt::swapfileSectorsPerPage
                0x00000000c00259d0                Virt::swapfileLength
                0x00000000c00259d4                Virt::swapfileSector
                0x00000000c00259d8                Virt::swapfileDrive
 .data          0x00000000c00259d9        0x0 sys/eject.32
 .data          0x00000000c00259d9        0x0 sys/exit.32
 .data          0x00000000c00259d9        0x0 sys/getcwd.32
 .data          0x00000000c00259d9        0x0 sys/getpid.32
 .data          0x00000000c00259d9        0x0 sys/getramdata.32
 .data          0x00000000c00259d9        0x0 sys/getvgaptr.32
 .data          0x00000000c00259d9        0x0 sys/kill.32
 .data          0x00000000c00259d9        0x0 sys/loaddll.32
 .data          0x00000000c00259d9        0x0 sys/read.32
 .data          0x00000000c00259d9        0x0 sys/registersignal.32
 .data          0x00000000c00259d9        0x0 sys/registry.32
 .data          0x00000000c00259d9        0x0 sys/sbrk.32
 .data          0x00000000c00259d9        0x0 sys/setcwd.32
 .data          0x00000000c00259d9        0x0 sys/settime.32
 .data          0x00000000c00259d9        0x0 sys/symlink.32
 .data          0x00000000c00259d9        0x0 sys/timezone.32
 .data          0x00000000c00259d9        0x0 sys/truncate.32
 .data          0x00000000c00259d9        0x0 sys/write.32
 .data          0x00000000c00259d9        0x0 sys/wsbe.32
 .data          0x00000000c00259d9        0x0 sys/yield.32
 .data          0x00000000c00259d9        0x0 thr/elf.32
 .data          0x00000000c00259d9        0x0 thr/exec.32
 *fill*         0x00000000c00259d9        0x3 
 .data          0x00000000c00259dc        0x4 thr/prcssthr.32
                0x00000000c00259dc                Thr::nextPID
 .data          0x00000000c00259e0        0x0 vm86/vm8086.32
 .data          0x00000000c00259e0      0x2a4 arch/i386/hal.32
                0x00000000c00259e0                exceptionNames
                0x00000000c0025c80                lastCode
 .data          0x00000000c0025c84        0x0 arch/i386/intctrl.32
 .data          0x00000000c0025c84        0x0 arch/i386/pic.32
 .data          0x00000000c0025c84        0x0 arch/i386/rtc.32
 .data          0x00000000c0025c84        0x0 arch/i386/vga.32
 .data          0x00000000c0025c84        0x0 fs/fat/vfslink.32
 .data          0x00000000c0025c84        0x0 fs/iso9660/helper.32
 .data          0x00000000c0025c84        0x1 fs/iso9660/vfslink.32
                0x00000000c0025c84                recentDriveletter
 .data          0x00000000c0025c85        0x0 hal/sound/sndcard.32
 .data          0x00000000c0025c85        0x0 hal/sound/sndport.32
 .data          0x00000000c0025c85        0x0 hw/bus/isa.32
 .data          0x00000000c0025c85        0x0 hw/bus/pci.32
 .data          0x00000000c0025c85        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0025c85        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0025c85        0x0 hw/diskphys/ata.32
 .data          0x00000000c0025c85        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0025c85        0x0 hw/diskphys/sata.32
 .data          0x00000000c0025c85        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0025c85        0x0 hw/intctrl/apic.32
 .data          0x00000000c0025c85        0x0 hw/timer/apictimer.32
 .data          0x00000000c0025c85        0x0 hw/timer/pit.32
 .data          0x00000000c0025c85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0025c85        0x0 crtn.32
 .data          0x00000000c0025c85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0025c85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0025c85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0025c85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0025c88        0x0
 .got           0x00000000c0025c88        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0025c88        0x0
 .got.plt       0x00000000c0025c88        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0025c88        0x0
 .igot.plt      0x00000000c0025c88        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0025c88        0x0
 .tm_clone_table
                0x00000000c0025c88        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0025c88        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0025c85      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0025c85        0x3 
 .eh_frame      0x00000000c0025c88        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0025c88        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0025c88       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0025ce0       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0025d20       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0025d8c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0026000       0x7d
 *(userkernel)
 userkernel     0x00000000c0026000       0x52 krnl/signal.32
                0x00000000c0026000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002602c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0026052       0x2b krnl/syscalls.32
                0x00000000c0026052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0027000        0x1
 *(align_previous)
 align_previous
                0x00000000c0027000        0x1 krnl/signal.32
                0x00000000c0027000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0027004        0x0
 .rel.got       0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0027001     0x74a7
                0x00000000c0027001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0027001       0x1f 
 COMMON         0x00000000c0027020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0027020                dcache
                0x00000000c0027060                cdDriveLetter
                0x00000000c0027080                icache
 *(.bss)
 .bss           0x00000000c00270c0        0x0 crti.32
 .bss           0x00000000c00270c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00270e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00270e4       0x1c 
 .bss           0x00000000c0027100      0x378 krnl/malloc.32
 .bss           0x00000000c0027478        0x0 libk/ctype.32
 .bss           0x00000000c0027478        0x0 libk/string.32
 .bss           0x00000000c0027478        0x0 arch/i386/cc.32
 .bss           0x00000000c0027478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0027478        0x8 
 .bss           0x00000000c0027480       0x88 fs/fat/ff.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0027508       0x18 
 .bss           0x00000000c0027520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0027eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0027eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0027eb8        0x8 
 .bss           0x00000000c0027ec0     0x2444 fs/symlink.32
                0x00000000c0027ec0                kiNumWaitingRoomSymlinks
                0x00000000c0027ee0                kiNewlyCreatedIDs
                0x00000000c0027f00                kiNewlyCreatedSymlinks
                0x00000000c0028300                kiSymlinkHashTable
                0x00000000c002a300                kiBaseSymlinkID
 .bss           0x00000000c002a304        0x4 fs/vfs.32
                0x00000000c002a304                installedFilesystems
 .bss           0x00000000c002a308        0x0 hal/bus.32
 .bss           0x00000000c002a308        0x0 hal/buzzer.32
 *fill*         0x00000000c002a308       0x18 
 .bss           0x00000000c002a320      0x348 hal/clock.32
                0x00000000c002a320                keLoadedTimezones
                0x00000000c002a324                keNumberOfTimezones
                0x00000000c002a340                keTimezoneStrings
                0x00000000c002a660                keDstOn
                0x00000000c002a661                keTimezoneHalfHourOffset
                0x00000000c002a664                keTimezoneHourOffset
 .bss           0x00000000c002a668        0x0 hal/device.32
 .bss           0x00000000c002a668        0x0 hal/diskctrl.32
 .bss           0x00000000c002a668        0x0 hal/diskphys.32
 .bss           0x00000000c002a668        0x0 hal/fpu.32
 .bss           0x00000000c002a668        0x0 hal/intctrl.32
 *fill*         0x00000000c002a668       0x18 
 .bss           0x00000000c002a680      0x428 hal/keybrd.32
                0x00000000c002a680                keyboardWaitingTaskList
                0x00000000c002a684                keyboardSetupYet
                0x00000000c002a688                guiKeyboardHandler
                0x00000000c002a6a0                keystates
 *fill*         0x00000000c002aaa8       0x18 
 .bss           0x00000000c002aac0       0x88 hal/logidisk.32
                0x00000000c002aac0                diskAssignments
                0x00000000c002aae0                disks
 .bss           0x00000000c002ab48        0x4 hal/mouse.32
                0x00000000c002ab48                guiMouseHandler
 .bss           0x00000000c002ab4c        0x0 hal/nic.32
 .bss           0x00000000c002ab4c        0x0 hal/partition.32
 .bss           0x00000000c002ab4c        0x0 hal/serial.32
 .bss           0x00000000c002ab4c        0x4 hal/timer.32
                0x00000000c002ab4c                milliTenthsSinceBoot
 .bss           0x00000000c002ab50        0x0 hal/vcache.32
 .bss           0x00000000c002ab50        0x4 hal/video.32
                0x00000000c002ab50                screen
 *fill*         0x00000000c002ab54        0xc 
 .bss           0x00000000c002ab60      0x480 hw/acpi.32
                0x00000000c002ab60                nextACPITable
                0x00000000c002ab80                acpiTables
                0x00000000c002ad80                usingXSDT
                0x00000000c002ad84                RSDTpointer
                0x00000000c002ad88                RSDPpointer
                0x00000000c002ad8c                nextAPICNMI
                0x00000000c002ada0                apicNMIInfo
                0x00000000c002ae20                legacyIRQFlags
                0x00000000c002ae40                ioapicDiscoveryNumber
                0x00000000c002ae60                ioapicFoundInMADT
                0x00000000c002ae80                ioapicAddresses
                0x00000000c002af00                ioapicGSIBase
                0x00000000c002af80                processorDiscoveryNumber
                0x00000000c002afa0                matchingAPICID
                0x00000000c002afc0                processorID
 .bss           0x00000000c002afe0        0x0 krnl/assert.32
 .bss           0x00000000c002afe0       0xe0 krnl/atexit.32
                0x00000000c002afe0                KiNextAtexitHandler
                0x00000000c002b000                KiAtexitContexts
                0x00000000c002b060                KiAtexitHandlers
 .bss           0x00000000c002b0c0        0x0 krnl/bootmsg.32
 .bss           0x00000000c002b0c0        0x0 krnl/c++.32
 .bss           0x00000000c002b0c0        0x0 krnl/cdefs.32
 .bss           0x00000000c002b0c0        0x4 krnl/cm.32
 .bss           0x00000000c002b0c4        0x0 krnl/compat.32
 .bss           0x00000000c002b0c4       0x12 krnl/computer.32
                0x00000000c002b0c4                systemSleepFunction
                0x00000000c002b0c8                systemResetFunction
                0x00000000c002b0cc                systemShutdownFunction
                0x00000000c002b0d0                Krnl::computer
                0x00000000c002b0d4                KeIsPreemptionOn
                0x00000000c002b0d5                KeIsSchedulingOn
 .bss           0x00000000c002b0d6        0x0 krnl/crc32.32
 *fill*         0x00000000c002b0d6        0x2 
 .bss           0x00000000c002b0d8        0x8 krnl/env.32
                0x00000000c002b0d8                KeUserEnv
                0x00000000c002b0dc                KeSystemEnv
 .bss           0x00000000c002b0e0     0x2000 krnl/fault.32
                0x00000000c002b0e0                keInterruptContexts
                0x00000000c002c0e0                keInterruptHandlers
 .bss           0x00000000c002d0e0        0x6 krnl/gdt.32
                0x00000000c002d0e0                gdtDescr
 .bss           0x00000000c002d0e6        0x0 krnl/idle.32
 *fill*         0x00000000c002d0e6        0x2 
 .bss           0x00000000c002d0e8        0x6 krnl/idt.32
                0x00000000c002d0e8                idtDescr
 .bss           0x00000000c002d0ee        0x0 krnl/inlines.32
 *fill*         0x00000000c002d0ee       0x12 
 .bss           0x00000000c002d100       0x24 krnl/intlformat.32
                0x00000000c002d100                keLocale
 .bss           0x00000000c002d124        0x0 krnl/intops.32
 .bss           0x00000000c002d124        0x0 krnl/kheap.32
 .bss           0x00000000c002d124        0x0 krnl/mailbox.32
 .bss           0x00000000c002d124        0x4 krnl/main.32
                0x00000000c002d124                keBootSettings
 .bss           0x00000000c002d128        0x0 krnl/mutex.32
 .bss           0x00000000c002d128        0x1 krnl/panic.32
                0x00000000c002d128                KeIsKernelInPanic
 *fill*         0x00000000c002d129        0x3 
 .bss           0x00000000c002d12c       0x29 krnl/physmgr.32
                0x00000000c002d12c                Phys::forbidEvictions
                0x00000000c002d130                Phys::currentPagePointer
                0x00000000c002d134                Phys::highestMem
                0x00000000c002d138                Phys::oldPercent
                0x00000000c002d13c                Phys::usedPages
                0x00000000c002d140                Phys::usablePages
                0x00000000c002d144                Phys::dmaUsage
 .bss           0x00000000c002d155        0x0 krnl/pipe.32
 *fill*         0x00000000c002d155        0xb 
 .bss           0x00000000c002d160       0x48 krnl/powctrl.32
                0x00000000c002d160                powCtrlOnBattery
                0x00000000c002d180                currentPowerSettings
                0x00000000c002d1a4                secondsSinceLastUserIO
 .bss           0x00000000c002d1a8        0x8 krnl/random.32
                0x00000000c002d1a8                kiRandSeed
 .bss           0x00000000c002d1b0        0x0 krnl/resolve.32
 .bss           0x00000000c002d1b0        0x0 krnl/semaphore.32
 .bss           0x00000000c002d1b0        0x0 krnl/signal.32
 .bss           0x00000000c002d1b0        0x0 krnl/syscalls.32
 .bss           0x00000000c002d1b0        0x9 krnl/terminal.32
                0x00000000c002d1b0                terminalCycle
                0x00000000c002d1b4                activeTerminal
                0x00000000c002d1b8                VgaText::graphicMode
 *fill*         0x00000000c002d1b9        0x1 
 .bss           0x00000000c002d1ba        0x2 krnl/tss.32
                0x00000000c002d1ba                doubleFaultSelector
 *fill*         0x00000000c002d1bc        0x4 
 .bss           0x00000000c002d1c0       0x84 krnl/unixfile.32
                0x00000000c002d1c0                sfileLpt
                0x00000000c002d200                sfileCom
                0x00000000c002d224                sfileNul
                0x00000000c002d228                sfilePnt
                0x00000000c002d22c                sfileAux
                0x00000000c002d230                sfileCon
                0x00000000c002d234                initialFilesAdded
                0x00000000c002d238                unixFileLinkedList
 .bss           0x00000000c002d244       0x10 krnl/virtmgr.32
                0x00000000c002d244                twswaps
                0x00000000c002d248                swapBalance
                0x00000000c002d24c                Virt::swapfileBitmap
                0x00000000c002d250                keFirstVAS
 .bss           0x00000000c002d254        0x0 sys/eject.32
 .bss           0x00000000c002d254        0x0 sys/exit.32
 .bss           0x00000000c002d254        0x0 sys/getcwd.32
 .bss           0x00000000c002d254        0x0 sys/getpid.32
 .bss           0x00000000c002d254        0x0 sys/getramdata.32
 .bss           0x00000000c002d254        0x0 sys/getvgaptr.32
 .bss           0x00000000c002d254        0x0 sys/kill.32
 .bss           0x00000000c002d254        0x0 sys/loaddll.32
 .bss           0x00000000c002d254        0x0 sys/read.32
 .bss           0x00000000c002d254        0x0 sys/registersignal.32
 .bss           0x00000000c002d254        0x0 sys/registry.32
 .bss           0x00000000c002d254        0x0 sys/sbrk.32
 .bss           0x00000000c002d254        0x0 sys/setcwd.32
 .bss           0x00000000c002d254        0x0 sys/settime.32
 .bss           0x00000000c002d254        0x0 sys/symlink.32
 .bss           0x00000000c002d254        0x0 sys/timezone.32
 .bss           0x00000000c002d254        0x0 sys/truncate.32
 .bss           0x00000000c002d254        0x0 sys/write.32
 .bss           0x00000000c002d254        0x0 sys/wsbe.32
 .bss           0x00000000c002d254        0x0 sys/yield.32
 *fill*         0x00000000c002d254        0xc 
 .bss           0x00000000c002d260      0x7a4 thr/elf.32
                0x00000000c002d260                Thr::driverLookupNext
                0x00000000c002d280                Thr::driverLookupLen
                0x00000000c002d480                Thr::driverLookupAddr
                0x00000000c002d680                Thr::driverNameLookup
                0x00000000c002d880                Thr::kernelSymbols
                0x00000000c002d900                Thr::kernelStringTable
                0x00000000c002d980                Thr::kernelSymbolTable
                0x00000000c002da00                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002da04        0x0 thr/exec.32
 *fill*         0x00000000c002da04        0x4 
 .bss           0x00000000c002da08       0x70 thr/prcssthr.32
                0x00000000c002da08                KiRestorePreemptionValue
                0x00000000c002da0c                KiPreemptionDisableCounter
                0x00000000c002da10                cleanerThread
                0x00000000c002da14                weNeedTheCleanerToNotBlock
                0x00000000c002da18                retValLockStuff
                0x00000000c002da1c                retValSchedLock
                0x00000000c002da20                lockStuffLock
                0x00000000c002da24                schedulerLock
                0x00000000c002da28                taskSwitchesPostponedFlag
                0x00000000c002da2c                postponeTaskSwitchesCounter
                0x00000000c002da30                irqDisableCounter
                0x00000000c002da34                terminatedTaskList
                0x00000000c002da40                sleepingTaskList
                0x00000000c002da4c                taskList
                0x00000000c002da58                kernelProcess
 *fill*         0x00000000c002da78        0x8 
 .bss           0x00000000c002da80       0x40 vm86/vm8086.32
                0x00000000c002da80                Vm::started8086Yet
                0x00000000c002da84                Vm::vmRetV
                0x00000000c002da88                Vm::vmDone
                0x00000000c002da89                Vm::vmReady
                0x00000000c002da8c                Vm::vm86Thread
                0x00000000c002da90                Vm::vmToHostCommsPtr
                0x00000000c002daa0                Vm::vmToHostComms
 .bss           0x00000000c002dac0       0x54 arch/i386/hal.32
                0x00000000c002dac0                apic
                0x00000000c002dac4                guiPanicHandler
                0x00000000c002dac8                fpuOwner
                0x00000000c002dacc                coproLoadFunc
                0x00000000c002dad0                coproSaveFunc
                0x00000000c002dad4                lastD
                0x00000000c002dad8                lastC
                0x00000000c002dadc                lastB
                0x00000000c002dae0                lastA
                0x00000000c002dae4                HalPageWriteCombiningFlag
                0x00000000c002dae8                HalPageGlobalFlag
                0x00000000c002daec                nmi
                0x00000000c002daf0                vendorIDString
                0x00000000c002dafd                familyID
                0x00000000c002dafe                model
                0x00000000c002daff                processorType
                0x00000000c002db00                steppingID
                0x00000000c002db04                vendor
                0x00000000c002db08                opcodeDetectionMode
                0x00000000c002db0c                features
 .bss           0x00000000c002db14        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002db14        0x0 arch/i386/pic.32
 .bss           0x00000000c002db14        0x2 arch/i386/rtc.32
 .bss           0x00000000c002db16        0x0 arch/i386/vga.32
 *fill*         0x00000000c002db16        0xa 
 .bss           0x00000000c002db20       0xf0 fs/fat/vfslink.32
                0x00000000c002db20                FAT::fats
                0x00000000c002db40                FAT::vfsToFatRemaps
                0x00000000c002dbc0                fatToVFSRemaps
 .bss           0x00000000c002dc10        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002dc10       0x10 
 .bss           0x00000000c002dc20      0x820 fs/iso9660/vfslink.32
                0x00000000c002dc20                iso9660Owner
                0x00000000c002dc24                recentSector
                0x00000000c002dc40                recentBuffer
 .bss           0x00000000c002e440        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002e440        0x0 hal/sound/sndport.32
 .bss           0x00000000c002e440        0x0 hw/bus/isa.32
 .bss           0x00000000c002e440        0xd hw/bus/pci.32
                0x00000000c002e440                thePCI
 .bss           0x00000000c002e44d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002e44d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002e44d        0x3 
 .bss           0x00000000c002e450        0x8 hw/diskphys/ata.32
                0x00000000c002e450                ataSectorsWritten
                0x00000000c002e454                ataSectorsRead
 .bss           0x00000000c002e458        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002e458        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002e458        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002e458        0x8 
 .bss           0x00000000c002e460       0x41 hw/intctrl/apic.32
                0x00000000c002e460                noOfIOAPICs
                0x00000000c002e480                ioapics
                0x00000000c002e4a0                IOAPICsSetupYet
 .bss           0x00000000c002e4a1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002e4a1        0x3 
 .bss           0x00000000c002e4a4        0x4 hw/timer/pit.32
                0x00000000c002e4a4                pitFreq
 .bss           0x00000000c002e4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002e4a8        0x0 crtn.32
 .bss           0x00000000c002e4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002e4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002e4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002e4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002e4a8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003594f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
