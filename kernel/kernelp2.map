Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f3ba
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x5a8 fs/symlink.32
                0x00000000c000ad14                KiCreateSymlinkID()
                0x00000000c000ad7f                KiFlushSymlinkChanges()
                0x00000000c000ae52                KiDeinitialiseSymlinks(void*)
                0x00000000c000ae57                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000aec6                KiIsSymlinkRegistered(char const*)
                0x00000000c000af0d                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b0c9                KeCreateSymlink(char const*, char const*)
                0x00000000c000b206                KeInitialiseSymlinks()
 .text          0x00000000c000b2bc      0xcdc fs/vfs.32
                0x00000000c000b2bc                File::read(unsigned long long, void*, int*)
                0x00000000c000b314                File::write(unsigned long long, void*, int*)
                0x00000000c000b36c                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b3c4                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b3f2                File::isAtty()
                0x00000000c000b3f6                Directory::isAtty()
                0x00000000c000b3fa                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b400                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b406                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b40c                File::~File()
                0x00000000c000b40c                File::~File()
                0x00000000c000b430                File::~File()
                0x00000000c000b45a                Directory::~Directory()
                0x00000000c000b45a                Directory::~Directory()
                0x00000000c000b47e                Directory::~Directory()
                0x00000000c000b4a8                Filesystem::Filesystem()
                0x00000000c000b4a8                Filesystem::Filesystem()
                0x00000000c000b4cc                Filesystem::~Filesystem()
                0x00000000c000b4cc                Filesystem::~Filesystem()
                0x00000000c000b4da                Filesystem::~Filesystem()
                0x00000000c000b4fe                Fs::getcwd(Process*, char*, int)
                0x00000000c000b528                Fs::initVFS()
                0x00000000c000b552                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b72e                File::File(char const*, Process*)
                0x00000000c000b72e                File::File(char const*, Process*)
                0x00000000c000b7ea                File::open(FileOpenMode)
                0x00000000c000b848                File::close()
                0x00000000c000b8a8                File::seek(unsigned long long)
                0x00000000c000b8fe                File::truncate(unsigned long long)
                0x00000000c000b954                File::tell(unsigned long long*)
                0x00000000c000b9a4                File::rewind()
                0x00000000c000b9b8                File::unlink()
                0x00000000c000ba04                File::rename(char const*)
                0x00000000c000ba52                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000baae                File::exists()
                0x00000000c000baec                File::stat(unsigned long long*, bool*)
                0x00000000c000bb4d                Fs::setcwd(Process*, char*)
                0x00000000c000bcaa                Directory::Directory(char const*, Process*)
                0x00000000c000bcaa                Directory::Directory(char const*, Process*)
                0x00000000c000bd66                Directory::open()
                0x00000000c000bdc2                Directory::close()
                0x00000000c000be22                Directory::unlink()
                0x00000000c000be6e                Directory::rename(char const*)
                0x00000000c000bebc                Directory::exists()
                0x00000000c000befa                Directory::read(dirent*)
                0x00000000c000bf46                Directory::create()
                0x00000000c000bf92                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000bf98       0x86 hal/bus.32
                0x00000000c000bf98                Bus::Bus(char const*)
                0x00000000c000bf98                Bus::Bus(char const*)
                0x00000000c000bfd0                Bus::~Bus()
                0x00000000c000bfd0                Bus::~Bus()
                0x00000000c000bff4                Bus::~Bus()
 .text          0x00000000c000c01e       0x96 hal/buzzer.32
                0x00000000c000c01e                beepThread(void*)
                0x00000000c000c05b                Krnl::beep(int, int, bool)
 .text          0x00000000c000c0b4      0x465 hal/clock.32
                0x00000000c000c0b4                User::loadClockSettings(int)
                0x00000000c000c106                Clock::Clock(char const*)
                0x00000000c000c106                Clock::Clock(char const*)
                0x00000000c000c13c                Clock::~Clock()
                0x00000000c000c13c                Clock::~Clock()
                0x00000000c000c160                Clock::~Clock()
                0x00000000c000c18a                Clock::timeInSecondsLocal()
                0x00000000c000c1d2                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c22b                datetimeToSeconds(datetime_t)
                0x00000000c000c350                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c3b0                secondsToDatetime(unsigned long long)
                0x00000000c000c4f4                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c519        0x1 
 .text          0x00000000c000c51a      0x464 hal/device.32
                0x00000000c000c51a                Device::hibernate()
                0x00000000c000c51c                Device::wake()
                0x00000000c000c51e                Device::detect()
                0x00000000c000c520                Device::disableLegacy()
                0x00000000c000c522                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c524                DriverlessDevice::close(int, int, void*)
                0x00000000c000c528                DriverlessDevice::detect()
                0x00000000c000c52a                DriverlessDevice::open(int, int, void*)
                0x00000000c000c53e                Device::~Device()
                0x00000000c000c53e                Device::~Device()
                0x00000000c000c54c                Device::~Device()
                0x00000000c000c574                Device::findAndLoadDriver()
                0x00000000c000c582                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c5a8                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c5e8                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c612                Device::getParent()
                0x00000000c000c61e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c63c                Device::addChild(Device*)
                0x00000000c000c680                Device::removeAllChildren()
                0x00000000c000c6c6                Device::hibernateAll()
                0x00000000c000c6f6                Device::wakeAll()
                0x00000000c000c726                Device::detectAll()
                0x00000000c000c756                Device::disableLegacyAll()
                0x00000000c000c758                Device::loadDriversForAll()
                0x00000000c000c75a                Device::closeAll()
                0x00000000c000c790                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c7c6                Device::setName(char const*)
                0x00000000c000c7d4                Device::Device(char const*)
                0x00000000c000c7d4                Device::Device(char const*)
                0x00000000c000c8d0                Device::getName()
                0x00000000c000c8da                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c8da                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c910                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c954                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c97e        0x2 
 .text          0x00000000c000c980       0x86 hal/diskctrl.32
                0x00000000c000c980                HardDiskController::HardDiskController(char const*)
                0x00000000c000c980                HardDiskController::HardDiskController(char const*)
                0x00000000c000c9b8                HardDiskController::~HardDiskController()
                0x00000000c000c9b8                HardDiskController::~HardDiskController()
                0x00000000c000c9dc                HardDiskController::~HardDiskController()
 .text          0x00000000c000ca06       0xe2 hal/diskphys.32
                0x00000000c000ca06                PhysicalDisk::eject()
                0x00000000c000ca0a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ca0a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ca72                PhysicalDisk::startCache()
                0x00000000c000ca9a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ca9a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cabe                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cae8        0x0 hal/fpu.32
 .text          0x00000000c000cae8      0x360 hal/intctrl.32
                0x00000000c000cae8                int_handler
                0x00000000c000cb72                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cbbc                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ccff                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000cd33                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000cda9                setupINTS()
                0x00000000c000ce06                convertLegacyIRQNumber(int)
 .text          0x00000000c000ce48      0x8be hal/keybrd.32
                0x00000000c000ce48                startGUI(void*)
                0x00000000c000ceb6                startGUIVESA(void*)
                0x00000000c000cf24                sendKeyToTerminal(unsigned char)
                0x00000000c000cfff                sendKeyboardToken(KeyboardToken)
                0x00000000c000d4e9                clearInternalKeybuffer(VgaText*)
                0x00000000c000d51e                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d67c                Keyboard::Keyboard(char const*)
                0x00000000c000d67c                Keyboard::Keyboard(char const*)
                0x00000000c000d6b8                Keyboard::~Keyboard()
                0x00000000c000d6b8                Keyboard::~Keyboard()
                0x00000000c000d6dc                Keyboard::~Keyboard()
 .text          0x00000000c000d706      0x3f8 hal/logidisk.32
                0x00000000c000d706                LogicalDisk::close(int, int, void*)
                0x00000000c000d70a                LogicalDisk::~LogicalDisk()
                0x00000000c000d70a                LogicalDisk::~LogicalDisk()
                0x00000000c000d72e                LogicalDisk::~LogicalDisk()
                0x00000000c000d758                LogicalDisk::open(int, int, void*)
                0x00000000c000d76c                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d7a4                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d7ea                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d7ea                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d8aa                LogicalDisk::assignDriveLetter()
                0x00000000c000d964                LogicalDisk::mount()
                0x00000000c000d9ac                LogicalDisk::unmount()
                0x00000000c000d9bc                LogicalDisk::eject()
                0x00000000c000d9d0                LogicalDisk::unassignDriveLetter()
                0x00000000c000da26                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000da92                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000dafe        0x2 
 .text          0x00000000c000db00       0x86 hal/mouse.32
                0x00000000c000db00                Mouse::Mouse(char const*)
                0x00000000c000db00                Mouse::Mouse(char const*)
                0x00000000c000db38                Mouse::~Mouse()
                0x00000000c000db38                Mouse::~Mouse()
                0x00000000c000db5c                Mouse::~Mouse()
 .text          0x00000000c000db86       0x90 hal/nic.32
                0x00000000c000db86                NIC::getMAC()
                0x00000000c000db8c                NIC::write(int, unsigned char*, int*)
                0x00000000c000db92                NIC::NIC(char const*)
                0x00000000c000db92                NIC::NIC(char const*)
                0x00000000c000dbc8                NIC::~NIC()
                0x00000000c000dbc8                NIC::~NIC()
                0x00000000c000dbec                NIC::~NIC()
 .text          0x00000000c000dc16      0x33b hal/partition.32
                0x00000000c000dc16                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dcbe                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000df51        0x3 
 .text          0x00000000c000df54       0x86 hal/serial.32
                0x00000000c000df54                Serial::Serial(char const*)
                0x00000000c000df54                Serial::Serial(char const*)
                0x00000000c000df8c                Serial::~Serial()
                0x00000000c000df8c                Serial::~Serial()
                0x00000000c000dfb0                Serial::~Serial()
 *fill*         0x00000000c000dfda        0x2 
 .text          0x00000000c000dfdc      0x234 hal/timer.32
                0x00000000c000dfdc                Timer::Timer(char const*)
                0x00000000c000dfdc                Timer::Timer(char const*)
                0x00000000c000e014                Timer::~Timer()
                0x00000000c000e014                Timer::~Timer()
                0x00000000c000e038                Timer::~Timer()
                0x00000000c000e062                Timer::read()
                0x00000000c000e06d                setupTimer(int)
                0x00000000c000e0a8                timerHandler(unsigned int)
 .text          0x00000000c000e210      0x450 hal/vcache.32
                0x00000000c000e210                VCache::VCache(PhysicalDisk*)
                0x00000000c000e210                VCache::VCache(PhysicalDisk*)
                0x00000000c000e380                VCache::invalidateReadBuffer()
                0x00000000c000e390                VCache::writeWriteBuffer()
                0x00000000c000e3dc                VCache::~VCache()
                0x00000000c000e3dc                VCache::~VCache()
                0x00000000c000e434                VCache::~VCache()
                0x00000000c000e45c                VCache::write(unsigned long long, int, void*)
                0x00000000c000e556                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e660      0x4d9 hal/video.32
                0x00000000c000e660                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e6ac                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e71c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e7ac                Video::clearScreen(unsigned int)
                0x00000000c000e7e0                Video::putpixel(int, int, unsigned int)
                0x00000000c000e7ee                Video::readPixelApprox(int, int)
                0x00000000c000e802                Video::Video(char const*)
                0x00000000c000e802                Video::Video(char const*)
                0x00000000c000e838                Video::~Video()
                0x00000000c000e838                Video::~Video()
                0x00000000c000e85c                Video::~Video()
                0x00000000c000e886                Video::isMonochrome()
                0x00000000c000e892                Video::getWidth()
                0x00000000c000e89e                Video::getHeight()
                0x00000000c000e8aa                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e966                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000eace                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eb39        0x3 
 .text          0x00000000c000eb3c     0x12d2 hw/acpi.32
                0x00000000c000eb3c                ACPI::close(int, int, void*)
                0x00000000c000ebf0                findRSDP()
                0x00000000c000ec88                loadACPITables(unsigned char*)
                0x00000000c000eef4                findRSDT(unsigned char*)
                0x00000000c000f04c                findDataTable(unsigned char*, char*)
                0x00000000c000f0cc                scanMADT()
                0x00000000c000f584                ACPI::ACPI()
                0x00000000c000f584                ACPI::ACPI()
                0x00000000c000f5d8                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f6d4                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f7a0                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f7a8                ACPI::detectPCI()
                0x00000000c000f9c8                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fa10                ACPI::sleep()
                0x00000000c000fa2c                ACPI::open(int, int, void*)
 .text          0x00000000c000fe0e      0xbc5 hw/cpu.32
                0x00000000c000fe0e                CPU::close(int, int, void*)
                0x00000000c000fe12                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000fe2e                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000fe46                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000feba                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000ff3e                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000ff6c                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000ff9a                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000ffc8                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000fff6                CPU::CPU()
                0x00000000c000fff6                CPU::CPU()
                0x00000000c0010084                CPU::displayFeatures()
                0x00000000c0010086                CPU::detectFeatures()
                0x00000000c001075a                CPU::setupSMEP()
                0x00000000c0010766                CPU::setupUMIP()
                0x00000000c0010770                CPU::setupTSC()
                0x00000000c001077a                CPU::setupLargePages()
                0x00000000c0010784                CPU::setupPAT()
                0x00000000c00107c0                CPU::setupMTRR()
                0x00000000c00107c2                CPU::setupGlobalPages()
                0x00000000c00107cc                CPU::allowUsermodeDataAccess()
                0x00000000c00107de                CPU::prohibitUsermodeDataAccess()
                0x00000000c00107f0                CPU::setupSMAP()
                0x00000000c00107fe                CPU::setupFeatures()
                0x00000000c00108ca                CPU::open(int, int, void*)
 .text          0x00000000c00109d3       0xb6 krnl/atexit.32
                0x00000000c00109d3                KeInitialiseAtexit()
                0x00000000c00109f2                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010a26                KeExecuteAtexit()
 .text          0x00000000c0010a89       0xdf krnl/bootmsg.32
                0x00000000c0010a89                KeDisplaySplashScreen()
                0x00000000c0010b05                KeSetBootMessage(char const*)
 .text          0x00000000c0010b68       0x1d krnl/compat.32
                0x00000000c0010b68                Krnl::handlePowerButton()
                0x00000000c0010b78                Krnl::handleSleepButton()
 *fill*         0x00000000c0010b85        0x1 
 .text          0x00000000c0010b86      0x5bf krnl/env.32
                0x00000000c0010b86                EnvVarContainer::getEnv(char const*)
                0x00000000c0010bc4                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010c86                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010c88                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010eac                EnvVarContainer::__loadSystem()
                0x00000000c0010ec6                EnvVarContainer::__loadUser()
                0x00000000c0010ec8                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010ec8                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010eea                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010eea                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010f1a                KeGetEnv(Process*, char const*)
                0x00000000c0010f7f                KeSetEnvSystem(char const*, char const*)
                0x00000000c0010f99                KeSetEnvUser(char const*, char const*)
                0x00000000c0010fb8                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0010fcb                KeDeleteEnvSystem(char const*)
                0x00000000c0010fcc                KeDeleteEnvUser(char const*)
                0x00000000c0010fcd                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0010fce                KeNewProcessEnv(Process*)
                0x00000000c0010ff0                KeCopyProcessEnv(Process*, Process*)
                0x00000000c001103c                KeLoadSystemEnv()
                0x00000000c001106a                KeLoadUserEnv()
                0x00000000c0011090                KeFlushEnv()
                0x00000000c0011091                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00110b1                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011145       0x94 krnl/inlines.32
                0x00000000c0011145                CPU::current()
                0x00000000c0011151                operator new(unsigned long)
                0x00000000c0011156                operator delete(void*)
                0x00000000c001115b                disableIRQs()
                0x00000000c001115d                enableIRQs()
                0x00000000c001115f                lockScheduler()
                0x00000000c0011167                unlockScheduler()
                0x00000000c0011176                lockStuff()
                0x00000000c0011184                unlockStuff()
                0x00000000c00111be                Virt::getAKernelVAS()
                0x00000000c00111c4                __not_memcpy
 .text          0x00000000c00111d9        0xc krnl/panic.32
                0x00000000c00111d9                KePanic(char const*)
 .text          0x00000000c00111e5      0x142 krnl/powctrl.32
                0x00000000c00111e5                KePowerThread(void*)
                0x00000000c0011213                KeChangePowerSettings(PowerSettings)
                0x00000000c0011229                KeUserIOReceived()
                0x00000000c0011234                KeHandlePowerButton()
                0x00000000c0011269                KeHandleSleepButton()
                0x00000000c001129e                KeSetupPowerManager()
 .text          0x00000000c0011327       0x9b krnl/random.32
                0x00000000c0011327                KeRand()
                0x00000000c0011367                KeSeedRand(unsigned int)
                0x00000000c0011390                KeInitRand()
 *fill*         0x00000000c00113c2        0x2 
 .text          0x00000000c00113c4      0x1bc krnl/resolve.32
                0x00000000c00113c4                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011580      0x31f krnl/signal.32
                0x00000000c0011580                KiSigKill(int)
                0x00000000c0011594                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011595                KiDefaultSignalHandlerPause(int)
                0x00000000c00115c1                KiDefaultSignalHandlerResume(int)
                0x00000000c00115ed                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00115f2                KeInitSignals()
                0x00000000c0011641                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011677                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00116f4                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c00117eb                KiCheckSignalZ
                0x00000000c001182d                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011868                KiFinishSignalZ
 .text          0x00000000c001189f      0xc76 krnl/syscalls.32
                0x00000000c001189f                SysSeekDir(regs*)
                0x00000000c00118a4                SysTellDir(regs*)
                0x00000000c00118a9                SysVerify(regs*)
                0x00000000c00118b3                SysGetArgc(regs*)
                0x00000000c00118c7                SysTTYName(regs*)
                0x00000000c00118cf                SysFormatDisk(regs*)
                0x00000000c0011936                SysSetDiskVolumeLabel(regs*)
                0x00000000c001198a                SysGetDiskVolumeLabel(regs*)
                0x00000000c00119e3                SysShutdown(regs*)
                0x00000000c0011a70                SysRealpath(regs*)
                0x00000000c0011abf                SysReadDir(regs*)
                0x00000000c0011b3f                SysIsATTY(regs*)
                0x00000000c0011b99                SysSeek(regs*)
                0x00000000c0011bf3                SysTell(regs*)
                0x00000000c0011c60                SysSize(regs*)
                0x00000000c0011cd3                SysSizeFromFilename(regs*)
                0x00000000c0011d7d                SysClose(regs*)
                0x00000000c0011ddd                SysOpenDir(regs*)
                0x00000000c0011e5a                SysMakeDir(regs*)
                0x00000000c0011ec8                SysCloseDir(regs*)
                0x00000000c0011f17                SysWait(regs*)
                0x00000000c0011f38                SysNotImpl(regs*)
                0x00000000c0011f53                SysPanic(regs*)
                0x00000000c0011f6e                SysRmdir(regs*)
                0x00000000c0011fcc                SysUnlink(regs*)
                0x00000000c001202a                SysGetArgv(regs*)
                0x00000000c0012077                SysUSleep(regs*)
                0x00000000c00120a0                SysSpawn(regs*)
                0x00000000c0012111                SysGetEnv(regs*)
                0x00000000c00121c6                SysSetFatAttrib(regs*)
                0x00000000c001222f                SysPipe(regs*)
                0x00000000c0012274                SysGetUnixTime(regs*)
                0x00000000c0012288                string_ends_with(char const*, char const*)
                0x00000000c00122d3                SysOpen(regs*)
                0x00000000c00124d3                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012515        0x3 
 .text          0x00000000c0012518      0x159 net/ethernet.32
                0x00000000c0012518                KeSwitchEndian16(unsigned short)
                0x00000000c001253c                KeSwitchEndian32(unsigned int)
                0x00000000c001256c                EthernetCRC32(unsigned char*, int)
                0x00000000c0012610                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012671      0xd51 reg/cm.32
                0x00000000c0012671                CmOpen(char const*)
                0x00000000c001278f                CmClose(Reghive_Tag*)
                0x00000000c00127a5                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c00127e1                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012858                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012897                CmGetNext(Reghive_Tag*, int)
                0x00000000c00128c9                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012905                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c001292d                CmUpdateHeader(Reghive_Tag*)
                0x00000000c001294e                CmExpand(Reghive_Tag*, int)
                0x00000000c00129c9                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012a4f                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012b43                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012c7b                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012cdc                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012d0c                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012d43                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012d6d                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012dad                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012e51                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012e7f                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c001301c                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013069                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00130e3                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c0013136                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00131fa                zStrtok(char*, char const*)
                0x00000000c001326c                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00132ed                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013390                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00133c2      0x545 reg/registry.32
                0x00000000c00133c2                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c001354e                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00136a3                Reg::getLine(char*, char*, char*)
                0x00000000c00136da                Reg::readInt(char*, char*, int*)
                0x00000000c00137c8                Reg::readString(char*, char*, char*, int)
                0x00000000c0013849                Reg::readBool(char*, char*, bool*)
                0x00000000c001386e                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001389a                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00138c6                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013907       0x36 sys/eject.32
                0x00000000c0013907                SysEject(regs*)
 .text          0x00000000c001393d       0x18 sys/exit.32
                0x00000000c001393d                SysExit(regs*)
 .text          0x00000000c0013955       0x1f sys/getcwd.32
                0x00000000c0013955                SysGetCwd(regs*)
 .text          0x00000000c0013974        0xc sys/getpid.32
                0x00000000c0013974                SysGetPID(regs*)
 .text          0x00000000c0013980       0x1a sys/getramdata.32
                0x00000000c0013980                SysGetRAMData(regs*)
 .text          0x00000000c001399a       0x82 sys/getvgaptr.32
                0x00000000c001399a                SysGetVGAPtr(regs*)
 .text          0x00000000c0013a1c       0xb9 sys/kill.32
                0x00000000c0013a1c                SysKill(regs*)
 .text          0x00000000c0013ad5       0xa8 sys/loaddll.32
                0x00000000c0013ad5                SysLoadDLL(regs*)
 .text          0x00000000c0013b7d       0x68 sys/read.32
                0x00000000c0013b7d                SysRead(regs*)
 .text          0x00000000c0013be5       0x29 sys/registersignal.32
                0x00000000c0013be5                SysRegisterSignal(regs*)
 .text          0x00000000c0013c0e      0x19c sys/registry.32
                0x00000000c0013c0e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013c85                SysRegistryReadExtent(regs*)
                0x00000000c0013ccd                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013cf5                SysRegistryEnterDirectory(regs*)
                0x00000000c0013d1d                SysRegistryGetNext(regs*)
                0x00000000c0013d45                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013d7f                SysRegistryOpen(regs*)
                0x00000000c0013d93                SysRegistryClose(regs*)
 .text          0x00000000c0013daa       0x55 sys/sbrk.32
                0x00000000c0013daa                SysSbrk(regs*)
 .text          0x00000000c0013dff       0x1c sys/setcwd.32
                0x00000000c0013dff                SysSetCwd(regs*)
 .text          0x00000000c0013e1b       0x96 sys/settime.32
                0x00000000c0013e1b                SysSetTime(regs*)
 .text          0x00000000c0013eb1       0x4a sys/timezone.32
                0x00000000c0013eb1                SysTimezone(regs*)
 .text          0x00000000c0013efb       0xfc sys/truncate.32
                0x00000000c0013efb                SysTruncate(regs*)
 .text          0x00000000c0013ff7       0x68 sys/write.32
                0x00000000c0013ff7                SysWrite(regs*)
 .text          0x00000000c001405f       0x62 sys/wsbe.32
                0x00000000c001405f                SysWsbe(regs*)
 .text          0x00000000c00140c1       0x25 sys/yield.32
                0x00000000c00140c1                SysYield(regs*)
 .text          0x00000000c00140e6     0x1203 thr/elf.32
                0x00000000c00140e6                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001436d                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001458c                Thr::runtimeReferenceHelper()
                0x00000000c001459f                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00145ee                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00148ac                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014fed                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001501f                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015056                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015070                Thr::loadDLL(char const*, bool)
                0x00000000c00152b0                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00152e9        0x3 
 .text          0x00000000c00152ec     0x13b5 thr/prcssthr.32
                0x00000000c00152ec                userModeEntryPoint(void*)
                0x00000000c0015314                changeTSS
                0x00000000c0015344                switchToThread(ThreadControlBlock*)
                0x00000000c00153f4                Process::addArgs(char**)
                0x00000000c0015460                Process::Process(char const*, Process*, char**)
                0x00000000c0015460                Process::Process(char const*, Process*, char**)
                0x00000000c001566c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001566c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015840                taskStartupFunction
                0x00000000c001584c                Semaphore::Semaphore(int)
                0x00000000c001584c                Semaphore::Semaphore(int)
                0x00000000c001587c                Mutex::Mutex()
                0x00000000c001587c                Mutex::Mutex()
                0x00000000c0015890                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015998                Process::createUserThread()
                0x00000000c00159b8                setupMultitasking(void (*)())
                0x00000000c0015adc                schedule()
                0x00000000c0015b70                Semaphore::tryAcquire()
                0x00000000c0015c30                Semaphore::assertLocked(char const*)
                0x00000000c0015cb4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015cdc                blockTask(TaskState)
                0x00000000c0015d14                waitTask(int, int*, int)
                0x00000000c0015d58                milliTenthSleepUntil(unsigned int)
                0x00000000c0015df8                milliTenthSleep(unsigned int)
                0x00000000c0015e0c                sleep(unsigned int)
                0x00000000c0015e1c                Semaphore::acquire()
                0x00000000c0015ee4                taskReturned
                0x00000000c0015f28                Thr::processFromPID(int)
                0x00000000c0015fd4                unblockTask(ThreadControlBlock*)
                0x00000000c0016080                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016354                cleanerTaskFunction(void*)
                0x00000000c001645c                terminateTask(int)
                0x00000000c0016548                Thr::terminateFromIRQ(int)
                0x00000000c0016558                Semaphore::release()
 .text          0x00000000c00166a1      0xc31 vm86/vm8086.32
                0x00000000c00166a1                Vm::inbv(unsigned short)
                0x00000000c00166b4                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00166ea                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00166fa                Vm::getSegment(unsigned int)
                0x00000000c0016702                Vm::getOffset(unsigned int)
                0x00000000c0016707                Vm::mainloop2()
                0x00000000c0016741                Vm::mainVm8086Loop(void*)
                0x00000000c0016751                Vm::mainloop3(unsigned long)
                0x00000000c0016777                Vm::initialise8086()
                0x00000000c00167ba                Vm::finish8086()
                0x00000000c001681b                Vm::getOutput8086(unsigned char*)
                0x00000000c0016840                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00168f9                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016a97                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016b34                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016b45                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016b57                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016b68                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016b7d                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016b93                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016ba8                Vm::faultHandler(regs*)
 .text          0x00000000c00172d2      0xaf0 arch/i386/hal.32
                0x00000000c00172d2                noCopro(unsigned long)
                0x00000000c00172d3                nmiHandler(regs*, void*)
                0x00000000c00172ec                doubleFault(regs*, void*)
                0x00000000c0017305                displayDebugInfo(regs*)
                0x00000000c001768a                HalSystemIdle()
                0x00000000c0017706                displayProgramFault(char const*)
                0x00000000c0017752                gpFault(regs*, void*)
                0x00000000c00177b9                pgFault(regs*, void*)
                0x00000000c0017842                otherISRHandler(regs*, void*)
                0x00000000c0017876                opcodeFault(regs*, void*)
                0x00000000c00178f9                i386SaveCoprocessor(void*)
                0x00000000c001790d                i386LoadCoprocessor(void*)
                0x00000000c0017921                x87EmulHandler(regs*, void*)
                0x00000000c00179be                HalInitialiseCoprocessor()
                0x00000000c0017a6c                HalPanic(char const*)
                0x00000000c0017b80                HalQueryPerformanceCounter()
                0x00000000c0017b9b                HalInitialise()
                0x00000000c0017d51                HalMakeBeep(int)
                0x00000000c0017d8b                HalGetRand()
                0x00000000c0017d8e                HalEndOfInterrupt(int)
                0x00000000c0017dbf                HalRestart()
                0x00000000c0017dc0                HalShutdown()
                0x00000000c0017dc1                HalSleep()
 *fill*         0x00000000c0017dc2        0x2 
 .text          0x00000000c0017dc4      0x2dc arch/i386/pic.32
                0x00000000c0017dc4                picIoWait()
                0x00000000c0017dcc                picDisable()
                0x00000000c0017e00                picGetIRQReg(int)
                0x00000000c0017e7c                picOpen()
                0x00000000c0018000                picEOI(int)
 .text          0x00000000c00180a0      0x66e arch/i386/rtc.32
                0x00000000c00180a0                RTC::open(int, int, void*)
                0x00000000c00180a4                RTC::close(int, int, void*)
                0x00000000c00180a8                RTC::timeInSecondsUTC()
                0x00000000c00180ba                RTC::timeInDatetimeUTC()
                0x00000000c00180e0                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001811e                RTC::~RTC()
                0x00000000c001811e                RTC::~RTC()
                0x00000000c0018142                RTC::~RTC()
                0x00000000c001816c                RTC::get_update_in_progress_flag()
                0x00000000c0018186                RTC::completeRTCRefresh()
                0x00000000c0018460                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001860e                rtcIRQHandler(regs*, void*)
                0x00000000c0018654                RTC::RTC()
                0x00000000c0018654                RTC::RTC()
 *fill*         0x00000000c001870e        0x2 
 .text          0x00000000c0018710      0x1f4 arch/i386/vga.32
                0x00000000c0018710                HalConsoleScroll(int, int)
                0x00000000c0018818                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001887c                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018904     0x14f3 fs/fat/vfslink.32
                0x00000000c0018904                FAT::getName()
                0x00000000c001890c                FAT::tell(void*, unsigned long long*)
                0x00000000c0018948                FAT::stat(void*, unsigned long long*)
                0x00000000c0018984                FAT::~FAT()
                0x00000000c0018984                FAT::~FAT()
                0x00000000c00189a8                FAT::~FAT()
                0x00000000c00189d0                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018a74                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018b54                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018d38                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018f54                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019114                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019284                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00192e4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019344                FAT::close(void*)
                0x00000000c0019398                FAT::closeDir(void*)
                0x00000000c00193ec                FAT::truncate(void*, unsigned long long)
                0x00000000c0019458                FAT::seek(void*, unsigned long long)
                0x00000000c00194b0                fatWrapperReadDisk
                0x00000000c00194f0                fatWrapperWriteDisk
                0x00000000c0019530                fatWrapperIoctl
                0x00000000c0019650                FAT::FAT()
                0x00000000c0019650                FAT::FAT()
                0x00000000c00196a8                FAT::fixFilepath(char*)
                0x00000000c00196e8                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001985c                FAT::openDir(char const*, void**)
                0x00000000c001990c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019a04                FAT::unlink(char const*)
                0x00000000c0019a84                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019c3c                FAT::rename(char const*, char const*)
                0x00000000c0019d08                FAT::mkdir(char const*)
                0x00000000c0019d88                FAT::exists(char const*)
 *fill*         0x00000000c0019df7        0x1 
 .text          0x00000000c0019df8       0x94 fs/iso9660/helper.32
                0x00000000c0019df8                isoReadDiscSectorHelper
                0x00000000c0019e54                iso_kprintf
                0x00000000c0019e70                iso_kprintfd
 .text          0x00000000c0019e8c      0x71a fs/iso9660/vfslink.32
                0x00000000c0019e8c                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019e92                ISO9660::truncate(void*, unsigned long long)
                0x00000000c0019e98                ISO9660::getName()
                0x00000000c0019e9e                ISO9660::closeDir(void*)
                0x00000000c0019ea8                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019eae                ISO9660::unlink(char const*)
                0x00000000c0019eb4                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019eba                ISO9660::rename(char const*, char const*)
                0x00000000c0019ec0                ISO9660::mkdir(char const*)
                0x00000000c0019ec6                ISO9660::~ISO9660()
                0x00000000c0019ec6                ISO9660::~ISO9660()
                0x00000000c0019eea                ISO9660::~ISO9660()
                0x00000000c0019f12                ISO9660::exists(char const*)
                0x00000000c0019f26                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a00c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a054                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a096                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a0d4                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a126                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a268                ISO9660::close(void*)
                0x00000000c001a298                ISO9660::openDir(char const*, void**)
                0x00000000c001a372                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a48d                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a50c                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a57e                ISO9660::ISO9660()
                0x00000000c001a57e                ISO9660::ISO9660()
 .text          0x00000000c001a5a6      0x26c hal/sound/sndcard.32
                0x00000000c001a5a6                SoundCard::beginPlayback()
                0x00000000c001a5b4                SoundCard::stopPlayback()
                0x00000000c001a5c2                SoundCard::SoundCard(char const*)
                0x00000000c001a5c2                SoundCard::SoundCard(char const*)
                0x00000000c001a660                SoundCard::~SoundCard()
                0x00000000c001a660                SoundCard::~SoundCard()
                0x00000000c001a684                SoundCard::~SoundCard()
                0x00000000c001a6ae                SoundCard::configureRates(int, int, int)
                0x00000000c001a6de                SoundCard::getSamples16(int, short*)
                0x00000000c001a73a                SoundCard::getSamples32(int, int*)
                0x00000000c001a7c0                SoundCard::addChannel(SoundPort*)
                0x00000000c001a7fe                SoundCard::removeChannel(int)
 *fill*         0x00000000c001a812        0x2 
 .text          0x00000000c001a814      0x393 hal/sound/sndport.32
                0x00000000c001a814                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a814                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a8a0                SoundPort::~SoundPort()
                0x00000000c001a8a0                SoundPort::~SoundPort()
                0x00000000c001a8d4                SoundPort::unpause()
                0x00000000c001a8e0                SoundPort::pause()
                0x00000000c001a8ec                SoundPort::getBufferUsed()
                0x00000000c001a8f4                SoundPort::getBufferSize()
                0x00000000c001a8fc                SoundPort::buffer16(short*, int)
                0x00000000c001a988                SoundPort::buffer32(int*, int)
                0x00000000c001aa14                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001aae4                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001aba7        0x0 hw/bus/isa.32
 *fill*         0x00000000c001aba7        0x1 
 .text          0x00000000c001aba8      0xbc5 hw/bus/pci.32
                0x00000000c001aba8                PCI::open(int, int, void*)
                0x00000000c001abc6                PCI::close(int, int, void*)
                0x00000000c001abca                PCI::PCI()
                0x00000000c001abca                PCI::PCI()
                0x00000000c001ac62                PCI::readBAR8(unsigned int, int)
                0x00000000c001ac7e                PCI::readBAR16(unsigned int, int)
                0x00000000c001ac9c                PCI::readBAR32(unsigned int, int)
                0x00000000c001acb8                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001acd8                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001acfa                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001ad1a                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ad90                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ae3a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae5e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae86                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001aed0                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001aef8                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001af1c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001af40                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001af68                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001afcc                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b0b2                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b37c                PCI::checkBus(unsigned char)
                0x00000000c001b3a0                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b526                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b6a2                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b714                PCI::detect()
 *fill*         0x00000000c001b76d        0x1 
 .text          0x00000000c001b76e      0xb96 hw/diskctrl/ide.32
                0x00000000c001b76e                IDE::close(int, int, void*)
                0x00000000c001b772                IDE::IDE()
                0x00000000c001b772                IDE::IDE()
                0x00000000c001b7a6                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b7b8                selectDrive(unsigned char, unsigned char)
                0x00000000c001b7ba                IDE::getBase(unsigned char)
                0x00000000c001b7cc                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b88c                IDE::read(unsigned char, unsigned char)
                0x00000000c001b940                IDE::waitInterrupt(unsigned char)
                0x00000000c001b9a2                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001b9be                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001b9da                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ba24                IDE::open(int, int, void*)
                0x00000000c001be5e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001bf2e                IDE::detect()
                0x00000000c001c1f6                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c2b0                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c304      0x32c hw/diskctrl/satabus.32
                0x00000000c001c304                SATABus::close(int, int, void*)
                0x00000000c001c308                SATABus::detect()
                0x00000000c001c30a                SATABus::SATABus()
                0x00000000c001c30a                SATABus::SATABus()
                0x00000000c001c390                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c3c2                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c40a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c42a                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c454                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c566                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c610                SATABus::open(int, int, void*)
 .text          0x00000000c001c630      0x96d hw/diskphys/ata.32
                0x00000000c001c630                ATA::close(int, int, void*)
                0x00000000c001c654                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c656                ATA::ATA()
                0x00000000c001c656                ATA::ATA()
                0x00000000c001c684                ATA::flush(bool)
                0x00000000c001c6d2                ATA::readyForCommand()
                0x00000000c001c71e                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cae2                ATA::detectCHS()
                0x00000000c001cb0c                ATA::open(int, int, void*)
                0x00000000c001cbd8                combineCharAndColour(char, unsigned char)
                0x00000000c001cbe9                combineColours(unsigned char, unsigned char)
                0x00000000c001cbf6                ATA::read(unsigned long long, int, void*)
                0x00000000c001cdcc                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001cf9d        0x1 
 .text          0x00000000c001cf9e      0x612 hw/diskphys/atapi.32
                0x00000000c001cf9e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001cfa4                ATAPI::close(int, int, void*)
                0x00000000c001cfc8                ATAPI::ATAPI()
                0x00000000c001cfc8                ATAPI::ATAPI()
                0x00000000c001cff6                ATAPI::readyForCommand()
                0x00000000c001d048                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d308                ATAPI::diskRemoved()
                0x00000000c001d342                ATAPI::eject()
                0x00000000c001d38a                ATAPI::diskInserted()
                0x00000000c001d396                ATAPI::detectMedia()
                0x00000000c001d456                ATAPI::open(int, int, void*)
                0x00000000c001d536                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d5b0      0x7ff hw/diskphys/sata.32
                0x00000000c001d5b0                SATA::close(int, int, void*)
                0x00000000c001d5d4                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d5d6                SATA::open(int, int, void*)
                0x00000000c001d680                SATA::SATA()
                0x00000000c001d680                SATA::SATA()
                0x00000000c001d6ae                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d900                SATA::read(unsigned long long, int, void*)
                0x00000000c001db50                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001ddaf        0x1 
 .text          0x00000000c001ddb0      0x5d8 hw/diskphys/satapi.32
                0x00000000c001ddb0                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ddb6                SATAPI::close(int, int, void*)
                0x00000000c001ddda                SATAPI::SATAPI()
                0x00000000c001ddda                SATAPI::SATAPI()
                0x00000000c001de08                SATAPI::diskRemoved()
                0x00000000c001de0a                SATAPI::diskInserted()
                0x00000000c001de26                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e10c                SATAPI::eject()
                0x00000000c001e148                SATAPI::detectMedia()
                0x00000000c001e19e                SATAPI::open(int, int, void*)
                0x00000000c001e29e                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e388      0x45b hw/intctrl/apic.32
                0x00000000c001e388                IOAPIC::close(int, int, void*)
                0x00000000c001e38e                apicGetBase()
                0x00000000c001e3d4                IOAPIC::IOAPIC()
                0x00000000c001e3d4                IOAPIC::IOAPIC()
                0x00000000c001e3fc                apicOpen()
                0x00000000c001e578                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e5aa                IOAPIC::read(int)
                0x00000000c001e5d2                IOAPIC::open(int, int, void*)
                0x00000000c001e6b8                IOAPIC::write(int, int)
                0x00000000c001e6e4                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e7e3        0x1 
 .text          0x00000000c001e7e4       0xf0 hw/timer/apictimer.32
                0x00000000c001e7e4                APICTimer::close(int, int, void*)
                0x00000000c001e7ec                apicTimerHandler(regs*, void*)
                0x00000000c001e814                APICTimer::open(int, int, void*)
                0x00000000c001e884                APICTimer::write(int)
                0x00000000c001e8ac                APICTimer::APICTimer()
                0x00000000c001e8ac                APICTimer::APICTimer()
 .text          0x00000000c001e8d4      0x1ad hw/timer/pit.32
                0x00000000c001e8d4                PIT::write(int)
                0x00000000c001e958                pitHandler(regs*, void*)
                0x00000000c001e980                PIT::open(int, int, void*)
                0x00000000c001e9d0                PIT::close(int, int, void*)
                0x00000000c001ea00                PIT::PIT()
                0x00000000c001ea00                PIT::PIT()
 *fill*         0x00000000c001ea81        0xf 
 .text          0x00000000c001ea90       0x83 arch/i386/avx.32
                0x00000000c001ea90                avxDetect
                0x00000000c001eaba                avxSave
                0x00000000c001eacb                avxLoad
                0x00000000c001eadc                avxInit
                0x00000000c001eafe                avxClose
                0x00000000c001eaff                wouldSheSayYes
 *fill*         0x00000000c001eb13        0xd 
 .text          0x00000000c001eb20      0x2ec arch/i386/interrupt.32
                0x00000000c001eb20                isr0
                0x00000000c001eb30                isr1
                0x00000000c001eb3a                isr2
                0x00000000c001eb44                isr3
                0x00000000c001eb4e                isr4
                0x00000000c001eb58                isr5
                0x00000000c001eb62                isr6
                0x00000000c001eb6c                isr7
                0x00000000c001eb76                isr8
                0x00000000c001eb7e                isr9
                0x00000000c001eb88                isr10
                0x00000000c001eb90                isr11
                0x00000000c001eb98                isr12
                0x00000000c001eba0                isr13
                0x00000000c001ebba                isr14
                0x00000000c001ebc2                isr15
                0x00000000c001ebcc                isr16
                0x00000000c001ebd6                isr17
                0x00000000c001ebe0                isr18
                0x00000000c001ebea                irq3
                0x00000000c001ebf4                irq4
                0x00000000c001ebfe                irq5
                0x00000000c001ec08                irq6
                0x00000000c001ec12                irq7
                0x00000000c001ec1c                irq8
                0x00000000c001ec26                irq9
                0x00000000c001ec30                irq10
                0x00000000c001ec3a                irq11
                0x00000000c001ec44                irq12
                0x00000000c001ec4e                irq13
                0x00000000c001ec58                irq14
                0x00000000c001ec62                irq15
                0x00000000c001ec6c                irq1
                0x00000000c001ec73                irq2
                0x00000000c001ec7a                isr96
                0x00000000c001ec81                irq0
                0x00000000c001ec86                int_common_stub
                0x00000000c001ecb8                syscall_common_stub
                0x00000000c001edbc                irq16
                0x00000000c001edc6                irq17
                0x00000000c001edd0                irq18
                0x00000000c001edda                irq19
                0x00000000c001ede4                irq20
                0x00000000c001edee                irq21
                0x00000000c001edf8                irq22
                0x00000000c001ee02                irq23
 *fill*         0x00000000c001ee0c        0x4 
 .text          0x00000000c001ee10       0x10 arch/i386/rdrand.32
                0x00000000c001ee10                i386GetRDRAND
 .text          0x00000000c001ee20       0x39 arch/i386/sse.32
                0x00000000c001ee20                absolutelyNoChanceInHell
                0x00000000c001ee20                sseDetect
                0x00000000c001ee38                sseSave
                0x00000000c001ee40                sseLoad
                0x00000000c001ee48                sseInit
                0x00000000c001ee58                sseClose
 *fill*         0x00000000c001ee59        0x7 
 .text          0x00000000c001ee60       0x49 arch/i386/x87.32
                0x00000000c001ee66                x87Detect
                0x00000000c001ee81                x87Save
                0x00000000c001ee88                x87Load
                0x00000000c001ee8f                x87Init
                0x00000000c001eea8                x87Close
 *fill*         0x00000000c001eea9        0x3 
 .text          0x00000000c001eeac       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001eed1        0x0 crtn.32
 *fill*         0x00000000c001eed1        0x3 
 .text          0x00000000c001eed4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001eed4                __divdi3
 *fill*         0x00000000c001f01f        0x1 
 .text          0x00000000c001f020      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f020                __moddi3
 *fill*         0x00000000c001f19e        0x2 
 .text          0x00000000c001f1a0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f1a0                __udivdi3
 *fill*         0x00000000c001f29f        0x1 
 .text          0x00000000c001f2a0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f2a0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f3c0        0x0
 .iplt          0x00000000c001f3c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f3ba        0xf
 .init          0x00000000c001f3ba        0x3 crti.32
                0x00000000c001f3ba                _init
 .init          0x00000000c001f3bd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f3c2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f3c7        0x2 crtn.32

.fini           0x00000000c001f3c9        0xa
 .fini          0x00000000c001f3c9        0x3 crti.32
                0x00000000c001f3c9                _fini
 .fini          0x00000000c001f3cc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f3d1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f3d4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f3d4       0x23 core/computer.32
                0x00000000c001f3d4                Computer::~Computer()
                0x00000000c001f3d4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f3f8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f3f8       0x2a core/computer.32
                0x00000000c001f3f8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f422       0x21
 .text._Z10idleCommonv
                0x00000000c001f422       0x21 core/idle.32
                0x00000000c001f422                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f444        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f444        0x2 core/unixfile.32
                0x00000000c001f444                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f444                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f446       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f446       0x42 core/unixfile.32
                0x00000000c001f446                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f446                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f488       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f488       0xd3 core/unixfile.32
                0x00000000c001f488                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f55c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f55c        0x7 core/unixfile.32
                0x00000000c001f55c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f564       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f564       0xa1 core/unixfile.32
                0x00000000c001f564                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f606        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f606        0x8 core/unixfile.32
                0x00000000c001f606                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f60e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f60e       0x1a hal/device.32
                0x00000000c001f60e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f60e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f628       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f628       0x2a hal/device.32
                0x00000000c001f628                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f652       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f652       0xdc hal/device.32
                0x00000000c001f652                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f72e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f72e       0x42 hal/device.32
                0x00000000c001f72e                LinkedList<Device>::LinkedList()
                0x00000000c001f72e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f770       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f770       0x1c hal/timer.32
                0x00000000c001f770                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f78c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f78c        0x7 hal/timer.32
                0x00000000c001f78c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f794       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f794       0xbc hal/timer.32
                0x00000000c001f794                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f850       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f850       0xda hal/timer.32
                0x00000000c001f850                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f92c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f92c       0x23 hw/acpi.32
                0x00000000c001f92c                ACPI::~ACPI()
                0x00000000c001f92c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f950       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f950       0x2a hw/acpi.32
                0x00000000c001f950                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f97c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f97c        0x2 hw/acpi.32
                0x00000000c001f97c                LinkedList<Device>::~LinkedList()
                0x00000000c001f97c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f980       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f980       0x1c hw/acpi.32
                0x00000000c001f980                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f99c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f99c        0x7 hw/acpi.32
                0x00000000c001f99c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f9a4       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f9a4       0xb8 hw/acpi.32
                0x00000000c001f9a4                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001fa5c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fa5c       0x23 hw/cpu.32
                0x00000000c001fa5c                CPU::~CPU()
                0x00000000c001fa5c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fa80       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fa80       0x2a hw/cpu.32
                0x00000000c001fa80                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001faac        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001faac        0x8 sys/kill.32
                0x00000000c001faac                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fab4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fab4        0x2 thr/prcssthr.32
                0x00000000c001fab4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fab4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fab8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fab8       0x49 thr/prcssthr.32
                0x00000000c001fab8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fab8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fb04       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fb04       0x42 thr/prcssthr.32
                0x00000000c001fb04                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fb04                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fb46       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fb46       0x23 hw/bus/pci.32
                0x00000000c001fb46                PCI::~PCI()
                0x00000000c001fb46                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fb6a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fb6a       0x2a hw/bus/pci.32
                0x00000000c001fb6a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fb94       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fb94       0x23 hw/diskctrl/ide.32
                0x00000000c001fb94                IDE::~IDE()
                0x00000000c001fb94                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fbb8       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fbb8       0x2a hw/diskctrl/ide.32
                0x00000000c001fbb8                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001fbe2       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001fbe2       0x23 hw/diskctrl/satabus.32
                0x00000000c001fbe2                SATABus::~SATABus()
                0x00000000c001fbe2                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001fc06       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001fc06       0x2a hw/diskctrl/satabus.32
                0x00000000c001fc06                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001fc30       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fc30       0x23 hw/diskphys/ata.32
                0x00000000c001fc30                ATA::~ATA()
                0x00000000c001fc30                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fc54       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fc54       0x2a hw/diskphys/ata.32
                0x00000000c001fc54                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fc7e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fc7e       0x23 hw/diskphys/atapi.32
                0x00000000c001fc7e                ATAPI::~ATAPI()
                0x00000000c001fc7e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fca2       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fca2       0x2a hw/diskphys/atapi.32
                0x00000000c001fca2                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001fccc       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001fccc       0x23 hw/diskphys/sata.32
                0x00000000c001fccc                SATA::~SATA()
                0x00000000c001fccc                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001fcf0       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001fcf0       0x2a hw/diskphys/sata.32
                0x00000000c001fcf0                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001fd1a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001fd1a       0x23 hw/diskphys/satapi.32
                0x00000000c001fd1a                SATAPI::~SATAPI()
                0x00000000c001fd1a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001fd3e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001fd3e       0x2a hw/diskphys/satapi.32
                0x00000000c001fd3e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001fd68       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001fd68       0x23 hw/intctrl/apic.32
                0x00000000c001fd68                IOAPIC::~IOAPIC()
                0x00000000c001fd68                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001fd8c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001fd8c       0x2a hw/intctrl/apic.32
                0x00000000c001fd8c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001fdb8       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001fdb8       0x23 hw/timer/apictimer.32
                0x00000000c001fdb8                APICTimer::~APICTimer()
                0x00000000c001fdb8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001fddc       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001fddc       0x2a hw/timer/apictimer.32
                0x00000000c001fddc                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001fe08       0x23
 .text._ZN3PITD2Ev
                0x00000000c001fe08       0x23 hw/timer/pit.32
                0x00000000c001fe08                PIT::~PIT()
                0x00000000c001fe08                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001fe2c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001fe2c       0x2a hw/timer/pit.32
                0x00000000c001fe2c                PIT::~PIT()

.rodata         0x00000000c001fe56     0x313a
                0x00000000c001fe56                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001fe56        0x2 
 .ctors         0x00000000c001fe58        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001fe5c        0x4 core/unixfile.32
 .ctors         0x00000000c001fe60        0x4 thr/prcssthr.32
 .ctors         0x00000000c001fe64        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fe68                end_ctors = .
                0x00000000c001fe68                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001fe68        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001fe6c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fe6c                __DTOR_END__
                0x00000000c001fe70                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001fe70       0x10 
 .rodata        0x00000000c001fe80      0x101 acpica/utclib.32
                0x00000000c001fe80                AcpiGbl_Ctypes
 *fill*         0x00000000c001ff81        0x3 
 .rodata        0x00000000c001ff84       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001ff9c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001ffe6       0x1a 
 .rodata        0x00000000c0020000       0xed fs/fat/ff.32
 *fill*         0x00000000c00200ed       0x13 
 .rodata        0x00000000c0020100      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020500       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002056f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020684       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c00206ec       0x2c core/computer.32
                0x00000000c00206ec                vtable for Computer
 .rodata.str1.4
                0x00000000c0020718       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020748        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020754       0x17 core/main.32
 *fill*         0x00000000c002076b        0x1 
 .rodata.str1.4
                0x00000000c002076c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020811       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020869       0x39 core/pipe.32
 *fill*         0x00000000c00208a2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00208a4       0x1c core/pipe.32
                0x00000000c00208a4                vtable for Pipe
 .rodata.str1.1
                0x00000000c00208c0       0x2b core/terminal.32
 *fill*         0x00000000c00208eb        0x1 
 .rodata._ZTV7VgaText
                0x00000000c00208ec       0x1c core/terminal.32
                0x00000000c00208ec                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020908       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002092a       0x15 core/unixfile.32
 *fill*         0x00000000c002093f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020940       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002098b        0x8 core/unixfile.32
 *fill*         0x00000000c0020993        0x1 
 .rodata.str1.4
                0x00000000c0020994       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00209b4       0x1c core/unixfile.32
                0x00000000c00209b4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00209d0       0x1c core/unixfile.32
                0x00000000c00209d0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00209ec      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020c80      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020da6       0x33 coreobjs/c++.32
 *fill*         0x00000000c0020dd9        0x3 
 .rodata        0x00000000c0020ddc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020f2c      0x169 dbg/usban.32
 *fill*         0x00000000c0021095        0x3 
 .rodata.str1.4
                0x00000000c0021098      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00211cf       0xe3 fs/symlink.32
 .rodata        0x00000000c00212b2        0x9 fs/symlink.32
 .rodata.str1.1
                0x00000000c00212bb       0xe3 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c00212bb        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c00212bc       0x6c fs/vfs.32
                0x00000000c00212bc                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021328       0x1c fs/vfs.32
                0x00000000c0021328                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021344       0x1c fs/vfs.32
                0x00000000c0021344                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021360       0x2c hal/bus.32
                0x00000000c0021360                vtable for Bus
 .rodata.str1.1
                0x00000000c002138c       0x1e hal/clock.32
 *fill*         0x00000000c00213aa        0x2 
 .rodata._ZTV5Clock
                0x00000000c00213ac       0x3c hal/clock.32
                0x00000000c00213ac                vtable for Clock
 *fill*         0x00000000c00213e8       0x18 
 .rodata        0x00000000c0021400       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021430       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021488       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021488       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021488       0x2c hal/device.32
                0x00000000c0021488                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00214b4       0x2c hal/device.32
                0x00000000c00214b4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00214e0       0x2c hal/diskctrl.32
                0x00000000c00214e0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002150c       0x38 hal/diskphys.32
                0x00000000c002150c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021544       0x3e hal/intctrl.32
 *fill*         0x00000000c0021582        0x2 
 .rodata.str1.4
                0x00000000c0021584       0x5d hal/intctrl.32
 .rodata        0x00000000c00215e1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021634       0x34 hal/keybrd.32
                0x00000000c0021634                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021668       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00216ac       0x2c hal/logidisk.32
                0x00000000c00216ac                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00216d8       0x2c hal/mouse.32
                0x00000000c00216d8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021704       0x34 hal/nic.32
                0x00000000c0021704                vtable for NIC
 .rodata.str1.1
                0x00000000c0021738        0xb hal/partition.32
 *fill*         0x00000000c0021743        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021744       0x44 hal/serial.32
                0x00000000c0021744                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021788       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021788        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021788       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021788       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021788       0x30 hal/timer.32
                0x00000000c0021788                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00217b8       0x10 hal/vcache.32
                0x00000000c00217b8                vtable for VCache
 .rodata.str1.1
                0x00000000c00217c8       0x93 hal/video.32
 *fill*         0x00000000c002185b        0x1 
 .rodata._ZTV5Video
                0x00000000c002185c       0x4c hal/video.32
                0x00000000c002185c                vtable for Video
 .rodata.str1.4
                0x00000000c00218a8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021943      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021a99       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021a99        0x8 hw/acpi.32
 *fill*         0x00000000c0021a99        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021a9c       0x2c hw/acpi.32
                0x00000000c0021a9c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021ac8      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0021c43        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021c44       0x2c hw/cpu.32
                0x00000000c0021c44                vtable for CPU
 .rodata.str1.1
                0x00000000c0021c70       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021cb0       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021cec       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0021d7d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0021e46       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021e8e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0021eb9       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0021f2f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021f74        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0021f7e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0021f9f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022035       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022089       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00220b5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022281       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00222d8      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00223e8       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00223e8       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00223e8       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00223e8        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00223e8       0xc2 vm86/vm8086.32
 *fill*         0x00000000c00224aa        0x2 
 .rodata        0x00000000c00224ac       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00224dc      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c002267b        0x1 
 .rodata.str1.4
                0x00000000c002267c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c00226ef       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022704       0x3c arch/i386/rtc.32
                0x00000000c0022704                vtable for RTC
 .rodata.str1.1
                0x00000000c0022740       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022781        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022784       0x6c fs/fat/vfslink.32
                0x00000000c0022784                vtable for FAT
 .rodata.str1.1
                0x00000000c00227f0       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00227f0      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022928       0x6c fs/iso9660/vfslink.32
                0x00000000c0022928                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022994       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00229d8       0x34 hal/sound/sndcard.32
                0x00000000c00229d8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022a0c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022a4b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022a83       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022b24       0x2c hw/bus/pci.32
                0x00000000c0022b24                vtable for PCI
 .rodata.str1.1
                0x00000000c0022b50       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022bd7        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022bd8       0x2c hw/diskctrl/ide.32
                0x00000000c0022bd8                vtable for IDE
 .rodata.str1.4
                0x00000000c0022c04       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022c28       0x2c hw/diskctrl/satabus.32
                0x00000000c0022c28                vtable for SATABus
 .rodata.str1.1
                0x00000000c0022c54       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0022c66        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022c68       0x38 hw/diskphys/ata.32
                0x00000000c0022c68                vtable for ATA
 .rodata.str1.1
                0x00000000c0022ca0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022cad        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0022cb0       0x38 hw/diskphys/atapi.32
                0x00000000c0022cb0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022ce8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0022d64       0x38 hw/diskphys/sata.32
                0x00000000c0022d64                vtable for SATA
 .rodata.str1.1
                0x00000000c0022d9c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0022e86        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0022e88       0x38 hw/diskphys/satapi.32
                0x00000000c0022e88                vtable for SATAPI
 .rodata        0x00000000c0022ec0        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0022ec8       0x2c hw/intctrl/apic.32
                0x00000000c0022ec8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0022ef4       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0022f0f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0022f10       0x30 hw/timer/apictimer.32
                0x00000000c0022f10                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0022f40       0x1d hw/timer/pit.32
 *fill*         0x00000000c0022f5d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0022f60       0x30 hw/timer/pit.32
                0x00000000c0022f60                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0022f90      0x7b1
 *(.data)
 .data          0x00000000c0022f90        0x0 crti.32
 .data          0x00000000c0022f90        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0022f90                __dso_handle
 .data          0x00000000c0022f94        0x0 acpica/utclib.32
 .data          0x00000000c0022f94        0x0 core/malloc.32
 .data          0x00000000c0022f94        0x0 libk/ctype.32
 .data          0x00000000c0022f94        0x0 libk/string.32
 .data          0x00000000c0022f94        0x0 fs/fat/diskio.32
 .data          0x00000000c0022f94        0x0 fs/fat/ff.32
 .data          0x00000000c0022f94        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0022f94        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0022f94        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0022f94        0x0 core/computer.32
 .data          0x00000000c0022f94        0x0 core/gdt.32
 .data          0x00000000c0022f94        0x0 core/idle.32
 .data          0x00000000c0022f94        0x0 core/idt.32
 .data          0x00000000c0022f94        0x4 core/kheap.32
 .data          0x00000000c0022f98        0x0 core/main.32
 .data          0x00000000c0022f98        0x4 core/physmgr.32
                0x00000000c0022f98                Phys::bitmap
 .data          0x00000000c0022f9c        0x0 core/pipe.32
 *fill*         0x00000000c0022f9c        0x4 
 .data          0x00000000c0022fa0       0x60 core/terminal.32
                0x00000000c0022fa0                VgaText::hiddenOut
                0x00000000c0022fc0                ansiToVGAMappings
 .data          0x00000000c0023000        0x0 core/tss.32
 .data          0x00000000c0023000        0x4 core/unixfile.32
                0x00000000c0023000                UnixFile::nextFd
 .data          0x00000000c0023004       0x15 core/virtmgr.32
                0x00000000c0023004                Virt::pageAllocPtr
                0x00000000c0023008                Virt::bitmap
                0x00000000c002300c                Virt::swapfileSectorsPerPage
                0x00000000c0023010                Virt::swapfileLength
                0x00000000c0023014                Virt::swapfileSector
                0x00000000c0023018                Virt::swapfileDrive
 *fill*         0x00000000c0023019        0x3 
 .data          0x00000000c002301c        0x4 coreobjs/c++.32
                0x00000000c002301c                __stack_chk_guard
 .data          0x00000000c0023020        0x0 dbg/kconsole.32
 .data          0x00000000c0023020       0x28 dbg/usban.32
                0x00000000c0023020                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023048        0x0 fs/symlink.32
 .data          0x00000000c0023048        0x0 fs/vfs.32
 .data          0x00000000c0023048        0x0 hal/bus.32
 .data          0x00000000c0023048        0x0 hal/buzzer.32
 .data          0x00000000c0023048        0x0 hal/clock.32
 .data          0x00000000c0023048        0x0 hal/device.32
 .data          0x00000000c0023048        0x0 hal/diskctrl.32
 .data          0x00000000c0023048        0x0 hal/diskphys.32
 .data          0x00000000c0023048        0x0 hal/fpu.32
 .data          0x00000000c0023048        0x0 hal/intctrl.32
 .data          0x00000000c0023048        0x0 hal/keybrd.32
 .data          0x00000000c0023048        0x0 hal/logidisk.32
 .data          0x00000000c0023048        0x0 hal/mouse.32
 .data          0x00000000c0023048        0x0 hal/nic.32
 .data          0x00000000c0023048        0x0 hal/partition.32
 .data          0x00000000c0023048        0x0 hal/serial.32
 .data          0x00000000c0023048        0x0 hal/timer.32
 .data          0x00000000c0023048        0x0 hal/vcache.32
 .data          0x00000000c0023048        0x0 hal/video.32
 .data          0x00000000c0023048       0x10 hw/acpi.32
                0x00000000c0023048                legacyIRQRemaps
 .data          0x00000000c0023058        0x4 hw/cpu.32
                0x00000000c0023058                lastCode
 .data          0x00000000c002305c        0x0 krnl/atexit.32
 *fill*         0x00000000c002305c        0x4 
 .data          0x00000000c0023060      0x142 krnl/bootmsg.32
                0x00000000c0023060                KiSplashScreen
 .data          0x00000000c00231a2        0x0 krnl/compat.32
 *fill*         0x00000000c00231a2       0x1e 
 .data          0x00000000c00231c0       0x4d krnl/env.32
                0x00000000c00231c0                defaultSysEnv
 .data          0x00000000c002320d        0x0 krnl/inlines.32
 .data          0x00000000c002320d        0x0 krnl/panic.32
 .data          0x00000000c002320d        0x0 krnl/powctrl.32
 .data          0x00000000c002320d        0x0 krnl/random.32
 .data          0x00000000c002320d        0x0 krnl/resolve.32
 *fill*         0x00000000c002320d       0x13 
 .data          0x00000000c0023220       0x4c krnl/signal.32
                0x00000000c0023220                KiDefaultSignalHandlers
 *fill*         0x00000000c002326c       0x14 
 .data          0x00000000c0023280       0xf0 krnl/syscalls.32
                0x00000000c0023280                systemCallHandlers
 .data          0x00000000c0023370        0x0 net/ethernet.32
 *fill*         0x00000000c0023370       0x10 
 .data          0x00000000c0023380      0x100 reg/cm.32
                0x00000000c0023380                CmComponents
 .data          0x00000000c0023480        0x0 reg/registry.32
 .data          0x00000000c0023480        0x0 sys/eject.32
 .data          0x00000000c0023480        0x0 sys/exit.32
 .data          0x00000000c0023480        0x0 sys/getcwd.32
 .data          0x00000000c0023480        0x0 sys/getpid.32
 .data          0x00000000c0023480        0x0 sys/getramdata.32
 .data          0x00000000c0023480        0x0 sys/getvgaptr.32
 .data          0x00000000c0023480        0x0 sys/kill.32
 .data          0x00000000c0023480        0x0 sys/loaddll.32
 .data          0x00000000c0023480        0x0 sys/read.32
 .data          0x00000000c0023480        0x0 sys/registersignal.32
 .data          0x00000000c0023480        0x0 sys/registry.32
 .data          0x00000000c0023480        0x0 sys/sbrk.32
 .data          0x00000000c0023480        0x0 sys/setcwd.32
 .data          0x00000000c0023480        0x0 sys/settime.32
 .data          0x00000000c0023480        0x0 sys/timezone.32
 .data          0x00000000c0023480        0x0 sys/truncate.32
 .data          0x00000000c0023480        0x0 sys/write.32
 .data          0x00000000c0023480        0x0 sys/wsbe.32
 .data          0x00000000c0023480        0x0 sys/yield.32
 .data          0x00000000c0023480        0x0 thr/elf.32
 .data          0x00000000c0023480        0x4 thr/prcssthr.32
                0x00000000c0023480                Thr::nextPID
 .data          0x00000000c0023484        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023484       0x1c 
 .data          0x00000000c00234a0      0x2a0 arch/i386/hal.32
                0x00000000c00234a0                exceptionNames
 .data          0x00000000c0023740        0x0 arch/i386/pic.32
 .data          0x00000000c0023740        0x0 arch/i386/rtc.32
 .data          0x00000000c0023740        0x0 arch/i386/vga.32
 .data          0x00000000c0023740        0x0 fs/fat/vfslink.32
 .data          0x00000000c0023740        0x0 fs/iso9660/helper.32
 .data          0x00000000c0023740        0x1 fs/iso9660/vfslink.32
                0x00000000c0023740                recentDriveletter
 .data          0x00000000c0023741        0x0 hal/sound/sndcard.32
 .data          0x00000000c0023741        0x0 hal/sound/sndport.32
 .data          0x00000000c0023741        0x0 hw/bus/isa.32
 .data          0x00000000c0023741        0x0 hw/bus/pci.32
 .data          0x00000000c0023741        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0023741        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0023741        0x0 hw/diskphys/ata.32
 .data          0x00000000c0023741        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0023741        0x0 hw/diskphys/sata.32
 .data          0x00000000c0023741        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0023741        0x0 hw/intctrl/apic.32
 .data          0x00000000c0023741        0x0 hw/timer/apictimer.32
 .data          0x00000000c0023741        0x0 hw/timer/pit.32
 .data          0x00000000c0023741        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0023741        0x0 crtn.32
 .data          0x00000000c0023741        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0023741        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0023741        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0023741        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0023744        0x0
 .got           0x00000000c0023744        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0023744        0x0
 .got.plt       0x00000000c0023744        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0023744        0x0
 .igot.plt      0x00000000c0023744        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0023744        0x0
 .tm_clone_table
                0x00000000c0023744        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0023744        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0023741      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0023741        0x3 
 .eh_frame      0x00000000c0023744        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0023744        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0023744       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002379c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00237dc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0023848       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x5107
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0025fb4        0xc 
 .bss           0x00000000c0025fc0      0x444 fs/symlink.32
                0x00000000c0025fc0                KiNumWaitingRoomSymlinks
                0x00000000c0025fe0                KiNewlyCreatedIDs
                0x00000000c0026000                KiNewlyCreatedSymlinks
                0x00000000c0026400                KiBaseSymlinkID
 .bss           0x00000000c0026404        0x4 fs/vfs.32
                0x00000000c0026404                installedFilesystems
 .bss           0x00000000c0026408        0x0 hal/bus.32
 .bss           0x00000000c0026408        0x0 hal/buzzer.32
 .bss           0x00000000c0026408        0x8 hal/clock.32
                0x00000000c0026408                User::dstOn
                0x00000000c0026409                User::timezoneHalfHourOffset
                0x00000000c002640c                User::timezoneHourOffset
 .bss           0x00000000c0026410        0x0 hal/device.32
 .bss           0x00000000c0026410        0x0 hal/diskctrl.32
 .bss           0x00000000c0026410        0x0 hal/diskphys.32
 .bss           0x00000000c0026410        0x0 hal/fpu.32
 *fill*         0x00000000c0026410       0x10 
 .bss           0x00000000c0026420     0x2000 hal/intctrl.32
                0x00000000c0026420                INT_contexts
                0x00000000c0027420                INT_handlers
 .bss           0x00000000c0028420      0x429 hal/keybrd.32
                0x00000000c0028420                keyboardWaitingTaskList
                0x00000000c0028424                keyboardSetupYet
                0x00000000c0028428                guiKeyboardHandler
                0x00000000c0028440                keystates
 *fill*         0x00000000c0028849       0x17 
 .bss           0x00000000c0028860       0x88 hal/logidisk.32
                0x00000000c0028860                diskAssignments
                0x00000000c0028880                disks
 .bss           0x00000000c00288e8        0x4 hal/mouse.32
                0x00000000c00288e8                guiMouseHandler
 .bss           0x00000000c00288ec        0x0 hal/nic.32
 .bss           0x00000000c00288ec        0x0 hal/partition.32
 .bss           0x00000000c00288ec        0x0 hal/serial.32
 .bss           0x00000000c00288ec        0x4 hal/timer.32
                0x00000000c00288ec                milliTenthsSinceBoot
 .bss           0x00000000c00288f0        0x0 hal/vcache.32
 .bss           0x00000000c00288f0        0x4 hal/video.32
                0x00000000c00288f0                screen
 *fill*         0x00000000c00288f4        0xc 
 .bss           0x00000000c0028900      0x480 hw/acpi.32
                0x00000000c0028900                systemSleepFunction
                0x00000000c0028904                systemResetFunction
                0x00000000c0028908                systemShutdownFunction
                0x00000000c002890c                nextACPITable
                0x00000000c0028920                acpiTables
                0x00000000c0028b20                usingXSDT
                0x00000000c0028b24                MADTpointer
                0x00000000c0028b28                RSDTpointer
                0x00000000c0028b2c                RSDPpointer
                0x00000000c0028b30                nextAPICNMI
                0x00000000c0028b40                apicNMIInfo
                0x00000000c0028bc0                legacyIRQFlags
                0x00000000c0028be0                ioapicDiscoveryNumber
                0x00000000c0028c00                ioapicFoundInMADT
                0x00000000c0028c20                ioapicAddresses
                0x00000000c0028ca0                ioapicGSIBase
                0x00000000c0028d20                processorDiscoveryNumber
                0x00000000c0028d40                matchingAPICID
                0x00000000c0028d60                processorID
 .bss           0x00000000c0028d80       0x10 hw/cpu.32
                0x00000000c0028d80                lastD
                0x00000000c0028d84                lastC
                0x00000000c0028d88                lastB
                0x00000000c0028d8c                lastA
 *fill*         0x00000000c0028d90       0x10 
 .bss           0x00000000c0028da0       0xe0 krnl/atexit.32
                0x00000000c0028da0                KiNextAtexitHandler
                0x00000000c0028dc0                KiAtexitContexts
                0x00000000c0028e20                KiAtexitHandlers
 .bss           0x00000000c0028e80        0x0 krnl/bootmsg.32
 .bss           0x00000000c0028e80        0x0 krnl/compat.32
 .bss           0x00000000c0028e80        0x8 krnl/env.32
                0x00000000c0028e80                KeUserEnv
                0x00000000c0028e84                KeSystemEnv
 .bss           0x00000000c0028e88        0x0 krnl/inlines.32
 .bss           0x00000000c0028e88        0x1 krnl/panic.32
                0x00000000c0028e88                KeIsKernelInPanic
 *fill*         0x00000000c0028e89       0x17 
 .bss           0x00000000c0028ea0       0x48 krnl/powctrl.32
                0x00000000c0028ea0                powCtrlOnBattery
                0x00000000c0028ec0                currentPowerSettings
                0x00000000c0028ee4                secondsSinceLastUserIO
 .bss           0x00000000c0028ee8        0x8 krnl/random.32
                0x00000000c0028ee8                kiRandSeed
 .bss           0x00000000c0028ef0        0x0 krnl/resolve.32
 .bss           0x00000000c0028ef0        0x0 krnl/signal.32
 .bss           0x00000000c0028ef0        0x0 krnl/syscalls.32
 .bss           0x00000000c0028ef0        0x0 net/ethernet.32
 .bss           0x00000000c0028ef0        0x4 reg/cm.32
 .bss           0x00000000c0028ef4        0x0 reg/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/eject.32
 .bss           0x00000000c0028ef4        0x0 sys/exit.32
 .bss           0x00000000c0028ef4        0x0 sys/getcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/getpid.32
 .bss           0x00000000c0028ef4        0x0 sys/getramdata.32
 .bss           0x00000000c0028ef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c0028ef4        0x0 sys/kill.32
 .bss           0x00000000c0028ef4        0x0 sys/loaddll.32
 .bss           0x00000000c0028ef4        0x0 sys/read.32
 .bss           0x00000000c0028ef4        0x0 sys/registersignal.32
 .bss           0x00000000c0028ef4        0x0 sys/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/sbrk.32
 .bss           0x00000000c0028ef4        0x0 sys/setcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/settime.32
 .bss           0x00000000c0028ef4        0x0 sys/timezone.32
 .bss           0x00000000c0028ef4        0x0 sys/truncate.32
 .bss           0x00000000c0028ef4        0x0 sys/write.32
 .bss           0x00000000c0028ef4        0x0 sys/wsbe.32
 .bss           0x00000000c0028ef4        0x0 sys/yield.32
 *fill*         0x00000000c0028ef4        0xc 
 .bss           0x00000000c0028f00      0x7a4 thr/elf.32
                0x00000000c0028f00                Thr::driverLookupNext
                0x00000000c0028f20                Thr::driverLookupLen
                0x00000000c0029120                Thr::driverLookupAddr
                0x00000000c0029320                Thr::driverNameLookup
                0x00000000c0029520                Thr::kernelSymbols
                0x00000000c00295a0                Thr::kernelStringTable
                0x00000000c0029620                Thr::kernelSymbolTable
                0x00000000c00296a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00296a4        0x4 
 .bss           0x00000000c00296a8       0x68 thr/prcssthr.32
                0x00000000c00296a8                cleanerThread
                0x00000000c00296ac                weNeedTheCleanerToNotBlock
                0x00000000c00296b0                retValLockStuff
                0x00000000c00296b4                retValSchedLock
                0x00000000c00296b8                lockStuffLock
                0x00000000c00296bc                schedulerLock
                0x00000000c00296c0                taskSwitchesPostponedFlag
                0x00000000c00296c4                postponeTaskSwitchesCounter
                0x00000000c00296c8                irqDisableCounter
                0x00000000c00296cc                terminatedTaskList
                0x00000000c00296d8                sleepingTaskList
                0x00000000c00296e4                taskList
                0x00000000c00296f0                kernelProcess
 *fill*         0x00000000c0029710       0x10 
 .bss           0x00000000c0029720       0x40 vm86/vm8086.32
                0x00000000c0029720                Vm::vmRetV
                0x00000000c0029724                Vm::vmDone
                0x00000000c0029725                Vm::vmReady
                0x00000000c0029728                Vm::vm86Thread
                0x00000000c002972c                Vm::vmToHostCommsPtr
                0x00000000c0029740                Vm::vmToHostComms
 .bss           0x00000000c0029760       0x18 arch/i386/hal.32
                0x00000000c0029760                apic
                0x00000000c0029764                guiPanicHandler
                0x00000000c0029768                fpuOwner
                0x00000000c002976c                coproLoadFunc
                0x00000000c0029770                coproSaveFunc
                0x00000000c0029774                gpFaultIntercept
 .bss           0x00000000c0029778        0x0 arch/i386/pic.32
 .bss           0x00000000c0029778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002977a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002977a        0x6 
 .bss           0x00000000c0029780       0xf0 fs/fat/vfslink.32
                0x00000000c0029780                FAT::fats
                0x00000000c00297a0                FAT::vfsToFatRemaps
                0x00000000c0029820                fatToVFSRemaps
 .bss           0x00000000c0029870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0029870       0x10 
 .bss           0x00000000c0029880      0x820 fs/iso9660/vfslink.32
                0x00000000c0029880                iso9660Owner
                0x00000000c0029884                recentSector
                0x00000000c00298a0                recentBuffer
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002a0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002a0a0        0xd hw/bus/pci.32
                0x00000000c002a0a0                thePCI
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002a0ad        0x3 
 .bss           0x00000000c002a0b0        0x8 hw/diskphys/ata.32
                0x00000000c002a0b0                ataSectorsWritten
                0x00000000c002a0b4                ataSectorsRead
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002a0b8        0x8 
 .bss           0x00000000c002a0c0       0x41 hw/intctrl/apic.32
                0x00000000c002a0c0                noOfIOAPICs
                0x00000000c002a0e0                ioapics
                0x00000000c002a100                IOAPICsSetupYet
 .bss           0x00000000c002a101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002a101        0x3 
 .bss           0x00000000c002a104        0x4 hw/timer/pit.32
                0x00000000c002a104                pitFreq
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002a108        0x0 crtn.32
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002a108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002f20f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
