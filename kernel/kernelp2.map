Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e81a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6b9 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cc5                Krnl::firstTask()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006eb0                Computer::setBootMessage(char const*)
                0x00000000c0006eb2                Computer::detectFeatures()
                0x00000000c00070d8                Computer::displayFeatures()
                0x00000000c00070da                Computer::rdmsr(unsigned int)
                0x00000000c0007106                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007142                Computer::shutdown()
                0x00000000c000715a                Computer::restart()
                0x00000000c0007172                Computer::sleep()
                0x00000000c0007186                Computer::nmiEnabled()
                0x00000000c0007192                Computer::readCMOS(unsigned char)
                0x00000000c00071ae                Computer::enableNMI(bool)
                0x00000000c00071c6                Computer::open(int, int, void*)
                0x00000000c000729a                Computer::disableNMI()
                0x00000000c00072aa                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072ce                Computer::handleNMI()
 *fill*         0x00000000c0007339        0x1 
 .text          0x00000000c000733a      0x1db core/gdt.32
                0x00000000c000733a                GDTEntry::setBase(unsigned int)
                0x00000000c0007356                GDTEntry::setLimit(unsigned int)
                0x00000000c0007374                GDT::GDT()
                0x00000000c0007374                GDT::GDT()
                0x00000000c000738a                GDT::addEntry(GDTEntry)
                0x00000000c00073ac                GDT::getNumberOfEntries()
                0x00000000c00073b4                GDT::flush()
                0x00000000c00073d6                GDT::setup()
 .text          0x00000000c0007515       0x1d core/idle.32
                0x00000000c0007515                idleFunction(void*)
 *fill*         0x00000000c0007532        0x2 
 .text          0x00000000c0007534      0x46c core/idt.32
                0x00000000c0007534                IDTEntry::IDTEntry(bool)
                0x00000000c0007534                IDTEntry::IDTEntry(bool)
                0x00000000c00075ae                IDTEntry::setOffset(unsigned int)
                0x00000000c00075c4                IDT::IDT()
                0x00000000c00075c4                IDT::IDT()
                0x00000000c00075c6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075ce                IDT::addEntry(IDTEntry, int)
                0x00000000c00075e8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007620                IDT::flush()
                0x00000000c000763a                IDT::setup()
 .text          0x00000000c00079a0      0x185 core/kheap.32
                0x00000000c00079a0                sbrk
                0x00000000c0007a34                mmap
                0x00000000c0007a4a                munmap
                0x00000000c0007a60                liballoc_lock()
                0x00000000c0007a6e                liballoc_unlock()
                0x00000000c0007a84                liballoc_alloc(int)
                0x00000000c0007a9c                liballoc_free(void*, int)
                0x00000000c0007ab7                realloc
                0x00000000c0007acb                malloc
                0x00000000c0007adb                free
                0x00000000c0007aeb                rfree
                0x00000000c0007afb                calloc
 .text          0x00000000c0007b25       0xc3 core/main.32
                0x00000000c0007b25                KeEntryPoint
 .text          0x00000000c0007be8      0x639 core/physmgr.32
                0x00000000c0007be8                Phys::allocateDMA(unsigned long)
                0x00000000c0007cd6                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d11                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d51                Phys::getPageState(unsigned long)
                0x00000000c0007d6d                Phys::freePage(unsigned long)
                0x00000000c0007dd6                Phys::allocatePage()
                0x00000000c0007ea5                Phys::allocateContiguousPages(int)
                0x00000000c0007f0c                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f44                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008221        0x1 
 .text          0x00000000c0008222      0x26d core/pipe.32
                0x00000000c0008222                Pipe::isAtty()
                0x00000000c0008226                Pipe::~Pipe()
                0x00000000c0008226                Pipe::~Pipe()
                0x00000000c000824a                Pipe::~Pipe()
                0x00000000c0008272                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008336                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xaaa core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a50                VgaText::putx(unsigned int)
                0x00000000c0008a96                VgaText::puts(char const*)
                0x00000000c0008abc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b08                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c56                VgaText::VgaText(char const*)
                0x00000000c0008c56                VgaText::VgaText(char const*)
                0x00000000c0008da6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f14                VgaText::doUpdate()
                0x00000000c0008f15                newTerminal(char*)
 *fill*         0x00000000c0008f3a        0x2 
 .text          0x00000000c0008f3c      0x1a1 core/tss.32
                0x00000000c0008f3c                TSS::TSS()
                0x00000000c0008f3c                TSS::TSS()
                0x00000000c0008f4c                TSS::setESP(unsigned long)
                0x00000000c0008f60                TSS::flush()
                0x00000000c0008f80                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090dd        0x1 
 .text          0x00000000c00090de      0x4ca core/unixfile.32
                0x00000000c00090de                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009134                ReservedFilename::isAtty()
                0x00000000c0009150                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091ae                UnixFile::getFileDescriptor()
                0x00000000c00091b6                UnixFile::UnixFile(int)
                0x00000000c00091b6                UnixFile::UnixFile(int)
                0x00000000c000936a                ReservedFilename::ReservedFilename(int)
                0x00000000c000936a                ReservedFilename::ReservedFilename(int)
                0x00000000c000939c                UnixFile::~UnixFile()
                0x00000000c000939c                UnixFile::~UnixFile()
                0x00000000c0009438                UnixFile::~UnixFile()
                0x00000000c0009460                ReservedFilename::~ReservedFilename()
                0x00000000c0009460                ReservedFilename::~ReservedFilename()
                0x00000000c0009484                ReservedFilename::~ReservedFilename()
                0x00000000c00094ab                getFromFileDescriptor(int)
 .text          0x00000000c00095a8     0x1279 core/virtmgr.32
                0x00000000c00095a8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095e2                Virt::getPageState(unsigned long)
                0x00000000c0009605                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009721                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009744                Virt::swapIDToSector(unsigned long)
                0x00000000c000975a                Virt::allocateSwapfilePage()
                0x00000000c00097d9                Virt::virtualMemorySetup()
                0x00000000c000982a                Virt::setupPageSwapping(int)
                0x00000000c000989c                VAS::VAS(VAS*)
                0x00000000c000989c                VAS::VAS(VAS*)
                0x00000000c00098ca                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098f8                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009917                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a2a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a4e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a68                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009aac                VAS::VAS()
                0x00000000c0009aac                VAS::VAS()
                0x00000000c0009b16                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b4a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b76                VAS::~VAS()
                0x00000000c0009b76                VAS::~VAS()
                0x00000000c0009ce4                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009df0                VAS::allocatePages(int, int)
                0x00000000c0009fe0                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009ffe                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a0c6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a1b6                VAS::VAS(bool)
                0x00000000c000a1b6                VAS::VAS(bool)
                0x00000000c000a448                VAS::evict(unsigned long)
                0x00000000c000a514                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a640                VAS::scanForEviction()
                0x00000000c000a726                mapVASFirstTime
 .text          0x00000000c000a821       0x5f coreobjs/c++.32
                0x00000000c000a821                __cxa_atexit
                0x00000000c000a824                __cxa_finalize
                0x00000000c000a825                __stack_chk_fail
                0x00000000c000a85b                __cxa_pure_virtual
                0x00000000c000a86c                operator new[](unsigned long)
                0x00000000c000a871                operator delete(void*, unsigned long)
                0x00000000c000a876                operator delete[](void*)
                0x00000000c000a87b                operator delete[](void*, unsigned long)
 .text          0x00000000c000a880      0x225 dbg/kconsole.32
                0x00000000c000a880                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8f1                Dbg::logc(char)
                0x00000000c000a911                Dbg::logs(char*)
                0x00000000c000a930                Dbg::logWriteInt(unsigned int)
                0x00000000c000a94e                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a96f                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aaa5        0x1 
 .text          0x00000000c000aaa6      0xc86 fs/vfs.32
                0x00000000c000aaa6                File::read(unsigned long long, void*, int*)
                0x00000000c000aafe                File::write(unsigned long long, void*, int*)
                0x00000000c000ab56                Directory::read(unsigned long long, void*, int*)
                0x00000000c000abae                Directory::write(unsigned long long, void*, int*)
                0x00000000c000abdc                File::isAtty()
                0x00000000c000abe0                Directory::isAtty()
                0x00000000c000abe4                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000abea                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000abf0                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000abf6                File::~File()
                0x00000000c000abf6                File::~File()
                0x00000000c000ac1a                File::~File()
                0x00000000c000ac44                Directory::~Directory()
                0x00000000c000ac44                Directory::~Directory()
                0x00000000c000ac68                Directory::~Directory()
                0x00000000c000ac92                Filesystem::Filesystem()
                0x00000000c000ac92                Filesystem::Filesystem()
                0x00000000c000acb6                Filesystem::~Filesystem()
                0x00000000c000acb6                Filesystem::~Filesystem()
                0x00000000c000acc4                Filesystem::~Filesystem()
                0x00000000c000ace8                Fs::getcwd(Process*, char*, int)
                0x00000000c000ad12                Fs::initVFS()
                0x00000000c000ad3c                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000af18                File::File(char const*, Process*)
                0x00000000c000af18                File::File(char const*, Process*)
                0x00000000c000afd4                File::open(FileOpenMode)
                0x00000000c000b032                File::close()
                0x00000000c000b092                File::seek(unsigned long long)
                0x00000000c000b0e8                File::tell(unsigned long long*)
                0x00000000c000b138                File::rewind()
                0x00000000c000b14c                File::unlink()
                0x00000000c000b198                File::rename(char const*)
                0x00000000c000b1e6                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b242                File::exists()
                0x00000000c000b280                File::stat(unsigned long long*, bool*)
                0x00000000c000b2e1                Fs::setcwd(Process*, char*)
                0x00000000c000b43e                Directory::Directory(char const*, Process*)
                0x00000000c000b43e                Directory::Directory(char const*, Process*)
                0x00000000c000b4fa                Directory::open()
                0x00000000c000b556                Directory::close()
                0x00000000c000b5b6                Directory::unlink()
                0x00000000c000b602                Directory::rename(char const*)
                0x00000000c000b650                Directory::exists()
                0x00000000c000b68e                Directory::read(dirent*)
                0x00000000c000b6da                Directory::create()
                0x00000000c000b726                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000b72c       0x86 hal/bus.32
                0x00000000c000b72c                Bus::Bus(char const*)
                0x00000000c000b72c                Bus::Bus(char const*)
                0x00000000c000b764                Bus::~Bus()
                0x00000000c000b764                Bus::~Bus()
                0x00000000c000b788                Bus::~Bus()
 .text          0x00000000c000b7b2       0x96 hal/buzzer.32
                0x00000000c000b7b2                beepThread(void*)
                0x00000000c000b7ef                Krnl::beep(int, int, bool)
 .text          0x00000000c000b848      0x465 hal/clock.32
                0x00000000c000b848                User::loadClockSettings(int)
                0x00000000c000b89a                Clock::Clock(char const*)
                0x00000000c000b89a                Clock::Clock(char const*)
                0x00000000c000b8d0                Clock::~Clock()
                0x00000000c000b8d0                Clock::~Clock()
                0x00000000c000b8f4                Clock::~Clock()
                0x00000000c000b91e                Clock::timeInSecondsLocal()
                0x00000000c000b966                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b9bf                datetimeToSeconds(datetime_t)
                0x00000000c000bae4                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bb44                secondsToDatetime(unsigned long long)
                0x00000000c000bc88                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bcad        0x1 
 .text          0x00000000c000bcae      0x464 hal/device.32
                0x00000000c000bcae                Device::hibernate()
                0x00000000c000bcb0                Device::wake()
                0x00000000c000bcb2                Device::detect()
                0x00000000c000bcb4                Device::disableLegacy()
                0x00000000c000bcb6                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bcb8                DriverlessDevice::close(int, int, void*)
                0x00000000c000bcbc                DriverlessDevice::detect()
                0x00000000c000bcbe                DriverlessDevice::open(int, int, void*)
                0x00000000c000bcd2                Device::~Device()
                0x00000000c000bcd2                Device::~Device()
                0x00000000c000bce0                Device::~Device()
                0x00000000c000bd08                Device::findAndLoadDriver()
                0x00000000c000bd16                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bd3c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bd7c                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bda6                Device::getParent()
                0x00000000c000bdb2                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000bdd0                Device::addChild(Device*)
                0x00000000c000be14                Device::removeAllChildren()
                0x00000000c000be5a                Device::hibernateAll()
                0x00000000c000be8a                Device::wakeAll()
                0x00000000c000beba                Device::detectAll()
                0x00000000c000beea                Device::disableLegacyAll()
                0x00000000c000beec                Device::loadDriversForAll()
                0x00000000c000beee                Device::closeAll()
                0x00000000c000bf24                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bf5a                Device::setName(char const*)
                0x00000000c000bf68                Device::Device(char const*)
                0x00000000c000bf68                Device::Device(char const*)
                0x00000000c000c064                Device::getName()
                0x00000000c000c06e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c06e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c0a4                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c0e8                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c112        0x2 
 .text          0x00000000c000c114       0x86 hal/diskctrl.32
                0x00000000c000c114                HardDiskController::HardDiskController(char const*)
                0x00000000c000c114                HardDiskController::HardDiskController(char const*)
                0x00000000c000c14c                HardDiskController::~HardDiskController()
                0x00000000c000c14c                HardDiskController::~HardDiskController()
                0x00000000c000c170                HardDiskController::~HardDiskController()
 .text          0x00000000c000c19a       0xe2 hal/diskphys.32
                0x00000000c000c19a                PhysicalDisk::eject()
                0x00000000c000c19e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c19e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c206                PhysicalDisk::startCache()
                0x00000000c000c22e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c22e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c252                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c27c        0x0 hal/fpu.32
 .text          0x00000000c000c27c      0x360 hal/intctrl.32
                0x00000000c000c27c                int_handler
                0x00000000c000c306                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c350                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c493                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c4c7                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c53d                setupINTS()
                0x00000000c000c59a                convertLegacyIRQNumber(int)
 .text          0x00000000c000c5dc      0x8be hal/keybrd.32
                0x00000000c000c5dc                startGUI(void*)
                0x00000000c000c64a                startGUIVESA(void*)
                0x00000000c000c6b8                sendKeyToTerminal(unsigned char)
                0x00000000c000c793                sendKeyboardToken(KeyboardToken)
                0x00000000c000cc7d                clearInternalKeybuffer(VgaText*)
                0x00000000c000ccb2                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000ce10                Keyboard::Keyboard(char const*)
                0x00000000c000ce10                Keyboard::Keyboard(char const*)
                0x00000000c000ce4c                Keyboard::~Keyboard()
                0x00000000c000ce4c                Keyboard::~Keyboard()
                0x00000000c000ce70                Keyboard::~Keyboard()
 .text          0x00000000c000ce9a      0x3f8 hal/logidisk.32
                0x00000000c000ce9a                LogicalDisk::close(int, int, void*)
                0x00000000c000ce9e                LogicalDisk::~LogicalDisk()
                0x00000000c000ce9e                LogicalDisk::~LogicalDisk()
                0x00000000c000cec2                LogicalDisk::~LogicalDisk()
                0x00000000c000ceec                LogicalDisk::open(int, int, void*)
                0x00000000c000cf00                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cf38                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cf7e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cf7e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d03e                LogicalDisk::assignDriveLetter()
                0x00000000c000d0f8                LogicalDisk::mount()
                0x00000000c000d140                LogicalDisk::unmount()
                0x00000000c000d150                LogicalDisk::eject()
                0x00000000c000d164                LogicalDisk::unassignDriveLetter()
                0x00000000c000d1ba                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d226                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000d292        0x2 
 .text          0x00000000c000d294       0x86 hal/mouse.32
                0x00000000c000d294                Mouse::Mouse(char const*)
                0x00000000c000d294                Mouse::Mouse(char const*)
                0x00000000c000d2cc                Mouse::~Mouse()
                0x00000000c000d2cc                Mouse::~Mouse()
                0x00000000c000d2f0                Mouse::~Mouse()
 .text          0x00000000c000d31a       0x90 hal/nic.32
                0x00000000c000d31a                NIC::getMAC()
                0x00000000c000d320                NIC::write(int, unsigned char*, int*)
                0x00000000c000d326                NIC::NIC(char const*)
                0x00000000c000d326                NIC::NIC(char const*)
                0x00000000c000d35c                NIC::~NIC()
                0x00000000c000d35c                NIC::~NIC()
                0x00000000c000d380                NIC::~NIC()
 .text          0x00000000c000d3aa      0x33b hal/partition.32
                0x00000000c000d3aa                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d452                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d6e5        0x3 
 .text          0x00000000c000d6e8       0x86 hal/serial.32
                0x00000000c000d6e8                Serial::Serial(char const*)
                0x00000000c000d6e8                Serial::Serial(char const*)
                0x00000000c000d720                Serial::~Serial()
                0x00000000c000d720                Serial::~Serial()
                0x00000000c000d744                Serial::~Serial()
 *fill*         0x00000000c000d76e        0x2 
 .text          0x00000000c000d770      0x234 hal/timer.32
                0x00000000c000d770                Timer::Timer(char const*)
                0x00000000c000d770                Timer::Timer(char const*)
                0x00000000c000d7a8                Timer::~Timer()
                0x00000000c000d7a8                Timer::~Timer()
                0x00000000c000d7cc                Timer::~Timer()
                0x00000000c000d7f6                Timer::read()
                0x00000000c000d801                setupTimer(int)
                0x00000000c000d83c                timerHandler(unsigned int)
 .text          0x00000000c000d9a4      0x450 hal/vcache.32
                0x00000000c000d9a4                VCache::VCache(PhysicalDisk*)
                0x00000000c000d9a4                VCache::VCache(PhysicalDisk*)
                0x00000000c000db14                VCache::invalidateReadBuffer()
                0x00000000c000db24                VCache::writeWriteBuffer()
                0x00000000c000db70                VCache::~VCache()
                0x00000000c000db70                VCache::~VCache()
                0x00000000c000dbc8                VCache::~VCache()
                0x00000000c000dbf0                VCache::write(unsigned long long, int, void*)
                0x00000000c000dcea                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ddf4      0x4d9 hal/video.32
                0x00000000c000ddf4                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000de40                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000deb0                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000df40                Video::clearScreen(unsigned int)
                0x00000000c000df74                Video::putpixel(int, int, unsigned int)
                0x00000000c000df82                Video::readPixelApprox(int, int)
                0x00000000c000df96                Video::Video(char const*)
                0x00000000c000df96                Video::Video(char const*)
                0x00000000c000dfcc                Video::~Video()
                0x00000000c000dfcc                Video::~Video()
                0x00000000c000dff0                Video::~Video()
                0x00000000c000e01a                Video::isMonochrome()
                0x00000000c000e026                Video::getWidth()
                0x00000000c000e032                Video::getHeight()
                0x00000000c000e03e                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e0fa                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e262                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e2cd        0x3 
 .text          0x00000000c000e2d0     0x12d2 hw/acpi.32
                0x00000000c000e2d0                ACPI::close(int, int, void*)
                0x00000000c000e384                findRSDP()
                0x00000000c000e41c                loadACPITables(unsigned char*)
                0x00000000c000e688                findRSDT(unsigned char*)
                0x00000000c000e7e0                findDataTable(unsigned char*, char*)
                0x00000000c000e860                scanMADT()
                0x00000000c000ed18                ACPI::ACPI()
                0x00000000c000ed18                ACPI::ACPI()
                0x00000000c000ed6c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ee68                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ef34                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ef3c                ACPI::detectPCI()
                0x00000000c000f15c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f1a4                ACPI::sleep()
                0x00000000c000f1c0                ACPI::open(int, int, void*)
 .text          0x00000000c000f5a2      0xba5 hw/cpu.32
                0x00000000c000f5a2                CPU::close(int, int, void*)
                0x00000000c000f5a6                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f5c2                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f5da                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f64e                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f6d2                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f700                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f72e                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f75c                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f78a                CPU::CPU()
                0x00000000c000f78a                CPU::CPU()
                0x00000000c000f818                CPU::displayFeatures()
                0x00000000c000f81a                CPU::detectFeatures()
                0x00000000c000feee                CPU::setupSMEP()
                0x00000000c000fefa                CPU::setupUMIP()
                0x00000000c000ff04                CPU::setupTSC()
                0x00000000c000ff0e                CPU::setupLargePages()
                0x00000000c000ff18                CPU::setupPAT()
                0x00000000c000ff54                CPU::setupMTRR()
                0x00000000c000ff56                CPU::setupGlobalPages()
                0x00000000c000ff60                CPU::allowUsermodeDataAccess()
                0x00000000c000ff72                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ff84                CPU::setupSMAP()
                0x00000000c000ff92                CPU::setupFeatures()
                0x00000000c001005e                CPU::open(int, int, void*)
 .text          0x00000000c0010147       0xd8 krnl/bootmsg.32
                0x00000000c0010147                KeDisplaySplashScreen()
                0x00000000c00101bc                KeSetBootMessage(char const*)
 *fill*         0x00000000c001021f        0x1 
 .text          0x00000000c0010220      0x585 krnl/env.32
                0x00000000c0010220                EnvVarContainer::getEnv(char const*)
                0x00000000c001025e                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010320                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010322                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001050c                EnvVarContainer::__loadSystem()
                0x00000000c0010526                EnvVarContainer::__loadUser()
                0x00000000c0010528                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010528                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001054a                EnvVarContainer::~EnvVarContainer()
                0x00000000c001054a                EnvVarContainer::~EnvVarContainer()
                0x00000000c001057a                Krnl::getEnv(Process*, char const*)
                0x00000000c00105df                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00105f9                Krnl::setEnvUser(char const*, char const*)
                0x00000000c0010618                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c001062b                Krnl::deleteEnvSystem(char const*)
                0x00000000c001062c                Krnl::deleteEnvUser(char const*)
                0x00000000c001062d                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c001062e                Krnl::newProcessEnv(Process*)
                0x00000000c0010650                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c001069c                Krnl::loadSystemEnv()
                0x00000000c00106ca                Krnl::loadUserEnv()
                0x00000000c00106f0                Krnl::flushEnv()
                0x00000000c00106f1                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0010711                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00107a5       0x94 krnl/inlines.32
                0x00000000c00107a5                CPU::current()
                0x00000000c00107b1                operator new(unsigned long)
                0x00000000c00107b6                operator delete(void*)
                0x00000000c00107bb                disableIRQs()
                0x00000000c00107bd                enableIRQs()
                0x00000000c00107bf                lockScheduler()
                0x00000000c00107c7                unlockScheduler()
                0x00000000c00107d6                lockStuff()
                0x00000000c00107e4                unlockStuff()
                0x00000000c001081e                Virt::getAKernelVAS()
                0x00000000c0010824                __not_memcpy
 .text          0x00000000c0010839        0xc krnl/panic.32
                0x00000000c0010839                KePanic(char const*)
 .text          0x00000000c0010845      0x142 krnl/powctrl.32
                0x00000000c0010845                Krnl::powerThread(void*)
                0x00000000c0010873                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010889                Krnl::userIOReceived()
                0x00000000c0010894                Krnl::handlePowerButton()
                0x00000000c00108c9                Krnl::handleSleepButton()
                0x00000000c00108fe                Krnl::setupPowerManager()
 .text          0x00000000c0010987       0x9b krnl/random.32
                0x00000000c0010987                KeRand()
                0x00000000c00109c7                KeSeedRand(unsigned int)
                0x00000000c00109f0                KeInitRand()
 *fill*         0x00000000c0010a22        0x2 
 .text          0x00000000c0010a24      0x1bc krnl/resolve.32
                0x00000000c0010a24                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010be0      0x313 krnl/signal.32
                0x00000000c0010be0                KiSigKill(int)
                0x00000000c0010bf4                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010bf5                KiDefaultSignalHandlerPause(int)
                0x00000000c0010c21                KiDefaultSignalHandlerResume(int)
                0x00000000c0010c4d                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010c52                KeInitSignals()
                0x00000000c0010c9d                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010cd3                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010d50                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010e3f                KiCheckSignalZ
                0x00000000c0010e81                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010ebc                KiFinishSignalZ
 .text          0x00000000c0010ef3      0xc76 krnl/syscalls.32
                0x00000000c0010ef3                SysSeekDir(regs*)
                0x00000000c0010ef8                SysTellDir(regs*)
                0x00000000c0010efd                SysVerify(regs*)
                0x00000000c0010f07                SysGetArgc(regs*)
                0x00000000c0010f1b                SysTTYName(regs*)
                0x00000000c0010f23                SysFormatDisk(regs*)
                0x00000000c0010f8a                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010fde                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011037                SysShutdown(regs*)
                0x00000000c00110c4                SysRealpath(regs*)
                0x00000000c0011113                SysReadDir(regs*)
                0x00000000c0011193                SysIsATTY(regs*)
                0x00000000c00111ed                SysSeek(regs*)
                0x00000000c0011247                SysTell(regs*)
                0x00000000c00112b4                SysSize(regs*)
                0x00000000c0011327                SysSizeFromFilename(regs*)
                0x00000000c00113d1                SysClose(regs*)
                0x00000000c0011431                SysOpenDir(regs*)
                0x00000000c00114ae                SysMakeDir(regs*)
                0x00000000c001151c                SysCloseDir(regs*)
                0x00000000c001156b                SysWait(regs*)
                0x00000000c001158c                SysNotImpl(regs*)
                0x00000000c00115a7                SysPanic(regs*)
                0x00000000c00115c2                SysRmdir(regs*)
                0x00000000c0011620                SysUnlink(regs*)
                0x00000000c001167e                SysGetArgv(regs*)
                0x00000000c00116cb                SysUSleep(regs*)
                0x00000000c00116f4                SysSpawn(regs*)
                0x00000000c0011765                SysGetEnv(regs*)
                0x00000000c001181a                SysSetFatAttrib(regs*)
                0x00000000c0011883                SysPipe(regs*)
                0x00000000c00118c8                SysGetUnixTime(regs*)
                0x00000000c00118dc                string_ends_with(char const*, char const*)
                0x00000000c0011927                SysOpen(regs*)
                0x00000000c0011b27                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011b69        0x3 
 .text          0x00000000c0011b6c      0x159 net/ethernet.32
                0x00000000c0011b6c                KeSwitchEndian16(unsigned short)
                0x00000000c0011b90                KeSwitchEndian32(unsigned int)
                0x00000000c0011bc0                EthernetCRC32(unsigned char*, int)
                0x00000000c0011c64                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0011cc5      0xd51 reg/cm.32
                0x00000000c0011cc5                CmOpen(char const*)
                0x00000000c0011de3                CmClose(Reghive_Tag*)
                0x00000000c0011df9                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011e35                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0011eac                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011eeb                CmGetNext(Reghive_Tag*, int)
                0x00000000c0011f1d                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011f59                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0011f81                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0011fa2                CmExpand(Reghive_Tag*, int)
                0x00000000c001201d                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c00120a3                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012197                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c00122cf                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012330                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012360                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012397                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00123c1                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012401                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00124a5                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c00124d3                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0012670                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00126bd                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012737                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001278a                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001284e                zStrtok(char*, char const*)
                0x00000000c00128c0                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0012941                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00129e4                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0012a16      0x545 reg/registry.32
                0x00000000c0012a16                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012ba2                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0012cf7                Reg::getLine(char*, char*, char*)
                0x00000000c0012d2e                Reg::readInt(char*, char*, int*)
                0x00000000c0012e1c                Reg::readString(char*, char*, char*, int)
                0x00000000c0012e9d                Reg::readBool(char*, char*, bool*)
                0x00000000c0012ec2                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0012eee                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012f1a                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0012f5b       0x36 sys/eject.32
                0x00000000c0012f5b                SysEject(regs*)
 .text          0x00000000c0012f91       0x18 sys/exit.32
                0x00000000c0012f91                SysExit(regs*)
 .text          0x00000000c0012fa9       0x1f sys/getcwd.32
                0x00000000c0012fa9                SysGetCwd(regs*)
 .text          0x00000000c0012fc8        0xc sys/getpid.32
                0x00000000c0012fc8                SysGetPID(regs*)
 .text          0x00000000c0012fd4       0x1a sys/getramdata.32
                0x00000000c0012fd4                SysGetRAMData(regs*)
 .text          0x00000000c0012fee       0x82 sys/getvgaptr.32
                0x00000000c0012fee                SysGetVGAPtr(regs*)
 .text          0x00000000c0013070       0xb9 sys/kill.32
                0x00000000c0013070                SysKill(regs*)
 .text          0x00000000c0013129       0xa8 sys/loaddll.32
                0x00000000c0013129                SysLoadDLL(regs*)
 .text          0x00000000c00131d1       0x68 sys/read.32
                0x00000000c00131d1                SysRead(regs*)
 .text          0x00000000c0013239       0x29 sys/registersignal.32
                0x00000000c0013239                SysRegisterSignal(regs*)
 .text          0x00000000c0013262      0x19c sys/registry.32
                0x00000000c0013262                SysRegistryGetTypeFromPath(regs*)
                0x00000000c00132d9                SysRegistryReadExtent(regs*)
                0x00000000c0013321                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013349                SysRegistryEnterDirectory(regs*)
                0x00000000c0013371                SysRegistryGetNext(regs*)
                0x00000000c0013399                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00133d3                SysRegistryOpen(regs*)
                0x00000000c00133e7                SysRegistryClose(regs*)
 .text          0x00000000c00133fe       0x55 sys/sbrk.32
                0x00000000c00133fe                SysSbrk(regs*)
 .text          0x00000000c0013453       0x1c sys/setcwd.32
                0x00000000c0013453                SysSetCwd(regs*)
 .text          0x00000000c001346f       0x96 sys/settime.32
                0x00000000c001346f                SysSetTime(regs*)
 .text          0x00000000c0013505       0x4a sys/timezone.32
                0x00000000c0013505                SysTimezone(regs*)
 .text          0x00000000c001354f       0x68 sys/write.32
                0x00000000c001354f                SysWrite(regs*)
 .text          0x00000000c00135b7       0x62 sys/wsbe.32
                0x00000000c00135b7                SysWsbe(regs*)
 .text          0x00000000c0013619       0x25 sys/yield.32
                0x00000000c0013619                SysYield(regs*)
 .text          0x00000000c001363e     0x1203 thr/elf.32
                0x00000000c001363e                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00138c5                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013ae4                Thr::runtimeReferenceHelper()
                0x00000000c0013af7                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013b46                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013e04                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014545                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0014577                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00145ae                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00145c8                Thr::loadDLL(char const*, bool)
                0x00000000c0014808                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0014841        0x3 
 .text          0x00000000c0014844     0x13b5 thr/prcssthr.32
                0x00000000c0014844                userModeEntryPoint(void*)
                0x00000000c001486c                changeTSS
                0x00000000c001489c                switchToThread(ThreadControlBlock*)
                0x00000000c001494c                Process::addArgs(char**)
                0x00000000c00149b8                Process::Process(char const*, Process*, char**)
                0x00000000c00149b8                Process::Process(char const*, Process*, char**)
                0x00000000c0014bc4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014bc4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014d98                taskStartupFunction
                0x00000000c0014da4                Semaphore::Semaphore(int)
                0x00000000c0014da4                Semaphore::Semaphore(int)
                0x00000000c0014dd4                Mutex::Mutex()
                0x00000000c0014dd4                Mutex::Mutex()
                0x00000000c0014de8                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014ef0                Process::createUserThread()
                0x00000000c0014f10                setupMultitasking(void (*)())
                0x00000000c0015034                schedule()
                0x00000000c00150c8                Semaphore::tryAcquire()
                0x00000000c0015188                Semaphore::assertLocked(char const*)
                0x00000000c001520c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015234                blockTask(TaskState)
                0x00000000c001526c                waitTask(int, int*, int)
                0x00000000c00152b0                milliTenthSleepUntil(unsigned int)
                0x00000000c0015350                milliTenthSleep(unsigned int)
                0x00000000c0015364                sleep(unsigned int)
                0x00000000c0015374                Semaphore::acquire()
                0x00000000c001543c                taskReturned
                0x00000000c0015480                Thr::processFromPID(int)
                0x00000000c001552c                unblockTask(ThreadControlBlock*)
                0x00000000c00155d8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00158ac                cleanerTaskFunction(void*)
                0x00000000c00159b4                terminateTask(int)
                0x00000000c0015aa0                Thr::terminateFromIRQ(int)
                0x00000000c0015ab0                Semaphore::release()
 .text          0x00000000c0015bf9      0xbec vm86/vm8086.32
                0x00000000c0015bf9                Vm::inbv(unsigned short)
                0x00000000c0015c0c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015c42                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015c52                Vm::getSegment(unsigned int)
                0x00000000c0015c5a                Vm::getOffset(unsigned int)
                0x00000000c0015c5f                Vm::mainloop2()
                0x00000000c0015c99                Vm::mainVm8086Loop(void*)
                0x00000000c0015ca9                Vm::mainloop3(unsigned long)
                0x00000000c0015ccf                Vm::initialise8086()
                0x00000000c0015d12                Vm::finish8086()
                0x00000000c0015d73                Vm::getOutput8086(unsigned char*)
                0x00000000c0015d98                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015e51                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015fde                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016067                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016078                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001608a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001609b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00160b0                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00160c6                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00160db                Vm::faultHandler(regs*)
 .text          0x00000000c00167e5      0xabf arch/i386/hal.32
                0x00000000c00167e5                noCopro(unsigned long)
                0x00000000c00167e6                nmiHandler(regs*, void*)
                0x00000000c00167ff                doubleFault(regs*, void*)
                0x00000000c0016818                displayDebugInfo(regs*)
                0x00000000c0016b74                HalSystemIdle()
                0x00000000c0016bf0                displayProgramFault(char const*)
                0x00000000c0016c3c                gpFault(regs*, void*)
                0x00000000c0016ca3                pgFault(regs*, void*)
                0x00000000c0016d2c                otherISRHandler(regs*, void*)
                0x00000000c0016d60                opcodeFault(regs*, void*)
                0x00000000c0016de3                i386SaveCoprocessor(void*)
                0x00000000c0016df7                i386LoadCoprocessor(void*)
                0x00000000c0016e0b                x87EmulHandler(regs*, void*)
                0x00000000c0016ea8                HalInitialiseCoprocessor()
                0x00000000c0016f56                HalPanic(char const*)
                0x00000000c0017062                HalQueryPerformanceCounter()
                0x00000000c001707d                HalInitialise()
                0x00000000c0017233                HalMakeBeep(int)
                0x00000000c001726d                HalGetRand()
                0x00000000c0017270                HalEndOfInterrupt(int)
                0x00000000c00172a1                HalRestart()
                0x00000000c00172a2                HalShutdown()
                0x00000000c00172a3                HalSleep()
 .text          0x00000000c00172a4      0x2dc arch/i386/pic.32
                0x00000000c00172a4                picIoWait()
                0x00000000c00172ac                picDisable()
                0x00000000c00172e0                picGetIRQReg(int)
                0x00000000c001735c                picOpen()
                0x00000000c00174e0                picEOI(int)
 .text          0x00000000c0017580      0x66e arch/i386/rtc.32
                0x00000000c0017580                RTC::open(int, int, void*)
                0x00000000c0017584                RTC::close(int, int, void*)
                0x00000000c0017588                RTC::timeInSecondsUTC()
                0x00000000c001759a                RTC::timeInDatetimeUTC()
                0x00000000c00175c0                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00175fe                RTC::~RTC()
                0x00000000c00175fe                RTC::~RTC()
                0x00000000c0017622                RTC::~RTC()
                0x00000000c001764c                RTC::get_update_in_progress_flag()
                0x00000000c0017666                RTC::completeRTCRefresh()
                0x00000000c0017940                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0017aee                rtcIRQHandler(regs*, void*)
                0x00000000c0017b34                RTC::RTC()
                0x00000000c0017b34                RTC::RTC()
 *fill*         0x00000000c0017bee        0x2 
 .text          0x00000000c0017bf0      0x1f4 arch/i386/vga.32
                0x00000000c0017bf0                HalConsoleScroll(int, int)
                0x00000000c0017cf8                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017d5c                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0017de4     0x1487 fs/fat/vfslink.32
                0x00000000c0017de4                FAT::getName()
                0x00000000c0017dec                FAT::tell(void*, unsigned long long*)
                0x00000000c0017e28                FAT::stat(void*, unsigned long long*)
                0x00000000c0017e64                FAT::~FAT()
                0x00000000c0017e64                FAT::~FAT()
                0x00000000c0017e88                FAT::~FAT()
                0x00000000c0017eb0                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017f54                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018034                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018218                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018434                FAT::allocateSwapfile(char const*, int)
                0x00000000c00185f4                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0018764                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00187c4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0018824                FAT::close(void*)
                0x00000000c0018878                FAT::closeDir(void*)
                0x00000000c00188cc                FAT::seek(void*, unsigned long long)
                0x00000000c0018924                fatWrapperReadDisk
                0x00000000c0018964                fatWrapperWriteDisk
                0x00000000c00189a4                fatWrapperIoctl
                0x00000000c0018ac4                FAT::FAT()
                0x00000000c0018ac4                FAT::FAT()
                0x00000000c0018b1c                FAT::fixFilepath(char*)
                0x00000000c0018b5c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0018cd0                FAT::openDir(char const*, void**)
                0x00000000c0018d80                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018e78                FAT::unlink(char const*)
                0x00000000c0018ef8                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00190b0                FAT::rename(char const*, char const*)
                0x00000000c001917c                FAT::mkdir(char const*)
                0x00000000c00191fc                FAT::exists(char const*)
 *fill*         0x00000000c001926b        0x1 
 .text          0x00000000c001926c       0x94 fs/iso9660/helper.32
                0x00000000c001926c                isoReadDiscSectorHelper
                0x00000000c00192c8                iso_kprintf
                0x00000000c00192e4                iso_kprintfd
 .text          0x00000000c0019300      0x714 fs/iso9660/vfslink.32
                0x00000000c0019300                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019306                ISO9660::getName()
                0x00000000c001930c                ISO9660::closeDir(void*)
                0x00000000c0019316                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001931c                ISO9660::unlink(char const*)
                0x00000000c0019322                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019328                ISO9660::rename(char const*, char const*)
                0x00000000c001932e                ISO9660::mkdir(char const*)
                0x00000000c0019334                ISO9660::~ISO9660()
                0x00000000c0019334                ISO9660::~ISO9660()
                0x00000000c0019358                ISO9660::~ISO9660()
                0x00000000c0019380                ISO9660::exists(char const*)
                0x00000000c0019394                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001947a                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c00194c2                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019504                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019542                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019594                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c00196d6                ISO9660::close(void*)
                0x00000000c0019706                ISO9660::openDir(char const*, void**)
                0x00000000c00197e0                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c00198fb                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001997a                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c00199ec                ISO9660::ISO9660()
                0x00000000c00199ec                ISO9660::ISO9660()
 .text          0x00000000c0019a14      0x26c hal/sound/sndcard.32
                0x00000000c0019a14                SoundCard::beginPlayback()
                0x00000000c0019a22                SoundCard::stopPlayback()
                0x00000000c0019a30                SoundCard::SoundCard(char const*)
                0x00000000c0019a30                SoundCard::SoundCard(char const*)
                0x00000000c0019ace                SoundCard::~SoundCard()
                0x00000000c0019ace                SoundCard::~SoundCard()
                0x00000000c0019af2                SoundCard::~SoundCard()
                0x00000000c0019b1c                SoundCard::configureRates(int, int, int)
                0x00000000c0019b4c                SoundCard::getSamples16(int, short*)
                0x00000000c0019ba8                SoundCard::getSamples32(int, int*)
                0x00000000c0019c2e                SoundCard::addChannel(SoundPort*)
                0x00000000c0019c6c                SoundCard::removeChannel(int)
 .text          0x00000000c0019c80      0x393 hal/sound/sndport.32
                0x00000000c0019c80                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019c80                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019d0c                SoundPort::~SoundPort()
                0x00000000c0019d0c                SoundPort::~SoundPort()
                0x00000000c0019d40                SoundPort::unpause()
                0x00000000c0019d4c                SoundPort::pause()
                0x00000000c0019d58                SoundPort::getBufferUsed()
                0x00000000c0019d60                SoundPort::getBufferSize()
                0x00000000c0019d68                SoundPort::buffer16(short*, int)
                0x00000000c0019df4                SoundPort::buffer32(int*, int)
                0x00000000c0019e80                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019f50                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001a013        0x0 hw/bus/isa.32
 *fill*         0x00000000c001a013        0x1 
 .text          0x00000000c001a014      0xbc5 hw/bus/pci.32
                0x00000000c001a014                PCI::open(int, int, void*)
                0x00000000c001a032                PCI::close(int, int, void*)
                0x00000000c001a036                PCI::PCI()
                0x00000000c001a036                PCI::PCI()
                0x00000000c001a0ce                PCI::readBAR8(unsigned int, int)
                0x00000000c001a0ea                PCI::readBAR16(unsigned int, int)
                0x00000000c001a108                PCI::readBAR32(unsigned int, int)
                0x00000000c001a124                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001a144                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001a166                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001a186                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a1fc                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a2a6                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a2ca                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a2f2                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a33c                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a364                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a388                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a3ac                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a3d4                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a438                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001a51e                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a7e8                PCI::checkBus(unsigned char)
                0x00000000c001a80c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a992                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001ab0e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001ab80                PCI::detect()
 *fill*         0x00000000c001abd9        0x1 
 .text          0x00000000c001abda      0xb96 hw/diskctrl/ide.32
                0x00000000c001abda                IDE::close(int, int, void*)
                0x00000000c001abde                IDE::IDE()
                0x00000000c001abde                IDE::IDE()
                0x00000000c001ac12                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ac24                selectDrive(unsigned char, unsigned char)
                0x00000000c001ac26                IDE::getBase(unsigned char)
                0x00000000c001ac38                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001acf8                IDE::read(unsigned char, unsigned char)
                0x00000000c001adac                IDE::waitInterrupt(unsigned char)
                0x00000000c001ae0e                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ae2a                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ae46                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ae90                IDE::open(int, int, void*)
                0x00000000c001b2ca                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b39a                IDE::detect()
                0x00000000c001b662                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b71c                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b770      0x32c hw/diskctrl/satabus.32
                0x00000000c001b770                SATABus::close(int, int, void*)
                0x00000000c001b774                SATABus::detect()
                0x00000000c001b776                SATABus::SATABus()
                0x00000000c001b776                SATABus::SATABus()
                0x00000000c001b7fc                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b82e                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b876                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b896                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b8c0                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001b9d2                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001ba7c                SATABus::open(int, int, void*)
 .text          0x00000000c001ba9c      0x96d hw/diskphys/ata.32
                0x00000000c001ba9c                ATA::close(int, int, void*)
                0x00000000c001bac0                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001bac2                ATA::ATA()
                0x00000000c001bac2                ATA::ATA()
                0x00000000c001baf0                ATA::flush(bool)
                0x00000000c001bb3e                ATA::readyForCommand()
                0x00000000c001bb8a                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001bf4e                ATA::detectCHS()
                0x00000000c001bf78                ATA::open(int, int, void*)
                0x00000000c001c044                combineCharAndColour(char, unsigned char)
                0x00000000c001c055                combineColours(unsigned char, unsigned char)
                0x00000000c001c062                ATA::read(unsigned long long, int, void*)
                0x00000000c001c238                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001c409        0x1 
 .text          0x00000000c001c40a      0x612 hw/diskphys/atapi.32
                0x00000000c001c40a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c410                ATAPI::close(int, int, void*)
                0x00000000c001c434                ATAPI::ATAPI()
                0x00000000c001c434                ATAPI::ATAPI()
                0x00000000c001c462                ATAPI::readyForCommand()
                0x00000000c001c4b4                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c774                ATAPI::diskRemoved()
                0x00000000c001c7ae                ATAPI::eject()
                0x00000000c001c7f6                ATAPI::diskInserted()
                0x00000000c001c802                ATAPI::detectMedia()
                0x00000000c001c8c2                ATAPI::open(int, int, void*)
                0x00000000c001c9a2                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ca1c      0x7ff hw/diskphys/sata.32
                0x00000000c001ca1c                SATA::close(int, int, void*)
                0x00000000c001ca40                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ca42                SATA::open(int, int, void*)
                0x00000000c001caec                SATA::SATA()
                0x00000000c001caec                SATA::SATA()
                0x00000000c001cb1a                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cd6c                SATA::read(unsigned long long, int, void*)
                0x00000000c001cfbc                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d21b        0x1 
 .text          0x00000000c001d21c      0x5d8 hw/diskphys/satapi.32
                0x00000000c001d21c                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001d222                SATAPI::close(int, int, void*)
                0x00000000c001d246                SATAPI::SATAPI()
                0x00000000c001d246                SATAPI::SATAPI()
                0x00000000c001d274                SATAPI::diskRemoved()
                0x00000000c001d276                SATAPI::diskInserted()
                0x00000000c001d292                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001d578                SATAPI::eject()
                0x00000000c001d5b4                SATAPI::detectMedia()
                0x00000000c001d60a                SATAPI::open(int, int, void*)
                0x00000000c001d70a                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d7f4      0x45b hw/intctrl/apic.32
                0x00000000c001d7f4                IOAPIC::close(int, int, void*)
                0x00000000c001d7fa                apicGetBase()
                0x00000000c001d840                IOAPIC::IOAPIC()
                0x00000000c001d840                IOAPIC::IOAPIC()
                0x00000000c001d868                apicOpen()
                0x00000000c001d9e4                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001da16                IOAPIC::read(int)
                0x00000000c001da3e                IOAPIC::open(int, int, void*)
                0x00000000c001db24                IOAPIC::write(int, int)
                0x00000000c001db50                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001dc4f        0x1 
 .text          0x00000000c001dc50       0xf0 hw/timer/apictimer.32
                0x00000000c001dc50                APICTimer::close(int, int, void*)
                0x00000000c001dc58                apicTimerHandler(regs*, void*)
                0x00000000c001dc80                APICTimer::open(int, int, void*)
                0x00000000c001dcf0                APICTimer::write(int)
                0x00000000c001dd18                APICTimer::APICTimer()
                0x00000000c001dd18                APICTimer::APICTimer()
 .text          0x00000000c001dd40      0x1ad hw/timer/pit.32
                0x00000000c001dd40                PIT::write(int)
                0x00000000c001ddc4                pitHandler(regs*, void*)
                0x00000000c001ddec                PIT::open(int, int, void*)
                0x00000000c001de3c                PIT::close(int, int, void*)
                0x00000000c001de6c                PIT::PIT()
                0x00000000c001de6c                PIT::PIT()
 *fill*         0x00000000c001deed        0x3 
 .text          0x00000000c001def0       0x83 arch/i386/avx.32
                0x00000000c001def0                avxDetect
                0x00000000c001df1a                avxSave
                0x00000000c001df2b                avxLoad
                0x00000000c001df3c                avxInit
                0x00000000c001df5e                avxClose
                0x00000000c001df5f                wouldSheSayYes
 *fill*         0x00000000c001df73        0xd 
 .text          0x00000000c001df80      0x2ec arch/i386/interrupt.32
                0x00000000c001df80                isr0
                0x00000000c001df90                isr1
                0x00000000c001df9a                isr2
                0x00000000c001dfa4                isr3
                0x00000000c001dfae                isr4
                0x00000000c001dfb8                isr5
                0x00000000c001dfc2                isr6
                0x00000000c001dfcc                isr7
                0x00000000c001dfd6                isr8
                0x00000000c001dfde                isr9
                0x00000000c001dfe8                isr10
                0x00000000c001dff0                isr11
                0x00000000c001dff8                isr12
                0x00000000c001e000                isr13
                0x00000000c001e01a                isr14
                0x00000000c001e022                isr15
                0x00000000c001e02c                isr16
                0x00000000c001e036                isr17
                0x00000000c001e040                isr18
                0x00000000c001e04a                irq3
                0x00000000c001e054                irq4
                0x00000000c001e05e                irq5
                0x00000000c001e068                irq6
                0x00000000c001e072                irq7
                0x00000000c001e07c                irq8
                0x00000000c001e086                irq9
                0x00000000c001e090                irq10
                0x00000000c001e09a                irq11
                0x00000000c001e0a4                irq12
                0x00000000c001e0ae                irq13
                0x00000000c001e0b8                irq14
                0x00000000c001e0c2                irq15
                0x00000000c001e0cc                irq1
                0x00000000c001e0d3                irq2
                0x00000000c001e0da                isr96
                0x00000000c001e0e1                irq0
                0x00000000c001e0e6                int_common_stub
                0x00000000c001e118                syscall_common_stub
                0x00000000c001e21c                irq16
                0x00000000c001e226                irq17
                0x00000000c001e230                irq18
                0x00000000c001e23a                irq19
                0x00000000c001e244                irq20
                0x00000000c001e24e                irq21
                0x00000000c001e258                irq22
                0x00000000c001e262                irq23
 *fill*         0x00000000c001e26c        0x4 
 .text          0x00000000c001e270       0x10 arch/i386/rdrand.32
                0x00000000c001e270                i386GetRDRAND
 .text          0x00000000c001e280       0x39 arch/i386/sse.32
                0x00000000c001e280                absolutelyNoChanceInHell
                0x00000000c001e280                sseDetect
                0x00000000c001e298                sseSave
                0x00000000c001e2a0                sseLoad
                0x00000000c001e2a8                sseInit
                0x00000000c001e2b8                sseClose
 *fill*         0x00000000c001e2b9        0x7 
 .text          0x00000000c001e2c0       0x49 arch/i386/x87.32
                0x00000000c001e2c6                x87Detect
                0x00000000c001e2e1                x87Save
                0x00000000c001e2e8                x87Load
                0x00000000c001e2ef                x87Init
                0x00000000c001e308                x87Close
 *fill*         0x00000000c001e309        0x3 
 .text          0x00000000c001e30c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e331        0x0 crtn.32
 *fill*         0x00000000c001e331        0x3 
 .text          0x00000000c001e334      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e334                __divdi3
 *fill*         0x00000000c001e47f        0x1 
 .text          0x00000000c001e480      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e480                __moddi3
 *fill*         0x00000000c001e5fe        0x2 
 .text          0x00000000c001e600       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001e600                __udivdi3
 *fill*         0x00000000c001e6ff        0x1 
 .text          0x00000000c001e700      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001e700                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e820        0x0
 .iplt          0x00000000c001e820        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e81a        0xf
 .init          0x00000000c001e81a        0x3 crti.32
                0x00000000c001e81a                _init
 .init          0x00000000c001e81d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e822        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e827        0x2 crtn.32

.fini           0x00000000c001e829        0xa
 .fini          0x00000000c001e829        0x3 crti.32
                0x00000000c001e829                _fini
 .fini          0x00000000c001e82c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e831        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e834       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e834       0x23 core/computer.32
                0x00000000c001e834                Computer::~Computer()
                0x00000000c001e834                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e858       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e858       0x2a core/computer.32
                0x00000000c001e858                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e882       0x21
 .text._Z10idleCommonv
                0x00000000c001e882       0x21 core/idle.32
                0x00000000c001e882                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e8a4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e8a4        0x2 core/unixfile.32
                0x00000000c001e8a4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e8a4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e8a6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e8a6       0x42 core/unixfile.32
                0x00000000c001e8a6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e8a6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e8e8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e8e8       0xd3 core/unixfile.32
                0x00000000c001e8e8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e9bc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e9bc        0x7 core/unixfile.32
                0x00000000c001e9bc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e9c4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e9c4       0xa1 core/unixfile.32
                0x00000000c001e9c4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ea66        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ea66        0x8 core/unixfile.32
                0x00000000c001ea66                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ea6e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ea6e       0x1a hal/device.32
                0x00000000c001ea6e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ea6e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ea88       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ea88       0x2a hal/device.32
                0x00000000c001ea88                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eab2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eab2       0xdc hal/device.32
                0x00000000c001eab2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001eb8e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001eb8e       0x42 hal/device.32
                0x00000000c001eb8e                LinkedList<Device>::LinkedList()
                0x00000000c001eb8e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ebd0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ebd0       0x1c hal/timer.32
                0x00000000c001ebd0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ebec        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ebec        0x7 hal/timer.32
                0x00000000c001ebec                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ebf4       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ebf4       0xbc hal/timer.32
                0x00000000c001ebf4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ecb0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ecb0       0xda hal/timer.32
                0x00000000c001ecb0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ed8c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ed8c       0x23 hw/acpi.32
                0x00000000c001ed8c                ACPI::~ACPI()
                0x00000000c001ed8c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001edb0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001edb0       0x2a hw/acpi.32
                0x00000000c001edb0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001eddc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001eddc        0x2 hw/acpi.32
                0x00000000c001eddc                LinkedList<Device>::~LinkedList()
                0x00000000c001eddc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ede0       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ede0       0x1c hw/acpi.32
                0x00000000c001ede0                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001edfc        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001edfc        0x7 hw/acpi.32
                0x00000000c001edfc                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ee04       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ee04       0xb8 hw/acpi.32
                0x00000000c001ee04                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001eebc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001eebc       0x23 hw/cpu.32
                0x00000000c001eebc                CPU::~CPU()
                0x00000000c001eebc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001eee0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001eee0       0x2a hw/cpu.32
                0x00000000c001eee0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ef0c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ef0c        0x8 sys/kill.32
                0x00000000c001ef0c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ef14        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ef14        0x2 thr/prcssthr.32
                0x00000000c001ef14                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ef14                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ef18       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ef18       0x49 thr/prcssthr.32
                0x00000000c001ef18                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ef18                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ef64       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ef64       0x42 thr/prcssthr.32
                0x00000000c001ef64                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ef64                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001efa6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001efa6       0x23 hw/bus/pci.32
                0x00000000c001efa6                PCI::~PCI()
                0x00000000c001efa6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001efca       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001efca       0x2a hw/bus/pci.32
                0x00000000c001efca                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001eff4       0x23
 .text._ZN3IDED2Ev
                0x00000000c001eff4       0x23 hw/diskctrl/ide.32
                0x00000000c001eff4                IDE::~IDE()
                0x00000000c001eff4                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f018       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f018       0x2a hw/diskctrl/ide.32
                0x00000000c001f018                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001f042       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001f042       0x23 hw/diskctrl/satabus.32
                0x00000000c001f042                SATABus::~SATABus()
                0x00000000c001f042                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001f066       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001f066       0x2a hw/diskctrl/satabus.32
                0x00000000c001f066                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001f090       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f090       0x23 hw/diskphys/ata.32
                0x00000000c001f090                ATA::~ATA()
                0x00000000c001f090                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f0b4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f0b4       0x2a hw/diskphys/ata.32
                0x00000000c001f0b4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f0de       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f0de       0x23 hw/diskphys/atapi.32
                0x00000000c001f0de                ATAPI::~ATAPI()
                0x00000000c001f0de                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f102       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f102       0x2a hw/diskphys/atapi.32
                0x00000000c001f102                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001f12c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001f12c       0x23 hw/diskphys/sata.32
                0x00000000c001f12c                SATA::~SATA()
                0x00000000c001f12c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001f150       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001f150       0x2a hw/diskphys/sata.32
                0x00000000c001f150                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001f17a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001f17a       0x23 hw/diskphys/satapi.32
                0x00000000c001f17a                SATAPI::~SATAPI()
                0x00000000c001f17a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001f19e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001f19e       0x2a hw/diskphys/satapi.32
                0x00000000c001f19e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001f1c8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f1c8       0x23 hw/intctrl/apic.32
                0x00000000c001f1c8                IOAPIC::~IOAPIC()
                0x00000000c001f1c8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f1ec       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f1ec       0x2a hw/intctrl/apic.32
                0x00000000c001f1ec                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f218       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f218       0x23 hw/timer/apictimer.32
                0x00000000c001f218                APICTimer::~APICTimer()
                0x00000000c001f218                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f23c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f23c       0x2a hw/timer/apictimer.32
                0x00000000c001f23c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f268       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f268       0x23 hw/timer/pit.32
                0x00000000c001f268                PIT::~PIT()
                0x00000000c001f268                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f28c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f28c       0x2a hw/timer/pit.32
                0x00000000c001f28c                PIT::~PIT()

.rodata         0x00000000c001f2b6     0x2bee
                0x00000000c001f2b6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f2b6        0x2 
 .ctors         0x00000000c001f2b8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f2bc        0x4 core/unixfile.32
 .ctors         0x00000000c001f2c0        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f2c4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f2c8                end_ctors = .
                0x00000000c001f2c8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f2c8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f2cc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f2cc                __DTOR_END__
                0x00000000c001f2d0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f2d0       0x10 
 .rodata        0x00000000c001f2e0      0x101 acpica/utclib.32
                0x00000000c001f2e0                AcpiGbl_Ctypes
 *fill*         0x00000000c001f3e1        0x3 
 .rodata        0x00000000c001f3e4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f3fc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f446       0x1a 
 .rodata        0x00000000c001f460       0xed fs/fat/ff.32
 *fill*         0x00000000c001f54d       0x13 
 .rodata        0x00000000c001f560      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f960       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001f9cf      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001fae4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001fb4c       0x2c core/computer.32
                0x00000000c001fb4c                vtable for Computer
 .rodata.str1.4
                0x00000000c001fb78       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001fba8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001fbb4       0x17 core/main.32
 *fill*         0x00000000c001fbcb        0x1 
 .rodata.str1.4
                0x00000000c001fbcc       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fc71       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fcc9       0x39 core/pipe.32
 *fill*         0x00000000c001fd02        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001fd04       0x1c core/pipe.32
                0x00000000c001fd04                vtable for Pipe
 .rodata.str1.1
                0x00000000c001fd20       0x2b core/terminal.32
 *fill*         0x00000000c001fd4b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001fd4c       0x1c core/terminal.32
                0x00000000c001fd4c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001fd68       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001fd8a       0x15 core/unixfile.32
 *fill*         0x00000000c001fd9f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001fda0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001fdeb        0x8 core/unixfile.32
 *fill*         0x00000000c001fdf3        0x1 
 .rodata.str1.4
                0x00000000c001fdf4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001fe14       0x1c core/unixfile.32
                0x00000000c001fe14                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001fe30       0x1c core/unixfile.32
                0x00000000c001fe30                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001fe4c      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001ffb3      0x119 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00200cc       0x33 coreobjs/c++.32
 *fill*         0x00000000c00200ff        0x1 
 .rodata        0x00000000c0020100      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020250       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c0020250       0x68 fs/vfs.32
                0x00000000c0020250                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00202b8       0x1c fs/vfs.32
                0x00000000c00202b8                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00202d4       0x1c fs/vfs.32
                0x00000000c00202d4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00202f0       0x2c hal/bus.32
                0x00000000c00202f0                vtable for Bus
 .rodata.str1.1
                0x00000000c002031c       0x1e hal/clock.32
 *fill*         0x00000000c002033a        0x2 
 .rodata._ZTV5Clock
                0x00000000c002033c       0x3c hal/clock.32
                0x00000000c002033c                vtable for Clock
 *fill*         0x00000000c0020378        0x8 
 .rodata        0x00000000c0020380       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00203b0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020408       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020408       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0020408       0x2c hal/device.32
                0x00000000c0020408                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020434       0x2c hal/device.32
                0x00000000c0020434                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020460       0x2c hal/diskctrl.32
                0x00000000c0020460                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002048c       0x38 hal/diskphys.32
                0x00000000c002048c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00204c4       0x3e hal/intctrl.32
 *fill*         0x00000000c0020502        0x2 
 .rodata.str1.4
                0x00000000c0020504       0x5d hal/intctrl.32
 .rodata        0x00000000c0020561       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c00205b4       0x34 hal/keybrd.32
                0x00000000c00205b4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00205e8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002062c       0x2c hal/logidisk.32
                0x00000000c002062c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0020658       0x2c hal/mouse.32
                0x00000000c0020658                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0020684       0x34 hal/nic.32
                0x00000000c0020684                vtable for NIC
 .rodata.str1.1
                0x00000000c00206b8        0xb hal/partition.32
 *fill*         0x00000000c00206c3        0x1 
 .rodata._ZTV6Serial
                0x00000000c00206c4       0x44 hal/serial.32
                0x00000000c00206c4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020708       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020708        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020708       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020708       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0020708       0x30 hal/timer.32
                0x00000000c0020708                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020738       0x10 hal/vcache.32
                0x00000000c0020738                vtable for VCache
 .rodata.str1.1
                0x00000000c0020748       0x93 hal/video.32
 *fill*         0x00000000c00207db        0x1 
 .rodata._ZTV5Video
                0x00000000c00207dc       0x4c hal/video.32
                0x00000000c00207dc                vtable for Video
 .rodata.str1.4
                0x00000000c0020828       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c00208c3      0x174 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0020a37       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0020a37        0x8 hw/acpi.32
 *fill*         0x00000000c0020a37        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020a38       0x2c hw/acpi.32
                0x00000000c0020a38                vtable for ACPI
 .rodata.str1.1
                0x00000000c0020a64      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020bd1        0x3 
 .rodata._ZTV3CPU
                0x00000000c0020bd4       0x2c hw/cpu.32
                0x00000000c0020bd4                vtable for CPU
 .rodata.str1.1
                0x00000000c0020c00       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0020c3c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020ccd       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0020d96       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020dde       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0020e09       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020e7f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020ec4        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0020ece       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0020eef       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0020f85       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0020fd9       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0021005      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00211d1       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0021228      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021338       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021338       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021338       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021338        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0021338       0xa0 vm86/vm8086.32
 .rodata        0x00000000c00213d8       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021408      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c0021598       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002160b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0021620       0x3c arch/i386/rtc.32
                0x00000000c0021620                vtable for RTC
 .rodata.str1.1
                0x00000000c002165c       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c002169d        0x3 
 .rodata._ZTV3FAT
                0x00000000c00216a0       0x68 fs/fat/vfslink.32
                0x00000000c00216a0                vtable for FAT
 .rodata.str1.1
                0x00000000c0021708       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0021708      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0021840       0x68 fs/iso9660/vfslink.32
                0x00000000c0021840                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00218a8       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00218ec       0x34 hal/sound/sndcard.32
                0x00000000c00218ec                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0021920       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002195f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0021997       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0021a38       0x2c hw/bus/pci.32
                0x00000000c0021a38                vtable for PCI
 .rodata.str1.1
                0x00000000c0021a64       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0021aeb        0x1 
 .rodata._ZTV3IDE
                0x00000000c0021aec       0x2c hw/diskctrl/ide.32
                0x00000000c0021aec                vtable for IDE
 .rodata.str1.4
                0x00000000c0021b18       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0021b3c       0x2c hw/diskctrl/satabus.32
                0x00000000c0021b3c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0021b68       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0021b7a        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021b7c       0x38 hw/diskphys/ata.32
                0x00000000c0021b7c                vtable for ATA
 .rodata.str1.1
                0x00000000c0021bb4        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0021bc1        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0021bc4       0x38 hw/diskphys/atapi.32
                0x00000000c0021bc4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021bfc       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0021c78       0x38 hw/diskphys/sata.32
                0x00000000c0021c78                vtable for SATA
 .rodata.str1.1
                0x00000000c0021cb0       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0021d9a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0021d9c       0x38 hw/diskphys/satapi.32
                0x00000000c0021d9c                vtable for SATAPI
 .rodata        0x00000000c0021dd4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0021ddc       0x2c hw/intctrl/apic.32
                0x00000000c0021ddc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0021e08       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0021e23        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021e24       0x30 hw/timer/apictimer.32
                0x00000000c0021e24                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021e54       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021e71        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021e74       0x30 hw/timer/pit.32
                0x00000000c0021e74                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021ea4      0x4e1
 *(.data)
 .data          0x00000000c0021ea4        0x0 crti.32
 .data          0x00000000c0021ea4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021ea4                __dso_handle
 .data          0x00000000c0021ea8        0x0 acpica/utclib.32
 .data          0x00000000c0021ea8        0x0 core/malloc.32
 .data          0x00000000c0021ea8        0x0 libk/ctype.32
 .data          0x00000000c0021ea8        0x0 libk/string.32
 .data          0x00000000c0021ea8        0x0 fs/fat/diskio.32
 .data          0x00000000c0021ea8        0x0 fs/fat/ff.32
 .data          0x00000000c0021ea8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0021ea8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0021ea8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0021ea8        0x0 core/computer.32
 .data          0x00000000c0021ea8        0x0 core/gdt.32
 .data          0x00000000c0021ea8        0x0 core/idle.32
 .data          0x00000000c0021ea8        0x0 core/idt.32
 .data          0x00000000c0021ea8        0x4 core/kheap.32
 .data          0x00000000c0021eac        0x0 core/main.32
 .data          0x00000000c0021eac        0x4 core/physmgr.32
                0x00000000c0021eac                Phys::bitmap
 .data          0x00000000c0021eb0        0x0 core/pipe.32
 *fill*         0x00000000c0021eb0       0x10 
 .data          0x00000000c0021ec0       0x60 core/terminal.32
                0x00000000c0021ec0                VgaText::hiddenOut
                0x00000000c0021ee0                ansiToVGAMappings
 .data          0x00000000c0021f20        0x0 core/tss.32
 .data          0x00000000c0021f20        0x4 core/unixfile.32
                0x00000000c0021f20                UnixFile::nextFd
 .data          0x00000000c0021f24       0x15 core/virtmgr.32
                0x00000000c0021f24                Virt::pageAllocPtr
                0x00000000c0021f28                Virt::bitmap
                0x00000000c0021f2c                Virt::swapfileSectorsPerPage
                0x00000000c0021f30                Virt::swapfileLength
                0x00000000c0021f34                Virt::swapfileSector
                0x00000000c0021f38                Virt::swapfileDrive
 *fill*         0x00000000c0021f39        0x3 
 .data          0x00000000c0021f3c        0x4 coreobjs/c++.32
                0x00000000c0021f3c                __stack_chk_guard
 .data          0x00000000c0021f40        0x0 dbg/kconsole.32
 .data          0x00000000c0021f40        0x0 fs/vfs.32
 .data          0x00000000c0021f40        0x0 hal/bus.32
 .data          0x00000000c0021f40        0x0 hal/buzzer.32
 .data          0x00000000c0021f40        0x0 hal/clock.32
 .data          0x00000000c0021f40        0x0 hal/device.32
 .data          0x00000000c0021f40        0x0 hal/diskctrl.32
 .data          0x00000000c0021f40        0x0 hal/diskphys.32
 .data          0x00000000c0021f40        0x0 hal/fpu.32
 .data          0x00000000c0021f40        0x0 hal/intctrl.32
 .data          0x00000000c0021f40        0x0 hal/keybrd.32
 .data          0x00000000c0021f40        0x0 hal/logidisk.32
 .data          0x00000000c0021f40        0x0 hal/mouse.32
 .data          0x00000000c0021f40        0x0 hal/nic.32
 .data          0x00000000c0021f40        0x0 hal/partition.32
 .data          0x00000000c0021f40        0x0 hal/serial.32
 .data          0x00000000c0021f40        0x0 hal/timer.32
 .data          0x00000000c0021f40        0x0 hal/vcache.32
 .data          0x00000000c0021f40        0x0 hal/video.32
 .data          0x00000000c0021f40       0x10 hw/acpi.32
                0x00000000c0021f40                legacyIRQRemaps
 .data          0x00000000c0021f50        0x4 hw/cpu.32
                0x00000000c0021f50                lastCode
 *fill*         0x00000000c0021f54        0xc 
 .data          0x00000000c0021f60      0x142 krnl/bootmsg.32
                0x00000000c0021f60                KiSplashScreen
 *fill*         0x00000000c00220a2       0x1e 
 .data          0x00000000c00220c0       0x4d krnl/env.32
                0x00000000c00220c0                defaultSysEnv
 .data          0x00000000c002210d        0x0 krnl/inlines.32
 .data          0x00000000c002210d        0x0 krnl/panic.32
 .data          0x00000000c002210d        0x0 krnl/powctrl.32
 .data          0x00000000c002210d        0x0 krnl/random.32
 .data          0x00000000c002210d        0x0 krnl/resolve.32
 *fill*         0x00000000c002210d       0x13 
 .data          0x00000000c0022120       0x4c krnl/signal.32
                0x00000000c0022120                KiDefaultSignalHandlers
 *fill*         0x00000000c002216c       0x14 
 .data          0x00000000c0022180       0xf0 krnl/syscalls.32
                0x00000000c0022180                systemCallHandlers
 .data          0x00000000c0022270        0x0 net/ethernet.32
 *fill*         0x00000000c0022270       0x10 
 .data          0x00000000c0022280      0x100 reg/cm.32
                0x00000000c0022280                CmComponents
 .data          0x00000000c0022380        0x0 reg/registry.32
 .data          0x00000000c0022380        0x0 sys/eject.32
 .data          0x00000000c0022380        0x0 sys/exit.32
 .data          0x00000000c0022380        0x0 sys/getcwd.32
 .data          0x00000000c0022380        0x0 sys/getpid.32
 .data          0x00000000c0022380        0x0 sys/getramdata.32
 .data          0x00000000c0022380        0x0 sys/getvgaptr.32
 .data          0x00000000c0022380        0x0 sys/kill.32
 .data          0x00000000c0022380        0x0 sys/loaddll.32
 .data          0x00000000c0022380        0x0 sys/read.32
 .data          0x00000000c0022380        0x0 sys/registersignal.32
 .data          0x00000000c0022380        0x0 sys/registry.32
 .data          0x00000000c0022380        0x0 sys/sbrk.32
 .data          0x00000000c0022380        0x0 sys/setcwd.32
 .data          0x00000000c0022380        0x0 sys/settime.32
 .data          0x00000000c0022380        0x0 sys/timezone.32
 .data          0x00000000c0022380        0x0 sys/write.32
 .data          0x00000000c0022380        0x0 sys/wsbe.32
 .data          0x00000000c0022380        0x0 sys/yield.32
 .data          0x00000000c0022380        0x0 thr/elf.32
 .data          0x00000000c0022380        0x4 thr/prcssthr.32
                0x00000000c0022380                Thr::nextPID
 .data          0x00000000c0022384        0x0 vm86/vm8086.32
 .data          0x00000000c0022384        0x0 arch/i386/hal.32
 .data          0x00000000c0022384        0x0 arch/i386/pic.32
 .data          0x00000000c0022384        0x0 arch/i386/rtc.32
 .data          0x00000000c0022384        0x0 arch/i386/vga.32
 .data          0x00000000c0022384        0x0 fs/fat/vfslink.32
 .data          0x00000000c0022384        0x0 fs/iso9660/helper.32
 .data          0x00000000c0022384        0x1 fs/iso9660/vfslink.32
                0x00000000c0022384                recentDriveletter
 .data          0x00000000c0022385        0x0 hal/sound/sndcard.32
 .data          0x00000000c0022385        0x0 hal/sound/sndport.32
 .data          0x00000000c0022385        0x0 hw/bus/isa.32
 .data          0x00000000c0022385        0x0 hw/bus/pci.32
 .data          0x00000000c0022385        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0022385        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0022385        0x0 hw/diskphys/ata.32
 .data          0x00000000c0022385        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0022385        0x0 hw/diskphys/sata.32
 .data          0x00000000c0022385        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0022385        0x0 hw/intctrl/apic.32
 .data          0x00000000c0022385        0x0 hw/timer/apictimer.32
 .data          0x00000000c0022385        0x0 hw/timer/pit.32
 .data          0x00000000c0022385        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0022385        0x0 crtn.32
 .data          0x00000000c0022385        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0022385        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0022385        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0022385        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0022388        0x0
 .got           0x00000000c0022388        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0022388        0x0
 .got.plt       0x00000000c0022388        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0022388        0x0
 .igot.plt      0x00000000c0022388        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0022388        0x0
 .tm_clone_table
                0x00000000c0022388        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0022388        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0022385      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0022385        0x3 
 .eh_frame      0x00000000c0022388        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0022388        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0022388       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00223e0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022420       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002248c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0023000       0x7d
 *(userkernel)
 userkernel     0x00000000c0023000       0x52 krnl/signal.32
                0x00000000c0023000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002302c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0023052       0x2b krnl/syscalls.32
                0x00000000c0023052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0024000        0x1
 *(align_previous)
 align_previous
                0x00000000c0024000        0x1 krnl/signal.32
                0x00000000c0024000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0024004        0x0
 .rel.got       0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0024001     0x4ba7
                0x00000000c0024001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0024001       0x1f 
 COMMON         0x00000000c0024020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0024020                dcache
                0x00000000c0024060                cdDriveLetter
                0x00000000c0024080                icache
 *(.bss)
 .bss           0x00000000c00240c0        0x0 crti.32
 .bss           0x00000000c00240c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00240e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00240e4       0x1c 
 .bss           0x00000000c0024100      0x378 core/malloc.32
 .bss           0x00000000c0024478        0x0 libk/ctype.32
 .bss           0x00000000c0024478        0x0 libk/string.32
 .bss           0x00000000c0024478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024478        0x8 
 .bss           0x00000000c0024480       0x88 fs/fat/ff.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0024508       0x18 
 .bss           0x00000000c0024520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0024eb8        0x6 core/computer.32
                0x00000000c0024eb8                Krnl::computer
                0x00000000c0024ebc                KeIsPreemptionOn
                0x00000000c0024ebd                KeIsSchedulingOn
 *fill*         0x00000000c0024ebe        0x2 
 .bss           0x00000000c0024ec0        0x6 core/gdt.32
                0x00000000c0024ec0                gdtDescr
 .bss           0x00000000c0024ec6        0x0 core/idle.32
 *fill*         0x00000000c0024ec6        0x2 
 .bss           0x00000000c0024ec8        0x6 core/idt.32
                0x00000000c0024ec8                idtDescr
 .bss           0x00000000c0024ece        0x0 core/kheap.32
 *fill*         0x00000000c0024ece        0x2 
 .bss           0x00000000c0024ed0        0x4 core/main.32
                0x00000000c0024ed0                sysBootSettings
 .bss           0x00000000c0024ed4       0x29 core/physmgr.32
                0x00000000c0024ed4                Phys::forbidEvictions
                0x00000000c0024ed8                Phys::currentPagePointer
                0x00000000c0024edc                Phys::highestMem
                0x00000000c0024ee0                Phys::oldPercent
                0x00000000c0024ee4                Phys::usedPages
                0x00000000c0024ee8                Phys::usablePages
                0x00000000c0024eec                Phys::dmaUsage
 .bss           0x00000000c0024efd        0x0 core/pipe.32
 *fill*         0x00000000c0024efd        0x3 
 .bss           0x00000000c0024f00        0x9 core/terminal.32
                0x00000000c0024f00                terminalCycle
                0x00000000c0024f04                activeTerminal
                0x00000000c0024f08                VgaText::graphicMode
 *fill*         0x00000000c0024f09        0x1 
 .bss           0x00000000c0024f0a        0x2 core/tss.32
                0x00000000c0024f0a                doubleFaultSelector
 *fill*         0x00000000c0024f0c       0x14 
 .bss           0x00000000c0024f20       0x84 core/unixfile.32
                0x00000000c0024f20                sfileLpt
                0x00000000c0024f60                sfileCom
                0x00000000c0024f84                sfileNul
                0x00000000c0024f88                sfilePnt
                0x00000000c0024f8c                sfileAux
                0x00000000c0024f90                sfileCon
                0x00000000c0024f94                initialFilesAdded
                0x00000000c0024f98                unixFileLinkedList
 .bss           0x00000000c0024fa4       0x10 core/virtmgr.32
                0x00000000c0024fa4                twswaps
                0x00000000c0024fa8                swapBalance
                0x00000000c0024fac                Virt::swapfileBitmap
                0x00000000c0024fb0                firstVAS
 .bss           0x00000000c0024fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0024fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0024fb4        0x4 fs/vfs.32
                0x00000000c0024fb4                installedFilesystems
 .bss           0x00000000c0024fb8        0x0 hal/bus.32
 .bss           0x00000000c0024fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0024fb8        0x8 hal/clock.32
                0x00000000c0024fb8                User::dstOn
                0x00000000c0024fb9                User::timezoneHalfHourOffset
                0x00000000c0024fbc                User::timezoneHourOffset
 .bss           0x00000000c0024fc0        0x0 hal/device.32
 .bss           0x00000000c0024fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0024fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0024fc0        0x0 hal/fpu.32
 .bss           0x00000000c0024fc0     0x2000 hal/intctrl.32
                0x00000000c0024fc0                INT_contexts
                0x00000000c0025fc0                INT_handlers
 .bss           0x00000000c0026fc0      0x429 hal/keybrd.32
                0x00000000c0026fc0                keyboardWaitingTaskList
                0x00000000c0026fc4                keyboardSetupYet
                0x00000000c0026fc8                guiKeyboardHandler
                0x00000000c0026fe0                keystates
 *fill*         0x00000000c00273e9       0x17 
 .bss           0x00000000c0027400       0x88 hal/logidisk.32
                0x00000000c0027400                diskAssignments
                0x00000000c0027420                disks
 .bss           0x00000000c0027488        0x4 hal/mouse.32
                0x00000000c0027488                guiMouseHandler
 .bss           0x00000000c002748c        0x0 hal/nic.32
 .bss           0x00000000c002748c        0x0 hal/partition.32
 .bss           0x00000000c002748c        0x0 hal/serial.32
 .bss           0x00000000c002748c        0x4 hal/timer.32
                0x00000000c002748c                milliTenthsSinceBoot
 .bss           0x00000000c0027490        0x0 hal/vcache.32
 .bss           0x00000000c0027490        0x4 hal/video.32
                0x00000000c0027490                screen
 *fill*         0x00000000c0027494        0xc 
 .bss           0x00000000c00274a0      0x480 hw/acpi.32
                0x00000000c00274a0                systemSleepFunction
                0x00000000c00274a4                systemResetFunction
                0x00000000c00274a8                systemShutdownFunction
                0x00000000c00274ac                nextACPITable
                0x00000000c00274c0                acpiTables
                0x00000000c00276c0                usingXSDT
                0x00000000c00276c4                MADTpointer
                0x00000000c00276c8                RSDTpointer
                0x00000000c00276cc                RSDPpointer
                0x00000000c00276d0                nextAPICNMI
                0x00000000c00276e0                apicNMIInfo
                0x00000000c0027760                legacyIRQFlags
                0x00000000c0027780                ioapicDiscoveryNumber
                0x00000000c00277a0                ioapicFoundInMADT
                0x00000000c00277c0                ioapicAddresses
                0x00000000c0027840                ioapicGSIBase
                0x00000000c00278c0                processorDiscoveryNumber
                0x00000000c00278e0                matchingAPICID
                0x00000000c0027900                processorID
 .bss           0x00000000c0027920       0x10 hw/cpu.32
                0x00000000c0027920                lastD
                0x00000000c0027924                lastC
                0x00000000c0027928                lastB
                0x00000000c002792c                lastA
 .bss           0x00000000c0027930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0027930        0x8 krnl/env.32
                0x00000000c0027930                Krnl::userEnv
                0x00000000c0027934                Krnl::systemEnv
 .bss           0x00000000c0027938        0x0 krnl/inlines.32
 .bss           0x00000000c0027938        0x1 krnl/panic.32
                0x00000000c0027938                KeIsKernelInPanic
 *fill*         0x00000000c0027939        0x7 
 .bss           0x00000000c0027940       0x48 krnl/powctrl.32
                0x00000000c0027940                Krnl::powCtrlOnBattery
                0x00000000c0027960                Krnl::currentPowerSettings
                0x00000000c0027984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0027988        0x8 krnl/random.32
                0x00000000c0027988                kiRandSeed
 .bss           0x00000000c0027990        0x0 krnl/resolve.32
 .bss           0x00000000c0027990        0x0 krnl/signal.32
 .bss           0x00000000c0027990        0x0 krnl/syscalls.32
 .bss           0x00000000c0027990        0x0 net/ethernet.32
 .bss           0x00000000c0027990        0x4 reg/cm.32
 .bss           0x00000000c0027994        0x0 reg/registry.32
 .bss           0x00000000c0027994        0x0 sys/eject.32
 .bss           0x00000000c0027994        0x0 sys/exit.32
 .bss           0x00000000c0027994        0x0 sys/getcwd.32
 .bss           0x00000000c0027994        0x0 sys/getpid.32
 .bss           0x00000000c0027994        0x0 sys/getramdata.32
 .bss           0x00000000c0027994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0027994        0x0 sys/kill.32
 .bss           0x00000000c0027994        0x0 sys/loaddll.32
 .bss           0x00000000c0027994        0x0 sys/read.32
 .bss           0x00000000c0027994        0x0 sys/registersignal.32
 .bss           0x00000000c0027994        0x0 sys/registry.32
 .bss           0x00000000c0027994        0x0 sys/sbrk.32
 .bss           0x00000000c0027994        0x0 sys/setcwd.32
 .bss           0x00000000c0027994        0x0 sys/settime.32
 .bss           0x00000000c0027994        0x0 sys/timezone.32
 .bss           0x00000000c0027994        0x0 sys/write.32
 .bss           0x00000000c0027994        0x0 sys/wsbe.32
 .bss           0x00000000c0027994        0x0 sys/yield.32
 *fill*         0x00000000c0027994        0xc 
 .bss           0x00000000c00279a0      0x7a4 thr/elf.32
                0x00000000c00279a0                Thr::driverLookupNext
                0x00000000c00279c0                Thr::driverLookupLen
                0x00000000c0027bc0                Thr::driverLookupAddr
                0x00000000c0027dc0                Thr::driverNameLookup
                0x00000000c0027fc0                Thr::kernelSymbols
                0x00000000c0028040                Thr::kernelStringTable
                0x00000000c00280c0                Thr::kernelSymbolTable
                0x00000000c0028140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0028144        0x4 
 .bss           0x00000000c0028148       0x68 thr/prcssthr.32
                0x00000000c0028148                cleanerThread
                0x00000000c002814c                weNeedTheCleanerToNotBlock
                0x00000000c0028150                retValLockStuff
                0x00000000c0028154                retValSchedLock
                0x00000000c0028158                lockStuffLock
                0x00000000c002815c                schedulerLock
                0x00000000c0028160                taskSwitchesPostponedFlag
                0x00000000c0028164                postponeTaskSwitchesCounter
                0x00000000c0028168                irqDisableCounter
                0x00000000c002816c                terminatedTaskList
                0x00000000c0028178                sleepingTaskList
                0x00000000c0028184                taskList
                0x00000000c0028190                kernelProcess
 *fill*         0x00000000c00281b0       0x10 
 .bss           0x00000000c00281c0       0x40 vm86/vm8086.32
                0x00000000c00281c0                Vm::vmRetV
                0x00000000c00281c4                Vm::vmDone
                0x00000000c00281c5                Vm::vmReady
                0x00000000c00281c8                Vm::vm86Thread
                0x00000000c00281cc                Vm::vmToHostCommsPtr
                0x00000000c00281e0                Vm::vmToHostComms
 .bss           0x00000000c0028200       0x18 arch/i386/hal.32
                0x00000000c0028200                apic
                0x00000000c0028204                guiPanicHandler
                0x00000000c0028208                fpuOwner
                0x00000000c002820c                coproLoadFunc
                0x00000000c0028210                coproSaveFunc
                0x00000000c0028214                gpFaultIntercept
 .bss           0x00000000c0028218        0x0 arch/i386/pic.32
 .bss           0x00000000c0028218        0x2 arch/i386/rtc.32
 .bss           0x00000000c002821a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002821a        0x6 
 .bss           0x00000000c0028220       0xf0 fs/fat/vfslink.32
                0x00000000c0028220                FAT::fats
                0x00000000c0028240                FAT::vfsToFatRemaps
                0x00000000c00282c0                fatToVFSRemaps
 .bss           0x00000000c0028310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0028310       0x10 
 .bss           0x00000000c0028320      0x820 fs/iso9660/vfslink.32
                0x00000000c0028320                iso9660Owner
                0x00000000c0028324                recentSector
                0x00000000c0028340                recentBuffer
 .bss           0x00000000c0028b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0028b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0028b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0028b40        0xd hw/bus/pci.32
                0x00000000c0028b40                thePCI
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0028b4d        0x3 
 .bss           0x00000000c0028b50        0x8 hw/diskphys/ata.32
                0x00000000c0028b50                ataSectorsWritten
                0x00000000c0028b54                ataSectorsRead
 .bss           0x00000000c0028b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0028b58        0x8 
 .bss           0x00000000c0028b60       0x41 hw/intctrl/apic.32
                0x00000000c0028b60                noOfIOAPICs
                0x00000000c0028b80                ioapics
                0x00000000c0028ba0                IOAPICsSetupYet
 .bss           0x00000000c0028ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0028ba1        0x3 
 .bss           0x00000000c0028ba4        0x4 hw/timer/pit.32
                0x00000000c0028ba4                pitFreq
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0028ba8        0x0 crtn.32
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0028ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
