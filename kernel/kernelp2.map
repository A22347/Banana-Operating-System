Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e7fa
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6b9 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cc5                Krnl::firstTask()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006eb0                Computer::setBootMessage(char const*)
                0x00000000c0006eb2                Computer::detectFeatures()
                0x00000000c00070d8                Computer::displayFeatures()
                0x00000000c00070da                Computer::rdmsr(unsigned int)
                0x00000000c0007106                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007142                Computer::shutdown()
                0x00000000c000715a                Computer::restart()
                0x00000000c0007172                Computer::sleep()
                0x00000000c0007186                Computer::nmiEnabled()
                0x00000000c0007192                Computer::readCMOS(unsigned char)
                0x00000000c00071ae                Computer::enableNMI(bool)
                0x00000000c00071c6                Computer::open(int, int, void*)
                0x00000000c000729a                Computer::disableNMI()
                0x00000000c00072aa                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072ce                Computer::handleNMI()
 *fill*         0x00000000c0007339        0x1 
 .text          0x00000000c000733a      0x1db core/gdt.32
                0x00000000c000733a                GDTEntry::setBase(unsigned int)
                0x00000000c0007356                GDTEntry::setLimit(unsigned int)
                0x00000000c0007374                GDT::GDT()
                0x00000000c0007374                GDT::GDT()
                0x00000000c000738a                GDT::addEntry(GDTEntry)
                0x00000000c00073ac                GDT::getNumberOfEntries()
                0x00000000c00073b4                GDT::flush()
                0x00000000c00073d6                GDT::setup()
 .text          0x00000000c0007515       0x1d core/idle.32
                0x00000000c0007515                idleFunction(void*)
 *fill*         0x00000000c0007532        0x2 
 .text          0x00000000c0007534      0x46c core/idt.32
                0x00000000c0007534                IDTEntry::IDTEntry(bool)
                0x00000000c0007534                IDTEntry::IDTEntry(bool)
                0x00000000c00075ae                IDTEntry::setOffset(unsigned int)
                0x00000000c00075c4                IDT::IDT()
                0x00000000c00075c4                IDT::IDT()
                0x00000000c00075c6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075ce                IDT::addEntry(IDTEntry, int)
                0x00000000c00075e8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007620                IDT::flush()
                0x00000000c000763a                IDT::setup()
 .text          0x00000000c00079a0      0x185 core/kheap.32
                0x00000000c00079a0                sbrk
                0x00000000c0007a34                mmap
                0x00000000c0007a4a                munmap
                0x00000000c0007a60                liballoc_lock()
                0x00000000c0007a6e                liballoc_unlock()
                0x00000000c0007a84                liballoc_alloc(int)
                0x00000000c0007a9c                liballoc_free(void*, int)
                0x00000000c0007ab7                realloc
                0x00000000c0007acb                malloc
                0x00000000c0007adb                free
                0x00000000c0007aeb                rfree
                0x00000000c0007afb                calloc
 .text          0x00000000c0007b25       0xc3 core/main.32
                0x00000000c0007b25                KeEntryPoint
 .text          0x00000000c0007be8      0x639 core/physmgr.32
                0x00000000c0007be8                Phys::allocateDMA(unsigned long)
                0x00000000c0007cd6                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d11                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d51                Phys::getPageState(unsigned long)
                0x00000000c0007d6d                Phys::freePage(unsigned long)
                0x00000000c0007dd6                Phys::allocatePage()
                0x00000000c0007ea5                Phys::allocateContiguousPages(int)
                0x00000000c0007f0c                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f44                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008221        0x1 
 .text          0x00000000c0008222      0x26d core/pipe.32
                0x00000000c0008222                Pipe::isAtty()
                0x00000000c0008226                Pipe::~Pipe()
                0x00000000c0008226                Pipe::~Pipe()
                0x00000000c000824a                Pipe::~Pipe()
                0x00000000c0008272                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008336                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xaaa core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a50                VgaText::putx(unsigned int)
                0x00000000c0008a96                VgaText::puts(char const*)
                0x00000000c0008abc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b08                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c56                VgaText::VgaText(char const*)
                0x00000000c0008c56                VgaText::VgaText(char const*)
                0x00000000c0008da6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f14                VgaText::doUpdate()
                0x00000000c0008f15                newTerminal(char*)
 *fill*         0x00000000c0008f3a        0x2 
 .text          0x00000000c0008f3c      0x1a1 core/tss.32
                0x00000000c0008f3c                TSS::TSS()
                0x00000000c0008f3c                TSS::TSS()
                0x00000000c0008f4c                TSS::setESP(unsigned long)
                0x00000000c0008f60                TSS::flush()
                0x00000000c0008f80                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090dd        0x1 
 .text          0x00000000c00090de      0x4ca core/unixfile.32
                0x00000000c00090de                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009134                ReservedFilename::isAtty()
                0x00000000c0009150                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091ae                UnixFile::getFileDescriptor()
                0x00000000c00091b6                UnixFile::UnixFile(int)
                0x00000000c00091b6                UnixFile::UnixFile(int)
                0x00000000c000936a                ReservedFilename::ReservedFilename(int)
                0x00000000c000936a                ReservedFilename::ReservedFilename(int)
                0x00000000c000939c                UnixFile::~UnixFile()
                0x00000000c000939c                UnixFile::~UnixFile()
                0x00000000c0009438                UnixFile::~UnixFile()
                0x00000000c0009460                ReservedFilename::~ReservedFilename()
                0x00000000c0009460                ReservedFilename::~ReservedFilename()
                0x00000000c0009484                ReservedFilename::~ReservedFilename()
                0x00000000c00094ab                getFromFileDescriptor(int)
 .text          0x00000000c00095a8     0x125b core/virtmgr.32
                0x00000000c00095a8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095e2                Virt::getPageState(unsigned long)
                0x00000000c0009605                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009721                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009744                Virt::swapIDToSector(unsigned long)
                0x00000000c000975a                Virt::allocateSwapfilePage()
                0x00000000c00097d9                Virt::virtualMemorySetup()
                0x00000000c000982a                Virt::setupPageSwapping(int)
                0x00000000c000989c                VAS::VAS(VAS*)
                0x00000000c000989c                VAS::VAS(VAS*)
                0x00000000c00098ca                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098f8                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009917                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a2a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a4e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a68                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009aac                VAS::VAS()
                0x00000000c0009aac                VAS::VAS()
                0x00000000c0009b16                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b4a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b76                VAS::~VAS()
                0x00000000c0009b76                VAS::~VAS()
                0x00000000c0009ce4                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009df0                VAS::allocatePages(int, int)
                0x00000000c0009fe0                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009ffe                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a0c6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a1b6                VAS::VAS(bool)
                0x00000000c000a1b6                VAS::VAS(bool)
                0x00000000c000a448                VAS::evict(unsigned long)
                0x00000000c000a514                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a622                VAS::scanForEviction()
                0x00000000c000a708                mapVASFirstTime
 .text          0x00000000c000a803       0x5f coreobjs/c++.32
                0x00000000c000a803                __cxa_atexit
                0x00000000c000a806                __cxa_finalize
                0x00000000c000a807                __stack_chk_fail
                0x00000000c000a83d                __cxa_pure_virtual
                0x00000000c000a84e                operator new[](unsigned long)
                0x00000000c000a853                operator delete(void*, unsigned long)
                0x00000000c000a858                operator delete[](void*)
                0x00000000c000a85d                operator delete[](void*, unsigned long)
 .text          0x00000000c000a862      0x225 dbg/kconsole.32
                0x00000000c000a862                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8d3                Dbg::logc(char)
                0x00000000c000a8f3                Dbg::logs(char*)
                0x00000000c000a912                Dbg::logWriteInt(unsigned int)
                0x00000000c000a930                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a951                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa87        0x1 
 .text          0x00000000c000aa88      0xc86 fs/vfs.32
                0x00000000c000aa88                File::read(unsigned long long, void*, int*)
                0x00000000c000aae0                File::write(unsigned long long, void*, int*)
                0x00000000c000ab38                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ab90                Directory::write(unsigned long long, void*, int*)
                0x00000000c000abbe                File::isAtty()
                0x00000000c000abc2                Directory::isAtty()
                0x00000000c000abc6                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000abcc                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000abd2                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000abd8                File::~File()
                0x00000000c000abd8                File::~File()
                0x00000000c000abfc                File::~File()
                0x00000000c000ac26                Directory::~Directory()
                0x00000000c000ac26                Directory::~Directory()
                0x00000000c000ac4a                Directory::~Directory()
                0x00000000c000ac74                Filesystem::Filesystem()
                0x00000000c000ac74                Filesystem::Filesystem()
                0x00000000c000ac98                Filesystem::~Filesystem()
                0x00000000c000ac98                Filesystem::~Filesystem()
                0x00000000c000aca6                Filesystem::~Filesystem()
                0x00000000c000acca                Fs::getcwd(Process*, char*, int)
                0x00000000c000acf4                Fs::initVFS()
                0x00000000c000ad1e                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aefa                File::File(char const*, Process*)
                0x00000000c000aefa                File::File(char const*, Process*)
                0x00000000c000afb6                File::open(FileOpenMode)
                0x00000000c000b014                File::close()
                0x00000000c000b074                File::seek(unsigned long long)
                0x00000000c000b0ca                File::tell(unsigned long long*)
                0x00000000c000b11a                File::rewind()
                0x00000000c000b12e                File::unlink()
                0x00000000c000b17a                File::rename(char const*)
                0x00000000c000b1c8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b224                File::exists()
                0x00000000c000b262                File::stat(unsigned long long*, bool*)
                0x00000000c000b2c3                Fs::setcwd(Process*, char*)
                0x00000000c000b420                Directory::Directory(char const*, Process*)
                0x00000000c000b420                Directory::Directory(char const*, Process*)
                0x00000000c000b4dc                Directory::open()
                0x00000000c000b538                Directory::close()
                0x00000000c000b598                Directory::unlink()
                0x00000000c000b5e4                Directory::rename(char const*)
                0x00000000c000b632                Directory::exists()
                0x00000000c000b670                Directory::read(dirent*)
                0x00000000c000b6bc                Directory::create()
                0x00000000c000b708                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b70e        0x2 
 .text          0x00000000c000b710       0x86 hal/bus.32
                0x00000000c000b710                Bus::Bus(char const*)
                0x00000000c000b710                Bus::Bus(char const*)
                0x00000000c000b748                Bus::~Bus()
                0x00000000c000b748                Bus::~Bus()
                0x00000000c000b76c                Bus::~Bus()
 .text          0x00000000c000b796       0x96 hal/buzzer.32
                0x00000000c000b796                beepThread(void*)
                0x00000000c000b7d3                Krnl::beep(int, int, bool)
 .text          0x00000000c000b82c      0x465 hal/clock.32
                0x00000000c000b82c                User::loadClockSettings(int)
                0x00000000c000b87e                Clock::Clock(char const*)
                0x00000000c000b87e                Clock::Clock(char const*)
                0x00000000c000b8b4                Clock::~Clock()
                0x00000000c000b8b4                Clock::~Clock()
                0x00000000c000b8d8                Clock::~Clock()
                0x00000000c000b902                Clock::timeInSecondsLocal()
                0x00000000c000b94a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b9a3                datetimeToSeconds(datetime_t)
                0x00000000c000bac8                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bb28                secondsToDatetime(unsigned long long)
                0x00000000c000bc6c                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bc91        0x1 
 .text          0x00000000c000bc92      0x464 hal/device.32
                0x00000000c000bc92                Device::hibernate()
                0x00000000c000bc94                Device::wake()
                0x00000000c000bc96                Device::detect()
                0x00000000c000bc98                Device::disableLegacy()
                0x00000000c000bc9a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bc9c                DriverlessDevice::close(int, int, void*)
                0x00000000c000bca0                DriverlessDevice::detect()
                0x00000000c000bca2                DriverlessDevice::open(int, int, void*)
                0x00000000c000bcb6                Device::~Device()
                0x00000000c000bcb6                Device::~Device()
                0x00000000c000bcc4                Device::~Device()
                0x00000000c000bcec                Device::findAndLoadDriver()
                0x00000000c000bcfa                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bd20                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bd60                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bd8a                Device::getParent()
                0x00000000c000bd96                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000bdb4                Device::addChild(Device*)
                0x00000000c000bdf8                Device::removeAllChildren()
                0x00000000c000be3e                Device::hibernateAll()
                0x00000000c000be6e                Device::wakeAll()
                0x00000000c000be9e                Device::detectAll()
                0x00000000c000bece                Device::disableLegacyAll()
                0x00000000c000bed0                Device::loadDriversForAll()
                0x00000000c000bed2                Device::closeAll()
                0x00000000c000bf08                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bf3e                Device::setName(char const*)
                0x00000000c000bf4c                Device::Device(char const*)
                0x00000000c000bf4c                Device::Device(char const*)
                0x00000000c000c048                Device::getName()
                0x00000000c000c052                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c052                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c088                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c0cc                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c0f6        0x2 
 .text          0x00000000c000c0f8       0x86 hal/diskctrl.32
                0x00000000c000c0f8                HardDiskController::HardDiskController(char const*)
                0x00000000c000c0f8                HardDiskController::HardDiskController(char const*)
                0x00000000c000c130                HardDiskController::~HardDiskController()
                0x00000000c000c130                HardDiskController::~HardDiskController()
                0x00000000c000c154                HardDiskController::~HardDiskController()
 .text          0x00000000c000c17e       0xe2 hal/diskphys.32
                0x00000000c000c17e                PhysicalDisk::eject()
                0x00000000c000c182                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c182                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c1ea                PhysicalDisk::startCache()
                0x00000000c000c212                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c212                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c236                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c260        0x0 hal/fpu.32
 .text          0x00000000c000c260      0x360 hal/intctrl.32
                0x00000000c000c260                int_handler
                0x00000000c000c2ea                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c334                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c477                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c4ab                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c521                setupINTS()
                0x00000000c000c57e                convertLegacyIRQNumber(int)
 .text          0x00000000c000c5c0      0x8be hal/keybrd.32
                0x00000000c000c5c0                startGUI(void*)
                0x00000000c000c62e                startGUIVESA(void*)
                0x00000000c000c69c                sendKeyToTerminal(unsigned char)
                0x00000000c000c777                sendKeyboardToken(KeyboardToken)
                0x00000000c000cc61                clearInternalKeybuffer(VgaText*)
                0x00000000c000cc96                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000cdf4                Keyboard::Keyboard(char const*)
                0x00000000c000cdf4                Keyboard::Keyboard(char const*)
                0x00000000c000ce30                Keyboard::~Keyboard()
                0x00000000c000ce30                Keyboard::~Keyboard()
                0x00000000c000ce54                Keyboard::~Keyboard()
 .text          0x00000000c000ce7e      0x3f8 hal/logidisk.32
                0x00000000c000ce7e                LogicalDisk::close(int, int, void*)
                0x00000000c000ce82                LogicalDisk::~LogicalDisk()
                0x00000000c000ce82                LogicalDisk::~LogicalDisk()
                0x00000000c000cea6                LogicalDisk::~LogicalDisk()
                0x00000000c000ced0                LogicalDisk::open(int, int, void*)
                0x00000000c000cee4                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cf1c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cf62                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cf62                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d022                LogicalDisk::assignDriveLetter()
                0x00000000c000d0dc                LogicalDisk::mount()
                0x00000000c000d124                LogicalDisk::unmount()
                0x00000000c000d134                LogicalDisk::eject()
                0x00000000c000d148                LogicalDisk::unassignDriveLetter()
                0x00000000c000d19e                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d20a                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000d276        0x2 
 .text          0x00000000c000d278       0x86 hal/mouse.32
                0x00000000c000d278                Mouse::Mouse(char const*)
                0x00000000c000d278                Mouse::Mouse(char const*)
                0x00000000c000d2b0                Mouse::~Mouse()
                0x00000000c000d2b0                Mouse::~Mouse()
                0x00000000c000d2d4                Mouse::~Mouse()
 .text          0x00000000c000d2fe       0x90 hal/nic.32
                0x00000000c000d2fe                NIC::getMAC()
                0x00000000c000d304                NIC::write(int, unsigned char*, int*)
                0x00000000c000d30a                NIC::NIC(char const*)
                0x00000000c000d30a                NIC::NIC(char const*)
                0x00000000c000d340                NIC::~NIC()
                0x00000000c000d340                NIC::~NIC()
                0x00000000c000d364                NIC::~NIC()
 .text          0x00000000c000d38e      0x33b hal/partition.32
                0x00000000c000d38e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d436                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d6c9        0x3 
 .text          0x00000000c000d6cc       0x86 hal/serial.32
                0x00000000c000d6cc                Serial::Serial(char const*)
                0x00000000c000d6cc                Serial::Serial(char const*)
                0x00000000c000d704                Serial::~Serial()
                0x00000000c000d704                Serial::~Serial()
                0x00000000c000d728                Serial::~Serial()
 *fill*         0x00000000c000d752        0x2 
 .text          0x00000000c000d754      0x234 hal/timer.32
                0x00000000c000d754                Timer::Timer(char const*)
                0x00000000c000d754                Timer::Timer(char const*)
                0x00000000c000d78c                Timer::~Timer()
                0x00000000c000d78c                Timer::~Timer()
                0x00000000c000d7b0                Timer::~Timer()
                0x00000000c000d7da                Timer::read()
                0x00000000c000d7e5                setupTimer(int)
                0x00000000c000d820                timerHandler(unsigned int)
 .text          0x00000000c000d988      0x450 hal/vcache.32
                0x00000000c000d988                VCache::VCache(PhysicalDisk*)
                0x00000000c000d988                VCache::VCache(PhysicalDisk*)
                0x00000000c000daf8                VCache::invalidateReadBuffer()
                0x00000000c000db08                VCache::writeWriteBuffer()
                0x00000000c000db54                VCache::~VCache()
                0x00000000c000db54                VCache::~VCache()
                0x00000000c000dbac                VCache::~VCache()
                0x00000000c000dbd4                VCache::write(unsigned long long, int, void*)
                0x00000000c000dcce                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ddd8      0x4d9 hal/video.32
                0x00000000c000ddd8                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000de24                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000de94                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000df24                Video::clearScreen(unsigned int)
                0x00000000c000df58                Video::putpixel(int, int, unsigned int)
                0x00000000c000df66                Video::readPixelApprox(int, int)
                0x00000000c000df7a                Video::Video(char const*)
                0x00000000c000df7a                Video::Video(char const*)
                0x00000000c000dfb0                Video::~Video()
                0x00000000c000dfb0                Video::~Video()
                0x00000000c000dfd4                Video::~Video()
                0x00000000c000dffe                Video::isMonochrome()
                0x00000000c000e00a                Video::getWidth()
                0x00000000c000e016                Video::getHeight()
                0x00000000c000e022                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e0de                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e246                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e2b1        0x3 
 .text          0x00000000c000e2b4     0x12d2 hw/acpi.32
                0x00000000c000e2b4                ACPI::close(int, int, void*)
                0x00000000c000e368                findRSDP()
                0x00000000c000e400                loadACPITables(unsigned char*)
                0x00000000c000e66c                findRSDT(unsigned char*)
                0x00000000c000e7c4                findDataTable(unsigned char*, char*)
                0x00000000c000e844                scanMADT()
                0x00000000c000ecfc                ACPI::ACPI()
                0x00000000c000ecfc                ACPI::ACPI()
                0x00000000c000ed50                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ee4c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ef18                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ef20                ACPI::detectPCI()
                0x00000000c000f140                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f188                ACPI::sleep()
                0x00000000c000f1a4                ACPI::open(int, int, void*)
 .text          0x00000000c000f586      0xba5 hw/cpu.32
                0x00000000c000f586                CPU::close(int, int, void*)
                0x00000000c000f58a                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f5a6                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f5be                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f632                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f6b6                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f6e4                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f712                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f740                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f76e                CPU::CPU()
                0x00000000c000f76e                CPU::CPU()
                0x00000000c000f7fc                CPU::displayFeatures()
                0x00000000c000f7fe                CPU::detectFeatures()
                0x00000000c000fed2                CPU::setupSMEP()
                0x00000000c000fede                CPU::setupUMIP()
                0x00000000c000fee8                CPU::setupTSC()
                0x00000000c000fef2                CPU::setupLargePages()
                0x00000000c000fefc                CPU::setupPAT()
                0x00000000c000ff38                CPU::setupMTRR()
                0x00000000c000ff3a                CPU::setupGlobalPages()
                0x00000000c000ff44                CPU::allowUsermodeDataAccess()
                0x00000000c000ff56                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ff68                CPU::setupSMAP()
                0x00000000c000ff76                CPU::setupFeatures()
                0x00000000c0010042                CPU::open(int, int, void*)
 .text          0x00000000c001012b       0xd8 krnl/bootmsg.32
                0x00000000c001012b                KeDisplaySplashScreen()
                0x00000000c00101a0                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010203        0x1 
 .text          0x00000000c0010204      0x585 krnl/env.32
                0x00000000c0010204                EnvVarContainer::getEnv(char const*)
                0x00000000c0010242                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010304                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010306                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00104f0                EnvVarContainer::__loadSystem()
                0x00000000c001050a                EnvVarContainer::__loadUser()
                0x00000000c001050c                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001050c                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001052e                EnvVarContainer::~EnvVarContainer()
                0x00000000c001052e                EnvVarContainer::~EnvVarContainer()
                0x00000000c001055e                Krnl::getEnv(Process*, char const*)
                0x00000000c00105c3                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00105dd                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00105fc                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c001060f                Krnl::deleteEnvSystem(char const*)
                0x00000000c0010610                Krnl::deleteEnvUser(char const*)
                0x00000000c0010611                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0010612                Krnl::newProcessEnv(Process*)
                0x00000000c0010634                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010680                Krnl::loadSystemEnv()
                0x00000000c00106ae                Krnl::loadUserEnv()
                0x00000000c00106d4                Krnl::flushEnv()
                0x00000000c00106d5                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00106f5                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0010789       0x94 krnl/inlines.32
                0x00000000c0010789                CPU::current()
                0x00000000c0010795                operator new(unsigned long)
                0x00000000c001079a                operator delete(void*)
                0x00000000c001079f                disableIRQs()
                0x00000000c00107a1                enableIRQs()
                0x00000000c00107a3                lockScheduler()
                0x00000000c00107ab                unlockScheduler()
                0x00000000c00107ba                lockStuff()
                0x00000000c00107c8                unlockStuff()
                0x00000000c0010802                Virt::getAKernelVAS()
                0x00000000c0010808                __not_memcpy
 .text          0x00000000c001081d        0xc krnl/panic.32
                0x00000000c001081d                KePanic(char const*)
 .text          0x00000000c0010829      0x142 krnl/powctrl.32
                0x00000000c0010829                Krnl::powerThread(void*)
                0x00000000c0010857                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c001086d                Krnl::userIOReceived()
                0x00000000c0010878                Krnl::handlePowerButton()
                0x00000000c00108ad                Krnl::handleSleepButton()
                0x00000000c00108e2                Krnl::setupPowerManager()
 .text          0x00000000c001096b       0x9b krnl/random.32
                0x00000000c001096b                KeRand()
                0x00000000c00109ab                KeSeedRand(unsigned int)
                0x00000000c00109d4                KeInitRand()
 *fill*         0x00000000c0010a06        0x2 
 .text          0x00000000c0010a08      0x1bc krnl/resolve.32
                0x00000000c0010a08                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010bc4      0x313 krnl/signal.32
                0x00000000c0010bc4                KiSigKill(int)
                0x00000000c0010bd8                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010bd9                KiDefaultSignalHandlerPause(int)
                0x00000000c0010c05                KiDefaultSignalHandlerResume(int)
                0x00000000c0010c31                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010c36                KeInitSignals()
                0x00000000c0010c81                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010cb7                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010d34                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010e23                KiCheckSignalZ
                0x00000000c0010e65                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010ea0                KiFinishSignalZ
 .text          0x00000000c0010ed7      0xc76 krnl/syscalls.32
                0x00000000c0010ed7                SysSeekDir(regs*)
                0x00000000c0010edc                SysTellDir(regs*)
                0x00000000c0010ee1                SysVerify(regs*)
                0x00000000c0010eeb                SysGetArgc(regs*)
                0x00000000c0010eff                SysTTYName(regs*)
                0x00000000c0010f07                SysFormatDisk(regs*)
                0x00000000c0010f6e                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010fc2                SysGetDiskVolumeLabel(regs*)
                0x00000000c001101b                SysShutdown(regs*)
                0x00000000c00110a8                SysRealpath(regs*)
                0x00000000c00110f7                SysReadDir(regs*)
                0x00000000c0011177                SysIsATTY(regs*)
                0x00000000c00111d1                SysSeek(regs*)
                0x00000000c001122b                SysTell(regs*)
                0x00000000c0011298                SysSize(regs*)
                0x00000000c001130b                SysSizeFromFilename(regs*)
                0x00000000c00113b5                SysClose(regs*)
                0x00000000c0011415                SysOpenDir(regs*)
                0x00000000c0011492                SysMakeDir(regs*)
                0x00000000c0011500                SysCloseDir(regs*)
                0x00000000c001154f                SysWait(regs*)
                0x00000000c0011570                SysNotImpl(regs*)
                0x00000000c001158b                SysPanic(regs*)
                0x00000000c00115a6                SysRmdir(regs*)
                0x00000000c0011604                SysUnlink(regs*)
                0x00000000c0011662                SysGetArgv(regs*)
                0x00000000c00116af                SysUSleep(regs*)
                0x00000000c00116d8                SysSpawn(regs*)
                0x00000000c0011749                SysGetEnv(regs*)
                0x00000000c00117fe                SysSetFatAttrib(regs*)
                0x00000000c0011867                SysPipe(regs*)
                0x00000000c00118ac                SysGetUnixTime(regs*)
                0x00000000c00118c0                string_ends_with(char const*, char const*)
                0x00000000c001190b                SysOpen(regs*)
                0x00000000c0011b0b                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011b4d        0x3 
 .text          0x00000000c0011b50      0x159 net/ethernet.32
                0x00000000c0011b50                KeSwitchEndian16(unsigned short)
                0x00000000c0011b74                KeSwitchEndian32(unsigned int)
                0x00000000c0011ba4                EthernetCRC32(unsigned char*, int)
                0x00000000c0011c48                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0011ca9      0xd51 reg/cm.32
                0x00000000c0011ca9                CmOpen(char const*)
                0x00000000c0011dc7                CmClose(Reghive_Tag*)
                0x00000000c0011ddd                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011e19                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0011e90                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011ecf                CmGetNext(Reghive_Tag*, int)
                0x00000000c0011f01                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011f3d                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0011f65                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0011f86                CmExpand(Reghive_Tag*, int)
                0x00000000c0012001                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012087                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c001217b                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c00122b3                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012314                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012344                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c001237b                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00123a5                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c00123e5                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012489                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c00124b7                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0012654                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00126a1                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001271b                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001276e                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012832                zStrtok(char*, char const*)
                0x00000000c00128a4                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0012925                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00129c8                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00129fa      0x545 reg/registry.32
                0x00000000c00129fa                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012b86                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0012cdb                Reg::getLine(char*, char*, char*)
                0x00000000c0012d12                Reg::readInt(char*, char*, int*)
                0x00000000c0012e00                Reg::readString(char*, char*, char*, int)
                0x00000000c0012e81                Reg::readBool(char*, char*, bool*)
                0x00000000c0012ea6                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0012ed2                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012efe                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0012f3f       0x36 sys/eject.32
                0x00000000c0012f3f                SysEject(regs*)
 .text          0x00000000c0012f75       0x18 sys/exit.32
                0x00000000c0012f75                SysExit(regs*)
 .text          0x00000000c0012f8d       0x1f sys/getcwd.32
                0x00000000c0012f8d                SysGetCwd(regs*)
 .text          0x00000000c0012fac        0xc sys/getpid.32
                0x00000000c0012fac                SysGetPID(regs*)
 .text          0x00000000c0012fb8       0x1a sys/getramdata.32
                0x00000000c0012fb8                SysGetRAMData(regs*)
 .text          0x00000000c0012fd2       0x82 sys/getvgaptr.32
                0x00000000c0012fd2                SysGetVGAPtr(regs*)
 .text          0x00000000c0013054       0xb9 sys/kill.32
                0x00000000c0013054                SysKill(regs*)
 .text          0x00000000c001310d       0xa8 sys/loaddll.32
                0x00000000c001310d                SysLoadDLL(regs*)
 .text          0x00000000c00131b5       0x68 sys/read.32
                0x00000000c00131b5                SysRead(regs*)
 .text          0x00000000c001321d       0x29 sys/registersignal.32
                0x00000000c001321d                SysRegisterSignal(regs*)
 .text          0x00000000c0013246      0x19c sys/registry.32
                0x00000000c0013246                SysRegistryGetTypeFromPath(regs*)
                0x00000000c00132bd                SysRegistryReadExtent(regs*)
                0x00000000c0013305                SysRegistryPathToExtentLookup(regs*)
                0x00000000c001332d                SysRegistryEnterDirectory(regs*)
                0x00000000c0013355                SysRegistryGetNext(regs*)
                0x00000000c001337d                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00133b7                SysRegistryOpen(regs*)
                0x00000000c00133cb                SysRegistryClose(regs*)
 .text          0x00000000c00133e2       0x55 sys/sbrk.32
                0x00000000c00133e2                SysSbrk(regs*)
 .text          0x00000000c0013437       0x1c sys/setcwd.32
                0x00000000c0013437                SysSetCwd(regs*)
 .text          0x00000000c0013453       0x96 sys/settime.32
                0x00000000c0013453                SysSetTime(regs*)
 .text          0x00000000c00134e9       0x4a sys/timezone.32
                0x00000000c00134e9                SysTimezone(regs*)
 .text          0x00000000c0013533       0x68 sys/write.32
                0x00000000c0013533                SysWrite(regs*)
 .text          0x00000000c001359b       0x62 sys/wsbe.32
                0x00000000c001359b                SysWsbe(regs*)
 .text          0x00000000c00135fd       0x25 sys/yield.32
                0x00000000c00135fd                SysYield(regs*)
 .text          0x00000000c0013622     0x1203 thr/elf.32
                0x00000000c0013622                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00138a9                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013ac8                Thr::runtimeReferenceHelper()
                0x00000000c0013adb                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013b2a                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013de8                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014529                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001455b                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014592                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00145ac                Thr::loadDLL(char const*, bool)
                0x00000000c00147ec                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0014825        0x3 
 .text          0x00000000c0014828     0x13b5 thr/prcssthr.32
                0x00000000c0014828                userModeEntryPoint(void*)
                0x00000000c0014850                changeTSS
                0x00000000c0014880                switchToThread(ThreadControlBlock*)
                0x00000000c0014930                Process::addArgs(char**)
                0x00000000c001499c                Process::Process(char const*, Process*, char**)
                0x00000000c001499c                Process::Process(char const*, Process*, char**)
                0x00000000c0014ba8                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014ba8                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014d7c                taskStartupFunction
                0x00000000c0014d88                Semaphore::Semaphore(int)
                0x00000000c0014d88                Semaphore::Semaphore(int)
                0x00000000c0014db8                Mutex::Mutex()
                0x00000000c0014db8                Mutex::Mutex()
                0x00000000c0014dcc                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014ed4                Process::createUserThread()
                0x00000000c0014ef4                setupMultitasking(void (*)())
                0x00000000c0015018                schedule()
                0x00000000c00150ac                Semaphore::tryAcquire()
                0x00000000c001516c                Semaphore::assertLocked(char const*)
                0x00000000c00151f0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015218                blockTask(TaskState)
                0x00000000c0015250                waitTask(int, int*, int)
                0x00000000c0015294                milliTenthSleepUntil(unsigned int)
                0x00000000c0015334                milliTenthSleep(unsigned int)
                0x00000000c0015348                sleep(unsigned int)
                0x00000000c0015358                Semaphore::acquire()
                0x00000000c0015420                taskReturned
                0x00000000c0015464                Thr::processFromPID(int)
                0x00000000c0015510                unblockTask(ThreadControlBlock*)
                0x00000000c00155bc                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015890                cleanerTaskFunction(void*)
                0x00000000c0015998                terminateTask(int)
                0x00000000c0015a84                Thr::terminateFromIRQ(int)
                0x00000000c0015a94                Semaphore::release()
 .text          0x00000000c0015bdd      0xbec vm86/vm8086.32
                0x00000000c0015bdd                Vm::inbv(unsigned short)
                0x00000000c0015bf0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015c26                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015c36                Vm::getSegment(unsigned int)
                0x00000000c0015c3e                Vm::getOffset(unsigned int)
                0x00000000c0015c43                Vm::mainloop2()
                0x00000000c0015c7d                Vm::mainVm8086Loop(void*)
                0x00000000c0015c8d                Vm::mainloop3(unsigned long)
                0x00000000c0015cb3                Vm::initialise8086()
                0x00000000c0015cf6                Vm::finish8086()
                0x00000000c0015d57                Vm::getOutput8086(unsigned char*)
                0x00000000c0015d7c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015e35                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015fc2                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001604b                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001605c                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001606e                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001607f                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016094                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00160aa                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00160bf                Vm::faultHandler(regs*)
 .text          0x00000000c00167c9      0xaac arch/i386/hal.32
                0x00000000c00167c9                noCopro(unsigned long)
                0x00000000c00167ca                nmiHandler(regs*, void*)
                0x00000000c00167e3                doubleFault(regs*, void*)
                0x00000000c00167fc                displayDebugInfo(regs*)
                0x00000000c0016b58                HalSystemIdle()
                0x00000000c0016bd4                displayProgramFault(char const*)
                0x00000000c0016c20                gpFault(regs*, void*)
                0x00000000c0016c87                pgFault(regs*, void*)
                0x00000000c0016d10                otherISRHandler(regs*, void*)
                0x00000000c0016d44                opcodeFault(regs*, void*)
                0x00000000c0016dc7                i386SaveCoprocessor(void*)
                0x00000000c0016ddb                i386LoadCoprocessor(void*)
                0x00000000c0016def                x87EmulHandler(regs*, void*)
                0x00000000c0016e8c                HalInitialiseCoprocessor()
                0x00000000c0016f3a                HalPanic(char const*)
                0x00000000c0017033                HalQueryPerformanceCounter()
                0x00000000c001704e                HalInitialise()
                0x00000000c0017204                HalMakeBeep(int)
                0x00000000c001723e                HalGetRand()
                0x00000000c0017241                HalEndOfInterrupt(int)
                0x00000000c0017272                HalRestart()
                0x00000000c0017273                HalShutdown()
                0x00000000c0017274                HalSleep()
 *fill*         0x00000000c0017275        0x3 
 .text          0x00000000c0017278      0x2dc arch/i386/pic.32
                0x00000000c0017278                picIoWait()
                0x00000000c0017280                picDisable()
                0x00000000c00172b4                picGetIRQReg(int)
                0x00000000c0017330                picOpen()
                0x00000000c00174b4                picEOI(int)
 .text          0x00000000c0017554      0x66e arch/i386/rtc.32
                0x00000000c0017554                RTC::open(int, int, void*)
                0x00000000c0017558                RTC::close(int, int, void*)
                0x00000000c001755c                RTC::timeInSecondsUTC()
                0x00000000c001756e                RTC::timeInDatetimeUTC()
                0x00000000c0017594                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00175d2                RTC::~RTC()
                0x00000000c00175d2                RTC::~RTC()
                0x00000000c00175f6                RTC::~RTC()
                0x00000000c0017620                RTC::get_update_in_progress_flag()
                0x00000000c001763a                RTC::completeRTCRefresh()
                0x00000000c0017914                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0017ac2                rtcIRQHandler(regs*, void*)
                0x00000000c0017b08                RTC::RTC()
                0x00000000c0017b08                RTC::RTC()
 *fill*         0x00000000c0017bc2        0x2 
 .text          0x00000000c0017bc4      0x1f4 arch/i386/vga.32
                0x00000000c0017bc4                HalConsoleScroll(int, int)
                0x00000000c0017ccc                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017d30                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0017db8     0x1487 fs/fat/vfslink.32
                0x00000000c0017db8                FAT::getName()
                0x00000000c0017dc0                FAT::tell(void*, unsigned long long*)
                0x00000000c0017dfc                FAT::stat(void*, unsigned long long*)
                0x00000000c0017e38                FAT::~FAT()
                0x00000000c0017e38                FAT::~FAT()
                0x00000000c0017e5c                FAT::~FAT()
                0x00000000c0017e84                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017f28                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018008                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00181ec                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018408                FAT::allocateSwapfile(char const*, int)
                0x00000000c00185c8                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0018738                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0018798                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00187f8                FAT::close(void*)
                0x00000000c001884c                FAT::closeDir(void*)
                0x00000000c00188a0                FAT::seek(void*, unsigned long long)
                0x00000000c00188f8                fatWrapperReadDisk
                0x00000000c0018938                fatWrapperWriteDisk
                0x00000000c0018978                fatWrapperIoctl
                0x00000000c0018a98                FAT::FAT()
                0x00000000c0018a98                FAT::FAT()
                0x00000000c0018af0                FAT::fixFilepath(char*)
                0x00000000c0018b30                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0018ca4                FAT::openDir(char const*, void**)
                0x00000000c0018d54                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018e4c                FAT::unlink(char const*)
                0x00000000c0018ecc                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019084                FAT::rename(char const*, char const*)
                0x00000000c0019150                FAT::mkdir(char const*)
                0x00000000c00191d0                FAT::exists(char const*)
 *fill*         0x00000000c001923f        0x1 
 .text          0x00000000c0019240       0x94 fs/iso9660/helper.32
                0x00000000c0019240                isoReadDiscSectorHelper
                0x00000000c001929c                iso_kprintf
                0x00000000c00192b8                iso_kprintfd
 .text          0x00000000c00192d4      0x714 fs/iso9660/vfslink.32
                0x00000000c00192d4                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00192da                ISO9660::getName()
                0x00000000c00192e0                ISO9660::closeDir(void*)
                0x00000000c00192ea                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00192f0                ISO9660::unlink(char const*)
                0x00000000c00192f6                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00192fc                ISO9660::rename(char const*, char const*)
                0x00000000c0019302                ISO9660::mkdir(char const*)
                0x00000000c0019308                ISO9660::~ISO9660()
                0x00000000c0019308                ISO9660::~ISO9660()
                0x00000000c001932c                ISO9660::~ISO9660()
                0x00000000c0019354                ISO9660::exists(char const*)
                0x00000000c0019368                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001944e                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0019496                ISO9660::seek(void*, unsigned long long)
                0x00000000c00194d8                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019516                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019568                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c00196aa                ISO9660::close(void*)
                0x00000000c00196da                ISO9660::openDir(char const*, void**)
                0x00000000c00197b4                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c00198cf                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001994e                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c00199c0                ISO9660::ISO9660()
                0x00000000c00199c0                ISO9660::ISO9660()
 .text          0x00000000c00199e8      0x26c hal/sound/sndcard.32
                0x00000000c00199e8                SoundCard::beginPlayback()
                0x00000000c00199f6                SoundCard::stopPlayback()
                0x00000000c0019a04                SoundCard::SoundCard(char const*)
                0x00000000c0019a04                SoundCard::SoundCard(char const*)
                0x00000000c0019aa2                SoundCard::~SoundCard()
                0x00000000c0019aa2                SoundCard::~SoundCard()
                0x00000000c0019ac6                SoundCard::~SoundCard()
                0x00000000c0019af0                SoundCard::configureRates(int, int, int)
                0x00000000c0019b20                SoundCard::getSamples16(int, short*)
                0x00000000c0019b7c                SoundCard::getSamples32(int, int*)
                0x00000000c0019c02                SoundCard::addChannel(SoundPort*)
                0x00000000c0019c40                SoundCard::removeChannel(int)
 .text          0x00000000c0019c54      0x393 hal/sound/sndport.32
                0x00000000c0019c54                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019c54                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019ce0                SoundPort::~SoundPort()
                0x00000000c0019ce0                SoundPort::~SoundPort()
                0x00000000c0019d14                SoundPort::unpause()
                0x00000000c0019d20                SoundPort::pause()
                0x00000000c0019d2c                SoundPort::getBufferUsed()
                0x00000000c0019d34                SoundPort::getBufferSize()
                0x00000000c0019d3c                SoundPort::buffer16(short*, int)
                0x00000000c0019dc8                SoundPort::buffer32(int*, int)
                0x00000000c0019e54                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019f24                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0019fe7        0x0 hw/bus/isa.32
 *fill*         0x00000000c0019fe7        0x1 
 .text          0x00000000c0019fe8      0xbc5 hw/bus/pci.32
                0x00000000c0019fe8                PCI::open(int, int, void*)
                0x00000000c001a006                PCI::close(int, int, void*)
                0x00000000c001a00a                PCI::PCI()
                0x00000000c001a00a                PCI::PCI()
                0x00000000c001a0a2                PCI::readBAR8(unsigned int, int)
                0x00000000c001a0be                PCI::readBAR16(unsigned int, int)
                0x00000000c001a0dc                PCI::readBAR32(unsigned int, int)
                0x00000000c001a0f8                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001a118                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001a13a                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001a15a                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a1d0                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a27a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a29e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a2c6                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a310                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a338                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a35c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a380                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a3a8                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a40c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001a4f2                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a7bc                PCI::checkBus(unsigned char)
                0x00000000c001a7e0                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a966                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001aae2                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001ab54                PCI::detect()
 *fill*         0x00000000c001abad        0x1 
 .text          0x00000000c001abae      0xb96 hw/diskctrl/ide.32
                0x00000000c001abae                IDE::close(int, int, void*)
                0x00000000c001abb2                IDE::IDE()
                0x00000000c001abb2                IDE::IDE()
                0x00000000c001abe6                IDE::prepareInterrupt(unsigned char)
                0x00000000c001abf8                selectDrive(unsigned char, unsigned char)
                0x00000000c001abfa                IDE::getBase(unsigned char)
                0x00000000c001ac0c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001accc                IDE::read(unsigned char, unsigned char)
                0x00000000c001ad80                IDE::waitInterrupt(unsigned char)
                0x00000000c001ade2                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001adfe                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ae1a                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ae64                IDE::open(int, int, void*)
                0x00000000c001b29e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b36e                IDE::detect()
                0x00000000c001b636                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b6f0                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b744      0x32c hw/diskctrl/satabus.32
                0x00000000c001b744                SATABus::close(int, int, void*)
                0x00000000c001b748                SATABus::detect()
                0x00000000c001b74a                SATABus::SATABus()
                0x00000000c001b74a                SATABus::SATABus()
                0x00000000c001b7d0                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b802                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b84a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b86a                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b894                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001b9a6                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001ba50                SATABus::open(int, int, void*)
 .text          0x00000000c001ba70      0x96d hw/diskphys/ata.32
                0x00000000c001ba70                ATA::close(int, int, void*)
                0x00000000c001ba94                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001ba96                ATA::ATA()
                0x00000000c001ba96                ATA::ATA()
                0x00000000c001bac4                ATA::flush(bool)
                0x00000000c001bb12                ATA::readyForCommand()
                0x00000000c001bb5e                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001bf22                ATA::detectCHS()
                0x00000000c001bf4c                ATA::open(int, int, void*)
                0x00000000c001c018                combineCharAndColour(char, unsigned char)
                0x00000000c001c029                combineColours(unsigned char, unsigned char)
                0x00000000c001c036                ATA::read(unsigned long long, int, void*)
                0x00000000c001c20c                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001c3dd        0x1 
 .text          0x00000000c001c3de      0x612 hw/diskphys/atapi.32
                0x00000000c001c3de                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c3e4                ATAPI::close(int, int, void*)
                0x00000000c001c408                ATAPI::ATAPI()
                0x00000000c001c408                ATAPI::ATAPI()
                0x00000000c001c436                ATAPI::readyForCommand()
                0x00000000c001c488                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c748                ATAPI::diskRemoved()
                0x00000000c001c782                ATAPI::eject()
                0x00000000c001c7ca                ATAPI::diskInserted()
                0x00000000c001c7d6                ATAPI::detectMedia()
                0x00000000c001c896                ATAPI::open(int, int, void*)
                0x00000000c001c976                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001c9f0      0x7ff hw/diskphys/sata.32
                0x00000000c001c9f0                SATA::close(int, int, void*)
                0x00000000c001ca14                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ca16                SATA::open(int, int, void*)
                0x00000000c001cac0                SATA::SATA()
                0x00000000c001cac0                SATA::SATA()
                0x00000000c001caee                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cd40                SATA::read(unsigned long long, int, void*)
                0x00000000c001cf90                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d1ef        0x1 
 .text          0x00000000c001d1f0      0x5d8 hw/diskphys/satapi.32
                0x00000000c001d1f0                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001d1f6                SATAPI::close(int, int, void*)
                0x00000000c001d21a                SATAPI::SATAPI()
                0x00000000c001d21a                SATAPI::SATAPI()
                0x00000000c001d248                SATAPI::diskRemoved()
                0x00000000c001d24a                SATAPI::diskInserted()
                0x00000000c001d266                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001d54c                SATAPI::eject()
                0x00000000c001d588                SATAPI::detectMedia()
                0x00000000c001d5de                SATAPI::open(int, int, void*)
                0x00000000c001d6de                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d7c8      0x45b hw/intctrl/apic.32
                0x00000000c001d7c8                IOAPIC::close(int, int, void*)
                0x00000000c001d7ce                apicGetBase()
                0x00000000c001d814                IOAPIC::IOAPIC()
                0x00000000c001d814                IOAPIC::IOAPIC()
                0x00000000c001d83c                apicOpen()
                0x00000000c001d9b8                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d9ea                IOAPIC::read(int)
                0x00000000c001da12                IOAPIC::open(int, int, void*)
                0x00000000c001daf8                IOAPIC::write(int, int)
                0x00000000c001db24                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001dc23        0x1 
 .text          0x00000000c001dc24       0xf0 hw/timer/apictimer.32
                0x00000000c001dc24                APICTimer::close(int, int, void*)
                0x00000000c001dc2c                apicTimerHandler(regs*, void*)
                0x00000000c001dc54                APICTimer::open(int, int, void*)
                0x00000000c001dcc4                APICTimer::write(int)
                0x00000000c001dcec                APICTimer::APICTimer()
                0x00000000c001dcec                APICTimer::APICTimer()
 .text          0x00000000c001dd14      0x1ad hw/timer/pit.32
                0x00000000c001dd14                PIT::write(int)
                0x00000000c001dd98                pitHandler(regs*, void*)
                0x00000000c001ddc0                PIT::open(int, int, void*)
                0x00000000c001de10                PIT::close(int, int, void*)
                0x00000000c001de40                PIT::PIT()
                0x00000000c001de40                PIT::PIT()
 *fill*         0x00000000c001dec1        0xf 
 .text          0x00000000c001ded0       0x83 arch/i386/avx.32
                0x00000000c001ded0                avxDetect
                0x00000000c001defa                avxSave
                0x00000000c001df0b                avxLoad
                0x00000000c001df1c                avxInit
                0x00000000c001df3e                avxClose
                0x00000000c001df3f                wouldSheSayYes
 *fill*         0x00000000c001df53        0xd 
 .text          0x00000000c001df60      0x2ec arch/i386/interrupt.32
                0x00000000c001df60                isr0
                0x00000000c001df70                isr1
                0x00000000c001df7a                isr2
                0x00000000c001df84                isr3
                0x00000000c001df8e                isr4
                0x00000000c001df98                isr5
                0x00000000c001dfa2                isr6
                0x00000000c001dfac                isr7
                0x00000000c001dfb6                isr8
                0x00000000c001dfbe                isr9
                0x00000000c001dfc8                isr10
                0x00000000c001dfd0                isr11
                0x00000000c001dfd8                isr12
                0x00000000c001dfe0                isr13
                0x00000000c001dffa                isr14
                0x00000000c001e002                isr15
                0x00000000c001e00c                isr16
                0x00000000c001e016                isr17
                0x00000000c001e020                isr18
                0x00000000c001e02a                irq3
                0x00000000c001e034                irq4
                0x00000000c001e03e                irq5
                0x00000000c001e048                irq6
                0x00000000c001e052                irq7
                0x00000000c001e05c                irq8
                0x00000000c001e066                irq9
                0x00000000c001e070                irq10
                0x00000000c001e07a                irq11
                0x00000000c001e084                irq12
                0x00000000c001e08e                irq13
                0x00000000c001e098                irq14
                0x00000000c001e0a2                irq15
                0x00000000c001e0ac                irq1
                0x00000000c001e0b3                irq2
                0x00000000c001e0ba                isr96
                0x00000000c001e0c1                irq0
                0x00000000c001e0c6                int_common_stub
                0x00000000c001e0f8                syscall_common_stub
                0x00000000c001e1fc                irq16
                0x00000000c001e206                irq17
                0x00000000c001e210                irq18
                0x00000000c001e21a                irq19
                0x00000000c001e224                irq20
                0x00000000c001e22e                irq21
                0x00000000c001e238                irq22
                0x00000000c001e242                irq23
 *fill*         0x00000000c001e24c        0x4 
 .text          0x00000000c001e250       0x10 arch/i386/rdrand.32
                0x00000000c001e250                i386GetRDRAND
 .text          0x00000000c001e260       0x39 arch/i386/sse.32
                0x00000000c001e260                absolutelyNoChanceInHell
                0x00000000c001e260                sseDetect
                0x00000000c001e278                sseSave
                0x00000000c001e280                sseLoad
                0x00000000c001e288                sseInit
                0x00000000c001e298                sseClose
 *fill*         0x00000000c001e299        0x7 
 .text          0x00000000c001e2a0       0x49 arch/i386/x87.32
                0x00000000c001e2a6                x87Detect
                0x00000000c001e2c1                x87Save
                0x00000000c001e2c8                x87Load
                0x00000000c001e2cf                x87Init
                0x00000000c001e2e8                x87Close
 *fill*         0x00000000c001e2e9        0x3 
 .text          0x00000000c001e2ec       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e311        0x0 crtn.32
 *fill*         0x00000000c001e311        0x3 
 .text          0x00000000c001e314      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e314                __divdi3
 *fill*         0x00000000c001e45f        0x1 
 .text          0x00000000c001e460      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e460                __moddi3
 *fill*         0x00000000c001e5de        0x2 
 .text          0x00000000c001e5e0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001e5e0                __udivdi3
 *fill*         0x00000000c001e6df        0x1 
 .text          0x00000000c001e6e0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001e6e0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e800        0x0
 .iplt          0x00000000c001e800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e7fa        0xf
 .init          0x00000000c001e7fa        0x3 crti.32
                0x00000000c001e7fa                _init
 .init          0x00000000c001e7fd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e802        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e807        0x2 crtn.32

.fini           0x00000000c001e809        0xa
 .fini          0x00000000c001e809        0x3 crti.32
                0x00000000c001e809                _fini
 .fini          0x00000000c001e80c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e811        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e814       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e814       0x23 core/computer.32
                0x00000000c001e814                Computer::~Computer()
                0x00000000c001e814                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e838       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e838       0x2a core/computer.32
                0x00000000c001e838                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e862       0x21
 .text._Z10idleCommonv
                0x00000000c001e862       0x21 core/idle.32
                0x00000000c001e862                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e884        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e884        0x2 core/unixfile.32
                0x00000000c001e884                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e884                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e886       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e886       0x42 core/unixfile.32
                0x00000000c001e886                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e886                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e8c8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e8c8       0xd3 core/unixfile.32
                0x00000000c001e8c8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e99c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e99c        0x7 core/unixfile.32
                0x00000000c001e99c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e9a4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e9a4       0xa1 core/unixfile.32
                0x00000000c001e9a4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ea46        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ea46        0x8 core/unixfile.32
                0x00000000c001ea46                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ea4e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ea4e       0x1a hal/device.32
                0x00000000c001ea4e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ea4e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ea68       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ea68       0x2a hal/device.32
                0x00000000c001ea68                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ea92       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ea92       0xdc hal/device.32
                0x00000000c001ea92                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001eb6e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001eb6e       0x42 hal/device.32
                0x00000000c001eb6e                LinkedList<Device>::LinkedList()
                0x00000000c001eb6e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ebb0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ebb0       0x1c hal/timer.32
                0x00000000c001ebb0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ebcc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ebcc        0x7 hal/timer.32
                0x00000000c001ebcc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ebd4       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ebd4       0xbc hal/timer.32
                0x00000000c001ebd4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ec90       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ec90       0xda hal/timer.32
                0x00000000c001ec90                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ed6c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ed6c       0x23 hw/acpi.32
                0x00000000c001ed6c                ACPI::~ACPI()
                0x00000000c001ed6c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ed90       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ed90       0x2a hw/acpi.32
                0x00000000c001ed90                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001edbc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001edbc        0x2 hw/acpi.32
                0x00000000c001edbc                LinkedList<Device>::~LinkedList()
                0x00000000c001edbc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001edc0       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001edc0       0x1c hw/acpi.32
                0x00000000c001edc0                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001eddc        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001eddc        0x7 hw/acpi.32
                0x00000000c001eddc                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ede4       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ede4       0xb8 hw/acpi.32
                0x00000000c001ede4                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ee9c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ee9c       0x23 hw/cpu.32
                0x00000000c001ee9c                CPU::~CPU()
                0x00000000c001ee9c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001eec0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001eec0       0x2a hw/cpu.32
                0x00000000c001eec0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001eeec        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001eeec        0x8 sys/kill.32
                0x00000000c001eeec                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001eef4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001eef4        0x2 thr/prcssthr.32
                0x00000000c001eef4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001eef4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001eef8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001eef8       0x49 thr/prcssthr.32
                0x00000000c001eef8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001eef8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ef44       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ef44       0x42 thr/prcssthr.32
                0x00000000c001ef44                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ef44                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001ef86       0x23
 .text._ZN3PCID2Ev
                0x00000000c001ef86       0x23 hw/bus/pci.32
                0x00000000c001ef86                PCI::~PCI()
                0x00000000c001ef86                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001efaa       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001efaa       0x2a hw/bus/pci.32
                0x00000000c001efaa                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001efd4       0x23
 .text._ZN3IDED2Ev
                0x00000000c001efd4       0x23 hw/diskctrl/ide.32
                0x00000000c001efd4                IDE::~IDE()
                0x00000000c001efd4                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001eff8       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001eff8       0x2a hw/diskctrl/ide.32
                0x00000000c001eff8                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001f022       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001f022       0x23 hw/diskctrl/satabus.32
                0x00000000c001f022                SATABus::~SATABus()
                0x00000000c001f022                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001f046       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001f046       0x2a hw/diskctrl/satabus.32
                0x00000000c001f046                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001f070       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f070       0x23 hw/diskphys/ata.32
                0x00000000c001f070                ATA::~ATA()
                0x00000000c001f070                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f094       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f094       0x2a hw/diskphys/ata.32
                0x00000000c001f094                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f0be       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f0be       0x23 hw/diskphys/atapi.32
                0x00000000c001f0be                ATAPI::~ATAPI()
                0x00000000c001f0be                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f0e2       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f0e2       0x2a hw/diskphys/atapi.32
                0x00000000c001f0e2                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001f10c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001f10c       0x23 hw/diskphys/sata.32
                0x00000000c001f10c                SATA::~SATA()
                0x00000000c001f10c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001f130       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001f130       0x2a hw/diskphys/sata.32
                0x00000000c001f130                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001f15a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001f15a       0x23 hw/diskphys/satapi.32
                0x00000000c001f15a                SATAPI::~SATAPI()
                0x00000000c001f15a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001f17e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001f17e       0x2a hw/diskphys/satapi.32
                0x00000000c001f17e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001f1a8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f1a8       0x23 hw/intctrl/apic.32
                0x00000000c001f1a8                IOAPIC::~IOAPIC()
                0x00000000c001f1a8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f1cc       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f1cc       0x2a hw/intctrl/apic.32
                0x00000000c001f1cc                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f1f8       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f1f8       0x23 hw/timer/apictimer.32
                0x00000000c001f1f8                APICTimer::~APICTimer()
                0x00000000c001f1f8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f21c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f21c       0x2a hw/timer/apictimer.32
                0x00000000c001f21c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f248       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f248       0x23 hw/timer/pit.32
                0x00000000c001f248                PIT::~PIT()
                0x00000000c001f248                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f26c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f26c       0x2a hw/timer/pit.32
                0x00000000c001f26c                PIT::~PIT()

.rodata         0x00000000c001f296     0x2bee
                0x00000000c001f296                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f296        0x2 
 .ctors         0x00000000c001f298        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f29c        0x4 core/unixfile.32
 .ctors         0x00000000c001f2a0        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f2a4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f2a8                end_ctors = .
                0x00000000c001f2a8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f2a8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f2ac        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f2ac                __DTOR_END__
                0x00000000c001f2b0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f2b0       0x10 
 .rodata        0x00000000c001f2c0      0x101 acpica/utclib.32
                0x00000000c001f2c0                AcpiGbl_Ctypes
 *fill*         0x00000000c001f3c1        0x3 
 .rodata        0x00000000c001f3c4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f3dc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f426       0x1a 
 .rodata        0x00000000c001f440       0xed fs/fat/ff.32
 *fill*         0x00000000c001f52d       0x13 
 .rodata        0x00000000c001f540      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f940       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001f9af      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001fac4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001fb2c       0x2c core/computer.32
                0x00000000c001fb2c                vtable for Computer
 .rodata.str1.4
                0x00000000c001fb58       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001fb88        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001fb94       0x17 core/main.32
 *fill*         0x00000000c001fbab        0x1 
 .rodata.str1.4
                0x00000000c001fbac       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fc51       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fca9       0x39 core/pipe.32
 *fill*         0x00000000c001fce2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001fce4       0x1c core/pipe.32
                0x00000000c001fce4                vtable for Pipe
 .rodata.str1.1
                0x00000000c001fd00       0x2b core/terminal.32
 *fill*         0x00000000c001fd2b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001fd2c       0x1c core/terminal.32
                0x00000000c001fd2c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001fd48       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001fd6a       0x15 core/unixfile.32
 *fill*         0x00000000c001fd7f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001fd80       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001fdcb        0x8 core/unixfile.32
 *fill*         0x00000000c001fdd3        0x1 
 .rodata.str1.4
                0x00000000c001fdd4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001fdf4       0x1c core/unixfile.32
                0x00000000c001fdf4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001fe10       0x1c core/unixfile.32
                0x00000000c001fe10                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001fe2c      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001ff93      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002009a       0x33 coreobjs/c++.32
 *fill*         0x00000000c00200cd        0x3 
 .rodata        0x00000000c00200d0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020220       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c0020220       0x68 fs/vfs.32
                0x00000000c0020220                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020288       0x1c fs/vfs.32
                0x00000000c0020288                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00202a4       0x1c fs/vfs.32
                0x00000000c00202a4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00202c0       0x2c hal/bus.32
                0x00000000c00202c0                vtable for Bus
 .rodata.str1.1
                0x00000000c00202ec       0x1e hal/clock.32
 *fill*         0x00000000c002030a        0x2 
 .rodata._ZTV5Clock
                0x00000000c002030c       0x3c hal/clock.32
                0x00000000c002030c                vtable for Clock
 *fill*         0x00000000c0020348       0x18 
 .rodata        0x00000000c0020360       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020390       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00203e8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00203e8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c00203e8       0x2c hal/device.32
                0x00000000c00203e8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020414       0x2c hal/device.32
                0x00000000c0020414                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020440       0x2c hal/diskctrl.32
                0x00000000c0020440                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002046c       0x38 hal/diskphys.32
                0x00000000c002046c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00204a4       0x3e hal/intctrl.32
 *fill*         0x00000000c00204e2        0x2 
 .rodata.str1.4
                0x00000000c00204e4       0x5d hal/intctrl.32
 .rodata        0x00000000c0020541       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0020594       0x34 hal/keybrd.32
                0x00000000c0020594                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00205c8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002060c       0x2c hal/logidisk.32
                0x00000000c002060c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0020638       0x2c hal/mouse.32
                0x00000000c0020638                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0020664       0x34 hal/nic.32
                0x00000000c0020664                vtable for NIC
 .rodata.str1.1
                0x00000000c0020698        0xb hal/partition.32
 *fill*         0x00000000c00206a3        0x1 
 .rodata._ZTV6Serial
                0x00000000c00206a4       0x44 hal/serial.32
                0x00000000c00206a4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00206e8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00206e8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00206e8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00206e8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c00206e8       0x30 hal/timer.32
                0x00000000c00206e8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020718       0x10 hal/vcache.32
                0x00000000c0020718                vtable for VCache
 .rodata.str1.1
                0x00000000c0020728       0x93 hal/video.32
 *fill*         0x00000000c00207bb        0x1 
 .rodata._ZTV5Video
                0x00000000c00207bc       0x4c hal/video.32
                0x00000000c00207bc                vtable for Video
 .rodata.str1.4
                0x00000000c0020808       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c00208a3      0x174 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0020a17       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0020a17        0x8 hw/acpi.32
 *fill*         0x00000000c0020a17        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020a18       0x2c hw/acpi.32
                0x00000000c0020a18                vtable for ACPI
 .rodata.str1.1
                0x00000000c0020a44      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020bb1        0x3 
 .rodata._ZTV3CPU
                0x00000000c0020bb4       0x2c hw/cpu.32
                0x00000000c0020bb4                vtable for CPU
 .rodata.str1.1
                0x00000000c0020be0       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0020c1c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020cad       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0020d76       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020dbe       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0020de9       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020e5f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020ea4        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0020eae       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0020ecf       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0020f65       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0020fb9       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0020fe5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00211b1       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0021208      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021318       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021318       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021318       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021318        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0021318       0xa0 vm86/vm8086.32
 .rodata        0x00000000c00213b8       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00213e8      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c0021578       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c00215eb       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0021600       0x3c arch/i386/rtc.32
                0x00000000c0021600                vtable for RTC
 .rodata.str1.1
                0x00000000c002163c       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c002167d        0x3 
 .rodata._ZTV3FAT
                0x00000000c0021680       0x68 fs/fat/vfslink.32
                0x00000000c0021680                vtable for FAT
 .rodata.str1.1
                0x00000000c00216e8       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00216e8      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0021820       0x68 fs/iso9660/vfslink.32
                0x00000000c0021820                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0021888       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00218cc       0x34 hal/sound/sndcard.32
                0x00000000c00218cc                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0021900       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002193f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0021977       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0021a18       0x2c hw/bus/pci.32
                0x00000000c0021a18                vtable for PCI
 .rodata.str1.1
                0x00000000c0021a44       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0021acb        0x1 
 .rodata._ZTV3IDE
                0x00000000c0021acc       0x2c hw/diskctrl/ide.32
                0x00000000c0021acc                vtable for IDE
 .rodata.str1.4
                0x00000000c0021af8       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0021b1c       0x2c hw/diskctrl/satabus.32
                0x00000000c0021b1c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0021b48       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0021b5a        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021b5c       0x38 hw/diskphys/ata.32
                0x00000000c0021b5c                vtable for ATA
 .rodata.str1.1
                0x00000000c0021b94        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0021ba1        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0021ba4       0x38 hw/diskphys/atapi.32
                0x00000000c0021ba4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021bdc       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0021c58       0x38 hw/diskphys/sata.32
                0x00000000c0021c58                vtable for SATA
 .rodata.str1.1
                0x00000000c0021c90       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0021d7a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0021d7c       0x38 hw/diskphys/satapi.32
                0x00000000c0021d7c                vtable for SATAPI
 .rodata        0x00000000c0021db4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0021dbc       0x2c hw/intctrl/apic.32
                0x00000000c0021dbc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0021de8       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0021e03        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021e04       0x30 hw/timer/apictimer.32
                0x00000000c0021e04                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021e34       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021e51        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021e54       0x30 hw/timer/pit.32
                0x00000000c0021e54                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021e84      0x4e1
 *(.data)
 .data          0x00000000c0021e84        0x0 crti.32
 .data          0x00000000c0021e84        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021e84                __dso_handle
 .data          0x00000000c0021e88        0x0 acpica/utclib.32
 .data          0x00000000c0021e88        0x0 core/malloc.32
 .data          0x00000000c0021e88        0x0 libk/ctype.32
 .data          0x00000000c0021e88        0x0 libk/string.32
 .data          0x00000000c0021e88        0x0 fs/fat/diskio.32
 .data          0x00000000c0021e88        0x0 fs/fat/ff.32
 .data          0x00000000c0021e88        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0021e88        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0021e88        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0021e88        0x0 core/computer.32
 .data          0x00000000c0021e88        0x0 core/gdt.32
 .data          0x00000000c0021e88        0x0 core/idle.32
 .data          0x00000000c0021e88        0x0 core/idt.32
 .data          0x00000000c0021e88        0x4 core/kheap.32
 .data          0x00000000c0021e8c        0x0 core/main.32
 .data          0x00000000c0021e8c        0x4 core/physmgr.32
                0x00000000c0021e8c                Phys::bitmap
 .data          0x00000000c0021e90        0x0 core/pipe.32
 *fill*         0x00000000c0021e90       0x10 
 .data          0x00000000c0021ea0       0x60 core/terminal.32
                0x00000000c0021ea0                VgaText::hiddenOut
                0x00000000c0021ec0                ansiToVGAMappings
 .data          0x00000000c0021f00        0x0 core/tss.32
 .data          0x00000000c0021f00        0x4 core/unixfile.32
                0x00000000c0021f00                UnixFile::nextFd
 .data          0x00000000c0021f04       0x15 core/virtmgr.32
                0x00000000c0021f04                Virt::pageAllocPtr
                0x00000000c0021f08                Virt::bitmap
                0x00000000c0021f0c                Virt::swapfileSectorsPerPage
                0x00000000c0021f10                Virt::swapfileLength
                0x00000000c0021f14                Virt::swapfileSector
                0x00000000c0021f18                Virt::swapfileDrive
 *fill*         0x00000000c0021f19        0x3 
 .data          0x00000000c0021f1c        0x4 coreobjs/c++.32
                0x00000000c0021f1c                __stack_chk_guard
 .data          0x00000000c0021f20        0x0 dbg/kconsole.32
 .data          0x00000000c0021f20        0x0 fs/vfs.32
 .data          0x00000000c0021f20        0x0 hal/bus.32
 .data          0x00000000c0021f20        0x0 hal/buzzer.32
 .data          0x00000000c0021f20        0x0 hal/clock.32
 .data          0x00000000c0021f20        0x0 hal/device.32
 .data          0x00000000c0021f20        0x0 hal/diskctrl.32
 .data          0x00000000c0021f20        0x0 hal/diskphys.32
 .data          0x00000000c0021f20        0x0 hal/fpu.32
 .data          0x00000000c0021f20        0x0 hal/intctrl.32
 .data          0x00000000c0021f20        0x0 hal/keybrd.32
 .data          0x00000000c0021f20        0x0 hal/logidisk.32
 .data          0x00000000c0021f20        0x0 hal/mouse.32
 .data          0x00000000c0021f20        0x0 hal/nic.32
 .data          0x00000000c0021f20        0x0 hal/partition.32
 .data          0x00000000c0021f20        0x0 hal/serial.32
 .data          0x00000000c0021f20        0x0 hal/timer.32
 .data          0x00000000c0021f20        0x0 hal/vcache.32
 .data          0x00000000c0021f20        0x0 hal/video.32
 .data          0x00000000c0021f20       0x10 hw/acpi.32
                0x00000000c0021f20                legacyIRQRemaps
 .data          0x00000000c0021f30        0x4 hw/cpu.32
                0x00000000c0021f30                lastCode
 *fill*         0x00000000c0021f34        0xc 
 .data          0x00000000c0021f40      0x142 krnl/bootmsg.32
                0x00000000c0021f40                KiSplashScreen
 *fill*         0x00000000c0022082       0x1e 
 .data          0x00000000c00220a0       0x4d krnl/env.32
                0x00000000c00220a0                defaultSysEnv
 .data          0x00000000c00220ed        0x0 krnl/inlines.32
 .data          0x00000000c00220ed        0x0 krnl/panic.32
 .data          0x00000000c00220ed        0x0 krnl/powctrl.32
 .data          0x00000000c00220ed        0x0 krnl/random.32
 .data          0x00000000c00220ed        0x0 krnl/resolve.32
 *fill*         0x00000000c00220ed       0x13 
 .data          0x00000000c0022100       0x4c krnl/signal.32
                0x00000000c0022100                KiDefaultSignalHandlers
 *fill*         0x00000000c002214c       0x14 
 .data          0x00000000c0022160       0xf0 krnl/syscalls.32
                0x00000000c0022160                systemCallHandlers
 .data          0x00000000c0022250        0x0 net/ethernet.32
 *fill*         0x00000000c0022250       0x10 
 .data          0x00000000c0022260      0x100 reg/cm.32
                0x00000000c0022260                CmComponents
 .data          0x00000000c0022360        0x0 reg/registry.32
 .data          0x00000000c0022360        0x0 sys/eject.32
 .data          0x00000000c0022360        0x0 sys/exit.32
 .data          0x00000000c0022360        0x0 sys/getcwd.32
 .data          0x00000000c0022360        0x0 sys/getpid.32
 .data          0x00000000c0022360        0x0 sys/getramdata.32
 .data          0x00000000c0022360        0x0 sys/getvgaptr.32
 .data          0x00000000c0022360        0x0 sys/kill.32
 .data          0x00000000c0022360        0x0 sys/loaddll.32
 .data          0x00000000c0022360        0x0 sys/read.32
 .data          0x00000000c0022360        0x0 sys/registersignal.32
 .data          0x00000000c0022360        0x0 sys/registry.32
 .data          0x00000000c0022360        0x0 sys/sbrk.32
 .data          0x00000000c0022360        0x0 sys/setcwd.32
 .data          0x00000000c0022360        0x0 sys/settime.32
 .data          0x00000000c0022360        0x0 sys/timezone.32
 .data          0x00000000c0022360        0x0 sys/write.32
 .data          0x00000000c0022360        0x0 sys/wsbe.32
 .data          0x00000000c0022360        0x0 sys/yield.32
 .data          0x00000000c0022360        0x0 thr/elf.32
 .data          0x00000000c0022360        0x4 thr/prcssthr.32
                0x00000000c0022360                Thr::nextPID
 .data          0x00000000c0022364        0x0 vm86/vm8086.32
 .data          0x00000000c0022364        0x0 arch/i386/hal.32
 .data          0x00000000c0022364        0x0 arch/i386/pic.32
 .data          0x00000000c0022364        0x0 arch/i386/rtc.32
 .data          0x00000000c0022364        0x0 arch/i386/vga.32
 .data          0x00000000c0022364        0x0 fs/fat/vfslink.32
 .data          0x00000000c0022364        0x0 fs/iso9660/helper.32
 .data          0x00000000c0022364        0x1 fs/iso9660/vfslink.32
                0x00000000c0022364                recentDriveletter
 .data          0x00000000c0022365        0x0 hal/sound/sndcard.32
 .data          0x00000000c0022365        0x0 hal/sound/sndport.32
 .data          0x00000000c0022365        0x0 hw/bus/isa.32
 .data          0x00000000c0022365        0x0 hw/bus/pci.32
 .data          0x00000000c0022365        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0022365        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0022365        0x0 hw/diskphys/ata.32
 .data          0x00000000c0022365        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0022365        0x0 hw/diskphys/sata.32
 .data          0x00000000c0022365        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0022365        0x0 hw/intctrl/apic.32
 .data          0x00000000c0022365        0x0 hw/timer/apictimer.32
 .data          0x00000000c0022365        0x0 hw/timer/pit.32
 .data          0x00000000c0022365        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0022365        0x0 crtn.32
 .data          0x00000000c0022365        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0022365        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0022365        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0022365        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0022368        0x0
 .got           0x00000000c0022368        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0022368        0x0
 .got.plt       0x00000000c0022368        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0022368        0x0
 .igot.plt      0x00000000c0022368        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0022368        0x0
 .tm_clone_table
                0x00000000c0022368        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0022368        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0022365      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0022365        0x3 
 .eh_frame      0x00000000c0022368        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0022368        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0022368       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00223c0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022400       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002246c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0023000       0x7d
 *(userkernel)
 userkernel     0x00000000c0023000       0x52 krnl/signal.32
                0x00000000c0023000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002302c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0023052       0x2b krnl/syscalls.32
                0x00000000c0023052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0024000        0x1
 *(align_previous)
 align_previous
                0x00000000c0024000        0x1 krnl/signal.32
                0x00000000c0024000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0024004        0x0
 .rel.got       0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0024001     0x4ba7
                0x00000000c0024001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0024001       0x1f 
 COMMON         0x00000000c0024020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0024020                dcache
                0x00000000c0024060                cdDriveLetter
                0x00000000c0024080                icache
 *(.bss)
 .bss           0x00000000c00240c0        0x0 crti.32
 .bss           0x00000000c00240c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00240e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00240e4       0x1c 
 .bss           0x00000000c0024100      0x378 core/malloc.32
 .bss           0x00000000c0024478        0x0 libk/ctype.32
 .bss           0x00000000c0024478        0x0 libk/string.32
 .bss           0x00000000c0024478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024478        0x8 
 .bss           0x00000000c0024480       0x88 fs/fat/ff.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0024508       0x18 
 .bss           0x00000000c0024520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0024eb8        0x6 core/computer.32
                0x00000000c0024eb8                Krnl::computer
                0x00000000c0024ebc                KeIsPreemptionOn
                0x00000000c0024ebd                KeIsSchedulingOn
 *fill*         0x00000000c0024ebe        0x2 
 .bss           0x00000000c0024ec0        0x6 core/gdt.32
                0x00000000c0024ec0                gdtDescr
 .bss           0x00000000c0024ec6        0x0 core/idle.32
 *fill*         0x00000000c0024ec6        0x2 
 .bss           0x00000000c0024ec8        0x6 core/idt.32
                0x00000000c0024ec8                idtDescr
 .bss           0x00000000c0024ece        0x0 core/kheap.32
 *fill*         0x00000000c0024ece        0x2 
 .bss           0x00000000c0024ed0        0x4 core/main.32
                0x00000000c0024ed0                sysBootSettings
 .bss           0x00000000c0024ed4       0x29 core/physmgr.32
                0x00000000c0024ed4                Phys::forbidEvictions
                0x00000000c0024ed8                Phys::currentPagePointer
                0x00000000c0024edc                Phys::highestMem
                0x00000000c0024ee0                Phys::oldPercent
                0x00000000c0024ee4                Phys::usedPages
                0x00000000c0024ee8                Phys::usablePages
                0x00000000c0024eec                Phys::dmaUsage
 .bss           0x00000000c0024efd        0x0 core/pipe.32
 *fill*         0x00000000c0024efd        0x3 
 .bss           0x00000000c0024f00        0x9 core/terminal.32
                0x00000000c0024f00                terminalCycle
                0x00000000c0024f04                activeTerminal
                0x00000000c0024f08                VgaText::graphicMode
 *fill*         0x00000000c0024f09        0x1 
 .bss           0x00000000c0024f0a        0x2 core/tss.32
                0x00000000c0024f0a                doubleFaultSelector
 *fill*         0x00000000c0024f0c       0x14 
 .bss           0x00000000c0024f20       0x84 core/unixfile.32
                0x00000000c0024f20                sfileLpt
                0x00000000c0024f60                sfileCom
                0x00000000c0024f84                sfileNul
                0x00000000c0024f88                sfilePnt
                0x00000000c0024f8c                sfileAux
                0x00000000c0024f90                sfileCon
                0x00000000c0024f94                initialFilesAdded
                0x00000000c0024f98                unixFileLinkedList
 .bss           0x00000000c0024fa4       0x10 core/virtmgr.32
                0x00000000c0024fa4                twswaps
                0x00000000c0024fa8                swapBalance
                0x00000000c0024fac                Virt::swapfileBitmap
                0x00000000c0024fb0                firstVAS
 .bss           0x00000000c0024fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0024fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0024fb4        0x4 fs/vfs.32
                0x00000000c0024fb4                installedFilesystems
 .bss           0x00000000c0024fb8        0x0 hal/bus.32
 .bss           0x00000000c0024fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0024fb8        0x8 hal/clock.32
                0x00000000c0024fb8                User::dstOn
                0x00000000c0024fb9                User::timezoneHalfHourOffset
                0x00000000c0024fbc                User::timezoneHourOffset
 .bss           0x00000000c0024fc0        0x0 hal/device.32
 .bss           0x00000000c0024fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0024fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0024fc0        0x0 hal/fpu.32
 .bss           0x00000000c0024fc0     0x2000 hal/intctrl.32
                0x00000000c0024fc0                INT_contexts
                0x00000000c0025fc0                INT_handlers
 .bss           0x00000000c0026fc0      0x429 hal/keybrd.32
                0x00000000c0026fc0                keyboardWaitingTaskList
                0x00000000c0026fc4                keyboardSetupYet
                0x00000000c0026fc8                guiKeyboardHandler
                0x00000000c0026fe0                keystates
 *fill*         0x00000000c00273e9       0x17 
 .bss           0x00000000c0027400       0x88 hal/logidisk.32
                0x00000000c0027400                diskAssignments
                0x00000000c0027420                disks
 .bss           0x00000000c0027488        0x4 hal/mouse.32
                0x00000000c0027488                guiMouseHandler
 .bss           0x00000000c002748c        0x0 hal/nic.32
 .bss           0x00000000c002748c        0x0 hal/partition.32
 .bss           0x00000000c002748c        0x0 hal/serial.32
 .bss           0x00000000c002748c        0x4 hal/timer.32
                0x00000000c002748c                milliTenthsSinceBoot
 .bss           0x00000000c0027490        0x0 hal/vcache.32
 .bss           0x00000000c0027490        0x4 hal/video.32
                0x00000000c0027490                screen
 *fill*         0x00000000c0027494        0xc 
 .bss           0x00000000c00274a0      0x480 hw/acpi.32
                0x00000000c00274a0                systemSleepFunction
                0x00000000c00274a4                systemResetFunction
                0x00000000c00274a8                systemShutdownFunction
                0x00000000c00274ac                nextACPITable
                0x00000000c00274c0                acpiTables
                0x00000000c00276c0                usingXSDT
                0x00000000c00276c4                MADTpointer
                0x00000000c00276c8                RSDTpointer
                0x00000000c00276cc                RSDPpointer
                0x00000000c00276d0                nextAPICNMI
                0x00000000c00276e0                apicNMIInfo
                0x00000000c0027760                legacyIRQFlags
                0x00000000c0027780                ioapicDiscoveryNumber
                0x00000000c00277a0                ioapicFoundInMADT
                0x00000000c00277c0                ioapicAddresses
                0x00000000c0027840                ioapicGSIBase
                0x00000000c00278c0                processorDiscoveryNumber
                0x00000000c00278e0                matchingAPICID
                0x00000000c0027900                processorID
 .bss           0x00000000c0027920       0x10 hw/cpu.32
                0x00000000c0027920                lastD
                0x00000000c0027924                lastC
                0x00000000c0027928                lastB
                0x00000000c002792c                lastA
 .bss           0x00000000c0027930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0027930        0x8 krnl/env.32
                0x00000000c0027930                Krnl::userEnv
                0x00000000c0027934                Krnl::systemEnv
 .bss           0x00000000c0027938        0x0 krnl/inlines.32
 .bss           0x00000000c0027938        0x1 krnl/panic.32
                0x00000000c0027938                KeIsKernelInPanic
 *fill*         0x00000000c0027939        0x7 
 .bss           0x00000000c0027940       0x48 krnl/powctrl.32
                0x00000000c0027940                Krnl::powCtrlOnBattery
                0x00000000c0027960                Krnl::currentPowerSettings
                0x00000000c0027984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0027988        0x8 krnl/random.32
                0x00000000c0027988                kiRandSeed
 .bss           0x00000000c0027990        0x0 krnl/resolve.32
 .bss           0x00000000c0027990        0x0 krnl/signal.32
 .bss           0x00000000c0027990        0x0 krnl/syscalls.32
 .bss           0x00000000c0027990        0x0 net/ethernet.32
 .bss           0x00000000c0027990        0x4 reg/cm.32
 .bss           0x00000000c0027994        0x0 reg/registry.32
 .bss           0x00000000c0027994        0x0 sys/eject.32
 .bss           0x00000000c0027994        0x0 sys/exit.32
 .bss           0x00000000c0027994        0x0 sys/getcwd.32
 .bss           0x00000000c0027994        0x0 sys/getpid.32
 .bss           0x00000000c0027994        0x0 sys/getramdata.32
 .bss           0x00000000c0027994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0027994        0x0 sys/kill.32
 .bss           0x00000000c0027994        0x0 sys/loaddll.32
 .bss           0x00000000c0027994        0x0 sys/read.32
 .bss           0x00000000c0027994        0x0 sys/registersignal.32
 .bss           0x00000000c0027994        0x0 sys/registry.32
 .bss           0x00000000c0027994        0x0 sys/sbrk.32
 .bss           0x00000000c0027994        0x0 sys/setcwd.32
 .bss           0x00000000c0027994        0x0 sys/settime.32
 .bss           0x00000000c0027994        0x0 sys/timezone.32
 .bss           0x00000000c0027994        0x0 sys/write.32
 .bss           0x00000000c0027994        0x0 sys/wsbe.32
 .bss           0x00000000c0027994        0x0 sys/yield.32
 *fill*         0x00000000c0027994        0xc 
 .bss           0x00000000c00279a0      0x7a4 thr/elf.32
                0x00000000c00279a0                Thr::driverLookupNext
                0x00000000c00279c0                Thr::driverLookupLen
                0x00000000c0027bc0                Thr::driverLookupAddr
                0x00000000c0027dc0                Thr::driverNameLookup
                0x00000000c0027fc0                Thr::kernelSymbols
                0x00000000c0028040                Thr::kernelStringTable
                0x00000000c00280c0                Thr::kernelSymbolTable
                0x00000000c0028140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0028144        0x4 
 .bss           0x00000000c0028148       0x68 thr/prcssthr.32
                0x00000000c0028148                cleanerThread
                0x00000000c002814c                weNeedTheCleanerToNotBlock
                0x00000000c0028150                retValLockStuff
                0x00000000c0028154                retValSchedLock
                0x00000000c0028158                lockStuffLock
                0x00000000c002815c                schedulerLock
                0x00000000c0028160                taskSwitchesPostponedFlag
                0x00000000c0028164                postponeTaskSwitchesCounter
                0x00000000c0028168                irqDisableCounter
                0x00000000c002816c                terminatedTaskList
                0x00000000c0028178                sleepingTaskList
                0x00000000c0028184                taskList
                0x00000000c0028190                kernelProcess
 *fill*         0x00000000c00281b0       0x10 
 .bss           0x00000000c00281c0       0x40 vm86/vm8086.32
                0x00000000c00281c0                Vm::vmRetV
                0x00000000c00281c4                Vm::vmDone
                0x00000000c00281c5                Vm::vmReady
                0x00000000c00281c8                Vm::vm86Thread
                0x00000000c00281cc                Vm::vmToHostCommsPtr
                0x00000000c00281e0                Vm::vmToHostComms
 .bss           0x00000000c0028200       0x14 arch/i386/hal.32
                0x00000000c0028200                apic
                0x00000000c0028204                fpuOwner
                0x00000000c0028208                coproLoadFunc
                0x00000000c002820c                coproSaveFunc
                0x00000000c0028210                gpFaultIntercept
 .bss           0x00000000c0028214        0x0 arch/i386/pic.32
 .bss           0x00000000c0028214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0028216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0028216        0xa 
 .bss           0x00000000c0028220       0xf0 fs/fat/vfslink.32
                0x00000000c0028220                FAT::fats
                0x00000000c0028240                FAT::vfsToFatRemaps
                0x00000000c00282c0                fatToVFSRemaps
 .bss           0x00000000c0028310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0028310       0x10 
 .bss           0x00000000c0028320      0x820 fs/iso9660/vfslink.32
                0x00000000c0028320                iso9660Owner
                0x00000000c0028324                recentSector
                0x00000000c0028340                recentBuffer
 .bss           0x00000000c0028b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0028b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0028b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0028b40        0xd hw/bus/pci.32
                0x00000000c0028b40                thePCI
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0028b4d        0x3 
 .bss           0x00000000c0028b50        0x8 hw/diskphys/ata.32
                0x00000000c0028b50                ataSectorsWritten
                0x00000000c0028b54                ataSectorsRead
 .bss           0x00000000c0028b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0028b58        0x8 
 .bss           0x00000000c0028b60       0x41 hw/intctrl/apic.32
                0x00000000c0028b60                noOfIOAPICs
                0x00000000c0028b80                ioapics
                0x00000000c0028ba0                IOAPICsSetupYet
 .bss           0x00000000c0028ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0028ba1        0x3 
 .bss           0x00000000c0028ba4        0x4 hw/timer/pit.32
                0x00000000c0028ba4                pitFreq
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0028ba8        0x0 crtn.32
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0028ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
