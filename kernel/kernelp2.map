Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f73a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x6c9 fs/symlink.32
                0x00000000c000ae63                KiDeinitialiseSymlinks(void*)
                0x00000000c000aef4                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000af77                KiIsSymlinkRegistered(char const*)
                0x00000000c000afd0                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b1eb                KeCreateSymlink(char const*, char const*)
                0x00000000c000b327                KeInitialiseSymlinks()
 *fill*         0x00000000c000b3dd        0x1 
 .text          0x00000000c000b3de      0xd6c fs/vfs.32
                0x00000000c000b3de                File::read(unsigned long long, void*, int*)
                0x00000000c000b436                File::write(unsigned long long, void*, int*)
                0x00000000c000b48e                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b4e6                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b514                File::isAtty()
                0x00000000c000b518                Directory::isAtty()
                0x00000000c000b51c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b522                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b528                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b52e                File::~File()
                0x00000000c000b52e                File::~File()
                0x00000000c000b552                File::~File()
                0x00000000c000b57c                Directory::~Directory()
                0x00000000c000b57c                Directory::~Directory()
                0x00000000c000b5a0                Directory::~Directory()
                0x00000000c000b5ca                Filesystem::Filesystem()
                0x00000000c000b5ca                Filesystem::Filesystem()
                0x00000000c000b5ee                Filesystem::~Filesystem()
                0x00000000c000b5ee                Filesystem::~Filesystem()
                0x00000000c000b5fc                Filesystem::~Filesystem()
                0x00000000c000b620                Fs::getcwd(Process*, char*, int)
                0x00000000c000b64a                Fs::initVFS()
                0x00000000c000b674                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000b892                File::File(char const*, Process*, bool)
                0x00000000c000b892                File::File(char const*, Process*, bool)
                0x00000000c000b970                File::File(char const*, Process*)
                0x00000000c000b970                File::File(char const*, Process*)
                0x00000000c000b98e                File::open(FileOpenMode)
                0x00000000c000b9ec                File::close()
                0x00000000c000ba4c                File::seek(unsigned long long)
                0x00000000c000baa2                File::truncate(unsigned long long)
                0x00000000c000baf8                File::tell(unsigned long long*)
                0x00000000c000bb48                File::rewind()
                0x00000000c000bb5c                File::unlink()
                0x00000000c000bba8                File::rename(char const*)
                0x00000000c000bbf6                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bc52                File::exists()
                0x00000000c000bc90                File::stat(unsigned long long*, bool*)
                0x00000000c000bcf1                Fs::setcwd(Process*, char*)
                0x00000000c000be50                Directory::Directory(char const*, Process*)
                0x00000000c000be50                Directory::Directory(char const*, Process*)
                0x00000000c000bf18                Directory::open()
                0x00000000c000bf74                Directory::close()
                0x00000000c000bfd4                Directory::unlink()
                0x00000000c000c020                Directory::rename(char const*)
                0x00000000c000c06e                Directory::exists()
                0x00000000c000c0ac                Directory::read(dirent*)
                0x00000000c000c0f8                Directory::create()
                0x00000000c000c144                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c14a        0x2 
 .text          0x00000000c000c14c       0x86 hal/bus.32
                0x00000000c000c14c                Bus::Bus(char const*)
                0x00000000c000c14c                Bus::Bus(char const*)
                0x00000000c000c184                Bus::~Bus()
                0x00000000c000c184                Bus::~Bus()
                0x00000000c000c1a8                Bus::~Bus()
 .text          0x00000000c000c1d2       0x96 hal/buzzer.32
                0x00000000c000c1d2                beepThread(void*)
                0x00000000c000c20f                Krnl::beep(int, int, bool)
 .text          0x00000000c000c268      0x465 hal/clock.32
                0x00000000c000c268                User::loadClockSettings(int)
                0x00000000c000c2ba                Clock::Clock(char const*)
                0x00000000c000c2ba                Clock::Clock(char const*)
                0x00000000c000c2f0                Clock::~Clock()
                0x00000000c000c2f0                Clock::~Clock()
                0x00000000c000c314                Clock::~Clock()
                0x00000000c000c33e                Clock::timeInSecondsLocal()
                0x00000000c000c386                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c3df                datetimeToSeconds(datetime_t)
                0x00000000c000c504                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c564                secondsToDatetime(unsigned long long)
                0x00000000c000c6a8                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c6cd        0x1 
 .text          0x00000000c000c6ce      0x464 hal/device.32
                0x00000000c000c6ce                Device::hibernate()
                0x00000000c000c6d0                Device::wake()
                0x00000000c000c6d2                Device::detect()
                0x00000000c000c6d4                Device::disableLegacy()
                0x00000000c000c6d6                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c6d8                DriverlessDevice::close(int, int, void*)
                0x00000000c000c6dc                DriverlessDevice::detect()
                0x00000000c000c6de                DriverlessDevice::open(int, int, void*)
                0x00000000c000c6f2                Device::~Device()
                0x00000000c000c6f2                Device::~Device()
                0x00000000c000c700                Device::~Device()
                0x00000000c000c728                Device::findAndLoadDriver()
                0x00000000c000c736                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c75c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c79c                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c7c6                Device::getParent()
                0x00000000c000c7d2                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c7f0                Device::addChild(Device*)
                0x00000000c000c834                Device::removeAllChildren()
                0x00000000c000c87a                Device::hibernateAll()
                0x00000000c000c8aa                Device::wakeAll()
                0x00000000c000c8da                Device::detectAll()
                0x00000000c000c90a                Device::disableLegacyAll()
                0x00000000c000c90c                Device::loadDriversForAll()
                0x00000000c000c90e                Device::closeAll()
                0x00000000c000c944                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c97a                Device::setName(char const*)
                0x00000000c000c988                Device::Device(char const*)
                0x00000000c000c988                Device::Device(char const*)
                0x00000000c000ca84                Device::getName()
                0x00000000c000ca8e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000ca8e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cac4                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cb08                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000cb32        0x2 
 .text          0x00000000c000cb34       0x86 hal/diskctrl.32
                0x00000000c000cb34                HardDiskController::HardDiskController(char const*)
                0x00000000c000cb34                HardDiskController::HardDiskController(char const*)
                0x00000000c000cb6c                HardDiskController::~HardDiskController()
                0x00000000c000cb6c                HardDiskController::~HardDiskController()
                0x00000000c000cb90                HardDiskController::~HardDiskController()
 .text          0x00000000c000cbba       0xe2 hal/diskphys.32
                0x00000000c000cbba                PhysicalDisk::eject()
                0x00000000c000cbbe                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cbbe                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cc26                PhysicalDisk::startCache()
                0x00000000c000cc4e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cc4e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cc72                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cc9c        0x0 hal/fpu.32
 .text          0x00000000c000cc9c      0x360 hal/intctrl.32
                0x00000000c000cc9c                int_handler
                0x00000000c000cd26                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cd70                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ceb3                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000cee7                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000cf5d                setupINTS()
                0x00000000c000cfba                convertLegacyIRQNumber(int)
 .text          0x00000000c000cffc      0x8be hal/keybrd.32
                0x00000000c000cffc                startGUI(void*)
                0x00000000c000d06a                startGUIVESA(void*)
                0x00000000c000d0d8                sendKeyToTerminal(unsigned char)
                0x00000000c000d1b3                sendKeyboardToken(KeyboardToken)
                0x00000000c000d69d                clearInternalKeybuffer(VgaText*)
                0x00000000c000d6d2                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d830                Keyboard::Keyboard(char const*)
                0x00000000c000d830                Keyboard::Keyboard(char const*)
                0x00000000c000d86c                Keyboard::~Keyboard()
                0x00000000c000d86c                Keyboard::~Keyboard()
                0x00000000c000d890                Keyboard::~Keyboard()
 .text          0x00000000c000d8ba      0x3f8 hal/logidisk.32
                0x00000000c000d8ba                LogicalDisk::close(int, int, void*)
                0x00000000c000d8be                LogicalDisk::~LogicalDisk()
                0x00000000c000d8be                LogicalDisk::~LogicalDisk()
                0x00000000c000d8e2                LogicalDisk::~LogicalDisk()
                0x00000000c000d90c                LogicalDisk::open(int, int, void*)
                0x00000000c000d920                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d958                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d99e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d99e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000da5e                LogicalDisk::assignDriveLetter()
                0x00000000c000db18                LogicalDisk::mount()
                0x00000000c000db60                LogicalDisk::unmount()
                0x00000000c000db70                LogicalDisk::eject()
                0x00000000c000db84                LogicalDisk::unassignDriveLetter()
                0x00000000c000dbda                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000dc46                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000dcb2        0x2 
 .text          0x00000000c000dcb4       0x86 hal/mouse.32
                0x00000000c000dcb4                Mouse::Mouse(char const*)
                0x00000000c000dcb4                Mouse::Mouse(char const*)
                0x00000000c000dcec                Mouse::~Mouse()
                0x00000000c000dcec                Mouse::~Mouse()
                0x00000000c000dd10                Mouse::~Mouse()
 .text          0x00000000c000dd3a       0x90 hal/nic.32
                0x00000000c000dd3a                NIC::getMAC()
                0x00000000c000dd40                NIC::write(int, unsigned char*, int*)
                0x00000000c000dd46                NIC::NIC(char const*)
                0x00000000c000dd46                NIC::NIC(char const*)
                0x00000000c000dd7c                NIC::~NIC()
                0x00000000c000dd7c                NIC::~NIC()
                0x00000000c000dda0                NIC::~NIC()
 .text          0x00000000c000ddca      0x33b hal/partition.32
                0x00000000c000ddca                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000de72                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e105        0x3 
 .text          0x00000000c000e108       0x86 hal/serial.32
                0x00000000c000e108                Serial::Serial(char const*)
                0x00000000c000e108                Serial::Serial(char const*)
                0x00000000c000e140                Serial::~Serial()
                0x00000000c000e140                Serial::~Serial()
                0x00000000c000e164                Serial::~Serial()
 *fill*         0x00000000c000e18e        0x2 
 .text          0x00000000c000e190      0x234 hal/timer.32
                0x00000000c000e190                Timer::Timer(char const*)
                0x00000000c000e190                Timer::Timer(char const*)
                0x00000000c000e1c8                Timer::~Timer()
                0x00000000c000e1c8                Timer::~Timer()
                0x00000000c000e1ec                Timer::~Timer()
                0x00000000c000e216                Timer::read()
                0x00000000c000e221                setupTimer(int)
                0x00000000c000e25c                timerHandler(unsigned int)
 .text          0x00000000c000e3c4      0x450 hal/vcache.32
                0x00000000c000e3c4                VCache::VCache(PhysicalDisk*)
                0x00000000c000e3c4                VCache::VCache(PhysicalDisk*)
                0x00000000c000e534                VCache::invalidateReadBuffer()
                0x00000000c000e544                VCache::writeWriteBuffer()
                0x00000000c000e590                VCache::~VCache()
                0x00000000c000e590                VCache::~VCache()
                0x00000000c000e5e8                VCache::~VCache()
                0x00000000c000e610                VCache::write(unsigned long long, int, void*)
                0x00000000c000e70a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e814      0x4d9 hal/video.32
                0x00000000c000e814                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e860                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e8d0                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e960                Video::clearScreen(unsigned int)
                0x00000000c000e994                Video::putpixel(int, int, unsigned int)
                0x00000000c000e9a2                Video::readPixelApprox(int, int)
                0x00000000c000e9b6                Video::Video(char const*)
                0x00000000c000e9b6                Video::Video(char const*)
                0x00000000c000e9ec                Video::~Video()
                0x00000000c000e9ec                Video::~Video()
                0x00000000c000ea10                Video::~Video()
                0x00000000c000ea3a                Video::isMonochrome()
                0x00000000c000ea46                Video::getWidth()
                0x00000000c000ea52                Video::getHeight()
                0x00000000c000ea5e                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000eb1a                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ec82                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eced        0x3 
 .text          0x00000000c000ecf0     0x12d2 hw/acpi.32
                0x00000000c000ecf0                ACPI::close(int, int, void*)
                0x00000000c000eda4                findRSDP()
                0x00000000c000ee3c                loadACPITables(unsigned char*)
                0x00000000c000f0a8                findRSDT(unsigned char*)
                0x00000000c000f200                findDataTable(unsigned char*, char*)
                0x00000000c000f280                scanMADT()
                0x00000000c000f738                ACPI::ACPI()
                0x00000000c000f738                ACPI::ACPI()
                0x00000000c000f78c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f888                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f954                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f95c                ACPI::detectPCI()
                0x00000000c000fb7c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fbc4                ACPI::sleep()
                0x00000000c000fbe0                ACPI::open(int, int, void*)
 .text          0x00000000c000ffc2      0xbc5 hw/cpu.32
                0x00000000c000ffc2                CPU::close(int, int, void*)
                0x00000000c000ffc6                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000ffe2                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000fffa                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c001006e                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00100f2                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010120                CPU::cpuidCheckECX(unsigned int)
                0x00000000c001014e                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001017c                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00101aa                CPU::CPU()
                0x00000000c00101aa                CPU::CPU()
                0x00000000c0010238                CPU::displayFeatures()
                0x00000000c001023a                CPU::detectFeatures()
                0x00000000c001090e                CPU::setupSMEP()
                0x00000000c001091a                CPU::setupUMIP()
                0x00000000c0010924                CPU::setupTSC()
                0x00000000c001092e                CPU::setupLargePages()
                0x00000000c0010938                CPU::setupPAT()
                0x00000000c0010974                CPU::setupMTRR()
                0x00000000c0010976                CPU::setupGlobalPages()
                0x00000000c0010980                CPU::allowUsermodeDataAccess()
                0x00000000c0010992                CPU::prohibitUsermodeDataAccess()
                0x00000000c00109a4                CPU::setupSMAP()
                0x00000000c00109b2                CPU::setupFeatures()
                0x00000000c0010a7e                CPU::open(int, int, void*)
 .text          0x00000000c0010b87       0xb6 krnl/atexit.32
                0x00000000c0010b87                KeInitialiseAtexit()
                0x00000000c0010ba6                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010bda                KeExecuteAtexit()
 .text          0x00000000c0010c3d       0xdf krnl/bootmsg.32
                0x00000000c0010c3d                KeDisplaySplashScreen()
                0x00000000c0010cb9                KeSetBootMessage(char const*)
 .text          0x00000000c0010d1c       0x1d krnl/compat.32
                0x00000000c0010d1c                Krnl::handlePowerButton()
                0x00000000c0010d2c                Krnl::handleSleepButton()
 .text          0x00000000c0010d39       0x2b krnl/crc32.32
                0x00000000c0010d39                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010d64      0x5bf krnl/env.32
                0x00000000c0010d64                EnvVarContainer::getEnv(char const*)
                0x00000000c0010da2                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010e64                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010e66                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001108a                EnvVarContainer::__loadSystem()
                0x00000000c00110a4                EnvVarContainer::__loadUser()
                0x00000000c00110a6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00110a6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00110c8                EnvVarContainer::~EnvVarContainer()
                0x00000000c00110c8                EnvVarContainer::~EnvVarContainer()
                0x00000000c00110f8                KeGetEnv(Process*, char const*)
                0x00000000c001115d                KeSetEnvSystem(char const*, char const*)
                0x00000000c0011177                KeSetEnvUser(char const*, char const*)
                0x00000000c0011196                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00111a9                KeDeleteEnvSystem(char const*)
                0x00000000c00111aa                KeDeleteEnvUser(char const*)
                0x00000000c00111ab                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00111ac                KeNewProcessEnv(Process*)
                0x00000000c00111ce                KeCopyProcessEnv(Process*, Process*)
                0x00000000c001121a                KeLoadSystemEnv()
                0x00000000c0011248                KeLoadUserEnv()
                0x00000000c001126e                KeFlushEnv()
                0x00000000c001126f                KeGetProcessTotalEnvCount(Process*)
                0x00000000c001128f                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011323       0x94 krnl/inlines.32
                0x00000000c0011323                CPU::current()
                0x00000000c001132f                operator new(unsigned long)
                0x00000000c0011334                operator delete(void*)
                0x00000000c0011339                disableIRQs()
                0x00000000c001133b                enableIRQs()
                0x00000000c001133d                lockScheduler()
                0x00000000c0011345                unlockScheduler()
                0x00000000c0011354                lockStuff()
                0x00000000c0011362                unlockStuff()
                0x00000000c001139c                Virt::getAKernelVAS()
                0x00000000c00113a2                __not_memcpy
 .text          0x00000000c00113b7        0xc krnl/panic.32
                0x00000000c00113b7                KePanic(char const*)
 .text          0x00000000c00113c3      0x142 krnl/powctrl.32
                0x00000000c00113c3                KePowerThread(void*)
                0x00000000c00113f1                KeChangePowerSettings(PowerSettings)
                0x00000000c0011407                KeUserIOReceived()
                0x00000000c0011412                KeHandlePowerButton()
                0x00000000c0011447                KeHandleSleepButton()
                0x00000000c001147c                KeSetupPowerManager()
 .text          0x00000000c0011505       0x9b krnl/random.32
                0x00000000c0011505                KeRand()
                0x00000000c0011545                KeSeedRand(unsigned int)
                0x00000000c001156e                KeInitRand()
 .text          0x00000000c00115a0      0x1bc krnl/resolve.32
                0x00000000c00115a0                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c001175c      0x31f krnl/signal.32
                0x00000000c001175c                KiSigKill(int)
                0x00000000c0011770                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011771                KiDefaultSignalHandlerPause(int)
                0x00000000c001179d                KiDefaultSignalHandlerResume(int)
                0x00000000c00117c9                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00117ce                KeInitSignals()
                0x00000000c001181d                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011853                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00118d0                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c00119c7                KiCheckSignalZ
                0x00000000c0011a09                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011a44                KiFinishSignalZ
 .text          0x00000000c0011a7b      0xdf8 krnl/syscalls.32
                0x00000000c0011a7b                SysSeekDir(regs*)
                0x00000000c0011a80                SysTellDir(regs*)
                0x00000000c0011a85                SysVerify(regs*)
                0x00000000c0011a8f                SysGetArgc(regs*)
                0x00000000c0011aa3                SysTTYName(regs*)
                0x00000000c0011aab                SysFormatDisk(regs*)
                0x00000000c0011b12                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011b66                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011bbf                SysShutdown(regs*)
                0x00000000c0011c4c                SysRealpath(regs*)
                0x00000000c0011c9a                SysReadDir(regs*)
                0x00000000c0011d1a                SysIsATTY(regs*)
                0x00000000c0011d74                SysSeek(regs*)
                0x00000000c0011dce                SysTell(regs*)
                0x00000000c0011e3b                SysSize(regs*)
                0x00000000c0011eae                SysSizeFromFilename(regs*)
                0x00000000c0011fc5                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c00120dc                SysClose(regs*)
                0x00000000c001213c                SysOpenDir(regs*)
                0x00000000c00121b9                SysMakeDir(regs*)
                0x00000000c0012227                SysCloseDir(regs*)
                0x00000000c0012276                SysWait(regs*)
                0x00000000c0012297                SysNotImpl(regs*)
                0x00000000c00122b2                SysPanic(regs*)
                0x00000000c00122cd                SysRmdir(regs*)
                0x00000000c001232b                SysUnlink(regs*)
                0x00000000c0012389                SysGetArgv(regs*)
                0x00000000c00123d6                SysUSleep(regs*)
                0x00000000c00123ff                SysSpawn(regs*)
                0x00000000c0012470                SysGetEnv(regs*)
                0x00000000c0012525                SysSetFatAttrib(regs*)
                0x00000000c001258e                SysPipe(regs*)
                0x00000000c00125d3                SysGetUnixTime(regs*)
                0x00000000c00125e7                string_ends_with(char const*, char const*)
                0x00000000c0012632                SysOpen(regs*)
                0x00000000c0012831                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012873        0x1 
 .text          0x00000000c0012874      0x159 net/ethernet.32
                0x00000000c0012874                KeSwitchEndian16(unsigned short)
                0x00000000c0012898                KeSwitchEndian32(unsigned int)
                0x00000000c00128c8                EthernetCRC32(unsigned char*, int)
                0x00000000c001296c                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c00129cd      0xd51 reg/cm.32
                0x00000000c00129cd                CmOpen(char const*)
                0x00000000c0012aeb                CmClose(Reghive_Tag*)
                0x00000000c0012b01                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012b3d                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012bb4                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012bf3                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012c25                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012c61                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012c89                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012caa                CmExpand(Reghive_Tag*, int)
                0x00000000c0012d25                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012dab                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012e9f                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012fd7                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0013038                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0013068                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c001309f                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00130c9                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013109                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00131ad                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c00131db                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013378                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00133c5                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001343f                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c0013492                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013556                zStrtok(char*, char const*)
                0x00000000c00135c8                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013649                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00136ec                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c001371e      0x545 reg/registry.32
                0x00000000c001371e                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00138aa                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00139ff                Reg::getLine(char*, char*, char*)
                0x00000000c0013a36                Reg::readInt(char*, char*, int*)
                0x00000000c0013b24                Reg::readString(char*, char*, char*, int)
                0x00000000c0013ba5                Reg::readBool(char*, char*, bool*)
                0x00000000c0013bca                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013bf6                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013c22                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013c63       0x36 sys/eject.32
                0x00000000c0013c63                SysEject(regs*)
 .text          0x00000000c0013c99       0x18 sys/exit.32
                0x00000000c0013c99                SysExit(regs*)
 .text          0x00000000c0013cb1       0x1f sys/getcwd.32
                0x00000000c0013cb1                SysGetCwd(regs*)
 .text          0x00000000c0013cd0        0xc sys/getpid.32
                0x00000000c0013cd0                SysGetPID(regs*)
 .text          0x00000000c0013cdc       0x1a sys/getramdata.32
                0x00000000c0013cdc                SysGetRAMData(regs*)
 .text          0x00000000c0013cf6       0x82 sys/getvgaptr.32
                0x00000000c0013cf6                SysGetVGAPtr(regs*)
 .text          0x00000000c0013d78       0xb9 sys/kill.32
                0x00000000c0013d78                SysKill(regs*)
 .text          0x00000000c0013e31       0xa8 sys/loaddll.32
                0x00000000c0013e31                SysLoadDLL(regs*)
 .text          0x00000000c0013ed9       0x68 sys/read.32
                0x00000000c0013ed9                SysRead(regs*)
 .text          0x00000000c0013f41       0x29 sys/registersignal.32
                0x00000000c0013f41                SysRegisterSignal(regs*)
 .text          0x00000000c0013f6a      0x19c sys/registry.32
                0x00000000c0013f6a                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013fe1                SysRegistryReadExtent(regs*)
                0x00000000c0014029                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014051                SysRegistryEnterDirectory(regs*)
                0x00000000c0014079                SysRegistryGetNext(regs*)
                0x00000000c00140a1                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00140db                SysRegistryOpen(regs*)
                0x00000000c00140ef                SysRegistryClose(regs*)
 .text          0x00000000c0014106       0x55 sys/sbrk.32
                0x00000000c0014106                SysSbrk(regs*)
 .text          0x00000000c001415b       0x1c sys/setcwd.32
                0x00000000c001415b                SysSetCwd(regs*)
 .text          0x00000000c0014177       0x96 sys/settime.32
                0x00000000c0014177                SysSetTime(regs*)
 .text          0x00000000c001420d       0x2d sys/symlink.32
                0x00000000c001420d                SysSymlink(regs*)
 .text          0x00000000c001423a       0x4a sys/timezone.32
                0x00000000c001423a                SysTimezone(regs*)
 .text          0x00000000c0014284       0xfc sys/truncate.32
                0x00000000c0014284                SysTruncate(regs*)
 .text          0x00000000c0014380       0x68 sys/write.32
                0x00000000c0014380                SysWrite(regs*)
 .text          0x00000000c00143e8       0x62 sys/wsbe.32
                0x00000000c00143e8                SysWsbe(regs*)
 .text          0x00000000c001444a       0x25 sys/yield.32
                0x00000000c001444a                SysYield(regs*)
 .text          0x00000000c001446f     0x1203 thr/elf.32
                0x00000000c001446f                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00146f6                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014915                Thr::runtimeReferenceHelper()
                0x00000000c0014928                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014977                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014c35                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015376                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00153a8                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00153df                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00153f9                Thr::loadDLL(char const*, bool)
                0x00000000c0015639                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0015672        0x2 
 .text          0x00000000c0015674     0x13b5 thr/prcssthr.32
                0x00000000c0015674                userModeEntryPoint(void*)
                0x00000000c001569c                changeTSS
                0x00000000c00156cc                switchToThread(ThreadControlBlock*)
                0x00000000c001577c                Process::addArgs(char**)
                0x00000000c00157e8                Process::Process(char const*, Process*, char**)
                0x00000000c00157e8                Process::Process(char const*, Process*, char**)
                0x00000000c00159f4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00159f4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015bc8                taskStartupFunction
                0x00000000c0015bd4                Semaphore::Semaphore(int)
                0x00000000c0015bd4                Semaphore::Semaphore(int)
                0x00000000c0015c04                Mutex::Mutex()
                0x00000000c0015c04                Mutex::Mutex()
                0x00000000c0015c18                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015d20                Process::createUserThread()
                0x00000000c0015d40                setupMultitasking(void (*)())
                0x00000000c0015e64                schedule()
                0x00000000c0015ef8                Semaphore::tryAcquire()
                0x00000000c0015fb8                Semaphore::assertLocked(char const*)
                0x00000000c001603c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016064                blockTask(TaskState)
                0x00000000c001609c                waitTask(int, int*, int)
                0x00000000c00160e0                milliTenthSleepUntil(unsigned int)
                0x00000000c0016180                milliTenthSleep(unsigned int)
                0x00000000c0016194                sleep(unsigned int)
                0x00000000c00161a4                Semaphore::acquire()
                0x00000000c001626c                taskReturned
                0x00000000c00162b0                Thr::processFromPID(int)
                0x00000000c001635c                unblockTask(ThreadControlBlock*)
                0x00000000c0016408                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00166dc                cleanerTaskFunction(void*)
                0x00000000c00167e4                terminateTask(int)
                0x00000000c00168d0                Thr::terminateFromIRQ(int)
                0x00000000c00168e0                Semaphore::release()
 .text          0x00000000c0016a29      0xc31 vm86/vm8086.32
                0x00000000c0016a29                Vm::inbv(unsigned short)
                0x00000000c0016a3c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016a72                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016a82                Vm::getSegment(unsigned int)
                0x00000000c0016a8a                Vm::getOffset(unsigned int)
                0x00000000c0016a8f                Vm::mainloop2()
                0x00000000c0016ac9                Vm::mainVm8086Loop(void*)
                0x00000000c0016ad9                Vm::mainloop3(unsigned long)
                0x00000000c0016aff                Vm::initialise8086()
                0x00000000c0016b42                Vm::finish8086()
                0x00000000c0016ba3                Vm::getOutput8086(unsigned char*)
                0x00000000c0016bc8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016c81                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016e1f                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016ebc                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016ecd                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016edf                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016ef0                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016f05                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016f1b                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016f30                Vm::faultHandler(regs*)
 .text          0x00000000c001765a      0xaf0 arch/i386/hal.32
                0x00000000c001765a                noCopro(unsigned long)
                0x00000000c001765b                nmiHandler(regs*, void*)
                0x00000000c0017674                doubleFault(regs*, void*)
                0x00000000c001768d                displayDebugInfo(regs*)
                0x00000000c0017a12                HalSystemIdle()
                0x00000000c0017a8e                displayProgramFault(char const*)
                0x00000000c0017ada                gpFault(regs*, void*)
                0x00000000c0017b41                pgFault(regs*, void*)
                0x00000000c0017bca                otherISRHandler(regs*, void*)
                0x00000000c0017bfe                opcodeFault(regs*, void*)
                0x00000000c0017c81                i386SaveCoprocessor(void*)
                0x00000000c0017c95                i386LoadCoprocessor(void*)
                0x00000000c0017ca9                x87EmulHandler(regs*, void*)
                0x00000000c0017d46                HalInitialiseCoprocessor()
                0x00000000c0017df4                HalPanic(char const*)
                0x00000000c0017f08                HalQueryPerformanceCounter()
                0x00000000c0017f23                HalInitialise()
                0x00000000c00180d9                HalMakeBeep(int)
                0x00000000c0018113                HalGetRand()
                0x00000000c0018116                HalEndOfInterrupt(int)
                0x00000000c0018147                HalRestart()
                0x00000000c0018148                HalShutdown()
                0x00000000c0018149                HalSleep()
 *fill*         0x00000000c001814a        0x2 
 .text          0x00000000c001814c      0x2dc arch/i386/pic.32
                0x00000000c001814c                picIoWait()
                0x00000000c0018154                picDisable()
                0x00000000c0018188                picGetIRQReg(int)
                0x00000000c0018204                picOpen()
                0x00000000c0018388                picEOI(int)
 .text          0x00000000c0018428      0x66e arch/i386/rtc.32
                0x00000000c0018428                RTC::open(int, int, void*)
                0x00000000c001842c                RTC::close(int, int, void*)
                0x00000000c0018430                RTC::timeInSecondsUTC()
                0x00000000c0018442                RTC::timeInDatetimeUTC()
                0x00000000c0018468                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00184a6                RTC::~RTC()
                0x00000000c00184a6                RTC::~RTC()
                0x00000000c00184ca                RTC::~RTC()
                0x00000000c00184f4                RTC::get_update_in_progress_flag()
                0x00000000c001850e                RTC::completeRTCRefresh()
                0x00000000c00187e8                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018996                rtcIRQHandler(regs*, void*)
                0x00000000c00189dc                RTC::RTC()
                0x00000000c00189dc                RTC::RTC()
 *fill*         0x00000000c0018a96        0x2 
 .text          0x00000000c0018a98      0x1f4 arch/i386/vga.32
                0x00000000c0018a98                HalConsoleScroll(int, int)
                0x00000000c0018ba0                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018c04                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018c8c     0x14f3 fs/fat/vfslink.32
                0x00000000c0018c8c                FAT::getName()
                0x00000000c0018c94                FAT::tell(void*, unsigned long long*)
                0x00000000c0018cd0                FAT::stat(void*, unsigned long long*)
                0x00000000c0018d0c                FAT::~FAT()
                0x00000000c0018d0c                FAT::~FAT()
                0x00000000c0018d30                FAT::~FAT()
                0x00000000c0018d58                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018dfc                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018edc                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00190c0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00192dc                FAT::allocateSwapfile(char const*, int)
                0x00000000c001949c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001960c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001966c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00196cc                FAT::close(void*)
                0x00000000c0019720                FAT::closeDir(void*)
                0x00000000c0019774                FAT::truncate(void*, unsigned long long)
                0x00000000c00197e0                FAT::seek(void*, unsigned long long)
                0x00000000c0019838                fatWrapperReadDisk
                0x00000000c0019878                fatWrapperWriteDisk
                0x00000000c00198b8                fatWrapperIoctl
                0x00000000c00199d8                FAT::FAT()
                0x00000000c00199d8                FAT::FAT()
                0x00000000c0019a30                FAT::fixFilepath(char*)
                0x00000000c0019a70                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019be4                FAT::openDir(char const*, void**)
                0x00000000c0019c94                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019d8c                FAT::unlink(char const*)
                0x00000000c0019e0c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019fc4                FAT::rename(char const*, char const*)
                0x00000000c001a090                FAT::mkdir(char const*)
                0x00000000c001a110                FAT::exists(char const*)
 *fill*         0x00000000c001a17f        0x1 
 .text          0x00000000c001a180       0x94 fs/iso9660/helper.32
                0x00000000c001a180                isoReadDiscSectorHelper
                0x00000000c001a1dc                iso_kprintf
                0x00000000c001a1f8                iso_kprintfd
 .text          0x00000000c001a214      0x71a fs/iso9660/vfslink.32
                0x00000000c001a214                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a21a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a220                ISO9660::getName()
                0x00000000c001a226                ISO9660::closeDir(void*)
                0x00000000c001a230                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a236                ISO9660::unlink(char const*)
                0x00000000c001a23c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a242                ISO9660::rename(char const*, char const*)
                0x00000000c001a248                ISO9660::mkdir(char const*)
                0x00000000c001a24e                ISO9660::~ISO9660()
                0x00000000c001a24e                ISO9660::~ISO9660()
                0x00000000c001a272                ISO9660::~ISO9660()
                0x00000000c001a29a                ISO9660::exists(char const*)
                0x00000000c001a2ae                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a394                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a3dc                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a41e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a45c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a4ae                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a5f0                ISO9660::close(void*)
                0x00000000c001a620                ISO9660::openDir(char const*, void**)
                0x00000000c001a6fa                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a815                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a894                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a906                ISO9660::ISO9660()
                0x00000000c001a906                ISO9660::ISO9660()
 .text          0x00000000c001a92e      0x26c hal/sound/sndcard.32
                0x00000000c001a92e                SoundCard::beginPlayback()
                0x00000000c001a93c                SoundCard::stopPlayback()
                0x00000000c001a94a                SoundCard::SoundCard(char const*)
                0x00000000c001a94a                SoundCard::SoundCard(char const*)
                0x00000000c001a9e8                SoundCard::~SoundCard()
                0x00000000c001a9e8                SoundCard::~SoundCard()
                0x00000000c001aa0c                SoundCard::~SoundCard()
                0x00000000c001aa36                SoundCard::configureRates(int, int, int)
                0x00000000c001aa66                SoundCard::getSamples16(int, short*)
                0x00000000c001aac2                SoundCard::getSamples32(int, int*)
                0x00000000c001ab48                SoundCard::addChannel(SoundPort*)
                0x00000000c001ab86                SoundCard::removeChannel(int)
 *fill*         0x00000000c001ab9a        0x2 
 .text          0x00000000c001ab9c      0x393 hal/sound/sndport.32
                0x00000000c001ab9c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ab9c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ac28                SoundPort::~SoundPort()
                0x00000000c001ac28                SoundPort::~SoundPort()
                0x00000000c001ac5c                SoundPort::unpause()
                0x00000000c001ac68                SoundPort::pause()
                0x00000000c001ac74                SoundPort::getBufferUsed()
                0x00000000c001ac7c                SoundPort::getBufferSize()
                0x00000000c001ac84                SoundPort::buffer16(short*, int)
                0x00000000c001ad10                SoundPort::buffer32(int*, int)
                0x00000000c001ad9c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001ae6c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001af2f        0x0 hw/bus/isa.32
 *fill*         0x00000000c001af2f        0x1 
 .text          0x00000000c001af30      0xbc5 hw/bus/pci.32
                0x00000000c001af30                PCI::open(int, int, void*)
                0x00000000c001af4e                PCI::close(int, int, void*)
                0x00000000c001af52                PCI::PCI()
                0x00000000c001af52                PCI::PCI()
                0x00000000c001afea                PCI::readBAR8(unsigned int, int)
                0x00000000c001b006                PCI::readBAR16(unsigned int, int)
                0x00000000c001b024                PCI::readBAR32(unsigned int, int)
                0x00000000c001b040                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b060                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b082                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b0a2                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b118                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b1c2                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b1e6                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b20e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b258                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b280                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b2a4                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b2c8                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b2f0                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b354                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b43a                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b704                PCI::checkBus(unsigned char)
                0x00000000c001b728                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b8ae                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001ba2a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001ba9c                PCI::detect()
 *fill*         0x00000000c001baf5        0x1 
 .text          0x00000000c001baf6      0xb96 hw/diskctrl/ide.32
                0x00000000c001baf6                IDE::close(int, int, void*)
                0x00000000c001bafa                IDE::IDE()
                0x00000000c001bafa                IDE::IDE()
                0x00000000c001bb2e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bb40                selectDrive(unsigned char, unsigned char)
                0x00000000c001bb42                IDE::getBase(unsigned char)
                0x00000000c001bb54                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc14                IDE::read(unsigned char, unsigned char)
                0x00000000c001bcc8                IDE::waitInterrupt(unsigned char)
                0x00000000c001bd2a                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bd46                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bd62                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bdac                IDE::open(int, int, void*)
                0x00000000c001c1e6                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c2b6                IDE::detect()
                0x00000000c001c57e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c638                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c68c      0x32c hw/diskctrl/satabus.32
                0x00000000c001c68c                SATABus::close(int, int, void*)
                0x00000000c001c690                SATABus::detect()
                0x00000000c001c692                SATABus::SATABus()
                0x00000000c001c692                SATABus::SATABus()
                0x00000000c001c718                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c74a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c792                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c7b2                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c7dc                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c8ee                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c998                SATABus::open(int, int, void*)
 .text          0x00000000c001c9b8      0x96d hw/diskphys/ata.32
                0x00000000c001c9b8                ATA::close(int, int, void*)
                0x00000000c001c9dc                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c9de                ATA::ATA()
                0x00000000c001c9de                ATA::ATA()
                0x00000000c001ca0c                ATA::flush(bool)
                0x00000000c001ca5a                ATA::readyForCommand()
                0x00000000c001caa6                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ce6a                ATA::detectCHS()
                0x00000000c001ce94                ATA::open(int, int, void*)
                0x00000000c001cf60                combineCharAndColour(char, unsigned char)
                0x00000000c001cf71                combineColours(unsigned char, unsigned char)
                0x00000000c001cf7e                ATA::read(unsigned long long, int, void*)
                0x00000000c001d154                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d325        0x1 
 .text          0x00000000c001d326      0x612 hw/diskphys/atapi.32
                0x00000000c001d326                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d32c                ATAPI::close(int, int, void*)
                0x00000000c001d350                ATAPI::ATAPI()
                0x00000000c001d350                ATAPI::ATAPI()
                0x00000000c001d37e                ATAPI::readyForCommand()
                0x00000000c001d3d0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d690                ATAPI::diskRemoved()
                0x00000000c001d6ca                ATAPI::eject()
                0x00000000c001d712                ATAPI::diskInserted()
                0x00000000c001d71e                ATAPI::detectMedia()
                0x00000000c001d7de                ATAPI::open(int, int, void*)
                0x00000000c001d8be                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d938      0x7ff hw/diskphys/sata.32
                0x00000000c001d938                SATA::close(int, int, void*)
                0x00000000c001d95c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d95e                SATA::open(int, int, void*)
                0x00000000c001da08                SATA::SATA()
                0x00000000c001da08                SATA::SATA()
                0x00000000c001da36                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001dc88                SATA::read(unsigned long long, int, void*)
                0x00000000c001ded8                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e137        0x1 
 .text          0x00000000c001e138      0x5d8 hw/diskphys/satapi.32
                0x00000000c001e138                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e13e                SATAPI::close(int, int, void*)
                0x00000000c001e162                SATAPI::SATAPI()
                0x00000000c001e162                SATAPI::SATAPI()
                0x00000000c001e190                SATAPI::diskRemoved()
                0x00000000c001e192                SATAPI::diskInserted()
                0x00000000c001e1ae                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e494                SATAPI::eject()
                0x00000000c001e4d0                SATAPI::detectMedia()
                0x00000000c001e526                SATAPI::open(int, int, void*)
                0x00000000c001e626                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e710      0x45b hw/intctrl/apic.32
                0x00000000c001e710                IOAPIC::close(int, int, void*)
                0x00000000c001e716                apicGetBase()
                0x00000000c001e75c                IOAPIC::IOAPIC()
                0x00000000c001e75c                IOAPIC::IOAPIC()
                0x00000000c001e784                apicOpen()
                0x00000000c001e900                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e932                IOAPIC::read(int)
                0x00000000c001e95a                IOAPIC::open(int, int, void*)
                0x00000000c001ea40                IOAPIC::write(int, int)
                0x00000000c001ea6c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001eb6b        0x1 
 .text          0x00000000c001eb6c       0xf0 hw/timer/apictimer.32
                0x00000000c001eb6c                APICTimer::close(int, int, void*)
                0x00000000c001eb74                apicTimerHandler(regs*, void*)
                0x00000000c001eb9c                APICTimer::open(int, int, void*)
                0x00000000c001ec0c                APICTimer::write(int)
                0x00000000c001ec34                APICTimer::APICTimer()
                0x00000000c001ec34                APICTimer::APICTimer()
 .text          0x00000000c001ec5c      0x1ad hw/timer/pit.32
                0x00000000c001ec5c                PIT::write(int)
                0x00000000c001ece0                pitHandler(regs*, void*)
                0x00000000c001ed08                PIT::open(int, int, void*)
                0x00000000c001ed58                PIT::close(int, int, void*)
                0x00000000c001ed88                PIT::PIT()
                0x00000000c001ed88                PIT::PIT()
 *fill*         0x00000000c001ee09        0x7 
 .text          0x00000000c001ee10       0x83 arch/i386/avx.32
                0x00000000c001ee10                avxDetect
                0x00000000c001ee3a                avxSave
                0x00000000c001ee4b                avxLoad
                0x00000000c001ee5c                avxInit
                0x00000000c001ee7e                avxClose
                0x00000000c001ee7f                wouldSheSayYes
 *fill*         0x00000000c001ee93        0xd 
 .text          0x00000000c001eea0      0x2ec arch/i386/interrupt.32
                0x00000000c001eea0                isr0
                0x00000000c001eeb0                isr1
                0x00000000c001eeba                isr2
                0x00000000c001eec4                isr3
                0x00000000c001eece                isr4
                0x00000000c001eed8                isr5
                0x00000000c001eee2                isr6
                0x00000000c001eeec                isr7
                0x00000000c001eef6                isr8
                0x00000000c001eefe                isr9
                0x00000000c001ef08                isr10
                0x00000000c001ef10                isr11
                0x00000000c001ef18                isr12
                0x00000000c001ef20                isr13
                0x00000000c001ef3a                isr14
                0x00000000c001ef42                isr15
                0x00000000c001ef4c                isr16
                0x00000000c001ef56                isr17
                0x00000000c001ef60                isr18
                0x00000000c001ef6a                irq3
                0x00000000c001ef74                irq4
                0x00000000c001ef7e                irq5
                0x00000000c001ef88                irq6
                0x00000000c001ef92                irq7
                0x00000000c001ef9c                irq8
                0x00000000c001efa6                irq9
                0x00000000c001efb0                irq10
                0x00000000c001efba                irq11
                0x00000000c001efc4                irq12
                0x00000000c001efce                irq13
                0x00000000c001efd8                irq14
                0x00000000c001efe2                irq15
                0x00000000c001efec                irq1
                0x00000000c001eff3                irq2
                0x00000000c001effa                isr96
                0x00000000c001f001                irq0
                0x00000000c001f006                int_common_stub
                0x00000000c001f038                syscall_common_stub
                0x00000000c001f13c                irq16
                0x00000000c001f146                irq17
                0x00000000c001f150                irq18
                0x00000000c001f15a                irq19
                0x00000000c001f164                irq20
                0x00000000c001f16e                irq21
                0x00000000c001f178                irq22
                0x00000000c001f182                irq23
 *fill*         0x00000000c001f18c        0x4 
 .text          0x00000000c001f190       0x10 arch/i386/rdrand.32
                0x00000000c001f190                i386GetRDRAND
 .text          0x00000000c001f1a0       0x39 arch/i386/sse.32
                0x00000000c001f1a0                absolutelyNoChanceInHell
                0x00000000c001f1a0                sseDetect
                0x00000000c001f1b8                sseSave
                0x00000000c001f1c0                sseLoad
                0x00000000c001f1c8                sseInit
                0x00000000c001f1d8                sseClose
 *fill*         0x00000000c001f1d9        0x7 
 .text          0x00000000c001f1e0       0x49 arch/i386/x87.32
                0x00000000c001f1e6                x87Detect
                0x00000000c001f201                x87Save
                0x00000000c001f208                x87Load
                0x00000000c001f20f                x87Init
                0x00000000c001f228                x87Close
 *fill*         0x00000000c001f229        0x3 
 .text          0x00000000c001f22c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f251        0x0 crtn.32
 *fill*         0x00000000c001f251        0x3 
 .text          0x00000000c001f254      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f254                __divdi3
 *fill*         0x00000000c001f39f        0x1 
 .text          0x00000000c001f3a0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f3a0                __moddi3
 *fill*         0x00000000c001f51e        0x2 
 .text          0x00000000c001f520       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f520                __udivdi3
 *fill*         0x00000000c001f61f        0x1 
 .text          0x00000000c001f620      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f620                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f740        0x0
 .iplt          0x00000000c001f740        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f73a        0xf
 .init          0x00000000c001f73a        0x3 crti.32
                0x00000000c001f73a                _init
 .init          0x00000000c001f73d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f742        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f747        0x2 crtn.32

.fini           0x00000000c001f749        0xa
 .fini          0x00000000c001f749        0x3 crti.32
                0x00000000c001f749                _fini
 .fini          0x00000000c001f74c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f751        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f754       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f754       0x23 core/computer.32
                0x00000000c001f754                Computer::~Computer()
                0x00000000c001f754                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f778       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f778       0x2a core/computer.32
                0x00000000c001f778                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f7a2       0x21
 .text._Z10idleCommonv
                0x00000000c001f7a2       0x21 core/idle.32
                0x00000000c001f7a2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f7c4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f7c4        0x2 core/unixfile.32
                0x00000000c001f7c4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f7c4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f7c6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f7c6       0x42 core/unixfile.32
                0x00000000c001f7c6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f7c6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f808       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f808       0xd3 core/unixfile.32
                0x00000000c001f808                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f8dc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f8dc        0x7 core/unixfile.32
                0x00000000c001f8dc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f8e4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f8e4       0xa1 core/unixfile.32
                0x00000000c001f8e4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f986        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f986        0x8 core/unixfile.32
                0x00000000c001f986                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f98e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f98e       0x1a hal/device.32
                0x00000000c001f98e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f98e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f9a8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f9a8       0x2a hal/device.32
                0x00000000c001f9a8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f9d2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f9d2       0xdc hal/device.32
                0x00000000c001f9d2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001faae       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001faae       0x42 hal/device.32
                0x00000000c001faae                LinkedList<Device>::LinkedList()
                0x00000000c001faae                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001faf0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001faf0       0x1c hal/timer.32
                0x00000000c001faf0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fb0c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fb0c        0x7 hal/timer.32
                0x00000000c001fb0c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fb14       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fb14       0xbc hal/timer.32
                0x00000000c001fb14                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fbd0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fbd0       0xda hal/timer.32
                0x00000000c001fbd0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fcac       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fcac       0x23 hw/acpi.32
                0x00000000c001fcac                ACPI::~ACPI()
                0x00000000c001fcac                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fcd0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fcd0       0x2a hw/acpi.32
                0x00000000c001fcd0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fcfc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fcfc        0x2 hw/acpi.32
                0x00000000c001fcfc                LinkedList<Device>::~LinkedList()
                0x00000000c001fcfc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fd00       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fd00       0x1c hw/acpi.32
                0x00000000c001fd00                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fd1c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fd1c        0x7 hw/acpi.32
                0x00000000c001fd1c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fd24       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fd24       0xb8 hw/acpi.32
                0x00000000c001fd24                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001fddc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fddc       0x23 hw/cpu.32
                0x00000000c001fddc                CPU::~CPU()
                0x00000000c001fddc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fe00       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fe00       0x2a hw/cpu.32
                0x00000000c001fe00                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fe2c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fe2c        0x8 sys/kill.32
                0x00000000c001fe2c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fe34        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fe34        0x2 thr/prcssthr.32
                0x00000000c001fe34                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fe34                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fe38       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fe38       0x49 thr/prcssthr.32
                0x00000000c001fe38                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fe38                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fe84       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fe84       0x42 thr/prcssthr.32
                0x00000000c001fe84                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fe84                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fec6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fec6       0x23 hw/bus/pci.32
                0x00000000c001fec6                PCI::~PCI()
                0x00000000c001fec6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001feea       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001feea       0x2a hw/bus/pci.32
                0x00000000c001feea                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001ff14       0x23
 .text._ZN3IDED2Ev
                0x00000000c001ff14       0x23 hw/diskctrl/ide.32
                0x00000000c001ff14                IDE::~IDE()
                0x00000000c001ff14                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001ff38       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001ff38       0x2a hw/diskctrl/ide.32
                0x00000000c001ff38                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001ff62       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001ff62       0x23 hw/diskctrl/satabus.32
                0x00000000c001ff62                SATABus::~SATABus()
                0x00000000c001ff62                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001ff86       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001ff86       0x2a hw/diskctrl/satabus.32
                0x00000000c001ff86                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001ffb0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001ffb0       0x23 hw/diskphys/ata.32
                0x00000000c001ffb0                ATA::~ATA()
                0x00000000c001ffb0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001ffd4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001ffd4       0x2a hw/diskphys/ata.32
                0x00000000c001ffd4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fffe       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fffe       0x23 hw/diskphys/atapi.32
                0x00000000c001fffe                ATAPI::~ATAPI()
                0x00000000c001fffe                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020022       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020022       0x2a hw/diskphys/atapi.32
                0x00000000c0020022                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002004c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002004c       0x23 hw/diskphys/sata.32
                0x00000000c002004c                SATA::~SATA()
                0x00000000c002004c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020070       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020070       0x2a hw/diskphys/sata.32
                0x00000000c0020070                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002009a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002009a       0x23 hw/diskphys/satapi.32
                0x00000000c002009a                SATAPI::~SATAPI()
                0x00000000c002009a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00200be       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00200be       0x2a hw/diskphys/satapi.32
                0x00000000c00200be                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00200e8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00200e8       0x23 hw/intctrl/apic.32
                0x00000000c00200e8                IOAPIC::~IOAPIC()
                0x00000000c00200e8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002010c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002010c       0x2a hw/intctrl/apic.32
                0x00000000c002010c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020138       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020138       0x23 hw/timer/apictimer.32
                0x00000000c0020138                APICTimer::~APICTimer()
                0x00000000c0020138                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002015c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002015c       0x2a hw/timer/apictimer.32
                0x00000000c002015c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020188       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020188       0x23 hw/timer/pit.32
                0x00000000c0020188                PIT::~PIT()
                0x00000000c0020188                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00201ac       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00201ac       0x2a hw/timer/pit.32
                0x00000000c00201ac                PIT::~PIT()

.rodata         0x00000000c00201d6     0x319a
                0x00000000c00201d6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00201d6        0x2 
 .ctors         0x00000000c00201d8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00201dc        0x4 core/unixfile.32
 .ctors         0x00000000c00201e0        0x4 thr/prcssthr.32
 .ctors         0x00000000c00201e4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00201e8                end_ctors = .
                0x00000000c00201e8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00201e8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00201ec        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00201ec                __DTOR_END__
                0x00000000c00201f0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00201f0       0x10 
 .rodata        0x00000000c0020200      0x101 acpica/utclib.32
                0x00000000c0020200                AcpiGbl_Ctypes
 *fill*         0x00000000c0020301        0x3 
 .rodata        0x00000000c0020304       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002031c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020366       0x1a 
 .rodata        0x00000000c0020380       0xed fs/fat/ff.32
 *fill*         0x00000000c002046d       0x13 
 .rodata        0x00000000c0020480      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020880       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c00208ef      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020a04       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020a6c       0x2c core/computer.32
                0x00000000c0020a6c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020a98       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020ac8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020ad4       0x17 core/main.32
 *fill*         0x00000000c0020aeb        0x1 
 .rodata.str1.4
                0x00000000c0020aec       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020b91       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020be9       0x39 core/pipe.32
 *fill*         0x00000000c0020c22        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020c24       0x1c core/pipe.32
                0x00000000c0020c24                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020c40       0x2b core/terminal.32
 *fill*         0x00000000c0020c6b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020c6c       0x1c core/terminal.32
                0x00000000c0020c6c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020c88       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020caa       0x15 core/unixfile.32
 *fill*         0x00000000c0020cbf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020cc0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020d0b        0x8 core/unixfile.32
 *fill*         0x00000000c0020d13        0x1 
 .rodata.str1.4
                0x00000000c0020d14       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020d34       0x1c core/unixfile.32
                0x00000000c0020d34                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020d50       0x1c core/unixfile.32
                0x00000000c0020d50                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020d6c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021000      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021126       0x33 coreobjs/c++.32
 *fill*         0x00000000c0021159        0x3 
 .rodata        0x00000000c002115c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00212ac      0x169 dbg/usban.32
 *fill*         0x00000000c0021415        0x3 
 .rodata.str1.4
                0x00000000c0021418      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002154f      0x13a fs/symlink.32
                                        0x146 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021689       0x26 fs/vfs.32
                                         0x28 (size before relaxing)
 *fill*         0x00000000c00216af        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c00216b0       0x6c fs/vfs.32
                0x00000000c00216b0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002171c       0x1c fs/vfs.32
                0x00000000c002171c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021738       0x1c fs/vfs.32
                0x00000000c0021738                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021754       0x2c hal/bus.32
                0x00000000c0021754                vtable for Bus
 .rodata.str1.1
                0x00000000c0021780       0x1e hal/clock.32
 *fill*         0x00000000c002179e        0x2 
 .rodata._ZTV5Clock
                0x00000000c00217a0       0x3c hal/clock.32
                0x00000000c00217a0                vtable for Clock
 *fill*         0x00000000c00217dc        0x4 
 .rodata        0x00000000c00217e0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021810       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021868       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021868       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021868       0x2c hal/device.32
                0x00000000c0021868                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021894       0x2c hal/device.32
                0x00000000c0021894                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00218c0       0x2c hal/diskctrl.32
                0x00000000c00218c0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00218ec       0x38 hal/diskphys.32
                0x00000000c00218ec                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021924       0x3e hal/intctrl.32
 *fill*         0x00000000c0021962        0x2 
 .rodata.str1.4
                0x00000000c0021964       0x5d hal/intctrl.32
 .rodata        0x00000000c00219c1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021a14       0x34 hal/keybrd.32
                0x00000000c0021a14                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021a48       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021a8c       0x2c hal/logidisk.32
                0x00000000c0021a8c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021ab8       0x2c hal/mouse.32
                0x00000000c0021ab8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021ae4       0x34 hal/nic.32
                0x00000000c0021ae4                vtable for NIC
 .rodata.str1.1
                0x00000000c0021b18        0xb hal/partition.32
 *fill*         0x00000000c0021b23        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021b24       0x44 hal/serial.32
                0x00000000c0021b24                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021b68       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021b68        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021b68       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021b68       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021b68       0x30 hal/timer.32
                0x00000000c0021b68                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021b98       0x10 hal/vcache.32
                0x00000000c0021b98                vtable for VCache
 .rodata.str1.1
                0x00000000c0021ba8       0x93 hal/video.32
 *fill*         0x00000000c0021c3b        0x1 
 .rodata._ZTV5Video
                0x00000000c0021c3c       0x4c hal/video.32
                0x00000000c0021c3c                vtable for Video
 .rodata.str1.4
                0x00000000c0021c88       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021d23      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021e79       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021e79        0x8 hw/acpi.32
 *fill*         0x00000000c0021e79        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021e7c       0x2c hw/acpi.32
                0x00000000c0021e7c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021ea8      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022023        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022024       0x2c hw/cpu.32
                0x00000000c0022024                vtable for CPU
 .rodata.str1.1
                0x00000000c0022050       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022090       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00220cc       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c002215d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022226       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002226e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0022299       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002230f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022354        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002235e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002237f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022415       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022469       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022495      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022661       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00226b8      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00227c8       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00227c8       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00227c8       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00227c8        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00227c8       0xc2 vm86/vm8086.32
 *fill*         0x00000000c002288a        0x2 
 .rodata        0x00000000c002288c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00228bc      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022a5b        0x1 
 .rodata.str1.4
                0x00000000c0022a5c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022acf       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022ae4       0x3c arch/i386/rtc.32
                0x00000000c0022ae4                vtable for RTC
 .rodata.str1.1
                0x00000000c0022b20       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022b61        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022b64       0x6c fs/fat/vfslink.32
                0x00000000c0022b64                vtable for FAT
 .rodata.str1.1
                0x00000000c0022bd0       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022bd0      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022d08       0x6c fs/iso9660/vfslink.32
                0x00000000c0022d08                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022d74       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022db8       0x34 hal/sound/sndcard.32
                0x00000000c0022db8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022dec       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022e2b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022e63       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022f04       0x2c hw/bus/pci.32
                0x00000000c0022f04                vtable for PCI
 .rodata.str1.1
                0x00000000c0022f30       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022fb7        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022fb8       0x2c hw/diskctrl/ide.32
                0x00000000c0022fb8                vtable for IDE
 .rodata.str1.4
                0x00000000c0022fe4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0023008       0x2c hw/diskctrl/satabus.32
                0x00000000c0023008                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023034       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023046        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023048       0x38 hw/diskphys/ata.32
                0x00000000c0023048                vtable for ATA
 .rodata.str1.1
                0x00000000c0023080        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c002308d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0023090       0x38 hw/diskphys/atapi.32
                0x00000000c0023090                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00230c8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023144       0x38 hw/diskphys/sata.32
                0x00000000c0023144                vtable for SATA
 .rodata.str1.1
                0x00000000c002317c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0023266        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0023268       0x38 hw/diskphys/satapi.32
                0x00000000c0023268                vtable for SATAPI
 .rodata        0x00000000c00232a0        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00232a8       0x2c hw/intctrl/apic.32
                0x00000000c00232a8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00232d4       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00232ef        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00232f0       0x30 hw/timer/apictimer.32
                0x00000000c00232f0                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023320       0x1d hw/timer/pit.32
 *fill*         0x00000000c002333d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023340       0x30 hw/timer/pit.32
                0x00000000c0023340                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023370      0xbb1
 *(.data)
 .data          0x00000000c0023370        0x0 crti.32
 .data          0x00000000c0023370        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023370                __dso_handle
 .data          0x00000000c0023374        0x0 acpica/utclib.32
 .data          0x00000000c0023374        0x0 core/malloc.32
 .data          0x00000000c0023374        0x0 libk/ctype.32
 .data          0x00000000c0023374        0x0 libk/string.32
 .data          0x00000000c0023374        0x0 fs/fat/diskio.32
 .data          0x00000000c0023374        0x0 fs/fat/ff.32
 .data          0x00000000c0023374        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023374        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023374        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023374        0x0 core/computer.32
 .data          0x00000000c0023374        0x0 core/gdt.32
 .data          0x00000000c0023374        0x0 core/idle.32
 .data          0x00000000c0023374        0x0 core/idt.32
 .data          0x00000000c0023374        0x4 core/kheap.32
 .data          0x00000000c0023378        0x0 core/main.32
 .data          0x00000000c0023378        0x4 core/physmgr.32
                0x00000000c0023378                Phys::bitmap
 .data          0x00000000c002337c        0x0 core/pipe.32
 *fill*         0x00000000c002337c        0x4 
 .data          0x00000000c0023380       0x60 core/terminal.32
                0x00000000c0023380                VgaText::hiddenOut
                0x00000000c00233a0                ansiToVGAMappings
 .data          0x00000000c00233e0        0x0 core/tss.32
 .data          0x00000000c00233e0        0x4 core/unixfile.32
                0x00000000c00233e0                UnixFile::nextFd
 .data          0x00000000c00233e4       0x15 core/virtmgr.32
                0x00000000c00233e4                Virt::pageAllocPtr
                0x00000000c00233e8                Virt::bitmap
                0x00000000c00233ec                Virt::swapfileSectorsPerPage
                0x00000000c00233f0                Virt::swapfileLength
                0x00000000c00233f4                Virt::swapfileSector
                0x00000000c00233f8                Virt::swapfileDrive
 *fill*         0x00000000c00233f9        0x3 
 .data          0x00000000c00233fc        0x4 coreobjs/c++.32
                0x00000000c00233fc                __stack_chk_guard
 .data          0x00000000c0023400        0x0 dbg/kconsole.32
 .data          0x00000000c0023400       0x28 dbg/usban.32
                0x00000000c0023400                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023428        0x0 fs/symlink.32
 .data          0x00000000c0023428        0x0 fs/vfs.32
 .data          0x00000000c0023428        0x0 hal/bus.32
 .data          0x00000000c0023428        0x0 hal/buzzer.32
 .data          0x00000000c0023428        0x0 hal/clock.32
 .data          0x00000000c0023428        0x0 hal/device.32
 .data          0x00000000c0023428        0x0 hal/diskctrl.32
 .data          0x00000000c0023428        0x0 hal/diskphys.32
 .data          0x00000000c0023428        0x0 hal/fpu.32
 .data          0x00000000c0023428        0x0 hal/intctrl.32
 .data          0x00000000c0023428        0x0 hal/keybrd.32
 .data          0x00000000c0023428        0x0 hal/logidisk.32
 .data          0x00000000c0023428        0x0 hal/mouse.32
 .data          0x00000000c0023428        0x0 hal/nic.32
 .data          0x00000000c0023428        0x0 hal/partition.32
 .data          0x00000000c0023428        0x0 hal/serial.32
 .data          0x00000000c0023428        0x0 hal/timer.32
 .data          0x00000000c0023428        0x0 hal/vcache.32
 .data          0x00000000c0023428        0x0 hal/video.32
 .data          0x00000000c0023428       0x10 hw/acpi.32
                0x00000000c0023428                legacyIRQRemaps
 .data          0x00000000c0023438        0x4 hw/cpu.32
                0x00000000c0023438                lastCode
 .data          0x00000000c002343c        0x0 krnl/atexit.32
 *fill*         0x00000000c002343c        0x4 
 .data          0x00000000c0023440      0x142 krnl/bootmsg.32
                0x00000000c0023440                KiSplashScreen
 .data          0x00000000c0023582        0x0 krnl/compat.32
 *fill*         0x00000000c0023582       0x1e 
 .data          0x00000000c00235a0      0x400 krnl/crc32.32
                0x00000000c00235a0                KiPolyLookupCRC32
 .data          0x00000000c00239a0       0x4d krnl/env.32
                0x00000000c00239a0                defaultSysEnv
 .data          0x00000000c00239ed        0x0 krnl/inlines.32
 .data          0x00000000c00239ed        0x0 krnl/panic.32
 .data          0x00000000c00239ed        0x0 krnl/powctrl.32
 .data          0x00000000c00239ed        0x0 krnl/random.32
 .data          0x00000000c00239ed        0x0 krnl/resolve.32
 *fill*         0x00000000c00239ed       0x13 
 .data          0x00000000c0023a00       0x4c krnl/signal.32
                0x00000000c0023a00                KiDefaultSignalHandlers
 *fill*         0x00000000c0023a4c       0x14 
 .data          0x00000000c0023a60       0xfc krnl/syscalls.32
                0x00000000c0023a60                systemCallHandlers
 .data          0x00000000c0023b5c        0x0 net/ethernet.32
 *fill*         0x00000000c0023b5c        0x4 
 .data          0x00000000c0023b60      0x100 reg/cm.32
                0x00000000c0023b60                CmComponents
 .data          0x00000000c0023c60        0x0 reg/registry.32
 .data          0x00000000c0023c60        0x0 sys/eject.32
 .data          0x00000000c0023c60        0x0 sys/exit.32
 .data          0x00000000c0023c60        0x0 sys/getcwd.32
 .data          0x00000000c0023c60        0x0 sys/getpid.32
 .data          0x00000000c0023c60        0x0 sys/getramdata.32
 .data          0x00000000c0023c60        0x0 sys/getvgaptr.32
 .data          0x00000000c0023c60        0x0 sys/kill.32
 .data          0x00000000c0023c60        0x0 sys/loaddll.32
 .data          0x00000000c0023c60        0x0 sys/read.32
 .data          0x00000000c0023c60        0x0 sys/registersignal.32
 .data          0x00000000c0023c60        0x0 sys/registry.32
 .data          0x00000000c0023c60        0x0 sys/sbrk.32
 .data          0x00000000c0023c60        0x0 sys/setcwd.32
 .data          0x00000000c0023c60        0x0 sys/settime.32
 .data          0x00000000c0023c60        0x0 sys/symlink.32
 .data          0x00000000c0023c60        0x0 sys/timezone.32
 .data          0x00000000c0023c60        0x0 sys/truncate.32
 .data          0x00000000c0023c60        0x0 sys/write.32
 .data          0x00000000c0023c60        0x0 sys/wsbe.32
 .data          0x00000000c0023c60        0x0 sys/yield.32
 .data          0x00000000c0023c60        0x0 thr/elf.32
 .data          0x00000000c0023c60        0x4 thr/prcssthr.32
                0x00000000c0023c60                Thr::nextPID
 .data          0x00000000c0023c64        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023c64       0x1c 
 .data          0x00000000c0023c80      0x2a0 arch/i386/hal.32
                0x00000000c0023c80                exceptionNames
 .data          0x00000000c0023f20        0x0 arch/i386/pic.32
 .data          0x00000000c0023f20        0x0 arch/i386/rtc.32
 .data          0x00000000c0023f20        0x0 arch/i386/vga.32
 .data          0x00000000c0023f20        0x0 fs/fat/vfslink.32
 .data          0x00000000c0023f20        0x0 fs/iso9660/helper.32
 .data          0x00000000c0023f20        0x1 fs/iso9660/vfslink.32
                0x00000000c0023f20                recentDriveletter
 .data          0x00000000c0023f21        0x0 hal/sound/sndcard.32
 .data          0x00000000c0023f21        0x0 hal/sound/sndport.32
 .data          0x00000000c0023f21        0x0 hw/bus/isa.32
 .data          0x00000000c0023f21        0x0 hw/bus/pci.32
 .data          0x00000000c0023f21        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0023f21        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0023f21        0x0 hw/diskphys/ata.32
 .data          0x00000000c0023f21        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0023f21        0x0 hw/diskphys/sata.32
 .data          0x00000000c0023f21        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0023f21        0x0 hw/intctrl/apic.32
 .data          0x00000000c0023f21        0x0 hw/timer/apictimer.32
 .data          0x00000000c0023f21        0x0 hw/timer/pit.32
 .data          0x00000000c0023f21        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0023f21        0x0 crtn.32
 .data          0x00000000c0023f21        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0023f21        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0023f21        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0023f21        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0023f24        0x0
 .got           0x00000000c0023f24        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0023f24        0x0
 .got.plt       0x00000000c0023f24        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0023f24        0x0
 .igot.plt      0x00000000c0023f24        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0023f24        0x0
 .tm_clone_table
                0x00000000c0023f24        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0023f24        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0023f21      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0023f21        0x3 
 .eh_frame      0x00000000c0023f24        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0023f24        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0023f24       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0023f7c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0023fbc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024028       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
