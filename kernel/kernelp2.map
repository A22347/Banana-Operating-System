Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2155e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x225 dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006ef0                Dbg::logs(char*)
                0x00000000c0006f0f                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f2d                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f4e                Dbg::kprintf(char const*, ...)
 .text          0x00000000c0007084      0x2d4 dbg/usban.32
                0x00000000c0007084                KiUbsanPrintDetails(char const*, void*)
                0x00000000c00070f0                __ubsan_handle_type_mismatch_v1
                0x00000000c00071cc                __ubsan_handle_pointer_overflow
                0x00000000c00071f8                __ubsan_handle_out_of_bounds
                0x00000000c0007224                __ubsan_handle_add_overflow
                0x00000000c0007250                __ubsan_handle_load_invalid_value
                0x00000000c000727c                __ubsan_handle_divrem_overflow
                0x00000000c00072a8                __ubsan_handle_mul_overflow
                0x00000000c00072d4                __ubsan_handle_sub_overflow
                0x00000000c0007300                __ubsan_handle_shift_out_of_bounds
                0x00000000c000732c                __ubsan_handle_negate_overflow
 .text          0x00000000c0007358      0x812 fs/symlink.32
                0x00000000c00074a7                KiDeinitialiseSymlinks(void*)
                0x00000000c0007538                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075bb                KeInitialiseSymlinks()
                0x00000000c000771d                KiIsSymlinkRegistered(char const*)
                0x00000000c0007887                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a2e                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b6a      0xd9c fs/vfs.32
                0x00000000c0007b6a                File::read(unsigned long long, void*, int*)
                0x00000000c0007bc2                File::write(unsigned long long, void*, int*)
                0x00000000c0007c1a                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c72                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007ca0                File::isAtty()
                0x00000000c0007ca4                Directory::isAtty()
                0x00000000c0007ca8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cae                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cb4                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cba                File::~File()
                0x00000000c0007cba                File::~File()
                0x00000000c0007cde                File::~File()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d2c                Directory::~Directory()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d88                Filesystem::~Filesystem()
                0x00000000c0007dac                Fs::getcwd(Process*, char*, int)
                0x00000000c0007dd6                Fs::initVFS()
                0x00000000c0007e00                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000812c                File::File(char const*, Process*)
                0x00000000c000812c                File::File(char const*, Process*)
                0x00000000c000814a                File::open(FileOpenMode)
                0x00000000c00081a8                File::close()
                0x00000000c0008208                File::seek(unsigned long long)
                0x00000000c000825e                File::truncate(unsigned long long)
                0x00000000c00082b4                File::tell(unsigned long long*)
                0x00000000c0008304                File::rewind()
                0x00000000c0008318                File::unlink()
                0x00000000c0008364                File::rename(char const*)
                0x00000000c00083b2                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000840e                File::exists()
                0x00000000c000844c                File::stat(unsigned long long*, bool*)
                0x00000000c00084ad                Fs::setcwd(Process*, char*)
                0x00000000c000860c                Directory::Directory(char const*, Process*)
                0x00000000c000860c                Directory::Directory(char const*, Process*)
                0x00000000c00086d4                Directory::open()
                0x00000000c0008730                Directory::close()
                0x00000000c0008790                Directory::unlink()
                0x00000000c00087dc                Directory::rename(char const*)
                0x00000000c000882a                Directory::exists()
                0x00000000c0008868                Directory::read(dirent*)
                0x00000000c00088b4                Directory::create()
                0x00000000c0008900                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c0008906        0x2 
 .text          0x00000000c0008908       0x86 hal/bus.32
                0x00000000c0008908                Bus::Bus(char const*)
                0x00000000c0008908                Bus::Bus(char const*)
                0x00000000c0008940                Bus::~Bus()
                0x00000000c0008940                Bus::~Bus()
                0x00000000c0008964                Bus::~Bus()
 .text          0x00000000c000898e       0x99 hal/buzzer.32
                0x00000000c000898e                KeBeepThread(void*)
                0x00000000c00089ce                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a27        0x1 
 .text          0x00000000c0008a28      0xe4e hal/clock.32
                0x00000000c0008a28                KeLoadTimezoneStrings()
                0x00000000c0008db7                KeGetTimezoneStringFromID(int)
                0x00000000c0008e54                KeUpdateTimezone(char const*)
                0x00000000c0008f4e                KeSetTimezone(char const*)
                0x00000000c0008fab                KeSetTimezone(int)
                0x00000000c0008fde                KeLoadTimezone()
                0x00000000c0009058                Clock::Clock(char const*)
                0x00000000c0009058                Clock::Clock(char const*)
                0x00000000c000908e                Clock::~Clock()
                0x00000000c000908e                Clock::~Clock()
                0x00000000c00090b2                Clock::~Clock()
                0x00000000c00090dc                Clock::timeInSecondsLocal()
                0x00000000c0009146                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c00091c6                KeDatetimeToSeconds(datetime_t)
                0x00000000c00094f4                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c00095b6                KeSecondsToDatetime(unsigned long long)
                0x00000000c000984a                Clock::timeInDatetimeLocal()
 .text          0x00000000c0009876      0x47a hal/device.32
                0x00000000c0009876                Device::hibernate()
                0x00000000c0009878                Device::wake()
                0x00000000c000987a                Device::detect()
                0x00000000c000987c                Device::disableLegacy()
                0x00000000c000987e                Device::powerSaving(PowerSavingLevel)
                0x00000000c0009880                DriverlessDevice::close(int, int, void*)
                0x00000000c0009884                DriverlessDevice::detect()
                0x00000000c0009886                DriverlessDevice::open(int, int, void*)
                0x00000000c000989a                Device::~Device()
                0x00000000c000989a                Device::~Device()
                0x00000000c00098a8                Device::~Device()
                0x00000000c00098d0                Device::findAndLoadDriver()
                0x00000000c00098de                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0009904                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0009944                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000996e                Device::getParent()
                0x00000000c000997a                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009998                Device::addChild(Device*)
                0x00000000c00099dc                Device::removeAllChildren()
                0x00000000c0009a22                Device::hibernateAll()
                0x00000000c0009a52                Device::wakeAll()
                0x00000000c0009a82                Device::detectAll()
                0x00000000c0009ab2                Device::disableLegacyAll()
                0x00000000c0009ab4                Device::loadDriversForAll()
                0x00000000c0009ab6                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009aec                Device::setName(char const*)
                0x00000000c0009afa                Device::Device(char const*)
                0x00000000c0009afa                Device::Device(char const*)
                0x00000000c0009bf6                Device::getName()
                0x00000000c0009c00                Device::closeAll()
                0x00000000c0009c4c                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009c4c                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009c82                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009cc6                getDevicesOfType(DeviceType)
 .text          0x00000000c0009cf0       0x86 hal/diskctrl.32
                0x00000000c0009cf0                HardDiskController::HardDiskController(char const*)
                0x00000000c0009cf0                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d28                HardDiskController::~HardDiskController()
                0x00000000c0009d28                HardDiskController::~HardDiskController()
                0x00000000c0009d4c                HardDiskController::~HardDiskController()
 .text          0x00000000c0009d76       0xe2 hal/diskphys.32
                0x00000000c0009d76                PhysicalDisk::eject()
                0x00000000c0009d7a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009d7a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009de2                PhysicalDisk::startCache()
                0x00000000c0009e0a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e0a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e2e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009e58        0x0 hal/fpu.32
 .text          0x00000000c0009e58        0x0 hal/intctrl.32
 .text          0x00000000c0009e58      0x874 hal/keybrd.32
                0x00000000c0009e58                startGUI(void*)
                0x00000000c0009ebd                startGUIVESA(void*)
                0x00000000c0009f22                sendKeyToTerminal(unsigned char)
                0x00000000c0009ff8                sendKeyboardToken(KeyboardToken)
                0x00000000c000a4b4                clearInternalKeybuffer(VgaText*)
                0x00000000c000a4e9                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a642                Keyboard::Keyboard(char const*)
                0x00000000c000a642                Keyboard::Keyboard(char const*)
                0x00000000c000a67e                Keyboard::~Keyboard()
                0x00000000c000a67e                Keyboard::~Keyboard()
                0x00000000c000a6a2                Keyboard::~Keyboard()
 .text          0x00000000c000a6cc      0x3f8 hal/logidisk.32
                0x00000000c000a6cc                LogicalDisk::close(int, int, void*)
                0x00000000c000a6d0                LogicalDisk::~LogicalDisk()
                0x00000000c000a6d0                LogicalDisk::~LogicalDisk()
                0x00000000c000a6f4                LogicalDisk::~LogicalDisk()
                0x00000000c000a71e                LogicalDisk::open(int, int, void*)
                0x00000000c000a732                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a76a                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a7b0                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a7b0                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a870                LogicalDisk::assignDriveLetter()
                0x00000000c000a92a                LogicalDisk::mount()
                0x00000000c000a972                LogicalDisk::unmount()
                0x00000000c000a982                LogicalDisk::eject()
                0x00000000c000a996                LogicalDisk::unassignDriveLetter()
                0x00000000c000a9ec                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aa58                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000aac4       0x86 hal/mouse.32
                0x00000000c000aac4                Mouse::Mouse(char const*)
                0x00000000c000aac4                Mouse::Mouse(char const*)
                0x00000000c000aafc                Mouse::~Mouse()
                0x00000000c000aafc                Mouse::~Mouse()
                0x00000000c000ab20                Mouse::~Mouse()
 .text          0x00000000c000ab4a       0x90 hal/nic.32
                0x00000000c000ab4a                NIC::getMAC()
                0x00000000c000ab50                NIC::write(int, unsigned char*, int*)
                0x00000000c000ab56                NIC::NIC(char const*)
                0x00000000c000ab56                NIC::NIC(char const*)
                0x00000000c000ab8c                NIC::~NIC()
                0x00000000c000ab8c                NIC::~NIC()
                0x00000000c000abb0                NIC::~NIC()
 .text          0x00000000c000abda      0x33b hal/partition.32
                0x00000000c000abda                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ac82                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af15        0x3 
 .text          0x00000000c000af18       0x86 hal/serial.32
                0x00000000c000af18                Serial::Serial(char const*)
                0x00000000c000af18                Serial::Serial(char const*)
                0x00000000c000af50                Serial::~Serial()
                0x00000000c000af50                Serial::~Serial()
                0x00000000c000af74                Serial::~Serial()
 *fill*         0x00000000c000af9e        0x2 
 .text          0x00000000c000afa0      0x1f4 hal/timer.32
                0x00000000c000afa0                Timer::Timer(char const*)
                0x00000000c000afa0                Timer::Timer(char const*)
                0x00000000c000afd8                Timer::~Timer()
                0x00000000c000afd8                Timer::~Timer()
                0x00000000c000affc                Timer::~Timer()
                0x00000000c000b026                Timer::read()
                0x00000000c000b031                setupTimer(int)
                0x00000000c000b06c                timerHandler(unsigned int)
 .text          0x00000000c000b194      0x60e hal/vcache.32
                0x00000000c000b194                VCache::VCache(PhysicalDisk*)
                0x00000000c000b194                VCache::VCache(PhysicalDisk*)
                0x00000000c000b304                VCache::invalidateReadBuffer()
                0x00000000c000b314                VCache::writeWriteBuffer()
                0x00000000c000b360                VCache::~VCache()
                0x00000000c000b360                VCache::~VCache()
                0x00000000c000b3b8                VCache::~VCache()
                0x00000000c000b3e0                VCache::write(unsigned long long, int, void*)
                0x00000000c000b5ae                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b7a2      0x71d hal/video.32
                0x00000000c000b7a2                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b7ee                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b85e                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b8ee                Video::clearScreen(unsigned int)
                0x00000000c000b922                Video::putpixel(int, int, unsigned int)
                0x00000000c000b930                Video::readPixelApprox(int, int)
                0x00000000c000b944                Video::Video(char const*)
                0x00000000c000b944                Video::Video(char const*)
                0x00000000c000b97a                Video::~Video()
                0x00000000c000b97a                Video::~Video()
                0x00000000c000b99e                Video::~Video()
                0x00000000c000b9c8                Video::isMonochrome()
                0x00000000c000b9d4                Video::getWidth()
                0x00000000c000b9e0                Video::getHeight()
                0x00000000c000b9ec                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000baa8                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000be4e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000bebf        0x1 
 .text          0x00000000c000bec0     0x1096 hw/acpi.32
                0x00000000c000bec0                ACPI::close(int, int, void*)
                0x00000000c000bec8                loadACPITables(unsigned char*)
                0x00000000c000c128                findRSDT(unsigned char*)
                0x00000000c000c274                findDataTable(unsigned char*, char*)
                0x00000000c000c2e8                scanMADT()
                0x00000000c000c740                ACPI::ACPI()
                0x00000000c000c740                ACPI::ACPI()
                0x00000000c000c794                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c890                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000c95c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000c964                ACPI::detectPCI()
                0x00000000c000cb70                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cb88                ACPI::open(int, int, void*)
 *fill*         0x00000000c000cf56        0x2 
 .text          0x00000000c000cf58       0xea krnl/assert.32
                0x00000000c000cf58                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d042       0xb6 krnl/atexit.32
                0x00000000c000d042                KeInitialiseAtexit()
                0x00000000c000d061                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d095                KeExecuteAtexit()
 .text          0x00000000c000d0f8       0x9f krnl/bootmsg.32
                0x00000000c000d0f8                KeDisplaySplashScreen()
                0x00000000c000d127                KeSetBootMessage(char const*)
 .text          0x00000000c000d197       0x5f krnl/c++.32
                0x00000000c000d197                __cxa_atexit
                0x00000000c000d19a                __cxa_finalize
                0x00000000c000d19b                __stack_chk_fail
                0x00000000c000d1d1                __cxa_pure_virtual
                0x00000000c000d1e2                operator new[](unsigned long)
                0x00000000c000d1e7                operator delete(void*, unsigned long)
                0x00000000c000d1ec                operator delete[](void*)
                0x00000000c000d1f1                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d1f6        0x2 
 .text          0x00000000c000d1f8       0x44 krnl/cdefs.32
                0x00000000c000d1f8                CUnlockScheduler
                0x00000000c000d210                CLockScheduler
                0x00000000c000d220                CPrintf
 .text          0x00000000c000d23c      0xd51 krnl/cm.32
                0x00000000c000d23c                CmOpen(char const*)
                0x00000000c000d35a                CmClose(Reghive_Tag*)
                0x00000000c000d370                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d3ac                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d423                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d462                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d494                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d4d0                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d4f8                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d519                CmExpand(Reghive_Tag*, int)
                0x00000000c000d594                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d61a                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d70e                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d846                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d8a7                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d8d7                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000d90e                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000d938                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000d978                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000da1c                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000da4a                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dbe7                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000dc34                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000dcae                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000dd01                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000ddc5                zStrtok(char*, char const*)
                0x00000000c000de37                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000deb8                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000df5b                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000df8d        0x3 
 .text          0x00000000c000df90       0x1d krnl/compat.32
                0x00000000c000df90                Krnl::handlePowerButton()
                0x00000000c000dfa0                Krnl::handleSleepButton()
 *fill*         0x00000000c000dfad        0x1 
 .text          0x00000000c000dfae      0x2c3 krnl/computer.32
                0x00000000c000dfae                Computer::close(int, int, void*)
                0x00000000c000dfb4                Computer::open(int, int, void*)
                0x00000000c000e09a                KeFirstTask()
                0x00000000c000e1bc                Computer::Computer()
                0x00000000c000e1bc                Computer::Computer()
                0x00000000c000e200                KePrepareShutdown()
                0x00000000c000e220                KeShutdown()
                0x00000000c000e244                KeSleep()
                0x00000000c000e250                KeRestart()
 .text          0x00000000c000e271       0x2b krnl/crc32.32
                0x00000000c000e271                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e29c      0x5bf krnl/env.32
                0x00000000c000e29c                EnvVarContainer::getEnv(char const*)
                0x00000000c000e2da                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e39c                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e39e                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e5c2                EnvVarContainer::__loadSystem()
                0x00000000c000e5dc                EnvVarContainer::__loadUser()
                0x00000000c000e5de                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e5de                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e600                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e600                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e630                KeGetEnv(Process*, char const*)
                0x00000000c000e695                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e6af                KeSetEnvUser(char const*, char const*)
                0x00000000c000e6ce                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e6e1                KeDeleteEnvSystem(char const*)
                0x00000000c000e6e2                KeDeleteEnvUser(char const*)
                0x00000000c000e6e3                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e6e4                KeNewProcessEnv(Process*)
                0x00000000c000e706                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e752                KeLoadSystemEnv()
                0x00000000c000e780                KeLoadUserEnv()
                0x00000000c000e7a6                KeFlushEnv()
                0x00000000c000e7a7                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e7c7                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e85b        0x1 
 .text          0x00000000c000e85c      0x361 krnl/fault.32
                0x00000000c000e85c                KeSetupInterrupts()
                0x00000000c000e8d4                int_handler
                0x00000000c000ea04                KeDisplayProgramFault(char const*)
                0x00000000c000ea54                KeGeneralProtectionFault(void*, void*)
                0x00000000c000eaa8                KePageFault(void*, void*)
                0x00000000c000eb0c                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000eb1c                KeOtherFault(void*, void*)
                0x00000000c000eb50                KeOpcodeFault(void*, void*)
                0x00000000c000eba4                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000ebbd        0x1 
 .text          0x00000000c000ebbe      0x1db krnl/gdt.32
                0x00000000c000ebbe                GDTEntry::setBase(unsigned int)
                0x00000000c000ebda                GDTEntry::setLimit(unsigned int)
                0x00000000c000ebf8                GDT::GDT()
                0x00000000c000ebf8                GDT::GDT()
                0x00000000c000ec0e                GDT::addEntry(GDTEntry)
                0x00000000c000ec30                GDT::getNumberOfEntries()
                0x00000000c000ec38                GDT::flush()
                0x00000000c000ec5a                GDT::setup()
 .text          0x00000000c000ed99       0x20 krnl/idle.32
                0x00000000c000ed99                idleFunction(void*)
 *fill*         0x00000000c000edb9        0x3 
 .text          0x00000000c000edbc      0x46c krnl/idt.32
                0x00000000c000edbc                IDTEntry::IDTEntry(bool)
                0x00000000c000edbc                IDTEntry::IDTEntry(bool)
                0x00000000c000ee36                IDTEntry::setOffset(unsigned int)
                0x00000000c000ee4c                IDT::IDT()
                0x00000000c000ee4c                IDT::IDT()
                0x00000000c000ee4e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ee56                IDT::addEntry(IDTEntry, int)
                0x00000000c000ee70                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000eea8                IDT::flush()
                0x00000000c000eec2                IDT::setup()
 .text          0x00000000c000f228       0x9a krnl/inlines.32
                0x00000000c000f228                CPU::current()
                0x00000000c000f234                operator new(unsigned long)
                0x00000000c000f239                operator delete(void*)
                0x00000000c000f23e                disableIRQs()
                0x00000000c000f240                enableIRQs()
                0x00000000c000f242                lockScheduler()
                0x00000000c000f24a                unlockScheduler()
                0x00000000c000f25c                lockStuff()
                0x00000000c000f26a                unlockStuff()
                0x00000000c000f2a7                Virt::getAKernelVAS()
                0x00000000c000f2ad                __not_memcpy
 .text          0x00000000c000f2c2      0x2ae krnl/intlformat.32
                0x00000000c000f2c2                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f4a4                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f4c6                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f4e8                KeSetLocale(klocale_t)
                0x00000000c000f4fe                KeInitialiseLocale()
                0x00000000c000f56c                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f56d                KeFormatCurrency(char*, int, double)
                0x00000000c000f56e                KeFormatNumber(char*, long long, long long)
                0x00000000c000f56f                KeFormatNumber(char*, double)
 .text          0x00000000c000f570      0x356 krnl/intops.32
                0x00000000c000f570                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f68c                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f7cc                KeGetDigitsInNumber(long long)
                0x00000000c000f838                KeItoa(unsigned long long, char*)
                0x00000000c000f868                KeItoa(long long, char*)
                0x00000000c000f898                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f8c6      0x204 krnl/kheap.32
                0x00000000c000f8c6                sbrk
                0x00000000c000f95a                sbrk_thunk
                0x00000000c000f990                mmap
                0x00000000c000f9ee                munmap
                0x00000000c000fa03                liballoc_lock()
                0x00000000c000fa11                liballoc_unlock()
                0x00000000c000fa29                liballoc_alloc(int)
                0x00000000c000fa41                liballoc_free(void*, int)
                0x00000000c000fa5c                realloc
                0x00000000c000fa70                malloc
                0x00000000c000fa80                free
                0x00000000c000fa90                rfree
                0x00000000c000faa0                calloc
 *fill*         0x00000000c000faca        0x2 
 .text          0x00000000c000facc      0x1d3 krnl/mailbox.32
                0x00000000c000facc                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fb2c                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fb8c                KeMailboxCreate()
                0x00000000c000fbc0                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fc24                KeMailboxGet(Mailbox*, void**)
                0x00000000c000fc88                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fc9f       0xfd krnl/main.32
                0x00000000c000fc9f                KeEntryPoint
 .text          0x00000000c000fd9c       0x1a krnl/mutex.32
                0x00000000c000fd9c                Mutex::Mutex()
                0x00000000c000fd9c                Mutex::Mutex()
 .text          0x00000000c000fdb6        0xc krnl/panic.32
                0x00000000c000fdb6                KePanic(char const*)
 .text          0x00000000c000fdc2      0x666 krnl/physmgr.32
                0x00000000c000fdc2                Phys::allocateDMA(unsigned long)
                0x00000000c000feb0                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000feeb                Phys::setPageState(unsigned long, bool)
                0x00000000c000ff2b                Phys::getPageState(unsigned long)
                0x00000000c000ff47                Phys::freePage(unsigned long)
                0x00000000c000ffb0                Phys::allocatePage()
                0x00000000c001008e                Phys::allocateContiguousPages(int)
                0x00000000c0010109                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0010141                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0010428      0x271 krnl/pipe.32
                0x00000000c0010428                Pipe::isAtty()
                0x00000000c001042c                Pipe::~Pipe()
                0x00000000c001042c                Pipe::~Pipe()
                0x00000000c0010450                Pipe::~Pipe()
                0x00000000c0010478                Pipe::write(unsigned long long, void*, int*)
                0x00000000c001053c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0010632                Pipe::Pipe(int)
                0x00000000c0010632                Pipe::Pipe(int)
 .text          0x00000000c0010699      0x10b krnl/powctrl.32
                0x00000000c0010699                KePowerThread(void*)
                0x00000000c00106ca                KeChangePowerSettings(PowerSettings)
                0x00000000c00106e0                KeUserIOReceived()
                0x00000000c00106eb                KeHandlePowerButton()
                0x00000000c0010703                KeHandleSleepButton()
                0x00000000c001071b                KeSetupPowerManager()
 .text          0x00000000c00107a4       0x9b krnl/random.32
                0x00000000c00107a4                KeRand()
                0x00000000c00107e4                KeSeedRand(unsigned int)
                0x00000000c001080d                KeInitRand()
 *fill*         0x00000000c001083f        0x1 
 .text          0x00000000c0010840      0x1bc krnl/resolve.32
                0x00000000c0010840                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00109fc      0x401 krnl/semaphore.32
                0x00000000c00109fc                Semaphore::Semaphore(int)
                0x00000000c00109fc                Semaphore::Semaphore(int)
                0x00000000c0010a2c                Semaphore::tryAcquire()
                0x00000000c0010b00                Semaphore::assertLocked(char const*)
                0x00000000c0010b8c                Semaphore::acquire(int)
                0x00000000c0010d30                Semaphore::acquire()
                0x00000000c0010d4c                Semaphore::release()
 .text          0x00000000c0010dfd      0x31f krnl/signal.32
                0x00000000c0010dfd                KiSigKill(int)
                0x00000000c0010e11                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010e12                KiDefaultSignalHandlerPause(int)
                0x00000000c0010e3e                KiDefaultSignalHandlerResume(int)
                0x00000000c0010e6a                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010e6f                KeInitSignals()
                0x00000000c0010ebe                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010ef4                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010f71                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011068                KiCheckSignalZ
                0x00000000c00110aa                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00110e5                KiFinishSignalZ
 .text          0x00000000c001111c      0xe1d krnl/syscalls.32
                0x00000000c001111c                SysSeekDir(regs*)
                0x00000000c0011121                SysTellDir(regs*)
                0x00000000c0011126                SysVerify(regs*)
                0x00000000c0011130                SysGetArgc(regs*)
                0x00000000c0011144                SysTTYName(regs*)
                0x00000000c001114c                SysFormatDisk(regs*)
                0x00000000c00111b3                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011207                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011260                SysRealpath(regs*)
                0x00000000c00112ae                SysReadDir(regs*)
                0x00000000c001132e                SysIsATTY(regs*)
                0x00000000c0011388                SysSeek(regs*)
                0x00000000c00113e6                SysTell(regs*)
                0x00000000c001145b                SysSize(regs*)
                0x00000000c00114d5                SysSizeFromFilename(regs*)
                0x00000000c0011608                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c001173b                SysClose(regs*)
                0x00000000c00117a0                SysOpenDir(regs*)
                0x00000000c001181d                SysMakeDir(regs*)
                0x00000000c001188b                SysCloseDir(regs*)
                0x00000000c00118df                SysWait(regs*)
                0x00000000c0011900                SysNotImpl(regs*)
                0x00000000c001191b                SysPanic(regs*)
                0x00000000c0011936                SysRmdir(regs*)
                0x00000000c0011994                SysUnlink(regs*)
                0x00000000c00119f2                SysGetArgv(regs*)
                0x00000000c0011a3f                SysUSleep(regs*)
                0x00000000c0011a68                SysSpawn(regs*)
                0x00000000c0011ad9                SysGetEnv(regs*)
                0x00000000c0011b8e                SysSetFatAttrib(regs*)
                0x00000000c0011bf7                SysShutdown(regs*)
                0x00000000c0011c54                SysPipe(regs*)
                0x00000000c0011c99                SysGetUnixTime(regs*)
                0x00000000c0011cad                string_ends_with(char const*, char const*)
                0x00000000c0011cf8                SysOpen(regs*)
                0x00000000c0011ef7                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011f39        0x1 
 .text          0x00000000c0011f3a      0xadd krnl/terminal.32
                0x00000000c0011f3a                VgaText::isAtty()
                0x00000000c0011f3e                VgaText::~VgaText()
                0x00000000c0011f3e                VgaText::~VgaText()
                0x00000000c0011f62                VgaText::~VgaText()
                0x00000000c0011f8c                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0011fac                setTerminalScrollLock(bool)
                0x00000000c0011fad                doTerminalCycle()
                0x00000000c0011fae                addToTerminalCycle(VgaText*)
                0x00000000c0011faf                scrollTerminalScrollLock(int)
                0x00000000c0011fb0                VgaText::updateTitle()
                0x00000000c0011fb2                VgaText::load()
                0x00000000c0011fb4                VgaText::updateCursor()
                0x00000000c0011fca                VgaText::doANSI_SGR(int)
                0x00000000c001203e                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c001204e                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c001205e                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c001207e                VgaText::setTitleTextColour(VgaColour)
                0x00000000c001208a                VgaText::setTitleColour(VgaColour)
                0x00000000c0012096                VgaText::setTitle(char*)
                0x00000000c0012098                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00120aa                VgaText::scrollScreen()
                0x00000000c001213c                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c001214c                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00121f8                VgaText::getCursorX()
                0x00000000c0012200                VgaText::getCursorY()
                0x00000000c0012208                VgaText::setCursor(int, int)
                0x00000000c001221f                setActiveTerminal(VgaText*)
                0x00000000c001226a                VgaText::clearScreen()
                0x00000000c00122b8                VgaText::setCursorX(int)
                0x00000000c00122d0                VgaText::setCursorY(int)
                0x00000000c00122e8                VgaText::incrementCursor(bool)
                0x00000000c001233c                VgaText::decrementCursor(bool)
                0x00000000c001235e                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c001242e                VgaText::putchar(char)
                0x00000000c0012516                VgaText::putx(unsigned int)
                0x00000000c001255c                VgaText::puts(char const*)
                0x00000000c0012582                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00125ce                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0012748                VgaText::VgaText(char const*)
                0x00000000c0012748                VgaText::VgaText(char const*)
                0x00000000c00128a8                VgaText::receiveKey(unsigned char)
                0x00000000c0012a16                VgaText::doUpdate()
 *fill*         0x00000000c0012a17        0x1 
 .text          0x00000000c0012a18      0x224 krnl/tss.32
                0x00000000c0012a18                TSS::TSS()
                0x00000000c0012a18                TSS::TSS()
                0x00000000c0012a28                TSS::setESP(unsigned long)
                0x00000000c0012a3c                TSS::flush()
                0x00000000c0012a5c                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012c3c      0x4dc krnl/unixfile.32
                0x00000000c0012c3c                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012c92                ReservedFilename::isAtty()
                0x00000000c0012cae                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012d0c                UnixFile::getFileDescriptor()
                0x00000000c0012d14                UnixFile::UnixFile(int)
                0x00000000c0012d14                UnixFile::UnixFile(int)
                0x00000000c0012ec8                ReservedFilename::ReservedFilename(int)
                0x00000000c0012ec8                ReservedFilename::ReservedFilename(int)
                0x00000000c0012efa                UnixFile::~UnixFile()
                0x00000000c0012efa                UnixFile::~UnixFile()
                0x00000000c0012f96                UnixFile::~UnixFile()
                0x00000000c0012fbe                ReservedFilename::~ReservedFilename()
                0x00000000c0012fbe                ReservedFilename::~ReservedFilename()
                0x00000000c0012fe2                ReservedFilename::~ReservedFilename()
                0x00000000c0013009                KeGetFileFromDescriptor(int)
 .text          0x00000000c0013118     0x14be krnl/virtmgr.32
                0x00000000c0013118                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0013152                Virt::getPageState(unsigned long)
                0x00000000c0013175                Virt::allocateKernelVirtualPages(int)
                0x00000000c0013291                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00132b4                Virt::swapIDToSector(unsigned long)
                0x00000000c00132ca                Virt::allocateSwapfilePage()
                0x00000000c0013349                Virt::virtualMemorySetup()
                0x00000000c001339a                Virt::setupPageSwapping(int)
                0x00000000c001340c                VAS::setCPUSpecific(unsigned long)
                0x00000000c001340e                VAS::VAS(VAS*)
                0x00000000c001340e                VAS::VAS(VAS*)
                0x00000000c0013426                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0013454                VAS::getPageTableEntry(unsigned long)
                0x00000000c0013473                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00135b0                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00135d4                VAS::virtualToPhysical(unsigned long)
                0x00000000c00135ee                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0013630                VAS::VAS()
                0x00000000c0013630                VAS::VAS()
                0x00000000c001369a                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00136ba                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00136e6                VAS::~VAS()
                0x00000000c00136e6                VAS::~VAS()
                0x00000000c001384e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013956                VAS::allocatePages(int, int)
                0x00000000c0013a48                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013aa2                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013b92                VAS::VAS(bool)
                0x00000000c0013b92                VAS::VAS(bool)
                0x00000000c0013d7a                VAS::evict(unsigned long)
                0x00000000c0013e7e                VAS::canLockPage(unsigned long)
                0x00000000c0013e98                VAS::unlockPage(unsigned long)
                0x00000000c0013ecc                VAS::canLockPages(unsigned long, int)
                0x00000000c0013f08                VAS::unlockPages(unsigned long, int)
                0x00000000c0013f44                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0014254                VAS::lockPage(unsigned long)
                0x00000000c00142c6                VAS::lockPages(unsigned long, int)
                0x00000000c0014302                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0014376                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00143a2                VAS::scanForEviction()
                0x00000000c00144db                mapVASFirstTime
 .text          0x00000000c00145d6       0x36 sys/eject.32
                0x00000000c00145d6                SysEject(regs*)
 .text          0x00000000c001460c       0x18 sys/exit.32
                0x00000000c001460c                SysExit(regs*)
 .text          0x00000000c0014624       0x1f sys/getcwd.32
                0x00000000c0014624                SysGetCwd(regs*)
 .text          0x00000000c0014643       0x26 sys/getpid.32
                0x00000000c0014643                SysGetPID(regs*)
 .text          0x00000000c0014669       0x21 sys/getramdata.32
                0x00000000c0014669                SysGetRAMData(regs*)
 .text          0x00000000c001468a       0x97 sys/getvgaptr.32
                0x00000000c001468a                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014721        0x3 
 .text          0x00000000c0014724       0xb9 sys/kill.32
                0x00000000c0014724                SysKill(regs*)
 .text          0x00000000c00147dd       0xa8 sys/loaddll.32
                0x00000000c00147dd                SysLoadDLL(regs*)
 .text          0x00000000c0014885       0x68 sys/read.32
                0x00000000c0014885                SysRead(regs*)
 .text          0x00000000c00148ed       0x29 sys/registersignal.32
                0x00000000c00148ed                SysRegisterSignal(regs*)
 .text          0x00000000c0014916      0x1cc sys/registry.32
                0x00000000c0014916                SysRegistryGetTypeFromPath(regs*)
                0x00000000c001495a                SysRegistryReadExtent(regs*)
                0x00000000c00149a2                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00149b9                SysRegistryEnterDirectory(regs*)
                0x00000000c00149d0                SysRegistryGetNext(regs*)
                0x00000000c00149e7                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014a21                SysRegistryOpen(regs*)
                0x00000000c0014a35                SysRegistryClose(regs*)
                0x00000000c0014a4c                SysRegistryEasyReadString(regs*)
                0x00000000c0014a98                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014ae2       0x55 sys/sbrk.32
                0x00000000c0014ae2                SysSbrk(regs*)
 .text          0x00000000c0014b37       0x1c sys/setcwd.32
                0x00000000c0014b37                SysSetCwd(regs*)
 .text          0x00000000c0014b53       0xf1 sys/settime.32
                0x00000000c0014b53                SysSetTime(regs*)
 .text          0x00000000c0014c44       0x73 sys/symlink.32
                0x00000000c0014c44                SysSymlink(regs*)
 .text          0x00000000c0014cb7       0x3e sys/timezone.32
                0x00000000c0014cb7                SysTimezone(regs*)
 .text          0x00000000c0014cf5       0xfc sys/truncate.32
                0x00000000c0014cf5                SysTruncate(regs*)
 .text          0x00000000c0014df1       0x68 sys/write.32
                0x00000000c0014df1                SysWrite(regs*)
 .text          0x00000000c0014e59       0x9d sys/wsbe.32
                0x00000000c0014e59                SysWsbe(regs*)
 .text          0x00000000c0014ef6       0x28 sys/yield.32
                0x00000000c0014ef6                SysYield(regs*)
 .text          0x00000000c0014f1e     0x1228 thr/elf.32
                0x00000000c0014f1e                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00151a9                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00153c8                Thr::runtimeReferenceHelper()
                0x00000000c00153db                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001542a                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00156e8                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015e29                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015e5b                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015e92                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015eac                Thr::loadDLL(char const*, bool)
                0x00000000c001610d                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0016146       0x5a thr/exec.32
                0x00000000c0016146                KeProcessExec(Process*, char const*)
 .text          0x00000000c00161a0     0x11b5 thr/prcssthr.32
                0x00000000c00161a0                userModeEntryPoint(void*)
                0x00000000c00161cc                changeTSS
                0x00000000c00161fc                switchToThread(ThreadControlBlock*)
                0x00000000c00162ac                Process::addArgs(char**)
                0x00000000c0016318                Process::Process(char const*, Process*, char**)
                0x00000000c0016318                Process::Process(char const*, Process*, char**)
                0x00000000c0016540                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016540                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001672c                taskStartupFunction
                0x00000000c0016738                KeDisablePreemption()
                0x00000000c0016760                KeRestorePreemption()
                0x00000000c0016780                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016894                Process::createUserThread()
                0x00000000c00168b4                setupMultitasking(void (*)())
                0x00000000c00169d8                schedule()
                0x00000000c0016a6c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016a98                blockTask(TaskState)
                0x00000000c0016ad4                waitTask(int, int*, int)
                0x00000000c0016b18                milliTenthSleepUntil(unsigned int)
                0x00000000c0016bc0                milliTenthSleep(unsigned int)
                0x00000000c0016bd4                sleep(unsigned int)
                0x00000000c0016be4                taskReturned
                0x00000000c0016c2c                Thr::processFromPID(int)
                0x00000000c0016cd8                unblockTask(ThreadControlBlock*)
                0x00000000c0016d8c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0017060                cleanerTaskFunction(void*)
                0x00000000c0017178                terminateTask(int)
                0x00000000c0017288                Thr::terminateFromIRQ(int)
 .text          0x00000000c0017355      0xd18 vm86/vm8086.32
                0x00000000c0017355                Vm::inbv(unsigned short)
                0x00000000c0017368                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001739e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00173ae                Vm::getSegment(unsigned int)
                0x00000000c00173b6                Vm::getOffset(unsigned int)
                0x00000000c00173bb                Vm::mainloop2()
                0x00000000c00173f5                Vm::mainVm8086Loop(void*)
                0x00000000c0017408                Vm::mainloop3(unsigned long)
                0x00000000c001742e                Vm::initialise8086()
                0x00000000c0017471                Vm::resetConventionalMemory8086()
                0x00000000c0017472                Vm::finish8086()
                0x00000000c00174d4                Vm::getOutput8086(unsigned char*)
                0x00000000c00174f9                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017626                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017832                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00178cf                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00178e0                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00178f2                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017903                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017918                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001792e                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017943                Vm::faultHandler(regs*)
 *fill*         0x00000000c001806d        0x1 
 .text          0x00000000c001806e     0x1ee9 arch/i386/hal.32
                0x00000000c001806e                noCopro(unsigned long)
                0x00000000c0018070                CPU::close(int, int, void*)
                0x00000000c0018073                x86ReadCMOS(unsigned char)
                0x00000000c00180c7                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0018129                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0018148                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018165                AMD_K6_writeback(int, int, int)
                0x00000000c0018225                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00182c3                cpuidCheckEDX(unsigned int)
                0x00000000c00182f0                cpuidCheckECX(unsigned int)
                0x00000000c001831e                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001834c                cpuidCheckExtendedECX(unsigned int)
                0x00000000c001837a                HalDetectFeatures()
                0x00000000c0019145                HalEnableNMI()
                0x00000000c0019158                HalDisableNMI()
                0x00000000c001916b                HalGetNMIState()
                0x00000000c0019171                x86rdmsr(unsigned int)
                0x00000000c00191af                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c00191f4                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c001920a                HalFindRSDP()
                0x00000000c001929f                HalHandlePageFault(void*, void*)
                0x00000000c001934c                HalHandleOpcodeFault(void*, void*)
                0x00000000c001938e                HalDisplayDebugInfo(void*)
                0x00000000c001971c                HalReceivedNMI()
                0x00000000c00197b7                HalSystemIdle()
                0x00000000c0019816                i386SaveCoprocessor(void*)
                0x00000000c001982a                i386LoadCoprocessor(void*)
                0x00000000c001983e                x87EmulHandler(regs*, void*)
                0x00000000c00198db                HalInitialiseCoprocessor()
                0x00000000c001995f                HalPanic(char const*)
                0x00000000c0019a73                HalQueryPerformanceCounter()
                0x00000000c0019a83                HalInitialise()
                0x00000000c0019c15                HalMakeBeep(int)
                0x00000000c0019c4f                HalGetRand()
                0x00000000c0019c52                HalEndOfInterrupt(int)
                0x00000000c0019c7d                HalRestart()
                0x00000000c0019c7e                HalShutdown()
                0x00000000c0019c7f                HalSleep()
                0x00000000c0019c80                CPU::CPU()
                0x00000000c0019c80                CPU::CPU()
                0x00000000c0019d04                CPU::setupSMEP()
                0x00000000c0019d10                CPU::setupUMIP()
                0x00000000c0019d1a                CPU::setupTSC()
                0x00000000c0019d24                CPU::setupLargePages()
                0x00000000c0019d2e                CPU::setupPAT()
                0x00000000c0019d60                CPU::setupMTRR()
                0x00000000c0019d62                CPU::setupGlobalPages()
                0x00000000c0019d6c                CPU::allowUsermodeDataAccess()
                0x00000000c0019d7a                CPU::prohibitUsermodeDataAccess()
                0x00000000c0019d88                CPU::setupSMAP()
                0x00000000c0019d96                CPU::setupFeatures()
                0x00000000c0019e62                CPU::open(int, int, void*)
 .text          0x00000000c0019f57      0x268 arch/i386/intctrl.32
                0x00000000c0019f57                convertLegacyIRQNumber(int)
                0x00000000c0019f93                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0019fdd                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001a11a                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001a14e                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001a1bf        0x1 
 .text          0x00000000c001a1c0      0x2dc arch/i386/pic.32
                0x00000000c001a1c0                picIoWait()
                0x00000000c001a1c8                picDisable()
                0x00000000c001a1fc                picGetIRQReg(int)
                0x00000000c001a278                picOpen()
                0x00000000c001a3fc                picEOI(int)
 .text          0x00000000c001a49c      0x5ed arch/i386/rtc.32
                0x00000000c001a49c                RTC::open(int, int, void*)
                0x00000000c001a4a0                RTC::close(int, int, void*)
                0x00000000c001a4a4                RTC::timeInSecondsUTC()
                0x00000000c001a4b6                RTC::timeInDatetimeUTC()
                0x00000000c001a4dc                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001a51a                RTC::~RTC()
                0x00000000c001a51a                RTC::~RTC()
                0x00000000c001a53e                RTC::~RTC()
                0x00000000c001a568                RTC::get_update_in_progress_flag()
                0x00000000c001a57c                RTC::completeRTCRefresh()
                0x00000000c001a82a                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001a9a0                rtcIRQHandler(regs*, void*)
                0x00000000c001a9e0                RTC::RTC()
                0x00000000c001a9e0                RTC::RTC()
 *fill*         0x00000000c001aa89        0x3 
 .text          0x00000000c001aa8c      0x1f4 arch/i386/vga.32
                0x00000000c001aa8c                HalConsoleScroll(int, int)
                0x00000000c001ab94                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001abf8                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001ac80     0x14f3 fs/fat/vfslink.32
                0x00000000c001ac80                FAT::getName()
                0x00000000c001ac88                FAT::tell(void*, unsigned long long*)
                0x00000000c001acc4                FAT::stat(void*, unsigned long long*)
                0x00000000c001ad00                FAT::~FAT()
                0x00000000c001ad00                FAT::~FAT()
                0x00000000c001ad24                FAT::~FAT()
                0x00000000c001ad4c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001adf0                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001aed0                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b0b4                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001b2d0                FAT::allocateSwapfile(char const*, int)
                0x00000000c001b490                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b600                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001b660                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001b6c0                FAT::close(void*)
                0x00000000c001b714                FAT::closeDir(void*)
                0x00000000c001b768                FAT::truncate(void*, unsigned long long)
                0x00000000c001b7d4                FAT::seek(void*, unsigned long long)
                0x00000000c001b82c                fatWrapperReadDisk
                0x00000000c001b86c                fatWrapperWriteDisk
                0x00000000c001b8ac                fatWrapperIoctl
                0x00000000c001b9cc                FAT::FAT()
                0x00000000c001b9cc                FAT::FAT()
                0x00000000c001ba24                FAT::fixFilepath(char*)
                0x00000000c001ba64                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001bbd8                FAT::openDir(char const*, void**)
                0x00000000c001bc88                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001bd80                FAT::unlink(char const*)
                0x00000000c001be00                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001bfb8                FAT::rename(char const*, char const*)
                0x00000000c001c084                FAT::mkdir(char const*)
                0x00000000c001c104                FAT::exists(char const*)
 *fill*         0x00000000c001c173        0x1 
 .text          0x00000000c001c174       0x94 fs/iso9660/helper.32
                0x00000000c001c174                isoReadDiscSectorHelper
                0x00000000c001c1d0                iso_kprintf
                0x00000000c001c1ec                iso_kprintfd
 .text          0x00000000c001c208      0x71a fs/iso9660/vfslink.32
                0x00000000c001c208                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001c20e                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001c214                ISO9660::getName()
                0x00000000c001c21a                ISO9660::closeDir(void*)
                0x00000000c001c224                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c22a                ISO9660::unlink(char const*)
                0x00000000c001c230                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001c236                ISO9660::rename(char const*, char const*)
                0x00000000c001c23c                ISO9660::mkdir(char const*)
                0x00000000c001c242                ISO9660::~ISO9660()
                0x00000000c001c242                ISO9660::~ISO9660()
                0x00000000c001c266                ISO9660::~ISO9660()
                0x00000000c001c28e                ISO9660::exists(char const*)
                0x00000000c001c2a2                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001c388                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001c3d0                ISO9660::seek(void*, unsigned long long)
                0x00000000c001c412                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001c450                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001c4a2                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c5e4                ISO9660::close(void*)
                0x00000000c001c614                ISO9660::openDir(char const*, void**)
                0x00000000c001c6ee                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c809                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001c888                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001c8fa                ISO9660::ISO9660()
                0x00000000c001c8fa                ISO9660::ISO9660()
 .text          0x00000000c001c922      0x26c hal/sound/sndcard.32
                0x00000000c001c922                SoundCard::beginPlayback()
                0x00000000c001c930                SoundCard::stopPlayback()
                0x00000000c001c93e                SoundCard::SoundCard(char const*)
                0x00000000c001c93e                SoundCard::SoundCard(char const*)
                0x00000000c001c9dc                SoundCard::~SoundCard()
                0x00000000c001c9dc                SoundCard::~SoundCard()
                0x00000000c001ca00                SoundCard::~SoundCard()
                0x00000000c001ca2a                SoundCard::configureRates(int, int, int)
                0x00000000c001ca5a                SoundCard::getSamples16(int, short*)
                0x00000000c001cab6                SoundCard::getSamples32(int, int*)
                0x00000000c001cb3c                SoundCard::addChannel(SoundPort*)
                0x00000000c001cb7a                SoundCard::removeChannel(int)
 *fill*         0x00000000c001cb8e        0x2 
 .text          0x00000000c001cb90      0x42f hal/sound/sndport.32
                0x00000000c001cb90                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001cb90                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001cc1c                SoundPort::~SoundPort()
                0x00000000c001cc1c                SoundPort::~SoundPort()
                0x00000000c001cc50                SoundPort::unpause()
                0x00000000c001cc5c                SoundPort::pause()
                0x00000000c001cc68                SoundPort::getBufferUsed()
                0x00000000c001cc70                SoundPort::getBufferSize()
                0x00000000c001cc78                SoundPort::buffer8(signed char*, int)
                0x00000000c001cd0c                SoundPort::buffer16(short*, int)
                0x00000000c001cda0                SoundPort::buffer32(int*, int)
                0x00000000c001ce2c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001cefc                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001cfbf        0x0 hw/bus/isa.32
 *fill*         0x00000000c001cfbf        0x1 
 .text          0x00000000c001cfc0      0xc25 hw/bus/pci.32
                0x00000000c001cfc0                PCI::open(int, int, void*)
                0x00000000c001cfde                PCI::close(int, int, void*)
                0x00000000c001cfe2                PCI::PCI()
                0x00000000c001cfe2                PCI::PCI()
                0x00000000c001d07a                PCI::readBAR8(unsigned int, int)
                0x00000000c001d096                PCI::readBAR16(unsigned int, int)
                0x00000000c001d0b4                PCI::readBAR32(unsigned int, int)
                0x00000000c001d0d0                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001d0f0                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001d112                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001d132                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d1a8                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d252                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001d276                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001d29e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001d2e8                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001d310                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001d334                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001d358                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001d380                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d3e4                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001d4ca                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001d794                PCI::checkBus(unsigned char)
                0x00000000c001d7b8                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001d99e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001db1a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001db8c                PCI::detect()
 *fill*         0x00000000c001dbe5        0x1 
 .text          0x00000000c001dbe6      0xe50 hw/diskctrl/ide.32
                0x00000000c001dbe6                IDE::close(int, int, void*)
                0x00000000c001dbea                IDE::IDE()
                0x00000000c001dbea                IDE::IDE()
                0x00000000c001dc1e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001dc30                selectDrive(unsigned char, unsigned char)
                0x00000000c001dc32                IDE::getBase(unsigned char)
                0x00000000c001dc44                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001dd04                IDE::read(unsigned char, unsigned char)
                0x00000000c001ddb8                IDE::waitInterrupt(unsigned char)
                0x00000000c001de1a                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001de36                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001de52                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001de9c                IDE::open(int, int, void*)
                0x00000000c001e3f4                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001e4c4                IDE::detect()
                0x00000000c001e928                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001e9e2                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001ea36      0x33f hw/diskctrl/satabus.32
                0x00000000c001ea36                SATABus::close(int, int, void*)
                0x00000000c001ea3a                SATABus::detect()
                0x00000000c001ea3c                SATABus::SATABus()
                0x00000000c001ea3c                SATABus::SATABus()
                0x00000000c001eac2                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001eaf4                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001eb3c                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001eb5c                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001eb86                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001ec98                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001ed42                SATABus::open(int, int, void*)
 *fill*         0x00000000c001ed75        0x1 
 .text          0x00000000c001ed76      0x7c1 hw/diskphys/ata.32
                0x00000000c001ed76                ATA::close(int, int, void*)
                0x00000000c001ed9a                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001ed9c                ATA::ATA()
                0x00000000c001ed9c                ATA::ATA()
                0x00000000c001edca                ATA::flush(bool)
                0x00000000c001ee18                ATA::readyForCommand()
                0x00000000c001ee64                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f26c                ATA::read(unsigned long long, int, void*)
                0x00000000c001f2b8                ATA::write(unsigned long long, int, void*)
                0x00000000c001f304                ATA::detectCHS()
                0x00000000c001f32e                ATA::open(int, int, void*)
                0x00000000c001f519                combineCharAndColour(char, unsigned char)
                0x00000000c001f52a                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001f537        0x1 
 .text          0x00000000c001f538      0x612 hw/diskphys/atapi.32
                0x00000000c001f538                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001f53e                ATAPI::close(int, int, void*)
                0x00000000c001f562                ATAPI::ATAPI()
                0x00000000c001f562                ATAPI::ATAPI()
                0x00000000c001f590                ATAPI::readyForCommand()
                0x00000000c001f5e2                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001f8a2                ATAPI::diskRemoved()
                0x00000000c001f8dc                ATAPI::eject()
                0x00000000c001f924                ATAPI::diskInserted()
                0x00000000c001f930                ATAPI::detectMedia()
                0x00000000c001f9f0                ATAPI::open(int, int, void*)
                0x00000000c001fad0                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001fb4a      0x44a hw/diskphys/sata.32
                0x00000000c001fb4a                SATA::close(int, int, void*)
                0x00000000c001fb6e                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001fb70                SATA::open(int, int, void*)
                0x00000000c001fc28                SATA::SATA()
                0x00000000c001fc28                SATA::SATA()
                0x00000000c001fc56                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001fedc                SATA::read(unsigned long long, int, void*)
                0x00000000c001ff28                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001ff94      0x5d8 hw/diskphys/satapi.32
                0x00000000c001ff94                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ff9a                SATAPI::close(int, int, void*)
                0x00000000c001ffbe                SATAPI::SATAPI()
                0x00000000c001ffbe                SATAPI::SATAPI()
                0x00000000c001ffec                SATAPI::diskRemoved()
                0x00000000c001ffee                SATAPI::diskInserted()
                0x00000000c002000a                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c00202f0                SATAPI::eject()
                0x00000000c002032c                SATAPI::detectMedia()
                0x00000000c0020382                SATAPI::open(int, int, void*)
                0x00000000c0020482                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c002056c      0x443 hw/intctrl/apic.32
                0x00000000c002056c                IOAPIC::close(int, int, void*)
                0x00000000c0020572                apicGetBase()
                0x00000000c0020590                IOAPIC::IOAPIC()
                0x00000000c0020590                IOAPIC::IOAPIC()
                0x00000000c00205b8                apicOpen()
                0x00000000c0020744                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0020776                IOAPIC::read(int)
                0x00000000c002079e                IOAPIC::open(int, int, void*)
                0x00000000c0020884                IOAPIC::write(int, int)
                0x00000000c00208b0                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c00209af        0x1 
 .text          0x00000000c00209b0       0xf0 hw/timer/apictimer.32
                0x00000000c00209b0                APICTimer::close(int, int, void*)
                0x00000000c00209b8                apicTimerHandler(regs*, void*)
                0x00000000c00209e0                APICTimer::open(int, int, void*)
                0x00000000c0020a50                APICTimer::write(int)
                0x00000000c0020a78                APICTimer::APICTimer()
                0x00000000c0020a78                APICTimer::APICTimer()
 .text          0x00000000c0020aa0      0x1ad hw/timer/pit.32
                0x00000000c0020aa0                PIT::write(int)
                0x00000000c0020b24                pitHandler(regs*, void*)
                0x00000000c0020b4c                PIT::open(int, int, void*)
                0x00000000c0020b9c                PIT::close(int, int, void*)
                0x00000000c0020bcc                PIT::PIT()
                0x00000000c0020bcc                PIT::PIT()
 *fill*         0x00000000c0020c4d        0x3 
 .text          0x00000000c0020c50       0x6f arch/i386/avx.32
                0x00000000c0020c50                avxDetect
                0x00000000c0020c7a                avxSave
                0x00000000c0020c8b                avxLoad
                0x00000000c0020c9c                avxInit
                0x00000000c0020cbe                avxClose
 *fill*         0x00000000c0020cbf        0x1 
 .text          0x00000000c0020cc0      0x2ec arch/i386/interrupt.32
                0x00000000c0020cc0                isr0
                0x00000000c0020cd0                isr1
                0x00000000c0020cda                isr2
                0x00000000c0020ce4                isr3
                0x00000000c0020cee                isr4
                0x00000000c0020cf8                isr5
                0x00000000c0020d02                isr6
                0x00000000c0020d0c                isr7
                0x00000000c0020d16                isr8
                0x00000000c0020d1e                isr9
                0x00000000c0020d28                isr10
                0x00000000c0020d30                isr11
                0x00000000c0020d38                isr12
                0x00000000c0020d40                isr13
                0x00000000c0020d5a                isr14
                0x00000000c0020d62                isr15
                0x00000000c0020d6c                isr16
                0x00000000c0020d76                isr17
                0x00000000c0020d80                isr18
                0x00000000c0020d8a                irq3
                0x00000000c0020d94                irq4
                0x00000000c0020d9e                irq5
                0x00000000c0020da8                irq6
                0x00000000c0020db2                irq7
                0x00000000c0020dbc                irq8
                0x00000000c0020dc6                irq9
                0x00000000c0020dd0                irq10
                0x00000000c0020dda                irq11
                0x00000000c0020de4                irq12
                0x00000000c0020dee                irq13
                0x00000000c0020df8                irq14
                0x00000000c0020e02                irq15
                0x00000000c0020e0c                irq1
                0x00000000c0020e13                irq2
                0x00000000c0020e1a                isr96
                0x00000000c0020e21                irq0
                0x00000000c0020e26                int_common_stub
                0x00000000c0020e58                syscall_common_stub
                0x00000000c0020f5c                irq16
                0x00000000c0020f66                irq17
                0x00000000c0020f70                irq18
                0x00000000c0020f7a                irq19
                0x00000000c0020f84                irq20
                0x00000000c0020f8e                irq21
                0x00000000c0020f98                irq22
                0x00000000c0020fa2                irq23
 *fill*         0x00000000c0020fac        0x4 
 .text          0x00000000c0020fb0       0x10 arch/i386/rdrand.32
                0x00000000c0020fb0                i386GetRDRAND
 .text          0x00000000c0020fc0       0x39 arch/i386/sse.32
                0x00000000c0020fc0                sseDetect
                0x00000000c0020fd8                sseSave
                0x00000000c0020fe0                sseLoad
                0x00000000c0020fe8                sseInit
                0x00000000c0020ff8                sseClose
 *fill*         0x00000000c0020ff9        0x7 
 .text          0x00000000c0021000       0x4f arch/i386/x87.32
                0x00000000c0021006                x87Detect
                0x00000000c0021027                x87Save
                0x00000000c002102e                x87Load
                0x00000000c0021035                x87Init
                0x00000000c002104e                x87Close
 *fill*         0x00000000c002104f        0x1 
 .text          0x00000000c0021050       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0021075        0x0 crtn.32
 *fill*         0x00000000c0021075        0x3 
 .text          0x00000000c0021078      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0021078                __divdi3
 *fill*         0x00000000c00211c3        0x1 
 .text          0x00000000c00211c4      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c00211c4                __moddi3
 *fill*         0x00000000c0021342        0x2 
 .text          0x00000000c0021344       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021344                __udivdi3
 *fill*         0x00000000c0021443        0x1 
 .text          0x00000000c0021444      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021444                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021560        0x0
 .iplt          0x00000000c0021560        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002155e        0xf
 .init          0x00000000c002155e        0x3 crti.32
                0x00000000c002155e                _init
 .init          0x00000000c0021561        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021566        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c002156b        0x2 crtn.32

.fini           0x00000000c002156d        0xa
 .fini          0x00000000c002156d        0x3 crti.32
                0x00000000c002156d                _fini
 .fini          0x00000000c0021570        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021575        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021578       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021578       0x1a hal/device.32
                0x00000000c0021578                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021578                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021592       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021592       0x2a hal/device.32
                0x00000000c0021592                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00215bc       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00215bc       0xdc hal/device.32
                0x00000000c00215bc                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021698       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021698       0x42 hal/device.32
                0x00000000c0021698                LinkedList<Device>::LinkedList()
                0x00000000c0021698                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00216dc       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00216dc       0x1c hal/timer.32
                0x00000000c00216dc                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00216f8        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00216f8        0x7 hal/timer.32
                0x00000000c00216f8                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021700       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021700       0xbc hal/timer.32
                0x00000000c0021700                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00217bc       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00217bc       0xda hal/timer.32
                0x00000000c00217bc                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021898       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021898       0x23 hw/acpi.32
                0x00000000c0021898                ACPI::~ACPI()
                0x00000000c0021898                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c00218bc       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c00218bc       0x2a hw/acpi.32
                0x00000000c00218bc                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00218e8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00218e8        0x2 hw/acpi.32
                0x00000000c00218e8                LinkedList<Device>::~LinkedList()
                0x00000000c00218e8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00218ec       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00218ec       0x1c hw/acpi.32
                0x00000000c00218ec                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021908        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021908        0x7 hw/acpi.32
                0x00000000c0021908                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021910       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021910       0xb8 hw/acpi.32
                0x00000000c0021910                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c00219c8       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c00219c8       0x23 krnl/computer.32
                0x00000000c00219c8                Computer::~Computer()
                0x00000000c00219c8                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c00219ec       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c00219ec       0x2a krnl/computer.32
                0x00000000c00219ec                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021a16       0x24
 .text._Z10idleCommonv
                0x00000000c0021a16       0x24 krnl/idle.32
                0x00000000c0021a16                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021a3a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021a3a        0x2 krnl/unixfile.32
                0x00000000c0021a3a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0021a3a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021a3c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021a3c       0x42 krnl/unixfile.32
                0x00000000c0021a3c                LinkedList<UnixFile>::LinkedList()
                0x00000000c0021a3c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021a7e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021a7e       0xd3 krnl/unixfile.32
                0x00000000c0021a7e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0021b52        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0021b52        0x7 krnl/unixfile.32
                0x00000000c0021b52                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021b5a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021b5a       0xa1 krnl/unixfile.32
                0x00000000c0021b5a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021bfc        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021bfc        0x8 krnl/unixfile.32
                0x00000000c0021bfc                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021c04        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021c04        0x8 sys/kill.32
                0x00000000c0021c04                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021c0c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021c0c        0x2 thr/prcssthr.32
                0x00000000c0021c0c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0021c0c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021c10       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021c10       0x49 thr/prcssthr.32
                0x00000000c0021c10                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0021c10                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021c5c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021c5c       0x42 thr/prcssthr.32
                0x00000000c0021c5c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0021c5c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c0021c9e       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0021c9e       0x23 arch/i386/hal.32
                0x00000000c0021c9e                CPU::~CPU()
                0x00000000c0021c9e                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0021cc2       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0021cc2       0x2a arch/i386/hal.32
                0x00000000c0021cc2                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c0021cec       0x23
 .text._ZN3PCID2Ev
                0x00000000c0021cec       0x23 hw/bus/pci.32
                0x00000000c0021cec                PCI::~PCI()
                0x00000000c0021cec                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0021d10       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0021d10       0x2a hw/bus/pci.32
                0x00000000c0021d10                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0021d3a       0x23
 .text._ZN3IDED2Ev
                0x00000000c0021d3a       0x23 hw/diskctrl/ide.32
                0x00000000c0021d3a                IDE::~IDE()
                0x00000000c0021d3a                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0021d5e       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0021d5e       0x2a hw/diskctrl/ide.32
                0x00000000c0021d5e                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0021d88       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0021d88       0x23 hw/diskctrl/satabus.32
                0x00000000c0021d88                SATABus::~SATABus()
                0x00000000c0021d88                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0021dac       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0021dac       0x2a hw/diskctrl/satabus.32
                0x00000000c0021dac                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0021dd6       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0021dd6       0x23 hw/diskphys/ata.32
                0x00000000c0021dd6                ATA::~ATA()
                0x00000000c0021dd6                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0021dfa       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0021dfa       0x2a hw/diskphys/ata.32
                0x00000000c0021dfa                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0021e24       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0021e24       0x23 hw/diskphys/atapi.32
                0x00000000c0021e24                ATAPI::~ATAPI()
                0x00000000c0021e24                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0021e48       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0021e48       0x2a hw/diskphys/atapi.32
                0x00000000c0021e48                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0021e72       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0021e72       0x23 hw/diskphys/sata.32
                0x00000000c0021e72                SATA::~SATA()
                0x00000000c0021e72                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0021e96       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0021e96       0x2a hw/diskphys/sata.32
                0x00000000c0021e96                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0021ec0       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0021ec0       0x23 hw/diskphys/satapi.32
                0x00000000c0021ec0                SATAPI::~SATAPI()
                0x00000000c0021ec0                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0021ee4       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0021ee4       0x2a hw/diskphys/satapi.32
                0x00000000c0021ee4                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0021f0e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0021f0e       0x23 hw/intctrl/apic.32
                0x00000000c0021f0e                IOAPIC::~IOAPIC()
                0x00000000c0021f0e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0021f32       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0021f32       0x2a hw/intctrl/apic.32
                0x00000000c0021f32                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0021f5c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0021f5c       0x23 hw/timer/apictimer.32
                0x00000000c0021f5c                APICTimer::~APICTimer()
                0x00000000c0021f5c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0021f80       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0021f80       0x2a hw/timer/apictimer.32
                0x00000000c0021f80                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0021fac       0x23
 .text._ZN3PITD2Ev
                0x00000000c0021fac       0x23 hw/timer/pit.32
                0x00000000c0021fac                PIT::~PIT()
                0x00000000c0021fac                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0021fd0       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0021fd0       0x2a hw/timer/pit.32
                0x00000000c0021fd0                PIT::~PIT()

.rodata         0x00000000c0021ffa     0x39ae
                0x00000000c0021ffa                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0021ffa        0x2 
 .ctors         0x00000000c0021ffc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022000        0x4 krnl/unixfile.32
 .ctors         0x00000000c0022004        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022008        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002200c                end_ctors = .
                0x00000000c002200c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c002200c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0022010        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022010                __DTOR_END__
                0x00000000c0022014                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022014        0xc 
 .rodata        0x00000000c0022020      0x101 acpica/utclib.32
                0x00000000c0022020                AcpiGbl_Ctypes
 *fill*         0x00000000c0022121        0x3 
 .rodata        0x00000000c0022124       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c002213c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022186       0x1a 
 .rodata        0x00000000c00221a0       0xed fs/fat/ff.32
 *fill*         0x00000000c002228d       0x13 
 .rodata        0x00000000c00222a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00226a0       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c002270f        0x1 
 .rodata        0x00000000c0022710      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0022860      0x169 dbg/usban.32
 *fill*         0x00000000c00229c9        0x3 
 .rodata.str1.4
                0x00000000c00229cc      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0022b03      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c0022c26       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0022c7f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0022c80       0x6c fs/vfs.32
                0x00000000c0022c80                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0022cec       0x1c fs/vfs.32
                0x00000000c0022cec                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0022d08       0x1c fs/vfs.32
                0x00000000c0022d08                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0022d24       0x2c hal/bus.32
                0x00000000c0022d24                vtable for Bus
 *fill*         0x00000000c0022d50       0x10 
 .rodata        0x00000000c0022d60      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0022eb0       0x3c hal/clock.32
                0x00000000c0022eb0                vtable for Clock
 .rodata.str1.1
                0x00000000c0022eec       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0022f50       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0022f72       0x15 hal/device.32
 *fill*         0x00000000c0022f87        0x1 
 .rodata._ZTV6Device
                0x00000000c0022f88       0x2c hal/device.32
                0x00000000c0022f88                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0022fb4       0x2c hal/device.32
                0x00000000c0022fb4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0022fe0       0x2c hal/diskctrl.32
                0x00000000c0022fe0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002300c       0x38 hal/diskphys.32
                0x00000000c002300c                vtable for PhysicalDisk
 .rodata        0x00000000c0023044       0x53 hal/keybrd.32
 *fill*         0x00000000c0023097        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023098       0x34 hal/keybrd.32
                0x00000000c0023098                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00230cc       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0023110       0x2c hal/logidisk.32
                0x00000000c0023110                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c002313c       0x2c hal/mouse.32
                0x00000000c002313c                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023168       0x34 hal/nic.32
                0x00000000c0023168                vtable for NIC
 .rodata.str1.1
                0x00000000c002319c        0xb hal/partition.32
 *fill*         0x00000000c00231a7        0x1 
 .rodata._ZTV6Serial
                0x00000000c00231a8       0x44 hal/serial.32
                0x00000000c00231a8                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00231ec       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023237        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002323f       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002323f       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c002323f       0x16 hal/timer.32
 *fill*         0x00000000c0023255        0x3 
 .rodata._ZTV5Timer
                0x00000000c0023258       0x30 hal/timer.32
                0x00000000c0023258                vtable for Timer
 .rodata.str1.1
                0x00000000c0023288       0x3e hal/vcache.32
 *fill*         0x00000000c00232c6        0x2 
 .rodata._ZTV6VCache
                0x00000000c00232c8       0x10 hal/vcache.32
                0x00000000c00232c8                vtable for VCache
 .rodata.str1.1
                0x00000000c00232d8       0xba hal/video.32
 *fill*         0x00000000c0023392        0x2 
 .rodata._ZTV5Video
                0x00000000c0023394       0x4c hal/video.32
                0x00000000c0023394                vtable for Video
 .rodata.str1.1
                0x00000000c00233e0      0x17e hw/acpi.32
 *fill*         0x00000000c002355e        0x2 
 .rodata.str1.4
                0x00000000c0023560       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00235d7       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00235d7        0x8 hw/acpi.32
 *fill*         0x00000000c00235d7        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00235d8       0x2c hw/acpi.32
                0x00000000c00235d8                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023604       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023617       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023657       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023678       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c00236ab        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c00236ae       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.4
                0x00000000c0023724       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c00237dc       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0023885        0x3 
 .rodata._ZTV8Computer
                0x00000000c0023888       0x2c krnl/computer.32
                0x00000000c0023888                vtable for Computer
 .rodata.str1.1
                0x00000000c00238b4       0x3c krnl/env.32
 .rodata        0x00000000c00238f0       0x76 krnl/fault.32
 .rodata.str1.1
                0x00000000c0023966        0x4 krnl/intlformat.32
 *fill*         0x00000000c002396a        0x2 
 .rodata.str1.4
                0x00000000c002396c       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c002399c        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c00239ab       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c0023a0c      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0023b11       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0023b69       0x39 krnl/pipe.32
 *fill*         0x00000000c0023ba2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0023ba4       0x1c krnl/pipe.32
                0x00000000c0023ba4                vtable for Pipe
 .rodata.str1.1
                0x00000000c0023bc0       0x91 krnl/resolve.32
 *fill*         0x00000000c0023c51        0x3 
 .rodata.str1.4
                0x00000000c0023c54       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c0023c73       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0023d3c       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023d84       0x5e krnl/terminal.32
 *fill*         0x00000000c0023de2        0x2 
 .rodata._ZTV7VgaText
                0x00000000c0023de4       0x1c krnl/terminal.32
                0x00000000c0023de4                vtable for VgaText
 .rodata        0x00000000c0023e00       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0023e3b       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0023e3b       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0023e3b       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0023e3b        0x8 krnl/unixfile.32
 *fill*         0x00000000c0023e3b        0x1 
 .rodata.str1.4
                0x00000000c0023e3c       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0023e5c       0x22 krnl/unixfile.32
 *fill*         0x00000000c0023e7e        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c0023e80       0x1c krnl/unixfile.32
                0x00000000c0023e80                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0023e9c       0x1c krnl/unixfile.32
                0x00000000c0023e9c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0023eb8      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c002443b      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c002459c        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c00245ab        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00245b5       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00245d6       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c002461a       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c002462f       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c002465b      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024865       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00248bc       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00249b4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00249b4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00249b4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00249b4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00249b4       0xdd vm86/vm8086.32
 *fill*         0x00000000c0024a91        0x3 
 .rodata        0x00000000c0024a94       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0024ac4      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c0024e0f        0x1 
 .rodata.str1.4
                0x00000000c0024e10       0x57 arch/i386/hal.32
 *fill*         0x00000000c0024e67        0x1 
 .rodata._ZTV3CPU
                0x00000000c0024e68       0x2c arch/i386/hal.32
                0x00000000c0024e68                vtable for CPU
 .rodata.str1.4
                0x00000000c0024e94       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0024ef5       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0024f33       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0024f48       0x3c arch/i386/rtc.32
                0x00000000c0024f48                vtable for RTC
 .rodata.str1.1
                0x00000000c0024f84       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0024fc5        0x3 
 .rodata._ZTV3FAT
                0x00000000c0024fc8       0x6c fs/fat/vfslink.32
                0x00000000c0024fc8                vtable for FAT
 .rodata.str1.1
                0x00000000c0025034       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0025034      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002516c       0x6c fs/iso9660/vfslink.32
                0x00000000c002516c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00251d8       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c002521c       0x34 hal/sound/sndcard.32
                0x00000000c002521c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0025250       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002528f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00252c7       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0025368       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00253cc       0x2c hw/bus/pci.32
                0x00000000c00253cc                vtable for PCI
 .rodata.str1.1
                0x00000000c00253f8      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c002551c       0x2c hw/diskctrl/ide.32
                0x00000000c002551c                vtable for IDE
 .rodata.str1.4
                0x00000000c0025548       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c002556c       0x2c hw/diskctrl/satabus.32
                0x00000000c002556c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0025598       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0025653        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025654       0x38 hw/diskphys/ata.32
                0x00000000c0025654                vtable for ATA
 .rodata.str1.1
                0x00000000c002568c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0025699        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c002569c       0x38 hw/diskphys/atapi.32
                0x00000000c002569c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00256d4       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c002575c       0x38 hw/diskphys/sata.32
                0x00000000c002575c                vtable for SATA
 .rodata.str1.1
                0x00000000c0025794       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c002587e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0025880       0x38 hw/diskphys/satapi.32
                0x00000000c0025880                vtable for SATAPI
 .rodata        0x00000000c00258b8       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c00258de        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c00258e0       0x2c hw/intctrl/apic.32
                0x00000000c00258e0                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c002590c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0025927        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0025928       0x30 hw/timer/apictimer.32
                0x00000000c0025928                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0025958       0x1d hw/timer/pit.32
 *fill*         0x00000000c0025975        0x3 
 .rodata._ZTV3PIT
                0x00000000c0025978       0x30 hw/timer/pit.32
                0x00000000c0025978                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00259a8      0xa5d
 *(.data)
 .data          0x00000000c00259a8        0x0 crti.32
 .data          0x00000000c00259a8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00259a8                __dso_handle
 .data          0x00000000c00259ac        0x0 acpica/utclib.32
 .data          0x00000000c00259ac        0x0 krnl/malloc.32
 .data          0x00000000c00259ac        0x0 libk/ctype.32
 .data          0x00000000c00259ac        0x0 libk/string.32
 .data          0x00000000c00259ac        0x0 arch/i386/cc.32
 .data          0x00000000c00259ac        0x0 fs/fat/diskio.32
 .data          0x00000000c00259ac        0x0 fs/fat/ff.32
 .data          0x00000000c00259ac        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00259ac        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00259ac        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00259ac        0x0 dbg/kconsole.32
 *fill*         0x00000000c00259ac       0x14 
 .data          0x00000000c00259c0       0x28 dbg/usban.32
                0x00000000c00259c0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00259e8        0x0 fs/symlink.32
 .data          0x00000000c00259e8        0x0 fs/vfs.32
 .data          0x00000000c00259e8        0x0 hal/bus.32
 .data          0x00000000c00259e8        0x0 hal/buzzer.32
 .data          0x00000000c00259e8        0x0 hal/clock.32
 .data          0x00000000c00259e8        0x0 hal/device.32
 .data          0x00000000c00259e8        0x0 hal/diskctrl.32
 .data          0x00000000c00259e8        0x0 hal/diskphys.32
 .data          0x00000000c00259e8        0x0 hal/fpu.32
 .data          0x00000000c00259e8        0x0 hal/intctrl.32
 .data          0x00000000c00259e8        0x0 hal/keybrd.32
 .data          0x00000000c00259e8        0x0 hal/logidisk.32
 .data          0x00000000c00259e8        0x0 hal/mouse.32
 .data          0x00000000c00259e8        0x0 hal/nic.32
 .data          0x00000000c00259e8        0x0 hal/partition.32
 .data          0x00000000c00259e8        0x0 hal/serial.32
 .data          0x00000000c00259e8        0x0 hal/timer.32
 .data          0x00000000c00259e8        0x0 hal/vcache.32
 .data          0x00000000c00259e8        0x0 hal/video.32
 .data          0x00000000c00259e8       0x10 hw/acpi.32
                0x00000000c00259e8                legacyIRQRemaps
 .data          0x00000000c00259f8        0x0 krnl/assert.32
 .data          0x00000000c00259f8        0x0 krnl/atexit.32
 .data          0x00000000c00259f8        0x0 krnl/bootmsg.32
 .data          0x00000000c00259f8        0x4 krnl/c++.32
                0x00000000c00259f8                __stack_chk_guard
 .data          0x00000000c00259fc        0x0 krnl/cdefs.32
 *fill*         0x00000000c00259fc        0x4 
 .data          0x00000000c0025a00      0x100 krnl/cm.32
                0x00000000c0025a00                CmComponents
 .data          0x00000000c0025b00        0x0 krnl/compat.32
 .data          0x00000000c0025b00        0x0 krnl/computer.32
 .data          0x00000000c0025b00      0x400 krnl/crc32.32
                0x00000000c0025b00                KiPolyLookupCRC32
 .data          0x00000000c0025f00       0x4d krnl/env.32
                0x00000000c0025f00                defaultSysEnv
 .data          0x00000000c0025f4d        0x0 krnl/fault.32
 .data          0x00000000c0025f4d        0x0 krnl/gdt.32
 .data          0x00000000c0025f4d        0x0 krnl/idle.32
 .data          0x00000000c0025f4d        0x0 krnl/idt.32
 .data          0x00000000c0025f4d        0x0 krnl/inlines.32
 .data          0x00000000c0025f4d        0x0 krnl/intlformat.32
 .data          0x00000000c0025f4d        0x0 krnl/intops.32
 *fill*         0x00000000c0025f4d        0x3 
 .data          0x00000000c0025f50        0x4 krnl/kheap.32
 .data          0x00000000c0025f54        0x0 krnl/mailbox.32
 .data          0x00000000c0025f54        0x0 krnl/main.32
 .data          0x00000000c0025f54        0x0 krnl/mutex.32
 .data          0x00000000c0025f54        0x0 krnl/panic.32
 .data          0x00000000c0025f54        0x4 krnl/physmgr.32
                0x00000000c0025f54                Phys::bitmap
 .data          0x00000000c0025f58        0x0 krnl/pipe.32
 .data          0x00000000c0025f58        0x0 krnl/powctrl.32
 .data          0x00000000c0025f58        0x0 krnl/random.32
 .data          0x00000000c0025f58        0x0 krnl/resolve.32
 .data          0x00000000c0025f58        0x0 krnl/semaphore.32
 *fill*         0x00000000c0025f58        0x8 
 .data          0x00000000c0025f60       0x4c krnl/signal.32
                0x00000000c0025f60                KiDefaultSignalHandlers
 *fill*         0x00000000c0025fac       0x14 
 .data          0x00000000c0025fc0      0x104 krnl/syscalls.32
                0x00000000c0025fc0                systemCallHandlers
 *fill*         0x00000000c00260c4       0x1c 
 .data          0x00000000c00260e0       0x60 krnl/terminal.32
                0x00000000c00260e0                VgaText::hiddenOut
                0x00000000c0026100                ansiToVGAMappings
 .data          0x00000000c0026140        0x0 krnl/tss.32
 .data          0x00000000c0026140        0x4 krnl/unixfile.32
                0x00000000c0026140                UnixFile::nextFd
 .data          0x00000000c0026144       0x15 krnl/virtmgr.32
                0x00000000c0026144                Virt::pageAllocPtr
                0x00000000c0026148                Virt::bitmap
                0x00000000c002614c                Virt::swapfileSectorsPerPage
                0x00000000c0026150                Virt::swapfileLength
                0x00000000c0026154                Virt::swapfileSector
                0x00000000c0026158                Virt::swapfileDrive
 .data          0x00000000c0026159        0x0 sys/eject.32
 .data          0x00000000c0026159        0x0 sys/exit.32
 .data          0x00000000c0026159        0x0 sys/getcwd.32
 .data          0x00000000c0026159        0x0 sys/getpid.32
 .data          0x00000000c0026159        0x0 sys/getramdata.32
 .data          0x00000000c0026159        0x0 sys/getvgaptr.32
 .data          0x00000000c0026159        0x0 sys/kill.32
 .data          0x00000000c0026159        0x0 sys/loaddll.32
 .data          0x00000000c0026159        0x0 sys/read.32
 .data          0x00000000c0026159        0x0 sys/registersignal.32
 .data          0x00000000c0026159        0x0 sys/registry.32
 .data          0x00000000c0026159        0x0 sys/sbrk.32
 .data          0x00000000c0026159        0x0 sys/setcwd.32
 .data          0x00000000c0026159        0x0 sys/settime.32
 .data          0x00000000c0026159        0x0 sys/symlink.32
 .data          0x00000000c0026159        0x0 sys/timezone.32
 .data          0x00000000c0026159        0x0 sys/truncate.32
 .data          0x00000000c0026159        0x0 sys/write.32
 .data          0x00000000c0026159        0x0 sys/wsbe.32
 .data          0x00000000c0026159        0x0 sys/yield.32
 .data          0x00000000c0026159        0x0 thr/elf.32
 .data          0x00000000c0026159        0x0 thr/exec.32
 *fill*         0x00000000c0026159        0x3 
 .data          0x00000000c002615c        0x4 thr/prcssthr.32
                0x00000000c002615c                Thr::nextPID
 .data          0x00000000c0026160        0x0 vm86/vm8086.32
 .data          0x00000000c0026160      0x2a4 arch/i386/hal.32
                0x00000000c0026160                exceptionNames
                0x00000000c0026400                lastCode
 .data          0x00000000c0026404        0x0 arch/i386/intctrl.32
 .data          0x00000000c0026404        0x0 arch/i386/pic.32
 .data          0x00000000c0026404        0x0 arch/i386/rtc.32
 .data          0x00000000c0026404        0x0 arch/i386/vga.32
 .data          0x00000000c0026404        0x0 fs/fat/vfslink.32
 .data          0x00000000c0026404        0x0 fs/iso9660/helper.32
 .data          0x00000000c0026404        0x1 fs/iso9660/vfslink.32
                0x00000000c0026404                recentDriveletter
 .data          0x00000000c0026405        0x0 hal/sound/sndcard.32
 .data          0x00000000c0026405        0x0 hal/sound/sndport.32
 .data          0x00000000c0026405        0x0 hw/bus/isa.32
 .data          0x00000000c0026405        0x0 hw/bus/pci.32
 .data          0x00000000c0026405        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0026405        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0026405        0x0 hw/diskphys/ata.32
 .data          0x00000000c0026405        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0026405        0x0 hw/diskphys/sata.32
 .data          0x00000000c0026405        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0026405        0x0 hw/intctrl/apic.32
 .data          0x00000000c0026405        0x0 hw/timer/apictimer.32
 .data          0x00000000c0026405        0x0 hw/timer/pit.32
 .data          0x00000000c0026405        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0026405        0x0 crtn.32
 .data          0x00000000c0026405        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0026405        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0026405        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0026405        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0026408        0x0
 .got           0x00000000c0026408        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0026408        0x0
 .got.plt       0x00000000c0026408        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0026408        0x0
 .igot.plt      0x00000000c0026408        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0026408        0x0
 .tm_clone_table
                0x00000000c0026408        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0026408        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0026405      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0026405        0x3 
 .eh_frame      0x00000000c0026408        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0026408        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0026408       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0026460       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00264a0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002650c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0027000       0x7d
 *(userkernel)
 userkernel     0x00000000c0027000       0x52 krnl/signal.32
                0x00000000c0027000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002702c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0027052       0x2b krnl/syscalls.32
                0x00000000c0027052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0028000        0x1
 *(align_previous)
 align_previous
                0x00000000c0028000        0x1 krnl/signal.32
                0x00000000c0028000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0028004        0x0
 .rel.got       0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028001     0x74a7
                0x00000000c0028001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0028001       0x1f 
 COMMON         0x00000000c0028020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0028020                dcache
                0x00000000c0028060                cdDriveLetter
                0x00000000c0028080                icache
 *(.bss)
 .bss           0x00000000c00280c0        0x0 crti.32
 .bss           0x00000000c00280c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00280e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00280e4       0x1c 
 .bss           0x00000000c0028100      0x378 krnl/malloc.32
 .bss           0x00000000c0028478        0x0 libk/ctype.32
 .bss           0x00000000c0028478        0x0 libk/string.32
 .bss           0x00000000c0028478        0x0 arch/i386/cc.32
 .bss           0x00000000c0028478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028478        0x8 
 .bss           0x00000000c0028480       0x88 fs/fat/ff.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0028508       0x18 
 .bss           0x00000000c0028520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0028eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0028eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0028eb8        0x8 
 .bss           0x00000000c0028ec0     0x2444 fs/symlink.32
                0x00000000c0028ec0                kiNumWaitingRoomSymlinks
                0x00000000c0028ee0                kiNewlyCreatedIDs
                0x00000000c0028f00                kiNewlyCreatedSymlinks
                0x00000000c0029300                kiSymlinkHashTable
                0x00000000c002b300                kiBaseSymlinkID
 .bss           0x00000000c002b304        0x4 fs/vfs.32
                0x00000000c002b304                installedFilesystems
 .bss           0x00000000c002b308        0x0 hal/bus.32
 .bss           0x00000000c002b308        0x0 hal/buzzer.32
 *fill*         0x00000000c002b308       0x18 
 .bss           0x00000000c002b320      0x348 hal/clock.32
                0x00000000c002b320                keLoadedTimezones
                0x00000000c002b324                keNumberOfTimezones
                0x00000000c002b340                keTimezoneStrings
                0x00000000c002b660                keDstOn
                0x00000000c002b661                keTimezoneHalfHourOffset
                0x00000000c002b664                keTimezoneHourOffset
 .bss           0x00000000c002b668        0x0 hal/device.32
 .bss           0x00000000c002b668        0x0 hal/diskctrl.32
 .bss           0x00000000c002b668        0x0 hal/diskphys.32
 .bss           0x00000000c002b668        0x0 hal/fpu.32
 .bss           0x00000000c002b668        0x0 hal/intctrl.32
 *fill*         0x00000000c002b668       0x18 
 .bss           0x00000000c002b680      0x428 hal/keybrd.32
                0x00000000c002b680                keyboardWaitingTaskList
                0x00000000c002b684                keyboardSetupYet
                0x00000000c002b688                guiKeyboardHandler
                0x00000000c002b6a0                keystates
 *fill*         0x00000000c002baa8       0x18 
 .bss           0x00000000c002bac0       0x88 hal/logidisk.32
                0x00000000c002bac0                diskAssignments
                0x00000000c002bae0                disks
 .bss           0x00000000c002bb48        0x4 hal/mouse.32
                0x00000000c002bb48                guiMouseHandler
 .bss           0x00000000c002bb4c        0x0 hal/nic.32
 .bss           0x00000000c002bb4c        0x0 hal/partition.32
 .bss           0x00000000c002bb4c        0x0 hal/serial.32
 .bss           0x00000000c002bb4c        0x4 hal/timer.32
                0x00000000c002bb4c                milliTenthsSinceBoot
 .bss           0x00000000c002bb50        0x0 hal/vcache.32
 .bss           0x00000000c002bb50        0x4 hal/video.32
                0x00000000c002bb50                screen
 *fill*         0x00000000c002bb54        0xc 
 .bss           0x00000000c002bb60      0x480 hw/acpi.32
                0x00000000c002bb60                nextACPITable
                0x00000000c002bb80                acpiTables
                0x00000000c002bd80                usingXSDT
                0x00000000c002bd84                RSDTpointer
                0x00000000c002bd88                RSDPpointer
                0x00000000c002bd8c                nextAPICNMI
                0x00000000c002bda0                apicNMIInfo
                0x00000000c002be20                legacyIRQFlags
                0x00000000c002be40                ioapicDiscoveryNumber
                0x00000000c002be60                ioapicFoundInMADT
                0x00000000c002be80                ioapicAddresses
                0x00000000c002bf00                ioapicGSIBase
                0x00000000c002bf80                processorDiscoveryNumber
                0x00000000c002bfa0                matchingAPICID
                0x00000000c002bfc0                processorID
 .bss           0x00000000c002bfe0        0x0 krnl/assert.32
 .bss           0x00000000c002bfe0       0xe0 krnl/atexit.32
                0x00000000c002bfe0                KiNextAtexitHandler
                0x00000000c002c000                KiAtexitContexts
                0x00000000c002c060                KiAtexitHandlers
 .bss           0x00000000c002c0c0        0x0 krnl/bootmsg.32
 .bss           0x00000000c002c0c0        0x0 krnl/c++.32
 .bss           0x00000000c002c0c0        0x0 krnl/cdefs.32
 .bss           0x00000000c002c0c0        0x4 krnl/cm.32
 .bss           0x00000000c002c0c4        0x0 krnl/compat.32
 .bss           0x00000000c002c0c4       0x12 krnl/computer.32
                0x00000000c002c0c4                systemSleepFunction
                0x00000000c002c0c8                systemResetFunction
                0x00000000c002c0cc                systemShutdownFunction
                0x00000000c002c0d0                Krnl::computer
                0x00000000c002c0d4                KeIsPreemptionOn
                0x00000000c002c0d5                KeIsSchedulingOn
 .bss           0x00000000c002c0d6        0x0 krnl/crc32.32
 *fill*         0x00000000c002c0d6        0x2 
 .bss           0x00000000c002c0d8        0x8 krnl/env.32
                0x00000000c002c0d8                KeUserEnv
                0x00000000c002c0dc                KeSystemEnv
 .bss           0x00000000c002c0e0     0x2000 krnl/fault.32
                0x00000000c002c0e0                keInterruptContexts
                0x00000000c002d0e0                keInterruptHandlers
 .bss           0x00000000c002e0e0        0x6 krnl/gdt.32
                0x00000000c002e0e0                gdtDescr
 .bss           0x00000000c002e0e6        0x0 krnl/idle.32
 *fill*         0x00000000c002e0e6        0x2 
 .bss           0x00000000c002e0e8        0x6 krnl/idt.32
                0x00000000c002e0e8                idtDescr
 .bss           0x00000000c002e0ee        0x0 krnl/inlines.32
 *fill*         0x00000000c002e0ee       0x12 
 .bss           0x00000000c002e100       0x24 krnl/intlformat.32
                0x00000000c002e100                keLocale
 .bss           0x00000000c002e124        0x0 krnl/intops.32
 .bss           0x00000000c002e124        0x0 krnl/kheap.32
 .bss           0x00000000c002e124        0x0 krnl/mailbox.32
 .bss           0x00000000c002e124        0x4 krnl/main.32
                0x00000000c002e124                keBootSettings
 .bss           0x00000000c002e128        0x0 krnl/mutex.32
 .bss           0x00000000c002e128        0x1 krnl/panic.32
                0x00000000c002e128                KeIsKernelInPanic
 *fill*         0x00000000c002e129        0x3 
 .bss           0x00000000c002e12c       0x29 krnl/physmgr.32
                0x00000000c002e12c                Phys::forbidEvictions
                0x00000000c002e130                Phys::currentPagePointer
                0x00000000c002e134                Phys::highestMem
                0x00000000c002e138                Phys::oldPercent
                0x00000000c002e13c                Phys::usedPages
                0x00000000c002e140                Phys::usablePages
                0x00000000c002e144                Phys::dmaUsage
 .bss           0x00000000c002e155        0x0 krnl/pipe.32
 *fill*         0x00000000c002e155        0xb 
 .bss           0x00000000c002e160       0x48 krnl/powctrl.32
                0x00000000c002e160                powCtrlOnBattery
                0x00000000c002e180                currentPowerSettings
                0x00000000c002e1a4                secondsSinceLastUserIO
 .bss           0x00000000c002e1a8        0x8 krnl/random.32
                0x00000000c002e1a8                kiRandSeed
 .bss           0x00000000c002e1b0        0x0 krnl/resolve.32
 .bss           0x00000000c002e1b0        0x0 krnl/semaphore.32
 .bss           0x00000000c002e1b0        0x0 krnl/signal.32
 .bss           0x00000000c002e1b0        0x0 krnl/syscalls.32
 .bss           0x00000000c002e1b0        0x9 krnl/terminal.32
                0x00000000c002e1b0                terminalCycle
                0x00000000c002e1b4                activeTerminal
                0x00000000c002e1b8                VgaText::graphicMode
 *fill*         0x00000000c002e1b9        0x1 
 .bss           0x00000000c002e1ba        0x2 krnl/tss.32
                0x00000000c002e1ba                doubleFaultSelector
 *fill*         0x00000000c002e1bc        0x4 
 .bss           0x00000000c002e1c0       0x84 krnl/unixfile.32
                0x00000000c002e1c0                sfileLpt
                0x00000000c002e200                sfileCom
                0x00000000c002e224                sfileNul
                0x00000000c002e228                sfilePnt
                0x00000000c002e22c                sfileAux
                0x00000000c002e230                sfileCon
                0x00000000c002e234                initialFilesAdded
                0x00000000c002e238                unixFileLinkedList
 .bss           0x00000000c002e244       0x10 krnl/virtmgr.32
                0x00000000c002e244                twswaps
                0x00000000c002e248                swapBalance
                0x00000000c002e24c                Virt::swapfileBitmap
                0x00000000c002e250                keFirstVAS
 .bss           0x00000000c002e254        0x0 sys/eject.32
 .bss           0x00000000c002e254        0x0 sys/exit.32
 .bss           0x00000000c002e254        0x0 sys/getcwd.32
 .bss           0x00000000c002e254        0x0 sys/getpid.32
 .bss           0x00000000c002e254        0x0 sys/getramdata.32
 .bss           0x00000000c002e254        0x0 sys/getvgaptr.32
 .bss           0x00000000c002e254        0x0 sys/kill.32
 .bss           0x00000000c002e254        0x0 sys/loaddll.32
 .bss           0x00000000c002e254        0x0 sys/read.32
 .bss           0x00000000c002e254        0x0 sys/registersignal.32
 .bss           0x00000000c002e254        0x0 sys/registry.32
 .bss           0x00000000c002e254        0x0 sys/sbrk.32
 .bss           0x00000000c002e254        0x0 sys/setcwd.32
 .bss           0x00000000c002e254        0x0 sys/settime.32
 .bss           0x00000000c002e254        0x0 sys/symlink.32
 .bss           0x00000000c002e254        0x0 sys/timezone.32
 .bss           0x00000000c002e254        0x0 sys/truncate.32
 .bss           0x00000000c002e254        0x0 sys/write.32
 .bss           0x00000000c002e254        0x0 sys/wsbe.32
 .bss           0x00000000c002e254        0x0 sys/yield.32
 *fill*         0x00000000c002e254        0xc 
 .bss           0x00000000c002e260      0x7a4 thr/elf.32
                0x00000000c002e260                Thr::driverLookupNext
                0x00000000c002e280                Thr::driverLookupLen
                0x00000000c002e480                Thr::driverLookupAddr
                0x00000000c002e680                Thr::driverNameLookup
                0x00000000c002e880                Thr::kernelSymbols
                0x00000000c002e900                Thr::kernelStringTable
                0x00000000c002e980                Thr::kernelSymbolTable
                0x00000000c002ea00                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002ea04        0x0 thr/exec.32
 *fill*         0x00000000c002ea04        0x4 
 .bss           0x00000000c002ea08       0x70 thr/prcssthr.32
                0x00000000c002ea08                KiRestorePreemptionValue
                0x00000000c002ea0c                KiPreemptionDisableCounter
                0x00000000c002ea10                cleanerThread
                0x00000000c002ea14                weNeedTheCleanerToNotBlock
                0x00000000c002ea18                retValLockStuff
                0x00000000c002ea1c                retValSchedLock
                0x00000000c002ea20                lockStuffLock
                0x00000000c002ea24                schedulerLock
                0x00000000c002ea28                taskSwitchesPostponedFlag
                0x00000000c002ea2c                postponeTaskSwitchesCounter
                0x00000000c002ea30                irqDisableCounter
                0x00000000c002ea34                terminatedTaskList
                0x00000000c002ea40                sleepingTaskList
                0x00000000c002ea4c                taskList
                0x00000000c002ea58                kernelProcess
 *fill*         0x00000000c002ea78        0x8 
 .bss           0x00000000c002ea80       0x40 vm86/vm8086.32
                0x00000000c002ea80                Vm::started8086Yet
                0x00000000c002ea84                Vm::vmRetV
                0x00000000c002ea88                Vm::vmDone
                0x00000000c002ea89                Vm::vmReady
                0x00000000c002ea8c                Vm::vm86Thread
                0x00000000c002ea90                Vm::vmToHostCommsPtr
                0x00000000c002eaa0                Vm::vmToHostComms
 .bss           0x00000000c002eac0       0x54 arch/i386/hal.32
                0x00000000c002eac0                apic
                0x00000000c002eac4                guiPanicHandler
                0x00000000c002eac8                fpuOwner
                0x00000000c002eacc                coproLoadFunc
                0x00000000c002ead0                coproSaveFunc
                0x00000000c002ead4                lastD
                0x00000000c002ead8                lastC
                0x00000000c002eadc                lastB
                0x00000000c002eae0                lastA
                0x00000000c002eae4                HalPageWriteCombiningFlag
                0x00000000c002eae8                HalPageGlobalFlag
                0x00000000c002eaec                nmi
                0x00000000c002eaf0                vendorIDString
                0x00000000c002eafd                familyID
                0x00000000c002eafe                model
                0x00000000c002eaff                processorType
                0x00000000c002eb00                steppingID
                0x00000000c002eb04                vendor
                0x00000000c002eb08                opcodeDetectionMode
                0x00000000c002eb0c                features
 .bss           0x00000000c002eb14        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002eb14        0x0 arch/i386/pic.32
 .bss           0x00000000c002eb14        0x2 arch/i386/rtc.32
 .bss           0x00000000c002eb16        0x0 arch/i386/vga.32
 *fill*         0x00000000c002eb16        0xa 
 .bss           0x00000000c002eb20       0xf0 fs/fat/vfslink.32
                0x00000000c002eb20                FAT::fats
                0x00000000c002eb40                FAT::vfsToFatRemaps
                0x00000000c002ebc0                fatToVFSRemaps
 .bss           0x00000000c002ec10        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002ec10       0x10 
 .bss           0x00000000c002ec20      0x820 fs/iso9660/vfslink.32
                0x00000000c002ec20                iso9660Owner
                0x00000000c002ec24                recentSector
                0x00000000c002ec40                recentBuffer
 .bss           0x00000000c002f440        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002f440        0x0 hal/sound/sndport.32
 .bss           0x00000000c002f440        0x0 hw/bus/isa.32
 .bss           0x00000000c002f440        0xd hw/bus/pci.32
                0x00000000c002f440                thePCI
 .bss           0x00000000c002f44d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002f44d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002f44d        0x3 
 .bss           0x00000000c002f450        0x8 hw/diskphys/ata.32
                0x00000000c002f450                ataSectorsWritten
                0x00000000c002f454                ataSectorsRead
 .bss           0x00000000c002f458        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002f458        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002f458        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002f458        0x8 
 .bss           0x00000000c002f460       0x41 hw/intctrl/apic.32
                0x00000000c002f460                noOfIOAPICs
                0x00000000c002f480                ioapics
                0x00000000c002f4a0                IOAPICsSetupYet
 .bss           0x00000000c002f4a1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002f4a1        0x3 
 .bss           0x00000000c002f4a4        0x4 hw/timer/pit.32
                0x00000000c002f4a4                pitFreq
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002f4a8        0x0 crtn.32
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002f4a8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003694f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
