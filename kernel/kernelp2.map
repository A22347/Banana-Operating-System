Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootflags.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/apic.32
 .group         0x0000000000000000        0xc arch/i386/apic.32
 .comment       0x0000000000000000       0x12 arch/i386/apic.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootflags.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/apic.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21b8e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x27e dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006efd                Dbg::logs(char*)
                0x00000000c0006f27                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f45                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f66                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00070dd        0x3 
 .text          0x00000000c00070e0      0x2d4 dbg/usban.32
                0x00000000c00070e0                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000714c                __ubsan_handle_type_mismatch_v1
                0x00000000c0007228                __ubsan_handle_pointer_overflow
                0x00000000c0007254                __ubsan_handle_out_of_bounds
                0x00000000c0007280                __ubsan_handle_add_overflow
                0x00000000c00072ac                __ubsan_handle_load_invalid_value
                0x00000000c00072d8                __ubsan_handle_divrem_overflow
                0x00000000c0007304                __ubsan_handle_mul_overflow
                0x00000000c0007330                __ubsan_handle_sub_overflow
                0x00000000c000735c                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007388                __ubsan_handle_negate_overflow
 .text          0x00000000c00073b4      0x812 fs/symlink.32
                0x00000000c0007503                KiDeinitialiseSymlinks(void*)
                0x00000000c0007594                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c0007617                KeInitialiseSymlinks()
                0x00000000c0007779                KiIsSymlinkRegistered(char const*)
                0x00000000c00078e3                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a8a                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007bc6      0xd9c fs/vfs.32
                0x00000000c0007bc6                File::read(unsigned long long, void*, int*)
                0x00000000c0007c1e                File::write(unsigned long long, void*, int*)
                0x00000000c0007c76                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007cce                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cfc                File::isAtty()
                0x00000000c0007d00                Directory::isAtty()
                0x00000000c0007d04                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007d0a                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007d10                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007d16                File::~File()
                0x00000000c0007d16                File::~File()
                0x00000000c0007d3a                File::~File()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d88                Directory::~Directory()
                0x00000000c0007db2                Filesystem::Filesystem()
                0x00000000c0007db2                Filesystem::Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007de4                Filesystem::~Filesystem()
                0x00000000c0007e08                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e32                Fs::initVFS()
                0x00000000c0007e5c                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000808a                File::File(char const*, Process*, bool)
                0x00000000c000808a                File::File(char const*, Process*, bool)
                0x00000000c0008188                File::File(char const*, Process*)
                0x00000000c0008188                File::File(char const*, Process*)
                0x00000000c00081a6                File::open(FileOpenMode)
                0x00000000c0008204                File::close()
                0x00000000c0008264                File::seek(unsigned long long)
                0x00000000c00082ba                File::truncate(unsigned long long)
                0x00000000c0008310                File::tell(unsigned long long*)
                0x00000000c0008360                File::rewind()
                0x00000000c0008374                File::unlink()
                0x00000000c00083c0                File::rename(char const*)
                0x00000000c000840e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000846a                File::exists()
                0x00000000c00084a8                File::stat(unsigned long long*, bool*)
                0x00000000c0008509                Fs::setcwd(Process*, char*)
                0x00000000c0008668                Directory::Directory(char const*, Process*)
                0x00000000c0008668                Directory::Directory(char const*, Process*)
                0x00000000c0008730                Directory::open()
                0x00000000c000878c                Directory::close()
                0x00000000c00087ec                Directory::unlink()
                0x00000000c0008838                Directory::rename(char const*)
                0x00000000c0008886                Directory::exists()
                0x00000000c00088c4                Directory::read(dirent*)
                0x00000000c0008910                Directory::create()
                0x00000000c000895c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c0008962        0x2 
 .text          0x00000000c0008964       0x86 hal/bus.32
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c000899c                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
                0x00000000c00089c0                Bus::~Bus()
 .text          0x00000000c00089ea       0x9b hal/buzzer.32
                0x00000000c00089ea                KeBeepThread(void*)
                0x00000000c0008a2b                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a85        0x1 
 .text          0x00000000c0008a86      0xe4e hal/clock.32
                0x00000000c0008a86                KeLoadTimezoneStrings()
                0x00000000c0008e15                KeGetTimezoneStringFromID(int)
                0x00000000c0008eb2                KeUpdateTimezone(char const*)
                0x00000000c0008fac                KeSetTimezone(char const*)
                0x00000000c0009009                KeSetTimezone(int)
                0x00000000c000903c                KeLoadTimezone()
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009110                Clock::~Clock()
                0x00000000c000913a                Clock::timeInSecondsLocal()
                0x00000000c00091a4                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0009224                KeDatetimeToSeconds(datetime_t)
                0x00000000c0009552                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0009614                KeSecondsToDatetime(unsigned long long)
                0x00000000c00098a8                Clock::timeInDatetimeLocal()
 .text          0x00000000c00098d4      0x47a hal/device.32
                0x00000000c00098d4                Device::hibernate()
                0x00000000c00098d6                Device::wake()
                0x00000000c00098d8                Device::detect()
                0x00000000c00098da                Device::disableLegacy()
                0x00000000c00098dc                Device::powerSaving(PowerSavingLevel)
                0x00000000c00098de                DriverlessDevice::close(int, int, void*)
                0x00000000c00098e2                DriverlessDevice::detect()
                0x00000000c00098e4                DriverlessDevice::open(int, int, void*)
                0x00000000c00098f8                Device::~Device()
                0x00000000c00098f8                Device::~Device()
                0x00000000c0009906                Device::~Device()
                0x00000000c000992e                Device::findAndLoadDriver()
                0x00000000c000993c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0009962                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00099a2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00099cc                Device::getParent()
                0x00000000c00099d8                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00099f6                Device::addChild(Device*)
                0x00000000c0009a3a                Device::removeAllChildren()
                0x00000000c0009a80                Device::hibernateAll()
                0x00000000c0009ab0                Device::wakeAll()
                0x00000000c0009ae0                Device::detectAll()
                0x00000000c0009b10                Device::disableLegacyAll()
                0x00000000c0009b12                Device::loadDriversForAll()
                0x00000000c0009b14                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009b4a                Device::setName(char const*)
                0x00000000c0009b58                Device::Device(char const*)
                0x00000000c0009b58                Device::Device(char const*)
                0x00000000c0009c54                Device::getName()
                0x00000000c0009c5e                Device::closeAll()
                0x00000000c0009caa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009caa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009ce0                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d24                getDevicesOfType(DeviceType)
 *fill*         0x00000000c0009d4e        0x2 
 .text          0x00000000c0009d50       0x86 hal/diskctrl.32
                0x00000000c0009d50                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d50                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d88                HardDiskController::~HardDiskController()
                0x00000000c0009d88                HardDiskController::~HardDiskController()
                0x00000000c0009dac                HardDiskController::~HardDiskController()
 .text          0x00000000c0009dd6       0xe2 hal/diskphys.32
                0x00000000c0009dd6                PhysicalDisk::eject()
                0x00000000c0009dda                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009dda                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e42                PhysicalDisk::startCache()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e8e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009eb8        0x0 hal/fpu.32
 .text          0x00000000c0009eb8      0x874 hal/keybrd.32
                0x00000000c0009eb8                startGUI(void*)
                0x00000000c0009f1d                startGUIVESA(void*)
                0x00000000c0009f82                sendKeyToTerminal(unsigned char)
                0x00000000c000a058                sendKeyboardToken(KeyboardToken)
                0x00000000c000a514                clearInternalKeybuffer(VgaText*)
                0x00000000c000a549                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6a2                Keyboard::Keyboard(char const*)
                0x00000000c000a6a2                Keyboard::Keyboard(char const*)
                0x00000000c000a6de                Keyboard::~Keyboard()
                0x00000000c000a6de                Keyboard::~Keyboard()
                0x00000000c000a702                Keyboard::~Keyboard()
 .text          0x00000000c000a72c      0x3f8 hal/logidisk.32
                0x00000000c000a72c                LogicalDisk::close(int, int, void*)
                0x00000000c000a730                LogicalDisk::~LogicalDisk()
                0x00000000c000a730                LogicalDisk::~LogicalDisk()
                0x00000000c000a754                LogicalDisk::~LogicalDisk()
                0x00000000c000a77e                LogicalDisk::open(int, int, void*)
                0x00000000c000a792                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a7ca                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a810                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a810                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a8d0                LogicalDisk::assignDriveLetter()
                0x00000000c000a98a                LogicalDisk::mount()
                0x00000000c000a9d2                LogicalDisk::unmount()
                0x00000000c000a9e2                LogicalDisk::eject()
                0x00000000c000a9f6                LogicalDisk::unassignDriveLetter()
                0x00000000c000aa4c                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aab8                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab24       0x86 hal/mouse.32
                0x00000000c000ab24                Mouse::Mouse(char const*)
                0x00000000c000ab24                Mouse::Mouse(char const*)
                0x00000000c000ab5c                Mouse::~Mouse()
                0x00000000c000ab5c                Mouse::~Mouse()
                0x00000000c000ab80                Mouse::~Mouse()
 .text          0x00000000c000abaa       0x90 hal/nic.32
                0x00000000c000abaa                NIC::getMAC()
                0x00000000c000abb0                NIC::write(int, unsigned char*, int*)
                0x00000000c000abb6                NIC::NIC(char const*)
                0x00000000c000abb6                NIC::NIC(char const*)
                0x00000000c000abec                NIC::~NIC()
                0x00000000c000abec                NIC::~NIC()
                0x00000000c000ac10                NIC::~NIC()
 .text          0x00000000c000ac3a      0x33b hal/partition.32
                0x00000000c000ac3a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ace2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af75        0x3 
 .text          0x00000000c000af78       0x86 hal/serial.32
                0x00000000c000af78                Serial::Serial(char const*)
                0x00000000c000af78                Serial::Serial(char const*)
                0x00000000c000afb0                Serial::~Serial()
                0x00000000c000afb0                Serial::~Serial()
                0x00000000c000afd4                Serial::~Serial()
 *fill*         0x00000000c000affe        0x2 
 .text          0x00000000c000b000      0x230 hal/timer.32
                0x00000000c000b000                Timer::Timer(char const*)
                0x00000000c000b000                Timer::Timer(char const*)
                0x00000000c000b038                Timer::~Timer()
                0x00000000c000b038                Timer::~Timer()
                0x00000000c000b05c                Timer::~Timer()
                0x00000000c000b086                Timer::read()
                0x00000000c000b091                setupTimer(int)
                0x00000000c000b0cc                timerHandler(unsigned int)
 .text          0x00000000c000b230      0x60e hal/vcache.32
                0x00000000c000b230                VCache::VCache(PhysicalDisk*)
                0x00000000c000b230                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3a0                VCache::invalidateReadBuffer()
                0x00000000c000b3b0                VCache::writeWriteBuffer()
                0x00000000c000b3fc                VCache::~VCache()
                0x00000000c000b3fc                VCache::~VCache()
                0x00000000c000b454                VCache::~VCache()
                0x00000000c000b47c                VCache::write(unsigned long long, int, void*)
                0x00000000c000b64a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b83e      0x71d hal/video.32
                0x00000000c000b83e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b88a                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b8fa                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b98a                Video::clearScreen(unsigned int)
                0x00000000c000b9be                Video::putpixel(int, int, unsigned int)
                0x00000000c000b9cc                Video::readPixelApprox(int, int)
                0x00000000c000b9e0                Video::Video(char const*)
                0x00000000c000b9e0                Video::Video(char const*)
                0x00000000c000ba16                Video::~Video()
                0x00000000c000ba16                Video::~Video()
                0x00000000c000ba3a                Video::~Video()
                0x00000000c000ba64                Video::isMonochrome()
                0x00000000c000ba70                Video::getWidth()
                0x00000000c000ba7c                Video::getHeight()
                0x00000000c000ba88                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb44                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000beea                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000bf5b        0x1 
 .text          0x00000000c000bf5c     0x10ea hw/acpi.32
                0x00000000c000bf5c                ACPI::close(int, int, void*)
                0x00000000c000bf64                loadACPITables(unsigned char*)
                0x00000000c000c1c4                findRSDT(unsigned char*)
                0x00000000c000c310                findDataTable(unsigned char*, char*)
                0x00000000c000c384                scanMADT()
                0x00000000c000c834                ACPI::ACPI()
                0x00000000c000c834                ACPI::ACPI()
                0x00000000c000c884                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c980                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca4c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca54                ACPI::detectPCI()
                0x00000000c000cc60                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cc78                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d046        0x2 
 .text          0x00000000c000d048       0xea krnl/assert.32
                0x00000000c000d048                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d132       0x91 krnl/atexit.32
                0x00000000c000d132                KeInitialiseAtexit()
                0x00000000c000d154                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d188                KeExecuteAtexit()
 *fill*         0x00000000c000d1c3        0x1 
 .text          0x00000000c000d1c4       0x1e krnl/bootflags.32
                0x00000000c000d1c4                KeGetBootConfigurationFlag(BootConfigurationFlag)
                0x00000000c000d1d4                KeInitialiseBootConfigurationFlags()
 .text          0x00000000c000d1e2       0x8a krnl/bootmsg.32
                0x00000000c000d1e2                KeDisplaySplashScreen()
                0x00000000c000d211                KeSetBootMessage(char const*)
 .text          0x00000000c000d26c       0x5f krnl/c++.32
                0x00000000c000d26c                __cxa_atexit
                0x00000000c000d26f                __cxa_finalize
                0x00000000c000d270                __stack_chk_fail
                0x00000000c000d2a6                __cxa_pure_virtual
                0x00000000c000d2b7                operator new[](unsigned long)
                0x00000000c000d2bc                operator delete(void*, unsigned long)
                0x00000000c000d2c1                operator delete[](void*)
                0x00000000c000d2c6                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d2cb        0x1 
 .text          0x00000000c000d2cc       0x44 krnl/cdefs.32
                0x00000000c000d2cc                CUnlockScheduler
                0x00000000c000d2e4                CLockScheduler
                0x00000000c000d2f4                CPrintf
 .text          0x00000000c000d310      0xd51 krnl/cm.32
                0x00000000c000d310                CmOpen(char const*)
                0x00000000c000d42e                CmClose(Reghive_Tag*)
                0x00000000c000d444                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d480                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d4f7                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d536                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d568                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d5a4                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d5cc                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d5ed                CmExpand(Reghive_Tag*, int)
                0x00000000c000d668                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d6ee                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d7e2                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d91a                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d97b                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d9ab                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000d9e2                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000da0c                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000da4c                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000daf0                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000db1e                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dcbb                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000dd08                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000dd82                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000ddd5                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000de99                zStrtok(char*, char const*)
                0x00000000c000df0b                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000df8c                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000e02f                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000e061        0x1 
 .text          0x00000000c000e062       0xe3 krnl/computer.32
                0x00000000c000e062                Computer::close(int, int, void*)
                0x00000000c000e068                Computer::Computer()
                0x00000000c000e068                Computer::Computer()
                0x00000000c000e0ac                Computer::open(int, int, void*)
 .text          0x00000000c000e145       0x2b krnl/crc32.32
                0x00000000c000e145                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e170      0x5bf krnl/env.32
                0x00000000c000e170                EnvVarContainer::getEnv(char const*)
                0x00000000c000e1ae                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e270                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e272                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e496                EnvVarContainer::__loadSystem()
                0x00000000c000e4b0                EnvVarContainer::__loadUser()
                0x00000000c000e4b2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e4b2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e4d4                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e4d4                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e504                KeGetEnv(Process*, char const*)
                0x00000000c000e569                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e583                KeSetEnvUser(char const*, char const*)
                0x00000000c000e5a2                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e5b5                KeDeleteEnvSystem(char const*)
                0x00000000c000e5b6                KeDeleteEnvUser(char const*)
                0x00000000c000e5b7                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e5b8                KeNewProcessEnv(Process*)
                0x00000000c000e5da                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e626                KeLoadSystemEnv()
                0x00000000c000e654                KeLoadUserEnv()
                0x00000000c000e67a                KeFlushEnv()
                0x00000000c000e67b                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e69b                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e72f        0x1 
 .text          0x00000000c000e730      0x1a8 krnl/fault.32
                0x00000000c000e730                KeDisplayProgramFault(char const*)
                0x00000000c000e780                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e7d4                KePageFault(void*, void*)
                0x00000000c000e828                KeOpcodeFault(void*, void*)
                0x00000000c000e87c                KeOtherFault(void*, void*)
                0x00000000c000e8b0                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e8c0                KeDoubleFault(void*, void*)
 .text          0x00000000c000e8d8      0x1db krnl/gdt.32
                0x00000000c000e8d8                GDTEntry::setBase(unsigned int)
                0x00000000c000e8f4                GDTEntry::setLimit(unsigned int)
                0x00000000c000e912                GDT::GDT()
                0x00000000c000e912                GDT::GDT()
                0x00000000c000e928                GDT::addEntry(GDTEntry)
                0x00000000c000e94a                GDT::getNumberOfEntries()
                0x00000000c000e952                GDT::flush()
                0x00000000c000e974                GDT::setup()
 .text          0x00000000c000eab3       0x20 krnl/idle.32
                0x00000000c000eab3                idleFunction(void*)
 *fill*         0x00000000c000ead3        0x1 
 .text          0x00000000c000ead4      0x46c krnl/idt.32
                0x00000000c000ead4                IDTEntry::IDTEntry(bool)
                0x00000000c000ead4                IDTEntry::IDTEntry(bool)
                0x00000000c000eb4e                IDTEntry::setOffset(unsigned int)
                0x00000000c000eb64                IDT::IDT()
                0x00000000c000eb64                IDT::IDT()
                0x00000000c000eb66                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000eb6e                IDT::addEntry(IDTEntry, int)
                0x00000000c000eb88                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000ebc0                IDT::flush()
                0x00000000c000ebda                IDT::setup()
 .text          0x00000000c000ef40       0x9a krnl/inlines.32
                0x00000000c000ef40                CPU::current()
                0x00000000c000ef4c                operator new(unsigned long)
                0x00000000c000ef51                operator delete(void*)
                0x00000000c000ef56                disableIRQs()
                0x00000000c000ef58                enableIRQs()
                0x00000000c000ef5a                lockScheduler()
                0x00000000c000ef62                unlockScheduler()
                0x00000000c000ef74                lockStuff()
                0x00000000c000ef82                unlockStuff()
                0x00000000c000efbf                Virt::getAKernelVAS()
                0x00000000c000efc5                __not_memcpy
 .text          0x00000000c000efda      0x2ae krnl/intlformat.32
                0x00000000c000efda                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f1bc                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f1de                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f200                KeSetLocale(klocale_t)
                0x00000000c000f216                KeInitialiseLocale()
                0x00000000c000f284                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f285                KeFormatCurrency(char*, int, double)
                0x00000000c000f286                KeFormatNumber(char*, long long, long long)
                0x00000000c000f287                KeFormatNumber(char*, double)
 .text          0x00000000c000f288      0x356 krnl/intops.32
                0x00000000c000f288                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f3a4                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f4e4                KeGetDigitsInNumber(long long)
                0x00000000c000f550                KeItoa(unsigned long long, char*)
                0x00000000c000f580                KeItoa(long long, char*)
                0x00000000c000f5b0                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f5de      0x204 krnl/kheap.32
                0x00000000c000f5de                sbrk
                0x00000000c000f672                sbrk_thunk
                0x00000000c000f6a8                mmap
                0x00000000c000f706                munmap
                0x00000000c000f71b                liballoc_lock()
                0x00000000c000f729                liballoc_unlock()
                0x00000000c000f741                liballoc_alloc(int)
                0x00000000c000f759                liballoc_free(void*, int)
                0x00000000c000f774                realloc
                0x00000000c000f788                malloc
                0x00000000c000f798                free
                0x00000000c000f7a8                rfree
                0x00000000c000f7b8                calloc
 *fill*         0x00000000c000f7e2        0x2 
 .text          0x00000000c000f7e4      0x1d3 krnl/mailbox.32
                0x00000000c000f7e4                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000f844                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000f8a4                KeMailboxCreate()
                0x00000000c000f8d8                KeMailboxPost(Mailbox*, void*)
                0x00000000c000f93c                KeMailboxGet(Mailbox*, void**)
                0x00000000c000f9a0                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000f9b7      0x20b krnl/main.32
                0x00000000c000f9b7                KeFirstTask()
                0x00000000c000fac2                KeEntryPoint
 *fill*         0x00000000c000fbc2        0x2 
 .text          0x00000000c000fbc4       0x1a krnl/mutex.32
                0x00000000c000fbc4                Mutex::Mutex()
                0x00000000c000fbc4                Mutex::Mutex()
 .text          0x00000000c000fbde       0x12 krnl/panic.32
                0x00000000c000fbde                KeIsKernelInPanic()
                0x00000000c000fbe4                KePanic(char const*)
 .text          0x00000000c000fbf0      0x666 krnl/physmgr.32
                0x00000000c000fbf0                Phys::allocateDMA(unsigned long)
                0x00000000c000fcde                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000fd19                Phys::setPageState(unsigned long, bool)
                0x00000000c000fd59                Phys::getPageState(unsigned long)
                0x00000000c000fd75                Phys::freePage(unsigned long)
                0x00000000c000fdde                Phys::allocatePage()
                0x00000000c000febc                Phys::allocateContiguousPages(int)
                0x00000000c000ff37                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000ff6f                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0010256      0x271 krnl/pipe.32
                0x00000000c0010256                Pipe::isAtty()
                0x00000000c001025a                Pipe::~Pipe()
                0x00000000c001025a                Pipe::~Pipe()
                0x00000000c001027e                Pipe::~Pipe()
                0x00000000c00102a6                Pipe::write(unsigned long long, void*, int*)
                0x00000000c001036a                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0010460                Pipe::Pipe(int)
                0x00000000c0010460                Pipe::Pipe(int)
 .text          0x00000000c00104c7      0x1a3 krnl/powctrl.32
                0x00000000c00104c7                KePowerThread(void*)
                0x00000000c00104f9                KeChangePowerSettings(PowerSettings)
                0x00000000c001050f                KeUserIOReceived()
                0x00000000c001051a                KeSetupPowerManager()
                0x00000000c00105a3                KePrepareShutdown()
                0x00000000c00105c2                KeRegisterShutdownHandler(void (*)())
                0x00000000c00105cc                KeRegisterRestartHandler(void (*)())
                0x00000000c00105d6                KeRegisterSleepHandler(void (*)())
                0x00000000c00105e0                KeShutdown()
                0x00000000c0010616                KeSleep()
                0x00000000c0010622                KeHandlePowerButton()
                0x00000000c0010634                KeHandleSleepButton()
                0x00000000c0010646                KeRestart()
 .text          0x00000000c001066a       0x9b krnl/random.32
                0x00000000c001066a                KeRand()
                0x00000000c00106aa                KeSeedRand(unsigned int)
                0x00000000c00106d3                KeInitRand()
 *fill*         0x00000000c0010705        0x3 
 .text          0x00000000c0010708      0x26c krnl/resolve.32
                0x00000000c0010708                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010974      0x415 krnl/semaphore.32
                0x00000000c0010974                Semaphore::Semaphore(int)
                0x00000000c0010974                Semaphore::Semaphore(int)
                0x00000000c00109a4                Semaphore::tryAcquire()
                0x00000000c0010a78                Semaphore::assertLocked(char const*)
                0x00000000c0010b04                Semaphore::acquire(int)
                0x00000000c0010cbc                Semaphore::acquire()
                0x00000000c0010cd8                Semaphore::release()
 .text          0x00000000c0010d89      0x3a8 krnl/signal.32
                0x00000000c0010d89                KiSigKill(int)
                0x00000000c0010d9d                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010d9e                KiDefaultSignalHandlerPause(int)
                0x00000000c0010dca                KiDefaultSignalHandlerResume(int)
                0x00000000c0010df6                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010dfb                KeInitSignals()
                0x00000000c0010e6d                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010ea3                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010f24                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011053                KiCheckSignalZ
                0x00000000c00110a4                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00110df                KiFinishSignalZ
 .text          0x00000000c0011131      0xe7d krnl/syscalls.32
                0x00000000c0011131                SysSeekDir(regs*)
                0x00000000c0011136                SysTellDir(regs*)
                0x00000000c001113b                SysVerify(regs*)
                0x00000000c0011145                SysGetArgc(regs*)
                0x00000000c0011159                SysTTYName(regs*)
                0x00000000c0011161                SysFormatDisk(regs*)
                0x00000000c00111c8                SysSetDiskVolumeLabel(regs*)
                0x00000000c001121c                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011275                SysRealpath(regs*)
                0x00000000c00112c3                SysReadDir(regs*)
                0x00000000c0011343                SysIsATTY(regs*)
                0x00000000c001139d                SysSeek(regs*)
                0x00000000c00113fb                SysTell(regs*)
                0x00000000c0011470                SysSize(regs*)
                0x00000000c00114ea                SysSizeFromFilename(regs*)
                0x00000000c001161d                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011750                SysClose(regs*)
                0x00000000c00117b5                SysOpenDir(regs*)
                0x00000000c0011832                SysMakeDir(regs*)
                0x00000000c00118a0                SysCloseDir(regs*)
                0x00000000c00118f4                SysWait(regs*)
                0x00000000c0011915                SysNotImpl(regs*)
                0x00000000c0011930                SysPanic(regs*)
                0x00000000c001194b                SysRmdir(regs*)
                0x00000000c00119a9                SysUnlink(regs*)
                0x00000000c0011a07                SysGetArgv(regs*)
                0x00000000c0011a54                SysUSleep(regs*)
                0x00000000c0011a7e                SysSpawn(regs*)
                0x00000000c0011aef                SysGetEnv(regs*)
                0x00000000c0011ba4                SysSetFatAttrib(regs*)
                0x00000000c0011c0d                SysShutdown(regs*)
                0x00000000c0011c6a                SysPipe(regs*)
                0x00000000c0011caf                SysGetUnixTime(regs*)
                0x00000000c0011d22                string_ends_with(char const*, char const*)
                0x00000000c0011d6d                SysOpen(regs*)
                0x00000000c0011f6c                KeSystemCall(regs*, void*)
 .text          0x00000000c0011fae      0xadd krnl/terminal.32
                0x00000000c0011fae                VgaText::isAtty()
                0x00000000c0011fb2                VgaText::~VgaText()
                0x00000000c0011fb2                VgaText::~VgaText()
                0x00000000c0011fd6                VgaText::~VgaText()
                0x00000000c0012000                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0012020                setTerminalScrollLock(bool)
                0x00000000c0012021                doTerminalCycle()
                0x00000000c0012022                addToTerminalCycle(VgaText*)
                0x00000000c0012023                scrollTerminalScrollLock(int)
                0x00000000c0012024                VgaText::updateTitle()
                0x00000000c0012026                VgaText::load()
                0x00000000c0012028                VgaText::updateCursor()
                0x00000000c001203e                VgaText::doANSI_SGR(int)
                0x00000000c00120b2                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00120c2                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00120d2                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00120f2                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00120fe                VgaText::setTitleColour(VgaColour)
                0x00000000c001210a                VgaText::setTitle(char*)
                0x00000000c001210c                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c001211e                VgaText::scrollScreen()
                0x00000000c00121b0                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00121c0                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c001226c                VgaText::getCursorX()
                0x00000000c0012274                VgaText::getCursorY()
                0x00000000c001227c                VgaText::setCursor(int, int)
                0x00000000c0012293                setActiveTerminal(VgaText*)
                0x00000000c00122de                VgaText::clearScreen()
                0x00000000c001232c                VgaText::setCursorX(int)
                0x00000000c0012344                VgaText::setCursorY(int)
                0x00000000c001235c                VgaText::incrementCursor(bool)
                0x00000000c00123b0                VgaText::decrementCursor(bool)
                0x00000000c00123d2                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00124a2                VgaText::putchar(char)
                0x00000000c001258a                VgaText::putx(unsigned int)
                0x00000000c00125d0                VgaText::puts(char const*)
                0x00000000c00125f6                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0012642                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00127bc                VgaText::VgaText(char const*)
                0x00000000c00127bc                VgaText::VgaText(char const*)
                0x00000000c001291c                VgaText::receiveKey(unsigned char)
                0x00000000c0012a8a                VgaText::doUpdate()
 *fill*         0x00000000c0012a8b        0x1 
 .text          0x00000000c0012a8c      0x224 krnl/tss.32
                0x00000000c0012a8c                TSS::TSS()
                0x00000000c0012a8c                TSS::TSS()
                0x00000000c0012a9c                TSS::setESP(unsigned long)
                0x00000000c0012ab0                TSS::flush()
                0x00000000c0012ad0                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012cb0      0x4ce krnl/unixfile.32
                0x00000000c0012cb0                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012d06                ReservedFilename::isAtty()
                0x00000000c0012d22                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012d80                UnixFile::getFileDescriptor()
                0x00000000c0012d88                UnixFile::UnixFile(int)
                0x00000000c0012d88                UnixFile::UnixFile(int)
                0x00000000c0012f3c                ReservedFilename::ReservedFilename(int)
                0x00000000c0012f3c                ReservedFilename::ReservedFilename(int)
                0x00000000c0012f6e                UnixFile::~UnixFile()
                0x00000000c0012f6e                UnixFile::~UnixFile()
                0x00000000c001300a                UnixFile::~UnixFile()
                0x00000000c0013032                ReservedFilename::~ReservedFilename()
                0x00000000c0013032                ReservedFilename::~ReservedFilename()
                0x00000000c0013056                ReservedFilename::~ReservedFilename()
                0x00000000c001307d                KeGetFileFromDescriptor(int)
 .text          0x00000000c001317e     0x134e krnl/virtmgr.32
                0x00000000c001317e                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00131b8                Virt::getPageState(unsigned long)
                0x00000000c00131db                Virt::allocateKernelVirtualPages(int)
                0x00000000c00132f7                Virt::freeSwapfilePage(unsigned long)
                0x00000000c001331a                Virt::swapIDToSector(unsigned long)
                0x00000000c0013330                Virt::allocateSwapfilePage()
                0x00000000c00133af                Virt::virtualMemorySetup()
                0x00000000c0013400                Virt::setupPageSwapping(int)
                0x00000000c0013472                VAS::setCPUSpecific(unsigned long)
                0x00000000c0013474                VAS::VAS(VAS*)
                0x00000000c0013474                VAS::VAS(VAS*)
                0x00000000c001348c                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00134ba                VAS::getPageTableEntry(unsigned long)
                0x00000000c00134d9                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0013616                VAS::freeAllocatedPages(unsigned long)
                0x00000000c001363a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0013654                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0013696                VAS::VAS()
                0x00000000c0013696                VAS::VAS()
                0x00000000c0013700                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0013720                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c001374c                VAS::~VAS()
                0x00000000c001374c                VAS::~VAS()
                0x00000000c00138b4                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c00139bc                VAS::allocatePages(int, int)
                0x00000000c0013aae                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013b08                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013bf8                VAS::VAS(bool)
                0x00000000c0013bf8                VAS::VAS(bool)
                0x00000000c0013de0                VAS::evict(unsigned long)
                0x00000000c0013ee4                VAS::canLockPage(unsigned long)
                0x00000000c0013efe                VAS::unlockPage(unsigned long)
                0x00000000c0013f32                VAS::canLockPages(unsigned long, int)
                0x00000000c0013f6e                VAS::unlockPages(unsigned long, int)
                0x00000000c0013faa                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c001414a                VAS::lockPage(unsigned long)
                0x00000000c00141bc                VAS::lockPages(unsigned long, int)
                0x00000000c00141f8                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c001426c                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0014298                VAS::scanForEviction()
                0x00000000c00143d1                mapVASFirstTime
 .text          0x00000000c00144cc       0x2f sys/alarm.32
                0x00000000c00144cc                SysAlarm(regs*)
 .text          0x00000000c00144fb       0x36 sys/eject.32
                0x00000000c00144fb                SysEject(regs*)
 .text          0x00000000c0014531       0x18 sys/exit.32
                0x00000000c0014531                SysExit(regs*)
 .text          0x00000000c0014549       0x1f sys/getcwd.32
                0x00000000c0014549                SysGetCwd(regs*)
 .text          0x00000000c0014568       0x26 sys/getpid.32
                0x00000000c0014568                SysGetPID(regs*)
 .text          0x00000000c001458e       0x21 sys/getramdata.32
                0x00000000c001458e                SysGetRAMData(regs*)
 .text          0x00000000c00145af       0xbe sys/getvgaptr.32
                0x00000000c00145af                SysGetVGAPtr(regs*)
 *fill*         0x00000000c001466d        0x3 
 .text          0x00000000c0014670       0xb9 sys/kill.32
                0x00000000c0014670                SysKill(regs*)
 .text          0x00000000c0014729       0xa8 sys/loaddll.32
                0x00000000c0014729                SysLoadDLL(regs*)
 .text          0x00000000c00147d1       0x12 sys/pause.32
                0x00000000c00147d1                SysPause(regs*)
 .text          0x00000000c00147e3       0x49 sys/pthread.32
                0x00000000c00147e3                SysPthreadCreate(regs*)
                0x00000000c00147fb                SysPthreadGetTID(regs*)
                0x00000000c0014805                SysInternalPthreadGetContext(regs*)
                0x00000000c001480a                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c001480f                SysPthreadJoin(regs*)
                0x00000000c0014814                SysPthreadExit(regs*)
 .text          0x00000000c001482c       0x68 sys/read.32
                0x00000000c001482c                SysRead(regs*)
 .text          0x00000000c0014894       0x29 sys/registersignal.32
                0x00000000c0014894                SysRegisterSignal(regs*)
 .text          0x00000000c00148bd      0x1cc sys/registry.32
                0x00000000c00148bd                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014901                SysRegistryReadExtent(regs*)
                0x00000000c0014949                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014960                SysRegistryEnterDirectory(regs*)
                0x00000000c0014977                SysRegistryGetNext(regs*)
                0x00000000c001498e                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00149c8                SysRegistryOpen(regs*)
                0x00000000c00149dc                SysRegistryClose(regs*)
                0x00000000c00149f3                SysRegistryEasyReadString(regs*)
                0x00000000c0014a3f                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014a89       0x55 sys/sbrk.32
                0x00000000c0014a89                SysSbrk(regs*)
 .text          0x00000000c0014ade       0x1c sys/setcwd.32
                0x00000000c0014ade                SysSetCwd(regs*)
 .text          0x00000000c0014afa       0xf1 sys/settime.32
                0x00000000c0014afa                SysSetTime(regs*)
 .text          0x00000000c0014beb       0x73 sys/symlink.32
                0x00000000c0014beb                SysSymlink(regs*)
 .text          0x00000000c0014c5e       0x3e sys/timezone.32
                0x00000000c0014c5e                SysTimezone(regs*)
 .text          0x00000000c0014c9c       0xfc sys/truncate.32
                0x00000000c0014c9c                SysTruncate(regs*)
 .text          0x00000000c0014d98       0x68 sys/write.32
                0x00000000c0014d98                SysWrite(regs*)
 .text          0x00000000c0014e00       0x9d sys/wsbe.32
                0x00000000c0014e00                SysWsbe(regs*)
 .text          0x00000000c0014e9d       0x28 sys/yield.32
                0x00000000c0014e9d                SysYield(regs*)
 *fill*         0x00000000c0014ec5        0x3 
 .text          0x00000000c0014ec8      0x28d thr/alarm.32
                0x00000000c0014ec8                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c0015064                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c0015155     0x12cc thr/elf.32
                0x00000000c0015155                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00153e0                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0015681                Thr::runtimeReferenceHelper()
                0x00000000c0015694                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00156e3                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00159a1                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0016104                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0016136                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001616d                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0016187                Thr::loadDLL(char const*, bool)
                0x00000000c00163e8                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0016421       0x5a thr/exec.32
                0x00000000c0016421                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c001647b        0x1 
 .text          0x00000000c001647c     0x1269 thr/prcssthr.32
                0x00000000c001647c                userModeEntryPoint(void*)
                0x00000000c00164a8                changeTSS
                0x00000000c00164d8                switchToThread(ThreadControlBlock*)
                0x00000000c0016598                Process::addArgs(char**)
                0x00000000c0016604                Process::Process(char const*, Process*, char**)
                0x00000000c0016604                Process::Process(char const*, Process*, char**)
                0x00000000c001683c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001683c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016a28                taskStartupFunction
                0x00000000c0016a34                KeDisablePreemption()
                0x00000000c0016a5c                KeRestorePreemption()
                0x00000000c0016a7c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016bbc                Process::createUserThread()
                0x00000000c0016bdc                setupMultitasking(void (*)())
                0x00000000c0016d24                schedule()
                0x00000000c0016db8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016de4                blockTask(TaskState)
                0x00000000c0016e20                waitTask(int, int*, int)
                0x00000000c0016e64                milliTenthSleepUntil(unsigned long long)
                0x00000000c0016f18                milliTenthSleep(unsigned long long)
                0x00000000c0016f30                sleep(unsigned long long)
                0x00000000c0016f50                sleep(unsigned int)
                0x00000000c0016f68                milliTenthSleep(unsigned int)
                0x00000000c0016f88                taskReturned
                0x00000000c0016fd0                KeProcessFromPID(int)
                0x00000000c001707c                unblockTask(ThreadControlBlock*)
                0x00000000c0017130                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0017400                cleanerTaskFunction(void*)
                0x00000000c0017518                KeTerminateCurrentThread(int)
 .text          0x00000000c00176e5      0xe86 vm86/vm8086.32
                0x00000000c00176e5                Vm::inbv(unsigned short)
                0x00000000c00176f8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001772a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001773a                Vm::getSegment(unsigned int)
                0x00000000c0017742                Vm::getOffset(unsigned int)
                0x00000000c0017747                Vm::mainloop2()
                0x00000000c0017788                Vm::mainVm8086Loop(void*)
                0x00000000c001779c                Vm::mainloop3(unsigned long)
                0x00000000c00177ce                Vm::initialise8086()
                0x00000000c0017812                Vm::resetConventionalMemory8086()
                0x00000000c0017813                Vm::finish8086()
                0x00000000c0017884                Vm::getOutput8086(unsigned char*)
                0x00000000c00178a9                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00179f4                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017c39                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017ce5                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017cf6                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017d08                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017d19                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017d2e                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017d44                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017d59                Vm::faultHandler(regs*)
 *fill*         0x00000000c001856b        0x1 
 .text          0x00000000c001856c      0x45f arch/i386/apic.32
                0x00000000c001856c                IOAPIC::close(int, int, void*)
                0x00000000c0018572                apicGetBase()
                0x00000000c00185ac                IOAPIC::IOAPIC()
                0x00000000c00185ac                IOAPIC::IOAPIC()
                0x00000000c00185d4                apicOpen()
                0x00000000c0018760                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0018792                IOAPIC::read(int)
                0x00000000c00187ba                IOAPIC::open(int, int, void*)
                0x00000000c00188a0                IOAPIC::write(int, int)
                0x00000000c00188cc                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c00189cb        0x1 
 .text          0x00000000c00189cc     0x1f41 arch/i386/hal.32
                0x00000000c00189cc                noCopro(unsigned long)
                0x00000000c00189cd                HalRestart()
                0x00000000c00189d8                HalShutdown()
                0x00000000c00189d9                HalSleep()
                0x00000000c00189da                CPU::close(int, int, void*)
                0x00000000c00189dd                x86ReadCMOS(unsigned char)
                0x00000000c0018a31                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0018a93                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0018ab2                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018acf                AMD_K6_writeback(int, int, int)
                0x00000000c0018b8f                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018c2d                cpuidCheckEDX(unsigned int)
                0x00000000c0018c5a                cpuidCheckECX(unsigned int)
                0x00000000c0018c88                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018cb6                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018ce4                HalDetectFeatures()
                0x00000000c0019acf                HalEnableNMI()
                0x00000000c0019ae2                HalDisableNMI()
                0x00000000c0019af5                HalGetNMIState()
                0x00000000c0019afb                x86rdmsr(unsigned int)
                0x00000000c0019b39                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0019b7e                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0019b94                HalFindRSDP()
                0x00000000c0019c71                HalHandlePageFault(void*, void*)
                0x00000000c0019ca0                HalHandleOpcodeFault(void*, void*)
                0x00000000c0019ce2                HalDisplayDebugInfo(void*)
                0x00000000c001a070                HalReceivedNMI()
                0x00000000c001a10b                HalSystemIdle()
                0x00000000c001a16a                i386SaveCoprocessor(void*)
                0x00000000c001a17e                i386LoadCoprocessor(void*)
                0x00000000c001a192                x87EmulHandler(regs*, void*)
                0x00000000c001a22f                HalInitialiseCoprocessor()
                0x00000000c001a2b3                HalPanic(char const*)
                0x00000000c001a3c7                HalQueryPerformanceCounter()
                0x00000000c001a3d7                HalInitialise()
                0x00000000c001a5bf                HalMakeBeep(int)
                0x00000000c001a5f9                HalGetRand()
                0x00000000c001a5fc                HalEndOfInterrupt(int)
                0x00000000c001a628                CPU::CPU()
                0x00000000c001a628                CPU::CPU()
                0x00000000c001a6ac                CPU::setupSMEP()
                0x00000000c001a6b8                CPU::setupUMIP()
                0x00000000c001a6c2                CPU::setupTSC()
                0x00000000c001a6cc                CPU::setupLargePages()
                0x00000000c001a6d6                CPU::setupPAT()
                0x00000000c001a708                CPU::setupMTRR()
                0x00000000c001a70a                CPU::setupGlobalPages()
                0x00000000c001a714                CPU::allowUsermodeDataAccess()
                0x00000000c001a722                CPU::prohibitUsermodeDataAccess()
                0x00000000c001a730                CPU::setupSMAP()
                0x00000000c001a73e                CPU::setupFeatures()
                0x00000000c001a80a                CPU::open(int, int, void*)
 .text          0x00000000c001a90d      0x348 arch/i386/intctrl.32
                0x00000000c001a90d                convertLegacyIRQNumber(int)
                0x00000000c001a949                KeSetupInterrupts()
                0x00000000c001a9a6                int_handler
                0x00000000c001aa29                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001aa73                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001abb0                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001abe4                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001ac55        0x3 
 .text          0x00000000c001ac58      0x2dc arch/i386/pic.32
                0x00000000c001ac58                picIoWait()
                0x00000000c001ac60                picDisable()
                0x00000000c001ac94                picGetIRQReg(int)
                0x00000000c001ad10                picOpen()
                0x00000000c001ae94                picEOI(int)
 .text          0x00000000c001af34      0x5ed arch/i386/rtc.32
                0x00000000c001af34                RTC::open(int, int, void*)
                0x00000000c001af38                RTC::close(int, int, void*)
                0x00000000c001af3c                RTC::timeInSecondsUTC()
                0x00000000c001af4e                RTC::timeInDatetimeUTC()
                0x00000000c001af74                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001afb2                RTC::~RTC()
                0x00000000c001afb2                RTC::~RTC()
                0x00000000c001afd6                RTC::~RTC()
                0x00000000c001b000                RTC::get_update_in_progress_flag()
                0x00000000c001b014                RTC::completeRTCRefresh()
                0x00000000c001b2c2                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b438                rtcIRQHandler(regs*, void*)
                0x00000000c001b478                RTC::RTC()
                0x00000000c001b478                RTC::RTC()
 *fill*         0x00000000c001b521        0x3 
 .text          0x00000000c001b524      0x1f4 arch/i386/vga.32
                0x00000000c001b524                HalConsoleScroll(int, int)
                0x00000000c001b62c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001b690                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001b718     0x14f3 fs/fat/vfslink.32
                0x00000000c001b718                FAT::getName()
                0x00000000c001b720                FAT::tell(void*, unsigned long long*)
                0x00000000c001b75c                FAT::stat(void*, unsigned long long*)
                0x00000000c001b798                FAT::~FAT()
                0x00000000c001b798                FAT::~FAT()
                0x00000000c001b7bc                FAT::~FAT()
                0x00000000c001b7e4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b888                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001b968                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001bb4c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001bd68                FAT::allocateSwapfile(char const*, int)
                0x00000000c001bf28                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c098                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001c0f8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c158                FAT::close(void*)
                0x00000000c001c1ac                FAT::closeDir(void*)
                0x00000000c001c200                FAT::truncate(void*, unsigned long long)
                0x00000000c001c26c                FAT::seek(void*, unsigned long long)
                0x00000000c001c2c4                fatWrapperReadDisk
                0x00000000c001c304                fatWrapperWriteDisk
                0x00000000c001c344                fatWrapperIoctl
                0x00000000c001c464                FAT::FAT()
                0x00000000c001c464                FAT::FAT()
                0x00000000c001c4bc                FAT::fixFilepath(char*)
                0x00000000c001c4fc                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c670                FAT::openDir(char const*, void**)
                0x00000000c001c720                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c818                FAT::unlink(char const*)
                0x00000000c001c898                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ca50                FAT::rename(char const*, char const*)
                0x00000000c001cb1c                FAT::mkdir(char const*)
                0x00000000c001cb9c                FAT::exists(char const*)
 *fill*         0x00000000c001cc0b        0x1 
 .text          0x00000000c001cc0c       0x94 fs/iso9660/helper.32
                0x00000000c001cc0c                isoReadDiscSectorHelper
                0x00000000c001cc68                iso_kprintf
                0x00000000c001cc84                iso_kprintfd
 .text          0x00000000c001cca0      0x71a fs/iso9660/vfslink.32
                0x00000000c001cca0                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001cca6                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001ccac                ISO9660::getName()
                0x00000000c001ccb2                ISO9660::closeDir(void*)
                0x00000000c001ccbc                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ccc2                ISO9660::unlink(char const*)
                0x00000000c001ccc8                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001ccce                ISO9660::rename(char const*, char const*)
                0x00000000c001ccd4                ISO9660::mkdir(char const*)
                0x00000000c001ccda                ISO9660::~ISO9660()
                0x00000000c001ccda                ISO9660::~ISO9660()
                0x00000000c001ccfe                ISO9660::~ISO9660()
                0x00000000c001cd26                ISO9660::exists(char const*)
                0x00000000c001cd3a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001ce20                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001ce68                ISO9660::seek(void*, unsigned long long)
                0x00000000c001ceaa                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001cee8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001cf3a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d07c                ISO9660::close(void*)
                0x00000000c001d0ac                ISO9660::openDir(char const*, void**)
                0x00000000c001d186                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d2a1                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d320                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001d392                ISO9660::ISO9660()
                0x00000000c001d392                ISO9660::ISO9660()
 .text          0x00000000c001d3ba      0x26c hal/sound/sndcard.32
                0x00000000c001d3ba                SoundCard::beginPlayback()
                0x00000000c001d3c8                SoundCard::stopPlayback()
                0x00000000c001d3d6                SoundCard::SoundCard(char const*)
                0x00000000c001d3d6                SoundCard::SoundCard(char const*)
                0x00000000c001d474                SoundCard::~SoundCard()
                0x00000000c001d474                SoundCard::~SoundCard()
                0x00000000c001d498                SoundCard::~SoundCard()
                0x00000000c001d4c2                SoundCard::configureRates(int, int, int)
                0x00000000c001d4f2                SoundCard::getSamples16(int, short*)
                0x00000000c001d54e                SoundCard::getSamples32(int, int*)
                0x00000000c001d5d4                SoundCard::addChannel(SoundPort*)
                0x00000000c001d612                SoundCard::removeChannel(int)
 *fill*         0x00000000c001d626        0x2 
 .text          0x00000000c001d628      0x42f hal/sound/sndport.32
                0x00000000c001d628                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d628                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d6b4                SoundPort::~SoundPort()
                0x00000000c001d6b4                SoundPort::~SoundPort()
                0x00000000c001d6e8                SoundPort::unpause()
                0x00000000c001d6f4                SoundPort::pause()
                0x00000000c001d700                SoundPort::getBufferUsed()
                0x00000000c001d708                SoundPort::getBufferSize()
                0x00000000c001d710                SoundPort::buffer8(signed char*, int)
                0x00000000c001d7a4                SoundPort::buffer16(short*, int)
                0x00000000c001d838                SoundPort::buffer32(int*, int)
                0x00000000c001d8c4                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001d994                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 *fill*         0x00000000c001da57        0x1 
 .text          0x00000000c001da58      0xc25 hw/bus/pci.32
                0x00000000c001da58                PCI::open(int, int, void*)
                0x00000000c001da76                PCI::close(int, int, void*)
                0x00000000c001da7a                PCI::PCI()
                0x00000000c001da7a                PCI::PCI()
                0x00000000c001db12                PCI::readBAR8(unsigned int, int)
                0x00000000c001db2e                PCI::readBAR16(unsigned int, int)
                0x00000000c001db4c                PCI::readBAR32(unsigned int, int)
                0x00000000c001db68                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001db88                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001dbaa                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001dbca                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dc40                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dcea                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001dd0e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001dd36                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001dd80                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001dda8                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ddcc                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001ddf0                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001de18                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001de7c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001df62                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e22c                PCI::checkBus(unsigned char)
                0x00000000c001e250                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e436                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e5b2                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e624                PCI::detect()
 *fill*         0x00000000c001e67d        0x1 
 .text          0x00000000c001e67e      0xe52 hw/diskctrl/ide.32
                0x00000000c001e67e                IDE::close(int, int, void*)
                0x00000000c001e682                IDE::IDE()
                0x00000000c001e682                IDE::IDE()
                0x00000000c001e6b6                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e6c8                selectDrive(unsigned char, unsigned char)
                0x00000000c001e6ca                IDE::getBase(unsigned char)
                0x00000000c001e6dc                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001e79c                IDE::read(unsigned char, unsigned char)
                0x00000000c001e850                IDE::waitInterrupt(unsigned char)
                0x00000000c001e8b3                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001e8cf                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001e8ec                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001e936                IDE::open(int, int, void*)
                0x00000000c001ee8e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ef5e                IDE::detect()
                0x00000000c001f3c2                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f47c                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f4d0      0x33f hw/diskctrl/satabus.32
                0x00000000c001f4d0                SATABus::close(int, int, void*)
                0x00000000c001f4d4                SATABus::detect()
                0x00000000c001f4d6                SATABus::SATABus()
                0x00000000c001f4d6                SATABus::SATABus()
                0x00000000c001f55c                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f58e                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f5d6                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f5f6                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f620                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f732                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001f7dc                SATABus::open(int, int, void*)
 *fill*         0x00000000c001f80f        0x1 
 .text          0x00000000c001f810      0x7c1 hw/diskphys/ata.32
                0x00000000c001f810                ATA::close(int, int, void*)
                0x00000000c001f834                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001f836                ATA::ATA()
                0x00000000c001f836                ATA::ATA()
                0x00000000c001f864                ATA::flush(bool)
                0x00000000c001f8b2                ATA::readyForCommand()
                0x00000000c001f8fe                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001fd06                ATA::read(unsigned long long, int, void*)
                0x00000000c001fd52                ATA::write(unsigned long long, int, void*)
                0x00000000c001fd9e                ATA::detectCHS()
                0x00000000c001fdc8                ATA::open(int, int, void*)
                0x00000000c001ffb3                combineCharAndColour(char, unsigned char)
                0x00000000c001ffc4                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001ffd1        0x1 
 .text          0x00000000c001ffd2      0x612 hw/diskphys/atapi.32
                0x00000000c001ffd2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001ffd8                ATAPI::close(int, int, void*)
                0x00000000c001fffc                ATAPI::ATAPI()
                0x00000000c001fffc                ATAPI::ATAPI()
                0x00000000c002002a                ATAPI::readyForCommand()
                0x00000000c002007c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c002033c                ATAPI::diskRemoved()
                0x00000000c0020376                ATAPI::eject()
                0x00000000c00203be                ATAPI::diskInserted()
                0x00000000c00203ca                ATAPI::detectMedia()
                0x00000000c002048a                ATAPI::open(int, int, void*)
                0x00000000c002056a                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c00205e4      0x44a hw/diskphys/sata.32
                0x00000000c00205e4                SATA::close(int, int, void*)
                0x00000000c0020608                SATA::powerSaving(PowerSavingLevel)
                0x00000000c002060a                SATA::open(int, int, void*)
                0x00000000c00206c2                SATA::SATA()
                0x00000000c00206c2                SATA::SATA()
                0x00000000c00206f0                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020976                SATA::read(unsigned long long, int, void*)
                0x00000000c00209c2                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020a2e      0x5dc hw/diskphys/satapi.32
                0x00000000c0020a2e                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020a34                SATAPI::close(int, int, void*)
                0x00000000c0020a58                SATAPI::SATAPI()
                0x00000000c0020a58                SATAPI::SATAPI()
                0x00000000c0020a86                SATAPI::diskRemoved()
                0x00000000c0020a88                SATAPI::diskInserted()
                0x00000000c0020aa4                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020d8e                SATAPI::eject()
                0x00000000c0020dca                SATAPI::detectMedia()
                0x00000000c0020e20                SATAPI::open(int, int, void*)
                0x00000000c0020f20                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c002100a        0x2 
 .text          0x00000000c002100c       0xf0 hw/timer/apictimer.32
                0x00000000c002100c                APICTimer::close(int, int, void*)
                0x00000000c0021014                apicTimerHandler(regs*, void*)
                0x00000000c002103c                APICTimer::open(int, int, void*)
                0x00000000c00210ac                APICTimer::write(int)
                0x00000000c00210d4                APICTimer::APICTimer()
                0x00000000c00210d4                APICTimer::APICTimer()
 .text          0x00000000c00210fc      0x1ad hw/timer/pit.32
                0x00000000c00210fc                PIT::write(int)
                0x00000000c0021180                pitHandler(regs*, void*)
                0x00000000c00211a8                PIT::open(int, int, void*)
                0x00000000c00211f8                PIT::close(int, int, void*)
                0x00000000c0021228                PIT::PIT()
                0x00000000c0021228                PIT::PIT()
 *fill*         0x00000000c00212a9        0x7 
 .text          0x00000000c00212b0       0x6f arch/i386/avx.32
                0x00000000c00212b0                avxDetect
                0x00000000c00212da                avxSave
                0x00000000c00212eb                avxLoad
                0x00000000c00212fc                avxInit
                0x00000000c002131e                avxClose
 *fill*         0x00000000c002131f        0x1 
 .text          0x00000000c0021320      0x2b4 arch/i386/interrupt.32
                0x00000000c0021320                isr0
                0x00000000c0021330                isr1
                0x00000000c002133a                isr2
                0x00000000c0021344                isr3
                0x00000000c002134e                isr4
                0x00000000c0021358                isr5
                0x00000000c0021362                isr6
                0x00000000c002136c                isr7
                0x00000000c0021376                isr8
                0x00000000c002137e                isr9
                0x00000000c0021388                isr10
                0x00000000c0021390                isr11
                0x00000000c0021398                isr12
                0x00000000c00213a0                isr13
                0x00000000c00213ba                isr14
                0x00000000c00213c2                isr15
                0x00000000c00213cc                isr16
                0x00000000c00213d6                isr17
                0x00000000c00213e0                isr18
                0x00000000c00213ea                irq3
                0x00000000c00213f4                irq4
                0x00000000c00213fe                irq5
                0x00000000c0021408                irq6
                0x00000000c0021412                irq7
                0x00000000c002141c                irq8
                0x00000000c0021426                irq9
                0x00000000c0021430                irq10
                0x00000000c002143a                irq11
                0x00000000c0021444                irq12
                0x00000000c002144e                irq13
                0x00000000c0021458                irq14
                0x00000000c0021462                irq15
                0x00000000c002146c                irq1
                0x00000000c0021473                irq2
                0x00000000c002147a                isr96
                0x00000000c0021481                irq0
                0x00000000c0021486                int_common_stub
                0x00000000c0021486                syscall_common_stub
                0x00000000c0021584                irq16
                0x00000000c002158e                irq17
                0x00000000c0021598                irq18
                0x00000000c00215a2                irq19
                0x00000000c00215ac                irq20
                0x00000000c00215b6                irq21
                0x00000000c00215c0                irq22
                0x00000000c00215ca                irq23
 *fill*         0x00000000c00215d4        0xc 
 .text          0x00000000c00215e0       0x10 arch/i386/rdrand.32
                0x00000000c00215e0                i386GetRDRAND
 .text          0x00000000c00215f0       0x39 arch/i386/sse.32
                0x00000000c00215f0                sseDetect
                0x00000000c0021608                sseSave
                0x00000000c0021610                sseLoad
                0x00000000c0021618                sseInit
                0x00000000c0021628                sseClose
 *fill*         0x00000000c0021629        0x7 
 .text          0x00000000c0021630       0x4f arch/i386/x87.32
                0x00000000c0021636                x87Detect
                0x00000000c0021657                x87Save
                0x00000000c002165e                x87Load
                0x00000000c0021665                x87Init
                0x00000000c002167e                x87Close
 *fill*         0x00000000c002167f        0x1 
 .text          0x00000000c0021680       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00216a5        0x0 crtn.32
 *fill*         0x00000000c00216a5        0x3 
 .text          0x00000000c00216a8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00216a8                __divdi3
 *fill*         0x00000000c00217f3        0x1 
 .text          0x00000000c00217f4      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c00217f4                __moddi3
 *fill*         0x00000000c0021972        0x2 
 .text          0x00000000c0021974       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021974                __udivdi3
 *fill*         0x00000000c0021a73        0x1 
 .text          0x00000000c0021a74      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021a74                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021b90        0x0
 .iplt          0x00000000c0021b90        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021b8e        0xf
 .init          0x00000000c0021b8e        0x3 crti.32
                0x00000000c0021b8e                _init
 .init          0x00000000c0021b91        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021b96        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021b9b        0x2 crtn.32

.fini           0x00000000c0021b9d        0xa
 .fini          0x00000000c0021b9d        0x3 crti.32
                0x00000000c0021b9d                _fini
 .fini          0x00000000c0021ba0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021ba5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021ba8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021ba8       0x1a hal/device.32
                0x00000000c0021ba8                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021ba8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021bc2       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021bc2       0x2a hal/device.32
                0x00000000c0021bc2                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021bec       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021bec       0xdc hal/device.32
                0x00000000c0021bec                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021cc8       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021cc8       0x42 hal/device.32
                0x00000000c0021cc8                LinkedList<Device>::LinkedList()
                0x00000000c0021cc8                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021d0c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021d0c       0x1c hal/timer.32
                0x00000000c0021d0c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021d28        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021d28        0x7 hal/timer.32
                0x00000000c0021d28                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021d30       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021d30       0xbc hal/timer.32
                0x00000000c0021d30                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021dec       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021dec       0xda hal/timer.32
                0x00000000c0021dec                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021ec8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021ec8       0x23 hw/acpi.32
                0x00000000c0021ec8                ACPI::~ACPI()
                0x00000000c0021ec8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0021eec       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0021eec       0x2a hw/acpi.32
                0x00000000c0021eec                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021f18        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021f18        0x2 hw/acpi.32
                0x00000000c0021f18                LinkedList<Device>::~LinkedList()
                0x00000000c0021f18                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021f1c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021f1c       0x1c hw/acpi.32
                0x00000000c0021f1c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021f38        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021f38        0x7 hw/acpi.32
                0x00000000c0021f38                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021f40       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021f40       0xb8 hw/acpi.32
                0x00000000c0021f40                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0021ff8       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0021ff8       0x23 krnl/computer.32
                0x00000000c0021ff8                Computer::~Computer()
                0x00000000c0021ff8                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002201c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002201c       0x2a krnl/computer.32
                0x00000000c002201c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0022046       0x24
 .text._Z10idleCommonv
                0x00000000c0022046       0x24 krnl/idle.32
                0x00000000c0022046                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002206a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002206a        0x2 krnl/unixfile.32
                0x00000000c002206a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c002206a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002206c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002206c       0x42 krnl/unixfile.32
                0x00000000c002206c                LinkedList<UnixFile>::LinkedList()
                0x00000000c002206c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00220ae       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00220ae       0xd3 krnl/unixfile.32
                0x00000000c00220ae                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022182        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022182        0x7 krnl/unixfile.32
                0x00000000c0022182                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002218a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002218a       0xa1 krnl/unixfile.32
                0x00000000c002218a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002222c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002222c        0x8 krnl/unixfile.32
                0x00000000c002222c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022234        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022234        0x8 sys/kill.32
                0x00000000c0022234                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002223c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002223c        0x2 thr/prcssthr.32
                0x00000000c002223c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002223c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022240       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022240       0x49 thr/prcssthr.32
                0x00000000c0022240                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0022240                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002228c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002228c       0x42 thr/prcssthr.32
                0x00000000c002228c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c002228c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN6IOAPICD2Ev
                0x00000000c00222ce       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00222ce       0x23 arch/i386/apic.32
                0x00000000c00222ce                IOAPIC::~IOAPIC()
                0x00000000c00222ce                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00222f2       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00222f2       0x2a arch/i386/apic.32
                0x00000000c00222f2                IOAPIC::~IOAPIC()

.text._ZN3CPUD2Ev
                0x00000000c002231c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002231c       0x23 arch/i386/hal.32
                0x00000000c002231c                CPU::~CPU()
                0x00000000c002231c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0022340       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0022340       0x2a arch/i386/hal.32
                0x00000000c0022340                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002236a       0x23
 .text._ZN3PCID2Ev
                0x00000000c002236a       0x23 hw/bus/pci.32
                0x00000000c002236a                PCI::~PCI()
                0x00000000c002236a                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002238e       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002238e       0x2a hw/bus/pci.32
                0x00000000c002238e                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00223b8       0x23
 .text._ZN3IDED2Ev
                0x00000000c00223b8       0x23 hw/diskctrl/ide.32
                0x00000000c00223b8                IDE::~IDE()
                0x00000000c00223b8                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00223dc       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00223dc       0x2a hw/diskctrl/ide.32
                0x00000000c00223dc                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0022406       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0022406       0x23 hw/diskctrl/satabus.32
                0x00000000c0022406                SATABus::~SATABus()
                0x00000000c0022406                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002242a       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002242a       0x2a hw/diskctrl/satabus.32
                0x00000000c002242a                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0022454       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0022454       0x23 hw/diskphys/ata.32
                0x00000000c0022454                ATA::~ATA()
                0x00000000c0022454                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0022478       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0022478       0x2a hw/diskphys/ata.32
                0x00000000c0022478                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00224a2       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00224a2       0x23 hw/diskphys/atapi.32
                0x00000000c00224a2                ATAPI::~ATAPI()
                0x00000000c00224a2                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00224c6       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00224c6       0x2a hw/diskphys/atapi.32
                0x00000000c00224c6                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00224f0       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00224f0       0x23 hw/diskphys/sata.32
                0x00000000c00224f0                SATA::~SATA()
                0x00000000c00224f0                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0022514       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0022514       0x2a hw/diskphys/sata.32
                0x00000000c0022514                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002253e       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002253e       0x23 hw/diskphys/satapi.32
                0x00000000c002253e                SATAPI::~SATAPI()
                0x00000000c002253e                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0022562       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0022562       0x2a hw/diskphys/satapi.32
                0x00000000c0022562                SATAPI::~SATAPI()

.text._ZN9APICTimerD2Ev
                0x00000000c002258c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c002258c       0x23 hw/timer/apictimer.32
                0x00000000c002258c                APICTimer::~APICTimer()
                0x00000000c002258c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00225b0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00225b0       0x2a hw/timer/apictimer.32
                0x00000000c00225b0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00225dc       0x23
 .text._ZN3PITD2Ev
                0x00000000c00225dc       0x23 hw/timer/pit.32
                0x00000000c00225dc                PIT::~PIT()
                0x00000000c00225dc                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022600       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022600       0x2a hw/timer/pit.32
                0x00000000c0022600                PIT::~PIT()

.rodata         0x00000000c002262a     0x3b5e
                0x00000000c002262a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002262a        0x2 
 .ctors         0x00000000c002262c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022630        0x4 krnl/unixfile.32
 .ctors         0x00000000c0022634        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022638        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002263c                end_ctors = .
                0x00000000c002263c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c002263c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0022640        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022640                __DTOR_END__
                0x00000000c0022644                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022644       0x1c 
 .rodata        0x00000000c0022660      0x101 acpica/utclib.32
                0x00000000c0022660                AcpiGbl_Ctypes
 *fill*         0x00000000c0022761        0x3 
 .rodata        0x00000000c0022764       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c002277c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c00227c6       0x1a 
 .rodata        0x00000000c00227e0       0xed fs/fat/ff.32
 *fill*         0x00000000c00228cd       0x13 
 .rodata        0x00000000c00228e0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022ce0       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c0022d4f        0x1 
 .rodata.str1.4
                0x00000000c0022d50       0x38 dbg/kconsole.32
 .rodata        0x00000000c0022d88      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0022ed8      0x169 dbg/usban.32
 *fill*         0x00000000c0023041        0x3 
 .rodata.str1.4
                0x00000000c0023044      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002317b      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c002329e       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c00232f7        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c00232f8       0x6c fs/vfs.32
                0x00000000c00232f8                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0023364       0x1c fs/vfs.32
                0x00000000c0023364                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0023380       0x1c fs/vfs.32
                0x00000000c0023380                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002339c       0x2c hal/bus.32
                0x00000000c002339c                vtable for Bus
 *fill*         0x00000000c00233c8       0x18 
 .rodata        0x00000000c00233e0      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0023530       0x3c hal/clock.32
                0x00000000c0023530                vtable for Clock
 .rodata.str1.1
                0x00000000c002356c       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00235d0       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00235f2       0x15 hal/device.32
 *fill*         0x00000000c0023607        0x1 
 .rodata._ZTV6Device
                0x00000000c0023608       0x2c hal/device.32
                0x00000000c0023608                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023634       0x2c hal/device.32
                0x00000000c0023634                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023660       0x2c hal/diskctrl.32
                0x00000000c0023660                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002368c       0x38 hal/diskphys.32
                0x00000000c002368c                vtable for PhysicalDisk
 .rodata        0x00000000c00236c4       0x53 hal/keybrd.32
 *fill*         0x00000000c0023717        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023718       0x34 hal/keybrd.32
                0x00000000c0023718                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002374c       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0023790       0x2c hal/logidisk.32
                0x00000000c0023790                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00237bc       0x2c hal/mouse.32
                0x00000000c00237bc                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c00237e8       0x34 hal/nic.32
                0x00000000c00237e8                vtable for NIC
 .rodata.str1.1
                0x00000000c002381c        0xb hal/partition.32
 *fill*         0x00000000c0023827        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023828       0x44 hal/serial.32
                0x00000000c0023828                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002386c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00238b7        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00238bf       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00238bf       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c00238bf       0x47 hal/timer.32
 *fill*         0x00000000c0023906        0x2 
 .rodata._ZTV5Timer
                0x00000000c0023908       0x30 hal/timer.32
                0x00000000c0023908                vtable for Timer
 .rodata.str1.1
                0x00000000c0023938       0x3e hal/vcache.32
 *fill*         0x00000000c0023976        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023978       0x10 hal/vcache.32
                0x00000000c0023978                vtable for VCache
 .rodata.str1.1
                0x00000000c0023988       0xba hal/video.32
 *fill*         0x00000000c0023a42        0x2 
 .rodata._ZTV5Video
                0x00000000c0023a44       0x4c hal/video.32
                0x00000000c0023a44                vtable for Video
 .rodata.str1.1
                0x00000000c0023a90      0x1b7 hw/acpi.32
 *fill*         0x00000000c0023c47        0x1 
 .rodata.str1.4
                0x00000000c0023c48       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023ce3       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023ce3        0x8 hw/acpi.32
 *fill*         0x00000000c0023ce3        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023ce4       0x2c hw/acpi.32
                0x00000000c0023ce4                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023d10       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023d23       0x19 krnl/atexit.32
 .rodata.str1.1
                0x00000000c0023d3c       0x13 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023d4f       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0023d82        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0023d85       0x91 krnl/cm.32
                                         0x95 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023e16       0x21 krnl/computer.32
 *fill*         0x00000000c0023e37        0x1 
 .rodata.str1.4
                0x00000000c0023e38       0x2c krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c0023e64       0x2c krnl/computer.32
                0x00000000c0023e64                vtable for Computer
 .rodata.str1.1
                0x00000000c0023e90       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0023ecc       0x3e krnl/fault.32
 *fill*         0x00000000c0023f0a        0x2 
 .rodata.str1.4
                0x00000000c0023f0c       0x28 krnl/fault.32
 .rodata.str1.1
                0x00000000c0023f34        0x4 krnl/intlformat.32
 .rodata.str1.4
                0x00000000c0023f38       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023f68        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023f77       0x9f krnl/main.32
                                         0xb9 (size before relaxing)
 *fill*         0x00000000c0024016        0x2 
 .rodata.str1.4
                0x00000000c0024018       0x48 krnl/main.32
 .rodata.str1.4
                0x00000000c0024060      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0024165       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00241bd       0x39 krnl/pipe.32
 *fill*         0x00000000c00241f6        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00241f8       0x1c krnl/pipe.32
                0x00000000c00241f8                vtable for Pipe
 .rodata.str1.1
                0x00000000c0024214       0x54 krnl/powctrl.32
 .rodata.str1.1
                0x00000000c0024268       0xd9 krnl/resolve.32
 *fill*         0x00000000c0024341        0x3 
 .rodata.str1.4
                0x00000000c0024344       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c0024363      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c002446b       0x63 krnl/syscalls.32
                                         0x6b (size before relaxing)
 .rodata.str1.1
                0x00000000c00244ce       0x5e krnl/terminal.32
 .rodata._ZTV7VgaText
                0x00000000c002452c       0x1c krnl/terminal.32
                0x00000000c002452c                vtable for VgaText
 .rodata        0x00000000c0024548       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0024583       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0024583       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0024583       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0024583        0x8 krnl/unixfile.32
 *fill*         0x00000000c0024583        0x1 
 .rodata.str1.4
                0x00000000c0024584       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00245a4       0x1c krnl/unixfile.32
                0x00000000c00245a4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00245c0       0x1c krnl/unixfile.32
                0x00000000c00245c0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00245dc      0x313 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c00248ef      0x15a krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024a49       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0024a5e        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024a6d        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0024a77       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0024a98       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0024adc       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024af1       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024b1d       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c0024b2e      0x219 thr/elf.32
                                        0x228 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024d47       0x57 thr/prcssthr.32
 *fill*         0x00000000c0024d9e        0x2 
 .rodata.str1.4
                0x00000000c0024da0       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0024e98       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0024e98       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0024e98       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0024e98        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0024e98       0x61 vm86/vm8086.32
 *fill*         0x00000000c0024ef9        0x3 
 .rodata.str1.4
                0x00000000c0024efc       0x81 vm86/vm8086.32
 *fill*         0x00000000c0024f7d        0x3 
 .rodata        0x00000000c0024f80      0x390 vm86/vm8086.32
 .rodata        0x00000000c0025310       0x17 arch/i386/apic.32
 *fill*         0x00000000c0025327        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c0025328       0x2c arch/i386/apic.32
                0x00000000c0025328                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0025354      0x322 arch/i386/hal.32
                                        0x335 (size before relaxing)
 *fill*         0x00000000c0025676        0x2 
 .rodata.str1.4
                0x00000000c0025678       0x23 arch/i386/hal.32
 *fill*         0x00000000c002569b        0x1 
 .rodata._ZTV3CPU
                0x00000000c002569c       0x2c arch/i386/hal.32
                0x00000000c002569c                vtable for CPU
 .rodata.str1.4
                0x00000000c00256c8       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025729       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025767       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c002577c       0x3c arch/i386/rtc.32
                0x00000000c002577c                vtable for RTC
 .rodata.str1.1
                0x00000000c00257b8       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00257f9        0x3 
 .rodata._ZTV3FAT
                0x00000000c00257fc       0x6c fs/fat/vfslink.32
                0x00000000c00257fc                vtable for FAT
 .rodata.str1.1
                0x00000000c0025868       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0025868      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00259a0       0x6c fs/iso9660/vfslink.32
                0x00000000c00259a0                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025a0c       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0025a50       0x34 hal/sound/sndcard.32
                0x00000000c0025a50                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0025a84       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025ac3       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025afb       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0025b9c       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0025c00       0x2c hw/bus/pci.32
                0x00000000c0025c00                vtable for PCI
 .rodata.str1.1
                0x00000000c0025c2c      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0025d50       0x2c hw/diskctrl/ide.32
                0x00000000c0025d50                vtable for IDE
 .rodata.str1.4
                0x00000000c0025d7c       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0025da0       0x2c hw/diskctrl/satabus.32
                0x00000000c0025da0                vtable for SATABus
 .rodata.str1.1
                0x00000000c0025dcc       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0025e87        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025e88       0x38 hw/diskphys/ata.32
                0x00000000c0025e88                vtable for ATA
 .rodata.str1.1
                0x00000000c0025ec0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0025ecd        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0025ed0       0x38 hw/diskphys/atapi.32
                0x00000000c0025ed0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0025f08       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0025f90       0x38 hw/diskphys/sata.32
                0x00000000c0025f90                vtable for SATA
 .rodata.str1.1
                0x00000000c0025fc8       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00260b2        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00260b4       0x38 hw/diskphys/satapi.32
                0x00000000c00260b4                vtable for SATAPI
 .rodata.str1.1
                0x00000000c00260ec       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0026107        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0026108       0x30 hw/timer/apictimer.32
                0x00000000c0026108                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0026138       0x1d hw/timer/pit.32
 *fill*         0x00000000c0026155        0x3 
 .rodata._ZTV3PIT
                0x00000000c0026158       0x30 hw/timer/pit.32
                0x00000000c0026158                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0026188      0xa7d
 *(.data)
 .data          0x00000000c0026188        0x0 crti.32
 .data          0x00000000c0026188        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0026188                __dso_handle
 .data          0x00000000c002618c        0x0 acpica/utclib.32
 .data          0x00000000c002618c        0x0 krnl/malloc.32
 .data          0x00000000c002618c        0x0 libk/ctype.32
 .data          0x00000000c002618c        0x0 libk/string.32
 .data          0x00000000c002618c        0x0 arch/i386/cc.32
 .data          0x00000000c002618c        0x0 fs/fat/diskio.32
 .data          0x00000000c002618c        0x0 fs/fat/ff.32
 .data          0x00000000c002618c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c002618c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c002618c        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c002618c        0x0 dbg/kconsole.32
 *fill*         0x00000000c002618c       0x14 
 .data          0x00000000c00261a0       0x28 dbg/usban.32
                0x00000000c00261a0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00261c8        0x0 fs/symlink.32
 .data          0x00000000c00261c8        0x0 fs/vfs.32
 .data          0x00000000c00261c8        0x0 hal/bus.32
 .data          0x00000000c00261c8        0x0 hal/buzzer.32
 .data          0x00000000c00261c8        0x0 hal/clock.32
 .data          0x00000000c00261c8        0x0 hal/device.32
 .data          0x00000000c00261c8        0x0 hal/diskctrl.32
 .data          0x00000000c00261c8        0x0 hal/diskphys.32
 .data          0x00000000c00261c8        0x0 hal/fpu.32
 .data          0x00000000c00261c8        0x0 hal/keybrd.32
 .data          0x00000000c00261c8        0x0 hal/logidisk.32
 .data          0x00000000c00261c8        0x0 hal/mouse.32
 .data          0x00000000c00261c8        0x0 hal/nic.32
 .data          0x00000000c00261c8        0x0 hal/partition.32
 .data          0x00000000c00261c8        0x0 hal/serial.32
 .data          0x00000000c00261c8        0x0 hal/timer.32
 .data          0x00000000c00261c8        0x0 hal/vcache.32
 .data          0x00000000c00261c8        0x0 hal/video.32
 .data          0x00000000c00261c8       0x10 hw/acpi.32
                0x00000000c00261c8                legacyIRQRemaps
 .data          0x00000000c00261d8        0x0 krnl/assert.32
 .data          0x00000000c00261d8        0x0 krnl/atexit.32
 .data          0x00000000c00261d8        0x0 krnl/bootflags.32
 .data          0x00000000c00261d8        0x0 krnl/bootmsg.32
 .data          0x00000000c00261d8        0x4 krnl/c++.32
                0x00000000c00261d8                __stack_chk_guard
 .data          0x00000000c00261dc        0x0 krnl/cdefs.32
 *fill*         0x00000000c00261dc        0x4 
 .data          0x00000000c00261e0      0x100 krnl/cm.32
                0x00000000c00261e0                CmComponents
 .data          0x00000000c00262e0        0x0 krnl/computer.32
 .data          0x00000000c00262e0      0x400 krnl/crc32.32
                0x00000000c00262e0                KiPolyLookupCRC32
 .data          0x00000000c00266e0       0x4d krnl/env.32
                0x00000000c00266e0                defaultSysEnv
 .data          0x00000000c002672d        0x0 krnl/fault.32
 .data          0x00000000c002672d        0x0 krnl/gdt.32
 .data          0x00000000c002672d        0x0 krnl/idle.32
 .data          0x00000000c002672d        0x0 krnl/idt.32
 .data          0x00000000c002672d        0x0 krnl/inlines.32
 .data          0x00000000c002672d        0x0 krnl/intlformat.32
 .data          0x00000000c002672d        0x0 krnl/intops.32
 *fill*         0x00000000c002672d        0x3 
 .data          0x00000000c0026730        0x4 krnl/kheap.32
 .data          0x00000000c0026734        0x0 krnl/mailbox.32
 .data          0x00000000c0026734        0x0 krnl/main.32
 .data          0x00000000c0026734        0x0 krnl/mutex.32
 .data          0x00000000c0026734        0x0 krnl/panic.32
 .data          0x00000000c0026734        0x4 krnl/physmgr.32
                0x00000000c0026734                Phys::bitmap
 .data          0x00000000c0026738        0x0 krnl/pipe.32
 .data          0x00000000c0026738        0x0 krnl/powctrl.32
 .data          0x00000000c0026738        0x0 krnl/random.32
 .data          0x00000000c0026738        0x0 krnl/resolve.32
 .data          0x00000000c0026738        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026738        0x8 
 .data          0x00000000c0026740       0x4c krnl/signal.32
                0x00000000c0026740                KiDefaultSignalHandlers
 *fill*         0x00000000c002678c       0x14 
 .data          0x00000000c00267a0      0x124 krnl/syscalls.32
                0x00000000c00267a0                systemCallHandlers
 *fill*         0x00000000c00268c4       0x1c 
 .data          0x00000000c00268e0       0x60 krnl/terminal.32
                0x00000000c00268e0                VgaText::hiddenOut
                0x00000000c0026900                ansiToVGAMappings
 .data          0x00000000c0026940        0x0 krnl/tss.32
 .data          0x00000000c0026940        0x4 krnl/unixfile.32
                0x00000000c0026940                UnixFile::nextFd
 .data          0x00000000c0026944       0x15 krnl/virtmgr.32
                0x00000000c0026944                Virt::pageAllocPtr
                0x00000000c0026948                Virt::bitmap
                0x00000000c002694c                Virt::swapfileSectorsPerPage
                0x00000000c0026950                Virt::swapfileLength
                0x00000000c0026954                Virt::swapfileSector
                0x00000000c0026958                Virt::swapfileDrive
 .data          0x00000000c0026959        0x0 sys/alarm.32
 .data          0x00000000c0026959        0x0 sys/eject.32
 .data          0x00000000c0026959        0x0 sys/exit.32
 .data          0x00000000c0026959        0x0 sys/getcwd.32
 .data          0x00000000c0026959        0x0 sys/getpid.32
 .data          0x00000000c0026959        0x0 sys/getramdata.32
 .data          0x00000000c0026959        0x0 sys/getvgaptr.32
 .data          0x00000000c0026959        0x0 sys/kill.32
 .data          0x00000000c0026959        0x0 sys/loaddll.32
 .data          0x00000000c0026959        0x0 sys/pause.32
 .data          0x00000000c0026959        0x0 sys/pthread.32
 .data          0x00000000c0026959        0x0 sys/read.32
 .data          0x00000000c0026959        0x0 sys/registersignal.32
 .data          0x00000000c0026959        0x0 sys/registry.32
 .data          0x00000000c0026959        0x0 sys/sbrk.32
 .data          0x00000000c0026959        0x0 sys/setcwd.32
 .data          0x00000000c0026959        0x0 sys/settime.32
 .data          0x00000000c0026959        0x0 sys/symlink.32
 .data          0x00000000c0026959        0x0 sys/timezone.32
 .data          0x00000000c0026959        0x0 sys/truncate.32
 .data          0x00000000c0026959        0x0 sys/write.32
 .data          0x00000000c0026959        0x0 sys/wsbe.32
 .data          0x00000000c0026959        0x0 sys/yield.32
 .data          0x00000000c0026959        0x0 thr/alarm.32
 .data          0x00000000c0026959        0x0 thr/elf.32
 .data          0x00000000c0026959        0x0 thr/exec.32
 *fill*         0x00000000c0026959        0x3 
 .data          0x00000000c002695c        0x4 thr/prcssthr.32
                0x00000000c002695c                keNextPID
 .data          0x00000000c0026960        0x0 vm86/vm8086.32
 .data          0x00000000c0026960        0x0 arch/i386/apic.32
 .data          0x00000000c0026960      0x2a4 arch/i386/hal.32
                0x00000000c0026960                exceptionNames
                0x00000000c0026c00                lastCode
 .data          0x00000000c0026c04        0x0 arch/i386/intctrl.32
 .data          0x00000000c0026c04        0x0 arch/i386/pic.32
 .data          0x00000000c0026c04        0x0 arch/i386/rtc.32
 .data          0x00000000c0026c04        0x0 arch/i386/vga.32
 .data          0x00000000c0026c04        0x0 fs/fat/vfslink.32
 .data          0x00000000c0026c04        0x0 fs/iso9660/helper.32
 .data          0x00000000c0026c04        0x1 fs/iso9660/vfslink.32
                0x00000000c0026c04                recentDriveletter
 .data          0x00000000c0026c05        0x0 hal/sound/sndcard.32
 .data          0x00000000c0026c05        0x0 hal/sound/sndport.32
 .data          0x00000000c0026c05        0x0 hw/bus/pci.32
 .data          0x00000000c0026c05        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0026c05        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0026c05        0x0 hw/diskphys/ata.32
 .data          0x00000000c0026c05        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0026c05        0x0 hw/diskphys/sata.32
 .data          0x00000000c0026c05        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0026c05        0x0 hw/timer/apictimer.32
 .data          0x00000000c0026c05        0x0 hw/timer/pit.32
 .data          0x00000000c0026c05        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0026c05        0x0 crtn.32
 .data          0x00000000c0026c05        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0026c05        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0026c05        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0026c05        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0026c08        0x0
 .got           0x00000000c0026c08        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0026c08        0x0
 .got.plt       0x00000000c0026c08        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0026c08        0x0
 .igot.plt      0x00000000c0026c08        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0026c08        0x0
 .tm_clone_table
                0x00000000c0026c08        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0026c08        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0026c05      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0026c05        0x3 
 .eh_frame      0x00000000c0026c08        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0026c08        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0026c08       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0026c60       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0026ca0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0026d0c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0027000       0x7d
 *(userkernel)
 userkernel     0x00000000c0027000       0x52 krnl/signal.32
                0x00000000c0027000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002702c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0027052       0x2b krnl/syscalls.32
                0x00000000c0027052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0028000        0x1
 *(align_previous)
 align_previous
                0x00000000c0028000        0x1 krnl/signal.32
                0x00000000c0028000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0028004        0x0
 .rel.got       0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028001     0x74fb
                0x00000000c0028001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0028001       0x1f 
 COMMON         0x00000000c0028020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0028020                dcache
                0x00000000c0028060                cdDriveLetter
                0x00000000c0028080                icache
 *(.bss)
 .bss           0x00000000c00280c0        0x0 crti.32
 .bss           0x00000000c00280c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00280e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00280e4       0x1c 
 .bss           0x00000000c0028100      0x378 krnl/malloc.32
 .bss           0x00000000c0028478        0x0 libk/ctype.32
 .bss           0x00000000c0028478        0x0 libk/string.32
 .bss           0x00000000c0028478        0x0 arch/i386/cc.32
 .bss           0x00000000c0028478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028478        0x8 
 .bss           0x00000000c0028480       0x88 fs/fat/ff.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0028508       0x18 
 .bss           0x00000000c0028520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0028eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0028eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0028eb8        0x8 
 .bss           0x00000000c0028ec0     0x2444 fs/symlink.32
                0x00000000c0028ec0                kiNumWaitingRoomSymlinks
                0x00000000c0028ee0                kiNewlyCreatedIDs
                0x00000000c0028f00                kiNewlyCreatedSymlinks
                0x00000000c0029300                kiSymlinkHashTable
                0x00000000c002b300                kiBaseSymlinkID
 .bss           0x00000000c002b304        0x4 fs/vfs.32
                0x00000000c002b304                installedFilesystems
 .bss           0x00000000c002b308        0x0 hal/bus.32
 .bss           0x00000000c002b308        0x0 hal/buzzer.32
 *fill*         0x00000000c002b308       0x18 
 .bss           0x00000000c002b320      0x348 hal/clock.32
                0x00000000c002b320                keLoadedTimezones
                0x00000000c002b324                keNumberOfTimezones
                0x00000000c002b340                keTimezoneStrings
                0x00000000c002b660                keDstOn
                0x00000000c002b661                keTimezoneHalfHourOffset
                0x00000000c002b664                keTimezoneHourOffset
 .bss           0x00000000c002b668        0x0 hal/device.32
 .bss           0x00000000c002b668        0x0 hal/diskctrl.32
 .bss           0x00000000c002b668        0x0 hal/diskphys.32
 .bss           0x00000000c002b668        0x0 hal/fpu.32
 *fill*         0x00000000c002b668       0x18 
 .bss           0x00000000c002b680      0x428 hal/keybrd.32
                0x00000000c002b680                keyboardWaitingTaskList
                0x00000000c002b684                keyboardSetupYet
                0x00000000c002b688                guiKeyboardHandler
                0x00000000c002b6a0                keystates
 *fill*         0x00000000c002baa8       0x18 
 .bss           0x00000000c002bac0       0x88 hal/logidisk.32
                0x00000000c002bac0                diskAssignments
                0x00000000c002bae0                disks
 .bss           0x00000000c002bb48        0x4 hal/mouse.32
                0x00000000c002bb48                guiMouseHandler
 .bss           0x00000000c002bb4c        0x0 hal/nic.32
 .bss           0x00000000c002bb4c        0x0 hal/partition.32
 .bss           0x00000000c002bb4c        0x0 hal/serial.32
 *fill*         0x00000000c002bb4c        0x4 
 .bss           0x00000000c002bb50        0x8 hal/timer.32
                0x00000000c002bb50                milliTenthsSinceBoot
 .bss           0x00000000c002bb58        0x0 hal/vcache.32
 .bss           0x00000000c002bb58        0x4 hal/video.32
                0x00000000c002bb58                screen
 *fill*         0x00000000c002bb5c        0x4 
 .bss           0x00000000c002bb60      0x480 hw/acpi.32
                0x00000000c002bb60                nextACPITable
                0x00000000c002bb80                acpiTables
                0x00000000c002bd80                usingXSDT
                0x00000000c002bd84                RSDTpointer
                0x00000000c002bd88                RSDPpointer
                0x00000000c002bd8c                nextAPICNMI
                0x00000000c002bda0                apicNMIInfo
                0x00000000c002be20                legacyIRQFlags
                0x00000000c002be40                ioapicDiscoveryNumber
                0x00000000c002be60                ioapicFoundInMADT
                0x00000000c002be80                ioapicAddresses
                0x00000000c002bf00                ioapicGSIBase
                0x00000000c002bf80                processorDiscoveryNumber
                0x00000000c002bfa0                matchingAPICID
                0x00000000c002bfc0                processorID
 .bss           0x00000000c002bfe0        0x0 krnl/assert.32
 .bss           0x00000000c002bfe0      0x120 krnl/atexit.32
                0x00000000c002bfe0                kiNextAtexitHandler
                0x00000000c002c000                kiAtexitContexts
                0x00000000c002c080                kiAtexitHandlers
 .bss           0x00000000c002c100        0x4 krnl/bootflags.32
                0x00000000c002c100                keBootSettings
 .bss           0x00000000c002c104        0x0 krnl/bootmsg.32
 .bss           0x00000000c002c104        0x0 krnl/c++.32
 .bss           0x00000000c002c104        0x0 krnl/cdefs.32
 .bss           0x00000000c002c104        0x4 krnl/cm.32
 .bss           0x00000000c002c108        0x6 krnl/computer.32
                0x00000000c002c108                computer
                0x00000000c002c10c                keIsPreemptionOn
                0x00000000c002c10d                keIsSchedulingOn
 .bss           0x00000000c002c10e        0x0 krnl/crc32.32
 *fill*         0x00000000c002c10e        0x2 
 .bss           0x00000000c002c110        0x8 krnl/env.32
                0x00000000c002c110                KeUserEnv
                0x00000000c002c114                KeSystemEnv
 .bss           0x00000000c002c118        0x0 krnl/fault.32
 .bss           0x00000000c002c118        0x6 krnl/gdt.32
                0x00000000c002c118                gdtDescr
 .bss           0x00000000c002c11e        0x0 krnl/idle.32
 *fill*         0x00000000c002c11e        0x2 
 .bss           0x00000000c002c120        0x6 krnl/idt.32
                0x00000000c002c120                idtDescr
 .bss           0x00000000c002c126        0x0 krnl/inlines.32
 *fill*         0x00000000c002c126       0x1a 
 .bss           0x00000000c002c140       0x24 krnl/intlformat.32
                0x00000000c002c140                keLocale
 .bss           0x00000000c002c164        0x0 krnl/intops.32
 .bss           0x00000000c002c164        0x0 krnl/kheap.32
 .bss           0x00000000c002c164        0x0 krnl/mailbox.32
 .bss           0x00000000c002c164        0x0 krnl/main.32
 .bss           0x00000000c002c164        0x0 krnl/mutex.32
 .bss           0x00000000c002c164        0x1 krnl/panic.32
                0x00000000c002c164                keKernelPanicHappening
 *fill*         0x00000000c002c165        0x3 
 .bss           0x00000000c002c168       0x29 krnl/physmgr.32
                0x00000000c002c168                Phys::forbidEvictions
                0x00000000c002c16c                Phys::currentPagePointer
                0x00000000c002c170                Phys::highestMem
                0x00000000c002c174                Phys::oldPercent
                0x00000000c002c178                Phys::usedPages
                0x00000000c002c17c                Phys::usablePages
                0x00000000c002c180                Phys::dmaUsage
 .bss           0x00000000c002c191        0x0 krnl/pipe.32
 *fill*         0x00000000c002c191        0xf 
 .bss           0x00000000c002c1a0       0x48 krnl/powctrl.32
                0x00000000c002c1a0                keSleepFunction
                0x00000000c002c1a4                keRestartFunction
                0x00000000c002c1a8                keShutdownFunction
                0x00000000c002c1ac                powCtrlOnBattery
                0x00000000c002c1c0                currentPowerSettings
                0x00000000c002c1e4                secondsSinceLastUserIO
 .bss           0x00000000c002c1e8        0x8 krnl/random.32
                0x00000000c002c1e8                kiRandSeed
 .bss           0x00000000c002c1f0        0x0 krnl/resolve.32
 .bss           0x00000000c002c1f0        0x0 krnl/semaphore.32
 .bss           0x00000000c002c1f0        0x0 krnl/signal.32
 .bss           0x00000000c002c1f0        0x0 krnl/syscalls.32
 .bss           0x00000000c002c1f0        0x9 krnl/terminal.32
                0x00000000c002c1f0                terminalCycle
                0x00000000c002c1f4                activeTerminal
                0x00000000c002c1f8                VgaText::graphicMode
 *fill*         0x00000000c002c1f9        0x1 
 .bss           0x00000000c002c1fa        0x2 krnl/tss.32
                0x00000000c002c1fa                doubleFaultSelector
 *fill*         0x00000000c002c1fc        0x4 
 .bss           0x00000000c002c200       0x84 krnl/unixfile.32
                0x00000000c002c200                sfileLpt
                0x00000000c002c240                sfileCom
                0x00000000c002c264                sfileNul
                0x00000000c002c268                sfilePnt
                0x00000000c002c26c                sfileAux
                0x00000000c002c270                sfileCon
                0x00000000c002c274                initialFilesAdded
                0x00000000c002c278                unixFileLinkedList
 .bss           0x00000000c002c284       0x10 krnl/virtmgr.32
                0x00000000c002c284                twswaps
                0x00000000c002c288                swapBalance
                0x00000000c002c28c                Virt::swapfileBitmap
                0x00000000c002c290                keFirstVAS
 .bss           0x00000000c002c294        0x0 sys/alarm.32
 .bss           0x00000000c002c294        0x0 sys/eject.32
 .bss           0x00000000c002c294        0x0 sys/exit.32
 .bss           0x00000000c002c294        0x0 sys/getcwd.32
 .bss           0x00000000c002c294        0x0 sys/getpid.32
 .bss           0x00000000c002c294        0x0 sys/getramdata.32
 .bss           0x00000000c002c294        0x0 sys/getvgaptr.32
 .bss           0x00000000c002c294        0x0 sys/kill.32
 .bss           0x00000000c002c294        0x0 sys/loaddll.32
 .bss           0x00000000c002c294        0x0 sys/pause.32
 .bss           0x00000000c002c294        0x0 sys/pthread.32
 .bss           0x00000000c002c294        0x0 sys/read.32
 .bss           0x00000000c002c294        0x0 sys/registersignal.32
 .bss           0x00000000c002c294        0x0 sys/registry.32
 .bss           0x00000000c002c294        0x0 sys/sbrk.32
 .bss           0x00000000c002c294        0x0 sys/setcwd.32
 .bss           0x00000000c002c294        0x0 sys/settime.32
 .bss           0x00000000c002c294        0x0 sys/symlink.32
 .bss           0x00000000c002c294        0x0 sys/timezone.32
 .bss           0x00000000c002c294        0x0 sys/truncate.32
 .bss           0x00000000c002c294        0x0 sys/write.32
 .bss           0x00000000c002c294        0x0 sys/wsbe.32
 .bss           0x00000000c002c294        0x0 sys/yield.32
 .bss           0x00000000c002c294        0x0 thr/alarm.32
 *fill*         0x00000000c002c294        0xc 
 .bss           0x00000000c002c2a0      0x7a4 thr/elf.32
                0x00000000c002c2a0                Thr::driverLookupNext
                0x00000000c002c2c0                Thr::driverLookupLen
                0x00000000c002c4c0                Thr::driverLookupAddr
                0x00000000c002c6c0                Thr::driverNameLookup
                0x00000000c002c8c0                Thr::kernelSymbols
                0x00000000c002c940                Thr::kernelStringTable
                0x00000000c002c9c0                Thr::kernelSymbolTable
                0x00000000c002ca40                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002ca44        0x0 thr/exec.32
 *fill*         0x00000000c002ca44        0x4 
 .bss           0x00000000c002ca48       0x70 thr/prcssthr.32
                0x00000000c002ca48                keRestorePreemptionValue
                0x00000000c002ca4c                kePreemptionDisableCounter
                0x00000000c002ca50                cleanerThread
                0x00000000c002ca54                weNeedTheCleanerToNotBlock
                0x00000000c002ca58                retValLockStuff
                0x00000000c002ca5c                retValSchedLock
                0x00000000c002ca60                lockStuffLock
                0x00000000c002ca64                schedulerLock
                0x00000000c002ca68                taskSwitchesPostponedFlag
                0x00000000c002ca6c                postponeTaskSwitchesCounter
                0x00000000c002ca70                irqDisableCounter
                0x00000000c002ca74                terminatedTaskList
                0x00000000c002ca80                sleepingTaskList
                0x00000000c002ca8c                taskList
                0x00000000c002ca98                kernelProcess
 *fill*         0x00000000c002cab8        0x8 
 .bss           0x00000000c002cac0       0x40 vm86/vm8086.32
                0x00000000c002cac0                Vm::started8086Yet
                0x00000000c002cac4                Vm::vmRetV
                0x00000000c002cac8                Vm::vmDone
                0x00000000c002cac9                Vm::vmReady
                0x00000000c002cacc                Vm::vm86Thread
                0x00000000c002cad0                Vm::vmToHostCommsPtr
                0x00000000c002cae0                Vm::vmToHostComms
 .bss           0x00000000c002cb00       0x41 arch/i386/apic.32
                0x00000000c002cb00                noOfIOAPICs
                0x00000000c002cb20                ioapics
                0x00000000c002cb40                IOAPICsSetupYet
 *fill*         0x00000000c002cb41        0x3 
 .bss           0x00000000c002cb44       0x50 arch/i386/hal.32
                0x00000000c002cb44                guiPanicHandler
                0x00000000c002cb48                fpuOwner
                0x00000000c002cb4c                coproLoadFunc
                0x00000000c002cb50                coproSaveFunc
                0x00000000c002cb54                lastD
                0x00000000c002cb58                lastC
                0x00000000c002cb5c                lastB
                0x00000000c002cb60                lastA
                0x00000000c002cb64                HalPageWriteCombiningFlag
                0x00000000c002cb68                HalPageGlobalFlag
                0x00000000c002cb6c                keNMIEnabled
                0x00000000c002cb70                vendorIDString
                0x00000000c002cb7d                familyID
                0x00000000c002cb7e                model
                0x00000000c002cb7f                processorType
                0x00000000c002cb80                steppingID
                0x00000000c002cb84                vendor
                0x00000000c002cb88                opcodeDetectionMode
                0x00000000c002cb8c                features
 *fill*         0x00000000c002cb94        0xc 
 .bss           0x00000000c002cba0     0x2000 arch/i386/intctrl.32
                0x00000000c002cba0                keInterruptContexts
                0x00000000c002dba0                keInterruptHandlers
 .bss           0x00000000c002eba0        0x0 arch/i386/pic.32
 .bss           0x00000000c002eba0        0x2 arch/i386/rtc.32
 .bss           0x00000000c002eba2        0x0 arch/i386/vga.32
 *fill*         0x00000000c002eba2       0x1e 
 .bss           0x00000000c002ebc0       0xf0 fs/fat/vfslink.32
                0x00000000c002ebc0                FAT::fats
                0x00000000c002ebe0                FAT::vfsToFatRemaps
                0x00000000c002ec60                fatToVFSRemaps
 .bss           0x00000000c002ecb0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002ecb0       0x10 
 .bss           0x00000000c002ecc0      0x820 fs/iso9660/vfslink.32
                0x00000000c002ecc0                iso9660Owner
                0x00000000c002ecc4                recentSector
                0x00000000c002ece0                recentBuffer
 .bss           0x00000000c002f4e0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002f4e0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002f4e0        0xd hw/bus/pci.32
                0x00000000c002f4e0                thePCI
 .bss           0x00000000c002f4ed        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002f4ed        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002f4ed        0x3 
 .bss           0x00000000c002f4f0        0x8 hw/diskphys/ata.32
                0x00000000c002f4f0                ataSectorsWritten
                0x00000000c002f4f4                ataSectorsRead
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c002f4f8        0x0 hw/timer/apictimer.32
 .bss           0x00000000c002f4f8        0x4 hw/timer/pit.32
                0x00000000c002f4f8                pitFreq
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002f4fc        0x0 crtn.32
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002f4fc                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00369f7                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
