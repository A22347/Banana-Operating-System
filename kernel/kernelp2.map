Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f9ea
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6e3 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006ced                Krnl::firstTask()
                0x00000000c0006e2a                Computer::Computer()
                0x00000000c0006e2a                Computer::Computer()
                0x00000000c0006eda                Computer::setBootMessage(char const*)
                0x00000000c0006edc                Computer::detectFeatures()
                0x00000000c0007102                Computer::displayFeatures()
                0x00000000c0007104                Computer::rdmsr(unsigned int)
                0x00000000c0007130                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000716c                Computer::shutdown()
                0x00000000c0007184                Computer::restart()
                0x00000000c000719c                Computer::sleep()
                0x00000000c00071b0                Computer::nmiEnabled()
                0x00000000c00071bc                Computer::readCMOS(unsigned char)
                0x00000000c00071d8                Computer::enableNMI(bool)
                0x00000000c00071f0                Computer::open(int, int, void*)
                0x00000000c00072c4                Computer::disableNMI()
                0x00000000c00072d4                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072f8                Computer::handleNMI()
 *fill*         0x00000000c0007363        0x1 
 .text          0x00000000c0007364      0x1db core/gdt.32
                0x00000000c0007364                GDTEntry::setBase(unsigned int)
                0x00000000c0007380                GDTEntry::setLimit(unsigned int)
                0x00000000c000739e                GDT::GDT()
                0x00000000c000739e                GDT::GDT()
                0x00000000c00073b4                GDT::addEntry(GDTEntry)
                0x00000000c00073d6                GDT::getNumberOfEntries()
                0x00000000c00073de                GDT::flush()
                0x00000000c0007400                GDT::setup()
 .text          0x00000000c000753f       0x1d core/idle.32
                0x00000000c000753f                idleFunction(void*)
 .text          0x00000000c000755c      0x46c core/idt.32
                0x00000000c000755c                IDTEntry::IDTEntry(bool)
                0x00000000c000755c                IDTEntry::IDTEntry(bool)
                0x00000000c00075d6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075ec                IDT::IDT()
                0x00000000c00075ec                IDT::IDT()
                0x00000000c00075ee                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075f6                IDT::addEntry(IDTEntry, int)
                0x00000000c0007610                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007648                IDT::flush()
                0x00000000c0007662                IDT::setup()
 .text          0x00000000c00079c8      0x185 core/kheap.32
                0x00000000c00079c8                sbrk
                0x00000000c0007a5c                mmap
                0x00000000c0007a72                munmap
                0x00000000c0007a88                liballoc_lock()
                0x00000000c0007a96                liballoc_unlock()
                0x00000000c0007aac                liballoc_alloc(int)
                0x00000000c0007ac4                liballoc_free(void*, int)
                0x00000000c0007adf                realloc
                0x00000000c0007af3                malloc
                0x00000000c0007b03                free
                0x00000000c0007b13                rfree
                0x00000000c0007b23                calloc
 .text          0x00000000c0007b4d       0xc7 core/main.32
                0x00000000c0007b4d                KeEntryPoint
 .text          0x00000000c0007c14      0x643 core/physmgr.32
                0x00000000c0007c14                Phys::allocateDMA(unsigned long)
                0x00000000c0007d02                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d3d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d7d                Phys::getPageState(unsigned long)
                0x00000000c0007d99                Phys::freePage(unsigned long)
                0x00000000c0007e02                Phys::allocatePage()
                0x00000000c0007ed1                Phys::allocateContiguousPages(int)
                0x00000000c0007f38                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f70                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008257        0x1 
 .text          0x00000000c0008258      0x26d core/pipe.32
                0x00000000c0008258                Pipe::isAtty()
                0x00000000c000825c                Pipe::~Pipe()
                0x00000000c000825c                Pipe::~Pipe()
                0x00000000c0008280                Pipe::~Pipe()
                0x00000000c00082a8                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000836c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000845e                Pipe::Pipe(int)
                0x00000000c000845e                Pipe::Pipe(int)
 *fill*         0x00000000c00084c5        0x1 
 .text          0x00000000c00084c6      0xa85 core/terminal.32
                0x00000000c00084c6                VgaText::isAtty()
                0x00000000c00084ca                VgaText::~VgaText()
                0x00000000c00084ca                VgaText::~VgaText()
                0x00000000c00084ee                VgaText::~VgaText()
                0x00000000c0008518                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008538                setTerminalScrollLock(bool)
                0x00000000c0008539                doTerminalCycle()
                0x00000000c000853a                addToTerminalCycle(VgaText*)
                0x00000000c000853b                scrollTerminalScrollLock(int)
                0x00000000c000853c                VgaText::updateTitle()
                0x00000000c000853e                VgaText::load()
                0x00000000c0008540                VgaText::updateCursor()
                0x00000000c0008556                VgaText::doANSI_SGR(int)
                0x00000000c00085ca                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085da                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ea                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000860a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008616                VgaText::setTitleColour(VgaColour)
                0x00000000c0008622                VgaText::setTitle(char*)
                0x00000000c0008624                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008636                VgaText::scrollScreen()
                0x00000000c00086c8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086d8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008768                VgaText::getCursorX()
                0x00000000c0008770                VgaText::getCursorY()
                0x00000000c0008778                VgaText::setCursor(int, int)
                0x00000000c000878f                setActiveTerminal(VgaText*)
                0x00000000c00087da                VgaText::clearScreen()
                0x00000000c0008828                VgaText::setCursorX(int)
                0x00000000c0008840                VgaText::setCursorY(int)
                0x00000000c0008858                VgaText::incrementCursor(bool)
                0x00000000c00088ac                VgaText::decrementCursor(bool)
                0x00000000c00088ce                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000899e                VgaText::putchar(char)
                0x00000000c0008a86                VgaText::putx(unsigned int)
                0x00000000c0008acc                VgaText::puts(char const*)
                0x00000000c0008af2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b3e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c8c                VgaText::VgaText(char const*)
                0x00000000c0008c8c                VgaText::VgaText(char const*)
                0x00000000c0008ddc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f4a                VgaText::doUpdate()
 *fill*         0x00000000c0008f4b        0x1 
 .text          0x00000000c0008f4c      0x1a1 core/tss.32
                0x00000000c0008f4c                TSS::TSS()
                0x00000000c0008f4c                TSS::TSS()
                0x00000000c0008f5c                TSS::setESP(unsigned long)
                0x00000000c0008f70                TSS::flush()
                0x00000000c0008f90                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090ed        0x1 
 .text          0x00000000c00090ee      0x4ca core/unixfile.32
                0x00000000c00090ee                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009144                ReservedFilename::isAtty()
                0x00000000c0009160                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091be                UnixFile::getFileDescriptor()
                0x00000000c00091c6                UnixFile::UnixFile(int)
                0x00000000c00091c6                UnixFile::UnixFile(int)
                0x00000000c000937a                ReservedFilename::ReservedFilename(int)
                0x00000000c000937a                ReservedFilename::ReservedFilename(int)
                0x00000000c00093ac                UnixFile::~UnixFile()
                0x00000000c00093ac                UnixFile::~UnixFile()
                0x00000000c0009448                UnixFile::~UnixFile()
                0x00000000c0009470                ReservedFilename::~ReservedFilename()
                0x00000000c0009470                ReservedFilename::~ReservedFilename()
                0x00000000c0009494                ReservedFilename::~ReservedFilename()
                0x00000000c00094bb                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095b8     0x1224 core/virtmgr.32
                0x00000000c00095b8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095f2                Virt::getPageState(unsigned long)
                0x00000000c0009615                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009731                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009754                Virt::swapIDToSector(unsigned long)
                0x00000000c000976a                Virt::allocateSwapfilePage()
                0x00000000c00097e9                Virt::virtualMemorySetup()
                0x00000000c000983a                Virt::setupPageSwapping(int)
                0x00000000c00098ac                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098ae                VAS::VAS(VAS*)
                0x00000000c00098ae                VAS::VAS(VAS*)
                0x00000000c00098dc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000990a                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009929                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a66                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a8a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009aa4                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ae6                VAS::VAS()
                0x00000000c0009ae6                VAS::VAS()
                0x00000000c0009b50                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b84                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bb0                VAS::~VAS()
                0x00000000c0009bb0                VAS::~VAS()
                0x00000000c0009d1e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e26                VAS::allocatePages(int, int)
                0x00000000c0009f28                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f82                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a072                VAS::VAS(bool)
                0x00000000c000a072                VAS::VAS(bool)
                0x00000000c000a2bc                VAS::evict(unsigned long)
                0x00000000c000a39a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a53e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a5b2                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5de                VAS::scanForEviction()
                0x00000000c000a6e1                mapVASFirstTime
 .text          0x00000000c000a7dc       0x5f coreobjs/c++.32
                0x00000000c000a7dc                __cxa_atexit
                0x00000000c000a7df                __cxa_finalize
                0x00000000c000a7e0                __stack_chk_fail
                0x00000000c000a816                __cxa_pure_virtual
                0x00000000c000a827                operator new[](unsigned long)
                0x00000000c000a82c                operator delete(void*, unsigned long)
                0x00000000c000a831                operator delete[](void*)
                0x00000000c000a836                operator delete[](void*, unsigned long)
 .text          0x00000000c000a83b      0x225 dbg/kconsole.32
                0x00000000c000a83b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8ac                Dbg::logc(char)
                0x00000000c000a8cc                Dbg::logs(char*)
                0x00000000c000a8eb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a909                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a92a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa60      0x2d4 dbg/usban.32
                0x00000000c000aa60                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aacc                __ubsan_handle_type_mismatch_v1
                0x00000000c000aba8                __ubsan_handle_pointer_overflow
                0x00000000c000abd4                __ubsan_handle_out_of_bounds
                0x00000000c000ac00                __ubsan_handle_add_overflow
                0x00000000c000ac2c                __ubsan_handle_load_invalid_value
                0x00000000c000ac58                __ubsan_handle_divrem_overflow
                0x00000000c000ac84                __ubsan_handle_mul_overflow
                0x00000000c000acb0                __ubsan_handle_sub_overflow
                0x00000000c000acdc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad08                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad34      0x86b fs/symlink.32
                0x00000000c000ae83                KiDeinitialiseSymlinks(void*)
                0x00000000c000af14                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000afa6                KeInitialiseSymlinks()
                0x00000000c000b11a                KiIsSymlinkRegistered(char const*)
                0x00000000c000b29e                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b445                KeCreateSymlink(char const*, char const*)
 *fill*         0x00000000c000b59f        0x1 
 .text          0x00000000c000b5a0      0xd7c fs/vfs.32
                0x00000000c000b5a0                File::read(unsigned long long, void*, int*)
                0x00000000c000b5f8                File::write(unsigned long long, void*, int*)
                0x00000000c000b650                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b6a8                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b6d6                File::isAtty()
                0x00000000c000b6da                Directory::isAtty()
                0x00000000c000b6de                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b6e4                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b6ea                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b6f0                File::~File()
                0x00000000c000b6f0                File::~File()
                0x00000000c000b714                File::~File()
                0x00000000c000b73e                Directory::~Directory()
                0x00000000c000b73e                Directory::~Directory()
                0x00000000c000b762                Directory::~Directory()
                0x00000000c000b78c                Filesystem::Filesystem()
                0x00000000c000b78c                Filesystem::Filesystem()
                0x00000000c000b7b0                Filesystem::~Filesystem()
                0x00000000c000b7b0                Filesystem::~Filesystem()
                0x00000000c000b7be                Filesystem::~Filesystem()
                0x00000000c000b7e2                Fs::getcwd(Process*, char*, int)
                0x00000000c000b80c                Fs::initVFS()
                0x00000000c000b836                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000ba64                File::File(char const*, Process*, bool)
                0x00000000c000ba64                File::File(char const*, Process*, bool)
                0x00000000c000bb42                File::File(char const*, Process*)
                0x00000000c000bb42                File::File(char const*, Process*)
                0x00000000c000bb60                File::open(FileOpenMode)
                0x00000000c000bbbe                File::close()
                0x00000000c000bc1e                File::seek(unsigned long long)
                0x00000000c000bc74                File::truncate(unsigned long long)
                0x00000000c000bcca                File::tell(unsigned long long*)
                0x00000000c000bd1a                File::rewind()
                0x00000000c000bd2e                File::unlink()
                0x00000000c000bd7a                File::rename(char const*)
                0x00000000c000bdc8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000be24                File::exists()
                0x00000000c000be62                File::stat(unsigned long long*, bool*)
                0x00000000c000bec3                Fs::setcwd(Process*, char*)
                0x00000000c000c022                Directory::Directory(char const*, Process*)
                0x00000000c000c022                Directory::Directory(char const*, Process*)
                0x00000000c000c0ea                Directory::open()
                0x00000000c000c146                Directory::close()
                0x00000000c000c1a6                Directory::unlink()
                0x00000000c000c1f2                Directory::rename(char const*)
                0x00000000c000c240                Directory::exists()
                0x00000000c000c27e                Directory::read(dirent*)
                0x00000000c000c2ca                Directory::create()
                0x00000000c000c316                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c31c       0x86 hal/bus.32
                0x00000000c000c31c                Bus::Bus(char const*)
                0x00000000c000c31c                Bus::Bus(char const*)
                0x00000000c000c354                Bus::~Bus()
                0x00000000c000c354                Bus::~Bus()
                0x00000000c000c378                Bus::~Bus()
 .text          0x00000000c000c3a2       0x96 hal/buzzer.32
                0x00000000c000c3a2                beepThread(void*)
                0x00000000c000c3df                Krnl::beep(int, int, bool)
 .text          0x00000000c000c438      0x465 hal/clock.32
                0x00000000c000c438                User::loadClockSettings(int)
                0x00000000c000c48a                Clock::Clock(char const*)
                0x00000000c000c48a                Clock::Clock(char const*)
                0x00000000c000c4c0                Clock::~Clock()
                0x00000000c000c4c0                Clock::~Clock()
                0x00000000c000c4e4                Clock::~Clock()
                0x00000000c000c50e                Clock::timeInSecondsLocal()
                0x00000000c000c556                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c5af                datetimeToSeconds(datetime_t)
                0x00000000c000c6d4                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c734                secondsToDatetime(unsigned long long)
                0x00000000c000c878                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c89d        0x1 
 .text          0x00000000c000c89e      0x464 hal/device.32
                0x00000000c000c89e                Device::hibernate()
                0x00000000c000c8a0                Device::wake()
                0x00000000c000c8a2                Device::detect()
                0x00000000c000c8a4                Device::disableLegacy()
                0x00000000c000c8a6                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c8a8                DriverlessDevice::close(int, int, void*)
                0x00000000c000c8ac                DriverlessDevice::detect()
                0x00000000c000c8ae                DriverlessDevice::open(int, int, void*)
                0x00000000c000c8c2                Device::~Device()
                0x00000000c000c8c2                Device::~Device()
                0x00000000c000c8d0                Device::~Device()
                0x00000000c000c8f8                Device::findAndLoadDriver()
                0x00000000c000c906                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c92c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c96c                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c996                Device::getParent()
                0x00000000c000c9a2                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c9c0                Device::addChild(Device*)
                0x00000000c000ca04                Device::removeAllChildren()
                0x00000000c000ca4a                Device::hibernateAll()
                0x00000000c000ca7a                Device::wakeAll()
                0x00000000c000caaa                Device::detectAll()
                0x00000000c000cada                Device::disableLegacyAll()
                0x00000000c000cadc                Device::loadDriversForAll()
                0x00000000c000cade                Device::closeAll()
                0x00000000c000cb14                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cb4a                Device::setName(char const*)
                0x00000000c000cb58                Device::Device(char const*)
                0x00000000c000cb58                Device::Device(char const*)
                0x00000000c000cc54                Device::getName()
                0x00000000c000cc5e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc5e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc94                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ccd8                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000cd02        0x2 
 .text          0x00000000c000cd04       0x86 hal/diskctrl.32
                0x00000000c000cd04                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd04                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd3c                HardDiskController::~HardDiskController()
                0x00000000c000cd3c                HardDiskController::~HardDiskController()
                0x00000000c000cd60                HardDiskController::~HardDiskController()
 .text          0x00000000c000cd8a       0xe2 hal/diskphys.32
                0x00000000c000cd8a                PhysicalDisk::eject()
                0x00000000c000cd8e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cd8e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cdf6                PhysicalDisk::startCache()
                0x00000000c000ce1e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce1e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce42                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ce6c        0x0 hal/fpu.32
 .text          0x00000000c000ce6c      0x360 hal/intctrl.32
                0x00000000c000ce6c                int_handler
                0x00000000c000cef6                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cf40                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d083                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d0b7                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d12d                setupINTS()
                0x00000000c000d18a                convertLegacyIRQNumber(int)
 .text          0x00000000c000d1cc      0x8be hal/keybrd.32
                0x00000000c000d1cc                startGUI(void*)
                0x00000000c000d23a                startGUIVESA(void*)
                0x00000000c000d2a8                sendKeyToTerminal(unsigned char)
                0x00000000c000d383                sendKeyboardToken(KeyboardToken)
                0x00000000c000d86d                clearInternalKeybuffer(VgaText*)
                0x00000000c000d8a2                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000da00                Keyboard::Keyboard(char const*)
                0x00000000c000da00                Keyboard::Keyboard(char const*)
                0x00000000c000da3c                Keyboard::~Keyboard()
                0x00000000c000da3c                Keyboard::~Keyboard()
                0x00000000c000da60                Keyboard::~Keyboard()
 .text          0x00000000c000da8a      0x3f8 hal/logidisk.32
                0x00000000c000da8a                LogicalDisk::close(int, int, void*)
                0x00000000c000da8e                LogicalDisk::~LogicalDisk()
                0x00000000c000da8e                LogicalDisk::~LogicalDisk()
                0x00000000c000dab2                LogicalDisk::~LogicalDisk()
                0x00000000c000dadc                LogicalDisk::open(int, int, void*)
                0x00000000c000daf0                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000db28                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000db6e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000db6e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc2e                LogicalDisk::assignDriveLetter()
                0x00000000c000dce8                LogicalDisk::mount()
                0x00000000c000dd30                LogicalDisk::unmount()
                0x00000000c000dd40                LogicalDisk::eject()
                0x00000000c000dd54                LogicalDisk::unassignDriveLetter()
                0x00000000c000ddaa                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000de16                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000de82        0x2 
 .text          0x00000000c000de84       0x86 hal/mouse.32
                0x00000000c000de84                Mouse::Mouse(char const*)
                0x00000000c000de84                Mouse::Mouse(char const*)
                0x00000000c000debc                Mouse::~Mouse()
                0x00000000c000debc                Mouse::~Mouse()
                0x00000000c000dee0                Mouse::~Mouse()
 .text          0x00000000c000df0a       0x90 hal/nic.32
                0x00000000c000df0a                NIC::getMAC()
                0x00000000c000df10                NIC::write(int, unsigned char*, int*)
                0x00000000c000df16                NIC::NIC(char const*)
                0x00000000c000df16                NIC::NIC(char const*)
                0x00000000c000df4c                NIC::~NIC()
                0x00000000c000df4c                NIC::~NIC()
                0x00000000c000df70                NIC::~NIC()
 .text          0x00000000c000df9a      0x33b hal/partition.32
                0x00000000c000df9a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e042                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e2d5        0x3 
 .text          0x00000000c000e2d8       0x86 hal/serial.32
                0x00000000c000e2d8                Serial::Serial(char const*)
                0x00000000c000e2d8                Serial::Serial(char const*)
                0x00000000c000e310                Serial::~Serial()
                0x00000000c000e310                Serial::~Serial()
                0x00000000c000e334                Serial::~Serial()
 *fill*         0x00000000c000e35e        0x2 
 .text          0x00000000c000e360      0x234 hal/timer.32
                0x00000000c000e360                Timer::Timer(char const*)
                0x00000000c000e360                Timer::Timer(char const*)
                0x00000000c000e398                Timer::~Timer()
                0x00000000c000e398                Timer::~Timer()
                0x00000000c000e3bc                Timer::~Timer()
                0x00000000c000e3e6                Timer::read()
                0x00000000c000e3f1                setupTimer(int)
                0x00000000c000e42c                timerHandler(unsigned int)
 .text          0x00000000c000e594      0x450 hal/vcache.32
                0x00000000c000e594                VCache::VCache(PhysicalDisk*)
                0x00000000c000e594                VCache::VCache(PhysicalDisk*)
                0x00000000c000e704                VCache::invalidateReadBuffer()
                0x00000000c000e714                VCache::writeWriteBuffer()
                0x00000000c000e760                VCache::~VCache()
                0x00000000c000e760                VCache::~VCache()
                0x00000000c000e7b8                VCache::~VCache()
                0x00000000c000e7e0                VCache::write(unsigned long long, int, void*)
                0x00000000c000e8da                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e9e4      0x4d9 hal/video.32
                0x00000000c000e9e4                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ea30                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000eaa0                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eb30                Video::clearScreen(unsigned int)
                0x00000000c000eb64                Video::putpixel(int, int, unsigned int)
                0x00000000c000eb72                Video::readPixelApprox(int, int)
                0x00000000c000eb86                Video::Video(char const*)
                0x00000000c000eb86                Video::Video(char const*)
                0x00000000c000ebbc                Video::~Video()
                0x00000000c000ebbc                Video::~Video()
                0x00000000c000ebe0                Video::~Video()
                0x00000000c000ec0a                Video::isMonochrome()
                0x00000000c000ec16                Video::getWidth()
                0x00000000c000ec22                Video::getHeight()
                0x00000000c000ec2e                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ecea                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ee52                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eebd        0x3 
 .text          0x00000000c000eec0     0x132a hw/acpi.32
                0x00000000c000eec0                ACPI::close(int, int, void*)
                0x00000000c000efcc                findRSDP()
                0x00000000c000f064                loadACPITables(unsigned char*)
                0x00000000c000f2d0                findRSDT(unsigned char*)
                0x00000000c000f428                findDataTable(unsigned char*, char*)
                0x00000000c000f4a8                scanMADT()
                0x00000000c000f960                ACPI::ACPI()
                0x00000000c000f960                ACPI::ACPI()
                0x00000000c000f9b4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fab0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fb7c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fb84                ACPI::detectPCI()
                0x00000000c000fda4                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fdec                ACPI::sleep()
                0x00000000c000fe08                ACPI::open(int, int, void*)
 .text          0x00000000c00101ea      0xbc5 hw/cpu.32
                0x00000000c00101ea                CPU::close(int, int, void*)
                0x00000000c00101ee                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c001020a                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0010222                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0010296                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c001031a                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010348                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0010376                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00103a4                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00103d2                CPU::CPU()
                0x00000000c00103d2                CPU::CPU()
                0x00000000c0010460                CPU::displayFeatures()
                0x00000000c0010462                CPU::detectFeatures()
                0x00000000c0010b36                CPU::setupSMEP()
                0x00000000c0010b42                CPU::setupUMIP()
                0x00000000c0010b4c                CPU::setupTSC()
                0x00000000c0010b56                CPU::setupLargePages()
                0x00000000c0010b60                CPU::setupPAT()
                0x00000000c0010b9c                CPU::setupMTRR()
                0x00000000c0010b9e                CPU::setupGlobalPages()
                0x00000000c0010ba8                CPU::allowUsermodeDataAccess()
                0x00000000c0010bba                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010bcc                CPU::setupSMAP()
                0x00000000c0010bda                CPU::setupFeatures()
                0x00000000c0010ca6                CPU::open(int, int, void*)
 .text          0x00000000c0010daf       0xb6 krnl/atexit.32
                0x00000000c0010daf                KeInitialiseAtexit()
                0x00000000c0010dce                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010e02                KeExecuteAtexit()
 .text          0x00000000c0010e65       0xdf krnl/bootmsg.32
                0x00000000c0010e65                KeDisplaySplashScreen()
                0x00000000c0010ee1                KeSetBootMessage(char const*)
 .text          0x00000000c0010f44       0x1d krnl/compat.32
                0x00000000c0010f44                Krnl::handlePowerButton()
                0x00000000c0010f54                Krnl::handleSleepButton()
 .text          0x00000000c0010f61       0x2b krnl/crc32.32
                0x00000000c0010f61                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010f8c      0x5bf krnl/env.32
                0x00000000c0010f8c                EnvVarContainer::getEnv(char const*)
                0x00000000c0010fca                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001108c                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001108e                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00112b2                EnvVarContainer::__loadSystem()
                0x00000000c00112cc                EnvVarContainer::__loadUser()
                0x00000000c00112ce                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00112ce                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00112f0                EnvVarContainer::~EnvVarContainer()
                0x00000000c00112f0                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011320                KeGetEnv(Process*, char const*)
                0x00000000c0011385                KeSetEnvSystem(char const*, char const*)
                0x00000000c001139f                KeSetEnvUser(char const*, char const*)
                0x00000000c00113be                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00113d1                KeDeleteEnvSystem(char const*)
                0x00000000c00113d2                KeDeleteEnvUser(char const*)
                0x00000000c00113d3                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00113d4                KeNewProcessEnv(Process*)
                0x00000000c00113f6                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0011442                KeLoadSystemEnv()
                0x00000000c0011470                KeLoadUserEnv()
                0x00000000c0011496                KeFlushEnv()
                0x00000000c0011497                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00114b7                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c001154b       0x94 krnl/inlines.32
                0x00000000c001154b                CPU::current()
                0x00000000c0011557                operator new(unsigned long)
                0x00000000c001155c                operator delete(void*)
                0x00000000c0011561                disableIRQs()
                0x00000000c0011563                enableIRQs()
                0x00000000c0011565                lockScheduler()
                0x00000000c001156d                unlockScheduler()
                0x00000000c001157c                lockStuff()
                0x00000000c001158a                unlockStuff()
                0x00000000c00115c4                Virt::getAKernelVAS()
                0x00000000c00115ca                __not_memcpy
 .text          0x00000000c00115df        0xc krnl/panic.32
                0x00000000c00115df                KePanic(char const*)
 .text          0x00000000c00115eb      0x142 krnl/powctrl.32
                0x00000000c00115eb                KePowerThread(void*)
                0x00000000c0011619                KeChangePowerSettings(PowerSettings)
                0x00000000c001162f                KeUserIOReceived()
                0x00000000c001163a                KeHandlePowerButton()
                0x00000000c001166f                KeHandleSleepButton()
                0x00000000c00116a4                KeSetupPowerManager()
 .text          0x00000000c001172d       0x9b krnl/random.32
                0x00000000c001172d                KeRand()
                0x00000000c001176d                KeSeedRand(unsigned int)
                0x00000000c0011796                KeInitRand()
 .text          0x00000000c00117c8      0x1bc krnl/resolve.32
                0x00000000c00117c8                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011984      0x31f krnl/signal.32
                0x00000000c0011984                KiSigKill(int)
                0x00000000c0011998                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011999                KiDefaultSignalHandlerPause(int)
                0x00000000c00119c5                KiDefaultSignalHandlerResume(int)
                0x00000000c00119f1                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00119f6                KeInitSignals()
                0x00000000c0011a45                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011a7b                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011af8                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011bef                KiCheckSignalZ
                0x00000000c0011c31                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011c6c                KiFinishSignalZ
 .text          0x00000000c0011ca3      0xe32 krnl/syscalls.32
                0x00000000c0011ca3                SysSeekDir(regs*)
                0x00000000c0011ca8                SysTellDir(regs*)
                0x00000000c0011cad                SysVerify(regs*)
                0x00000000c0011cb7                SysGetArgc(regs*)
                0x00000000c0011ccb                SysTTYName(regs*)
                0x00000000c0011cd3                SysFormatDisk(regs*)
                0x00000000c0011d3a                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011d8e                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011de7                SysShutdown(regs*)
                0x00000000c0011e74                SysRealpath(regs*)
                0x00000000c0011ec2                SysReadDir(regs*)
                0x00000000c0011f42                SysIsATTY(regs*)
                0x00000000c0011f9c                SysSeek(regs*)
                0x00000000c0011ff6                SysTell(regs*)
                0x00000000c0012063                SysSize(regs*)
                0x00000000c00120d6                SysSizeFromFilename(regs*)
                0x00000000c001220a                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c001233e                SysClose(regs*)
                0x00000000c001239e                SysOpenDir(regs*)
                0x00000000c001241b                SysMakeDir(regs*)
                0x00000000c0012489                SysCloseDir(regs*)
                0x00000000c00124d8                SysWait(regs*)
                0x00000000c00124f9                SysNotImpl(regs*)
                0x00000000c0012514                SysPanic(regs*)
                0x00000000c001252f                SysRmdir(regs*)
                0x00000000c001258d                SysUnlink(regs*)
                0x00000000c00125eb                SysGetArgv(regs*)
                0x00000000c0012638                SysUSleep(regs*)
                0x00000000c0012661                SysSpawn(regs*)
                0x00000000c00126d2                SysGetEnv(regs*)
                0x00000000c0012787                SysSetFatAttrib(regs*)
                0x00000000c00127f0                SysPipe(regs*)
                0x00000000c0012835                SysGetUnixTime(regs*)
                0x00000000c0012849                string_ends_with(char const*, char const*)
                0x00000000c0012894                SysOpen(regs*)
                0x00000000c0012a93                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012ad5        0x3 
 .text          0x00000000c0012ad8      0x159 net/ethernet.32
                0x00000000c0012ad8                KeSwitchEndian16(unsigned short)
                0x00000000c0012afc                KeSwitchEndian32(unsigned int)
                0x00000000c0012b2c                EthernetCRC32(unsigned char*, int)
                0x00000000c0012bd0                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012c31      0xd51 reg/cm.32
                0x00000000c0012c31                CmOpen(char const*)
                0x00000000c0012d4f                CmClose(Reghive_Tag*)
                0x00000000c0012d65                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012da1                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012e18                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012e57                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012e89                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012ec5                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012eed                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012f0e                CmExpand(Reghive_Tag*, int)
                0x00000000c0012f89                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c001300f                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0013103                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c001323b                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c001329c                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c00132cc                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0013303                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c001332d                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c001336d                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013411                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c001343f                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00135dc                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013629                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00136a3                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00136f6                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00137ba                zStrtok(char*, char const*)
                0x00000000c001382c                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00138ad                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013950                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0013982      0x545 reg/registry.32
                0x00000000c0013982                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013b0e                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013c63                Reg::getLine(char*, char*, char*)
                0x00000000c0013c9a                Reg::readInt(char*, char*, int*)
                0x00000000c0013d88                Reg::readString(char*, char*, char*, int)
                0x00000000c0013e09                Reg::readBool(char*, char*, bool*)
                0x00000000c0013e2e                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013e5a                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013e86                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013ec7       0x36 sys/eject.32
                0x00000000c0013ec7                SysEject(regs*)
 .text          0x00000000c0013efd       0x18 sys/exit.32
                0x00000000c0013efd                SysExit(regs*)
 .text          0x00000000c0013f15       0x1f sys/getcwd.32
                0x00000000c0013f15                SysGetCwd(regs*)
 .text          0x00000000c0013f34        0xc sys/getpid.32
                0x00000000c0013f34                SysGetPID(regs*)
 .text          0x00000000c0013f40       0x1a sys/getramdata.32
                0x00000000c0013f40                SysGetRAMData(regs*)
 .text          0x00000000c0013f5a       0x82 sys/getvgaptr.32
                0x00000000c0013f5a                SysGetVGAPtr(regs*)
 .text          0x00000000c0013fdc       0xb9 sys/kill.32
                0x00000000c0013fdc                SysKill(regs*)
 .text          0x00000000c0014095       0xa8 sys/loaddll.32
                0x00000000c0014095                SysLoadDLL(regs*)
 .text          0x00000000c001413d       0x68 sys/read.32
                0x00000000c001413d                SysRead(regs*)
 .text          0x00000000c00141a5       0x29 sys/registersignal.32
                0x00000000c00141a5                SysRegisterSignal(regs*)
 .text          0x00000000c00141ce      0x19c sys/registry.32
                0x00000000c00141ce                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014245                SysRegistryReadExtent(regs*)
                0x00000000c001428d                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00142b5                SysRegistryEnterDirectory(regs*)
                0x00000000c00142dd                SysRegistryGetNext(regs*)
                0x00000000c0014305                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001433f                SysRegistryOpen(regs*)
                0x00000000c0014353                SysRegistryClose(regs*)
 .text          0x00000000c001436a       0x55 sys/sbrk.32
                0x00000000c001436a                SysSbrk(regs*)
 .text          0x00000000c00143bf       0x1c sys/setcwd.32
                0x00000000c00143bf                SysSetCwd(regs*)
 .text          0x00000000c00143db       0x96 sys/settime.32
                0x00000000c00143db                SysSetTime(regs*)
 .text          0x00000000c0014471       0x73 sys/symlink.32
                0x00000000c0014471                SysSymlink(regs*)
 .text          0x00000000c00144e4       0x4a sys/timezone.32
                0x00000000c00144e4                SysTimezone(regs*)
 .text          0x00000000c001452e       0xfc sys/truncate.32
                0x00000000c001452e                SysTruncate(regs*)
 .text          0x00000000c001462a       0x68 sys/write.32
                0x00000000c001462a                SysWrite(regs*)
 .text          0x00000000c0014692       0x62 sys/wsbe.32
                0x00000000c0014692                SysWsbe(regs*)
 .text          0x00000000c00146f4       0x25 sys/yield.32
                0x00000000c00146f4                SysYield(regs*)
 .text          0x00000000c0014719     0x1203 thr/elf.32
                0x00000000c0014719                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00149a0                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014bbf                Thr::runtimeReferenceHelper()
                0x00000000c0014bd2                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014c21                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014edf                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015620                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015652                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015689                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00156a3                Thr::loadDLL(char const*, bool)
                0x00000000c00158e3                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c001591c     0x13b5 thr/prcssthr.32
                0x00000000c001591c                userModeEntryPoint(void*)
                0x00000000c0015944                changeTSS
                0x00000000c0015974                switchToThread(ThreadControlBlock*)
                0x00000000c0015a24                Process::addArgs(char**)
                0x00000000c0015a90                Process::Process(char const*, Process*, char**)
                0x00000000c0015a90                Process::Process(char const*, Process*, char**)
                0x00000000c0015c9c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015c9c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015e70                taskStartupFunction
                0x00000000c0015e7c                Semaphore::Semaphore(int)
                0x00000000c0015e7c                Semaphore::Semaphore(int)
                0x00000000c0015eac                Mutex::Mutex()
                0x00000000c0015eac                Mutex::Mutex()
                0x00000000c0015ec0                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015fc8                Process::createUserThread()
                0x00000000c0015fe8                setupMultitasking(void (*)())
                0x00000000c001610c                schedule()
                0x00000000c00161a0                Semaphore::tryAcquire()
                0x00000000c0016260                Semaphore::assertLocked(char const*)
                0x00000000c00162e4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001630c                blockTask(TaskState)
                0x00000000c0016344                waitTask(int, int*, int)
                0x00000000c0016388                milliTenthSleepUntil(unsigned int)
                0x00000000c0016428                milliTenthSleep(unsigned int)
                0x00000000c001643c                sleep(unsigned int)
                0x00000000c001644c                Semaphore::acquire()
                0x00000000c0016514                taskReturned
                0x00000000c0016558                Thr::processFromPID(int)
                0x00000000c0016604                unblockTask(ThreadControlBlock*)
                0x00000000c00166b0                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016984                cleanerTaskFunction(void*)
                0x00000000c0016a8c                terminateTask(int)
                0x00000000c0016b78                Thr::terminateFromIRQ(int)
                0x00000000c0016b88                Semaphore::release()
 .text          0x00000000c0016cd1      0xc31 vm86/vm8086.32
                0x00000000c0016cd1                Vm::inbv(unsigned short)
                0x00000000c0016ce4                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016d1a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016d2a                Vm::getSegment(unsigned int)
                0x00000000c0016d32                Vm::getOffset(unsigned int)
                0x00000000c0016d37                Vm::mainloop2()
                0x00000000c0016d71                Vm::mainVm8086Loop(void*)
                0x00000000c0016d81                Vm::mainloop3(unsigned long)
                0x00000000c0016da7                Vm::initialise8086()
                0x00000000c0016dea                Vm::finish8086()
                0x00000000c0016e4b                Vm::getOutput8086(unsigned char*)
                0x00000000c0016e70                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016f29                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00170c7                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017164                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017175                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017187                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017198                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00171ad                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00171c3                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00171d8                Vm::faultHandler(regs*)
 .text          0x00000000c0017902      0xaf0 arch/i386/hal.32
                0x00000000c0017902                noCopro(unsigned long)
                0x00000000c0017903                nmiHandler(regs*, void*)
                0x00000000c001791c                doubleFault(regs*, void*)
                0x00000000c0017935                displayDebugInfo(regs*)
                0x00000000c0017cba                HalSystemIdle()
                0x00000000c0017d36                displayProgramFault(char const*)
                0x00000000c0017d82                gpFault(regs*, void*)
                0x00000000c0017de9                pgFault(regs*, void*)
                0x00000000c0017e72                otherISRHandler(regs*, void*)
                0x00000000c0017ea6                opcodeFault(regs*, void*)
                0x00000000c0017f29                i386SaveCoprocessor(void*)
                0x00000000c0017f3d                i386LoadCoprocessor(void*)
                0x00000000c0017f51                x87EmulHandler(regs*, void*)
                0x00000000c0017fee                HalInitialiseCoprocessor()
                0x00000000c001809c                HalPanic(char const*)
                0x00000000c00181b0                HalQueryPerformanceCounter()
                0x00000000c00181cb                HalInitialise()
                0x00000000c0018381                HalMakeBeep(int)
                0x00000000c00183bb                HalGetRand()
                0x00000000c00183be                HalEndOfInterrupt(int)
                0x00000000c00183ef                HalRestart()
                0x00000000c00183f0                HalShutdown()
                0x00000000c00183f1                HalSleep()
 *fill*         0x00000000c00183f2        0x2 
 .text          0x00000000c00183f4      0x2dc arch/i386/pic.32
                0x00000000c00183f4                picIoWait()
                0x00000000c00183fc                picDisable()
                0x00000000c0018430                picGetIRQReg(int)
                0x00000000c00184ac                picOpen()
                0x00000000c0018630                picEOI(int)
 .text          0x00000000c00186d0      0x66e arch/i386/rtc.32
                0x00000000c00186d0                RTC::open(int, int, void*)
                0x00000000c00186d4                RTC::close(int, int, void*)
                0x00000000c00186d8                RTC::timeInSecondsUTC()
                0x00000000c00186ea                RTC::timeInDatetimeUTC()
                0x00000000c0018710                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001874e                RTC::~RTC()
                0x00000000c001874e                RTC::~RTC()
                0x00000000c0018772                RTC::~RTC()
                0x00000000c001879c                RTC::get_update_in_progress_flag()
                0x00000000c00187b6                RTC::completeRTCRefresh()
                0x00000000c0018a90                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018c3e                rtcIRQHandler(regs*, void*)
                0x00000000c0018c84                RTC::RTC()
                0x00000000c0018c84                RTC::RTC()
 *fill*         0x00000000c0018d3e        0x2 
 .text          0x00000000c0018d40      0x1f4 arch/i386/vga.32
                0x00000000c0018d40                HalConsoleScroll(int, int)
                0x00000000c0018e48                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018eac                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018f34     0x14f3 fs/fat/vfslink.32
                0x00000000c0018f34                FAT::getName()
                0x00000000c0018f3c                FAT::tell(void*, unsigned long long*)
                0x00000000c0018f78                FAT::stat(void*, unsigned long long*)
                0x00000000c0018fb4                FAT::~FAT()
                0x00000000c0018fb4                FAT::~FAT()
                0x00000000c0018fd8                FAT::~FAT()
                0x00000000c0019000                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00190a4                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019184                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019368                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019584                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019744                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00198b4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019914                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019974                FAT::close(void*)
                0x00000000c00199c8                FAT::closeDir(void*)
                0x00000000c0019a1c                FAT::truncate(void*, unsigned long long)
                0x00000000c0019a88                FAT::seek(void*, unsigned long long)
                0x00000000c0019ae0                fatWrapperReadDisk
                0x00000000c0019b20                fatWrapperWriteDisk
                0x00000000c0019b60                fatWrapperIoctl
                0x00000000c0019c80                FAT::FAT()
                0x00000000c0019c80                FAT::FAT()
                0x00000000c0019cd8                FAT::fixFilepath(char*)
                0x00000000c0019d18                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019e8c                FAT::openDir(char const*, void**)
                0x00000000c0019f3c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a034                FAT::unlink(char const*)
                0x00000000c001a0b4                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a26c                FAT::rename(char const*, char const*)
                0x00000000c001a338                FAT::mkdir(char const*)
                0x00000000c001a3b8                FAT::exists(char const*)
 *fill*         0x00000000c001a427        0x1 
 .text          0x00000000c001a428       0x94 fs/iso9660/helper.32
                0x00000000c001a428                isoReadDiscSectorHelper
                0x00000000c001a484                iso_kprintf
                0x00000000c001a4a0                iso_kprintfd
 .text          0x00000000c001a4bc      0x71a fs/iso9660/vfslink.32
                0x00000000c001a4bc                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a4c2                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a4c8                ISO9660::getName()
                0x00000000c001a4ce                ISO9660::closeDir(void*)
                0x00000000c001a4d8                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a4de                ISO9660::unlink(char const*)
                0x00000000c001a4e4                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a4ea                ISO9660::rename(char const*, char const*)
                0x00000000c001a4f0                ISO9660::mkdir(char const*)
                0x00000000c001a4f6                ISO9660::~ISO9660()
                0x00000000c001a4f6                ISO9660::~ISO9660()
                0x00000000c001a51a                ISO9660::~ISO9660()
                0x00000000c001a542                ISO9660::exists(char const*)
                0x00000000c001a556                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a63c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a684                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a6c6                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a704                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a756                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a898                ISO9660::close(void*)
                0x00000000c001a8c8                ISO9660::openDir(char const*, void**)
                0x00000000c001a9a2                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001aabd                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001ab3c                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001abae                ISO9660::ISO9660()
                0x00000000c001abae                ISO9660::ISO9660()
 .text          0x00000000c001abd6      0x26c hal/sound/sndcard.32
                0x00000000c001abd6                SoundCard::beginPlayback()
                0x00000000c001abe4                SoundCard::stopPlayback()
                0x00000000c001abf2                SoundCard::SoundCard(char const*)
                0x00000000c001abf2                SoundCard::SoundCard(char const*)
                0x00000000c001ac90                SoundCard::~SoundCard()
                0x00000000c001ac90                SoundCard::~SoundCard()
                0x00000000c001acb4                SoundCard::~SoundCard()
                0x00000000c001acde                SoundCard::configureRates(int, int, int)
                0x00000000c001ad0e                SoundCard::getSamples16(int, short*)
                0x00000000c001ad6a                SoundCard::getSamples32(int, int*)
                0x00000000c001adf0                SoundCard::addChannel(SoundPort*)
                0x00000000c001ae2e                SoundCard::removeChannel(int)
 *fill*         0x00000000c001ae42        0x2 
 .text          0x00000000c001ae44      0x393 hal/sound/sndport.32
                0x00000000c001ae44                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ae44                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001aed0                SoundPort::~SoundPort()
                0x00000000c001aed0                SoundPort::~SoundPort()
                0x00000000c001af04                SoundPort::unpause()
                0x00000000c001af10                SoundPort::pause()
                0x00000000c001af1c                SoundPort::getBufferUsed()
                0x00000000c001af24                SoundPort::getBufferSize()
                0x00000000c001af2c                SoundPort::buffer16(short*, int)
                0x00000000c001afb8                SoundPort::buffer32(int*, int)
                0x00000000c001b044                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b114                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b1d7        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b1d7        0x1 
 .text          0x00000000c001b1d8      0xbc5 hw/bus/pci.32
                0x00000000c001b1d8                PCI::open(int, int, void*)
                0x00000000c001b1f6                PCI::close(int, int, void*)
                0x00000000c001b1fa                PCI::PCI()
                0x00000000c001b1fa                PCI::PCI()
                0x00000000c001b292                PCI::readBAR8(unsigned int, int)
                0x00000000c001b2ae                PCI::readBAR16(unsigned int, int)
                0x00000000c001b2cc                PCI::readBAR32(unsigned int, int)
                0x00000000c001b2e8                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b308                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b32a                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b34a                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b3c0                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b46a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b48e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4b6                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b500                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b528                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b54c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b570                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b598                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b5fc                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b6e2                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b9ac                PCI::checkBus(unsigned char)
                0x00000000c001b9d0                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bb56                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bcd2                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bd44                PCI::detect()
 *fill*         0x00000000c001bd9d        0x1 
 .text          0x00000000c001bd9e      0xb96 hw/diskctrl/ide.32
                0x00000000c001bd9e                IDE::close(int, int, void*)
                0x00000000c001bda2                IDE::IDE()
                0x00000000c001bda2                IDE::IDE()
                0x00000000c001bdd6                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bde8                selectDrive(unsigned char, unsigned char)
                0x00000000c001bdea                IDE::getBase(unsigned char)
                0x00000000c001bdfc                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bebc                IDE::read(unsigned char, unsigned char)
                0x00000000c001bf70                IDE::waitInterrupt(unsigned char)
                0x00000000c001bfd2                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bfee                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c00a                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c054                IDE::open(int, int, void*)
                0x00000000c001c48e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c55e                IDE::detect()
                0x00000000c001c826                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c8e0                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c934      0x32c hw/diskctrl/satabus.32
                0x00000000c001c934                SATABus::close(int, int, void*)
                0x00000000c001c938                SATABus::detect()
                0x00000000c001c93a                SATABus::SATABus()
                0x00000000c001c93a                SATABus::SATABus()
                0x00000000c001c9c0                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c9f2                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca3a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca5a                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca84                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cb96                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cc40                SATABus::open(int, int, void*)
 .text          0x00000000c001cc60      0x96d hw/diskphys/ata.32
                0x00000000c001cc60                ATA::close(int, int, void*)
                0x00000000c001cc84                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cc86                ATA::ATA()
                0x00000000c001cc86                ATA::ATA()
                0x00000000c001ccb4                ATA::flush(bool)
                0x00000000c001cd02                ATA::readyForCommand()
                0x00000000c001cd4e                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d112                ATA::detectCHS()
                0x00000000c001d13c                ATA::open(int, int, void*)
                0x00000000c001d208                combineCharAndColour(char, unsigned char)
                0x00000000c001d219                combineColours(unsigned char, unsigned char)
                0x00000000c001d226                ATA::read(unsigned long long, int, void*)
                0x00000000c001d3fc                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d5cd        0x1 
 .text          0x00000000c001d5ce      0x612 hw/diskphys/atapi.32
                0x00000000c001d5ce                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d5d4                ATAPI::close(int, int, void*)
                0x00000000c001d5f8                ATAPI::ATAPI()
                0x00000000c001d5f8                ATAPI::ATAPI()
                0x00000000c001d626                ATAPI::readyForCommand()
                0x00000000c001d678                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d938                ATAPI::diskRemoved()
                0x00000000c001d972                ATAPI::eject()
                0x00000000c001d9ba                ATAPI::diskInserted()
                0x00000000c001d9c6                ATAPI::detectMedia()
                0x00000000c001da86                ATAPI::open(int, int, void*)
                0x00000000c001db66                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001dbe0      0x7ff hw/diskphys/sata.32
                0x00000000c001dbe0                SATA::close(int, int, void*)
                0x00000000c001dc04                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001dc06                SATA::open(int, int, void*)
                0x00000000c001dcb0                SATA::SATA()
                0x00000000c001dcb0                SATA::SATA()
                0x00000000c001dcde                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001df30                SATA::read(unsigned long long, int, void*)
                0x00000000c001e180                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e3df        0x1 
 .text          0x00000000c001e3e0      0x5d8 hw/diskphys/satapi.32
                0x00000000c001e3e0                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e3e6                SATAPI::close(int, int, void*)
                0x00000000c001e40a                SATAPI::SATAPI()
                0x00000000c001e40a                SATAPI::SATAPI()
                0x00000000c001e438                SATAPI::diskRemoved()
                0x00000000c001e43a                SATAPI::diskInserted()
                0x00000000c001e456                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e73c                SATAPI::eject()
                0x00000000c001e778                SATAPI::detectMedia()
                0x00000000c001e7ce                SATAPI::open(int, int, void*)
                0x00000000c001e8ce                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e9b8      0x45b hw/intctrl/apic.32
                0x00000000c001e9b8                IOAPIC::close(int, int, void*)
                0x00000000c001e9be                apicGetBase()
                0x00000000c001ea04                IOAPIC::IOAPIC()
                0x00000000c001ea04                IOAPIC::IOAPIC()
                0x00000000c001ea2c                apicOpen()
                0x00000000c001eba8                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001ebda                IOAPIC::read(int)
                0x00000000c001ec02                IOAPIC::open(int, int, void*)
                0x00000000c001ece8                IOAPIC::write(int, int)
                0x00000000c001ed14                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ee13        0x1 
 .text          0x00000000c001ee14       0xf0 hw/timer/apictimer.32
                0x00000000c001ee14                APICTimer::close(int, int, void*)
                0x00000000c001ee1c                apicTimerHandler(regs*, void*)
                0x00000000c001ee44                APICTimer::open(int, int, void*)
                0x00000000c001eeb4                APICTimer::write(int)
                0x00000000c001eedc                APICTimer::APICTimer()
                0x00000000c001eedc                APICTimer::APICTimer()
 .text          0x00000000c001ef04      0x1ad hw/timer/pit.32
                0x00000000c001ef04                PIT::write(int)
                0x00000000c001ef88                pitHandler(regs*, void*)
                0x00000000c001efb0                PIT::open(int, int, void*)
                0x00000000c001f000                PIT::close(int, int, void*)
                0x00000000c001f030                PIT::PIT()
                0x00000000c001f030                PIT::PIT()
 *fill*         0x00000000c001f0b1        0xf 
 .text          0x00000000c001f0c0       0x83 arch/i386/avx.32
                0x00000000c001f0c0                avxDetect
                0x00000000c001f0ea                avxSave
                0x00000000c001f0fb                avxLoad
                0x00000000c001f10c                avxInit
                0x00000000c001f12e                avxClose
                0x00000000c001f12f                wouldSheSayYes
 *fill*         0x00000000c001f143        0xd 
 .text          0x00000000c001f150      0x2ec arch/i386/interrupt.32
                0x00000000c001f150                isr0
                0x00000000c001f160                isr1
                0x00000000c001f16a                isr2
                0x00000000c001f174                isr3
                0x00000000c001f17e                isr4
                0x00000000c001f188                isr5
                0x00000000c001f192                isr6
                0x00000000c001f19c                isr7
                0x00000000c001f1a6                isr8
                0x00000000c001f1ae                isr9
                0x00000000c001f1b8                isr10
                0x00000000c001f1c0                isr11
                0x00000000c001f1c8                isr12
                0x00000000c001f1d0                isr13
                0x00000000c001f1ea                isr14
                0x00000000c001f1f2                isr15
                0x00000000c001f1fc                isr16
                0x00000000c001f206                isr17
                0x00000000c001f210                isr18
                0x00000000c001f21a                irq3
                0x00000000c001f224                irq4
                0x00000000c001f22e                irq5
                0x00000000c001f238                irq6
                0x00000000c001f242                irq7
                0x00000000c001f24c                irq8
                0x00000000c001f256                irq9
                0x00000000c001f260                irq10
                0x00000000c001f26a                irq11
                0x00000000c001f274                irq12
                0x00000000c001f27e                irq13
                0x00000000c001f288                irq14
                0x00000000c001f292                irq15
                0x00000000c001f29c                irq1
                0x00000000c001f2a3                irq2
                0x00000000c001f2aa                isr96
                0x00000000c001f2b1                irq0
                0x00000000c001f2b6                int_common_stub
                0x00000000c001f2e8                syscall_common_stub
                0x00000000c001f3ec                irq16
                0x00000000c001f3f6                irq17
                0x00000000c001f400                irq18
                0x00000000c001f40a                irq19
                0x00000000c001f414                irq20
                0x00000000c001f41e                irq21
                0x00000000c001f428                irq22
                0x00000000c001f432                irq23
 *fill*         0x00000000c001f43c        0x4 
 .text          0x00000000c001f440       0x10 arch/i386/rdrand.32
                0x00000000c001f440                i386GetRDRAND
 .text          0x00000000c001f450       0x39 arch/i386/sse.32
                0x00000000c001f450                absolutelyNoChanceInHell
                0x00000000c001f450                sseDetect
                0x00000000c001f468                sseSave
                0x00000000c001f470                sseLoad
                0x00000000c001f478                sseInit
                0x00000000c001f488                sseClose
 *fill*         0x00000000c001f489        0x7 
 .text          0x00000000c001f490       0x49 arch/i386/x87.32
                0x00000000c001f496                x87Detect
                0x00000000c001f4b1                x87Save
                0x00000000c001f4b8                x87Load
                0x00000000c001f4bf                x87Init
                0x00000000c001f4d8                x87Close
 *fill*         0x00000000c001f4d9        0x3 
 .text          0x00000000c001f4dc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f501        0x0 crtn.32
 *fill*         0x00000000c001f501        0x3 
 .text          0x00000000c001f504      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f504                __divdi3
 *fill*         0x00000000c001f64f        0x1 
 .text          0x00000000c001f650      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f650                __moddi3
 *fill*         0x00000000c001f7ce        0x2 
 .text          0x00000000c001f7d0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f7d0                __udivdi3
 *fill*         0x00000000c001f8cf        0x1 
 .text          0x00000000c001f8d0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f8d0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f9f0        0x0
 .iplt          0x00000000c001f9f0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f9ea        0xf
 .init          0x00000000c001f9ea        0x3 crti.32
                0x00000000c001f9ea                _init
 .init          0x00000000c001f9ed        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f9f2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f9f7        0x2 crtn.32

.fini           0x00000000c001f9f9        0xa
 .fini          0x00000000c001f9f9        0x3 crti.32
                0x00000000c001f9f9                _fini
 .fini          0x00000000c001f9fc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001fa01        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001fa04       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001fa04       0x23 core/computer.32
                0x00000000c001fa04                Computer::~Computer()
                0x00000000c001fa04                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001fa28       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001fa28       0x2a core/computer.32
                0x00000000c001fa28                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001fa52       0x21
 .text._Z10idleCommonv
                0x00000000c001fa52       0x21 core/idle.32
                0x00000000c001fa52                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fa74        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fa74        0x2 core/unixfile.32
                0x00000000c001fa74                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001fa74                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fa76       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fa76       0x42 core/unixfile.32
                0x00000000c001fa76                LinkedList<UnixFile>::LinkedList()
                0x00000000c001fa76                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fab8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fab8       0xd3 core/unixfile.32
                0x00000000c001fab8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fb8c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fb8c        0x7 core/unixfile.32
                0x00000000c001fb8c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fb94       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fb94       0xa1 core/unixfile.32
                0x00000000c001fb94                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc36        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc36        0x8 core/unixfile.32
                0x00000000c001fc36                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc3e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc3e       0x1a hal/device.32
                0x00000000c001fc3e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fc3e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fc58       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fc58       0x2a hal/device.32
                0x00000000c001fc58                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fc82       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fc82       0xdc hal/device.32
                0x00000000c001fc82                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fd5e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fd5e       0x42 hal/device.32
                0x00000000c001fd5e                LinkedList<Device>::LinkedList()
                0x00000000c001fd5e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fda0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fda0       0x1c hal/timer.32
                0x00000000c001fda0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fdbc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fdbc        0x7 hal/timer.32
                0x00000000c001fdbc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fdc4       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fdc4       0xbc hal/timer.32
                0x00000000c001fdc4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fe80       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fe80       0xda hal/timer.32
                0x00000000c001fe80                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ff5c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ff5c       0x23 hw/acpi.32
                0x00000000c001ff5c                ACPI::~ACPI()
                0x00000000c001ff5c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ff80       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ff80       0x2a hw/acpi.32
                0x00000000c001ff80                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ffac        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ffac        0x2 hw/acpi.32
                0x00000000c001ffac                LinkedList<Device>::~LinkedList()
                0x00000000c001ffac                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ffb0       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ffb0       0x1c hw/acpi.32
                0x00000000c001ffb0                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ffcc        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ffcc        0x7 hw/acpi.32
                0x00000000c001ffcc                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ffd4       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ffd4       0xb8 hw/acpi.32
                0x00000000c001ffd4                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c002008c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002008c       0x23 hw/cpu.32
                0x00000000c002008c                CPU::~CPU()
                0x00000000c002008c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00200b0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00200b0       0x2a hw/cpu.32
                0x00000000c00200b0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00200dc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00200dc        0x8 sys/kill.32
                0x00000000c00200dc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00200e4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00200e4        0x2 thr/prcssthr.32
                0x00000000c00200e4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00200e4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00200e8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00200e8       0x49 thr/prcssthr.32
                0x00000000c00200e8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00200e8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020134       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020134       0x42 thr/prcssthr.32
                0x00000000c0020134                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020134                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c0020176       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020176       0x23 hw/bus/pci.32
                0x00000000c0020176                PCI::~PCI()
                0x00000000c0020176                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002019a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002019a       0x2a hw/bus/pci.32
                0x00000000c002019a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00201c4       0x23
 .text._ZN3IDED2Ev
                0x00000000c00201c4       0x23 hw/diskctrl/ide.32
                0x00000000c00201c4                IDE::~IDE()
                0x00000000c00201c4                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00201e8       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00201e8       0x2a hw/diskctrl/ide.32
                0x00000000c00201e8                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020212       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020212       0x23 hw/diskctrl/satabus.32
                0x00000000c0020212                SATABus::~SATABus()
                0x00000000c0020212                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020236       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020236       0x2a hw/diskctrl/satabus.32
                0x00000000c0020236                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020260       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020260       0x23 hw/diskphys/ata.32
                0x00000000c0020260                ATA::~ATA()
                0x00000000c0020260                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020284       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020284       0x2a hw/diskphys/ata.32
                0x00000000c0020284                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00202ae       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00202ae       0x23 hw/diskphys/atapi.32
                0x00000000c00202ae                ATAPI::~ATAPI()
                0x00000000c00202ae                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00202d2       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00202d2       0x2a hw/diskphys/atapi.32
                0x00000000c00202d2                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00202fc       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00202fc       0x23 hw/diskphys/sata.32
                0x00000000c00202fc                SATA::~SATA()
                0x00000000c00202fc                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020320       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020320       0x2a hw/diskphys/sata.32
                0x00000000c0020320                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002034a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002034a       0x23 hw/diskphys/satapi.32
                0x00000000c002034a                SATAPI::~SATAPI()
                0x00000000c002034a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002036e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002036e       0x2a hw/diskphys/satapi.32
                0x00000000c002036e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020398       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020398       0x23 hw/intctrl/apic.32
                0x00000000c0020398                IOAPIC::~IOAPIC()
                0x00000000c0020398                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00203bc       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00203bc       0x2a hw/intctrl/apic.32
                0x00000000c00203bc                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00203e8       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00203e8       0x23 hw/timer/apictimer.32
                0x00000000c00203e8                APICTimer::~APICTimer()
                0x00000000c00203e8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002040c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002040c       0x2a hw/timer/apictimer.32
                0x00000000c002040c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020438       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020438       0x23 hw/timer/pit.32
                0x00000000c0020438                PIT::~PIT()
                0x00000000c0020438                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002045c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002045c       0x2a hw/timer/pit.32
                0x00000000c002045c                PIT::~PIT()

.rodata         0x00000000c0020486     0x32be
                0x00000000c0020486                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020486        0x2 
 .ctors         0x00000000c0020488        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c002048c        0x4 core/unixfile.32
 .ctors         0x00000000c0020490        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020494        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020498                end_ctors = .
                0x00000000c0020498                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020498        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002049c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002049c                __DTOR_END__
                0x00000000c00204a0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00204a0        0x0 
 .rodata        0x00000000c00204a0      0x101 acpica/utclib.32
                0x00000000c00204a0                AcpiGbl_Ctypes
 *fill*         0x00000000c00205a1        0x3 
 .rodata        0x00000000c00205a4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c00205bc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020606       0x1a 
 .rodata        0x00000000c0020620       0xed fs/fat/ff.32
 *fill*         0x00000000c002070d       0x13 
 .rodata        0x00000000c0020720      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020b20       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020b8f      0x13f core/computer.32
 *fill*         0x00000000c0020cce        0x2 
 .rodata.str1.4
                0x00000000c0020cd0       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020d38       0x2c core/computer.32
                0x00000000c0020d38                vtable for Computer
 .rodata.str1.4
                0x00000000c0020d64       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020d94        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020da0       0x17 core/main.32
 *fill*         0x00000000c0020db7        0x1 
 .rodata.str1.4
                0x00000000c0020db8       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020e5d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020eb5       0x39 core/pipe.32
 *fill*         0x00000000c0020eee        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020ef0       0x1c core/pipe.32
                0x00000000c0020ef0                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020f0c       0x2b core/terminal.32
 *fill*         0x00000000c0020f37        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020f38       0x1c core/terminal.32
                0x00000000c0020f38                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020f54       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020f76       0x15 core/unixfile.32
 *fill*         0x00000000c0020f8b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020f8c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020fd7        0x8 core/unixfile.32
 *fill*         0x00000000c0020fdf        0x1 
 .rodata.str1.4
                0x00000000c0020fe0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0021000       0x1c core/unixfile.32
                0x00000000c0021000                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c002101c       0x1c core/unixfile.32
                0x00000000c002101c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0021038      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00212cc      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00213f2       0x33 coreobjs/c++.32
 *fill*         0x00000000c0021425        0x3 
 .rodata        0x00000000c0021428      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021578      0x169 dbg/usban.32
 *fill*         0x00000000c00216e1        0x3 
 .rodata.str1.4
                0x00000000c00216e4      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002181b      0x19b fs/symlink.32
 .rodata.str1.1
                0x00000000c00219b6       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c00219f7        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c00219f8       0x6c fs/vfs.32
                0x00000000c00219f8                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021a64       0x1c fs/vfs.32
                0x00000000c0021a64                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021a80       0x1c fs/vfs.32
                0x00000000c0021a80                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021a9c       0x2c hal/bus.32
                0x00000000c0021a9c                vtable for Bus
 .rodata.str1.1
                0x00000000c0021ac8       0x1e hal/clock.32
 *fill*         0x00000000c0021ae6        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021ae8       0x3c hal/clock.32
                0x00000000c0021ae8                vtable for Clock
 *fill*         0x00000000c0021b24       0x1c 
 .rodata        0x00000000c0021b40       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021b70       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021bc8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021bc8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021bc8       0x2c hal/device.32
                0x00000000c0021bc8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021bf4       0x2c hal/device.32
                0x00000000c0021bf4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021c20       0x2c hal/diskctrl.32
                0x00000000c0021c20                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021c4c       0x38 hal/diskphys.32
                0x00000000c0021c4c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021c84       0x3e hal/intctrl.32
 *fill*         0x00000000c0021cc2        0x2 
 .rodata.str1.4
                0x00000000c0021cc4       0x5d hal/intctrl.32
 .rodata        0x00000000c0021d21       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021d74       0x34 hal/keybrd.32
                0x00000000c0021d74                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021da8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021dec       0x2c hal/logidisk.32
                0x00000000c0021dec                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021e18       0x2c hal/mouse.32
                0x00000000c0021e18                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021e44       0x34 hal/nic.32
                0x00000000c0021e44                vtable for NIC
 .rodata.str1.1
                0x00000000c0021e78        0xb hal/partition.32
 *fill*         0x00000000c0021e83        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021e84       0x44 hal/serial.32
                0x00000000c0021e84                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021ec8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021ec8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021ec8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021ec8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021ec8       0x30 hal/timer.32
                0x00000000c0021ec8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021ef8       0x10 hal/vcache.32
                0x00000000c0021ef8                vtable for VCache
 .rodata.str1.1
                0x00000000c0021f08       0x93 hal/video.32
 *fill*         0x00000000c0021f9b        0x1 
 .rodata._ZTV5Video
                0x00000000c0021f9c       0x4c hal/video.32
                0x00000000c0021f9c                vtable for Video
 .rodata.str1.1
                0x00000000c0021fe8      0x1cc hw/acpi.32
                                        0x1e6 (size before relaxing)
 .rodata.str1.4
                0x00000000c00221b4       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c002224f       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c002224f        0x8 hw/acpi.32
 *fill*         0x00000000c002224f        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0022250       0x2c hw/acpi.32
                0x00000000c0022250                vtable for ACPI
 .rodata.str1.1
                0x00000000c002227c      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c00223f7        0x1 
 .rodata._ZTV3CPU
                0x00000000c00223f8       0x2c hw/cpu.32
                0x00000000c00223f8                vtable for CPU
 .rodata.str1.1
                0x00000000c0022424       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022464       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00224a0       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0022531       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c00225fa       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022642       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c002266d       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c00226e3       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022728        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0022732       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0022753       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c00227e9       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c002283d       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022869      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022a35       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022a8c      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022b9c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022b9c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022b9c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022b9c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022b9c       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022c5e        0x2 
 .rodata        0x00000000c0022c60       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022c90      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022e2f        0x1 
 .rodata.str1.4
                0x00000000c0022e30       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022ea3       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022eb8       0x3c arch/i386/rtc.32
                0x00000000c0022eb8                vtable for RTC
 .rodata.str1.1
                0x00000000c0022ef4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022f35        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022f38       0x6c fs/fat/vfslink.32
                0x00000000c0022f38                vtable for FAT
 .rodata.str1.1
                0x00000000c0022fa4       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022fa4      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00230dc       0x6c fs/iso9660/vfslink.32
                0x00000000c00230dc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0023148       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c002318c       0x34 hal/sound/sndcard.32
                0x00000000c002318c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00231c0       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00231ff       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023237       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00232d8       0x2c hw/bus/pci.32
                0x00000000c00232d8                vtable for PCI
 .rodata.str1.1
                0x00000000c0023304       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c002338b        0x1 
 .rodata._ZTV3IDE
                0x00000000c002338c       0x2c hw/diskctrl/ide.32
                0x00000000c002338c                vtable for IDE
 .rodata.str1.4
                0x00000000c00233b8       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00233dc       0x2c hw/diskctrl/satabus.32
                0x00000000c00233dc                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023408       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c002341a        0x2 
 .rodata._ZTV3ATA
                0x00000000c002341c       0x38 hw/diskphys/ata.32
                0x00000000c002341c                vtable for ATA
 .rodata.str1.1
                0x00000000c0023454        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0023461        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0023464       0x38 hw/diskphys/atapi.32
                0x00000000c0023464                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002349c       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023518       0x38 hw/diskphys/sata.32
                0x00000000c0023518                vtable for SATA
 .rodata.str1.1
                0x00000000c0023550       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c002363a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c002363c       0x38 hw/diskphys/satapi.32
                0x00000000c002363c                vtable for SATAPI
 .rodata        0x00000000c0023674        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c002367c       0x2c hw/intctrl/apic.32
                0x00000000c002367c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00236a8       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00236c3        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00236c4       0x30 hw/timer/apictimer.32
                0x00000000c00236c4                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00236f4       0x1d hw/timer/pit.32
 *fill*         0x00000000c0023711        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023714       0x30 hw/timer/pit.32
                0x00000000c0023714                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023744      0xbbd
 *(.data)
 .data          0x00000000c0023744        0x0 crti.32
 .data          0x00000000c0023744        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023744                __dso_handle
 .data          0x00000000c0023748        0x0 acpica/utclib.32
 .data          0x00000000c0023748        0x0 core/malloc.32
 .data          0x00000000c0023748        0x0 libk/ctype.32
 .data          0x00000000c0023748        0x0 libk/string.32
 .data          0x00000000c0023748        0x0 fs/fat/diskio.32
 .data          0x00000000c0023748        0x0 fs/fat/ff.32
 .data          0x00000000c0023748        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023748        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023748        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023748        0x0 core/computer.32
 .data          0x00000000c0023748        0x0 core/gdt.32
 .data          0x00000000c0023748        0x0 core/idle.32
 .data          0x00000000c0023748        0x0 core/idt.32
 .data          0x00000000c0023748        0x4 core/kheap.32
 .data          0x00000000c002374c        0x0 core/main.32
 .data          0x00000000c002374c        0x4 core/physmgr.32
                0x00000000c002374c                Phys::bitmap
 .data          0x00000000c0023750        0x0 core/pipe.32
 *fill*         0x00000000c0023750       0x10 
 .data          0x00000000c0023760       0x60 core/terminal.32
                0x00000000c0023760                VgaText::hiddenOut
                0x00000000c0023780                ansiToVGAMappings
 .data          0x00000000c00237c0        0x0 core/tss.32
 .data          0x00000000c00237c0        0x4 core/unixfile.32
                0x00000000c00237c0                UnixFile::nextFd
 .data          0x00000000c00237c4       0x15 core/virtmgr.32
                0x00000000c00237c4                Virt::pageAllocPtr
                0x00000000c00237c8                Virt::bitmap
                0x00000000c00237cc                Virt::swapfileSectorsPerPage
                0x00000000c00237d0                Virt::swapfileLength
                0x00000000c00237d4                Virt::swapfileSector
                0x00000000c00237d8                Virt::swapfileDrive
 *fill*         0x00000000c00237d9        0x3 
 .data          0x00000000c00237dc        0x4 coreobjs/c++.32
                0x00000000c00237dc                __stack_chk_guard
 .data          0x00000000c00237e0        0x0 dbg/kconsole.32
 .data          0x00000000c00237e0       0x28 dbg/usban.32
                0x00000000c00237e0                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023808        0x0 fs/symlink.32
 .data          0x00000000c0023808        0x0 fs/vfs.32
 .data          0x00000000c0023808        0x0 hal/bus.32
 .data          0x00000000c0023808        0x0 hal/buzzer.32
 .data          0x00000000c0023808        0x0 hal/clock.32
 .data          0x00000000c0023808        0x0 hal/device.32
 .data          0x00000000c0023808        0x0 hal/diskctrl.32
 .data          0x00000000c0023808        0x0 hal/diskphys.32
 .data          0x00000000c0023808        0x0 hal/fpu.32
 .data          0x00000000c0023808        0x0 hal/intctrl.32
 .data          0x00000000c0023808        0x0 hal/keybrd.32
 .data          0x00000000c0023808        0x0 hal/logidisk.32
 .data          0x00000000c0023808        0x0 hal/mouse.32
 .data          0x00000000c0023808        0x0 hal/nic.32
 .data          0x00000000c0023808        0x0 hal/partition.32
 .data          0x00000000c0023808        0x0 hal/serial.32
 .data          0x00000000c0023808        0x0 hal/timer.32
 .data          0x00000000c0023808        0x0 hal/vcache.32
 .data          0x00000000c0023808        0x0 hal/video.32
 .data          0x00000000c0023808       0x10 hw/acpi.32
                0x00000000c0023808                legacyIRQRemaps
 .data          0x00000000c0023818        0x4 hw/cpu.32
                0x00000000c0023818                lastCode
 .data          0x00000000c002381c        0x0 krnl/atexit.32
 *fill*         0x00000000c002381c        0x4 
 .data          0x00000000c0023820      0x142 krnl/bootmsg.32
                0x00000000c0023820                KiSplashScreen
 .data          0x00000000c0023962        0x0 krnl/compat.32
 *fill*         0x00000000c0023962       0x1e 
 .data          0x00000000c0023980      0x400 krnl/crc32.32
                0x00000000c0023980                KiPolyLookupCRC32
 .data          0x00000000c0023d80       0x4d krnl/env.32
                0x00000000c0023d80                defaultSysEnv
 .data          0x00000000c0023dcd        0x0 krnl/inlines.32
 .data          0x00000000c0023dcd        0x0 krnl/panic.32
 .data          0x00000000c0023dcd        0x0 krnl/powctrl.32
 .data          0x00000000c0023dcd        0x0 krnl/random.32
 .data          0x00000000c0023dcd        0x0 krnl/resolve.32
 *fill*         0x00000000c0023dcd       0x13 
 .data          0x00000000c0023de0       0x4c krnl/signal.32
                0x00000000c0023de0                KiDefaultSignalHandlers
 *fill*         0x00000000c0023e2c       0x14 
 .data          0x00000000c0023e40       0xfc krnl/syscalls.32
                0x00000000c0023e40                systemCallHandlers
 .data          0x00000000c0023f3c        0x0 net/ethernet.32
 *fill*         0x00000000c0023f3c        0x4 
 .data          0x00000000c0023f40      0x100 reg/cm.32
                0x00000000c0023f40                CmComponents
 .data          0x00000000c0024040        0x0 reg/registry.32
 .data          0x00000000c0024040        0x0 sys/eject.32
 .data          0x00000000c0024040        0x0 sys/exit.32
 .data          0x00000000c0024040        0x0 sys/getcwd.32
 .data          0x00000000c0024040        0x0 sys/getpid.32
 .data          0x00000000c0024040        0x0 sys/getramdata.32
 .data          0x00000000c0024040        0x0 sys/getvgaptr.32
 .data          0x00000000c0024040        0x0 sys/kill.32
 .data          0x00000000c0024040        0x0 sys/loaddll.32
 .data          0x00000000c0024040        0x0 sys/read.32
 .data          0x00000000c0024040        0x0 sys/registersignal.32
 .data          0x00000000c0024040        0x0 sys/registry.32
 .data          0x00000000c0024040        0x0 sys/sbrk.32
 .data          0x00000000c0024040        0x0 sys/setcwd.32
 .data          0x00000000c0024040        0x0 sys/settime.32
 .data          0x00000000c0024040        0x0 sys/symlink.32
 .data          0x00000000c0024040        0x0 sys/timezone.32
 .data          0x00000000c0024040        0x0 sys/truncate.32
 .data          0x00000000c0024040        0x0 sys/write.32
 .data          0x00000000c0024040        0x0 sys/wsbe.32
 .data          0x00000000c0024040        0x0 sys/yield.32
 .data          0x00000000c0024040        0x0 thr/elf.32
 .data          0x00000000c0024040        0x4 thr/prcssthr.32
                0x00000000c0024040                Thr::nextPID
 .data          0x00000000c0024044        0x0 vm86/vm8086.32
 *fill*         0x00000000c0024044       0x1c 
 .data          0x00000000c0024060      0x2a0 arch/i386/hal.32
                0x00000000c0024060                exceptionNames
 .data          0x00000000c0024300        0x0 arch/i386/pic.32
 .data          0x00000000c0024300        0x0 arch/i386/rtc.32
 .data          0x00000000c0024300        0x0 arch/i386/vga.32
 .data          0x00000000c0024300        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024300        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024300        0x1 fs/iso9660/vfslink.32
                0x00000000c0024300                recentDriveletter
 .data          0x00000000c0024301        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024301        0x0 hal/sound/sndport.32
 .data          0x00000000c0024301        0x0 hw/bus/isa.32
 .data          0x00000000c0024301        0x0 hw/bus/pci.32
 .data          0x00000000c0024301        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024301        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024301        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024301        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024301        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024301        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024301        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024301        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024301        0x0 hw/timer/pit.32
 .data          0x00000000c0024301        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024301        0x0 crtn.32
 .data          0x00000000c0024301        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024301        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024301        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024301        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024304        0x0
 .got           0x00000000c0024304        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024304        0x0
 .got.plt       0x00000000c0024304        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024304        0x0
 .igot.plt      0x00000000c0024304        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024304        0x0
 .tm_clone_table
                0x00000000c0024304        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024304        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024301      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024301        0x3 
 .eh_frame      0x00000000c0024304        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024304        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024304       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002435c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002439c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024408       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
