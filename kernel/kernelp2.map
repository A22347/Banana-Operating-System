Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21d2e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x25b dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006ef0                Dbg::logs(char*)
                0x00000000c0006f0f                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f2d                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f4e                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00070ba        0x2 
 .text          0x00000000c00070bc      0x2d4 dbg/usban.32
                0x00000000c00070bc                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007128                __ubsan_handle_type_mismatch_v1
                0x00000000c0007204                __ubsan_handle_pointer_overflow
                0x00000000c0007230                __ubsan_handle_out_of_bounds
                0x00000000c000725c                __ubsan_handle_add_overflow
                0x00000000c0007288                __ubsan_handle_load_invalid_value
                0x00000000c00072b4                __ubsan_handle_divrem_overflow
                0x00000000c00072e0                __ubsan_handle_mul_overflow
                0x00000000c000730c                __ubsan_handle_sub_overflow
                0x00000000c0007338                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007364                __ubsan_handle_negate_overflow
 .text          0x00000000c0007390      0x812 fs/symlink.32
                0x00000000c00074df                KiDeinitialiseSymlinks(void*)
                0x00000000c0007570                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075f3                KeInitialiseSymlinks()
                0x00000000c0007755                KiIsSymlinkRegistered(char const*)
                0x00000000c00078bf                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a66                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007ba2      0xd9c fs/vfs.32
                0x00000000c0007ba2                File::read(unsigned long long, void*, int*)
                0x00000000c0007bfa                File::write(unsigned long long, void*, int*)
                0x00000000c0007c52                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007caa                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cd8                File::isAtty()
                0x00000000c0007cdc                Directory::isAtty()
                0x00000000c0007ce0                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007ce6                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cec                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cf2                File::~File()
                0x00000000c0007cf2                File::~File()
                0x00000000c0007d16                File::~File()
                0x00000000c0007d40                Directory::~Directory()
                0x00000000c0007d40                Directory::~Directory()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d8e                Filesystem::Filesystem()
                0x00000000c0007d8e                Filesystem::Filesystem()
                0x00000000c0007db2                Filesystem::~Filesystem()
                0x00000000c0007db2                Filesystem::~Filesystem()
                0x00000000c0007dc0                Filesystem::~Filesystem()
                0x00000000c0007de4                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e0e                Fs::initVFS()
                0x00000000c0007e38                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c0008066                File::File(char const*, Process*, bool)
                0x00000000c0008066                File::File(char const*, Process*, bool)
                0x00000000c0008164                File::File(char const*, Process*)
                0x00000000c0008164                File::File(char const*, Process*)
                0x00000000c0008182                File::open(FileOpenMode)
                0x00000000c00081e0                File::close()
                0x00000000c0008240                File::seek(unsigned long long)
                0x00000000c0008296                File::truncate(unsigned long long)
                0x00000000c00082ec                File::tell(unsigned long long*)
                0x00000000c000833c                File::rewind()
                0x00000000c0008350                File::unlink()
                0x00000000c000839c                File::rename(char const*)
                0x00000000c00083ea                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0008446                File::exists()
                0x00000000c0008484                File::stat(unsigned long long*, bool*)
                0x00000000c00084e5                Fs::setcwd(Process*, char*)
                0x00000000c0008644                Directory::Directory(char const*, Process*)
                0x00000000c0008644                Directory::Directory(char const*, Process*)
                0x00000000c000870c                Directory::open()
                0x00000000c0008768                Directory::close()
                0x00000000c00087c8                Directory::unlink()
                0x00000000c0008814                Directory::rename(char const*)
                0x00000000c0008862                Directory::exists()
                0x00000000c00088a0                Directory::read(dirent*)
                0x00000000c00088ec                Directory::create()
                0x00000000c0008938                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000893e        0x2 
 .text          0x00000000c0008940       0x86 hal/bus.32
                0x00000000c0008940                Bus::Bus(char const*)
                0x00000000c0008940                Bus::Bus(char const*)
                0x00000000c0008978                Bus::~Bus()
                0x00000000c0008978                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
 .text          0x00000000c00089c6       0x9b hal/buzzer.32
                0x00000000c00089c6                KeBeepThread(void*)
                0x00000000c0008a07                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a61        0x1 
 .text          0x00000000c0008a62      0xe4e hal/clock.32
                0x00000000c0008a62                KeLoadTimezoneStrings()
                0x00000000c0008df1                KeGetTimezoneStringFromID(int)
                0x00000000c0008e8e                KeUpdateTimezone(char const*)
                0x00000000c0008f88                KeSetTimezone(char const*)
                0x00000000c0008fe5                KeSetTimezone(int)
                0x00000000c0009018                KeLoadTimezone()
                0x00000000c0009092                Clock::Clock(char const*)
                0x00000000c0009092                Clock::Clock(char const*)
                0x00000000c00090c8                Clock::~Clock()
                0x00000000c00090c8                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009116                Clock::timeInSecondsLocal()
                0x00000000c0009180                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0009200                KeDatetimeToSeconds(datetime_t)
                0x00000000c000952e                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c00095f0                KeSecondsToDatetime(unsigned long long)
                0x00000000c0009884                Clock::timeInDatetimeLocal()
 .text          0x00000000c00098b0      0x47a hal/device.32
                0x00000000c00098b0                Device::hibernate()
                0x00000000c00098b2                Device::wake()
                0x00000000c00098b4                Device::detect()
                0x00000000c00098b6                Device::disableLegacy()
                0x00000000c00098b8                Device::powerSaving(PowerSavingLevel)
                0x00000000c00098ba                DriverlessDevice::close(int, int, void*)
                0x00000000c00098be                DriverlessDevice::detect()
                0x00000000c00098c0                DriverlessDevice::open(int, int, void*)
                0x00000000c00098d4                Device::~Device()
                0x00000000c00098d4                Device::~Device()
                0x00000000c00098e2                Device::~Device()
                0x00000000c000990a                Device::findAndLoadDriver()
                0x00000000c0009918                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000993e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000997e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00099a8                Device::getParent()
                0x00000000c00099b4                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00099d2                Device::addChild(Device*)
                0x00000000c0009a16                Device::removeAllChildren()
                0x00000000c0009a5c                Device::hibernateAll()
                0x00000000c0009a8c                Device::wakeAll()
                0x00000000c0009abc                Device::detectAll()
                0x00000000c0009aec                Device::disableLegacyAll()
                0x00000000c0009aee                Device::loadDriversForAll()
                0x00000000c0009af0                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009b26                Device::setName(char const*)
                0x00000000c0009b34                Device::Device(char const*)
                0x00000000c0009b34                Device::Device(char const*)
                0x00000000c0009c30                Device::getName()
                0x00000000c0009c3a                Device::closeAll()
                0x00000000c0009c86                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009c86                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009cbc                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d00                getDevicesOfType(DeviceType)
 *fill*         0x00000000c0009d2a        0x2 
 .text          0x00000000c0009d2c       0x86 hal/diskctrl.32
                0x00000000c0009d2c                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d2c                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d64                HardDiskController::~HardDiskController()
                0x00000000c0009d64                HardDiskController::~HardDiskController()
                0x00000000c0009d88                HardDiskController::~HardDiskController()
 .text          0x00000000c0009db2       0xe2 hal/diskphys.32
                0x00000000c0009db2                PhysicalDisk::eject()
                0x00000000c0009db6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009db6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e1e                PhysicalDisk::startCache()
                0x00000000c0009e46                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e46                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009e94        0x0 hal/fpu.32
 .text          0x00000000c0009e94      0x874 hal/keybrd.32
                0x00000000c0009e94                startGUI(void*)
                0x00000000c0009ef9                startGUIVESA(void*)
                0x00000000c0009f5e                sendKeyToTerminal(unsigned char)
                0x00000000c000a034                sendKeyboardToken(KeyboardToken)
                0x00000000c000a4f0                clearInternalKeybuffer(VgaText*)
                0x00000000c000a525                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a67e                Keyboard::Keyboard(char const*)
                0x00000000c000a67e                Keyboard::Keyboard(char const*)
                0x00000000c000a6ba                Keyboard::~Keyboard()
                0x00000000c000a6ba                Keyboard::~Keyboard()
                0x00000000c000a6de                Keyboard::~Keyboard()
 .text          0x00000000c000a708      0x3f8 hal/logidisk.32
                0x00000000c000a708                LogicalDisk::close(int, int, void*)
                0x00000000c000a70c                LogicalDisk::~LogicalDisk()
                0x00000000c000a70c                LogicalDisk::~LogicalDisk()
                0x00000000c000a730                LogicalDisk::~LogicalDisk()
                0x00000000c000a75a                LogicalDisk::open(int, int, void*)
                0x00000000c000a76e                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a7a6                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a7ec                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a7ec                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a8ac                LogicalDisk::assignDriveLetter()
                0x00000000c000a966                LogicalDisk::mount()
                0x00000000c000a9ae                LogicalDisk::unmount()
                0x00000000c000a9be                LogicalDisk::eject()
                0x00000000c000a9d2                LogicalDisk::unassignDriveLetter()
                0x00000000c000aa28                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aa94                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab00       0x86 hal/mouse.32
                0x00000000c000ab00                Mouse::Mouse(char const*)
                0x00000000c000ab00                Mouse::Mouse(char const*)
                0x00000000c000ab38                Mouse::~Mouse()
                0x00000000c000ab38                Mouse::~Mouse()
                0x00000000c000ab5c                Mouse::~Mouse()
 .text          0x00000000c000ab86       0x90 hal/nic.32
                0x00000000c000ab86                NIC::getMAC()
                0x00000000c000ab8c                NIC::write(int, unsigned char*, int*)
                0x00000000c000ab92                NIC::NIC(char const*)
                0x00000000c000ab92                NIC::NIC(char const*)
                0x00000000c000abc8                NIC::~NIC()
                0x00000000c000abc8                NIC::~NIC()
                0x00000000c000abec                NIC::~NIC()
 .text          0x00000000c000ac16      0x33b hal/partition.32
                0x00000000c000ac16                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000acbe                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af51        0x3 
 .text          0x00000000c000af54       0x86 hal/serial.32
                0x00000000c000af54                Serial::Serial(char const*)
                0x00000000c000af54                Serial::Serial(char const*)
                0x00000000c000af8c                Serial::~Serial()
                0x00000000c000af8c                Serial::~Serial()
                0x00000000c000afb0                Serial::~Serial()
 *fill*         0x00000000c000afda        0x2 
 .text          0x00000000c000afdc      0x230 hal/timer.32
                0x00000000c000afdc                Timer::Timer(char const*)
                0x00000000c000afdc                Timer::Timer(char const*)
                0x00000000c000b014                Timer::~Timer()
                0x00000000c000b014                Timer::~Timer()
                0x00000000c000b038                Timer::~Timer()
                0x00000000c000b062                Timer::read()
                0x00000000c000b06d                setupTimer(int)
                0x00000000c000b0a8                timerHandler(unsigned int)
 .text          0x00000000c000b20c      0x60e hal/vcache.32
                0x00000000c000b20c                VCache::VCache(PhysicalDisk*)
                0x00000000c000b20c                VCache::VCache(PhysicalDisk*)
                0x00000000c000b37c                VCache::invalidateReadBuffer()
                0x00000000c000b38c                VCache::writeWriteBuffer()
                0x00000000c000b3d8                VCache::~VCache()
                0x00000000c000b3d8                VCache::~VCache()
                0x00000000c000b430                VCache::~VCache()
                0x00000000c000b458                VCache::write(unsigned long long, int, void*)
                0x00000000c000b626                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b81a      0x71d hal/video.32
                0x00000000c000b81a                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b866                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b8d6                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b966                Video::clearScreen(unsigned int)
                0x00000000c000b99a                Video::putpixel(int, int, unsigned int)
                0x00000000c000b9a8                Video::readPixelApprox(int, int)
                0x00000000c000b9bc                Video::Video(char const*)
                0x00000000c000b9bc                Video::Video(char const*)
                0x00000000c000b9f2                Video::~Video()
                0x00000000c000b9f2                Video::~Video()
                0x00000000c000ba16                Video::~Video()
                0x00000000c000ba40                Video::isMonochrome()
                0x00000000c000ba4c                Video::getWidth()
                0x00000000c000ba58                Video::getHeight()
                0x00000000c000ba64                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb20                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000bec6                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000bf37        0x1 
 .text          0x00000000c000bf38     0x10a2 hw/acpi.32
                0x00000000c000bf38                ACPI::close(int, int, void*)
                0x00000000c000bf40                loadACPITables(unsigned char*)
                0x00000000c000c1a0                findRSDT(unsigned char*)
                0x00000000c000c2ec                findDataTable(unsigned char*, char*)
                0x00000000c000c360                scanMADT()
                0x00000000c000c7f8                ACPI::ACPI()
                0x00000000c000c7f8                ACPI::ACPI()
                0x00000000c000c84c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c948                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca14                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca1c                ACPI::detectPCI()
                0x00000000c000cc28                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cc40                ACPI::open(int, int, void*)
 *fill*         0x00000000c000cfda        0x2 
 .text          0x00000000c000cfdc       0xea krnl/assert.32
                0x00000000c000cfdc                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d0c6       0xb6 krnl/atexit.32
                0x00000000c000d0c6                KeInitialiseAtexit()
                0x00000000c000d0e5                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d119                KeExecuteAtexit()
 .text          0x00000000c000d17c       0x9f krnl/bootmsg.32
                0x00000000c000d17c                KeDisplaySplashScreen()
                0x00000000c000d1ab                KeSetBootMessage(char const*)
 .text          0x00000000c000d21b       0x5f krnl/c++.32
                0x00000000c000d21b                __cxa_atexit
                0x00000000c000d21e                __cxa_finalize
                0x00000000c000d21f                __stack_chk_fail
                0x00000000c000d255                __cxa_pure_virtual
                0x00000000c000d266                operator new[](unsigned long)
                0x00000000c000d26b                operator delete(void*, unsigned long)
                0x00000000c000d270                operator delete[](void*)
                0x00000000c000d275                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d27a        0x2 
 .text          0x00000000c000d27c       0x44 krnl/cdefs.32
                0x00000000c000d27c                CUnlockScheduler
                0x00000000c000d294                CLockScheduler
                0x00000000c000d2a4                CPrintf
 .text          0x00000000c000d2c0      0xd51 krnl/cm.32
                0x00000000c000d2c0                CmOpen(char const*)
                0x00000000c000d3de                CmClose(Reghive_Tag*)
                0x00000000c000d3f4                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d430                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d4a7                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d4e6                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d518                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d554                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d57c                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d59d                CmExpand(Reghive_Tag*, int)
                0x00000000c000d618                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d69e                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d792                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d8ca                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d92b                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d95b                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000d992                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000d9bc                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000d9fc                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000daa0                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000dace                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dc6b                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000dcb8                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000dd32                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000dd85                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000de49                zStrtok(char*, char const*)
                0x00000000c000debb                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000df3c                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000dfdf                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000e011        0x3 
 .text          0x00000000c000e014       0x1d krnl/compat.32
                0x00000000c000e014                Krnl::handlePowerButton()
                0x00000000c000e024                Krnl::handleSleepButton()
 *fill*         0x00000000c000e031        0x1 
 .text          0x00000000c000e032      0x2c7 krnl/computer.32
                0x00000000c000e032                Computer::close(int, int, void*)
                0x00000000c000e038                KeFirstTask()
                0x00000000c000e15a                Computer::Computer()
                0x00000000c000e15a                Computer::Computer()
                0x00000000c000e19e                KePrepareShutdown()
                0x00000000c000e1be                KeShutdown()
                0x00000000c000e1e2                KeSleep()
                0x00000000c000e1ee                KeRestart()
                0x00000000c000e210                Computer::open(int, int, void*)
 .text          0x00000000c000e2f9       0x2b krnl/crc32.32
                0x00000000c000e2f9                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e324      0x5bf krnl/env.32
                0x00000000c000e324                EnvVarContainer::getEnv(char const*)
                0x00000000c000e362                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e424                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e426                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e64a                EnvVarContainer::__loadSystem()
                0x00000000c000e664                EnvVarContainer::__loadUser()
                0x00000000c000e666                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e666                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e688                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e688                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e6b8                KeGetEnv(Process*, char const*)
                0x00000000c000e71d                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e737                KeSetEnvUser(char const*, char const*)
                0x00000000c000e756                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e769                KeDeleteEnvSystem(char const*)
                0x00000000c000e76a                KeDeleteEnvUser(char const*)
                0x00000000c000e76b                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e76c                KeNewProcessEnv(Process*)
                0x00000000c000e78e                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e7da                KeLoadSystemEnv()
                0x00000000c000e808                KeLoadUserEnv()
                0x00000000c000e82e                KeFlushEnv()
                0x00000000c000e82f                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e84f                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e8e3        0x1 
 .text          0x00000000c000e8e4      0x371 krnl/fault.32
                0x00000000c000e8e4                KeSetupInterrupts()
                0x00000000c000e95c                int_handler
                0x00000000c000ea8c                KeDisplayProgramFault(char const*)
                0x00000000c000eadc                KeGeneralProtectionFault(void*, void*)
                0x00000000c000eb40                KePageFault(void*, void*)
                0x00000000c000eba4                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000ebb4                KeOtherFault(void*, void*)
                0x00000000c000ebe8                KeOpcodeFault(void*, void*)
                0x00000000c000ec3c                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000ec55        0x1 
 .text          0x00000000c000ec56      0x1db krnl/gdt.32
                0x00000000c000ec56                GDTEntry::setBase(unsigned int)
                0x00000000c000ec72                GDTEntry::setLimit(unsigned int)
                0x00000000c000ec90                GDT::GDT()
                0x00000000c000ec90                GDT::GDT()
                0x00000000c000eca6                GDT::addEntry(GDTEntry)
                0x00000000c000ecc8                GDT::getNumberOfEntries()
                0x00000000c000ecd0                GDT::flush()
                0x00000000c000ecf2                GDT::setup()
 .text          0x00000000c000ee31       0x20 krnl/idle.32
                0x00000000c000ee31                idleFunction(void*)
 *fill*         0x00000000c000ee51        0x3 
 .text          0x00000000c000ee54      0x46c krnl/idt.32
                0x00000000c000ee54                IDTEntry::IDTEntry(bool)
                0x00000000c000ee54                IDTEntry::IDTEntry(bool)
                0x00000000c000eece                IDTEntry::setOffset(unsigned int)
                0x00000000c000eee4                IDT::IDT()
                0x00000000c000eee4                IDT::IDT()
                0x00000000c000eee6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000eeee                IDT::addEntry(IDTEntry, int)
                0x00000000c000ef08                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000ef40                IDT::flush()
                0x00000000c000ef5a                IDT::setup()
 .text          0x00000000c000f2c0       0x9a krnl/inlines.32
                0x00000000c000f2c0                CPU::current()
                0x00000000c000f2cc                operator new(unsigned long)
                0x00000000c000f2d1                operator delete(void*)
                0x00000000c000f2d6                disableIRQs()
                0x00000000c000f2d8                enableIRQs()
                0x00000000c000f2da                lockScheduler()
                0x00000000c000f2e2                unlockScheduler()
                0x00000000c000f2f4                lockStuff()
                0x00000000c000f302                unlockStuff()
                0x00000000c000f33f                Virt::getAKernelVAS()
                0x00000000c000f345                __not_memcpy
 .text          0x00000000c000f35a      0x2ae krnl/intlformat.32
                0x00000000c000f35a                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f53c                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f55e                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f580                KeSetLocale(klocale_t)
                0x00000000c000f596                KeInitialiseLocale()
                0x00000000c000f604                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f605                KeFormatCurrency(char*, int, double)
                0x00000000c000f606                KeFormatNumber(char*, long long, long long)
                0x00000000c000f607                KeFormatNumber(char*, double)
 .text          0x00000000c000f608      0x356 krnl/intops.32
                0x00000000c000f608                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f724                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f864                KeGetDigitsInNumber(long long)
                0x00000000c000f8d0                KeItoa(unsigned long long, char*)
                0x00000000c000f900                KeItoa(long long, char*)
                0x00000000c000f930                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f95e      0x204 krnl/kheap.32
                0x00000000c000f95e                sbrk
                0x00000000c000f9f2                sbrk_thunk
                0x00000000c000fa28                mmap
                0x00000000c000fa86                munmap
                0x00000000c000fa9b                liballoc_lock()
                0x00000000c000faa9                liballoc_unlock()
                0x00000000c000fac1                liballoc_alloc(int)
                0x00000000c000fad9                liballoc_free(void*, int)
                0x00000000c000faf4                realloc
                0x00000000c000fb08                malloc
                0x00000000c000fb18                free
                0x00000000c000fb28                rfree
                0x00000000c000fb38                calloc
 *fill*         0x00000000c000fb62        0x2 
 .text          0x00000000c000fb64      0x1d3 krnl/mailbox.32
                0x00000000c000fb64                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fbc4                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fc24                KeMailboxCreate()
                0x00000000c000fc58                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fcbc                KeMailboxGet(Mailbox*, void**)
                0x00000000c000fd20                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fd37       0xfd krnl/main.32
                0x00000000c000fd37                KeEntryPoint
 .text          0x00000000c000fe34       0x1a krnl/mutex.32
                0x00000000c000fe34                Mutex::Mutex()
                0x00000000c000fe34                Mutex::Mutex()
 .text          0x00000000c000fe4e        0xc krnl/panic.32
                0x00000000c000fe4e                KePanic(char const*)
 .text          0x00000000c000fe5a      0x666 krnl/physmgr.32
                0x00000000c000fe5a                Phys::allocateDMA(unsigned long)
                0x00000000c000ff48                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000ff83                Phys::setPageState(unsigned long, bool)
                0x00000000c000ffc3                Phys::getPageState(unsigned long)
                0x00000000c000ffdf                Phys::freePage(unsigned long)
                0x00000000c0010048                Phys::allocatePage()
                0x00000000c0010126                Phys::allocateContiguousPages(int)
                0x00000000c00101a1                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c00101d9                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c00104c0      0x271 krnl/pipe.32
                0x00000000c00104c0                Pipe::isAtty()
                0x00000000c00104c4                Pipe::~Pipe()
                0x00000000c00104c4                Pipe::~Pipe()
                0x00000000c00104e8                Pipe::~Pipe()
                0x00000000c0010510                Pipe::write(unsigned long long, void*, int*)
                0x00000000c00105d4                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00106ca                Pipe::Pipe(int)
                0x00000000c00106ca                Pipe::Pipe(int)
 .text          0x00000000c0010731      0x10c krnl/powctrl.32
                0x00000000c0010731                KePowerThread(void*)
                0x00000000c0010763                KeChangePowerSettings(PowerSettings)
                0x00000000c0010779                KeUserIOReceived()
                0x00000000c0010784                KeHandlePowerButton()
                0x00000000c001079c                KeHandleSleepButton()
                0x00000000c00107b4                KeSetupPowerManager()
 .text          0x00000000c001083d       0x9b krnl/random.32
                0x00000000c001083d                KeRand()
                0x00000000c001087d                KeSeedRand(unsigned int)
                0x00000000c00108a6                KeInitRand()
 .text          0x00000000c00108d8      0x1bc krnl/resolve.32
                0x00000000c00108d8                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010a94      0x415 krnl/semaphore.32
                0x00000000c0010a94                Semaphore::Semaphore(int)
                0x00000000c0010a94                Semaphore::Semaphore(int)
                0x00000000c0010ac4                Semaphore::tryAcquire()
                0x00000000c0010b98                Semaphore::assertLocked(char const*)
                0x00000000c0010c24                Semaphore::acquire(int)
                0x00000000c0010ddc                Semaphore::acquire()
                0x00000000c0010df8                Semaphore::release()
 .text          0x00000000c0010ea9      0x3a8 krnl/signal.32
                0x00000000c0010ea9                KiSigKill(int)
                0x00000000c0010ebd                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010ebe                KiDefaultSignalHandlerPause(int)
                0x00000000c0010eea                KiDefaultSignalHandlerResume(int)
                0x00000000c0010f16                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010f1b                KeInitSignals()
                0x00000000c0010f8d                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010fc3                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011044                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011173                KiCheckSignalZ
                0x00000000c00111c4                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00111ff                KiFinishSignalZ
 .text          0x00000000c0011251      0xe31 krnl/syscalls.32
                0x00000000c0011251                SysSeekDir(regs*)
                0x00000000c0011256                SysTellDir(regs*)
                0x00000000c001125b                SysVerify(regs*)
                0x00000000c0011265                SysGetArgc(regs*)
                0x00000000c0011279                SysTTYName(regs*)
                0x00000000c0011281                SysFormatDisk(regs*)
                0x00000000c00112e8                SysSetDiskVolumeLabel(regs*)
                0x00000000c001133c                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011395                SysRealpath(regs*)
                0x00000000c00113e3                SysReadDir(regs*)
                0x00000000c0011463                SysIsATTY(regs*)
                0x00000000c00114bd                SysSeek(regs*)
                0x00000000c001151b                SysTell(regs*)
                0x00000000c0011590                SysSize(regs*)
                0x00000000c001160a                SysSizeFromFilename(regs*)
                0x00000000c001173d                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011870                SysClose(regs*)
                0x00000000c00118d5                SysOpenDir(regs*)
                0x00000000c0011952                SysMakeDir(regs*)
                0x00000000c00119c0                SysCloseDir(regs*)
                0x00000000c0011a14                SysWait(regs*)
                0x00000000c0011a35                SysNotImpl(regs*)
                0x00000000c0011a50                SysPanic(regs*)
                0x00000000c0011a6b                SysRmdir(regs*)
                0x00000000c0011ac9                SysUnlink(regs*)
                0x00000000c0011b27                SysGetArgv(regs*)
                0x00000000c0011b74                SysUSleep(regs*)
                0x00000000c0011b9e                SysSpawn(regs*)
                0x00000000c0011c0f                SysGetEnv(regs*)
                0x00000000c0011cc4                SysSetFatAttrib(regs*)
                0x00000000c0011d2d                SysShutdown(regs*)
                0x00000000c0011d8a                SysPipe(regs*)
                0x00000000c0011dcf                SysGetUnixTime(regs*)
                0x00000000c0011de3                string_ends_with(char const*, char const*)
                0x00000000c0011e2e                SysOpen(regs*)
                0x00000000c001202d                KeSystemCall(regs*, void*)
 .text          0x00000000c0012082      0xadd krnl/terminal.32
                0x00000000c0012082                VgaText::isAtty()
                0x00000000c0012086                VgaText::~VgaText()
                0x00000000c0012086                VgaText::~VgaText()
                0x00000000c00120aa                VgaText::~VgaText()
                0x00000000c00120d4                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00120f4                setTerminalScrollLock(bool)
                0x00000000c00120f5                doTerminalCycle()
                0x00000000c00120f6                addToTerminalCycle(VgaText*)
                0x00000000c00120f7                scrollTerminalScrollLock(int)
                0x00000000c00120f8                VgaText::updateTitle()
                0x00000000c00120fa                VgaText::load()
                0x00000000c00120fc                VgaText::updateCursor()
                0x00000000c0012112                VgaText::doANSI_SGR(int)
                0x00000000c0012186                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0012196                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00121a6                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00121c6                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00121d2                VgaText::setTitleColour(VgaColour)
                0x00000000c00121de                VgaText::setTitle(char*)
                0x00000000c00121e0                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00121f2                VgaText::scrollScreen()
                0x00000000c0012284                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0012294                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0012340                VgaText::getCursorX()
                0x00000000c0012348                VgaText::getCursorY()
                0x00000000c0012350                VgaText::setCursor(int, int)
                0x00000000c0012367                setActiveTerminal(VgaText*)
                0x00000000c00123b2                VgaText::clearScreen()
                0x00000000c0012400                VgaText::setCursorX(int)
                0x00000000c0012418                VgaText::setCursorY(int)
                0x00000000c0012430                VgaText::incrementCursor(bool)
                0x00000000c0012484                VgaText::decrementCursor(bool)
                0x00000000c00124a6                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0012576                VgaText::putchar(char)
                0x00000000c001265e                VgaText::putx(unsigned int)
                0x00000000c00126a4                VgaText::puts(char const*)
                0x00000000c00126ca                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0012716                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0012890                VgaText::VgaText(char const*)
                0x00000000c0012890                VgaText::VgaText(char const*)
                0x00000000c00129f0                VgaText::receiveKey(unsigned char)
                0x00000000c0012b5e                VgaText::doUpdate()
 *fill*         0x00000000c0012b5f        0x1 
 .text          0x00000000c0012b60      0x224 krnl/tss.32
                0x00000000c0012b60                TSS::TSS()
                0x00000000c0012b60                TSS::TSS()
                0x00000000c0012b70                TSS::setESP(unsigned long)
                0x00000000c0012b84                TSS::flush()
                0x00000000c0012ba4                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012d84      0x4dc krnl/unixfile.32
                0x00000000c0012d84                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012dda                ReservedFilename::isAtty()
                0x00000000c0012df6                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012e54                UnixFile::getFileDescriptor()
                0x00000000c0012e5c                UnixFile::UnixFile(int)
                0x00000000c0012e5c                UnixFile::UnixFile(int)
                0x00000000c0013010                ReservedFilename::ReservedFilename(int)
                0x00000000c0013010                ReservedFilename::ReservedFilename(int)
                0x00000000c0013042                UnixFile::~UnixFile()
                0x00000000c0013042                UnixFile::~UnixFile()
                0x00000000c00130de                UnixFile::~UnixFile()
                0x00000000c0013106                ReservedFilename::~ReservedFilename()
                0x00000000c0013106                ReservedFilename::~ReservedFilename()
                0x00000000c001312a                ReservedFilename::~ReservedFilename()
                0x00000000c0013151                KeGetFileFromDescriptor(int)
 .text          0x00000000c0013260     0x14be krnl/virtmgr.32
                0x00000000c0013260                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c001329a                Virt::getPageState(unsigned long)
                0x00000000c00132bd                Virt::allocateKernelVirtualPages(int)
                0x00000000c00133d9                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00133fc                Virt::swapIDToSector(unsigned long)
                0x00000000c0013412                Virt::allocateSwapfilePage()
                0x00000000c0013491                Virt::virtualMemorySetup()
                0x00000000c00134e2                Virt::setupPageSwapping(int)
                0x00000000c0013554                VAS::setCPUSpecific(unsigned long)
                0x00000000c0013556                VAS::VAS(VAS*)
                0x00000000c0013556                VAS::VAS(VAS*)
                0x00000000c001356e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c001359c                VAS::getPageTableEntry(unsigned long)
                0x00000000c00135bb                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00136f8                VAS::freeAllocatedPages(unsigned long)
                0x00000000c001371c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0013736                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0013778                VAS::VAS()
                0x00000000c0013778                VAS::VAS()
                0x00000000c00137e2                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0013802                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c001382e                VAS::~VAS()
                0x00000000c001382e                VAS::~VAS()
                0x00000000c0013996                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013a9e                VAS::allocatePages(int, int)
                0x00000000c0013b90                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013bea                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013cda                VAS::VAS(bool)
                0x00000000c0013cda                VAS::VAS(bool)
                0x00000000c0013ec2                VAS::evict(unsigned long)
                0x00000000c0013fc6                VAS::canLockPage(unsigned long)
                0x00000000c0013fe0                VAS::unlockPage(unsigned long)
                0x00000000c0014014                VAS::canLockPages(unsigned long, int)
                0x00000000c0014050                VAS::unlockPages(unsigned long, int)
                0x00000000c001408c                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c001439c                VAS::lockPage(unsigned long)
                0x00000000c001440e                VAS::lockPages(unsigned long, int)
                0x00000000c001444a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c00144be                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00144ea                VAS::scanForEviction()
                0x00000000c0014623                mapVASFirstTime
 .text          0x00000000c001471e       0x2f sys/alarm.32
                0x00000000c001471e                SysAlarm(regs*)
 .text          0x00000000c001474d       0x36 sys/eject.32
                0x00000000c001474d                SysEject(regs*)
 .text          0x00000000c0014783       0x18 sys/exit.32
                0x00000000c0014783                SysExit(regs*)
 .text          0x00000000c001479b       0x1f sys/getcwd.32
                0x00000000c001479b                SysGetCwd(regs*)
 .text          0x00000000c00147ba       0x26 sys/getpid.32
                0x00000000c00147ba                SysGetPID(regs*)
 .text          0x00000000c00147e0       0x21 sys/getramdata.32
                0x00000000c00147e0                SysGetRAMData(regs*)
 .text          0x00000000c0014801       0xd3 sys/getvgaptr.32
                0x00000000c0014801                SysGetVGAPtr(regs*)
 .text          0x00000000c00148d4       0xb9 sys/kill.32
                0x00000000c00148d4                SysKill(regs*)
 .text          0x00000000c001498d       0xa8 sys/loaddll.32
                0x00000000c001498d                SysLoadDLL(regs*)
 .text          0x00000000c0014a35       0x12 sys/pause.32
                0x00000000c0014a35                SysPause(regs*)
 .text          0x00000000c0014a47       0x49 sys/pthread.32
                0x00000000c0014a47                SysPthreadCreate(regs*)
                0x00000000c0014a5f                SysPthreadGetTID(regs*)
                0x00000000c0014a69                SysInternalPthreadGetContext(regs*)
                0x00000000c0014a6e                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c0014a73                SysPthreadJoin(regs*)
                0x00000000c0014a78                SysPthreadExit(regs*)
 .text          0x00000000c0014a90       0x68 sys/read.32
                0x00000000c0014a90                SysRead(regs*)
 .text          0x00000000c0014af8       0x29 sys/registersignal.32
                0x00000000c0014af8                SysRegisterSignal(regs*)
 .text          0x00000000c0014b21      0x1cc sys/registry.32
                0x00000000c0014b21                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014b65                SysRegistryReadExtent(regs*)
                0x00000000c0014bad                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014bc4                SysRegistryEnterDirectory(regs*)
                0x00000000c0014bdb                SysRegistryGetNext(regs*)
                0x00000000c0014bf2                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014c2c                SysRegistryOpen(regs*)
                0x00000000c0014c40                SysRegistryClose(regs*)
                0x00000000c0014c57                SysRegistryEasyReadString(regs*)
                0x00000000c0014ca3                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014ced       0x55 sys/sbrk.32
                0x00000000c0014ced                SysSbrk(regs*)
 .text          0x00000000c0014d42       0x1c sys/setcwd.32
                0x00000000c0014d42                SysSetCwd(regs*)
 .text          0x00000000c0014d5e       0xf1 sys/settime.32
                0x00000000c0014d5e                SysSetTime(regs*)
 .text          0x00000000c0014e4f       0x73 sys/symlink.32
                0x00000000c0014e4f                SysSymlink(regs*)
 .text          0x00000000c0014ec2       0x3e sys/timezone.32
                0x00000000c0014ec2                SysTimezone(regs*)
 .text          0x00000000c0014f00       0xfc sys/truncate.32
                0x00000000c0014f00                SysTruncate(regs*)
 .text          0x00000000c0014ffc       0x68 sys/write.32
                0x00000000c0014ffc                SysWrite(regs*)
 .text          0x00000000c0015064       0x9d sys/wsbe.32
                0x00000000c0015064                SysWsbe(regs*)
 .text          0x00000000c0015101       0x28 sys/yield.32
                0x00000000c0015101                SysYield(regs*)
 *fill*         0x00000000c0015129        0x3 
 .text          0x00000000c001512c      0x28d thr/alarm.32
                0x00000000c001512c                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c00152c8                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c00153b9     0x138b thr/elf.32
                0x00000000c00153b9                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0015644                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0015910                Thr::runtimeReferenceHelper()
                0x00000000c0015923                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0015972                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015c30                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0016427                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0016459                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0016490                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00164aa                Thr::loadDLL(char const*, bool)
                0x00000000c001670b                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0016744       0x5a thr/exec.32
                0x00000000c0016744                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c001679e        0x2 
 .text          0x00000000c00167a0     0x1279 thr/prcssthr.32
                0x00000000c00167a0                userModeEntryPoint(void*)
                0x00000000c00167cc                changeTSS
                0x00000000c00167fc                switchToThread(ThreadControlBlock*)
                0x00000000c00168bc                Process::addArgs(char**)
                0x00000000c0016928                Process::Process(char const*, Process*, char**)
                0x00000000c0016928                Process::Process(char const*, Process*, char**)
                0x00000000c0016b60                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016b60                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016d4c                taskStartupFunction
                0x00000000c0016d58                KeDisablePreemption()
                0x00000000c0016d80                KeRestorePreemption()
                0x00000000c0016da0                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016ee0                Process::createUserThread()
                0x00000000c0016f00                setupMultitasking(void (*)())
                0x00000000c0017048                schedule()
                0x00000000c00170dc                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0017108                blockTask(TaskState)
                0x00000000c0017144                waitTask(int, int*, int)
                0x00000000c0017188                milliTenthSleepUntil(unsigned long long)
                0x00000000c001723c                milliTenthSleep(unsigned long long)
                0x00000000c0017254                sleep(unsigned long long)
                0x00000000c0017274                sleep(unsigned int)
                0x00000000c001728c                milliTenthSleep(unsigned int)
                0x00000000c00172ac                taskReturned
                0x00000000c00172f4                Thr::processFromPID(int)
                0x00000000c00173a0                unblockTask(ThreadControlBlock*)
                0x00000000c0017454                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0017724                cleanerTaskFunction(void*)
                0x00000000c001783c                terminateTask(int)
                0x00000000c001794c                Thr::terminateFromIRQ(int)
 .text          0x00000000c0017a19      0xe86 vm86/vm8086.32
                0x00000000c0017a19                Vm::inbv(unsigned short)
                0x00000000c0017a2c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0017a5e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0017a6e                Vm::getSegment(unsigned int)
                0x00000000c0017a76                Vm::getOffset(unsigned int)
                0x00000000c0017a7b                Vm::mainloop2()
                0x00000000c0017abc                Vm::mainVm8086Loop(void*)
                0x00000000c0017ad0                Vm::mainloop3(unsigned long)
                0x00000000c0017b02                Vm::initialise8086()
                0x00000000c0017b46                Vm::resetConventionalMemory8086()
                0x00000000c0017b47                Vm::finish8086()
                0x00000000c0017bb8                Vm::getOutput8086(unsigned char*)
                0x00000000c0017bdd                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017d28                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017f6d                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0018019                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001802a                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001803c                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001804d                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018062                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0018078                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001808d                Vm::faultHandler(regs*)
 *fill*         0x00000000c001889f        0x1 
 .text          0x00000000c00188a0     0x1eab arch/i386/hal.32
                0x00000000c00188a0                noCopro(unsigned long)
                0x00000000c00188a2                CPU::close(int, int, void*)
                0x00000000c00188a5                x86ReadCMOS(unsigned char)
                0x00000000c00188f9                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c001895b                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c001897a                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018997                AMD_K6_writeback(int, int, int)
                0x00000000c0018a57                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018af5                cpuidCheckEDX(unsigned int)
                0x00000000c0018b22                cpuidCheckECX(unsigned int)
                0x00000000c0018b50                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018b7e                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018bac                HalDetectFeatures()
                0x00000000c0019987                HalEnableNMI()
                0x00000000c001999a                HalDisableNMI()
                0x00000000c00199ad                HalGetNMIState()
                0x00000000c00199b3                x86rdmsr(unsigned int)
                0x00000000c00199f1                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0019a36                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0019a4c                HalFindRSDP()
                0x00000000c0019b11                HalHandlePageFault(void*, void*)
                0x00000000c0019b40                HalHandleOpcodeFault(void*, void*)
                0x00000000c0019b82                HalDisplayDebugInfo(void*)
                0x00000000c0019f10                HalReceivedNMI()
                0x00000000c0019fab                HalSystemIdle()
                0x00000000c001a00a                i386SaveCoprocessor(void*)
                0x00000000c001a01e                i386LoadCoprocessor(void*)
                0x00000000c001a032                x87EmulHandler(regs*, void*)
                0x00000000c001a0cf                HalInitialiseCoprocessor()
                0x00000000c001a153                HalPanic(char const*)
                0x00000000c001a267                HalQueryPerformanceCounter()
                0x00000000c001a277                HalInitialise()
                0x00000000c001a409                HalMakeBeep(int)
                0x00000000c001a443                HalGetRand()
                0x00000000c001a446                HalEndOfInterrupt(int)
                0x00000000c001a471                HalRestart()
                0x00000000c001a472                HalShutdown()
                0x00000000c001a473                HalSleep()
                0x00000000c001a474                CPU::CPU()
                0x00000000c001a474                CPU::CPU()
                0x00000000c001a4f8                CPU::setupSMEP()
                0x00000000c001a504                CPU::setupUMIP()
                0x00000000c001a50e                CPU::setupTSC()
                0x00000000c001a518                CPU::setupLargePages()
                0x00000000c001a522                CPU::setupPAT()
                0x00000000c001a554                CPU::setupMTRR()
                0x00000000c001a556                CPU::setupGlobalPages()
                0x00000000c001a560                CPU::allowUsermodeDataAccess()
                0x00000000c001a56e                CPU::prohibitUsermodeDataAccess()
                0x00000000c001a57c                CPU::setupSMAP()
                0x00000000c001a58a                CPU::setupFeatures()
                0x00000000c001a656                CPU::open(int, int, void*)
 .text          0x00000000c001a74b      0x268 arch/i386/intctrl.32
                0x00000000c001a74b                convertLegacyIRQNumber(int)
                0x00000000c001a787                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001a7d1                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001a90e                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001a942                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001a9b3        0x1 
 .text          0x00000000c001a9b4      0x2dc arch/i386/pic.32
                0x00000000c001a9b4                picIoWait()
                0x00000000c001a9bc                picDisable()
                0x00000000c001a9f0                picGetIRQReg(int)
                0x00000000c001aa6c                picOpen()
                0x00000000c001abf0                picEOI(int)
 .text          0x00000000c001ac90      0x5ed arch/i386/rtc.32
                0x00000000c001ac90                RTC::open(int, int, void*)
                0x00000000c001ac94                RTC::close(int, int, void*)
                0x00000000c001ac98                RTC::timeInSecondsUTC()
                0x00000000c001acaa                RTC::timeInDatetimeUTC()
                0x00000000c001acd0                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001ad0e                RTC::~RTC()
                0x00000000c001ad0e                RTC::~RTC()
                0x00000000c001ad32                RTC::~RTC()
                0x00000000c001ad5c                RTC::get_update_in_progress_flag()
                0x00000000c001ad70                RTC::completeRTCRefresh()
                0x00000000c001b01e                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b194                rtcIRQHandler(regs*, void*)
                0x00000000c001b1d4                RTC::RTC()
                0x00000000c001b1d4                RTC::RTC()
 *fill*         0x00000000c001b27d        0x3 
 .text          0x00000000c001b280      0x1f4 arch/i386/vga.32
                0x00000000c001b280                HalConsoleScroll(int, int)
                0x00000000c001b388                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001b3ec                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001b474     0x14f3 fs/fat/vfslink.32
                0x00000000c001b474                FAT::getName()
                0x00000000c001b47c                FAT::tell(void*, unsigned long long*)
                0x00000000c001b4b8                FAT::stat(void*, unsigned long long*)
                0x00000000c001b4f4                FAT::~FAT()
                0x00000000c001b4f4                FAT::~FAT()
                0x00000000c001b518                FAT::~FAT()
                0x00000000c001b540                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b5e4                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001b6c4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b8a8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001bac4                FAT::allocateSwapfile(char const*, int)
                0x00000000c001bc84                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001bdf4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001be54                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001beb4                FAT::close(void*)
                0x00000000c001bf08                FAT::closeDir(void*)
                0x00000000c001bf5c                FAT::truncate(void*, unsigned long long)
                0x00000000c001bfc8                FAT::seek(void*, unsigned long long)
                0x00000000c001c020                fatWrapperReadDisk
                0x00000000c001c060                fatWrapperWriteDisk
                0x00000000c001c0a0                fatWrapperIoctl
                0x00000000c001c1c0                FAT::FAT()
                0x00000000c001c1c0                FAT::FAT()
                0x00000000c001c218                FAT::fixFilepath(char*)
                0x00000000c001c258                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c3cc                FAT::openDir(char const*, void**)
                0x00000000c001c47c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c574                FAT::unlink(char const*)
                0x00000000c001c5f4                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c7ac                FAT::rename(char const*, char const*)
                0x00000000c001c878                FAT::mkdir(char const*)
                0x00000000c001c8f8                FAT::exists(char const*)
 *fill*         0x00000000c001c967        0x1 
 .text          0x00000000c001c968       0x94 fs/iso9660/helper.32
                0x00000000c001c968                isoReadDiscSectorHelper
                0x00000000c001c9c4                iso_kprintf
                0x00000000c001c9e0                iso_kprintfd
 .text          0x00000000c001c9fc      0x71a fs/iso9660/vfslink.32
                0x00000000c001c9fc                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001ca02                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001ca08                ISO9660::getName()
                0x00000000c001ca0e                ISO9660::closeDir(void*)
                0x00000000c001ca18                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ca1e                ISO9660::unlink(char const*)
                0x00000000c001ca24                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001ca2a                ISO9660::rename(char const*, char const*)
                0x00000000c001ca30                ISO9660::mkdir(char const*)
                0x00000000c001ca36                ISO9660::~ISO9660()
                0x00000000c001ca36                ISO9660::~ISO9660()
                0x00000000c001ca5a                ISO9660::~ISO9660()
                0x00000000c001ca82                ISO9660::exists(char const*)
                0x00000000c001ca96                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001cb7c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001cbc4                ISO9660::seek(void*, unsigned long long)
                0x00000000c001cc06                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001cc44                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001cc96                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001cdd8                ISO9660::close(void*)
                0x00000000c001ce08                ISO9660::openDir(char const*, void**)
                0x00000000c001cee2                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001cffd                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d07c                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001d0ee                ISO9660::ISO9660()
                0x00000000c001d0ee                ISO9660::ISO9660()
 .text          0x00000000c001d116      0x26c hal/sound/sndcard.32
                0x00000000c001d116                SoundCard::beginPlayback()
                0x00000000c001d124                SoundCard::stopPlayback()
                0x00000000c001d132                SoundCard::SoundCard(char const*)
                0x00000000c001d132                SoundCard::SoundCard(char const*)
                0x00000000c001d1d0                SoundCard::~SoundCard()
                0x00000000c001d1d0                SoundCard::~SoundCard()
                0x00000000c001d1f4                SoundCard::~SoundCard()
                0x00000000c001d21e                SoundCard::configureRates(int, int, int)
                0x00000000c001d24e                SoundCard::getSamples16(int, short*)
                0x00000000c001d2aa                SoundCard::getSamples32(int, int*)
                0x00000000c001d330                SoundCard::addChannel(SoundPort*)
                0x00000000c001d36e                SoundCard::removeChannel(int)
 *fill*         0x00000000c001d382        0x2 
 .text          0x00000000c001d384      0x42f hal/sound/sndport.32
                0x00000000c001d384                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d384                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d410                SoundPort::~SoundPort()
                0x00000000c001d410                SoundPort::~SoundPort()
                0x00000000c001d444                SoundPort::unpause()
                0x00000000c001d450                SoundPort::pause()
                0x00000000c001d45c                SoundPort::getBufferUsed()
                0x00000000c001d464                SoundPort::getBufferSize()
                0x00000000c001d46c                SoundPort::buffer8(signed char*, int)
                0x00000000c001d500                SoundPort::buffer16(short*, int)
                0x00000000c001d594                SoundPort::buffer32(int*, int)
                0x00000000c001d620                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001d6f0                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001d7b3        0x0 hw/bus/isa.32
 *fill*         0x00000000c001d7b3        0x1 
 .text          0x00000000c001d7b4      0xc25 hw/bus/pci.32
                0x00000000c001d7b4                PCI::open(int, int, void*)
                0x00000000c001d7d2                PCI::close(int, int, void*)
                0x00000000c001d7d6                PCI::PCI()
                0x00000000c001d7d6                PCI::PCI()
                0x00000000c001d86e                PCI::readBAR8(unsigned int, int)
                0x00000000c001d88a                PCI::readBAR16(unsigned int, int)
                0x00000000c001d8a8                PCI::readBAR32(unsigned int, int)
                0x00000000c001d8c4                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001d8e4                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001d906                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001d926                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d99c                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001da46                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001da6a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001da92                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001dadc                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001db04                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001db28                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001db4c                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001db74                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dbd8                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001dcbe                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001df88                PCI::checkBus(unsigned char)
                0x00000000c001dfac                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e192                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e30e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e380                PCI::detect()
 *fill*         0x00000000c001e3d9        0x1 
 .text          0x00000000c001e3da      0xe52 hw/diskctrl/ide.32
                0x00000000c001e3da                IDE::close(int, int, void*)
                0x00000000c001e3de                IDE::IDE()
                0x00000000c001e3de                IDE::IDE()
                0x00000000c001e412                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e424                selectDrive(unsigned char, unsigned char)
                0x00000000c001e426                IDE::getBase(unsigned char)
                0x00000000c001e438                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001e4f8                IDE::read(unsigned char, unsigned char)
                0x00000000c001e5ac                IDE::waitInterrupt(unsigned char)
                0x00000000c001e60f                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001e62b                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001e648                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001e692                IDE::open(int, int, void*)
                0x00000000c001ebea                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ecba                IDE::detect()
                0x00000000c001f11e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f1d8                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f22c      0x33f hw/diskctrl/satabus.32
                0x00000000c001f22c                SATABus::close(int, int, void*)
                0x00000000c001f230                SATABus::detect()
                0x00000000c001f232                SATABus::SATABus()
                0x00000000c001f232                SATABus::SATABus()
                0x00000000c001f2b8                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f2ea                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f332                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f352                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f37c                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f48e                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001f538                SATABus::open(int, int, void*)
 *fill*         0x00000000c001f56b        0x1 
 .text          0x00000000c001f56c      0x7c1 hw/diskphys/ata.32
                0x00000000c001f56c                ATA::close(int, int, void*)
                0x00000000c001f590                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001f592                ATA::ATA()
                0x00000000c001f592                ATA::ATA()
                0x00000000c001f5c0                ATA::flush(bool)
                0x00000000c001f60e                ATA::readyForCommand()
                0x00000000c001f65a                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001fa62                ATA::read(unsigned long long, int, void*)
                0x00000000c001faae                ATA::write(unsigned long long, int, void*)
                0x00000000c001fafa                ATA::detectCHS()
                0x00000000c001fb24                ATA::open(int, int, void*)
                0x00000000c001fd0f                combineCharAndColour(char, unsigned char)
                0x00000000c001fd20                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001fd2d        0x1 
 .text          0x00000000c001fd2e      0x612 hw/diskphys/atapi.32
                0x00000000c001fd2e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001fd34                ATAPI::close(int, int, void*)
                0x00000000c001fd58                ATAPI::ATAPI()
                0x00000000c001fd58                ATAPI::ATAPI()
                0x00000000c001fd86                ATAPI::readyForCommand()
                0x00000000c001fdd8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0020098                ATAPI::diskRemoved()
                0x00000000c00200d2                ATAPI::eject()
                0x00000000c002011a                ATAPI::diskInserted()
                0x00000000c0020126                ATAPI::detectMedia()
                0x00000000c00201e6                ATAPI::open(int, int, void*)
                0x00000000c00202c6                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020340      0x44a hw/diskphys/sata.32
                0x00000000c0020340                SATA::close(int, int, void*)
                0x00000000c0020364                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0020366                SATA::open(int, int, void*)
                0x00000000c002041e                SATA::SATA()
                0x00000000c002041e                SATA::SATA()
                0x00000000c002044c                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c00206d2                SATA::read(unsigned long long, int, void*)
                0x00000000c002071e                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c002078a      0x5dc hw/diskphys/satapi.32
                0x00000000c002078a                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020790                SATAPI::close(int, int, void*)
                0x00000000c00207b4                SATAPI::SATAPI()
                0x00000000c00207b4                SATAPI::SATAPI()
                0x00000000c00207e2                SATAPI::diskRemoved()
                0x00000000c00207e4                SATAPI::diskInserted()
                0x00000000c0020800                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020aea                SATAPI::eject()
                0x00000000c0020b26                SATAPI::detectMedia()
                0x00000000c0020b7c                SATAPI::open(int, int, void*)
                0x00000000c0020c7c                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020d66      0x443 hw/intctrl/apic.32
                0x00000000c0020d66                IOAPIC::close(int, int, void*)
                0x00000000c0020d6c                apicGetBase()
                0x00000000c0020d8a                IOAPIC::IOAPIC()
                0x00000000c0020d8a                IOAPIC::IOAPIC()
                0x00000000c0020db2                apicOpen()
                0x00000000c0020f3e                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0020f70                IOAPIC::read(int)
                0x00000000c0020f98                IOAPIC::open(int, int, void*)
                0x00000000c002107e                IOAPIC::write(int, int)
                0x00000000c00210aa                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c00211a9        0x3 
 .text          0x00000000c00211ac       0xf0 hw/timer/apictimer.32
                0x00000000c00211ac                APICTimer::close(int, int, void*)
                0x00000000c00211b4                apicTimerHandler(regs*, void*)
                0x00000000c00211dc                APICTimer::open(int, int, void*)
                0x00000000c002124c                APICTimer::write(int)
                0x00000000c0021274                APICTimer::APICTimer()
                0x00000000c0021274                APICTimer::APICTimer()
 .text          0x00000000c002129c      0x1ad hw/timer/pit.32
                0x00000000c002129c                PIT::write(int)
                0x00000000c0021320                pitHandler(regs*, void*)
                0x00000000c0021348                PIT::open(int, int, void*)
                0x00000000c0021398                PIT::close(int, int, void*)
                0x00000000c00213c8                PIT::PIT()
                0x00000000c00213c8                PIT::PIT()
 *fill*         0x00000000c0021449        0x7 
 .text          0x00000000c0021450       0x6f arch/i386/avx.32
                0x00000000c0021450                avxDetect
                0x00000000c002147a                avxSave
                0x00000000c002148b                avxLoad
                0x00000000c002149c                avxInit
                0x00000000c00214be                avxClose
 *fill*         0x00000000c00214bf        0x1 
 .text          0x00000000c00214c0      0x2b4 arch/i386/interrupt.32
                0x00000000c00214c0                isr0
                0x00000000c00214d0                isr1
                0x00000000c00214da                isr2
                0x00000000c00214e4                isr3
                0x00000000c00214ee                isr4
                0x00000000c00214f8                isr5
                0x00000000c0021502                isr6
                0x00000000c002150c                isr7
                0x00000000c0021516                isr8
                0x00000000c002151e                isr9
                0x00000000c0021528                isr10
                0x00000000c0021530                isr11
                0x00000000c0021538                isr12
                0x00000000c0021540                isr13
                0x00000000c002155a                isr14
                0x00000000c0021562                isr15
                0x00000000c002156c                isr16
                0x00000000c0021576                isr17
                0x00000000c0021580                isr18
                0x00000000c002158a                irq3
                0x00000000c0021594                irq4
                0x00000000c002159e                irq5
                0x00000000c00215a8                irq6
                0x00000000c00215b2                irq7
                0x00000000c00215bc                irq8
                0x00000000c00215c6                irq9
                0x00000000c00215d0                irq10
                0x00000000c00215da                irq11
                0x00000000c00215e4                irq12
                0x00000000c00215ee                irq13
                0x00000000c00215f8                irq14
                0x00000000c0021602                irq15
                0x00000000c002160c                irq1
                0x00000000c0021613                irq2
                0x00000000c002161a                isr96
                0x00000000c0021621                irq0
                0x00000000c0021626                int_common_stub
                0x00000000c0021626                syscall_common_stub
                0x00000000c0021724                irq16
                0x00000000c002172e                irq17
                0x00000000c0021738                irq18
                0x00000000c0021742                irq19
                0x00000000c002174c                irq20
                0x00000000c0021756                irq21
                0x00000000c0021760                irq22
                0x00000000c002176a                irq23
 *fill*         0x00000000c0021774        0xc 
 .text          0x00000000c0021780       0x10 arch/i386/rdrand.32
                0x00000000c0021780                i386GetRDRAND
 .text          0x00000000c0021790       0x39 arch/i386/sse.32
                0x00000000c0021790                sseDetect
                0x00000000c00217a8                sseSave
                0x00000000c00217b0                sseLoad
                0x00000000c00217b8                sseInit
                0x00000000c00217c8                sseClose
 *fill*         0x00000000c00217c9        0x7 
 .text          0x00000000c00217d0       0x4f arch/i386/x87.32
                0x00000000c00217d6                x87Detect
                0x00000000c00217f7                x87Save
                0x00000000c00217fe                x87Load
                0x00000000c0021805                x87Init
                0x00000000c002181e                x87Close
 *fill*         0x00000000c002181f        0x1 
 .text          0x00000000c0021820       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0021845        0x0 crtn.32
 *fill*         0x00000000c0021845        0x3 
 .text          0x00000000c0021848      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0021848                __divdi3
 *fill*         0x00000000c0021993        0x1 
 .text          0x00000000c0021994      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021994                __moddi3
 *fill*         0x00000000c0021b12        0x2 
 .text          0x00000000c0021b14       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021b14                __udivdi3
 *fill*         0x00000000c0021c13        0x1 
 .text          0x00000000c0021c14      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021c14                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021d30        0x0
 .iplt          0x00000000c0021d30        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021d2e        0xf
 .init          0x00000000c0021d2e        0x3 crti.32
                0x00000000c0021d2e                _init
 .init          0x00000000c0021d31        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021d36        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021d3b        0x2 crtn.32

.fini           0x00000000c0021d3d        0xa
 .fini          0x00000000c0021d3d        0x3 crti.32
                0x00000000c0021d3d                _fini
 .fini          0x00000000c0021d40        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021d45        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021d48       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021d48       0x1a hal/device.32
                0x00000000c0021d48                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021d48                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021d62       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021d62       0x2a hal/device.32
                0x00000000c0021d62                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021d8c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021d8c       0xdc hal/device.32
                0x00000000c0021d8c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021e68       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021e68       0x42 hal/device.32
                0x00000000c0021e68                LinkedList<Device>::LinkedList()
                0x00000000c0021e68                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021eac       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021eac       0x1c hal/timer.32
                0x00000000c0021eac                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021ec8        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021ec8        0x7 hal/timer.32
                0x00000000c0021ec8                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021ed0       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021ed0       0xbc hal/timer.32
                0x00000000c0021ed0                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021f8c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021f8c       0xda hal/timer.32
                0x00000000c0021f8c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0022068       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0022068       0x23 hw/acpi.32
                0x00000000c0022068                ACPI::~ACPI()
                0x00000000c0022068                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002208c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002208c       0x2a hw/acpi.32
                0x00000000c002208c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00220b8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00220b8        0x2 hw/acpi.32
                0x00000000c00220b8                LinkedList<Device>::~LinkedList()
                0x00000000c00220b8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00220bc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00220bc       0x1c hw/acpi.32
                0x00000000c00220bc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00220d8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00220d8        0x7 hw/acpi.32
                0x00000000c00220d8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00220e0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00220e0       0xb8 hw/acpi.32
                0x00000000c00220e0                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0022198       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0022198       0x23 krnl/computer.32
                0x00000000c0022198                Computer::~Computer()
                0x00000000c0022198                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c00221bc       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c00221bc       0x2a krnl/computer.32
                0x00000000c00221bc                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c00221e6       0x24
 .text._Z10idleCommonv
                0x00000000c00221e6       0x24 krnl/idle.32
                0x00000000c00221e6                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002220a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002220a        0x2 krnl/unixfile.32
                0x00000000c002220a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c002220a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002220c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002220c       0x42 krnl/unixfile.32
                0x00000000c002220c                LinkedList<UnixFile>::LinkedList()
                0x00000000c002220c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002224e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002224e       0xd3 krnl/unixfile.32
                0x00000000c002224e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022322        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022322        0x7 krnl/unixfile.32
                0x00000000c0022322                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002232a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002232a       0xa1 krnl/unixfile.32
                0x00000000c002232a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00223cc        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00223cc        0x8 krnl/unixfile.32
                0x00000000c00223cc                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00223d4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00223d4        0x8 sys/kill.32
                0x00000000c00223d4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00223dc        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00223dc        0x2 thr/prcssthr.32
                0x00000000c00223dc                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00223dc                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00223e0       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00223e0       0x49 thr/prcssthr.32
                0x00000000c00223e0                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00223e0                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002242c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002242c       0x42 thr/prcssthr.32
                0x00000000c002242c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c002242c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c002246e       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002246e       0x23 arch/i386/hal.32
                0x00000000c002246e                CPU::~CPU()
                0x00000000c002246e                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0022492       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0022492       0x2a arch/i386/hal.32
                0x00000000c0022492                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c00224bc       0x23
 .text._ZN3PCID2Ev
                0x00000000c00224bc       0x23 hw/bus/pci.32
                0x00000000c00224bc                PCI::~PCI()
                0x00000000c00224bc                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00224e0       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00224e0       0x2a hw/bus/pci.32
                0x00000000c00224e0                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c002250a       0x23
 .text._ZN3IDED2Ev
                0x00000000c002250a       0x23 hw/diskctrl/ide.32
                0x00000000c002250a                IDE::~IDE()
                0x00000000c002250a                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002252e       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002252e       0x2a hw/diskctrl/ide.32
                0x00000000c002252e                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0022558       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0022558       0x23 hw/diskctrl/satabus.32
                0x00000000c0022558                SATABus::~SATABus()
                0x00000000c0022558                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002257c       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002257c       0x2a hw/diskctrl/satabus.32
                0x00000000c002257c                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c00225a6       0x23
 .text._ZN3ATAD2Ev
                0x00000000c00225a6       0x23 hw/diskphys/ata.32
                0x00000000c00225a6                ATA::~ATA()
                0x00000000c00225a6                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00225ca       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00225ca       0x2a hw/diskphys/ata.32
                0x00000000c00225ca                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00225f4       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00225f4       0x23 hw/diskphys/atapi.32
                0x00000000c00225f4                ATAPI::~ATAPI()
                0x00000000c00225f4                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0022618       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0022618       0x2a hw/diskphys/atapi.32
                0x00000000c0022618                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022642       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022642       0x23 hw/diskphys/sata.32
                0x00000000c0022642                SATA::~SATA()
                0x00000000c0022642                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0022666       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0022666       0x2a hw/diskphys/sata.32
                0x00000000c0022666                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0022690       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0022690       0x23 hw/diskphys/satapi.32
                0x00000000c0022690                SATAPI::~SATAPI()
                0x00000000c0022690                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00226b4       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00226b4       0x2a hw/diskphys/satapi.32
                0x00000000c00226b4                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00226de       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00226de       0x23 hw/intctrl/apic.32
                0x00000000c00226de                IOAPIC::~IOAPIC()
                0x00000000c00226de                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022702       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022702       0x2a hw/intctrl/apic.32
                0x00000000c0022702                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c002272c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c002272c       0x23 hw/timer/apictimer.32
                0x00000000c002272c                APICTimer::~APICTimer()
                0x00000000c002272c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0022750       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0022750       0x2a hw/timer/apictimer.32
                0x00000000c0022750                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002277c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002277c       0x23 hw/timer/pit.32
                0x00000000c002277c                PIT::~PIT()
                0x00000000c002277c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00227a0       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00227a0       0x2a hw/timer/pit.32
                0x00000000c00227a0                PIT::~PIT()

.rodata         0x00000000c00227ca     0x3f36
                0x00000000c00227ca                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00227ca        0x2 
 .ctors         0x00000000c00227cc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00227d0        0x4 krnl/unixfile.32
 .ctors         0x00000000c00227d4        0x4 thr/prcssthr.32
 .ctors         0x00000000c00227d8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00227dc                end_ctors = .
                0x00000000c00227dc                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00227dc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00227e0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00227e0                __DTOR_END__
                0x00000000c00227e4                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00227e4       0x1c 
 .rodata        0x00000000c0022800      0x101 acpica/utclib.32
                0x00000000c0022800                AcpiGbl_Ctypes
 *fill*         0x00000000c0022901        0x3 
 .rodata        0x00000000c0022904       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c002291c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022966       0x1a 
 .rodata        0x00000000c0022980       0xed fs/fat/ff.32
 *fill*         0x00000000c0022a6d       0x13 
 .rodata        0x00000000c0022a80      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022e80       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0022eef       0x11 dbg/kconsole.32
 .rodata        0x00000000c0022f00      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0023050      0x169 dbg/usban.32
 *fill*         0x00000000c00231b9        0x3 
 .rodata.str1.4
                0x00000000c00231bc      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00232f3      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c0023416       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c002346f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0023470       0x6c fs/vfs.32
                0x00000000c0023470                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00234dc       0x1c fs/vfs.32
                0x00000000c00234dc                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00234f8       0x1c fs/vfs.32
                0x00000000c00234f8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0023514       0x2c hal/bus.32
                0x00000000c0023514                vtable for Bus
 .rodata        0x00000000c0023540      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0023690       0x3c hal/clock.32
                0x00000000c0023690                vtable for Clock
 .rodata.str1.1
                0x00000000c00236cc       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0023730       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023752       0x15 hal/device.32
 *fill*         0x00000000c0023767        0x1 
 .rodata._ZTV6Device
                0x00000000c0023768       0x2c hal/device.32
                0x00000000c0023768                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023794       0x2c hal/device.32
                0x00000000c0023794                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00237c0       0x2c hal/diskctrl.32
                0x00000000c00237c0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00237ec       0x38 hal/diskphys.32
                0x00000000c00237ec                vtable for PhysicalDisk
 .rodata        0x00000000c0023824       0x53 hal/keybrd.32
 *fill*         0x00000000c0023877        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023878       0x34 hal/keybrd.32
                0x00000000c0023878                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00238ac       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00238f0       0x2c hal/logidisk.32
                0x00000000c00238f0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c002391c       0x2c hal/mouse.32
                0x00000000c002391c                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023948       0x34 hal/nic.32
                0x00000000c0023948                vtable for NIC
 .rodata.str1.1
                0x00000000c002397c        0xb hal/partition.32
 *fill*         0x00000000c0023987        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023988       0x44 hal/serial.32
                0x00000000c0023988                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00239cc       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023a17        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023a1f       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023a1f       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0023a1f       0x45 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0023a64       0x30 hal/timer.32
                0x00000000c0023a64                vtable for Timer
 .rodata.str1.1
                0x00000000c0023a94       0x3e hal/vcache.32
 *fill*         0x00000000c0023ad2        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023ad4       0x10 hal/vcache.32
                0x00000000c0023ad4                vtable for VCache
 .rodata.str1.1
                0x00000000c0023ae4       0xba hal/video.32
 *fill*         0x00000000c0023b9e        0x2 
 .rodata._ZTV5Video
                0x00000000c0023ba0       0x4c hal/video.32
                0x00000000c0023ba0                vtable for Video
 .rodata.str1.1
                0x00000000c0023bec      0x19b hw/acpi.32
 *fill*         0x00000000c0023d87        0x1 
 .rodata.str1.4
                0x00000000c0023d88       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023e23       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023e23        0x8 hw/acpi.32
 *fill*         0x00000000c0023e23        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023e24       0x2c hw/acpi.32
                0x00000000c0023e24                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023e50       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023e63       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023ea3       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023ec4       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0023ef7        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0023efa       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0023f70       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0024019        0x3 
 .rodata.str1.4
                0x00000000c002401c       0xb8 krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c00240d4       0x2c krnl/computer.32
                0x00000000c00240d4                vtable for Computer
 .rodata.str1.1
                0x00000000c0024100       0x3c krnl/env.32
 .rodata        0x00000000c002413c       0x7e krnl/fault.32
 .rodata.str1.1
                0x00000000c00241ba        0x4 krnl/intlformat.32
 *fill*         0x00000000c00241be        0x2 
 .rodata.str1.4
                0x00000000c00241c0       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c00241f0        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c00241ff       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c0024260      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0024365       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00243bd       0x39 krnl/pipe.32
 *fill*         0x00000000c00243f6        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00243f8       0x1c krnl/pipe.32
                0x00000000c00243f8                vtable for Pipe
 .rodata.str1.1
                0x00000000c0024414       0x91 krnl/resolve.32
 *fill*         0x00000000c00244a5        0x3 
 .rodata.str1.4
                0x00000000c00244a8       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c00244c7      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c00245cf       0x50 krnl/syscalls.32
                                         0x58 (size before relaxing)
 .rodata.str1.1
                0x00000000c002461f       0x5e krnl/terminal.32
 *fill*         0x00000000c002467d        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0024680       0x1c krnl/terminal.32
                0x00000000c0024680                vtable for VgaText
 .rodata        0x00000000c002469c       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00246d7       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00246d7       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00246d7       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00246d7        0x8 krnl/unixfile.32
 *fill*         0x00000000c00246d7        0x1 
 .rodata.str1.4
                0x00000000c00246d8       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c00246f8       0x22 krnl/unixfile.32
 *fill*         0x00000000c002471a        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c002471c       0x1c krnl/unixfile.32
                0x00000000c002471c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0024738       0x1c krnl/unixfile.32
                0x00000000c0024738                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0024754      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024cd7      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024e38       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0024e4d        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024e5c       0x13 sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0024e6f       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0024e90       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0024ed4       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024ee9       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024f15       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c0024f26      0x37d thr/elf.32
                                        0x38c (size before relaxing)
 .rodata.str1.1
                0x00000000c00252a3       0x57 thr/prcssthr.32
 *fill*         0x00000000c00252fa        0x2 
 .rodata.str1.4
                0x00000000c00252fc       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00253f4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00253f4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00253f4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00253f4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00253f4       0x61 vm86/vm8086.32
 *fill*         0x00000000c0025455        0x3 
 .rodata.str1.4
                0x00000000c0025458       0x81 vm86/vm8086.32
 *fill*         0x00000000c00254d9        0x3 
 .rodata        0x00000000c00254dc      0x390 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002586c      0x32e arch/i386/hal.32
                                        0x341 (size before relaxing)
 *fill*         0x00000000c0025b9a        0x2 
 .rodata.str1.4
                0x00000000c0025b9c       0x23 arch/i386/hal.32
 *fill*         0x00000000c0025bbf        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025bc0       0x2c arch/i386/hal.32
                0x00000000c0025bc0                vtable for CPU
 .rodata.str1.4
                0x00000000c0025bec       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025c4d       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025c8b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0025ca0       0x3c arch/i386/rtc.32
                0x00000000c0025ca0                vtable for RTC
 .rodata.str1.1
                0x00000000c0025cdc       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025d1d        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025d20       0x6c fs/fat/vfslink.32
                0x00000000c0025d20                vtable for FAT
 .rodata.str1.1
                0x00000000c0025d8c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0025d8c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0025ec4       0x6c fs/iso9660/vfslink.32
                0x00000000c0025ec4                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025f30       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0025f74       0x34 hal/sound/sndcard.32
                0x00000000c0025f74                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0025fa8       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025fe7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002601f       0xa1 hw/bus/pci.32
 .rodata        0x00000000c00260c0       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0026124       0x2c hw/bus/pci.32
                0x00000000c0026124                vtable for PCI
 .rodata.str1.1
                0x00000000c0026150      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0026274       0x2c hw/diskctrl/ide.32
                0x00000000c0026274                vtable for IDE
 .rodata.str1.4
                0x00000000c00262a0       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00262c4       0x2c hw/diskctrl/satabus.32
                0x00000000c00262c4                vtable for SATABus
 .rodata.str1.1
                0x00000000c00262f0       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c00263ab        0x1 
 .rodata._ZTV3ATA
                0x00000000c00263ac       0x38 hw/diskphys/ata.32
                0x00000000c00263ac                vtable for ATA
 .rodata.str1.1
                0x00000000c00263e4        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00263f1        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00263f4       0x38 hw/diskphys/atapi.32
                0x00000000c00263f4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002642c       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00264b4       0x38 hw/diskphys/sata.32
                0x00000000c00264b4                vtable for SATA
 .rodata.str1.1
                0x00000000c00264ec       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00265d6        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00265d8       0x38 hw/diskphys/satapi.32
                0x00000000c00265d8                vtable for SATAPI
 .rodata        0x00000000c0026610       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c0026636        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c0026638       0x2c hw/intctrl/apic.32
                0x00000000c0026638                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0026664       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002667f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0026680       0x30 hw/timer/apictimer.32
                0x00000000c0026680                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00266b0       0x1d hw/timer/pit.32
 *fill*         0x00000000c00266cd        0x3 
 .rodata._ZTV3PIT
                0x00000000c00266d0       0x30 hw/timer/pit.32
                0x00000000c00266d0                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0026700      0xa85
 *(.data)
 .data          0x00000000c0026700        0x0 crti.32
 .data          0x00000000c0026700        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0026700                __dso_handle
 .data          0x00000000c0026704        0x0 acpica/utclib.32
 .data          0x00000000c0026704        0x0 krnl/malloc.32
 .data          0x00000000c0026704        0x0 libk/ctype.32
 .data          0x00000000c0026704        0x0 libk/string.32
 .data          0x00000000c0026704        0x0 arch/i386/cc.32
 .data          0x00000000c0026704        0x0 fs/fat/diskio.32
 .data          0x00000000c0026704        0x0 fs/fat/ff.32
 .data          0x00000000c0026704        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0026704        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0026704        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0026704        0x0 dbg/kconsole.32
 *fill*         0x00000000c0026704       0x1c 
 .data          0x00000000c0026720       0x28 dbg/usban.32
                0x00000000c0026720                KiUsbanTypeMismatchTypes
 .data          0x00000000c0026748        0x0 fs/symlink.32
 .data          0x00000000c0026748        0x0 fs/vfs.32
 .data          0x00000000c0026748        0x0 hal/bus.32
 .data          0x00000000c0026748        0x0 hal/buzzer.32
 .data          0x00000000c0026748        0x0 hal/clock.32
 .data          0x00000000c0026748        0x0 hal/device.32
 .data          0x00000000c0026748        0x0 hal/diskctrl.32
 .data          0x00000000c0026748        0x0 hal/diskphys.32
 .data          0x00000000c0026748        0x0 hal/fpu.32
 .data          0x00000000c0026748        0x0 hal/keybrd.32
 .data          0x00000000c0026748        0x0 hal/logidisk.32
 .data          0x00000000c0026748        0x0 hal/mouse.32
 .data          0x00000000c0026748        0x0 hal/nic.32
 .data          0x00000000c0026748        0x0 hal/partition.32
 .data          0x00000000c0026748        0x0 hal/serial.32
 .data          0x00000000c0026748        0x0 hal/timer.32
 .data          0x00000000c0026748        0x0 hal/vcache.32
 .data          0x00000000c0026748        0x0 hal/video.32
 .data          0x00000000c0026748       0x10 hw/acpi.32
                0x00000000c0026748                legacyIRQRemaps
 .data          0x00000000c0026758        0x0 krnl/assert.32
 .data          0x00000000c0026758        0x0 krnl/atexit.32
 .data          0x00000000c0026758        0x0 krnl/bootmsg.32
 .data          0x00000000c0026758        0x4 krnl/c++.32
                0x00000000c0026758                __stack_chk_guard
 .data          0x00000000c002675c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002675c        0x4 
 .data          0x00000000c0026760      0x100 krnl/cm.32
                0x00000000c0026760                CmComponents
 .data          0x00000000c0026860        0x0 krnl/compat.32
 .data          0x00000000c0026860        0x0 krnl/computer.32
 .data          0x00000000c0026860      0x400 krnl/crc32.32
                0x00000000c0026860                KiPolyLookupCRC32
 .data          0x00000000c0026c60       0x4d krnl/env.32
                0x00000000c0026c60                defaultSysEnv
 .data          0x00000000c0026cad        0x0 krnl/fault.32
 .data          0x00000000c0026cad        0x0 krnl/gdt.32
 .data          0x00000000c0026cad        0x0 krnl/idle.32
 .data          0x00000000c0026cad        0x0 krnl/idt.32
 .data          0x00000000c0026cad        0x0 krnl/inlines.32
 .data          0x00000000c0026cad        0x0 krnl/intlformat.32
 .data          0x00000000c0026cad        0x0 krnl/intops.32
 *fill*         0x00000000c0026cad        0x3 
 .data          0x00000000c0026cb0        0x4 krnl/kheap.32
 .data          0x00000000c0026cb4        0x0 krnl/mailbox.32
 .data          0x00000000c0026cb4        0x0 krnl/main.32
 .data          0x00000000c0026cb4        0x0 krnl/mutex.32
 .data          0x00000000c0026cb4        0x0 krnl/panic.32
 .data          0x00000000c0026cb4        0x4 krnl/physmgr.32
                0x00000000c0026cb4                Phys::bitmap
 .data          0x00000000c0026cb8        0x0 krnl/pipe.32
 .data          0x00000000c0026cb8        0x0 krnl/powctrl.32
 .data          0x00000000c0026cb8        0x0 krnl/random.32
 .data          0x00000000c0026cb8        0x0 krnl/resolve.32
 .data          0x00000000c0026cb8        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026cb8        0x8 
 .data          0x00000000c0026cc0       0x4c krnl/signal.32
                0x00000000c0026cc0                KiDefaultSignalHandlers
 *fill*         0x00000000c0026d0c       0x14 
 .data          0x00000000c0026d20      0x124 krnl/syscalls.32
                0x00000000c0026d20                systemCallHandlers
 *fill*         0x00000000c0026e44       0x1c 
 .data          0x00000000c0026e60       0x60 krnl/terminal.32
                0x00000000c0026e60                VgaText::hiddenOut
                0x00000000c0026e80                ansiToVGAMappings
 .data          0x00000000c0026ec0        0x0 krnl/tss.32
 .data          0x00000000c0026ec0        0x4 krnl/unixfile.32
                0x00000000c0026ec0                UnixFile::nextFd
 .data          0x00000000c0026ec4       0x15 krnl/virtmgr.32
                0x00000000c0026ec4                Virt::pageAllocPtr
                0x00000000c0026ec8                Virt::bitmap
                0x00000000c0026ecc                Virt::swapfileSectorsPerPage
                0x00000000c0026ed0                Virt::swapfileLength
                0x00000000c0026ed4                Virt::swapfileSector
                0x00000000c0026ed8                Virt::swapfileDrive
 .data          0x00000000c0026ed9        0x0 sys/alarm.32
 .data          0x00000000c0026ed9        0x0 sys/eject.32
 .data          0x00000000c0026ed9        0x0 sys/exit.32
 .data          0x00000000c0026ed9        0x0 sys/getcwd.32
 .data          0x00000000c0026ed9        0x0 sys/getpid.32
 .data          0x00000000c0026ed9        0x0 sys/getramdata.32
 .data          0x00000000c0026ed9        0x0 sys/getvgaptr.32
 .data          0x00000000c0026ed9        0x0 sys/kill.32
 .data          0x00000000c0026ed9        0x0 sys/loaddll.32
 .data          0x00000000c0026ed9        0x0 sys/pause.32
 .data          0x00000000c0026ed9        0x0 sys/pthread.32
 .data          0x00000000c0026ed9        0x0 sys/read.32
 .data          0x00000000c0026ed9        0x0 sys/registersignal.32
 .data          0x00000000c0026ed9        0x0 sys/registry.32
 .data          0x00000000c0026ed9        0x0 sys/sbrk.32
 .data          0x00000000c0026ed9        0x0 sys/setcwd.32
 .data          0x00000000c0026ed9        0x0 sys/settime.32
 .data          0x00000000c0026ed9        0x0 sys/symlink.32
 .data          0x00000000c0026ed9        0x0 sys/timezone.32
 .data          0x00000000c0026ed9        0x0 sys/truncate.32
 .data          0x00000000c0026ed9        0x0 sys/write.32
 .data          0x00000000c0026ed9        0x0 sys/wsbe.32
 .data          0x00000000c0026ed9        0x0 sys/yield.32
 .data          0x00000000c0026ed9        0x0 thr/alarm.32
 .data          0x00000000c0026ed9        0x0 thr/elf.32
 .data          0x00000000c0026ed9        0x0 thr/exec.32
 *fill*         0x00000000c0026ed9        0x3 
 .data          0x00000000c0026edc        0x4 thr/prcssthr.32
                0x00000000c0026edc                Thr::nextPID
 .data          0x00000000c0026ee0        0x0 vm86/vm8086.32
 .data          0x00000000c0026ee0      0x2a4 arch/i386/hal.32
                0x00000000c0026ee0                exceptionNames
                0x00000000c0027180                lastCode
 .data          0x00000000c0027184        0x0 arch/i386/intctrl.32
 .data          0x00000000c0027184        0x0 arch/i386/pic.32
 .data          0x00000000c0027184        0x0 arch/i386/rtc.32
 .data          0x00000000c0027184        0x0 arch/i386/vga.32
 .data          0x00000000c0027184        0x0 fs/fat/vfslink.32
 .data          0x00000000c0027184        0x0 fs/iso9660/helper.32
 .data          0x00000000c0027184        0x1 fs/iso9660/vfslink.32
                0x00000000c0027184                recentDriveletter
 .data          0x00000000c0027185        0x0 hal/sound/sndcard.32
 .data          0x00000000c0027185        0x0 hal/sound/sndport.32
 .data          0x00000000c0027185        0x0 hw/bus/isa.32
 .data          0x00000000c0027185        0x0 hw/bus/pci.32
 .data          0x00000000c0027185        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0027185        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0027185        0x0 hw/diskphys/ata.32
 .data          0x00000000c0027185        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0027185        0x0 hw/diskphys/sata.32
 .data          0x00000000c0027185        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0027185        0x0 hw/intctrl/apic.32
 .data          0x00000000c0027185        0x0 hw/timer/apictimer.32
 .data          0x00000000c0027185        0x0 hw/timer/pit.32
 .data          0x00000000c0027185        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0027185        0x0 crtn.32
 .data          0x00000000c0027185        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0027185        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0027185        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0027185        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0027188        0x0
 .got           0x00000000c0027188        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0027188        0x0
 .got.plt       0x00000000c0027188        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0027188        0x0
 .igot.plt      0x00000000c0027188        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0027188        0x0
 .tm_clone_table
                0x00000000c0027188        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0027188        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0027185      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0027185        0x3 
 .eh_frame      0x00000000c0027188        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0027188        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0027188       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00271e0       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0027220       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002728c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0028000       0x7d
 *(userkernel)
 userkernel     0x00000000c0028000       0x52 krnl/signal.32
                0x00000000c0028000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002802c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0028052       0x2b krnl/syscalls.32
                0x00000000c0028052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0029000        0x1
 *(align_previous)
 align_previous
                0x00000000c0029000        0x1 krnl/signal.32
                0x00000000c0029000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0029004        0x0
 .rel.got       0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0029001     0x74a7
                0x00000000c0029001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0029001       0x1f 
 COMMON         0x00000000c0029020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0029020                dcache
                0x00000000c0029060                cdDriveLetter
                0x00000000c0029080                icache
 *(.bss)
 .bss           0x00000000c00290c0        0x0 crti.32
 .bss           0x00000000c00290c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00290e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00290e4       0x1c 
 .bss           0x00000000c0029100      0x378 krnl/malloc.32
 .bss           0x00000000c0029478        0x0 libk/ctype.32
 .bss           0x00000000c0029478        0x0 libk/string.32
 .bss           0x00000000c0029478        0x0 arch/i386/cc.32
 .bss           0x00000000c0029478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0029478        0x8 
 .bss           0x00000000c0029480       0x88 fs/fat/ff.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0029508       0x18 
 .bss           0x00000000c0029520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0029eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0029eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0029eb8        0x8 
 .bss           0x00000000c0029ec0     0x2444 fs/symlink.32
                0x00000000c0029ec0                kiNumWaitingRoomSymlinks
                0x00000000c0029ee0                kiNewlyCreatedIDs
                0x00000000c0029f00                kiNewlyCreatedSymlinks
                0x00000000c002a300                kiSymlinkHashTable
                0x00000000c002c300                kiBaseSymlinkID
 .bss           0x00000000c002c304        0x4 fs/vfs.32
                0x00000000c002c304                installedFilesystems
 .bss           0x00000000c002c308        0x0 hal/bus.32
 .bss           0x00000000c002c308        0x0 hal/buzzer.32
 *fill*         0x00000000c002c308       0x18 
 .bss           0x00000000c002c320      0x348 hal/clock.32
                0x00000000c002c320                keLoadedTimezones
                0x00000000c002c324                keNumberOfTimezones
                0x00000000c002c340                keTimezoneStrings
                0x00000000c002c660                keDstOn
                0x00000000c002c661                keTimezoneHalfHourOffset
                0x00000000c002c664                keTimezoneHourOffset
 .bss           0x00000000c002c668        0x0 hal/device.32
 .bss           0x00000000c002c668        0x0 hal/diskctrl.32
 .bss           0x00000000c002c668        0x0 hal/diskphys.32
 .bss           0x00000000c002c668        0x0 hal/fpu.32
 *fill*         0x00000000c002c668       0x18 
 .bss           0x00000000c002c680      0x428 hal/keybrd.32
                0x00000000c002c680                keyboardWaitingTaskList
                0x00000000c002c684                keyboardSetupYet
                0x00000000c002c688                guiKeyboardHandler
                0x00000000c002c6a0                keystates
 *fill*         0x00000000c002caa8       0x18 
 .bss           0x00000000c002cac0       0x88 hal/logidisk.32
                0x00000000c002cac0                diskAssignments
                0x00000000c002cae0                disks
 .bss           0x00000000c002cb48        0x4 hal/mouse.32
                0x00000000c002cb48                guiMouseHandler
 .bss           0x00000000c002cb4c        0x0 hal/nic.32
 .bss           0x00000000c002cb4c        0x0 hal/partition.32
 .bss           0x00000000c002cb4c        0x0 hal/serial.32
 *fill*         0x00000000c002cb4c        0x4 
 .bss           0x00000000c002cb50        0x8 hal/timer.32
                0x00000000c002cb50                milliTenthsSinceBoot
 .bss           0x00000000c002cb58        0x0 hal/vcache.32
 .bss           0x00000000c002cb58        0x4 hal/video.32
                0x00000000c002cb58                screen
 *fill*         0x00000000c002cb5c        0x4 
 .bss           0x00000000c002cb60      0x480 hw/acpi.32
                0x00000000c002cb60                nextACPITable
                0x00000000c002cb80                acpiTables
                0x00000000c002cd80                usingXSDT
                0x00000000c002cd84                RSDTpointer
                0x00000000c002cd88                RSDPpointer
                0x00000000c002cd8c                nextAPICNMI
                0x00000000c002cda0                apicNMIInfo
                0x00000000c002ce20                legacyIRQFlags
                0x00000000c002ce40                ioapicDiscoveryNumber
                0x00000000c002ce60                ioapicFoundInMADT
                0x00000000c002ce80                ioapicAddresses
                0x00000000c002cf00                ioapicGSIBase
                0x00000000c002cf80                processorDiscoveryNumber
                0x00000000c002cfa0                matchingAPICID
                0x00000000c002cfc0                processorID
 .bss           0x00000000c002cfe0        0x0 krnl/assert.32
 .bss           0x00000000c002cfe0       0xe0 krnl/atexit.32
                0x00000000c002cfe0                KiNextAtexitHandler
                0x00000000c002d000                KiAtexitContexts
                0x00000000c002d060                KiAtexitHandlers
 .bss           0x00000000c002d0c0        0x0 krnl/bootmsg.32
 .bss           0x00000000c002d0c0        0x0 krnl/c++.32
 .bss           0x00000000c002d0c0        0x0 krnl/cdefs.32
 .bss           0x00000000c002d0c0        0x4 krnl/cm.32
 .bss           0x00000000c002d0c4        0x0 krnl/compat.32
 .bss           0x00000000c002d0c4       0x12 krnl/computer.32
                0x00000000c002d0c4                systemSleepFunction
                0x00000000c002d0c8                systemResetFunction
                0x00000000c002d0cc                systemShutdownFunction
                0x00000000c002d0d0                Krnl::computer
                0x00000000c002d0d4                KeIsPreemptionOn
                0x00000000c002d0d5                KeIsSchedulingOn
 .bss           0x00000000c002d0d6        0x0 krnl/crc32.32
 *fill*         0x00000000c002d0d6        0x2 
 .bss           0x00000000c002d0d8        0x8 krnl/env.32
                0x00000000c002d0d8                KeUserEnv
                0x00000000c002d0dc                KeSystemEnv
 .bss           0x00000000c002d0e0     0x2000 krnl/fault.32
                0x00000000c002d0e0                keInterruptContexts
                0x00000000c002e0e0                keInterruptHandlers
 .bss           0x00000000c002f0e0        0x6 krnl/gdt.32
                0x00000000c002f0e0                gdtDescr
 .bss           0x00000000c002f0e6        0x0 krnl/idle.32
 *fill*         0x00000000c002f0e6        0x2 
 .bss           0x00000000c002f0e8        0x6 krnl/idt.32
                0x00000000c002f0e8                idtDescr
 .bss           0x00000000c002f0ee        0x0 krnl/inlines.32
 *fill*         0x00000000c002f0ee       0x12 
 .bss           0x00000000c002f100       0x24 krnl/intlformat.32
                0x00000000c002f100                keLocale
 .bss           0x00000000c002f124        0x0 krnl/intops.32
 .bss           0x00000000c002f124        0x0 krnl/kheap.32
 .bss           0x00000000c002f124        0x0 krnl/mailbox.32
 .bss           0x00000000c002f124        0x4 krnl/main.32
                0x00000000c002f124                keBootSettings
 .bss           0x00000000c002f128        0x0 krnl/mutex.32
 .bss           0x00000000c002f128        0x1 krnl/panic.32
                0x00000000c002f128                KeIsKernelInPanic
 *fill*         0x00000000c002f129        0x3 
 .bss           0x00000000c002f12c       0x29 krnl/physmgr.32
                0x00000000c002f12c                Phys::forbidEvictions
                0x00000000c002f130                Phys::currentPagePointer
                0x00000000c002f134                Phys::highestMem
                0x00000000c002f138                Phys::oldPercent
                0x00000000c002f13c                Phys::usedPages
                0x00000000c002f140                Phys::usablePages
                0x00000000c002f144                Phys::dmaUsage
 .bss           0x00000000c002f155        0x0 krnl/pipe.32
 *fill*         0x00000000c002f155        0xb 
 .bss           0x00000000c002f160       0x48 krnl/powctrl.32
                0x00000000c002f160                powCtrlOnBattery
                0x00000000c002f180                currentPowerSettings
                0x00000000c002f1a4                secondsSinceLastUserIO
 .bss           0x00000000c002f1a8        0x8 krnl/random.32
                0x00000000c002f1a8                kiRandSeed
 .bss           0x00000000c002f1b0        0x0 krnl/resolve.32
 .bss           0x00000000c002f1b0        0x0 krnl/semaphore.32
 .bss           0x00000000c002f1b0        0x0 krnl/signal.32
 .bss           0x00000000c002f1b0        0x0 krnl/syscalls.32
 .bss           0x00000000c002f1b0        0x9 krnl/terminal.32
                0x00000000c002f1b0                terminalCycle
                0x00000000c002f1b4                activeTerminal
                0x00000000c002f1b8                VgaText::graphicMode
 *fill*         0x00000000c002f1b9        0x1 
 .bss           0x00000000c002f1ba        0x2 krnl/tss.32
                0x00000000c002f1ba                doubleFaultSelector
 *fill*         0x00000000c002f1bc        0x4 
 .bss           0x00000000c002f1c0       0x84 krnl/unixfile.32
                0x00000000c002f1c0                sfileLpt
                0x00000000c002f200                sfileCom
                0x00000000c002f224                sfileNul
                0x00000000c002f228                sfilePnt
                0x00000000c002f22c                sfileAux
                0x00000000c002f230                sfileCon
                0x00000000c002f234                initialFilesAdded
                0x00000000c002f238                unixFileLinkedList
 .bss           0x00000000c002f244       0x10 krnl/virtmgr.32
                0x00000000c002f244                twswaps
                0x00000000c002f248                swapBalance
                0x00000000c002f24c                Virt::swapfileBitmap
                0x00000000c002f250                keFirstVAS
 .bss           0x00000000c002f254        0x0 sys/alarm.32
 .bss           0x00000000c002f254        0x0 sys/eject.32
 .bss           0x00000000c002f254        0x0 sys/exit.32
 .bss           0x00000000c002f254        0x0 sys/getcwd.32
 .bss           0x00000000c002f254        0x0 sys/getpid.32
 .bss           0x00000000c002f254        0x0 sys/getramdata.32
 .bss           0x00000000c002f254        0x0 sys/getvgaptr.32
 .bss           0x00000000c002f254        0x0 sys/kill.32
 .bss           0x00000000c002f254        0x0 sys/loaddll.32
 .bss           0x00000000c002f254        0x0 sys/pause.32
 .bss           0x00000000c002f254        0x0 sys/pthread.32
 .bss           0x00000000c002f254        0x0 sys/read.32
 .bss           0x00000000c002f254        0x0 sys/registersignal.32
 .bss           0x00000000c002f254        0x0 sys/registry.32
 .bss           0x00000000c002f254        0x0 sys/sbrk.32
 .bss           0x00000000c002f254        0x0 sys/setcwd.32
 .bss           0x00000000c002f254        0x0 sys/settime.32
 .bss           0x00000000c002f254        0x0 sys/symlink.32
 .bss           0x00000000c002f254        0x0 sys/timezone.32
 .bss           0x00000000c002f254        0x0 sys/truncate.32
 .bss           0x00000000c002f254        0x0 sys/write.32
 .bss           0x00000000c002f254        0x0 sys/wsbe.32
 .bss           0x00000000c002f254        0x0 sys/yield.32
 .bss           0x00000000c002f254        0x0 thr/alarm.32
 *fill*         0x00000000c002f254        0xc 
 .bss           0x00000000c002f260      0x7a4 thr/elf.32
                0x00000000c002f260                Thr::driverLookupNext
                0x00000000c002f280                Thr::driverLookupLen
                0x00000000c002f480                Thr::driverLookupAddr
                0x00000000c002f680                Thr::driverNameLookup
                0x00000000c002f880                Thr::kernelSymbols
                0x00000000c002f900                Thr::kernelStringTable
                0x00000000c002f980                Thr::kernelSymbolTable
                0x00000000c002fa00                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002fa04        0x0 thr/exec.32
 *fill*         0x00000000c002fa04        0x4 
 .bss           0x00000000c002fa08       0x70 thr/prcssthr.32
                0x00000000c002fa08                KiRestorePreemptionValue
                0x00000000c002fa0c                KiPreemptionDisableCounter
                0x00000000c002fa10                cleanerThread
                0x00000000c002fa14                weNeedTheCleanerToNotBlock
                0x00000000c002fa18                retValLockStuff
                0x00000000c002fa1c                retValSchedLock
                0x00000000c002fa20                lockStuffLock
                0x00000000c002fa24                schedulerLock
                0x00000000c002fa28                taskSwitchesPostponedFlag
                0x00000000c002fa2c                postponeTaskSwitchesCounter
                0x00000000c002fa30                irqDisableCounter
                0x00000000c002fa34                terminatedTaskList
                0x00000000c002fa40                sleepingTaskList
                0x00000000c002fa4c                taskList
                0x00000000c002fa58                kernelProcess
 *fill*         0x00000000c002fa78        0x8 
 .bss           0x00000000c002fa80       0x40 vm86/vm8086.32
                0x00000000c002fa80                Vm::started8086Yet
                0x00000000c002fa84                Vm::vmRetV
                0x00000000c002fa88                Vm::vmDone
                0x00000000c002fa89                Vm::vmReady
                0x00000000c002fa8c                Vm::vm86Thread
                0x00000000c002fa90                Vm::vmToHostCommsPtr
                0x00000000c002faa0                Vm::vmToHostComms
 .bss           0x00000000c002fac0       0x54 arch/i386/hal.32
                0x00000000c002fac0                apic
                0x00000000c002fac4                guiPanicHandler
                0x00000000c002fac8                fpuOwner
                0x00000000c002facc                coproLoadFunc
                0x00000000c002fad0                coproSaveFunc
                0x00000000c002fad4                lastD
                0x00000000c002fad8                lastC
                0x00000000c002fadc                lastB
                0x00000000c002fae0                lastA
                0x00000000c002fae4                HalPageWriteCombiningFlag
                0x00000000c002fae8                HalPageGlobalFlag
                0x00000000c002faec                nmi
                0x00000000c002faf0                vendorIDString
                0x00000000c002fafd                familyID
                0x00000000c002fafe                model
                0x00000000c002faff                processorType
                0x00000000c002fb00                steppingID
                0x00000000c002fb04                vendor
                0x00000000c002fb08                opcodeDetectionMode
                0x00000000c002fb0c                features
 .bss           0x00000000c002fb14        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002fb14        0x0 arch/i386/pic.32
 .bss           0x00000000c002fb14        0x2 arch/i386/rtc.32
 .bss           0x00000000c002fb16        0x0 arch/i386/vga.32
 *fill*         0x00000000c002fb16        0xa 
 .bss           0x00000000c002fb20       0xf0 fs/fat/vfslink.32
                0x00000000c002fb20                FAT::fats
                0x00000000c002fb40                FAT::vfsToFatRemaps
                0x00000000c002fbc0                fatToVFSRemaps
 .bss           0x00000000c002fc10        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002fc10       0x10 
 .bss           0x00000000c002fc20      0x820 fs/iso9660/vfslink.32
                0x00000000c002fc20                iso9660Owner
                0x00000000c002fc24                recentSector
                0x00000000c002fc40                recentBuffer
 .bss           0x00000000c0030440        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0030440        0x0 hal/sound/sndport.32
 .bss           0x00000000c0030440        0x0 hw/bus/isa.32
 .bss           0x00000000c0030440        0xd hw/bus/pci.32
                0x00000000c0030440                thePCI
 .bss           0x00000000c003044d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c003044d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c003044d        0x3 
 .bss           0x00000000c0030450        0x8 hw/diskphys/ata.32
                0x00000000c0030450                ataSectorsWritten
                0x00000000c0030454                ataSectorsRead
 .bss           0x00000000c0030458        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0030458        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0030458        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0030458        0x8 
 .bss           0x00000000c0030460       0x41 hw/intctrl/apic.32
                0x00000000c0030460                noOfIOAPICs
                0x00000000c0030480                ioapics
                0x00000000c00304a0                IOAPICsSetupYet
 .bss           0x00000000c00304a1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00304a1        0x3 
 .bss           0x00000000c00304a4        0x4 hw/timer/pit.32
                0x00000000c00304a4                pitFreq
 .bss           0x00000000c00304a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00304a8        0x0 crtn.32
 .bss           0x00000000c00304a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00304a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00304a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00304a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00304a8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003794f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
