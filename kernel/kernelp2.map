Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootflags.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/apic.32
 .group         0x0000000000000000        0xc arch/i386/apic.32
 .comment       0x0000000000000000       0x12 arch/i386/apic.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootflags.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/apic.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21cce
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x27e dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006efd                Dbg::logs(char*)
                0x00000000c0006f27                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f45                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f66                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00070dd        0x3 
 .text          0x00000000c00070e0      0x2d4 dbg/usban.32
                0x00000000c00070e0                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000714c                __ubsan_handle_type_mismatch_v1
                0x00000000c0007228                __ubsan_handle_pointer_overflow
                0x00000000c0007254                __ubsan_handle_out_of_bounds
                0x00000000c0007280                __ubsan_handle_add_overflow
                0x00000000c00072ac                __ubsan_handle_load_invalid_value
                0x00000000c00072d8                __ubsan_handle_divrem_overflow
                0x00000000c0007304                __ubsan_handle_mul_overflow
                0x00000000c0007330                __ubsan_handle_sub_overflow
                0x00000000c000735c                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007388                __ubsan_handle_negate_overflow
 .text          0x00000000c00073b4      0x812 fs/symlink.32
                0x00000000c0007503                KiDeinitialiseSymlinks(void*)
                0x00000000c0007594                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c0007617                KeInitialiseSymlinks()
                0x00000000c0007779                KiIsSymlinkRegistered(char const*)
                0x00000000c00078e3                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a8a                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007bc6      0xd9c fs/vfs.32
                0x00000000c0007bc6                File::read(unsigned long long, void*, int*)
                0x00000000c0007c1e                File::write(unsigned long long, void*, int*)
                0x00000000c0007c76                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007cce                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cfc                File::isAtty()
                0x00000000c0007d00                Directory::isAtty()
                0x00000000c0007d04                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007d0a                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007d10                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007d16                File::~File()
                0x00000000c0007d16                File::~File()
                0x00000000c0007d3a                File::~File()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d88                Directory::~Directory()
                0x00000000c0007db2                Filesystem::Filesystem()
                0x00000000c0007db2                Filesystem::Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007de4                Filesystem::~Filesystem()
                0x00000000c0007e08                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e32                Fs::initVFS()
                0x00000000c0007e5c                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000808a                File::File(char const*, Process*, bool)
                0x00000000c000808a                File::File(char const*, Process*, bool)
                0x00000000c0008188                File::File(char const*, Process*)
                0x00000000c0008188                File::File(char const*, Process*)
                0x00000000c00081a6                File::open(FileOpenMode)
                0x00000000c0008204                File::close()
                0x00000000c0008264                File::seek(unsigned long long)
                0x00000000c00082ba                File::truncate(unsigned long long)
                0x00000000c0008310                File::tell(unsigned long long*)
                0x00000000c0008360                File::rewind()
                0x00000000c0008374                File::unlink()
                0x00000000c00083c0                File::rename(char const*)
                0x00000000c000840e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000846a                File::exists()
                0x00000000c00084a8                File::stat(unsigned long long*, bool*)
                0x00000000c0008509                Fs::setcwd(Process*, char*)
                0x00000000c0008668                Directory::Directory(char const*, Process*)
                0x00000000c0008668                Directory::Directory(char const*, Process*)
                0x00000000c0008730                Directory::open()
                0x00000000c000878c                Directory::close()
                0x00000000c00087ec                Directory::unlink()
                0x00000000c0008838                Directory::rename(char const*)
                0x00000000c0008886                Directory::exists()
                0x00000000c00088c4                Directory::read(dirent*)
                0x00000000c0008910                Directory::create()
                0x00000000c000895c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c0008962        0x2 
 .text          0x00000000c0008964       0x86 hal/bus.32
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c000899c                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
                0x00000000c00089c0                Bus::~Bus()
 .text          0x00000000c00089ea       0x9b hal/buzzer.32
                0x00000000c00089ea                KeBeepThread(void*)
                0x00000000c0008a2b                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a85        0x1 
 .text          0x00000000c0008a86      0xe4e hal/clock.32
                0x00000000c0008a86                KeLoadTimezoneStrings()
                0x00000000c0008e15                KeGetTimezoneStringFromID(int)
                0x00000000c0008eb2                KeUpdateTimezone(char const*)
                0x00000000c0008fac                KeSetTimezone(char const*)
                0x00000000c0009009                KeSetTimezone(int)
                0x00000000c000903c                KeLoadTimezone()
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009110                Clock::~Clock()
                0x00000000c000913a                Clock::timeInSecondsLocal()
                0x00000000c00091a4                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0009224                KeDatetimeToSeconds(datetime_t)
                0x00000000c0009552                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0009614                KeSecondsToDatetime(unsigned long long)
                0x00000000c00098a8                Clock::timeInDatetimeLocal()
 .text          0x00000000c00098d4      0x47a hal/device.32
                0x00000000c00098d4                Device::hibernate()
                0x00000000c00098d6                Device::wake()
                0x00000000c00098d8                Device::detect()
                0x00000000c00098da                Device::disableLegacy()
                0x00000000c00098dc                Device::powerSaving(PowerSavingLevel)
                0x00000000c00098de                DriverlessDevice::close(int, int, void*)
                0x00000000c00098e2                DriverlessDevice::detect()
                0x00000000c00098e4                DriverlessDevice::open(int, int, void*)
                0x00000000c00098f8                Device::~Device()
                0x00000000c00098f8                Device::~Device()
                0x00000000c0009906                Device::~Device()
                0x00000000c000992e                Device::findAndLoadDriver()
                0x00000000c000993c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0009962                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00099a2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00099cc                Device::getParent()
                0x00000000c00099d8                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00099f6                Device::addChild(Device*)
                0x00000000c0009a3a                Device::removeAllChildren()
                0x00000000c0009a80                Device::hibernateAll()
                0x00000000c0009ab0                Device::wakeAll()
                0x00000000c0009ae0                Device::detectAll()
                0x00000000c0009b10                Device::disableLegacyAll()
                0x00000000c0009b12                Device::loadDriversForAll()
                0x00000000c0009b14                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009b4a                Device::setName(char const*)
                0x00000000c0009b58                Device::Device(char const*)
                0x00000000c0009b58                Device::Device(char const*)
                0x00000000c0009c54                Device::getName()
                0x00000000c0009c5e                Device::closeAll()
                0x00000000c0009caa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009caa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009ce0                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d24                getDevicesOfType(DeviceType)
 *fill*         0x00000000c0009d4e        0x2 
 .text          0x00000000c0009d50       0x86 hal/diskctrl.32
                0x00000000c0009d50                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d50                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d88                HardDiskController::~HardDiskController()
                0x00000000c0009d88                HardDiskController::~HardDiskController()
                0x00000000c0009dac                HardDiskController::~HardDiskController()
 .text          0x00000000c0009dd6       0xe2 hal/diskphys.32
                0x00000000c0009dd6                PhysicalDisk::eject()
                0x00000000c0009dda                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009dda                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e42                PhysicalDisk::startCache()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e8e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009eb8        0x0 hal/fpu.32
 .text          0x00000000c0009eb8      0x874 hal/keybrd.32
                0x00000000c0009eb8                startGUI(void*)
                0x00000000c0009f1d                startGUIVESA(void*)
                0x00000000c0009f82                sendKeyToTerminal(unsigned char)
                0x00000000c000a058                sendKeyboardToken(KeyboardToken)
                0x00000000c000a514                clearInternalKeybuffer(VgaText*)
                0x00000000c000a549                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6a2                Keyboard::Keyboard(char const*)
                0x00000000c000a6a2                Keyboard::Keyboard(char const*)
                0x00000000c000a6de                Keyboard::~Keyboard()
                0x00000000c000a6de                Keyboard::~Keyboard()
                0x00000000c000a702                Keyboard::~Keyboard()
 .text          0x00000000c000a72c      0x3f8 hal/logidisk.32
                0x00000000c000a72c                LogicalDisk::close(int, int, void*)
                0x00000000c000a730                LogicalDisk::~LogicalDisk()
                0x00000000c000a730                LogicalDisk::~LogicalDisk()
                0x00000000c000a754                LogicalDisk::~LogicalDisk()
                0x00000000c000a77e                LogicalDisk::open(int, int, void*)
                0x00000000c000a792                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a7ca                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a810                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a810                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a8d0                LogicalDisk::assignDriveLetter()
                0x00000000c000a98a                LogicalDisk::mount()
                0x00000000c000a9d2                LogicalDisk::unmount()
                0x00000000c000a9e2                LogicalDisk::eject()
                0x00000000c000a9f6                LogicalDisk::unassignDriveLetter()
                0x00000000c000aa4c                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aab8                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab24       0x86 hal/mouse.32
                0x00000000c000ab24                Mouse::Mouse(char const*)
                0x00000000c000ab24                Mouse::Mouse(char const*)
                0x00000000c000ab5c                Mouse::~Mouse()
                0x00000000c000ab5c                Mouse::~Mouse()
                0x00000000c000ab80                Mouse::~Mouse()
 .text          0x00000000c000abaa       0x90 hal/nic.32
                0x00000000c000abaa                NIC::getMAC()
                0x00000000c000abb0                NIC::write(int, unsigned char*, int*)
                0x00000000c000abb6                NIC::NIC(char const*)
                0x00000000c000abb6                NIC::NIC(char const*)
                0x00000000c000abec                NIC::~NIC()
                0x00000000c000abec                NIC::~NIC()
                0x00000000c000ac10                NIC::~NIC()
 .text          0x00000000c000ac3a      0x33b hal/partition.32
                0x00000000c000ac3a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ace2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af75        0x3 
 .text          0x00000000c000af78       0x86 hal/serial.32
                0x00000000c000af78                Serial::Serial(char const*)
                0x00000000c000af78                Serial::Serial(char const*)
                0x00000000c000afb0                Serial::~Serial()
                0x00000000c000afb0                Serial::~Serial()
                0x00000000c000afd4                Serial::~Serial()
 *fill*         0x00000000c000affe        0x2 
 .text          0x00000000c000b000      0x230 hal/timer.32
                0x00000000c000b000                Timer::Timer(char const*)
                0x00000000c000b000                Timer::Timer(char const*)
                0x00000000c000b038                Timer::~Timer()
                0x00000000c000b038                Timer::~Timer()
                0x00000000c000b05c                Timer::~Timer()
                0x00000000c000b086                Timer::read()
                0x00000000c000b091                setupTimer(int)
                0x00000000c000b0cc                timerHandler(unsigned int)
 .text          0x00000000c000b230      0x60e hal/vcache.32
                0x00000000c000b230                VCache::VCache(PhysicalDisk*)
                0x00000000c000b230                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3a0                VCache::invalidateReadBuffer()
                0x00000000c000b3b0                VCache::writeWriteBuffer()
                0x00000000c000b3fc                VCache::~VCache()
                0x00000000c000b3fc                VCache::~VCache()
                0x00000000c000b454                VCache::~VCache()
                0x00000000c000b47c                VCache::write(unsigned long long, int, void*)
                0x00000000c000b64a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b83e      0x71d hal/video.32
                0x00000000c000b83e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b88a                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b8fa                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b98a                Video::clearScreen(unsigned int)
                0x00000000c000b9be                Video::putpixel(int, int, unsigned int)
                0x00000000c000b9cc                Video::readPixelApprox(int, int)
                0x00000000c000b9e0                Video::Video(char const*)
                0x00000000c000b9e0                Video::Video(char const*)
                0x00000000c000ba16                Video::~Video()
                0x00000000c000ba16                Video::~Video()
                0x00000000c000ba3a                Video::~Video()
                0x00000000c000ba64                Video::isMonochrome()
                0x00000000c000ba70                Video::getWidth()
                0x00000000c000ba7c                Video::getHeight()
                0x00000000c000ba88                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb44                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000beea                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000bf5b        0x1 
 .text          0x00000000c000bf5c     0x10ea hw/acpi.32
                0x00000000c000bf5c                ACPI::close(int, int, void*)
                0x00000000c000bf64                loadACPITables(unsigned char*)
                0x00000000c000c1c4                findRSDT(unsigned char*)
                0x00000000c000c310                findDataTable(unsigned char*, char*)
                0x00000000c000c384                scanMADT()
                0x00000000c000c834                ACPI::ACPI()
                0x00000000c000c834                ACPI::ACPI()
                0x00000000c000c884                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c980                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca4c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca54                ACPI::detectPCI()
                0x00000000c000cc60                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cc78                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d046        0x2 
 .text          0x00000000c000d048       0xea krnl/assert.32
                0x00000000c000d048                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d132       0xb6 krnl/atexit.32
                0x00000000c000d132                KeInitialiseAtexit()
                0x00000000c000d151                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d185                KeExecuteAtexit()
 .text          0x00000000c000d1e8       0x1e krnl/bootflags.32
                0x00000000c000d1e8                KeGetBootConfigurationFlag(BootConfigurationFlag)
                0x00000000c000d1f8                KeInitialiseBootConfigurationFlags()
 .text          0x00000000c000d206       0x9f krnl/bootmsg.32
                0x00000000c000d206                KeDisplaySplashScreen()
                0x00000000c000d235                KeSetBootMessage(char const*)
 .text          0x00000000c000d2a5       0x5f krnl/c++.32
                0x00000000c000d2a5                __cxa_atexit
                0x00000000c000d2a8                __cxa_finalize
                0x00000000c000d2a9                __stack_chk_fail
                0x00000000c000d2df                __cxa_pure_virtual
                0x00000000c000d2f0                operator new[](unsigned long)
                0x00000000c000d2f5                operator delete(void*, unsigned long)
                0x00000000c000d2fa                operator delete[](void*)
                0x00000000c000d2ff                operator delete[](void*, unsigned long)
 .text          0x00000000c000d304       0x44 krnl/cdefs.32
                0x00000000c000d304                CUnlockScheduler
                0x00000000c000d31c                CLockScheduler
                0x00000000c000d32c                CPrintf
 .text          0x00000000c000d348      0xd51 krnl/cm.32
                0x00000000c000d348                CmOpen(char const*)
                0x00000000c000d466                CmClose(Reghive_Tag*)
                0x00000000c000d47c                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d4b8                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d52f                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d56e                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d5a0                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d5dc                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d604                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d625                CmExpand(Reghive_Tag*, int)
                0x00000000c000d6a0                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d726                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d81a                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d952                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d9b3                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d9e3                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000da1a                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000da44                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000da84                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000db28                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000db56                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dcf3                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000dd40                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000ddba                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000de0d                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000ded1                zStrtok(char*, char const*)
                0x00000000c000df43                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000dfc4                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000e067                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000e099        0x3 
 .text          0x00000000c000e09c       0x1d krnl/compat.32
                0x00000000c000e09c                Krnl::handlePowerButton()
                0x00000000c000e0ac                Krnl::handleSleepButton()
 *fill*         0x00000000c000e0b9        0x1 
 .text          0x00000000c000e0ba       0xe3 krnl/computer.32
                0x00000000c000e0ba                Computer::close(int, int, void*)
                0x00000000c000e0c0                Computer::Computer()
                0x00000000c000e0c0                Computer::Computer()
                0x00000000c000e104                Computer::open(int, int, void*)
 .text          0x00000000c000e19d       0x2b krnl/crc32.32
                0x00000000c000e19d                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e1c8      0x5bf krnl/env.32
                0x00000000c000e1c8                EnvVarContainer::getEnv(char const*)
                0x00000000c000e206                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e2c8                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e2ca                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e4ee                EnvVarContainer::__loadSystem()
                0x00000000c000e508                EnvVarContainer::__loadUser()
                0x00000000c000e50a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e50a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e52c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e52c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e55c                KeGetEnv(Process*, char const*)
                0x00000000c000e5c1                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e5db                KeSetEnvUser(char const*, char const*)
                0x00000000c000e5fa                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e60d                KeDeleteEnvSystem(char const*)
                0x00000000c000e60e                KeDeleteEnvUser(char const*)
                0x00000000c000e60f                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e610                KeNewProcessEnv(Process*)
                0x00000000c000e632                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e67e                KeLoadSystemEnv()
                0x00000000c000e6ac                KeLoadUserEnv()
                0x00000000c000e6d2                KeFlushEnv()
                0x00000000c000e6d3                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e6f3                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e787        0x1 
 .text          0x00000000c000e788      0x371 krnl/fault.32
                0x00000000c000e788                KeSetupInterrupts()
                0x00000000c000e800                int_handler
                0x00000000c000e930                KeDisplayProgramFault(char const*)
                0x00000000c000e980                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e9e4                KePageFault(void*, void*)
                0x00000000c000ea48                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000ea58                KeOtherFault(void*, void*)
                0x00000000c000ea8c                KeOpcodeFault(void*, void*)
                0x00000000c000eae0                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000eaf9        0x1 
 .text          0x00000000c000eafa      0x1db krnl/gdt.32
                0x00000000c000eafa                GDTEntry::setBase(unsigned int)
                0x00000000c000eb16                GDTEntry::setLimit(unsigned int)
                0x00000000c000eb34                GDT::GDT()
                0x00000000c000eb34                GDT::GDT()
                0x00000000c000eb4a                GDT::addEntry(GDTEntry)
                0x00000000c000eb6c                GDT::getNumberOfEntries()
                0x00000000c000eb74                GDT::flush()
                0x00000000c000eb96                GDT::setup()
 .text          0x00000000c000ecd5       0x20 krnl/idle.32
                0x00000000c000ecd5                idleFunction(void*)
 *fill*         0x00000000c000ecf5        0x3 
 .text          0x00000000c000ecf8      0x46c krnl/idt.32
                0x00000000c000ecf8                IDTEntry::IDTEntry(bool)
                0x00000000c000ecf8                IDTEntry::IDTEntry(bool)
                0x00000000c000ed72                IDTEntry::setOffset(unsigned int)
                0x00000000c000ed88                IDT::IDT()
                0x00000000c000ed88                IDT::IDT()
                0x00000000c000ed8a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ed92                IDT::addEntry(IDTEntry, int)
                0x00000000c000edac                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000ede4                IDT::flush()
                0x00000000c000edfe                IDT::setup()
 .text          0x00000000c000f164       0x9a krnl/inlines.32
                0x00000000c000f164                CPU::current()
                0x00000000c000f170                operator new(unsigned long)
                0x00000000c000f175                operator delete(void*)
                0x00000000c000f17a                disableIRQs()
                0x00000000c000f17c                enableIRQs()
                0x00000000c000f17e                lockScheduler()
                0x00000000c000f186                unlockScheduler()
                0x00000000c000f198                lockStuff()
                0x00000000c000f1a6                unlockStuff()
                0x00000000c000f1e3                Virt::getAKernelVAS()
                0x00000000c000f1e9                __not_memcpy
 .text          0x00000000c000f1fe      0x2ae krnl/intlformat.32
                0x00000000c000f1fe                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f3e0                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f402                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f424                KeSetLocale(klocale_t)
                0x00000000c000f43a                KeInitialiseLocale()
                0x00000000c000f4a8                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f4a9                KeFormatCurrency(char*, int, double)
                0x00000000c000f4aa                KeFormatNumber(char*, long long, long long)
                0x00000000c000f4ab                KeFormatNumber(char*, double)
 .text          0x00000000c000f4ac      0x356 krnl/intops.32
                0x00000000c000f4ac                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f5c8                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f708                KeGetDigitsInNumber(long long)
                0x00000000c000f774                KeItoa(unsigned long long, char*)
                0x00000000c000f7a4                KeItoa(long long, char*)
                0x00000000c000f7d4                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f802      0x204 krnl/kheap.32
                0x00000000c000f802                sbrk
                0x00000000c000f896                sbrk_thunk
                0x00000000c000f8cc                mmap
                0x00000000c000f92a                munmap
                0x00000000c000f93f                liballoc_lock()
                0x00000000c000f94d                liballoc_unlock()
                0x00000000c000f965                liballoc_alloc(int)
                0x00000000c000f97d                liballoc_free(void*, int)
                0x00000000c000f998                realloc
                0x00000000c000f9ac                malloc
                0x00000000c000f9bc                free
                0x00000000c000f9cc                rfree
                0x00000000c000f9dc                calloc
 *fill*         0x00000000c000fa06        0x2 
 .text          0x00000000c000fa08      0x1d3 krnl/mailbox.32
                0x00000000c000fa08                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fa68                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fac8                KeMailboxCreate()
                0x00000000c000fafc                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fb60                KeMailboxGet(Mailbox*, void**)
                0x00000000c000fbc4                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fbdb      0x20b krnl/main.32
                0x00000000c000fbdb                KeFirstTask()
                0x00000000c000fce6                KeEntryPoint
 *fill*         0x00000000c000fde6        0x2 
 .text          0x00000000c000fde8       0x1a krnl/mutex.32
                0x00000000c000fde8                Mutex::Mutex()
                0x00000000c000fde8                Mutex::Mutex()
 .text          0x00000000c000fe02        0xc krnl/panic.32
                0x00000000c000fe02                KePanic(char const*)
 .text          0x00000000c000fe0e      0x666 krnl/physmgr.32
                0x00000000c000fe0e                Phys::allocateDMA(unsigned long)
                0x00000000c000fefc                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000ff37                Phys::setPageState(unsigned long, bool)
                0x00000000c000ff77                Phys::getPageState(unsigned long)
                0x00000000c000ff93                Phys::freePage(unsigned long)
                0x00000000c000fffc                Phys::allocatePage()
                0x00000000c00100da                Phys::allocateContiguousPages(int)
                0x00000000c0010155                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c001018d                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0010474      0x271 krnl/pipe.32
                0x00000000c0010474                Pipe::isAtty()
                0x00000000c0010478                Pipe::~Pipe()
                0x00000000c0010478                Pipe::~Pipe()
                0x00000000c001049c                Pipe::~Pipe()
                0x00000000c00104c4                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0010588                Pipe::read(unsigned long long, void*, int*)
                0x00000000c001067e                Pipe::Pipe(int)
                0x00000000c001067e                Pipe::Pipe(int)
 .text          0x00000000c00106e5      0x1a3 krnl/powctrl.32
                0x00000000c00106e5                KePowerThread(void*)
                0x00000000c0010717                KeChangePowerSettings(PowerSettings)
                0x00000000c001072d                KeUserIOReceived()
                0x00000000c0010738                KeSetupPowerManager()
                0x00000000c00107c1                KePrepareShutdown()
                0x00000000c00107e0                KeRegisterShutdownHandler(void (*)())
                0x00000000c00107ea                KeRegisterRestartHandler(void (*)())
                0x00000000c00107f4                KeRegisterSleepHandler(void (*)())
                0x00000000c00107fe                KeShutdown()
                0x00000000c0010834                KeSleep()
                0x00000000c0010840                KeHandlePowerButton()
                0x00000000c0010852                KeHandleSleepButton()
                0x00000000c0010864                KeRestart()
 .text          0x00000000c0010888       0x9b krnl/random.32
                0x00000000c0010888                KeRand()
                0x00000000c00108c8                KeSeedRand(unsigned int)
                0x00000000c00108f1                KeInitRand()
 *fill*         0x00000000c0010923        0x1 
 .text          0x00000000c0010924      0x26c krnl/resolve.32
                0x00000000c0010924                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010b90      0x415 krnl/semaphore.32
                0x00000000c0010b90                Semaphore::Semaphore(int)
                0x00000000c0010b90                Semaphore::Semaphore(int)
                0x00000000c0010bc0                Semaphore::tryAcquire()
                0x00000000c0010c94                Semaphore::assertLocked(char const*)
                0x00000000c0010d20                Semaphore::acquire(int)
                0x00000000c0010ed8                Semaphore::acquire()
                0x00000000c0010ef4                Semaphore::release()
 .text          0x00000000c0010fa5      0x3a8 krnl/signal.32
                0x00000000c0010fa5                KiSigKill(int)
                0x00000000c0010fb9                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010fba                KiDefaultSignalHandlerPause(int)
                0x00000000c0010fe6                KiDefaultSignalHandlerResume(int)
                0x00000000c0011012                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011017                KeInitSignals()
                0x00000000c0011089                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00110bf                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011140                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c001126f                KiCheckSignalZ
                0x00000000c00112c0                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00112fb                KiFinishSignalZ
 .text          0x00000000c001134d      0xe7d krnl/syscalls.32
                0x00000000c001134d                SysSeekDir(regs*)
                0x00000000c0011352                SysTellDir(regs*)
                0x00000000c0011357                SysVerify(regs*)
                0x00000000c0011361                SysGetArgc(regs*)
                0x00000000c0011375                SysTTYName(regs*)
                0x00000000c001137d                SysFormatDisk(regs*)
                0x00000000c00113e4                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011438                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011491                SysRealpath(regs*)
                0x00000000c00114df                SysReadDir(regs*)
                0x00000000c001155f                SysIsATTY(regs*)
                0x00000000c00115b9                SysSeek(regs*)
                0x00000000c0011617                SysTell(regs*)
                0x00000000c001168c                SysSize(regs*)
                0x00000000c0011706                SysSizeFromFilename(regs*)
                0x00000000c0011839                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c001196c                SysClose(regs*)
                0x00000000c00119d1                SysOpenDir(regs*)
                0x00000000c0011a4e                SysMakeDir(regs*)
                0x00000000c0011abc                SysCloseDir(regs*)
                0x00000000c0011b10                SysWait(regs*)
                0x00000000c0011b31                SysNotImpl(regs*)
                0x00000000c0011b4c                SysPanic(regs*)
                0x00000000c0011b67                SysRmdir(regs*)
                0x00000000c0011bc5                SysUnlink(regs*)
                0x00000000c0011c23                SysGetArgv(regs*)
                0x00000000c0011c70                SysUSleep(regs*)
                0x00000000c0011c9a                SysSpawn(regs*)
                0x00000000c0011d0b                SysGetEnv(regs*)
                0x00000000c0011dc0                SysSetFatAttrib(regs*)
                0x00000000c0011e29                SysShutdown(regs*)
                0x00000000c0011e86                SysPipe(regs*)
                0x00000000c0011ecb                SysGetUnixTime(regs*)
                0x00000000c0011f3e                string_ends_with(char const*, char const*)
                0x00000000c0011f89                SysOpen(regs*)
                0x00000000c0012188                KeSystemCall(regs*, void*)
 .text          0x00000000c00121ca      0xadd krnl/terminal.32
                0x00000000c00121ca                VgaText::isAtty()
                0x00000000c00121ce                VgaText::~VgaText()
                0x00000000c00121ce                VgaText::~VgaText()
                0x00000000c00121f2                VgaText::~VgaText()
                0x00000000c001221c                VgaText::read(unsigned long long, void*, int*)
                0x00000000c001223c                setTerminalScrollLock(bool)
                0x00000000c001223d                doTerminalCycle()
                0x00000000c001223e                addToTerminalCycle(VgaText*)
                0x00000000c001223f                scrollTerminalScrollLock(int)
                0x00000000c0012240                VgaText::updateTitle()
                0x00000000c0012242                VgaText::load()
                0x00000000c0012244                VgaText::updateCursor()
                0x00000000c001225a                VgaText::doANSI_SGR(int)
                0x00000000c00122ce                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00122de                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00122ee                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c001230e                VgaText::setTitleTextColour(VgaColour)
                0x00000000c001231a                VgaText::setTitleColour(VgaColour)
                0x00000000c0012326                VgaText::setTitle(char*)
                0x00000000c0012328                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c001233a                VgaText::scrollScreen()
                0x00000000c00123cc                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00123dc                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0012488                VgaText::getCursorX()
                0x00000000c0012490                VgaText::getCursorY()
                0x00000000c0012498                VgaText::setCursor(int, int)
                0x00000000c00124af                setActiveTerminal(VgaText*)
                0x00000000c00124fa                VgaText::clearScreen()
                0x00000000c0012548                VgaText::setCursorX(int)
                0x00000000c0012560                VgaText::setCursorY(int)
                0x00000000c0012578                VgaText::incrementCursor(bool)
                0x00000000c00125cc                VgaText::decrementCursor(bool)
                0x00000000c00125ee                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00126be                VgaText::putchar(char)
                0x00000000c00127a6                VgaText::putx(unsigned int)
                0x00000000c00127ec                VgaText::puts(char const*)
                0x00000000c0012812                VgaText::write(unsigned long long, void*, int*)
                0x00000000c001285e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00129d8                VgaText::VgaText(char const*)
                0x00000000c00129d8                VgaText::VgaText(char const*)
                0x00000000c0012b38                VgaText::receiveKey(unsigned char)
                0x00000000c0012ca6                VgaText::doUpdate()
 *fill*         0x00000000c0012ca7        0x1 
 .text          0x00000000c0012ca8      0x224 krnl/tss.32
                0x00000000c0012ca8                TSS::TSS()
                0x00000000c0012ca8                TSS::TSS()
                0x00000000c0012cb8                TSS::setESP(unsigned long)
                0x00000000c0012ccc                TSS::flush()
                0x00000000c0012cec                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012ecc      0x4ce krnl/unixfile.32
                0x00000000c0012ecc                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012f22                ReservedFilename::isAtty()
                0x00000000c0012f3e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012f9c                UnixFile::getFileDescriptor()
                0x00000000c0012fa4                UnixFile::UnixFile(int)
                0x00000000c0012fa4                UnixFile::UnixFile(int)
                0x00000000c0013158                ReservedFilename::ReservedFilename(int)
                0x00000000c0013158                ReservedFilename::ReservedFilename(int)
                0x00000000c001318a                UnixFile::~UnixFile()
                0x00000000c001318a                UnixFile::~UnixFile()
                0x00000000c0013226                UnixFile::~UnixFile()
                0x00000000c001324e                ReservedFilename::~ReservedFilename()
                0x00000000c001324e                ReservedFilename::~ReservedFilename()
                0x00000000c0013272                ReservedFilename::~ReservedFilename()
                0x00000000c0013299                KeGetFileFromDescriptor(int)
 .text          0x00000000c001339a     0x134e krnl/virtmgr.32
                0x00000000c001339a                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00133d4                Virt::getPageState(unsigned long)
                0x00000000c00133f7                Virt::allocateKernelVirtualPages(int)
                0x00000000c0013513                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0013536                Virt::swapIDToSector(unsigned long)
                0x00000000c001354c                Virt::allocateSwapfilePage()
                0x00000000c00135cb                Virt::virtualMemorySetup()
                0x00000000c001361c                Virt::setupPageSwapping(int)
                0x00000000c001368e                VAS::setCPUSpecific(unsigned long)
                0x00000000c0013690                VAS::VAS(VAS*)
                0x00000000c0013690                VAS::VAS(VAS*)
                0x00000000c00136a8                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00136d6                VAS::getPageTableEntry(unsigned long)
                0x00000000c00136f5                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0013832                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0013856                VAS::virtualToPhysical(unsigned long)
                0x00000000c0013870                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c00138b2                VAS::VAS()
                0x00000000c00138b2                VAS::VAS()
                0x00000000c001391c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c001393c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0013968                VAS::~VAS()
                0x00000000c0013968                VAS::~VAS()
                0x00000000c0013ad0                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013bd8                VAS::allocatePages(int, int)
                0x00000000c0013cca                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013d24                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013e14                VAS::VAS(bool)
                0x00000000c0013e14                VAS::VAS(bool)
                0x00000000c0013ffc                VAS::evict(unsigned long)
                0x00000000c0014100                VAS::canLockPage(unsigned long)
                0x00000000c001411a                VAS::unlockPage(unsigned long)
                0x00000000c001414e                VAS::canLockPages(unsigned long, int)
                0x00000000c001418a                VAS::unlockPages(unsigned long, int)
                0x00000000c00141c6                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0014366                VAS::lockPage(unsigned long)
                0x00000000c00143d8                VAS::lockPages(unsigned long, int)
                0x00000000c0014414                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0014488                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00144b4                VAS::scanForEviction()
                0x00000000c00145ed                mapVASFirstTime
 .text          0x00000000c00146e8       0x2f sys/alarm.32
                0x00000000c00146e8                SysAlarm(regs*)
 .text          0x00000000c0014717       0x36 sys/eject.32
                0x00000000c0014717                SysEject(regs*)
 .text          0x00000000c001474d       0x18 sys/exit.32
                0x00000000c001474d                SysExit(regs*)
 .text          0x00000000c0014765       0x1f sys/getcwd.32
                0x00000000c0014765                SysGetCwd(regs*)
 .text          0x00000000c0014784       0x26 sys/getpid.32
                0x00000000c0014784                SysGetPID(regs*)
 .text          0x00000000c00147aa       0x21 sys/getramdata.32
                0x00000000c00147aa                SysGetRAMData(regs*)
 .text          0x00000000c00147cb       0xbe sys/getvgaptr.32
                0x00000000c00147cb                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014889        0x3 
 .text          0x00000000c001488c       0xb9 sys/kill.32
                0x00000000c001488c                SysKill(regs*)
 .text          0x00000000c0014945       0xa8 sys/loaddll.32
                0x00000000c0014945                SysLoadDLL(regs*)
 .text          0x00000000c00149ed       0x12 sys/pause.32
                0x00000000c00149ed                SysPause(regs*)
 .text          0x00000000c00149ff       0x49 sys/pthread.32
                0x00000000c00149ff                SysPthreadCreate(regs*)
                0x00000000c0014a17                SysPthreadGetTID(regs*)
                0x00000000c0014a21                SysInternalPthreadGetContext(regs*)
                0x00000000c0014a26                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c0014a2b                SysPthreadJoin(regs*)
                0x00000000c0014a30                SysPthreadExit(regs*)
 .text          0x00000000c0014a48       0x68 sys/read.32
                0x00000000c0014a48                SysRead(regs*)
 .text          0x00000000c0014ab0       0x29 sys/registersignal.32
                0x00000000c0014ab0                SysRegisterSignal(regs*)
 .text          0x00000000c0014ad9      0x1cc sys/registry.32
                0x00000000c0014ad9                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014b1d                SysRegistryReadExtent(regs*)
                0x00000000c0014b65                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014b7c                SysRegistryEnterDirectory(regs*)
                0x00000000c0014b93                SysRegistryGetNext(regs*)
                0x00000000c0014baa                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014be4                SysRegistryOpen(regs*)
                0x00000000c0014bf8                SysRegistryClose(regs*)
                0x00000000c0014c0f                SysRegistryEasyReadString(regs*)
                0x00000000c0014c5b                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014ca5       0x55 sys/sbrk.32
                0x00000000c0014ca5                SysSbrk(regs*)
 .text          0x00000000c0014cfa       0x1c sys/setcwd.32
                0x00000000c0014cfa                SysSetCwd(regs*)
 .text          0x00000000c0014d16       0xf1 sys/settime.32
                0x00000000c0014d16                SysSetTime(regs*)
 .text          0x00000000c0014e07       0x73 sys/symlink.32
                0x00000000c0014e07                SysSymlink(regs*)
 .text          0x00000000c0014e7a       0x3e sys/timezone.32
                0x00000000c0014e7a                SysTimezone(regs*)
 .text          0x00000000c0014eb8       0xfc sys/truncate.32
                0x00000000c0014eb8                SysTruncate(regs*)
 .text          0x00000000c0014fb4       0x68 sys/write.32
                0x00000000c0014fb4                SysWrite(regs*)
 .text          0x00000000c001501c       0x9d sys/wsbe.32
                0x00000000c001501c                SysWsbe(regs*)
 .text          0x00000000c00150b9       0x28 sys/yield.32
                0x00000000c00150b9                SysYield(regs*)
 *fill*         0x00000000c00150e1        0x3 
 .text          0x00000000c00150e4      0x28d thr/alarm.32
                0x00000000c00150e4                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c0015280                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c0015371     0x12cc thr/elf.32
                0x00000000c0015371                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00155fc                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001589d                Thr::runtimeReferenceHelper()
                0x00000000c00158b0                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00158ff                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015bbd                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0016320                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0016352                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0016389                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00163a3                Thr::loadDLL(char const*, bool)
                0x00000000c0016604                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c001663d       0x5a thr/exec.32
                0x00000000c001663d                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0016697        0x1 
 .text          0x00000000c0016698     0x1269 thr/prcssthr.32
                0x00000000c0016698                userModeEntryPoint(void*)
                0x00000000c00166c4                changeTSS
                0x00000000c00166f4                switchToThread(ThreadControlBlock*)
                0x00000000c00167b4                Process::addArgs(char**)
                0x00000000c0016820                Process::Process(char const*, Process*, char**)
                0x00000000c0016820                Process::Process(char const*, Process*, char**)
                0x00000000c0016a58                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016a58                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016c44                taskStartupFunction
                0x00000000c0016c50                KeDisablePreemption()
                0x00000000c0016c78                KeRestorePreemption()
                0x00000000c0016c98                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016dd8                Process::createUserThread()
                0x00000000c0016df8                setupMultitasking(void (*)())
                0x00000000c0016f40                schedule()
                0x00000000c0016fd4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0017000                blockTask(TaskState)
                0x00000000c001703c                waitTask(int, int*, int)
                0x00000000c0017080                milliTenthSleepUntil(unsigned long long)
                0x00000000c0017134                milliTenthSleep(unsigned long long)
                0x00000000c001714c                sleep(unsigned long long)
                0x00000000c001716c                sleep(unsigned int)
                0x00000000c0017184                milliTenthSleep(unsigned int)
                0x00000000c00171a4                taskReturned
                0x00000000c00171ec                KeProcessFromPID(int)
                0x00000000c0017298                unblockTask(ThreadControlBlock*)
                0x00000000c001734c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001761c                cleanerTaskFunction(void*)
                0x00000000c0017734                KeTerminateCurrentThread(int)
 .text          0x00000000c0017901      0xe86 vm86/vm8086.32
                0x00000000c0017901                Vm::inbv(unsigned short)
                0x00000000c0017914                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0017946                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0017956                Vm::getSegment(unsigned int)
                0x00000000c001795e                Vm::getOffset(unsigned int)
                0x00000000c0017963                Vm::mainloop2()
                0x00000000c00179a4                Vm::mainVm8086Loop(void*)
                0x00000000c00179b8                Vm::mainloop3(unsigned long)
                0x00000000c00179ea                Vm::initialise8086()
                0x00000000c0017a2e                Vm::resetConventionalMemory8086()
                0x00000000c0017a2f                Vm::finish8086()
                0x00000000c0017aa0                Vm::getOutput8086(unsigned char*)
                0x00000000c0017ac5                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017c10                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017e55                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017f01                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017f12                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017f24                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017f35                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017f4a                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017f60                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017f75                Vm::faultHandler(regs*)
 *fill*         0x00000000c0018787        0x1 
 .text          0x00000000c0018788      0x45f arch/i386/apic.32
                0x00000000c0018788                IOAPIC::close(int, int, void*)
                0x00000000c001878e                apicGetBase()
                0x00000000c00187c8                IOAPIC::IOAPIC()
                0x00000000c00187c8                IOAPIC::IOAPIC()
                0x00000000c00187f0                apicOpen()
                0x00000000c001897c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c00189ae                IOAPIC::read(int)
                0x00000000c00189d6                IOAPIC::open(int, int, void*)
                0x00000000c0018abc                IOAPIC::write(int, int)
                0x00000000c0018ae8                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0018be7        0x1 
 .text          0x00000000c0018be8     0x1f41 arch/i386/hal.32
                0x00000000c0018be8                noCopro(unsigned long)
                0x00000000c0018be9                HalRestart()
                0x00000000c0018bf4                HalShutdown()
                0x00000000c0018bf5                HalSleep()
                0x00000000c0018bf6                CPU::close(int, int, void*)
                0x00000000c0018bf9                x86ReadCMOS(unsigned char)
                0x00000000c0018c4d                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0018caf                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0018cce                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018ceb                AMD_K6_writeback(int, int, int)
                0x00000000c0018dab                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018e49                cpuidCheckEDX(unsigned int)
                0x00000000c0018e76                cpuidCheckECX(unsigned int)
                0x00000000c0018ea4                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018ed2                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018f00                HalDetectFeatures()
                0x00000000c0019ceb                HalEnableNMI()
                0x00000000c0019cfe                HalDisableNMI()
                0x00000000c0019d11                HalGetNMIState()
                0x00000000c0019d17                x86rdmsr(unsigned int)
                0x00000000c0019d55                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0019d9a                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0019db0                HalFindRSDP()
                0x00000000c0019e8d                HalHandlePageFault(void*, void*)
                0x00000000c0019ebc                HalHandleOpcodeFault(void*, void*)
                0x00000000c0019efe                HalDisplayDebugInfo(void*)
                0x00000000c001a28c                HalReceivedNMI()
                0x00000000c001a327                HalSystemIdle()
                0x00000000c001a386                i386SaveCoprocessor(void*)
                0x00000000c001a39a                i386LoadCoprocessor(void*)
                0x00000000c001a3ae                x87EmulHandler(regs*, void*)
                0x00000000c001a44b                HalInitialiseCoprocessor()
                0x00000000c001a4cf                HalPanic(char const*)
                0x00000000c001a5e3                HalQueryPerformanceCounter()
                0x00000000c001a5f3                HalInitialise()
                0x00000000c001a7db                HalMakeBeep(int)
                0x00000000c001a815                HalGetRand()
                0x00000000c001a818                HalEndOfInterrupt(int)
                0x00000000c001a844                CPU::CPU()
                0x00000000c001a844                CPU::CPU()
                0x00000000c001a8c8                CPU::setupSMEP()
                0x00000000c001a8d4                CPU::setupUMIP()
                0x00000000c001a8de                CPU::setupTSC()
                0x00000000c001a8e8                CPU::setupLargePages()
                0x00000000c001a8f2                CPU::setupPAT()
                0x00000000c001a924                CPU::setupMTRR()
                0x00000000c001a926                CPU::setupGlobalPages()
                0x00000000c001a930                CPU::allowUsermodeDataAccess()
                0x00000000c001a93e                CPU::prohibitUsermodeDataAccess()
                0x00000000c001a94c                CPU::setupSMAP()
                0x00000000c001a95a                CPU::setupFeatures()
                0x00000000c001aa26                CPU::open(int, int, void*)
 .text          0x00000000c001ab29      0x268 arch/i386/intctrl.32
                0x00000000c001ab29                convertLegacyIRQNumber(int)
                0x00000000c001ab65                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001abaf                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001acec                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001ad20                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001ad91        0x3 
 .text          0x00000000c001ad94      0x2dc arch/i386/pic.32
                0x00000000c001ad94                picIoWait()
                0x00000000c001ad9c                picDisable()
                0x00000000c001add0                picGetIRQReg(int)
                0x00000000c001ae4c                picOpen()
                0x00000000c001afd0                picEOI(int)
 .text          0x00000000c001b070      0x5ed arch/i386/rtc.32
                0x00000000c001b070                RTC::open(int, int, void*)
                0x00000000c001b074                RTC::close(int, int, void*)
                0x00000000c001b078                RTC::timeInSecondsUTC()
                0x00000000c001b08a                RTC::timeInDatetimeUTC()
                0x00000000c001b0b0                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b0ee                RTC::~RTC()
                0x00000000c001b0ee                RTC::~RTC()
                0x00000000c001b112                RTC::~RTC()
                0x00000000c001b13c                RTC::get_update_in_progress_flag()
                0x00000000c001b150                RTC::completeRTCRefresh()
                0x00000000c001b3fe                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b574                rtcIRQHandler(regs*, void*)
                0x00000000c001b5b4                RTC::RTC()
                0x00000000c001b5b4                RTC::RTC()
 *fill*         0x00000000c001b65d        0x3 
 .text          0x00000000c001b660      0x1f4 arch/i386/vga.32
                0x00000000c001b660                HalConsoleScroll(int, int)
                0x00000000c001b768                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001b7cc                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001b854     0x14f3 fs/fat/vfslink.32
                0x00000000c001b854                FAT::getName()
                0x00000000c001b85c                FAT::tell(void*, unsigned long long*)
                0x00000000c001b898                FAT::stat(void*, unsigned long long*)
                0x00000000c001b8d4                FAT::~FAT()
                0x00000000c001b8d4                FAT::~FAT()
                0x00000000c001b8f8                FAT::~FAT()
                0x00000000c001b920                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b9c4                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001baa4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001bc88                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001bea4                FAT::allocateSwapfile(char const*, int)
                0x00000000c001c064                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c1d4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001c234                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c294                FAT::close(void*)
                0x00000000c001c2e8                FAT::closeDir(void*)
                0x00000000c001c33c                FAT::truncate(void*, unsigned long long)
                0x00000000c001c3a8                FAT::seek(void*, unsigned long long)
                0x00000000c001c400                fatWrapperReadDisk
                0x00000000c001c440                fatWrapperWriteDisk
                0x00000000c001c480                fatWrapperIoctl
                0x00000000c001c5a0                FAT::FAT()
                0x00000000c001c5a0                FAT::FAT()
                0x00000000c001c5f8                FAT::fixFilepath(char*)
                0x00000000c001c638                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c7ac                FAT::openDir(char const*, void**)
                0x00000000c001c85c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c954                FAT::unlink(char const*)
                0x00000000c001c9d4                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001cb8c                FAT::rename(char const*, char const*)
                0x00000000c001cc58                FAT::mkdir(char const*)
                0x00000000c001ccd8                FAT::exists(char const*)
 *fill*         0x00000000c001cd47        0x1 
 .text          0x00000000c001cd48       0x94 fs/iso9660/helper.32
                0x00000000c001cd48                isoReadDiscSectorHelper
                0x00000000c001cda4                iso_kprintf
                0x00000000c001cdc0                iso_kprintfd
 .text          0x00000000c001cddc      0x71a fs/iso9660/vfslink.32
                0x00000000c001cddc                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001cde2                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001cde8                ISO9660::getName()
                0x00000000c001cdee                ISO9660::closeDir(void*)
                0x00000000c001cdf8                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001cdfe                ISO9660::unlink(char const*)
                0x00000000c001ce04                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001ce0a                ISO9660::rename(char const*, char const*)
                0x00000000c001ce10                ISO9660::mkdir(char const*)
                0x00000000c001ce16                ISO9660::~ISO9660()
                0x00000000c001ce16                ISO9660::~ISO9660()
                0x00000000c001ce3a                ISO9660::~ISO9660()
                0x00000000c001ce62                ISO9660::exists(char const*)
                0x00000000c001ce76                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001cf5c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001cfa4                ISO9660::seek(void*, unsigned long long)
                0x00000000c001cfe6                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001d024                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001d076                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d1b8                ISO9660::close(void*)
                0x00000000c001d1e8                ISO9660::openDir(char const*, void**)
                0x00000000c001d2c2                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d3dd                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d45c                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001d4ce                ISO9660::ISO9660()
                0x00000000c001d4ce                ISO9660::ISO9660()
 .text          0x00000000c001d4f6      0x26c hal/sound/sndcard.32
                0x00000000c001d4f6                SoundCard::beginPlayback()
                0x00000000c001d504                SoundCard::stopPlayback()
                0x00000000c001d512                SoundCard::SoundCard(char const*)
                0x00000000c001d512                SoundCard::SoundCard(char const*)
                0x00000000c001d5b0                SoundCard::~SoundCard()
                0x00000000c001d5b0                SoundCard::~SoundCard()
                0x00000000c001d5d4                SoundCard::~SoundCard()
                0x00000000c001d5fe                SoundCard::configureRates(int, int, int)
                0x00000000c001d62e                SoundCard::getSamples16(int, short*)
                0x00000000c001d68a                SoundCard::getSamples32(int, int*)
                0x00000000c001d710                SoundCard::addChannel(SoundPort*)
                0x00000000c001d74e                SoundCard::removeChannel(int)
 *fill*         0x00000000c001d762        0x2 
 .text          0x00000000c001d764      0x42f hal/sound/sndport.32
                0x00000000c001d764                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d764                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d7f0                SoundPort::~SoundPort()
                0x00000000c001d7f0                SoundPort::~SoundPort()
                0x00000000c001d824                SoundPort::unpause()
                0x00000000c001d830                SoundPort::pause()
                0x00000000c001d83c                SoundPort::getBufferUsed()
                0x00000000c001d844                SoundPort::getBufferSize()
                0x00000000c001d84c                SoundPort::buffer8(signed char*, int)
                0x00000000c001d8e0                SoundPort::buffer16(short*, int)
                0x00000000c001d974                SoundPort::buffer32(int*, int)
                0x00000000c001da00                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001dad0                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 *fill*         0x00000000c001db93        0x1 
 .text          0x00000000c001db94      0xc25 hw/bus/pci.32
                0x00000000c001db94                PCI::open(int, int, void*)
                0x00000000c001dbb2                PCI::close(int, int, void*)
                0x00000000c001dbb6                PCI::PCI()
                0x00000000c001dbb6                PCI::PCI()
                0x00000000c001dc4e                PCI::readBAR8(unsigned int, int)
                0x00000000c001dc6a                PCI::readBAR16(unsigned int, int)
                0x00000000c001dc88                PCI::readBAR32(unsigned int, int)
                0x00000000c001dca4                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001dcc4                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001dce6                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001dd06                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dd7c                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001de26                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001de4a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001de72                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001debc                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001dee4                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001df08                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001df2c                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001df54                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dfb8                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001e09e                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e368                PCI::checkBus(unsigned char)
                0x00000000c001e38c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e572                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e6ee                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e760                PCI::detect()
 *fill*         0x00000000c001e7b9        0x1 
 .text          0x00000000c001e7ba      0xe52 hw/diskctrl/ide.32
                0x00000000c001e7ba                IDE::close(int, int, void*)
                0x00000000c001e7be                IDE::IDE()
                0x00000000c001e7be                IDE::IDE()
                0x00000000c001e7f2                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e804                selectDrive(unsigned char, unsigned char)
                0x00000000c001e806                IDE::getBase(unsigned char)
                0x00000000c001e818                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001e8d8                IDE::read(unsigned char, unsigned char)
                0x00000000c001e98c                IDE::waitInterrupt(unsigned char)
                0x00000000c001e9ef                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ea0b                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ea28                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ea72                IDE::open(int, int, void*)
                0x00000000c001efca                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001f09a                IDE::detect()
                0x00000000c001f4fe                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f5b8                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f60c      0x33f hw/diskctrl/satabus.32
                0x00000000c001f60c                SATABus::close(int, int, void*)
                0x00000000c001f610                SATABus::detect()
                0x00000000c001f612                SATABus::SATABus()
                0x00000000c001f612                SATABus::SATABus()
                0x00000000c001f698                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f6ca                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f712                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f732                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f75c                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f86e                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001f918                SATABus::open(int, int, void*)
 *fill*         0x00000000c001f94b        0x1 
 .text          0x00000000c001f94c      0x7c1 hw/diskphys/ata.32
                0x00000000c001f94c                ATA::close(int, int, void*)
                0x00000000c001f970                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001f972                ATA::ATA()
                0x00000000c001f972                ATA::ATA()
                0x00000000c001f9a0                ATA::flush(bool)
                0x00000000c001f9ee                ATA::readyForCommand()
                0x00000000c001fa3a                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001fe42                ATA::read(unsigned long long, int, void*)
                0x00000000c001fe8e                ATA::write(unsigned long long, int, void*)
                0x00000000c001feda                ATA::detectCHS()
                0x00000000c001ff04                ATA::open(int, int, void*)
                0x00000000c00200ef                combineCharAndColour(char, unsigned char)
                0x00000000c0020100                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c002010d        0x1 
 .text          0x00000000c002010e      0x612 hw/diskphys/atapi.32
                0x00000000c002010e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c0020114                ATAPI::close(int, int, void*)
                0x00000000c0020138                ATAPI::ATAPI()
                0x00000000c0020138                ATAPI::ATAPI()
                0x00000000c0020166                ATAPI::readyForCommand()
                0x00000000c00201b8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0020478                ATAPI::diskRemoved()
                0x00000000c00204b2                ATAPI::eject()
                0x00000000c00204fa                ATAPI::diskInserted()
                0x00000000c0020506                ATAPI::detectMedia()
                0x00000000c00205c6                ATAPI::open(int, int, void*)
                0x00000000c00206a6                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020720      0x44a hw/diskphys/sata.32
                0x00000000c0020720                SATA::close(int, int, void*)
                0x00000000c0020744                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0020746                SATA::open(int, int, void*)
                0x00000000c00207fe                SATA::SATA()
                0x00000000c00207fe                SATA::SATA()
                0x00000000c002082c                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020ab2                SATA::read(unsigned long long, int, void*)
                0x00000000c0020afe                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020b6a      0x5dc hw/diskphys/satapi.32
                0x00000000c0020b6a                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020b70                SATAPI::close(int, int, void*)
                0x00000000c0020b94                SATAPI::SATAPI()
                0x00000000c0020b94                SATAPI::SATAPI()
                0x00000000c0020bc2                SATAPI::diskRemoved()
                0x00000000c0020bc4                SATAPI::diskInserted()
                0x00000000c0020be0                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020eca                SATAPI::eject()
                0x00000000c0020f06                SATAPI::detectMedia()
                0x00000000c0020f5c                SATAPI::open(int, int, void*)
                0x00000000c002105c                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0021146        0x2 
 .text          0x00000000c0021148       0xf0 hw/timer/apictimer.32
                0x00000000c0021148                APICTimer::close(int, int, void*)
                0x00000000c0021150                apicTimerHandler(regs*, void*)
                0x00000000c0021178                APICTimer::open(int, int, void*)
                0x00000000c00211e8                APICTimer::write(int)
                0x00000000c0021210                APICTimer::APICTimer()
                0x00000000c0021210                APICTimer::APICTimer()
 .text          0x00000000c0021238      0x1ad hw/timer/pit.32
                0x00000000c0021238                PIT::write(int)
                0x00000000c00212bc                pitHandler(regs*, void*)
                0x00000000c00212e4                PIT::open(int, int, void*)
                0x00000000c0021334                PIT::close(int, int, void*)
                0x00000000c0021364                PIT::PIT()
                0x00000000c0021364                PIT::PIT()
 *fill*         0x00000000c00213e5        0xb 
 .text          0x00000000c00213f0       0x6f arch/i386/avx.32
                0x00000000c00213f0                avxDetect
                0x00000000c002141a                avxSave
                0x00000000c002142b                avxLoad
                0x00000000c002143c                avxInit
                0x00000000c002145e                avxClose
 *fill*         0x00000000c002145f        0x1 
 .text          0x00000000c0021460      0x2b4 arch/i386/interrupt.32
                0x00000000c0021460                isr0
                0x00000000c0021470                isr1
                0x00000000c002147a                isr2
                0x00000000c0021484                isr3
                0x00000000c002148e                isr4
                0x00000000c0021498                isr5
                0x00000000c00214a2                isr6
                0x00000000c00214ac                isr7
                0x00000000c00214b6                isr8
                0x00000000c00214be                isr9
                0x00000000c00214c8                isr10
                0x00000000c00214d0                isr11
                0x00000000c00214d8                isr12
                0x00000000c00214e0                isr13
                0x00000000c00214fa                isr14
                0x00000000c0021502                isr15
                0x00000000c002150c                isr16
                0x00000000c0021516                isr17
                0x00000000c0021520                isr18
                0x00000000c002152a                irq3
                0x00000000c0021534                irq4
                0x00000000c002153e                irq5
                0x00000000c0021548                irq6
                0x00000000c0021552                irq7
                0x00000000c002155c                irq8
                0x00000000c0021566                irq9
                0x00000000c0021570                irq10
                0x00000000c002157a                irq11
                0x00000000c0021584                irq12
                0x00000000c002158e                irq13
                0x00000000c0021598                irq14
                0x00000000c00215a2                irq15
                0x00000000c00215ac                irq1
                0x00000000c00215b3                irq2
                0x00000000c00215ba                isr96
                0x00000000c00215c1                irq0
                0x00000000c00215c6                int_common_stub
                0x00000000c00215c6                syscall_common_stub
                0x00000000c00216c4                irq16
                0x00000000c00216ce                irq17
                0x00000000c00216d8                irq18
                0x00000000c00216e2                irq19
                0x00000000c00216ec                irq20
                0x00000000c00216f6                irq21
                0x00000000c0021700                irq22
                0x00000000c002170a                irq23
 *fill*         0x00000000c0021714        0xc 
 .text          0x00000000c0021720       0x10 arch/i386/rdrand.32
                0x00000000c0021720                i386GetRDRAND
 .text          0x00000000c0021730       0x39 arch/i386/sse.32
                0x00000000c0021730                sseDetect
                0x00000000c0021748                sseSave
                0x00000000c0021750                sseLoad
                0x00000000c0021758                sseInit
                0x00000000c0021768                sseClose
 *fill*         0x00000000c0021769        0x7 
 .text          0x00000000c0021770       0x4f arch/i386/x87.32
                0x00000000c0021776                x87Detect
                0x00000000c0021797                x87Save
                0x00000000c002179e                x87Load
                0x00000000c00217a5                x87Init
                0x00000000c00217be                x87Close
 *fill*         0x00000000c00217bf        0x1 
 .text          0x00000000c00217c0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00217e5        0x0 crtn.32
 *fill*         0x00000000c00217e5        0x3 
 .text          0x00000000c00217e8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00217e8                __divdi3
 *fill*         0x00000000c0021933        0x1 
 .text          0x00000000c0021934      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021934                __moddi3
 *fill*         0x00000000c0021ab2        0x2 
 .text          0x00000000c0021ab4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021ab4                __udivdi3
 *fill*         0x00000000c0021bb3        0x1 
 .text          0x00000000c0021bb4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021bb4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021cd0        0x0
 .iplt          0x00000000c0021cd0        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021cce        0xf
 .init          0x00000000c0021cce        0x3 crti.32
                0x00000000c0021cce                _init
 .init          0x00000000c0021cd1        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021cd6        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021cdb        0x2 crtn.32

.fini           0x00000000c0021cdd        0xa
 .fini          0x00000000c0021cdd        0x3 crti.32
                0x00000000c0021cdd                _fini
 .fini          0x00000000c0021ce0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021ce5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021ce8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021ce8       0x1a hal/device.32
                0x00000000c0021ce8                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021ce8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021d02       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021d02       0x2a hal/device.32
                0x00000000c0021d02                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021d2c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021d2c       0xdc hal/device.32
                0x00000000c0021d2c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021e08       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021e08       0x42 hal/device.32
                0x00000000c0021e08                LinkedList<Device>::LinkedList()
                0x00000000c0021e08                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021e4c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021e4c       0x1c hal/timer.32
                0x00000000c0021e4c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021e68        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021e68        0x7 hal/timer.32
                0x00000000c0021e68                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021e70       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021e70       0xbc hal/timer.32
                0x00000000c0021e70                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021f2c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021f2c       0xda hal/timer.32
                0x00000000c0021f2c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0022008       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0022008       0x23 hw/acpi.32
                0x00000000c0022008                ACPI::~ACPI()
                0x00000000c0022008                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002202c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002202c       0x2a hw/acpi.32
                0x00000000c002202c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0022058        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0022058        0x2 hw/acpi.32
                0x00000000c0022058                LinkedList<Device>::~LinkedList()
                0x00000000c0022058                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002205c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002205c       0x1c hw/acpi.32
                0x00000000c002205c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0022078        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0022078        0x7 hw/acpi.32
                0x00000000c0022078                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0022080       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0022080       0xb8 hw/acpi.32
                0x00000000c0022080                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0022138       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0022138       0x23 krnl/computer.32
                0x00000000c0022138                Computer::~Computer()
                0x00000000c0022138                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002215c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002215c       0x2a krnl/computer.32
                0x00000000c002215c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0022186       0x24
 .text._Z10idleCommonv
                0x00000000c0022186       0x24 krnl/idle.32
                0x00000000c0022186                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00221aa        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00221aa        0x2 krnl/unixfile.32
                0x00000000c00221aa                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00221aa                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00221ac       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00221ac       0x42 krnl/unixfile.32
                0x00000000c00221ac                LinkedList<UnixFile>::LinkedList()
                0x00000000c00221ac                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00221ee       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00221ee       0xd3 krnl/unixfile.32
                0x00000000c00221ee                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00222c2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00222c2        0x7 krnl/unixfile.32
                0x00000000c00222c2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00222ca       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00222ca       0xa1 krnl/unixfile.32
                0x00000000c00222ca                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002236c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002236c        0x8 krnl/unixfile.32
                0x00000000c002236c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022374        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022374        0x8 sys/kill.32
                0x00000000c0022374                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002237c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002237c        0x2 thr/prcssthr.32
                0x00000000c002237c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002237c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022380       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022380       0x49 thr/prcssthr.32
                0x00000000c0022380                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0022380                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00223cc       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00223cc       0x42 thr/prcssthr.32
                0x00000000c00223cc                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00223cc                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN6IOAPICD2Ev
                0x00000000c002240e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002240e       0x23 arch/i386/apic.32
                0x00000000c002240e                IOAPIC::~IOAPIC()
                0x00000000c002240e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022432       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022432       0x2a arch/i386/apic.32
                0x00000000c0022432                IOAPIC::~IOAPIC()

.text._ZN3CPUD2Ev
                0x00000000c002245c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002245c       0x23 arch/i386/hal.32
                0x00000000c002245c                CPU::~CPU()
                0x00000000c002245c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0022480       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0022480       0x2a arch/i386/hal.32
                0x00000000c0022480                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c00224aa       0x23
 .text._ZN3PCID2Ev
                0x00000000c00224aa       0x23 hw/bus/pci.32
                0x00000000c00224aa                PCI::~PCI()
                0x00000000c00224aa                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00224ce       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00224ce       0x2a hw/bus/pci.32
                0x00000000c00224ce                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00224f8       0x23
 .text._ZN3IDED2Ev
                0x00000000c00224f8       0x23 hw/diskctrl/ide.32
                0x00000000c00224f8                IDE::~IDE()
                0x00000000c00224f8                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002251c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002251c       0x2a hw/diskctrl/ide.32
                0x00000000c002251c                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0022546       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0022546       0x23 hw/diskctrl/satabus.32
                0x00000000c0022546                SATABus::~SATABus()
                0x00000000c0022546                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002256a       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002256a       0x2a hw/diskctrl/satabus.32
                0x00000000c002256a                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0022594       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0022594       0x23 hw/diskphys/ata.32
                0x00000000c0022594                ATA::~ATA()
                0x00000000c0022594                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00225b8       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00225b8       0x2a hw/diskphys/ata.32
                0x00000000c00225b8                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00225e2       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00225e2       0x23 hw/diskphys/atapi.32
                0x00000000c00225e2                ATAPI::~ATAPI()
                0x00000000c00225e2                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0022606       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0022606       0x2a hw/diskphys/atapi.32
                0x00000000c0022606                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022630       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022630       0x23 hw/diskphys/sata.32
                0x00000000c0022630                SATA::~SATA()
                0x00000000c0022630                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0022654       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0022654       0x2a hw/diskphys/sata.32
                0x00000000c0022654                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002267e       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002267e       0x23 hw/diskphys/satapi.32
                0x00000000c002267e                SATAPI::~SATAPI()
                0x00000000c002267e                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00226a2       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00226a2       0x2a hw/diskphys/satapi.32
                0x00000000c00226a2                SATAPI::~SATAPI()

.text._ZN9APICTimerD2Ev
                0x00000000c00226cc       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00226cc       0x23 hw/timer/apictimer.32
                0x00000000c00226cc                APICTimer::~APICTimer()
                0x00000000c00226cc                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00226f0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00226f0       0x2a hw/timer/apictimer.32
                0x00000000c00226f0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002271c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002271c       0x23 hw/timer/pit.32
                0x00000000c002271c                PIT::~PIT()
                0x00000000c002271c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022740       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022740       0x2a hw/timer/pit.32
                0x00000000c0022740                PIT::~PIT()

.rodata         0x00000000c002276a     0x3b92
                0x00000000c002276a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002276a        0x2 
 .ctors         0x00000000c002276c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022770        0x4 krnl/unixfile.32
 .ctors         0x00000000c0022774        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022778        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002277c                end_ctors = .
                0x00000000c002277c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c002277c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0022780        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022780                __DTOR_END__
                0x00000000c0022784                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022784       0x1c 
 .rodata        0x00000000c00227a0      0x101 acpica/utclib.32
                0x00000000c00227a0                AcpiGbl_Ctypes
 *fill*         0x00000000c00228a1        0x3 
 .rodata        0x00000000c00228a4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c00228bc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022906       0x1a 
 .rodata        0x00000000c0022920       0xed fs/fat/ff.32
 *fill*         0x00000000c0022a0d       0x13 
 .rodata        0x00000000c0022a20      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022e20       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c0022e8f        0x1 
 .rodata.str1.4
                0x00000000c0022e90       0x38 dbg/kconsole.32
 .rodata        0x00000000c0022ec8      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0023018      0x169 dbg/usban.32
 *fill*         0x00000000c0023181        0x3 
 .rodata.str1.4
                0x00000000c0023184      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00232bb      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c00233de       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0023437        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0023438       0x6c fs/vfs.32
                0x00000000c0023438                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00234a4       0x1c fs/vfs.32
                0x00000000c00234a4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00234c0       0x1c fs/vfs.32
                0x00000000c00234c0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00234dc       0x2c hal/bus.32
                0x00000000c00234dc                vtable for Bus
 *fill*         0x00000000c0023508       0x18 
 .rodata        0x00000000c0023520      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0023670       0x3c hal/clock.32
                0x00000000c0023670                vtable for Clock
 .rodata.str1.1
                0x00000000c00236ac       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0023710       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023732       0x15 hal/device.32
 *fill*         0x00000000c0023747        0x1 
 .rodata._ZTV6Device
                0x00000000c0023748       0x2c hal/device.32
                0x00000000c0023748                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023774       0x2c hal/device.32
                0x00000000c0023774                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00237a0       0x2c hal/diskctrl.32
                0x00000000c00237a0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00237cc       0x38 hal/diskphys.32
                0x00000000c00237cc                vtable for PhysicalDisk
 .rodata        0x00000000c0023804       0x53 hal/keybrd.32
 *fill*         0x00000000c0023857        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023858       0x34 hal/keybrd.32
                0x00000000c0023858                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002388c       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00238d0       0x2c hal/logidisk.32
                0x00000000c00238d0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00238fc       0x2c hal/mouse.32
                0x00000000c00238fc                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023928       0x34 hal/nic.32
                0x00000000c0023928                vtable for NIC
 .rodata.str1.1
                0x00000000c002395c        0xb hal/partition.32
 *fill*         0x00000000c0023967        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023968       0x44 hal/serial.32
                0x00000000c0023968                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00239ac       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00239f7        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00239ff       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00239ff       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c00239ff       0x47 hal/timer.32
 *fill*         0x00000000c0023a46        0x2 
 .rodata._ZTV5Timer
                0x00000000c0023a48       0x30 hal/timer.32
                0x00000000c0023a48                vtable for Timer
 .rodata.str1.1
                0x00000000c0023a78       0x3e hal/vcache.32
 *fill*         0x00000000c0023ab6        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023ab8       0x10 hal/vcache.32
                0x00000000c0023ab8                vtable for VCache
 .rodata.str1.1
                0x00000000c0023ac8       0xba hal/video.32
 *fill*         0x00000000c0023b82        0x2 
 .rodata._ZTV5Video
                0x00000000c0023b84       0x4c hal/video.32
                0x00000000c0023b84                vtable for Video
 .rodata.str1.1
                0x00000000c0023bd0      0x1b7 hw/acpi.32
 *fill*         0x00000000c0023d87        0x1 
 .rodata.str1.4
                0x00000000c0023d88       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023e23       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023e23        0x8 hw/acpi.32
 *fill*         0x00000000c0023e23        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023e24       0x2c hw/acpi.32
                0x00000000c0023e24                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023e50       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023e63       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023ea3       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023ec4       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0023ef7        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0023efa       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0023f70       0x21 krnl/computer.32
 *fill*         0x00000000c0023f91        0x3 
 .rodata.str1.4
                0x00000000c0023f94       0x2c krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c0023fc0       0x2c krnl/computer.32
                0x00000000c0023fc0                vtable for Computer
 .rodata.str1.1
                0x00000000c0023fec       0x3c krnl/env.32
 .rodata        0x00000000c0024028       0x7e krnl/fault.32
 .rodata.str1.1
                0x00000000c00240a6        0x4 krnl/intlformat.32
 *fill*         0x00000000c00240aa        0x2 
 .rodata.str1.4
                0x00000000c00240ac       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c00240dc        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c00240eb       0x9f krnl/main.32
                                         0xb9 (size before relaxing)
 *fill*         0x00000000c002418a        0x2 
 .rodata.str1.4
                0x00000000c002418c       0x48 krnl/main.32
 .rodata.str1.4
                0x00000000c00241d4      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00242d9       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0024331       0x39 krnl/pipe.32
 *fill*         0x00000000c002436a        0x2 
 .rodata._ZTV4Pipe
                0x00000000c002436c       0x1c krnl/pipe.32
                0x00000000c002436c                vtable for Pipe
 .rodata.str1.1
                0x00000000c0024388       0x54 krnl/powctrl.32
 .rodata.str1.1
                0x00000000c00243dc       0xd9 krnl/resolve.32
 *fill*         0x00000000c00244b5        0x3 
 .rodata.str1.4
                0x00000000c00244b8       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c00244d7      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c00245df       0x63 krnl/syscalls.32
                                         0x6b (size before relaxing)
 .rodata.str1.1
                0x00000000c0024642       0x5e krnl/terminal.32
 .rodata._ZTV7VgaText
                0x00000000c00246a0       0x1c krnl/terminal.32
                0x00000000c00246a0                vtable for VgaText
 .rodata        0x00000000c00246bc       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00246f7       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00246f7       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00246f7       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00246f7        0x8 krnl/unixfile.32
 *fill*         0x00000000c00246f7        0x1 
 .rodata.str1.4
                0x00000000c00246f8       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0024718       0x1c krnl/unixfile.32
                0x00000000c0024718                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0024734       0x1c krnl/unixfile.32
                0x00000000c0024734                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0024750      0x313 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024a63      0x15a krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024bbd       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0024bd2        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024be1        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0024beb       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0024c0c       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0024c50       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024c65       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024c91       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c0024ca2      0x219 thr/elf.32
                                        0x228 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024ebb       0x57 thr/prcssthr.32
 *fill*         0x00000000c0024f12        0x2 
 .rodata.str1.4
                0x00000000c0024f14       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002500c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002500c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002500c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002500c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002500c       0x61 vm86/vm8086.32
 *fill*         0x00000000c002506d        0x3 
 .rodata.str1.4
                0x00000000c0025070       0x81 vm86/vm8086.32
 *fill*         0x00000000c00250f1        0x3 
 .rodata        0x00000000c00250f4      0x390 vm86/vm8086.32
 .rodata        0x00000000c0025484       0x17 arch/i386/apic.32
 *fill*         0x00000000c002549b        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c002549c       0x2c arch/i386/apic.32
                0x00000000c002549c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00254c8      0x322 arch/i386/hal.32
                                        0x335 (size before relaxing)
 *fill*         0x00000000c00257ea        0x2 
 .rodata.str1.4
                0x00000000c00257ec       0x23 arch/i386/hal.32
 *fill*         0x00000000c002580f        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025810       0x2c arch/i386/hal.32
                0x00000000c0025810                vtable for CPU
 .rodata.str1.4
                0x00000000c002583c       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c002589d       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c00258db       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c00258f0       0x3c arch/i386/rtc.32
                0x00000000c00258f0                vtable for RTC
 .rodata.str1.1
                0x00000000c002592c       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c002596d        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025970       0x6c fs/fat/vfslink.32
                0x00000000c0025970                vtable for FAT
 .rodata.str1.1
                0x00000000c00259dc       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00259dc      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0025b14       0x6c fs/iso9660/vfslink.32
                0x00000000c0025b14                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025b80       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0025bc4       0x34 hal/sound/sndcard.32
                0x00000000c0025bc4                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0025bf8       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025c37       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025c6f       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0025d10       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0025d74       0x2c hw/bus/pci.32
                0x00000000c0025d74                vtable for PCI
 .rodata.str1.1
                0x00000000c0025da0      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0025ec4       0x2c hw/diskctrl/ide.32
                0x00000000c0025ec4                vtable for IDE
 .rodata.str1.4
                0x00000000c0025ef0       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0025f14       0x2c hw/diskctrl/satabus.32
                0x00000000c0025f14                vtable for SATABus
 .rodata.str1.1
                0x00000000c0025f40       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0025ffb        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025ffc       0x38 hw/diskphys/ata.32
                0x00000000c0025ffc                vtable for ATA
 .rodata.str1.1
                0x00000000c0026034        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0026041        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0026044       0x38 hw/diskphys/atapi.32
                0x00000000c0026044                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002607c       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0026104       0x38 hw/diskphys/sata.32
                0x00000000c0026104                vtable for SATA
 .rodata.str1.1
                0x00000000c002613c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0026226        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0026228       0x38 hw/diskphys/satapi.32
                0x00000000c0026228                vtable for SATAPI
 .rodata.str1.1
                0x00000000c0026260       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002627b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002627c       0x30 hw/timer/apictimer.32
                0x00000000c002627c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00262ac       0x1d hw/timer/pit.32
 *fill*         0x00000000c00262c9        0x3 
 .rodata._ZTV3PIT
                0x00000000c00262cc       0x30 hw/timer/pit.32
                0x00000000c00262cc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00262fc      0xa69
 *(.data)
 .data          0x00000000c00262fc        0x0 crti.32
 .data          0x00000000c00262fc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00262fc                __dso_handle
 .data          0x00000000c0026300        0x0 acpica/utclib.32
 .data          0x00000000c0026300        0x0 krnl/malloc.32
 .data          0x00000000c0026300        0x0 libk/ctype.32
 .data          0x00000000c0026300        0x0 libk/string.32
 .data          0x00000000c0026300        0x0 arch/i386/cc.32
 .data          0x00000000c0026300        0x0 fs/fat/diskio.32
 .data          0x00000000c0026300        0x0 fs/fat/ff.32
 .data          0x00000000c0026300        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0026300        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0026300        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0026300        0x0 dbg/kconsole.32
 .data          0x00000000c0026300       0x28 dbg/usban.32
                0x00000000c0026300                KiUsbanTypeMismatchTypes
 .data          0x00000000c0026328        0x0 fs/symlink.32
 .data          0x00000000c0026328        0x0 fs/vfs.32
 .data          0x00000000c0026328        0x0 hal/bus.32
 .data          0x00000000c0026328        0x0 hal/buzzer.32
 .data          0x00000000c0026328        0x0 hal/clock.32
 .data          0x00000000c0026328        0x0 hal/device.32
 .data          0x00000000c0026328        0x0 hal/diskctrl.32
 .data          0x00000000c0026328        0x0 hal/diskphys.32
 .data          0x00000000c0026328        0x0 hal/fpu.32
 .data          0x00000000c0026328        0x0 hal/keybrd.32
 .data          0x00000000c0026328        0x0 hal/logidisk.32
 .data          0x00000000c0026328        0x0 hal/mouse.32
 .data          0x00000000c0026328        0x0 hal/nic.32
 .data          0x00000000c0026328        0x0 hal/partition.32
 .data          0x00000000c0026328        0x0 hal/serial.32
 .data          0x00000000c0026328        0x0 hal/timer.32
 .data          0x00000000c0026328        0x0 hal/vcache.32
 .data          0x00000000c0026328        0x0 hal/video.32
 .data          0x00000000c0026328       0x10 hw/acpi.32
                0x00000000c0026328                legacyIRQRemaps
 .data          0x00000000c0026338        0x0 krnl/assert.32
 .data          0x00000000c0026338        0x0 krnl/atexit.32
 .data          0x00000000c0026338        0x0 krnl/bootflags.32
 .data          0x00000000c0026338        0x0 krnl/bootmsg.32
 .data          0x00000000c0026338        0x4 krnl/c++.32
                0x00000000c0026338                __stack_chk_guard
 .data          0x00000000c002633c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002633c        0x4 
 .data          0x00000000c0026340      0x100 krnl/cm.32
                0x00000000c0026340                CmComponents
 .data          0x00000000c0026440        0x0 krnl/compat.32
 .data          0x00000000c0026440        0x0 krnl/computer.32
 .data          0x00000000c0026440      0x400 krnl/crc32.32
                0x00000000c0026440                KiPolyLookupCRC32
 .data          0x00000000c0026840       0x4d krnl/env.32
                0x00000000c0026840                defaultSysEnv
 .data          0x00000000c002688d        0x0 krnl/fault.32
 .data          0x00000000c002688d        0x0 krnl/gdt.32
 .data          0x00000000c002688d        0x0 krnl/idle.32
 .data          0x00000000c002688d        0x0 krnl/idt.32
 .data          0x00000000c002688d        0x0 krnl/inlines.32
 .data          0x00000000c002688d        0x0 krnl/intlformat.32
 .data          0x00000000c002688d        0x0 krnl/intops.32
 *fill*         0x00000000c002688d        0x3 
 .data          0x00000000c0026890        0x4 krnl/kheap.32
 .data          0x00000000c0026894        0x0 krnl/mailbox.32
 .data          0x00000000c0026894        0x0 krnl/main.32
 .data          0x00000000c0026894        0x0 krnl/mutex.32
 .data          0x00000000c0026894        0x0 krnl/panic.32
 .data          0x00000000c0026894        0x4 krnl/physmgr.32
                0x00000000c0026894                Phys::bitmap
 .data          0x00000000c0026898        0x0 krnl/pipe.32
 .data          0x00000000c0026898        0x0 krnl/powctrl.32
 .data          0x00000000c0026898        0x0 krnl/random.32
 .data          0x00000000c0026898        0x0 krnl/resolve.32
 .data          0x00000000c0026898        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026898        0x8 
 .data          0x00000000c00268a0       0x4c krnl/signal.32
                0x00000000c00268a0                KiDefaultSignalHandlers
 *fill*         0x00000000c00268ec       0x14 
 .data          0x00000000c0026900      0x124 krnl/syscalls.32
                0x00000000c0026900                systemCallHandlers
 *fill*         0x00000000c0026a24       0x1c 
 .data          0x00000000c0026a40       0x60 krnl/terminal.32
                0x00000000c0026a40                VgaText::hiddenOut
                0x00000000c0026a60                ansiToVGAMappings
 .data          0x00000000c0026aa0        0x0 krnl/tss.32
 .data          0x00000000c0026aa0        0x4 krnl/unixfile.32
                0x00000000c0026aa0                UnixFile::nextFd
 .data          0x00000000c0026aa4       0x15 krnl/virtmgr.32
                0x00000000c0026aa4                Virt::pageAllocPtr
                0x00000000c0026aa8                Virt::bitmap
                0x00000000c0026aac                Virt::swapfileSectorsPerPage
                0x00000000c0026ab0                Virt::swapfileLength
                0x00000000c0026ab4                Virt::swapfileSector
                0x00000000c0026ab8                Virt::swapfileDrive
 .data          0x00000000c0026ab9        0x0 sys/alarm.32
 .data          0x00000000c0026ab9        0x0 sys/eject.32
 .data          0x00000000c0026ab9        0x0 sys/exit.32
 .data          0x00000000c0026ab9        0x0 sys/getcwd.32
 .data          0x00000000c0026ab9        0x0 sys/getpid.32
 .data          0x00000000c0026ab9        0x0 sys/getramdata.32
 .data          0x00000000c0026ab9        0x0 sys/getvgaptr.32
 .data          0x00000000c0026ab9        0x0 sys/kill.32
 .data          0x00000000c0026ab9        0x0 sys/loaddll.32
 .data          0x00000000c0026ab9        0x0 sys/pause.32
 .data          0x00000000c0026ab9        0x0 sys/pthread.32
 .data          0x00000000c0026ab9        0x0 sys/read.32
 .data          0x00000000c0026ab9        0x0 sys/registersignal.32
 .data          0x00000000c0026ab9        0x0 sys/registry.32
 .data          0x00000000c0026ab9        0x0 sys/sbrk.32
 .data          0x00000000c0026ab9        0x0 sys/setcwd.32
 .data          0x00000000c0026ab9        0x0 sys/settime.32
 .data          0x00000000c0026ab9        0x0 sys/symlink.32
 .data          0x00000000c0026ab9        0x0 sys/timezone.32
 .data          0x00000000c0026ab9        0x0 sys/truncate.32
 .data          0x00000000c0026ab9        0x0 sys/write.32
 .data          0x00000000c0026ab9        0x0 sys/wsbe.32
 .data          0x00000000c0026ab9        0x0 sys/yield.32
 .data          0x00000000c0026ab9        0x0 thr/alarm.32
 .data          0x00000000c0026ab9        0x0 thr/elf.32
 .data          0x00000000c0026ab9        0x0 thr/exec.32
 *fill*         0x00000000c0026ab9        0x3 
 .data          0x00000000c0026abc        0x4 thr/prcssthr.32
                0x00000000c0026abc                keNextPID
 .data          0x00000000c0026ac0        0x0 vm86/vm8086.32
 .data          0x00000000c0026ac0        0x0 arch/i386/apic.32
 .data          0x00000000c0026ac0      0x2a4 arch/i386/hal.32
                0x00000000c0026ac0                exceptionNames
                0x00000000c0026d60                lastCode
 .data          0x00000000c0026d64        0x0 arch/i386/intctrl.32
 .data          0x00000000c0026d64        0x0 arch/i386/pic.32
 .data          0x00000000c0026d64        0x0 arch/i386/rtc.32
 .data          0x00000000c0026d64        0x0 arch/i386/vga.32
 .data          0x00000000c0026d64        0x0 fs/fat/vfslink.32
 .data          0x00000000c0026d64        0x0 fs/iso9660/helper.32
 .data          0x00000000c0026d64        0x1 fs/iso9660/vfslink.32
                0x00000000c0026d64                recentDriveletter
 .data          0x00000000c0026d65        0x0 hal/sound/sndcard.32
 .data          0x00000000c0026d65        0x0 hal/sound/sndport.32
 .data          0x00000000c0026d65        0x0 hw/bus/pci.32
 .data          0x00000000c0026d65        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0026d65        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0026d65        0x0 hw/diskphys/ata.32
 .data          0x00000000c0026d65        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0026d65        0x0 hw/diskphys/sata.32
 .data          0x00000000c0026d65        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0026d65        0x0 hw/timer/apictimer.32
 .data          0x00000000c0026d65        0x0 hw/timer/pit.32
 .data          0x00000000c0026d65        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0026d65        0x0 crtn.32
 .data          0x00000000c0026d65        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0026d65        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0026d65        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0026d65        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0026d68        0x0
 .got           0x00000000c0026d68        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0026d68        0x0
 .got.plt       0x00000000c0026d68        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0026d68        0x0
 .igot.plt      0x00000000c0026d68        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0026d68        0x0
 .tm_clone_table
                0x00000000c0026d68        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0026d68        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0026d65      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0026d65        0x3 
 .eh_frame      0x00000000c0026d68        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0026d68        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0026d68       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0026dc0       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0026e00       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0026e6c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0027000       0x7d
 *(userkernel)
 userkernel     0x00000000c0027000       0x52 krnl/signal.32
                0x00000000c0027000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002702c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0027052       0x2b krnl/syscalls.32
                0x00000000c0027052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0028000        0x1
 *(align_previous)
 align_previous
                0x00000000c0028000        0x1 krnl/signal.32
                0x00000000c0028000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0028004        0x0
 .rel.got       0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028001     0x749b
                0x00000000c0028001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0028001       0x1f 
 COMMON         0x00000000c0028020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0028020                dcache
                0x00000000c0028060                cdDriveLetter
                0x00000000c0028080                icache
 *(.bss)
 .bss           0x00000000c00280c0        0x0 crti.32
 .bss           0x00000000c00280c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00280e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00280e4       0x1c 
 .bss           0x00000000c0028100      0x378 krnl/malloc.32
 .bss           0x00000000c0028478        0x0 libk/ctype.32
 .bss           0x00000000c0028478        0x0 libk/string.32
 .bss           0x00000000c0028478        0x0 arch/i386/cc.32
 .bss           0x00000000c0028478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028478        0x8 
 .bss           0x00000000c0028480       0x88 fs/fat/ff.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0028508       0x18 
 .bss           0x00000000c0028520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0028eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0028eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0028eb8        0x8 
 .bss           0x00000000c0028ec0     0x2444 fs/symlink.32
                0x00000000c0028ec0                kiNumWaitingRoomSymlinks
                0x00000000c0028ee0                kiNewlyCreatedIDs
                0x00000000c0028f00                kiNewlyCreatedSymlinks
                0x00000000c0029300                kiSymlinkHashTable
                0x00000000c002b300                kiBaseSymlinkID
 .bss           0x00000000c002b304        0x4 fs/vfs.32
                0x00000000c002b304                installedFilesystems
 .bss           0x00000000c002b308        0x0 hal/bus.32
 .bss           0x00000000c002b308        0x0 hal/buzzer.32
 *fill*         0x00000000c002b308       0x18 
 .bss           0x00000000c002b320      0x348 hal/clock.32
                0x00000000c002b320                keLoadedTimezones
                0x00000000c002b324                keNumberOfTimezones
                0x00000000c002b340                keTimezoneStrings
                0x00000000c002b660                keDstOn
                0x00000000c002b661                keTimezoneHalfHourOffset
                0x00000000c002b664                keTimezoneHourOffset
 .bss           0x00000000c002b668        0x0 hal/device.32
 .bss           0x00000000c002b668        0x0 hal/diskctrl.32
 .bss           0x00000000c002b668        0x0 hal/diskphys.32
 .bss           0x00000000c002b668        0x0 hal/fpu.32
 *fill*         0x00000000c002b668       0x18 
 .bss           0x00000000c002b680      0x428 hal/keybrd.32
                0x00000000c002b680                keyboardWaitingTaskList
                0x00000000c002b684                keyboardSetupYet
                0x00000000c002b688                guiKeyboardHandler
                0x00000000c002b6a0                keystates
 *fill*         0x00000000c002baa8       0x18 
 .bss           0x00000000c002bac0       0x88 hal/logidisk.32
                0x00000000c002bac0                diskAssignments
                0x00000000c002bae0                disks
 .bss           0x00000000c002bb48        0x4 hal/mouse.32
                0x00000000c002bb48                guiMouseHandler
 .bss           0x00000000c002bb4c        0x0 hal/nic.32
 .bss           0x00000000c002bb4c        0x0 hal/partition.32
 .bss           0x00000000c002bb4c        0x0 hal/serial.32
 *fill*         0x00000000c002bb4c        0x4 
 .bss           0x00000000c002bb50        0x8 hal/timer.32
                0x00000000c002bb50                milliTenthsSinceBoot
 .bss           0x00000000c002bb58        0x0 hal/vcache.32
 .bss           0x00000000c002bb58        0x4 hal/video.32
                0x00000000c002bb58                screen
 *fill*         0x00000000c002bb5c        0x4 
 .bss           0x00000000c002bb60      0x480 hw/acpi.32
                0x00000000c002bb60                nextACPITable
                0x00000000c002bb80                acpiTables
                0x00000000c002bd80                usingXSDT
                0x00000000c002bd84                RSDTpointer
                0x00000000c002bd88                RSDPpointer
                0x00000000c002bd8c                nextAPICNMI
                0x00000000c002bda0                apicNMIInfo
                0x00000000c002be20                legacyIRQFlags
                0x00000000c002be40                ioapicDiscoveryNumber
                0x00000000c002be60                ioapicFoundInMADT
                0x00000000c002be80                ioapicAddresses
                0x00000000c002bf00                ioapicGSIBase
                0x00000000c002bf80                processorDiscoveryNumber
                0x00000000c002bfa0                matchingAPICID
                0x00000000c002bfc0                processorID
 .bss           0x00000000c002bfe0        0x0 krnl/assert.32
 .bss           0x00000000c002bfe0       0xe0 krnl/atexit.32
                0x00000000c002bfe0                KiNextAtexitHandler
                0x00000000c002c000                KiAtexitContexts
                0x00000000c002c060                KiAtexitHandlers
 .bss           0x00000000c002c0c0        0x4 krnl/bootflags.32
                0x00000000c002c0c0                keBootSettings
 .bss           0x00000000c002c0c4        0x0 krnl/bootmsg.32
 .bss           0x00000000c002c0c4        0x0 krnl/c++.32
 .bss           0x00000000c002c0c4        0x0 krnl/cdefs.32
 .bss           0x00000000c002c0c4        0x4 krnl/cm.32
 .bss           0x00000000c002c0c8        0x0 krnl/compat.32
 .bss           0x00000000c002c0c8        0x6 krnl/computer.32
                0x00000000c002c0c8                computer
                0x00000000c002c0cc                keIsPreemptionOn
                0x00000000c002c0cd                keIsSchedulingOn
 .bss           0x00000000c002c0ce        0x0 krnl/crc32.32
 *fill*         0x00000000c002c0ce        0x2 
 .bss           0x00000000c002c0d0        0x8 krnl/env.32
                0x00000000c002c0d0                KeUserEnv
                0x00000000c002c0d4                KeSystemEnv
 *fill*         0x00000000c002c0d8        0x8 
 .bss           0x00000000c002c0e0     0x2000 krnl/fault.32
                0x00000000c002c0e0                keInterruptContexts
                0x00000000c002d0e0                keInterruptHandlers
 .bss           0x00000000c002e0e0        0x6 krnl/gdt.32
                0x00000000c002e0e0                gdtDescr
 .bss           0x00000000c002e0e6        0x0 krnl/idle.32
 *fill*         0x00000000c002e0e6        0x2 
 .bss           0x00000000c002e0e8        0x6 krnl/idt.32
                0x00000000c002e0e8                idtDescr
 .bss           0x00000000c002e0ee        0x0 krnl/inlines.32
 *fill*         0x00000000c002e0ee       0x12 
 .bss           0x00000000c002e100       0x24 krnl/intlformat.32
                0x00000000c002e100                keLocale
 .bss           0x00000000c002e124        0x0 krnl/intops.32
 .bss           0x00000000c002e124        0x0 krnl/kheap.32
 .bss           0x00000000c002e124        0x0 krnl/mailbox.32
 .bss           0x00000000c002e124        0x0 krnl/main.32
 .bss           0x00000000c002e124        0x0 krnl/mutex.32
 .bss           0x00000000c002e124        0x1 krnl/panic.32
                0x00000000c002e124                KeIsKernelInPanic
 *fill*         0x00000000c002e125        0x3 
 .bss           0x00000000c002e128       0x29 krnl/physmgr.32
                0x00000000c002e128                Phys::forbidEvictions
                0x00000000c002e12c                Phys::currentPagePointer
                0x00000000c002e130                Phys::highestMem
                0x00000000c002e134                Phys::oldPercent
                0x00000000c002e138                Phys::usedPages
                0x00000000c002e13c                Phys::usablePages
                0x00000000c002e140                Phys::dmaUsage
 .bss           0x00000000c002e151        0x0 krnl/pipe.32
 *fill*         0x00000000c002e151        0xf 
 .bss           0x00000000c002e160       0x48 krnl/powctrl.32
                0x00000000c002e160                keSleepFunction
                0x00000000c002e164                keRestartFunction
                0x00000000c002e168                keShutdownFunction
                0x00000000c002e16c                powCtrlOnBattery
                0x00000000c002e180                currentPowerSettings
                0x00000000c002e1a4                secondsSinceLastUserIO
 .bss           0x00000000c002e1a8        0x8 krnl/random.32
                0x00000000c002e1a8                kiRandSeed
 .bss           0x00000000c002e1b0        0x0 krnl/resolve.32
 .bss           0x00000000c002e1b0        0x0 krnl/semaphore.32
 .bss           0x00000000c002e1b0        0x0 krnl/signal.32
 .bss           0x00000000c002e1b0        0x0 krnl/syscalls.32
 .bss           0x00000000c002e1b0        0x9 krnl/terminal.32
                0x00000000c002e1b0                terminalCycle
                0x00000000c002e1b4                activeTerminal
                0x00000000c002e1b8                VgaText::graphicMode
 *fill*         0x00000000c002e1b9        0x1 
 .bss           0x00000000c002e1ba        0x2 krnl/tss.32
                0x00000000c002e1ba                doubleFaultSelector
 *fill*         0x00000000c002e1bc        0x4 
 .bss           0x00000000c002e1c0       0x84 krnl/unixfile.32
                0x00000000c002e1c0                sfileLpt
                0x00000000c002e200                sfileCom
                0x00000000c002e224                sfileNul
                0x00000000c002e228                sfilePnt
                0x00000000c002e22c                sfileAux
                0x00000000c002e230                sfileCon
                0x00000000c002e234                initialFilesAdded
                0x00000000c002e238                unixFileLinkedList
 .bss           0x00000000c002e244       0x10 krnl/virtmgr.32
                0x00000000c002e244                twswaps
                0x00000000c002e248                swapBalance
                0x00000000c002e24c                Virt::swapfileBitmap
                0x00000000c002e250                keFirstVAS
 .bss           0x00000000c002e254        0x0 sys/alarm.32
 .bss           0x00000000c002e254        0x0 sys/eject.32
 .bss           0x00000000c002e254        0x0 sys/exit.32
 .bss           0x00000000c002e254        0x0 sys/getcwd.32
 .bss           0x00000000c002e254        0x0 sys/getpid.32
 .bss           0x00000000c002e254        0x0 sys/getramdata.32
 .bss           0x00000000c002e254        0x0 sys/getvgaptr.32
 .bss           0x00000000c002e254        0x0 sys/kill.32
 .bss           0x00000000c002e254        0x0 sys/loaddll.32
 .bss           0x00000000c002e254        0x0 sys/pause.32
 .bss           0x00000000c002e254        0x0 sys/pthread.32
 .bss           0x00000000c002e254        0x0 sys/read.32
 .bss           0x00000000c002e254        0x0 sys/registersignal.32
 .bss           0x00000000c002e254        0x0 sys/registry.32
 .bss           0x00000000c002e254        0x0 sys/sbrk.32
 .bss           0x00000000c002e254        0x0 sys/setcwd.32
 .bss           0x00000000c002e254        0x0 sys/settime.32
 .bss           0x00000000c002e254        0x0 sys/symlink.32
 .bss           0x00000000c002e254        0x0 sys/timezone.32
 .bss           0x00000000c002e254        0x0 sys/truncate.32
 .bss           0x00000000c002e254        0x0 sys/write.32
 .bss           0x00000000c002e254        0x0 sys/wsbe.32
 .bss           0x00000000c002e254        0x0 sys/yield.32
 .bss           0x00000000c002e254        0x0 thr/alarm.32
 *fill*         0x00000000c002e254        0xc 
 .bss           0x00000000c002e260      0x7a4 thr/elf.32
                0x00000000c002e260                Thr::driverLookupNext
                0x00000000c002e280                Thr::driverLookupLen
                0x00000000c002e480                Thr::driverLookupAddr
                0x00000000c002e680                Thr::driverNameLookup
                0x00000000c002e880                Thr::kernelSymbols
                0x00000000c002e900                Thr::kernelStringTable
                0x00000000c002e980                Thr::kernelSymbolTable
                0x00000000c002ea00                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002ea04        0x0 thr/exec.32
 *fill*         0x00000000c002ea04        0x4 
 .bss           0x00000000c002ea08       0x70 thr/prcssthr.32
                0x00000000c002ea08                keRestorePreemptionValue
                0x00000000c002ea0c                kePreemptionDisableCounter
                0x00000000c002ea10                cleanerThread
                0x00000000c002ea14                weNeedTheCleanerToNotBlock
                0x00000000c002ea18                retValLockStuff
                0x00000000c002ea1c                retValSchedLock
                0x00000000c002ea20                lockStuffLock
                0x00000000c002ea24                schedulerLock
                0x00000000c002ea28                taskSwitchesPostponedFlag
                0x00000000c002ea2c                postponeTaskSwitchesCounter
                0x00000000c002ea30                irqDisableCounter
                0x00000000c002ea34                terminatedTaskList
                0x00000000c002ea40                sleepingTaskList
                0x00000000c002ea4c                taskList
                0x00000000c002ea58                kernelProcess
 *fill*         0x00000000c002ea78        0x8 
 .bss           0x00000000c002ea80       0x40 vm86/vm8086.32
                0x00000000c002ea80                Vm::started8086Yet
                0x00000000c002ea84                Vm::vmRetV
                0x00000000c002ea88                Vm::vmDone
                0x00000000c002ea89                Vm::vmReady
                0x00000000c002ea8c                Vm::vm86Thread
                0x00000000c002ea90                Vm::vmToHostCommsPtr
                0x00000000c002eaa0                Vm::vmToHostComms
 .bss           0x00000000c002eac0       0x41 arch/i386/apic.32
                0x00000000c002eac0                noOfIOAPICs
                0x00000000c002eae0                ioapics
                0x00000000c002eb00                IOAPICsSetupYet
 *fill*         0x00000000c002eb01        0x3 
 .bss           0x00000000c002eb04       0x50 arch/i386/hal.32
                0x00000000c002eb04                guiPanicHandler
                0x00000000c002eb08                fpuOwner
                0x00000000c002eb0c                coproLoadFunc
                0x00000000c002eb10                coproSaveFunc
                0x00000000c002eb14                lastD
                0x00000000c002eb18                lastC
                0x00000000c002eb1c                lastB
                0x00000000c002eb20                lastA
                0x00000000c002eb24                HalPageWriteCombiningFlag
                0x00000000c002eb28                HalPageGlobalFlag
                0x00000000c002eb2c                keNMIEnabled
                0x00000000c002eb30                vendorIDString
                0x00000000c002eb3d                familyID
                0x00000000c002eb3e                model
                0x00000000c002eb3f                processorType
                0x00000000c002eb40                steppingID
                0x00000000c002eb44                vendor
                0x00000000c002eb48                opcodeDetectionMode
                0x00000000c002eb4c                features
 .bss           0x00000000c002eb54        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002eb54        0x0 arch/i386/pic.32
 .bss           0x00000000c002eb54        0x2 arch/i386/rtc.32
 .bss           0x00000000c002eb56        0x0 arch/i386/vga.32
 *fill*         0x00000000c002eb56        0xa 
 .bss           0x00000000c002eb60       0xf0 fs/fat/vfslink.32
                0x00000000c002eb60                FAT::fats
                0x00000000c002eb80                FAT::vfsToFatRemaps
                0x00000000c002ec00                fatToVFSRemaps
 .bss           0x00000000c002ec50        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002ec50       0x10 
 .bss           0x00000000c002ec60      0x820 fs/iso9660/vfslink.32
                0x00000000c002ec60                iso9660Owner
                0x00000000c002ec64                recentSector
                0x00000000c002ec80                recentBuffer
 .bss           0x00000000c002f480        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002f480        0x0 hal/sound/sndport.32
 .bss           0x00000000c002f480        0xd hw/bus/pci.32
                0x00000000c002f480                thePCI
 .bss           0x00000000c002f48d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002f48d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002f48d        0x3 
 .bss           0x00000000c002f490        0x8 hw/diskphys/ata.32
                0x00000000c002f490                ataSectorsWritten
                0x00000000c002f494                ataSectorsRead
 .bss           0x00000000c002f498        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002f498        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002f498        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c002f498        0x0 hw/timer/apictimer.32
 .bss           0x00000000c002f498        0x4 hw/timer/pit.32
                0x00000000c002f498                pitFreq
 .bss           0x00000000c002f49c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002f49c        0x0 crtn.32
 .bss           0x00000000c002f49c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002f49c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002f49c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002f49c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002f49c                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0036937                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
