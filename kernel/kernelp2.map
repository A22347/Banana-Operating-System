Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x202de
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x225 dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006ef0                Dbg::logs(char*)
                0x00000000c0006f0f                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f2d                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f4e                Dbg::kprintf(char const*, ...)
 .text          0x00000000c0007084      0x2d4 dbg/usban.32
                0x00000000c0007084                KiUbsanPrintDetails(char const*, void*)
                0x00000000c00070f0                __ubsan_handle_type_mismatch_v1
                0x00000000c00071cc                __ubsan_handle_pointer_overflow
                0x00000000c00071f8                __ubsan_handle_out_of_bounds
                0x00000000c0007224                __ubsan_handle_add_overflow
                0x00000000c0007250                __ubsan_handle_load_invalid_value
                0x00000000c000727c                __ubsan_handle_divrem_overflow
                0x00000000c00072a8                __ubsan_handle_mul_overflow
                0x00000000c00072d4                __ubsan_handle_sub_overflow
                0x00000000c0007300                __ubsan_handle_shift_out_of_bounds
                0x00000000c000732c                __ubsan_handle_negate_overflow
 .text          0x00000000c0007358      0x812 fs/symlink.32
                0x00000000c00074a7                KiDeinitialiseSymlinks(void*)
                0x00000000c0007538                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075bb                KeInitialiseSymlinks()
                0x00000000c000771d                KiIsSymlinkRegistered(char const*)
                0x00000000c0007887                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a2e                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b6a      0xd9c fs/vfs.32
                0x00000000c0007b6a                File::read(unsigned long long, void*, int*)
                0x00000000c0007bc2                File::write(unsigned long long, void*, int*)
                0x00000000c0007c1a                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c72                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007ca0                File::isAtty()
                0x00000000c0007ca4                Directory::isAtty()
                0x00000000c0007ca8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cae                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cb4                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cba                File::~File()
                0x00000000c0007cba                File::~File()
                0x00000000c0007cde                File::~File()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d2c                Directory::~Directory()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d88                Filesystem::~Filesystem()
                0x00000000c0007dac                Fs::getcwd(Process*, char*, int)
                0x00000000c0007dd6                Fs::initVFS()
                0x00000000c0007e00                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000812c                File::File(char const*, Process*)
                0x00000000c000812c                File::File(char const*, Process*)
                0x00000000c000814a                File::open(FileOpenMode)
                0x00000000c00081a8                File::close()
                0x00000000c0008208                File::seek(unsigned long long)
                0x00000000c000825e                File::truncate(unsigned long long)
                0x00000000c00082b4                File::tell(unsigned long long*)
                0x00000000c0008304                File::rewind()
                0x00000000c0008318                File::unlink()
                0x00000000c0008364                File::rename(char const*)
                0x00000000c00083b2                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000840e                File::exists()
                0x00000000c000844c                File::stat(unsigned long long*, bool*)
                0x00000000c00084ad                Fs::setcwd(Process*, char*)
                0x00000000c000860c                Directory::Directory(char const*, Process*)
                0x00000000c000860c                Directory::Directory(char const*, Process*)
                0x00000000c00086d4                Directory::open()
                0x00000000c0008730                Directory::close()
                0x00000000c0008790                Directory::unlink()
                0x00000000c00087dc                Directory::rename(char const*)
                0x00000000c000882a                Directory::exists()
                0x00000000c0008868                Directory::read(dirent*)
                0x00000000c00088b4                Directory::create()
                0x00000000c0008900                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c0008906        0x2 
 .text          0x00000000c0008908       0x86 hal/bus.32
                0x00000000c0008908                Bus::Bus(char const*)
                0x00000000c0008908                Bus::Bus(char const*)
                0x00000000c0008940                Bus::~Bus()
                0x00000000c0008940                Bus::~Bus()
                0x00000000c0008964                Bus::~Bus()
 .text          0x00000000c000898e       0x99 hal/buzzer.32
                0x00000000c000898e                KeBeepThread(void*)
                0x00000000c00089ce                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a27        0x1 
 .text          0x00000000c0008a28      0x51b hal/clock.32
                0x00000000c0008a28                KeLoadClockSettings()
                0x00000000c0008b30                Clock::Clock(char const*)
                0x00000000c0008b30                Clock::Clock(char const*)
                0x00000000c0008b66                Clock::~Clock()
                0x00000000c0008b66                Clock::~Clock()
                0x00000000c0008b8a                Clock::~Clock()
                0x00000000c0008bb4                Clock::timeInSecondsLocal()
                0x00000000c0008bfc                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0008c55                KeDatetimeToSeconds(datetime_t)
                0x00000000c0008d7a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0008dda                KeSecondsToDatetime(unsigned long long)
                0x00000000c0008f1e                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0008f43        0x1 
 .text          0x00000000c0008f44      0x47a hal/device.32
                0x00000000c0008f44                Device::hibernate()
                0x00000000c0008f46                Device::wake()
                0x00000000c0008f48                Device::detect()
                0x00000000c0008f4a                Device::disableLegacy()
                0x00000000c0008f4c                Device::powerSaving(PowerSavingLevel)
                0x00000000c0008f4e                DriverlessDevice::close(int, int, void*)
                0x00000000c0008f52                DriverlessDevice::detect()
                0x00000000c0008f54                DriverlessDevice::open(int, int, void*)
                0x00000000c0008f68                Device::~Device()
                0x00000000c0008f68                Device::~Device()
                0x00000000c0008f76                Device::~Device()
                0x00000000c0008f9e                Device::findAndLoadDriver()
                0x00000000c0008fac                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0008fd2                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0009012                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000903c                Device::getParent()
                0x00000000c0009048                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009066                Device::addChild(Device*)
                0x00000000c00090aa                Device::removeAllChildren()
                0x00000000c00090f0                Device::hibernateAll()
                0x00000000c0009120                Device::wakeAll()
                0x00000000c0009150                Device::detectAll()
                0x00000000c0009180                Device::disableLegacyAll()
                0x00000000c0009182                Device::loadDriversForAll()
                0x00000000c0009184                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00091ba                Device::setName(char const*)
                0x00000000c00091c8                Device::Device(char const*)
                0x00000000c00091c8                Device::Device(char const*)
                0x00000000c00092c4                Device::getName()
                0x00000000c00092ce                Device::closeAll()
                0x00000000c000931a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000931a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009350                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009394                getDevicesOfType(DeviceType)
 *fill*         0x00000000c00093be        0x2 
 .text          0x00000000c00093c0       0x86 hal/diskctrl.32
                0x00000000c00093c0                HardDiskController::HardDiskController(char const*)
                0x00000000c00093c0                HardDiskController::HardDiskController(char const*)
                0x00000000c00093f8                HardDiskController::~HardDiskController()
                0x00000000c00093f8                HardDiskController::~HardDiskController()
                0x00000000c000941c                HardDiskController::~HardDiskController()
 .text          0x00000000c0009446       0xe2 hal/diskphys.32
                0x00000000c0009446                PhysicalDisk::eject()
                0x00000000c000944a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000944a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00094b2                PhysicalDisk::startCache()
                0x00000000c00094da                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094da                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094fe                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009528        0x0 hal/fpu.32
 .text          0x00000000c0009528        0x0 hal/intctrl.32
 .text          0x00000000c0009528      0x874 hal/keybrd.32
                0x00000000c0009528                startGUI(void*)
                0x00000000c000958d                startGUIVESA(void*)
                0x00000000c00095f2                sendKeyToTerminal(unsigned char)
                0x00000000c00096c8                sendKeyboardToken(KeyboardToken)
                0x00000000c0009b84                clearInternalKeybuffer(VgaText*)
                0x00000000c0009bb9                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0009d12                Keyboard::Keyboard(char const*)
                0x00000000c0009d12                Keyboard::Keyboard(char const*)
                0x00000000c0009d4e                Keyboard::~Keyboard()
                0x00000000c0009d4e                Keyboard::~Keyboard()
                0x00000000c0009d72                Keyboard::~Keyboard()
 .text          0x00000000c0009d9c      0x3f8 hal/logidisk.32
                0x00000000c0009d9c                LogicalDisk::close(int, int, void*)
                0x00000000c0009da0                LogicalDisk::~LogicalDisk()
                0x00000000c0009da0                LogicalDisk::~LogicalDisk()
                0x00000000c0009dc4                LogicalDisk::~LogicalDisk()
                0x00000000c0009dee                LogicalDisk::open(int, int, void*)
                0x00000000c0009e02                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0009e3a                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0009e80                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009e80                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009f40                LogicalDisk::assignDriveLetter()
                0x00000000c0009ffa                LogicalDisk::mount()
                0x00000000c000a042                LogicalDisk::unmount()
                0x00000000c000a052                LogicalDisk::eject()
                0x00000000c000a066                LogicalDisk::unassignDriveLetter()
                0x00000000c000a0bc                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000a128                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000a194       0x86 hal/mouse.32
                0x00000000c000a194                Mouse::Mouse(char const*)
                0x00000000c000a194                Mouse::Mouse(char const*)
                0x00000000c000a1cc                Mouse::~Mouse()
                0x00000000c000a1cc                Mouse::~Mouse()
                0x00000000c000a1f0                Mouse::~Mouse()
 .text          0x00000000c000a21a       0x90 hal/nic.32
                0x00000000c000a21a                NIC::getMAC()
                0x00000000c000a220                NIC::write(int, unsigned char*, int*)
                0x00000000c000a226                NIC::NIC(char const*)
                0x00000000c000a226                NIC::NIC(char const*)
                0x00000000c000a25c                NIC::~NIC()
                0x00000000c000a25c                NIC::~NIC()
                0x00000000c000a280                NIC::~NIC()
 .text          0x00000000c000a2aa      0x33b hal/partition.32
                0x00000000c000a2aa                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a352                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000a5e5        0x3 
 .text          0x00000000c000a5e8       0x86 hal/serial.32
                0x00000000c000a5e8                Serial::Serial(char const*)
                0x00000000c000a5e8                Serial::Serial(char const*)
                0x00000000c000a620                Serial::~Serial()
                0x00000000c000a620                Serial::~Serial()
                0x00000000c000a644                Serial::~Serial()
 *fill*         0x00000000c000a66e        0x2 
 .text          0x00000000c000a670      0x27c hal/timer.32
                0x00000000c000a670                Timer::Timer(char const*)
                0x00000000c000a670                Timer::Timer(char const*)
                0x00000000c000a6a8                Timer::~Timer()
                0x00000000c000a6a8                Timer::~Timer()
                0x00000000c000a6cc                Timer::~Timer()
                0x00000000c000a6f6                Timer::read()
                0x00000000c000a701                setupTimer(int)
                0x00000000c000a73c                timerHandler(unsigned int)
 .text          0x00000000c000a8ec      0x466 hal/vcache.32
                0x00000000c000a8ec                VCache::VCache(PhysicalDisk*)
                0x00000000c000a8ec                VCache::VCache(PhysicalDisk*)
                0x00000000c000aa5c                VCache::invalidateReadBuffer()
                0x00000000c000aa6c                VCache::writeWriteBuffer()
                0x00000000c000aab8                VCache::~VCache()
                0x00000000c000aab8                VCache::~VCache()
                0x00000000c000ab10                VCache::~VCache()
                0x00000000c000ab38                VCache::write(unsigned long long, int, void*)
                0x00000000c000ac36                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ad52      0x71d hal/video.32
                0x00000000c000ad52                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ad9e                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ae0e                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000ae9e                Video::clearScreen(unsigned int)
                0x00000000c000aed2                Video::putpixel(int, int, unsigned int)
                0x00000000c000aee0                Video::readPixelApprox(int, int)
                0x00000000c000aef4                Video::Video(char const*)
                0x00000000c000aef4                Video::Video(char const*)
                0x00000000c000af2a                Video::~Video()
                0x00000000c000af2a                Video::~Video()
                0x00000000c000af4e                Video::~Video()
                0x00000000c000af78                Video::isMonochrome()
                0x00000000c000af84                Video::getWidth()
                0x00000000c000af90                Video::getHeight()
                0x00000000c000af9c                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000b058                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000b3fe                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000b46f        0x1 
 .text          0x00000000c000b470     0x1096 hw/acpi.32
                0x00000000c000b470                ACPI::close(int, int, void*)
                0x00000000c000b478                loadACPITables(unsigned char*)
                0x00000000c000b6d8                findRSDT(unsigned char*)
                0x00000000c000b824                findDataTable(unsigned char*, char*)
                0x00000000c000b898                scanMADT()
                0x00000000c000bcf0                ACPI::ACPI()
                0x00000000c000bcf0                ACPI::ACPI()
                0x00000000c000bd44                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000be40                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000bf0c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000bf14                ACPI::detectPCI()
                0x00000000c000c120                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000c138                ACPI::open(int, int, void*)
 .text          0x00000000c000c506       0xb6 krnl/atexit.32
                0x00000000c000c506                KeInitialiseAtexit()
                0x00000000c000c525                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000c559                KeExecuteAtexit()
 .text          0x00000000c000c5bc       0x9f krnl/bootmsg.32
                0x00000000c000c5bc                KeDisplaySplashScreen()
                0x00000000c000c5eb                KeSetBootMessage(char const*)
 .text          0x00000000c000c65b       0x5f krnl/c++.32
                0x00000000c000c65b                __cxa_atexit
                0x00000000c000c65e                __cxa_finalize
                0x00000000c000c65f                __stack_chk_fail
                0x00000000c000c695                __cxa_pure_virtual
                0x00000000c000c6a6                operator new[](unsigned long)
                0x00000000c000c6ab                operator delete(void*, unsigned long)
                0x00000000c000c6b0                operator delete[](void*)
                0x00000000c000c6b5                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000c6ba        0x2 
 .text          0x00000000c000c6bc       0x44 krnl/cdefs.32
                0x00000000c000c6bc                CUnlockScheduler
                0x00000000c000c6d4                CLockScheduler
                0x00000000c000c6e4                CPrintf
 .text          0x00000000c000c700      0xd51 krnl/cm.32
                0x00000000c000c700                CmOpen(char const*)
                0x00000000c000c81e                CmClose(Reghive_Tag*)
                0x00000000c000c834                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000c870                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000c8e7                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000c926                CmGetNext(Reghive_Tag*, int)
                0x00000000c000c958                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000c994                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000c9bc                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000c9dd                CmExpand(Reghive_Tag*, int)
                0x00000000c000ca58                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000cade                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000cbd2                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000cd0a                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000cd6b                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000cd9b                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000cdd2                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000cdfc                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000ce3c                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000cee0                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000cf0e                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000d0ab                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000d0f8                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d172                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000d1c5                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d289                zStrtok(char*, char const*)
                0x00000000c000d2fb                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000d37c                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000d41f                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000d451        0x3 
 .text          0x00000000c000d454       0x1d krnl/compat.32
                0x00000000c000d454                Krnl::handlePowerButton()
                0x00000000c000d464                Krnl::handleSleepButton()
 *fill*         0x00000000c000d471        0x1 
 .text          0x00000000c000d472      0x2c3 krnl/computer.32
                0x00000000c000d472                Computer::close(int, int, void*)
                0x00000000c000d478                Computer::open(int, int, void*)
                0x00000000c000d55e                KeFirstTask()
                0x00000000c000d680                Computer::Computer()
                0x00000000c000d680                Computer::Computer()
                0x00000000c000d6c4                KePrepareShutdown()
                0x00000000c000d6e4                KeShutdown()
                0x00000000c000d708                KeSleep()
                0x00000000c000d714                KeRestart()
 .text          0x00000000c000d735       0x2b krnl/crc32.32
                0x00000000c000d735                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000d760      0x5bf krnl/env.32
                0x00000000c000d760                EnvVarContainer::getEnv(char const*)
                0x00000000c000d79e                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000d860                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000d862                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000da86                EnvVarContainer::__loadSystem()
                0x00000000c000daa0                EnvVarContainer::__loadUser()
                0x00000000c000daa2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000daa2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000dac4                EnvVarContainer::~EnvVarContainer()
                0x00000000c000dac4                EnvVarContainer::~EnvVarContainer()
                0x00000000c000daf4                KeGetEnv(Process*, char const*)
                0x00000000c000db59                KeSetEnvSystem(char const*, char const*)
                0x00000000c000db73                KeSetEnvUser(char const*, char const*)
                0x00000000c000db92                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000dba5                KeDeleteEnvSystem(char const*)
                0x00000000c000dba6                KeDeleteEnvUser(char const*)
                0x00000000c000dba7                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000dba8                KeNewProcessEnv(Process*)
                0x00000000c000dbca                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000dc16                KeLoadSystemEnv()
                0x00000000c000dc44                KeLoadUserEnv()
                0x00000000c000dc6a                KeFlushEnv()
                0x00000000c000dc6b                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000dc8b                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000dd1f        0x1 
 .text          0x00000000c000dd20      0x3d1 krnl/fault.32
                0x00000000c000dd20                KeSetupInterrupts()
                0x00000000c000dd98                int_handler
                0x00000000c000df38                KeDisplayProgramFault(char const*)
                0x00000000c000df88                KeGeneralProtectionFault(void*, void*)
                0x00000000c000dfdc                KePageFault(void*, void*)
                0x00000000c000e040                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e050                KeOtherFault(void*, void*)
                0x00000000c000e084                KeOpcodeFault(void*, void*)
                0x00000000c000e0d8                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000e0f1        0x1 
 .text          0x00000000c000e0f2      0x1db krnl/gdt.32
                0x00000000c000e0f2                GDTEntry::setBase(unsigned int)
                0x00000000c000e10e                GDTEntry::setLimit(unsigned int)
                0x00000000c000e12c                GDT::GDT()
                0x00000000c000e12c                GDT::GDT()
                0x00000000c000e142                GDT::addEntry(GDTEntry)
                0x00000000c000e164                GDT::getNumberOfEntries()
                0x00000000c000e16c                GDT::flush()
                0x00000000c000e18e                GDT::setup()
 .text          0x00000000c000e2cd       0x20 krnl/idle.32
                0x00000000c000e2cd                idleFunction(void*)
 *fill*         0x00000000c000e2ed        0x3 
 .text          0x00000000c000e2f0      0x46c krnl/idt.32
                0x00000000c000e2f0                IDTEntry::IDTEntry(bool)
                0x00000000c000e2f0                IDTEntry::IDTEntry(bool)
                0x00000000c000e36a                IDTEntry::setOffset(unsigned int)
                0x00000000c000e380                IDT::IDT()
                0x00000000c000e380                IDT::IDT()
                0x00000000c000e382                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000e38a                IDT::addEntry(IDTEntry, int)
                0x00000000c000e3a4                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000e3dc                IDT::flush()
                0x00000000c000e3f6                IDT::setup()
 .text          0x00000000c000e75c       0x9a krnl/inlines.32
                0x00000000c000e75c                CPU::current()
                0x00000000c000e768                operator new(unsigned long)
                0x00000000c000e76d                operator delete(void*)
                0x00000000c000e772                disableIRQs()
                0x00000000c000e774                enableIRQs()
                0x00000000c000e776                lockScheduler()
                0x00000000c000e77e                unlockScheduler()
                0x00000000c000e790                lockStuff()
                0x00000000c000e79e                unlockStuff()
                0x00000000c000e7db                Virt::getAKernelVAS()
                0x00000000c000e7e1                __not_memcpy
 .text          0x00000000c000e7f6      0x204 krnl/kheap.32
                0x00000000c000e7f6                sbrk
                0x00000000c000e88a                sbrk_thunk
                0x00000000c000e8c0                mmap
                0x00000000c000e91e                munmap
                0x00000000c000e933                liballoc_lock()
                0x00000000c000e941                liballoc_unlock()
                0x00000000c000e959                liballoc_alloc(int)
                0x00000000c000e971                liballoc_free(void*, int)
                0x00000000c000e98c                realloc
                0x00000000c000e9a0                malloc
                0x00000000c000e9b0                free
                0x00000000c000e9c0                rfree
                0x00000000c000e9d0                calloc
 *fill*         0x00000000c000e9fa        0x2 
 .text          0x00000000c000e9fc      0x1d3 krnl/mailbox.32
                0x00000000c000e9fc                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000ea5c                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000eabc                KeMailboxCreate()
                0x00000000c000eaf0                KeMailboxPost(Mailbox*, void*)
                0x00000000c000eb54                KeMailboxGet(Mailbox*, void**)
                0x00000000c000ebb8                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000ebcf       0xfd krnl/main.32
                0x00000000c000ebcf                KeEntryPoint
 .text          0x00000000c000eccc       0x1a krnl/mutex.32
                0x00000000c000eccc                Mutex::Mutex()
                0x00000000c000eccc                Mutex::Mutex()
 .text          0x00000000c000ece6        0xc krnl/panic.32
                0x00000000c000ece6                KePanic(char const*)
 .text          0x00000000c000ecf2      0x666 krnl/physmgr.32
                0x00000000c000ecf2                Phys::allocateDMA(unsigned long)
                0x00000000c000ede0                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000ee1b                Phys::setPageState(unsigned long, bool)
                0x00000000c000ee5b                Phys::getPageState(unsigned long)
                0x00000000c000ee77                Phys::freePage(unsigned long)
                0x00000000c000eee0                Phys::allocatePage()
                0x00000000c000efbe                Phys::allocateContiguousPages(int)
                0x00000000c000f039                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000f071                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000f358      0x271 krnl/pipe.32
                0x00000000c000f358                Pipe::isAtty()
                0x00000000c000f35c                Pipe::~Pipe()
                0x00000000c000f35c                Pipe::~Pipe()
                0x00000000c000f380                Pipe::~Pipe()
                0x00000000c000f3a8                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000f46c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000f562                Pipe::Pipe(int)
                0x00000000c000f562                Pipe::Pipe(int)
 .text          0x00000000c000f5c9      0x10b krnl/powctrl.32
                0x00000000c000f5c9                KePowerThread(void*)
                0x00000000c000f5fa                KeChangePowerSettings(PowerSettings)
                0x00000000c000f610                KeUserIOReceived()
                0x00000000c000f61b                KeHandlePowerButton()
                0x00000000c000f633                KeHandleSleepButton()
                0x00000000c000f64b                KeSetupPowerManager()
 .text          0x00000000c000f6d4       0x9b krnl/random.32
                0x00000000c000f6d4                KeRand()
                0x00000000c000f714                KeSeedRand(unsigned int)
                0x00000000c000f73d                KeInitRand()
 *fill*         0x00000000c000f76f        0x1 
 .text          0x00000000c000f770      0x1bc krnl/resolve.32
                0x00000000c000f770                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c000f92c      0x401 krnl/semaphore.32
                0x00000000c000f92c                Semaphore::Semaphore(int)
                0x00000000c000f92c                Semaphore::Semaphore(int)
                0x00000000c000f95c                Semaphore::tryAcquire()
                0x00000000c000fa30                Semaphore::assertLocked(char const*)
                0x00000000c000fabc                Semaphore::acquire(int)
                0x00000000c000fc60                Semaphore::acquire()
                0x00000000c000fc7c                Semaphore::release()
 .text          0x00000000c000fd2d      0x31f krnl/signal.32
                0x00000000c000fd2d                KiSigKill(int)
                0x00000000c000fd41                KiDefaultSignalHandlerIgnore(int)
                0x00000000c000fd42                KiDefaultSignalHandlerPause(int)
                0x00000000c000fd6e                KiDefaultSignalHandlerResume(int)
                0x00000000c000fd9a                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c000fd9f                KeInitSignals()
                0x00000000c000fdee                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c000fe24                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c000fea1                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c000ff98                KiCheckSignalZ
                0x00000000c000ffda                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010015                KiFinishSignalZ
 .text          0x00000000c001004c      0xe7c krnl/syscalls.32
                0x00000000c001004c                SysSeekDir(regs*)
                0x00000000c0010051                SysTellDir(regs*)
                0x00000000c0010056                SysVerify(regs*)
                0x00000000c0010060                SysGetArgc(regs*)
                0x00000000c0010074                SysTTYName(regs*)
                0x00000000c001007c                SysFormatDisk(regs*)
                0x00000000c00100e3                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010137                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010190                SysRealpath(regs*)
                0x00000000c00101de                SysReadDir(regs*)
                0x00000000c001025e                SysIsATTY(regs*)
                0x00000000c00102b8                SysSeek(regs*)
                0x00000000c0010312                SysTell(regs*)
                0x00000000c001037f                SysSize(regs*)
                0x00000000c00103f2                SysSizeFromFilename(regs*)
                0x00000000c0010526                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c001065a                SysClose(regs*)
                0x00000000c00106f0                SysOpenDir(regs*)
                0x00000000c001076d                SysMakeDir(regs*)
                0x00000000c00107db                SysCloseDir(regs*)
                0x00000000c001085b                SysWait(regs*)
                0x00000000c001087c                SysNotImpl(regs*)
                0x00000000c0010897                SysPanic(regs*)
                0x00000000c00108b2                SysRmdir(regs*)
                0x00000000c0010910                SysUnlink(regs*)
                0x00000000c001096e                SysGetArgv(regs*)
                0x00000000c00109bb                SysUSleep(regs*)
                0x00000000c00109e4                SysSpawn(regs*)
                0x00000000c0010a55                SysGetEnv(regs*)
                0x00000000c0010b0a                SysSetFatAttrib(regs*)
                0x00000000c0010b73                SysShutdown(regs*)
                0x00000000c0010bd0                SysPipe(regs*)
                0x00000000c0010c15                SysGetUnixTime(regs*)
                0x00000000c0010c29                string_ends_with(char const*, char const*)
                0x00000000c0010c74                SysOpen(regs*)
                0x00000000c0010e73                KeSystemCall(regs*, void*)
 .text          0x00000000c0010ec8      0xa85 krnl/terminal.32
                0x00000000c0010ec8                VgaText::isAtty()
                0x00000000c0010ecc                VgaText::~VgaText()
                0x00000000c0010ecc                VgaText::~VgaText()
                0x00000000c0010ef0                VgaText::~VgaText()
                0x00000000c0010f1a                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0010f3a                setTerminalScrollLock(bool)
                0x00000000c0010f3b                doTerminalCycle()
                0x00000000c0010f3c                addToTerminalCycle(VgaText*)
                0x00000000c0010f3d                scrollTerminalScrollLock(int)
                0x00000000c0010f3e                VgaText::updateTitle()
                0x00000000c0010f40                VgaText::load()
                0x00000000c0010f42                VgaText::updateCursor()
                0x00000000c0010f58                VgaText::doANSI_SGR(int)
                0x00000000c0010fcc                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0010fdc                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0010fec                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c001100c                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0011018                VgaText::setTitleColour(VgaColour)
                0x00000000c0011024                VgaText::setTitle(char*)
                0x00000000c0011026                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0011038                VgaText::scrollScreen()
                0x00000000c00110ca                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00110da                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c001116a                VgaText::getCursorX()
                0x00000000c0011172                VgaText::getCursorY()
                0x00000000c001117a                VgaText::setCursor(int, int)
                0x00000000c0011191                setActiveTerminal(VgaText*)
                0x00000000c00111dc                VgaText::clearScreen()
                0x00000000c001122a                VgaText::setCursorX(int)
                0x00000000c0011242                VgaText::setCursorY(int)
                0x00000000c001125a                VgaText::incrementCursor(bool)
                0x00000000c00112ae                VgaText::decrementCursor(bool)
                0x00000000c00112d0                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00113a0                VgaText::putchar(char)
                0x00000000c0011488                VgaText::putx(unsigned int)
                0x00000000c00114ce                VgaText::puts(char const*)
                0x00000000c00114f4                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0011540                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c001168e                VgaText::VgaText(char const*)
                0x00000000c001168e                VgaText::VgaText(char const*)
                0x00000000c00117de                VgaText::receiveKey(unsigned char)
                0x00000000c001194c                VgaText::doUpdate()
 *fill*         0x00000000c001194d        0x3 
 .text          0x00000000c0011950      0x224 krnl/tss.32
                0x00000000c0011950                TSS::TSS()
                0x00000000c0011950                TSS::TSS()
                0x00000000c0011960                TSS::setESP(unsigned long)
                0x00000000c0011974                TSS::flush()
                0x00000000c0011994                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0011b74      0x50a krnl/unixfile.32
                0x00000000c0011b74                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0011bca                ReservedFilename::isAtty()
                0x00000000c0011be6                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011c44                UnixFile::getFileDescriptor()
                0x00000000c0011c4c                UnixFile::UnixFile(int)
                0x00000000c0011c4c                UnixFile::UnixFile(int)
                0x00000000c0011e00                ReservedFilename::ReservedFilename(int)
                0x00000000c0011e00                ReservedFilename::ReservedFilename(int)
                0x00000000c0011e32                UnixFile::~UnixFile()
                0x00000000c0011e32                UnixFile::~UnixFile()
                0x00000000c0011ece                UnixFile::~UnixFile()
                0x00000000c0011ef6                ReservedFilename::~ReservedFilename()
                0x00000000c0011ef6                ReservedFilename::~ReservedFilename()
                0x00000000c0011f1a                ReservedFilename::~ReservedFilename()
                0x00000000c0011f41                KeGetFileFromDescriptor(int)
 .text          0x00000000c001207e     0x134a krnl/virtmgr.32
                0x00000000c001207e                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00120b8                Virt::getPageState(unsigned long)
                0x00000000c00120db                Virt::allocateKernelVirtualPages(int)
                0x00000000c00121f7                Virt::freeSwapfilePage(unsigned long)
                0x00000000c001221a                Virt::swapIDToSector(unsigned long)
                0x00000000c0012230                Virt::allocateSwapfilePage()
                0x00000000c00122af                Virt::virtualMemorySetup()
                0x00000000c0012300                Virt::setupPageSwapping(int)
                0x00000000c0012372                VAS::setCPUSpecific(unsigned long)
                0x00000000c0012374                VAS::VAS(VAS*)
                0x00000000c0012374                VAS::VAS(VAS*)
                0x00000000c001238c                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00123ba                VAS::getPageTableEntry(unsigned long)
                0x00000000c00123d9                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0012516                VAS::freeAllocatedPages(unsigned long)
                0x00000000c001253a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0012554                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0012596                VAS::VAS()
                0x00000000c0012596                VAS::VAS()
                0x00000000c0012600                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0012620                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c001264c                VAS::~VAS()
                0x00000000c001264c                VAS::~VAS()
                0x00000000c00127b4                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c00128bc                VAS::allocatePages(int, int)
                0x00000000c00129ae                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0012a08                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0012af8                VAS::VAS(bool)
                0x00000000c0012af8                VAS::VAS(bool)
                0x00000000c0012ce0                VAS::evict(unsigned long)
                0x00000000c0012de4                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c00130f4                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0013168                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0013194                VAS::scanForEviction()
                0x00000000c00132cd                mapVASFirstTime
 .text          0x00000000c00133c8       0x36 sys/eject.32
                0x00000000c00133c8                SysEject(regs*)
 .text          0x00000000c00133fe       0x18 sys/exit.32
                0x00000000c00133fe                SysExit(regs*)
 .text          0x00000000c0013416       0x1f sys/getcwd.32
                0x00000000c0013416                SysGetCwd(regs*)
 .text          0x00000000c0013435       0x26 sys/getpid.32
                0x00000000c0013435                SysGetPID(regs*)
 .text          0x00000000c001345b       0x21 sys/getramdata.32
                0x00000000c001345b                SysGetRAMData(regs*)
 .text          0x00000000c001347c       0x97 sys/getvgaptr.32
                0x00000000c001347c                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013513        0x1 
 .text          0x00000000c0013514       0xb9 sys/kill.32
                0x00000000c0013514                SysKill(regs*)
 .text          0x00000000c00135cd       0xa8 sys/loaddll.32
                0x00000000c00135cd                SysLoadDLL(regs*)
 .text          0x00000000c0013675       0x68 sys/read.32
                0x00000000c0013675                SysRead(regs*)
 .text          0x00000000c00136dd       0x29 sys/registersignal.32
                0x00000000c00136dd                SysRegisterSignal(regs*)
 .text          0x00000000c0013706      0x1cc sys/registry.32
                0x00000000c0013706                SysRegistryGetTypeFromPath(regs*)
                0x00000000c001374a                SysRegistryReadExtent(regs*)
                0x00000000c0013792                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00137a9                SysRegistryEnterDirectory(regs*)
                0x00000000c00137c0                SysRegistryGetNext(regs*)
                0x00000000c00137d7                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013811                SysRegistryOpen(regs*)
                0x00000000c0013825                SysRegistryClose(regs*)
                0x00000000c001383c                SysRegistryEasyReadString(regs*)
                0x00000000c0013888                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c00138d2       0x55 sys/sbrk.32
                0x00000000c00138d2                SysSbrk(regs*)
 .text          0x00000000c0013927       0x1c sys/setcwd.32
                0x00000000c0013927                SysSetCwd(regs*)
 .text          0x00000000c0013943       0x96 sys/settime.32
                0x00000000c0013943                SysSetTime(regs*)
 .text          0x00000000c00139d9       0x73 sys/symlink.32
                0x00000000c00139d9                SysSymlink(regs*)
 .text          0x00000000c0013a4c       0x3f sys/timezone.32
                0x00000000c0013a4c                SysTimezone(regs*)
 .text          0x00000000c0013a8b       0xfc sys/truncate.32
                0x00000000c0013a8b                SysTruncate(regs*)
 .text          0x00000000c0013b87       0x68 sys/write.32
                0x00000000c0013b87                SysWrite(regs*)
 .text          0x00000000c0013bef       0x9d sys/wsbe.32
                0x00000000c0013bef                SysWsbe(regs*)
 .text          0x00000000c0013c8c       0x28 sys/yield.32
                0x00000000c0013c8c                SysYield(regs*)
 .text          0x00000000c0013cb4     0x1228 thr/elf.32
                0x00000000c0013cb4                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0013f3f                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001415e                Thr::runtimeReferenceHelper()
                0x00000000c0014171                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00141c0                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001447e                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014bbf                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0014bf1                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014c28                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0014c42                Thr::loadDLL(char const*, bool)
                0x00000000c0014ea3                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0014edc       0x5a thr/exec.32
                0x00000000c0014edc                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0014f36        0x2 
 .text          0x00000000c0014f38     0x1191 thr/prcssthr.32
                0x00000000c0014f38                userModeEntryPoint(void*)
                0x00000000c0014f64                changeTSS
                0x00000000c0014f94                switchToThread(ThreadControlBlock*)
                0x00000000c0015044                Process::addArgs(char**)
                0x00000000c00150b0                Process::Process(char const*, Process*, char**)
                0x00000000c00150b0                Process::Process(char const*, Process*, char**)
                0x00000000c00152bc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00152bc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015490                taskStartupFunction
                0x00000000c001549c                KeDisablePreemption()
                0x00000000c00154c4                KeRestorePreemption()
                0x00000000c00154e4                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00155ec                Process::createUserThread()
                0x00000000c001560c                setupMultitasking(void (*)())
                0x00000000c0015730                schedule()
                0x00000000c00157c4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00157f0                blockTask(TaskState)
                0x00000000c001583c                waitTask(int, int*, int)
                0x00000000c0015880                milliTenthSleepUntil(unsigned int)
                0x00000000c0015928                milliTenthSleep(unsigned int)
                0x00000000c001593c                sleep(unsigned int)
                0x00000000c001594c                taskReturned
                0x00000000c0015994                Thr::processFromPID(int)
                0x00000000c0015a40                unblockTask(ThreadControlBlock*)
                0x00000000c0015af4                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015dc8                cleanerTaskFunction(void*)
                0x00000000c0015ee0                terminateTask(int)
                0x00000000c0015ffc                Thr::terminateFromIRQ(int)
 .text          0x00000000c00160c9      0xd18 vm86/vm8086.32
                0x00000000c00160c9                Vm::inbv(unsigned short)
                0x00000000c00160dc                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016112                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016122                Vm::getSegment(unsigned int)
                0x00000000c001612a                Vm::getOffset(unsigned int)
                0x00000000c001612f                Vm::mainloop2()
                0x00000000c0016169                Vm::mainVm8086Loop(void*)
                0x00000000c001617c                Vm::mainloop3(unsigned long)
                0x00000000c00161a2                Vm::initialise8086()
                0x00000000c00161e5                Vm::resetConventionalMemory8086()
                0x00000000c00161e6                Vm::finish8086()
                0x00000000c0016248                Vm::getOutput8086(unsigned char*)
                0x00000000c001626d                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001639a                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00165a6                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016643                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016654                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016666                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016677                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001668c                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00166a2                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00166b7                Vm::faultHandler(regs*)
 *fill*         0x00000000c0016de1        0x1 
 .text          0x00000000c0016de2     0x1ee9 arch/i386/hal.32
                0x00000000c0016de2                noCopro(unsigned long)
                0x00000000c0016de4                CPU::close(int, int, void*)
                0x00000000c0016de7                x86ReadCMOS(unsigned char)
                0x00000000c0016e3b                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0016e9d                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0016ebc                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0016ed9                AMD_K6_writeback(int, int, int)
                0x00000000c0016f99                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0017037                cpuidCheckEDX(unsigned int)
                0x00000000c0017064                cpuidCheckECX(unsigned int)
                0x00000000c0017092                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00170c0                cpuidCheckExtendedECX(unsigned int)
                0x00000000c00170ee                HalDetectFeatures()
                0x00000000c0017eb9                HalEnableNMI()
                0x00000000c0017ecc                HalDisableNMI()
                0x00000000c0017edf                HalGetNMIState()
                0x00000000c0017ee5                x86rdmsr(unsigned int)
                0x00000000c0017f23                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0017f68                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0017f7e                HalFindRSDP()
                0x00000000c0018013                HalHandlePageFault(void*, void*)
                0x00000000c00180c0                HalHandleOpcodeFault(void*, void*)
                0x00000000c0018102                HalDisplayDebugInfo(void*)
                0x00000000c0018490                HalReceivedNMI()
                0x00000000c001852b                HalSystemIdle()
                0x00000000c001858a                i386SaveCoprocessor(void*)
                0x00000000c001859e                i386LoadCoprocessor(void*)
                0x00000000c00185b2                x87EmulHandler(regs*, void*)
                0x00000000c001864f                HalInitialiseCoprocessor()
                0x00000000c00186d3                HalPanic(char const*)
                0x00000000c00187e7                HalQueryPerformanceCounter()
                0x00000000c00187f7                HalInitialise()
                0x00000000c0018989                HalMakeBeep(int)
                0x00000000c00189c3                HalGetRand()
                0x00000000c00189c6                HalEndOfInterrupt(int)
                0x00000000c00189f1                HalRestart()
                0x00000000c00189f2                HalShutdown()
                0x00000000c00189f3                HalSleep()
                0x00000000c00189f4                CPU::CPU()
                0x00000000c00189f4                CPU::CPU()
                0x00000000c0018a78                CPU::setupSMEP()
                0x00000000c0018a84                CPU::setupUMIP()
                0x00000000c0018a8e                CPU::setupTSC()
                0x00000000c0018a98                CPU::setupLargePages()
                0x00000000c0018aa2                CPU::setupPAT()
                0x00000000c0018ad4                CPU::setupMTRR()
                0x00000000c0018ad6                CPU::setupGlobalPages()
                0x00000000c0018ae0                CPU::allowUsermodeDataAccess()
                0x00000000c0018aee                CPU::prohibitUsermodeDataAccess()
                0x00000000c0018afc                CPU::setupSMAP()
                0x00000000c0018b0a                CPU::setupFeatures()
                0x00000000c0018bd6                CPU::open(int, int, void*)
 .text          0x00000000c0018ccb      0x268 arch/i386/intctrl.32
                0x00000000c0018ccb                convertLegacyIRQNumber(int)
                0x00000000c0018d07                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0018d51                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0018e8e                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0018ec2                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c0018f33        0x1 
 .text          0x00000000c0018f34      0x2dc arch/i386/pic.32
                0x00000000c0018f34                picIoWait()
                0x00000000c0018f3c                picDisable()
                0x00000000c0018f70                picGetIRQReg(int)
                0x00000000c0018fec                picOpen()
                0x00000000c0019170                picEOI(int)
 .text          0x00000000c0019210      0x5ed arch/i386/rtc.32
                0x00000000c0019210                RTC::open(int, int, void*)
                0x00000000c0019214                RTC::close(int, int, void*)
                0x00000000c0019218                RTC::timeInSecondsUTC()
                0x00000000c001922a                RTC::timeInDatetimeUTC()
                0x00000000c0019250                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001928e                RTC::~RTC()
                0x00000000c001928e                RTC::~RTC()
                0x00000000c00192b2                RTC::~RTC()
                0x00000000c00192dc                RTC::get_update_in_progress_flag()
                0x00000000c00192f0                RTC::completeRTCRefresh()
                0x00000000c001959e                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0019714                rtcIRQHandler(regs*, void*)
                0x00000000c0019754                RTC::RTC()
                0x00000000c0019754                RTC::RTC()
 *fill*         0x00000000c00197fd        0x3 
 .text          0x00000000c0019800      0x1f4 arch/i386/vga.32
                0x00000000c0019800                HalConsoleScroll(int, int)
                0x00000000c0019908                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001996c                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c00199f4     0x14f3 fs/fat/vfslink.32
                0x00000000c00199f4                FAT::getName()
                0x00000000c00199fc                FAT::tell(void*, unsigned long long*)
                0x00000000c0019a38                FAT::stat(void*, unsigned long long*)
                0x00000000c0019a74                FAT::~FAT()
                0x00000000c0019a74                FAT::~FAT()
                0x00000000c0019a98                FAT::~FAT()
                0x00000000c0019ac0                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019b64                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019c44                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019e28                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001a044                FAT::allocateSwapfile(char const*, int)
                0x00000000c001a204                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a374                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001a3d4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001a434                FAT::close(void*)
                0x00000000c001a488                FAT::closeDir(void*)
                0x00000000c001a4dc                FAT::truncate(void*, unsigned long long)
                0x00000000c001a548                FAT::seek(void*, unsigned long long)
                0x00000000c001a5a0                fatWrapperReadDisk
                0x00000000c001a5e0                fatWrapperWriteDisk
                0x00000000c001a620                fatWrapperIoctl
                0x00000000c001a740                FAT::FAT()
                0x00000000c001a740                FAT::FAT()
                0x00000000c001a798                FAT::fixFilepath(char*)
                0x00000000c001a7d8                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001a94c                FAT::openDir(char const*, void**)
                0x00000000c001a9fc                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001aaf4                FAT::unlink(char const*)
                0x00000000c001ab74                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ad2c                FAT::rename(char const*, char const*)
                0x00000000c001adf8                FAT::mkdir(char const*)
                0x00000000c001ae78                FAT::exists(char const*)
 *fill*         0x00000000c001aee7        0x1 
 .text          0x00000000c001aee8       0x94 fs/iso9660/helper.32
                0x00000000c001aee8                isoReadDiscSectorHelper
                0x00000000c001af44                iso_kprintf
                0x00000000c001af60                iso_kprintfd
 .text          0x00000000c001af7c      0x71a fs/iso9660/vfslink.32
                0x00000000c001af7c                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001af82                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001af88                ISO9660::getName()
                0x00000000c001af8e                ISO9660::closeDir(void*)
                0x00000000c001af98                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001af9e                ISO9660::unlink(char const*)
                0x00000000c001afa4                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001afaa                ISO9660::rename(char const*, char const*)
                0x00000000c001afb0                ISO9660::mkdir(char const*)
                0x00000000c001afb6                ISO9660::~ISO9660()
                0x00000000c001afb6                ISO9660::~ISO9660()
                0x00000000c001afda                ISO9660::~ISO9660()
                0x00000000c001b002                ISO9660::exists(char const*)
                0x00000000c001b016                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001b0fc                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001b144                ISO9660::seek(void*, unsigned long long)
                0x00000000c001b186                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001b1c4                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001b216                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b358                ISO9660::close(void*)
                0x00000000c001b388                ISO9660::openDir(char const*, void**)
                0x00000000c001b462                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b57d                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b5fc                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b66e                ISO9660::ISO9660()
                0x00000000c001b66e                ISO9660::ISO9660()
 .text          0x00000000c001b696      0x26c hal/sound/sndcard.32
                0x00000000c001b696                SoundCard::beginPlayback()
                0x00000000c001b6a4                SoundCard::stopPlayback()
                0x00000000c001b6b2                SoundCard::SoundCard(char const*)
                0x00000000c001b6b2                SoundCard::SoundCard(char const*)
                0x00000000c001b750                SoundCard::~SoundCard()
                0x00000000c001b750                SoundCard::~SoundCard()
                0x00000000c001b774                SoundCard::~SoundCard()
                0x00000000c001b79e                SoundCard::configureRates(int, int, int)
                0x00000000c001b7ce                SoundCard::getSamples16(int, short*)
                0x00000000c001b82a                SoundCard::getSamples32(int, int*)
                0x00000000c001b8b0                SoundCard::addChannel(SoundPort*)
                0x00000000c001b8ee                SoundCard::removeChannel(int)
 *fill*         0x00000000c001b902        0x2 
 .text          0x00000000c001b904      0x42f hal/sound/sndport.32
                0x00000000c001b904                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b904                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b990                SoundPort::~SoundPort()
                0x00000000c001b990                SoundPort::~SoundPort()
                0x00000000c001b9c4                SoundPort::unpause()
                0x00000000c001b9d0                SoundPort::pause()
                0x00000000c001b9dc                SoundPort::getBufferUsed()
                0x00000000c001b9e4                SoundPort::getBufferSize()
                0x00000000c001b9ec                SoundPort::buffer8(signed char*, int)
                0x00000000c001ba80                SoundPort::buffer16(short*, int)
                0x00000000c001bb14                SoundPort::buffer32(int*, int)
                0x00000000c001bba0                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001bc70                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001bd33        0x0 hw/bus/isa.32
 *fill*         0x00000000c001bd33        0x1 
 .text          0x00000000c001bd34      0xc25 hw/bus/pci.32
                0x00000000c001bd34                PCI::open(int, int, void*)
                0x00000000c001bd52                PCI::close(int, int, void*)
                0x00000000c001bd56                PCI::PCI()
                0x00000000c001bd56                PCI::PCI()
                0x00000000c001bdee                PCI::readBAR8(unsigned int, int)
                0x00000000c001be0a                PCI::readBAR16(unsigned int, int)
                0x00000000c001be28                PCI::readBAR32(unsigned int, int)
                0x00000000c001be44                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001be64                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001be86                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001bea6                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bf1c                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bfc6                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001bfea                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001c012                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001c05c                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001c084                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c0a8                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001c0cc                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001c0f4                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c158                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001c23e                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001c508                PCI::checkBus(unsigned char)
                0x00000000c001c52c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001c712                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001c88e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001c900                PCI::detect()
 *fill*         0x00000000c001c959        0x1 
 .text          0x00000000c001c95a      0xe50 hw/diskctrl/ide.32
                0x00000000c001c95a                IDE::close(int, int, void*)
                0x00000000c001c95e                IDE::IDE()
                0x00000000c001c95e                IDE::IDE()
                0x00000000c001c992                IDE::prepareInterrupt(unsigned char)
                0x00000000c001c9a4                selectDrive(unsigned char, unsigned char)
                0x00000000c001c9a6                IDE::getBase(unsigned char)
                0x00000000c001c9b8                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ca78                IDE::read(unsigned char, unsigned char)
                0x00000000c001cb2c                IDE::waitInterrupt(unsigned char)
                0x00000000c001cb8e                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001cbaa                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001cbc6                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001cc10                IDE::open(int, int, void*)
                0x00000000c001d168                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001d238                IDE::detect()
                0x00000000c001d69c                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001d756                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001d7aa      0x33f hw/diskctrl/satabus.32
                0x00000000c001d7aa                SATABus::close(int, int, void*)
                0x00000000c001d7ae                SATABus::detect()
                0x00000000c001d7b0                SATABus::SATABus()
                0x00000000c001d7b0                SATABus::SATABus()
                0x00000000c001d836                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d868                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d8b0                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d8d0                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d8fa                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001da0c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001dab6                SATABus::open(int, int, void*)
 *fill*         0x00000000c001dae9        0x1 
 .text          0x00000000c001daea      0x7c1 hw/diskphys/ata.32
                0x00000000c001daea                ATA::close(int, int, void*)
                0x00000000c001db0e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001db10                ATA::ATA()
                0x00000000c001db10                ATA::ATA()
                0x00000000c001db3e                ATA::flush(bool)
                0x00000000c001db8c                ATA::readyForCommand()
                0x00000000c001dbd8                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001dfe0                ATA::read(unsigned long long, int, void*)
                0x00000000c001e02c                ATA::write(unsigned long long, int, void*)
                0x00000000c001e078                ATA::detectCHS()
                0x00000000c001e0a2                ATA::open(int, int, void*)
                0x00000000c001e28d                combineCharAndColour(char, unsigned char)
                0x00000000c001e29e                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001e2ab        0x1 
 .text          0x00000000c001e2ac      0x612 hw/diskphys/atapi.32
                0x00000000c001e2ac                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001e2b2                ATAPI::close(int, int, void*)
                0x00000000c001e2d6                ATAPI::ATAPI()
                0x00000000c001e2d6                ATAPI::ATAPI()
                0x00000000c001e304                ATAPI::readyForCommand()
                0x00000000c001e356                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001e616                ATAPI::diskRemoved()
                0x00000000c001e650                ATAPI::eject()
                0x00000000c001e698                ATAPI::diskInserted()
                0x00000000c001e6a4                ATAPI::detectMedia()
                0x00000000c001e764                ATAPI::open(int, int, void*)
                0x00000000c001e844                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e8be      0x44a hw/diskphys/sata.32
                0x00000000c001e8be                SATA::close(int, int, void*)
                0x00000000c001e8e2                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001e8e4                SATA::open(int, int, void*)
                0x00000000c001e99c                SATA::SATA()
                0x00000000c001e99c                SATA::SATA()
                0x00000000c001e9ca                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ec50                SATA::read(unsigned long long, int, void*)
                0x00000000c001ec9c                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001ed08      0x5d8 hw/diskphys/satapi.32
                0x00000000c001ed08                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ed0e                SATAPI::close(int, int, void*)
                0x00000000c001ed32                SATAPI::SATAPI()
                0x00000000c001ed32                SATAPI::SATAPI()
                0x00000000c001ed60                SATAPI::diskRemoved()
                0x00000000c001ed62                SATAPI::diskInserted()
                0x00000000c001ed7e                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001f064                SATAPI::eject()
                0x00000000c001f0a0                SATAPI::detectMedia()
                0x00000000c001f0f6                SATAPI::open(int, int, void*)
                0x00000000c001f1f6                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001f2e0      0x443 hw/intctrl/apic.32
                0x00000000c001f2e0                IOAPIC::close(int, int, void*)
                0x00000000c001f2e6                apicGetBase()
                0x00000000c001f304                IOAPIC::IOAPIC()
                0x00000000c001f304                IOAPIC::IOAPIC()
                0x00000000c001f32c                apicOpen()
                0x00000000c001f4b8                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001f4ea                IOAPIC::read(int)
                0x00000000c001f512                IOAPIC::open(int, int, void*)
                0x00000000c001f5f8                IOAPIC::write(int, int)
                0x00000000c001f624                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001f723        0x1 
 .text          0x00000000c001f724       0xf0 hw/timer/apictimer.32
                0x00000000c001f724                APICTimer::close(int, int, void*)
                0x00000000c001f72c                apicTimerHandler(regs*, void*)
                0x00000000c001f754                APICTimer::open(int, int, void*)
                0x00000000c001f7c4                APICTimer::write(int)
                0x00000000c001f7ec                APICTimer::APICTimer()
                0x00000000c001f7ec                APICTimer::APICTimer()
 .text          0x00000000c001f814      0x1ad hw/timer/pit.32
                0x00000000c001f814                PIT::write(int)
                0x00000000c001f898                pitHandler(regs*, void*)
                0x00000000c001f8c0                PIT::open(int, int, void*)
                0x00000000c001f910                PIT::close(int, int, void*)
                0x00000000c001f940                PIT::PIT()
                0x00000000c001f940                PIT::PIT()
 *fill*         0x00000000c001f9c1        0xf 
 .text          0x00000000c001f9d0       0x6f arch/i386/avx.32
                0x00000000c001f9d0                avxDetect
                0x00000000c001f9fa                avxSave
                0x00000000c001fa0b                avxLoad
                0x00000000c001fa1c                avxInit
                0x00000000c001fa3e                avxClose
 *fill*         0x00000000c001fa3f        0x1 
 .text          0x00000000c001fa40      0x2ec arch/i386/interrupt.32
                0x00000000c001fa40                isr0
                0x00000000c001fa50                isr1
                0x00000000c001fa5a                isr2
                0x00000000c001fa64                isr3
                0x00000000c001fa6e                isr4
                0x00000000c001fa78                isr5
                0x00000000c001fa82                isr6
                0x00000000c001fa8c                isr7
                0x00000000c001fa96                isr8
                0x00000000c001fa9e                isr9
                0x00000000c001faa8                isr10
                0x00000000c001fab0                isr11
                0x00000000c001fab8                isr12
                0x00000000c001fac0                isr13
                0x00000000c001fada                isr14
                0x00000000c001fae2                isr15
                0x00000000c001faec                isr16
                0x00000000c001faf6                isr17
                0x00000000c001fb00                isr18
                0x00000000c001fb0a                irq3
                0x00000000c001fb14                irq4
                0x00000000c001fb1e                irq5
                0x00000000c001fb28                irq6
                0x00000000c001fb32                irq7
                0x00000000c001fb3c                irq8
                0x00000000c001fb46                irq9
                0x00000000c001fb50                irq10
                0x00000000c001fb5a                irq11
                0x00000000c001fb64                irq12
                0x00000000c001fb6e                irq13
                0x00000000c001fb78                irq14
                0x00000000c001fb82                irq15
                0x00000000c001fb8c                irq1
                0x00000000c001fb93                irq2
                0x00000000c001fb9a                isr96
                0x00000000c001fba1                irq0
                0x00000000c001fba6                int_common_stub
                0x00000000c001fbd8                syscall_common_stub
                0x00000000c001fcdc                irq16
                0x00000000c001fce6                irq17
                0x00000000c001fcf0                irq18
                0x00000000c001fcfa                irq19
                0x00000000c001fd04                irq20
                0x00000000c001fd0e                irq21
                0x00000000c001fd18                irq22
                0x00000000c001fd22                irq23
 *fill*         0x00000000c001fd2c        0x4 
 .text          0x00000000c001fd30       0x10 arch/i386/rdrand.32
                0x00000000c001fd30                i386GetRDRAND
 .text          0x00000000c001fd40       0x39 arch/i386/sse.32
                0x00000000c001fd40                sseDetect
                0x00000000c001fd58                sseSave
                0x00000000c001fd60                sseLoad
                0x00000000c001fd68                sseInit
                0x00000000c001fd78                sseClose
 *fill*         0x00000000c001fd79        0x7 
 .text          0x00000000c001fd80       0x4f arch/i386/x87.32
                0x00000000c001fd86                x87Detect
                0x00000000c001fda7                x87Save
                0x00000000c001fdae                x87Load
                0x00000000c001fdb5                x87Init
                0x00000000c001fdce                x87Close
 *fill*         0x00000000c001fdcf        0x1 
 .text          0x00000000c001fdd0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001fdf5        0x0 crtn.32
 *fill*         0x00000000c001fdf5        0x3 
 .text          0x00000000c001fdf8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001fdf8                __divdi3
 *fill*         0x00000000c001ff43        0x1 
 .text          0x00000000c001ff44      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001ff44                __moddi3
 *fill*         0x00000000c00200c2        0x2 
 .text          0x00000000c00200c4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c00200c4                __udivdi3
 *fill*         0x00000000c00201c3        0x1 
 .text          0x00000000c00201c4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c00201c4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c00202e0        0x0
 .iplt          0x00000000c00202e0        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c00202de        0xf
 .init          0x00000000c00202de        0x3 crti.32
                0x00000000c00202de                _init
 .init          0x00000000c00202e1        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c00202e6        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c00202eb        0x2 crtn.32

.fini           0x00000000c00202ed        0xa
 .fini          0x00000000c00202ed        0x3 crti.32
                0x00000000c00202ed                _fini
 .fini          0x00000000c00202f0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c00202f5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00202f8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c00202f8       0x1a hal/device.32
                0x00000000c00202f8                DriverlessDevice::~DriverlessDevice()
                0x00000000c00202f8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020312       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020312       0x2a hal/device.32
                0x00000000c0020312                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002033c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002033c       0xdc hal/device.32
                0x00000000c002033c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020418       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020418       0x42 hal/device.32
                0x00000000c0020418                LinkedList<Device>::LinkedList()
                0x00000000c0020418                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002045c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002045c       0x1c hal/timer.32
                0x00000000c002045c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020478        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020478        0x7 hal/timer.32
                0x00000000c0020478                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020480       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020480       0xbc hal/timer.32
                0x00000000c0020480                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002053c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002053c       0xda hal/timer.32
                0x00000000c002053c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0020618       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0020618       0x23 hw/acpi.32
                0x00000000c0020618                ACPI::~ACPI()
                0x00000000c0020618                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002063c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002063c       0x2a hw/acpi.32
                0x00000000c002063c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0020668        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0020668        0x2 hw/acpi.32
                0x00000000c0020668                LinkedList<Device>::~LinkedList()
                0x00000000c0020668                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002066c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002066c       0x1c hw/acpi.32
                0x00000000c002066c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0020688        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0020688        0x7 hw/acpi.32
                0x00000000c0020688                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020690       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020690       0xb8 hw/acpi.32
                0x00000000c0020690                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0020748       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0020748       0x23 krnl/computer.32
                0x00000000c0020748                Computer::~Computer()
                0x00000000c0020748                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002076c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002076c       0x2a krnl/computer.32
                0x00000000c002076c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0020796       0x24
 .text._Z10idleCommonv
                0x00000000c0020796       0x24 krnl/idle.32
                0x00000000c0020796                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00207ba        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00207ba        0x2 krnl/unixfile.32
                0x00000000c00207ba                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00207ba                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00207bc       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00207bc       0x42 krnl/unixfile.32
                0x00000000c00207bc                LinkedList<UnixFile>::LinkedList()
                0x00000000c00207bc                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00207fe       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00207fe       0xd3 krnl/unixfile.32
                0x00000000c00207fe                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00208d2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00208d2        0x7 krnl/unixfile.32
                0x00000000c00208d2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00208da       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00208da       0xa1 krnl/unixfile.32
                0x00000000c00208da                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002097c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002097c        0x8 krnl/unixfile.32
                0x00000000c002097c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020984        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020984        0x8 sys/kill.32
                0x00000000c0020984                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002098c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002098c        0x2 thr/prcssthr.32
                0x00000000c002098c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002098c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020990       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020990       0x49 thr/prcssthr.32
                0x00000000c0020990                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020990                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00209dc       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00209dc       0x42 thr/prcssthr.32
                0x00000000c00209dc                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00209dc                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c0020a1e       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0020a1e       0x23 arch/i386/hal.32
                0x00000000c0020a1e                CPU::~CPU()
                0x00000000c0020a1e                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020a42       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020a42       0x2a arch/i386/hal.32
                0x00000000c0020a42                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c0020a6c       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020a6c       0x23 hw/bus/pci.32
                0x00000000c0020a6c                PCI::~PCI()
                0x00000000c0020a6c                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0020a90       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0020a90       0x2a hw/bus/pci.32
                0x00000000c0020a90                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020aba       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020aba       0x23 hw/diskctrl/ide.32
                0x00000000c0020aba                IDE::~IDE()
                0x00000000c0020aba                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020ade       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020ade       0x2a hw/diskctrl/ide.32
                0x00000000c0020ade                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020b08       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020b08       0x23 hw/diskctrl/satabus.32
                0x00000000c0020b08                SATABus::~SATABus()
                0x00000000c0020b08                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020b2c       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020b2c       0x2a hw/diskctrl/satabus.32
                0x00000000c0020b2c                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020b56       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020b56       0x23 hw/diskphys/ata.32
                0x00000000c0020b56                ATA::~ATA()
                0x00000000c0020b56                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020b7a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020b7a       0x2a hw/diskphys/ata.32
                0x00000000c0020b7a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0020ba4       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0020ba4       0x23 hw/diskphys/atapi.32
                0x00000000c0020ba4                ATAPI::~ATAPI()
                0x00000000c0020ba4                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020bc8       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020bc8       0x2a hw/diskphys/atapi.32
                0x00000000c0020bc8                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0020bf2       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0020bf2       0x23 hw/diskphys/sata.32
                0x00000000c0020bf2                SATA::~SATA()
                0x00000000c0020bf2                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020c16       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020c16       0x2a hw/diskphys/sata.32
                0x00000000c0020c16                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0020c40       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0020c40       0x23 hw/diskphys/satapi.32
                0x00000000c0020c40                SATAPI::~SATAPI()
                0x00000000c0020c40                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0020c64       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0020c64       0x2a hw/diskphys/satapi.32
                0x00000000c0020c64                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020c8e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020c8e       0x23 hw/intctrl/apic.32
                0x00000000c0020c8e                IOAPIC::~IOAPIC()
                0x00000000c0020c8e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0020cb2       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0020cb2       0x2a hw/intctrl/apic.32
                0x00000000c0020cb2                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020cdc       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020cdc       0x23 hw/timer/apictimer.32
                0x00000000c0020cdc                APICTimer::~APICTimer()
                0x00000000c0020cdc                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0020d00       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0020d00       0x2a hw/timer/apictimer.32
                0x00000000c0020d00                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020d2c       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020d2c       0x23 hw/timer/pit.32
                0x00000000c0020d2c                PIT::~PIT()
                0x00000000c0020d2c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0020d50       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0020d50       0x2a hw/timer/pit.32
                0x00000000c0020d50                PIT::~PIT()

.rodata         0x00000000c0020d7a     0x3a2a
                0x00000000c0020d7a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020d7a        0x2 
 .ctors         0x00000000c0020d7c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0020d80        0x4 krnl/unixfile.32
 .ctors         0x00000000c0020d84        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020d88        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020d8c                end_ctors = .
                0x00000000c0020d8c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020d8c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0020d90        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020d90                __DTOR_END__
                0x00000000c0020d94                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020d94        0xc 
 .rodata        0x00000000c0020da0      0x101 acpica/utclib.32
                0x00000000c0020da0                AcpiGbl_Ctypes
 *fill*         0x00000000c0020ea1        0x3 
 .rodata        0x00000000c0020ea4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c0020ebc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020f06       0x1a 
 .rodata        0x00000000c0020f20       0xed fs/fat/ff.32
 *fill*         0x00000000c002100d       0x13 
 .rodata        0x00000000c0021020      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0021420       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c002148f        0x1 
 .rodata        0x00000000c0021490      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00215e0      0x169 dbg/usban.32
 *fill*         0x00000000c0021749        0x3 
 .rodata.str1.4
                0x00000000c002174c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0021883      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c00219a6       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c00219ff        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021a00       0x6c fs/vfs.32
                0x00000000c0021a00                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021a6c       0x1c fs/vfs.32
                0x00000000c0021a6c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021a88       0x1c fs/vfs.32
                0x00000000c0021a88                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021aa4       0x2c hal/bus.32
                0x00000000c0021aa4                vtable for Bus
 .rodata.str1.1
                0x00000000c0021ad0       0x70 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0021b40       0x3c hal/clock.32
                0x00000000c0021b40                vtable for Clock
 *fill*         0x00000000c0021b7c        0x4 
 .rodata        0x00000000c0021b80       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021bb0       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021c14       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021c36       0x15 hal/device.32
 *fill*         0x00000000c0021c4b        0x1 
 .rodata._ZTV6Device
                0x00000000c0021c4c       0x2c hal/device.32
                0x00000000c0021c4c                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021c78       0x2c hal/device.32
                0x00000000c0021c78                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021ca4       0x2c hal/diskctrl.32
                0x00000000c0021ca4                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021cd0       0x38 hal/diskphys.32
                0x00000000c0021cd0                vtable for PhysicalDisk
 .rodata        0x00000000c0021d08       0x53 hal/keybrd.32
 *fill*         0x00000000c0021d5b        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0021d5c       0x34 hal/keybrd.32
                0x00000000c0021d5c                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021d90       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021dd4       0x2c hal/logidisk.32
                0x00000000c0021dd4                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021e00       0x2c hal/mouse.32
                0x00000000c0021e00                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021e2c       0x34 hal/nic.32
                0x00000000c0021e2c                vtable for NIC
 .rodata.str1.1
                0x00000000c0021e60        0xb hal/partition.32
 *fill*         0x00000000c0021e6b        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021e6c       0x44 hal/serial.32
                0x00000000c0021e6c                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021eb0       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021efb        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021f03       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021f03       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0021f03       0xca hal/timer.32
 *fill*         0x00000000c0021fcd        0x3 
 .rodata._ZTV5Timer
                0x00000000c0021fd0       0x30 hal/timer.32
                0x00000000c0021fd0                vtable for Timer
 .rodata.str1.1
                0x00000000c0022000       0x3e hal/vcache.32
 *fill*         0x00000000c002203e        0x2 
 .rodata._ZTV6VCache
                0x00000000c0022040       0x10 hal/vcache.32
                0x00000000c0022040                vtable for VCache
 .rodata.str1.1
                0x00000000c0022050       0xba hal/video.32
 *fill*         0x00000000c002210a        0x2 
 .rodata._ZTV5Video
                0x00000000c002210c       0x4c hal/video.32
                0x00000000c002210c                vtable for Video
 .rodata.str1.1
                0x00000000c0022158      0x17e hw/acpi.32
 *fill*         0x00000000c00222d6        0x2 
 .rodata.str1.4
                0x00000000c00222d8       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c002234f       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c002234f        0x8 hw/acpi.32
 *fill*         0x00000000c002234f        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0022350       0x2c hw/acpi.32
                0x00000000c0022350                vtable for ACPI
 .rodata.str1.1
                0x00000000c002237c       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00223bc       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c00223dd       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0022410        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0022413       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c0022489        0x3 
 .rodata.str1.4
                0x00000000c002248c       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c0022544       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c00225ed        0x3 
 .rodata._ZTV8Computer
                0x00000000c00225f0       0x2c krnl/computer.32
                0x00000000c00225f0                vtable for Computer
 .rodata.str1.1
                0x00000000c002261c       0x3c krnl/env.32
 .rodata        0x00000000c0022658       0xbe krnl/fault.32
 *fill*         0x00000000c0022716        0x2 
 .rodata.str1.4
                0x00000000c0022718       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0022748        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0022757       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c00227b8      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00228bd       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0022915       0x39 krnl/pipe.32
 *fill*         0x00000000c002294e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0022950       0x1c krnl/pipe.32
                0x00000000c0022950                vtable for Pipe
 .rodata.str1.1
                0x00000000c002296c       0x91 krnl/resolve.32
 *fill*         0x00000000c00229fd        0x3 
 .rodata.str1.4
                0x00000000c0022a00       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c0022a1f       0xc9 krnl/signal.32
 .rodata.str1.4
                0x00000000c0022ae8       0x72 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c0022b5a       0x7e krnl/syscalls.32
                                         0x86 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022bd8       0x2b krnl/terminal.32
 *fill*         0x00000000c0022c03        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0022c04       0x1c krnl/terminal.32
                0x00000000c0022c04                vtable for VgaText
 .rodata        0x00000000c0022c20       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0022c5b       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0022c5b       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0022c5b       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0022c5b        0x8 krnl/unixfile.32
 *fill*         0x00000000c0022c5b        0x1 
 .rodata.str1.4
                0x00000000c0022c5c       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0022c7c       0x46 krnl/unixfile.32
 *fill*         0x00000000c0022cc2        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c0022cc4       0x1c krnl/unixfile.32
                0x00000000c0022cc4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0022ce0       0x1c krnl/unixfile.32
                0x00000000c0022ce0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0022cfc      0x523 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c002321f      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0023380        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c002338f        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0023399       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00233ba       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c002340e       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c002343a      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023644       0x7c thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00236c0       0xf0 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00237b0       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00237b0       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00237b0       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00237b0        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00237b0       0xdd vm86/vm8086.32
 *fill*         0x00000000c002388d        0x3 
 .rodata        0x00000000c0023890       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00238c0      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c0023c0b        0x1 
 .rodata.str1.4
                0x00000000c0023c0c       0x57 arch/i386/hal.32
 *fill*         0x00000000c0023c63        0x1 
 .rodata._ZTV3CPU
                0x00000000c0023c64       0x2c arch/i386/hal.32
                0x00000000c0023c64                vtable for CPU
 .rodata.str1.4
                0x00000000c0023c90       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0023cf1       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0023d2f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0023d44       0x3c arch/i386/rtc.32
                0x00000000c0023d44                vtable for RTC
 .rodata.str1.1
                0x00000000c0023d80       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0023dc1        0x3 
 .rodata._ZTV3FAT
                0x00000000c0023dc4       0x6c fs/fat/vfslink.32
                0x00000000c0023dc4                vtable for FAT
 .rodata.str1.1
                0x00000000c0023e30       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0023e30      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0023f68       0x6c fs/iso9660/vfslink.32
                0x00000000c0023f68                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0023fd4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0024018       0x34 hal/sound/sndcard.32
                0x00000000c0024018                vtable for SoundCard
 .rodata.str1.4
                0x00000000c002404c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002408b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00240c3       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0024164       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00241c8       0x2c hw/bus/pci.32
                0x00000000c00241c8                vtable for PCI
 .rodata.str1.1
                0x00000000c00241f4      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0024318       0x2c hw/diskctrl/ide.32
                0x00000000c0024318                vtable for IDE
 .rodata.str1.4
                0x00000000c0024344       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0024368       0x2c hw/diskctrl/satabus.32
                0x00000000c0024368                vtable for SATABus
 .rodata.str1.1
                0x00000000c0024394       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c002444f        0x1 
 .rodata._ZTV3ATA
                0x00000000c0024450       0x38 hw/diskphys/ata.32
                0x00000000c0024450                vtable for ATA
 .rodata.str1.1
                0x00000000c0024488        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0024495        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0024498       0x38 hw/diskphys/atapi.32
                0x00000000c0024498                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00244d0       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0024558       0x38 hw/diskphys/sata.32
                0x00000000c0024558                vtable for SATA
 .rodata.str1.1
                0x00000000c0024590       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c002467a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c002467c       0x38 hw/diskphys/satapi.32
                0x00000000c002467c                vtable for SATAPI
 .rodata        0x00000000c00246b4       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c00246da        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c00246dc       0x2c hw/intctrl/apic.32
                0x00000000c00246dc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0024708       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0024723        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0024724       0x30 hw/timer/apictimer.32
                0x00000000c0024724                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0024754       0x1d hw/timer/pit.32
 *fill*         0x00000000c0024771        0x3 
 .rodata._ZTV3PIT
                0x00000000c0024774       0x30 hw/timer/pit.32
                0x00000000c0024774                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00247a4      0xa61
 *(.data)
 .data          0x00000000c00247a4        0x0 crti.32
 .data          0x00000000c00247a4        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00247a4                __dso_handle
 .data          0x00000000c00247a8        0x0 acpica/utclib.32
 .data          0x00000000c00247a8        0x0 krnl/malloc.32
 .data          0x00000000c00247a8        0x0 libk/ctype.32
 .data          0x00000000c00247a8        0x0 libk/string.32
 .data          0x00000000c00247a8        0x0 arch/i386/cc.32
 .data          0x00000000c00247a8        0x0 fs/fat/diskio.32
 .data          0x00000000c00247a8        0x0 fs/fat/ff.32
 .data          0x00000000c00247a8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00247a8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00247a8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00247a8        0x0 dbg/kconsole.32
 *fill*         0x00000000c00247a8       0x18 
 .data          0x00000000c00247c0       0x28 dbg/usban.32
                0x00000000c00247c0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00247e8        0x0 fs/symlink.32
 .data          0x00000000c00247e8        0x0 fs/vfs.32
 .data          0x00000000c00247e8        0x0 hal/bus.32
 .data          0x00000000c00247e8        0x0 hal/buzzer.32
 .data          0x00000000c00247e8        0x0 hal/clock.32
 .data          0x00000000c00247e8        0x0 hal/device.32
 .data          0x00000000c00247e8        0x0 hal/diskctrl.32
 .data          0x00000000c00247e8        0x0 hal/diskphys.32
 .data          0x00000000c00247e8        0x0 hal/fpu.32
 .data          0x00000000c00247e8        0x0 hal/intctrl.32
 .data          0x00000000c00247e8        0x0 hal/keybrd.32
 .data          0x00000000c00247e8        0x0 hal/logidisk.32
 .data          0x00000000c00247e8        0x0 hal/mouse.32
 .data          0x00000000c00247e8        0x0 hal/nic.32
 .data          0x00000000c00247e8        0x0 hal/partition.32
 .data          0x00000000c00247e8        0x0 hal/serial.32
 .data          0x00000000c00247e8        0x0 hal/timer.32
 .data          0x00000000c00247e8        0x0 hal/vcache.32
 .data          0x00000000c00247e8        0x0 hal/video.32
 .data          0x00000000c00247e8       0x10 hw/acpi.32
                0x00000000c00247e8                legacyIRQRemaps
 .data          0x00000000c00247f8        0x0 krnl/atexit.32
 .data          0x00000000c00247f8        0x0 krnl/bootmsg.32
 .data          0x00000000c00247f8        0x4 krnl/c++.32
                0x00000000c00247f8                __stack_chk_guard
 .data          0x00000000c00247fc        0x0 krnl/cdefs.32
 *fill*         0x00000000c00247fc        0x4 
 .data          0x00000000c0024800      0x100 krnl/cm.32
                0x00000000c0024800                CmComponents
 .data          0x00000000c0024900        0x0 krnl/compat.32
 .data          0x00000000c0024900        0x0 krnl/computer.32
 .data          0x00000000c0024900      0x400 krnl/crc32.32
                0x00000000c0024900                KiPolyLookupCRC32
 .data          0x00000000c0024d00       0x4d krnl/env.32
                0x00000000c0024d00                defaultSysEnv
 .data          0x00000000c0024d4d        0x0 krnl/fault.32
 .data          0x00000000c0024d4d        0x0 krnl/gdt.32
 .data          0x00000000c0024d4d        0x0 krnl/idle.32
 .data          0x00000000c0024d4d        0x0 krnl/idt.32
 .data          0x00000000c0024d4d        0x0 krnl/inlines.32
 *fill*         0x00000000c0024d4d        0x3 
 .data          0x00000000c0024d50        0x4 krnl/kheap.32
 .data          0x00000000c0024d54        0x0 krnl/mailbox.32
 .data          0x00000000c0024d54        0x0 krnl/main.32
 .data          0x00000000c0024d54        0x0 krnl/mutex.32
 .data          0x00000000c0024d54        0x0 krnl/panic.32
 .data          0x00000000c0024d54        0x4 krnl/physmgr.32
                0x00000000c0024d54                Phys::bitmap
 .data          0x00000000c0024d58        0x0 krnl/pipe.32
 .data          0x00000000c0024d58        0x0 krnl/powctrl.32
 .data          0x00000000c0024d58        0x0 krnl/random.32
 .data          0x00000000c0024d58        0x0 krnl/resolve.32
 .data          0x00000000c0024d58        0x0 krnl/semaphore.32
 *fill*         0x00000000c0024d58        0x8 
 .data          0x00000000c0024d60       0x4c krnl/signal.32
                0x00000000c0024d60                KiDefaultSignalHandlers
 *fill*         0x00000000c0024dac       0x14 
 .data          0x00000000c0024dc0      0x104 krnl/syscalls.32
                0x00000000c0024dc0                systemCallHandlers
 *fill*         0x00000000c0024ec4       0x1c 
 .data          0x00000000c0024ee0       0x60 krnl/terminal.32
                0x00000000c0024ee0                VgaText::hiddenOut
                0x00000000c0024f00                ansiToVGAMappings
 .data          0x00000000c0024f40        0x0 krnl/tss.32
 .data          0x00000000c0024f40        0x4 krnl/unixfile.32
                0x00000000c0024f40                UnixFile::nextFd
 .data          0x00000000c0024f44       0x15 krnl/virtmgr.32
                0x00000000c0024f44                Virt::pageAllocPtr
                0x00000000c0024f48                Virt::bitmap
                0x00000000c0024f4c                Virt::swapfileSectorsPerPage
                0x00000000c0024f50                Virt::swapfileLength
                0x00000000c0024f54                Virt::swapfileSector
                0x00000000c0024f58                Virt::swapfileDrive
 .data          0x00000000c0024f59        0x0 sys/eject.32
 .data          0x00000000c0024f59        0x0 sys/exit.32
 .data          0x00000000c0024f59        0x0 sys/getcwd.32
 .data          0x00000000c0024f59        0x0 sys/getpid.32
 .data          0x00000000c0024f59        0x0 sys/getramdata.32
 .data          0x00000000c0024f59        0x0 sys/getvgaptr.32
 .data          0x00000000c0024f59        0x0 sys/kill.32
 .data          0x00000000c0024f59        0x0 sys/loaddll.32
 .data          0x00000000c0024f59        0x0 sys/read.32
 .data          0x00000000c0024f59        0x0 sys/registersignal.32
 .data          0x00000000c0024f59        0x0 sys/registry.32
 .data          0x00000000c0024f59        0x0 sys/sbrk.32
 .data          0x00000000c0024f59        0x0 sys/setcwd.32
 .data          0x00000000c0024f59        0x0 sys/settime.32
 .data          0x00000000c0024f59        0x0 sys/symlink.32
 .data          0x00000000c0024f59        0x0 sys/timezone.32
 .data          0x00000000c0024f59        0x0 sys/truncate.32
 .data          0x00000000c0024f59        0x0 sys/write.32
 .data          0x00000000c0024f59        0x0 sys/wsbe.32
 .data          0x00000000c0024f59        0x0 sys/yield.32
 .data          0x00000000c0024f59        0x0 thr/elf.32
 .data          0x00000000c0024f59        0x0 thr/exec.32
 *fill*         0x00000000c0024f59        0x3 
 .data          0x00000000c0024f5c        0x4 thr/prcssthr.32
                0x00000000c0024f5c                Thr::nextPID
 .data          0x00000000c0024f60        0x0 vm86/vm8086.32
 .data          0x00000000c0024f60      0x2a4 arch/i386/hal.32
                0x00000000c0024f60                exceptionNames
                0x00000000c0025200                lastCode
 .data          0x00000000c0025204        0x0 arch/i386/intctrl.32
 .data          0x00000000c0025204        0x0 arch/i386/pic.32
 .data          0x00000000c0025204        0x0 arch/i386/rtc.32
 .data          0x00000000c0025204        0x0 arch/i386/vga.32
 .data          0x00000000c0025204        0x0 fs/fat/vfslink.32
 .data          0x00000000c0025204        0x0 fs/iso9660/helper.32
 .data          0x00000000c0025204        0x1 fs/iso9660/vfslink.32
                0x00000000c0025204                recentDriveletter
 .data          0x00000000c0025205        0x0 hal/sound/sndcard.32
 .data          0x00000000c0025205        0x0 hal/sound/sndport.32
 .data          0x00000000c0025205        0x0 hw/bus/isa.32
 .data          0x00000000c0025205        0x0 hw/bus/pci.32
 .data          0x00000000c0025205        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0025205        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0025205        0x0 hw/diskphys/ata.32
 .data          0x00000000c0025205        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0025205        0x0 hw/diskphys/sata.32
 .data          0x00000000c0025205        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0025205        0x0 hw/intctrl/apic.32
 .data          0x00000000c0025205        0x0 hw/timer/apictimer.32
 .data          0x00000000c0025205        0x0 hw/timer/pit.32
 .data          0x00000000c0025205        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0025205        0x0 crtn.32
 .data          0x00000000c0025205        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0025205        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0025205        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0025205        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0025208        0x0
 .got           0x00000000c0025208        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0025208        0x0
 .got.plt       0x00000000c0025208        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0025208        0x0
 .igot.plt      0x00000000c0025208        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0025208        0x0
 .tm_clone_table
                0x00000000c0025208        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0025208        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0025205      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0025205        0x3 
 .eh_frame      0x00000000c0025208        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0025208        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0025208       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0025260       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00252a0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002530c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0026000       0x7d
 *(userkernel)
 userkernel     0x00000000c0026000       0x52 krnl/signal.32
                0x00000000c0026000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002602c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0026052       0x2b krnl/syscalls.32
                0x00000000c0026052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0027000        0x1
 *(align_previous)
 align_previous
                0x00000000c0027000        0x1 krnl/signal.32
                0x00000000c0027000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0027004        0x0
 .rel.got       0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0027001     0x7127
                0x00000000c0027001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0027001       0x1f 
 COMMON         0x00000000c0027020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0027020                dcache
                0x00000000c0027060                cdDriveLetter
                0x00000000c0027080                icache
 *(.bss)
 .bss           0x00000000c00270c0        0x0 crti.32
 .bss           0x00000000c00270c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00270e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00270e4       0x1c 
 .bss           0x00000000c0027100      0x378 krnl/malloc.32
 .bss           0x00000000c0027478        0x0 libk/ctype.32
 .bss           0x00000000c0027478        0x0 libk/string.32
 .bss           0x00000000c0027478        0x0 arch/i386/cc.32
 .bss           0x00000000c0027478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0027478        0x8 
 .bss           0x00000000c0027480       0x88 fs/fat/ff.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0027508       0x18 
 .bss           0x00000000c0027520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0027eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0027eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0027eb8        0x8 
 .bss           0x00000000c0027ec0     0x2444 fs/symlink.32
                0x00000000c0027ec0                kiNumWaitingRoomSymlinks
                0x00000000c0027ee0                kiNewlyCreatedIDs
                0x00000000c0027f00                kiNewlyCreatedSymlinks
                0x00000000c0028300                kiSymlinkHashTable
                0x00000000c002a300                kiBaseSymlinkID
 .bss           0x00000000c002a304        0x4 fs/vfs.32
                0x00000000c002a304                installedFilesystems
 .bss           0x00000000c002a308        0x0 hal/bus.32
 .bss           0x00000000c002a308        0x0 hal/buzzer.32
 .bss           0x00000000c002a308        0x8 hal/clock.32
                0x00000000c002a308                keDstOn
                0x00000000c002a309                keTimezoneHalfHourOffset
                0x00000000c002a30c                keTimezoneHourOffset
 .bss           0x00000000c002a310        0x0 hal/device.32
 .bss           0x00000000c002a310        0x0 hal/diskctrl.32
 .bss           0x00000000c002a310        0x0 hal/diskphys.32
 .bss           0x00000000c002a310        0x0 hal/fpu.32
 .bss           0x00000000c002a310        0x0 hal/intctrl.32
 *fill*         0x00000000c002a310       0x10 
 .bss           0x00000000c002a320      0x428 hal/keybrd.32
                0x00000000c002a320                keyboardWaitingTaskList
                0x00000000c002a324                keyboardSetupYet
                0x00000000c002a328                guiKeyboardHandler
                0x00000000c002a340                keystates
 *fill*         0x00000000c002a748       0x18 
 .bss           0x00000000c002a760       0x88 hal/logidisk.32
                0x00000000c002a760                diskAssignments
                0x00000000c002a780                disks
 .bss           0x00000000c002a7e8        0x4 hal/mouse.32
                0x00000000c002a7e8                guiMouseHandler
 .bss           0x00000000c002a7ec        0x0 hal/nic.32
 .bss           0x00000000c002a7ec        0x0 hal/partition.32
 .bss           0x00000000c002a7ec        0x0 hal/serial.32
 .bss           0x00000000c002a7ec        0x4 hal/timer.32
                0x00000000c002a7ec                milliTenthsSinceBoot
 .bss           0x00000000c002a7f0        0x0 hal/vcache.32
 .bss           0x00000000c002a7f0        0x4 hal/video.32
                0x00000000c002a7f0                screen
 *fill*         0x00000000c002a7f4        0xc 
 .bss           0x00000000c002a800      0x480 hw/acpi.32
                0x00000000c002a800                nextACPITable
                0x00000000c002a820                acpiTables
                0x00000000c002aa20                usingXSDT
                0x00000000c002aa24                RSDTpointer
                0x00000000c002aa28                RSDPpointer
                0x00000000c002aa2c                nextAPICNMI
                0x00000000c002aa40                apicNMIInfo
                0x00000000c002aac0                legacyIRQFlags
                0x00000000c002aae0                ioapicDiscoveryNumber
                0x00000000c002ab00                ioapicFoundInMADT
                0x00000000c002ab20                ioapicAddresses
                0x00000000c002aba0                ioapicGSIBase
                0x00000000c002ac20                processorDiscoveryNumber
                0x00000000c002ac40                matchingAPICID
                0x00000000c002ac60                processorID
 .bss           0x00000000c002ac80       0xe0 krnl/atexit.32
                0x00000000c002ac80                KiNextAtexitHandler
                0x00000000c002aca0                KiAtexitContexts
                0x00000000c002ad00                KiAtexitHandlers
 .bss           0x00000000c002ad60        0x0 krnl/bootmsg.32
 .bss           0x00000000c002ad60        0x0 krnl/c++.32
 .bss           0x00000000c002ad60        0x0 krnl/cdefs.32
 .bss           0x00000000c002ad60        0x4 krnl/cm.32
 .bss           0x00000000c002ad64        0x0 krnl/compat.32
 .bss           0x00000000c002ad64       0x12 krnl/computer.32
                0x00000000c002ad64                systemSleepFunction
                0x00000000c002ad68                systemResetFunction
                0x00000000c002ad6c                systemShutdownFunction
                0x00000000c002ad70                Krnl::computer
                0x00000000c002ad74                KeIsPreemptionOn
                0x00000000c002ad75                KeIsSchedulingOn
 .bss           0x00000000c002ad76        0x0 krnl/crc32.32
 *fill*         0x00000000c002ad76        0x2 
 .bss           0x00000000c002ad78        0x8 krnl/env.32
                0x00000000c002ad78                KeUserEnv
                0x00000000c002ad7c                KeSystemEnv
 .bss           0x00000000c002ad80     0x2000 krnl/fault.32
                0x00000000c002ad80                keInterruptContexts
                0x00000000c002bd80                keInterruptHandlers
 .bss           0x00000000c002cd80        0x6 krnl/gdt.32
                0x00000000c002cd80                gdtDescr
 .bss           0x00000000c002cd86        0x0 krnl/idle.32
 *fill*         0x00000000c002cd86        0x2 
 .bss           0x00000000c002cd88        0x6 krnl/idt.32
                0x00000000c002cd88                idtDescr
 .bss           0x00000000c002cd8e        0x0 krnl/inlines.32
 .bss           0x00000000c002cd8e        0x0 krnl/kheap.32
 .bss           0x00000000c002cd8e        0x0 krnl/mailbox.32
 *fill*         0x00000000c002cd8e        0x2 
 .bss           0x00000000c002cd90        0x4 krnl/main.32
                0x00000000c002cd90                keBootSettings
 .bss           0x00000000c002cd94        0x0 krnl/mutex.32
 .bss           0x00000000c002cd94        0x1 krnl/panic.32
                0x00000000c002cd94                KeIsKernelInPanic
 *fill*         0x00000000c002cd95        0x3 
 .bss           0x00000000c002cd98       0x29 krnl/physmgr.32
                0x00000000c002cd98                Phys::forbidEvictions
                0x00000000c002cd9c                Phys::currentPagePointer
                0x00000000c002cda0                Phys::highestMem
                0x00000000c002cda4                Phys::oldPercent
                0x00000000c002cda8                Phys::usedPages
                0x00000000c002cdac                Phys::usablePages
                0x00000000c002cdb0                Phys::dmaUsage
 .bss           0x00000000c002cdc1        0x0 krnl/pipe.32
 *fill*         0x00000000c002cdc1       0x1f 
 .bss           0x00000000c002cde0       0x48 krnl/powctrl.32
                0x00000000c002cde0                powCtrlOnBattery
                0x00000000c002ce00                currentPowerSettings
                0x00000000c002ce24                secondsSinceLastUserIO
 .bss           0x00000000c002ce28        0x8 krnl/random.32
                0x00000000c002ce28                kiRandSeed
 .bss           0x00000000c002ce30        0x0 krnl/resolve.32
 .bss           0x00000000c002ce30        0x0 krnl/semaphore.32
 .bss           0x00000000c002ce30        0x0 krnl/signal.32
 .bss           0x00000000c002ce30        0x0 krnl/syscalls.32
 .bss           0x00000000c002ce30        0x9 krnl/terminal.32
                0x00000000c002ce30                terminalCycle
                0x00000000c002ce34                activeTerminal
                0x00000000c002ce38                VgaText::graphicMode
 *fill*         0x00000000c002ce39        0x1 
 .bss           0x00000000c002ce3a        0x2 krnl/tss.32
                0x00000000c002ce3a                doubleFaultSelector
 *fill*         0x00000000c002ce3c        0x4 
 .bss           0x00000000c002ce40       0x84 krnl/unixfile.32
                0x00000000c002ce40                sfileLpt
                0x00000000c002ce80                sfileCom
                0x00000000c002cea4                sfileNul
                0x00000000c002cea8                sfilePnt
                0x00000000c002ceac                sfileAux
                0x00000000c002ceb0                sfileCon
                0x00000000c002ceb4                initialFilesAdded
                0x00000000c002ceb8                unixFileLinkedList
 .bss           0x00000000c002cec4       0x10 krnl/virtmgr.32
                0x00000000c002cec4                twswaps
                0x00000000c002cec8                swapBalance
                0x00000000c002cecc                Virt::swapfileBitmap
                0x00000000c002ced0                keFirstVAS
 .bss           0x00000000c002ced4        0x0 sys/eject.32
 .bss           0x00000000c002ced4        0x0 sys/exit.32
 .bss           0x00000000c002ced4        0x0 sys/getcwd.32
 .bss           0x00000000c002ced4        0x0 sys/getpid.32
 .bss           0x00000000c002ced4        0x0 sys/getramdata.32
 .bss           0x00000000c002ced4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002ced4        0x0 sys/kill.32
 .bss           0x00000000c002ced4        0x0 sys/loaddll.32
 .bss           0x00000000c002ced4        0x0 sys/read.32
 .bss           0x00000000c002ced4        0x0 sys/registersignal.32
 .bss           0x00000000c002ced4        0x0 sys/registry.32
 .bss           0x00000000c002ced4        0x0 sys/sbrk.32
 .bss           0x00000000c002ced4        0x0 sys/setcwd.32
 .bss           0x00000000c002ced4        0x0 sys/settime.32
 .bss           0x00000000c002ced4        0x0 sys/symlink.32
 .bss           0x00000000c002ced4        0x0 sys/timezone.32
 .bss           0x00000000c002ced4        0x0 sys/truncate.32
 .bss           0x00000000c002ced4        0x0 sys/write.32
 .bss           0x00000000c002ced4        0x0 sys/wsbe.32
 .bss           0x00000000c002ced4        0x0 sys/yield.32
 *fill*         0x00000000c002ced4        0xc 
 .bss           0x00000000c002cee0      0x7a4 thr/elf.32
                0x00000000c002cee0                Thr::driverLookupNext
                0x00000000c002cf00                Thr::driverLookupLen
                0x00000000c002d100                Thr::driverLookupAddr
                0x00000000c002d300                Thr::driverNameLookup
                0x00000000c002d500                Thr::kernelSymbols
                0x00000000c002d580                Thr::kernelStringTable
                0x00000000c002d600                Thr::kernelSymbolTable
                0x00000000c002d680                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002d684        0x0 thr/exec.32
 *fill*         0x00000000c002d684        0x4 
 .bss           0x00000000c002d688       0x70 thr/prcssthr.32
                0x00000000c002d688                KiRestorePreemptionValue
                0x00000000c002d68c                KiPreemptionDisableCounter
                0x00000000c002d690                cleanerThread
                0x00000000c002d694                weNeedTheCleanerToNotBlock
                0x00000000c002d698                retValLockStuff
                0x00000000c002d69c                retValSchedLock
                0x00000000c002d6a0                lockStuffLock
                0x00000000c002d6a4                schedulerLock
                0x00000000c002d6a8                taskSwitchesPostponedFlag
                0x00000000c002d6ac                postponeTaskSwitchesCounter
                0x00000000c002d6b0                irqDisableCounter
                0x00000000c002d6b4                terminatedTaskList
                0x00000000c002d6c0                sleepingTaskList
                0x00000000c002d6cc                taskList
                0x00000000c002d6d8                kernelProcess
 *fill*         0x00000000c002d6f8        0x8 
 .bss           0x00000000c002d700       0x40 vm86/vm8086.32
                0x00000000c002d700                Vm::started8086Yet
                0x00000000c002d704                Vm::vmRetV
                0x00000000c002d708                Vm::vmDone
                0x00000000c002d709                Vm::vmReady
                0x00000000c002d70c                Vm::vm86Thread
                0x00000000c002d710                Vm::vmToHostCommsPtr
                0x00000000c002d720                Vm::vmToHostComms
 .bss           0x00000000c002d740       0x54 arch/i386/hal.32
                0x00000000c002d740                apic
                0x00000000c002d744                guiPanicHandler
                0x00000000c002d748                fpuOwner
                0x00000000c002d74c                coproLoadFunc
                0x00000000c002d750                coproSaveFunc
                0x00000000c002d754                lastD
                0x00000000c002d758                lastC
                0x00000000c002d75c                lastB
                0x00000000c002d760                lastA
                0x00000000c002d764                HalPageWriteCombiningFlag
                0x00000000c002d768                HalPageGlobalFlag
                0x00000000c002d76c                nmi
                0x00000000c002d770                vendorIDString
                0x00000000c002d77d                familyID
                0x00000000c002d77e                model
                0x00000000c002d77f                processorType
                0x00000000c002d780                steppingID
                0x00000000c002d784                vendor
                0x00000000c002d788                opcodeDetectionMode
                0x00000000c002d78c                features
 .bss           0x00000000c002d794        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002d794        0x0 arch/i386/pic.32
 .bss           0x00000000c002d794        0x2 arch/i386/rtc.32
 .bss           0x00000000c002d796        0x0 arch/i386/vga.32
 *fill*         0x00000000c002d796        0xa 
 .bss           0x00000000c002d7a0       0xf0 fs/fat/vfslink.32
                0x00000000c002d7a0                FAT::fats
                0x00000000c002d7c0                FAT::vfsToFatRemaps
                0x00000000c002d840                fatToVFSRemaps
 .bss           0x00000000c002d890        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002d890       0x10 
 .bss           0x00000000c002d8a0      0x820 fs/iso9660/vfslink.32
                0x00000000c002d8a0                iso9660Owner
                0x00000000c002d8a4                recentSector
                0x00000000c002d8c0                recentBuffer
 .bss           0x00000000c002e0c0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002e0c0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002e0c0        0x0 hw/bus/isa.32
 .bss           0x00000000c002e0c0        0xd hw/bus/pci.32
                0x00000000c002e0c0                thePCI
 .bss           0x00000000c002e0cd        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002e0cd        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002e0cd        0x3 
 .bss           0x00000000c002e0d0        0x8 hw/diskphys/ata.32
                0x00000000c002e0d0                ataSectorsWritten
                0x00000000c002e0d4                ataSectorsRead
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002e0d8        0x8 
 .bss           0x00000000c002e0e0       0x41 hw/intctrl/apic.32
                0x00000000c002e0e0                noOfIOAPICs
                0x00000000c002e100                ioapics
                0x00000000c002e120                IOAPICsSetupYet
 .bss           0x00000000c002e121        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002e121        0x3 
 .bss           0x00000000c002e124        0x4 hw/timer/pit.32
                0x00000000c002e124                pitFreq
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002e128        0x0 crtn.32
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002e128                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003524f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
