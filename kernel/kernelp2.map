Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootflags.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/apic.32
 .group         0x0000000000000000        0xc arch/i386/apic.32
 .comment       0x0000000000000000       0x12 arch/i386/apic.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootflags.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/apic.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21aae
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x27e dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006efd                Dbg::logs(char*)
                0x00000000c0006f27                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f45                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f66                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00070dd        0x3 
 .text          0x00000000c00070e0      0x2d4 dbg/usban.32
                0x00000000c00070e0                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000714c                __ubsan_handle_type_mismatch_v1
                0x00000000c0007228                __ubsan_handle_pointer_overflow
                0x00000000c0007254                __ubsan_handle_out_of_bounds
                0x00000000c0007280                __ubsan_handle_add_overflow
                0x00000000c00072ac                __ubsan_handle_load_invalid_value
                0x00000000c00072d8                __ubsan_handle_divrem_overflow
                0x00000000c0007304                __ubsan_handle_mul_overflow
                0x00000000c0007330                __ubsan_handle_sub_overflow
                0x00000000c000735c                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007388                __ubsan_handle_negate_overflow
 .text          0x00000000c00073b4      0x812 fs/symlink.32
                0x00000000c0007503                KiDeinitialiseSymlinks(void*)
                0x00000000c0007594                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c0007617                KeInitialiseSymlinks()
                0x00000000c0007779                KiIsSymlinkRegistered(char const*)
                0x00000000c00078e3                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a8a                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007bc6      0xd9c fs/vfs.32
                0x00000000c0007bc6                File::read(unsigned long long, void*, int*)
                0x00000000c0007c1e                File::write(unsigned long long, void*, int*)
                0x00000000c0007c76                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007cce                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cfc                File::isAtty()
                0x00000000c0007d00                Directory::isAtty()
                0x00000000c0007d04                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007d0a                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007d10                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007d16                File::~File()
                0x00000000c0007d16                File::~File()
                0x00000000c0007d3a                File::~File()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d88                Directory::~Directory()
                0x00000000c0007db2                Filesystem::Filesystem()
                0x00000000c0007db2                Filesystem::Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007de4                Filesystem::~Filesystem()
                0x00000000c0007e08                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e32                Fs::initVFS()
                0x00000000c0007e5c                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000808a                File::File(char const*, Process*, bool)
                0x00000000c000808a                File::File(char const*, Process*, bool)
                0x00000000c0008188                File::File(char const*, Process*)
                0x00000000c0008188                File::File(char const*, Process*)
                0x00000000c00081a6                File::open(FileOpenMode)
                0x00000000c0008204                File::close()
                0x00000000c0008264                File::seek(unsigned long long)
                0x00000000c00082ba                File::truncate(unsigned long long)
                0x00000000c0008310                File::tell(unsigned long long*)
                0x00000000c0008360                File::rewind()
                0x00000000c0008374                File::unlink()
                0x00000000c00083c0                File::rename(char const*)
                0x00000000c000840e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000846a                File::exists()
                0x00000000c00084a8                File::stat(unsigned long long*, bool*)
                0x00000000c0008509                Fs::setcwd(Process*, char*)
                0x00000000c0008668                Directory::Directory(char const*, Process*)
                0x00000000c0008668                Directory::Directory(char const*, Process*)
                0x00000000c0008730                Directory::open()
                0x00000000c000878c                Directory::close()
                0x00000000c00087ec                Directory::unlink()
                0x00000000c0008838                Directory::rename(char const*)
                0x00000000c0008886                Directory::exists()
                0x00000000c00088c4                Directory::read(dirent*)
                0x00000000c0008910                Directory::create()
                0x00000000c000895c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c0008962        0x2 
 .text          0x00000000c0008964       0x86 hal/bus.32
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c000899c                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
                0x00000000c00089c0                Bus::~Bus()
 .text          0x00000000c00089ea       0x9b hal/buzzer.32
                0x00000000c00089ea                KeBeepThread(void*)
                0x00000000c0008a2b                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a85        0x1 
 .text          0x00000000c0008a86      0xe4e hal/clock.32
                0x00000000c0008a86                KeLoadTimezoneStrings()
                0x00000000c0008e15                KeGetTimezoneStringFromID(int)
                0x00000000c0008eb2                KeUpdateTimezone(char const*)
                0x00000000c0008fac                KeSetTimezone(char const*)
                0x00000000c0009009                KeSetTimezone(int)
                0x00000000c000903c                KeLoadTimezone()
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009110                Clock::~Clock()
                0x00000000c000913a                Clock::timeInSecondsLocal()
                0x00000000c00091a4                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0009224                KeDatetimeToSeconds(datetime_t)
                0x00000000c0009552                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0009614                KeSecondsToDatetime(unsigned long long)
                0x00000000c00098a8                Clock::timeInDatetimeLocal()
 .text          0x00000000c00098d4      0x47a hal/device.32
                0x00000000c00098d4                Device::hibernate()
                0x00000000c00098d6                Device::wake()
                0x00000000c00098d8                Device::detect()
                0x00000000c00098da                Device::disableLegacy()
                0x00000000c00098dc                Device::powerSaving(PowerSavingLevel)
                0x00000000c00098de                DriverlessDevice::close(int, int, void*)
                0x00000000c00098e2                DriverlessDevice::detect()
                0x00000000c00098e4                DriverlessDevice::open(int, int, void*)
                0x00000000c00098f8                Device::~Device()
                0x00000000c00098f8                Device::~Device()
                0x00000000c0009906                Device::~Device()
                0x00000000c000992e                Device::findAndLoadDriver()
                0x00000000c000993c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0009962                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00099a2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00099cc                Device::getParent()
                0x00000000c00099d8                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00099f6                Device::addChild(Device*)
                0x00000000c0009a3a                Device::removeAllChildren()
                0x00000000c0009a80                Device::hibernateAll()
                0x00000000c0009ab0                Device::wakeAll()
                0x00000000c0009ae0                Device::detectAll()
                0x00000000c0009b10                Device::disableLegacyAll()
                0x00000000c0009b12                Device::loadDriversForAll()
                0x00000000c0009b14                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009b4a                Device::setName(char const*)
                0x00000000c0009b58                Device::Device(char const*)
                0x00000000c0009b58                Device::Device(char const*)
                0x00000000c0009c54                Device::getName()
                0x00000000c0009c5e                Device::closeAll()
                0x00000000c0009caa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009caa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009ce0                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d24                getDevicesOfType(DeviceType)
 *fill*         0x00000000c0009d4e        0x2 
 .text          0x00000000c0009d50       0x86 hal/diskctrl.32
                0x00000000c0009d50                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d50                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d88                HardDiskController::~HardDiskController()
                0x00000000c0009d88                HardDiskController::~HardDiskController()
                0x00000000c0009dac                HardDiskController::~HardDiskController()
 .text          0x00000000c0009dd6       0xe2 hal/diskphys.32
                0x00000000c0009dd6                PhysicalDisk::eject()
                0x00000000c0009dda                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009dda                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e42                PhysicalDisk::startCache()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e8e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009eb8        0x0 hal/fpu.32
 .text          0x00000000c0009eb8      0x874 hal/keybrd.32
                0x00000000c0009eb8                startGUI(void*)
                0x00000000c0009f1d                startGUIVESA(void*)
                0x00000000c0009f82                sendKeyToTerminal(unsigned char)
                0x00000000c000a058                sendKeyboardToken(KeyboardToken)
                0x00000000c000a514                clearInternalKeybuffer(VgaText*)
                0x00000000c000a549                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6a2                Keyboard::Keyboard(char const*)
                0x00000000c000a6a2                Keyboard::Keyboard(char const*)
                0x00000000c000a6de                Keyboard::~Keyboard()
                0x00000000c000a6de                Keyboard::~Keyboard()
                0x00000000c000a702                Keyboard::~Keyboard()
 .text          0x00000000c000a72c      0x3f8 hal/logidisk.32
                0x00000000c000a72c                LogicalDisk::close(int, int, void*)
                0x00000000c000a730                LogicalDisk::~LogicalDisk()
                0x00000000c000a730                LogicalDisk::~LogicalDisk()
                0x00000000c000a754                LogicalDisk::~LogicalDisk()
                0x00000000c000a77e                LogicalDisk::open(int, int, void*)
                0x00000000c000a792                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a7ca                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a810                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a810                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a8d0                LogicalDisk::assignDriveLetter()
                0x00000000c000a98a                LogicalDisk::mount()
                0x00000000c000a9d2                LogicalDisk::unmount()
                0x00000000c000a9e2                LogicalDisk::eject()
                0x00000000c000a9f6                LogicalDisk::unassignDriveLetter()
                0x00000000c000aa4c                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aab8                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab24       0x86 hal/mouse.32
                0x00000000c000ab24                Mouse::Mouse(char const*)
                0x00000000c000ab24                Mouse::Mouse(char const*)
                0x00000000c000ab5c                Mouse::~Mouse()
                0x00000000c000ab5c                Mouse::~Mouse()
                0x00000000c000ab80                Mouse::~Mouse()
 .text          0x00000000c000abaa       0x90 hal/nic.32
                0x00000000c000abaa                NIC::getMAC()
                0x00000000c000abb0                NIC::write(int, unsigned char*, int*)
                0x00000000c000abb6                NIC::NIC(char const*)
                0x00000000c000abb6                NIC::NIC(char const*)
                0x00000000c000abec                NIC::~NIC()
                0x00000000c000abec                NIC::~NIC()
                0x00000000c000ac10                NIC::~NIC()
 .text          0x00000000c000ac3a      0x33b hal/partition.32
                0x00000000c000ac3a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ace2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af75        0x3 
 .text          0x00000000c000af78       0x86 hal/serial.32
                0x00000000c000af78                Serial::Serial(char const*)
                0x00000000c000af78                Serial::Serial(char const*)
                0x00000000c000afb0                Serial::~Serial()
                0x00000000c000afb0                Serial::~Serial()
                0x00000000c000afd4                Serial::~Serial()
 *fill*         0x00000000c000affe        0x2 
 .text          0x00000000c000b000      0x230 hal/timer.32
                0x00000000c000b000                Timer::Timer(char const*)
                0x00000000c000b000                Timer::Timer(char const*)
                0x00000000c000b038                Timer::~Timer()
                0x00000000c000b038                Timer::~Timer()
                0x00000000c000b05c                Timer::~Timer()
                0x00000000c000b086                Timer::read()
                0x00000000c000b091                setupTimer(int)
                0x00000000c000b0cc                timerHandler(unsigned int)
 .text          0x00000000c000b230      0x60e hal/vcache.32
                0x00000000c000b230                VCache::VCache(PhysicalDisk*)
                0x00000000c000b230                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3a0                VCache::invalidateReadBuffer()
                0x00000000c000b3b0                VCache::writeWriteBuffer()
                0x00000000c000b3fc                VCache::~VCache()
                0x00000000c000b3fc                VCache::~VCache()
                0x00000000c000b454                VCache::~VCache()
                0x00000000c000b47c                VCache::write(unsigned long long, int, void*)
                0x00000000c000b64a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b83e      0x71d hal/video.32
                0x00000000c000b83e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b88a                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b8fa                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b98a                Video::clearScreen(unsigned int)
                0x00000000c000b9be                Video::putpixel(int, int, unsigned int)
                0x00000000c000b9cc                Video::readPixelApprox(int, int)
                0x00000000c000b9e0                Video::Video(char const*)
                0x00000000c000b9e0                Video::Video(char const*)
                0x00000000c000ba16                Video::~Video()
                0x00000000c000ba16                Video::~Video()
                0x00000000c000ba3a                Video::~Video()
                0x00000000c000ba64                Video::isMonochrome()
                0x00000000c000ba70                Video::getWidth()
                0x00000000c000ba7c                Video::getHeight()
                0x00000000c000ba88                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb44                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000beea                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000bf5b        0x1 
 .text          0x00000000c000bf5c     0x10ea hw/acpi.32
                0x00000000c000bf5c                ACPI::close(int, int, void*)
                0x00000000c000bf64                loadACPITables(unsigned char*)
                0x00000000c000c1c4                findRSDT(unsigned char*)
                0x00000000c000c310                findDataTable(unsigned char*, char*)
                0x00000000c000c384                scanMADT()
                0x00000000c000c834                ACPI::ACPI()
                0x00000000c000c834                ACPI::ACPI()
                0x00000000c000c884                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c980                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca4c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca54                ACPI::detectPCI()
                0x00000000c000cc60                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cc78                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d046        0x2 
 .text          0x00000000c000d048       0xea krnl/assert.32
                0x00000000c000d048                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d132       0x91 krnl/atexit.32
                0x00000000c000d132                KeInitialiseAtexit()
                0x00000000c000d154                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d188                KeExecuteAtexit()
 *fill*         0x00000000c000d1c3        0x1 
 .text          0x00000000c000d1c4       0x1e krnl/bootflags.32
                0x00000000c000d1c4                KeGetBootConfigurationFlag(BootConfigurationFlag)
                0x00000000c000d1d4                KeInitialiseBootConfigurationFlags()
 .text          0x00000000c000d1e2       0x8a krnl/bootmsg.32
                0x00000000c000d1e2                KeDisplaySplashScreen()
                0x00000000c000d211                KeSetBootMessage(char const*)
 .text          0x00000000c000d26c       0x5f krnl/c++.32
                0x00000000c000d26c                __cxa_atexit
                0x00000000c000d26f                __cxa_finalize
                0x00000000c000d270                __stack_chk_fail
                0x00000000c000d2a6                __cxa_pure_virtual
                0x00000000c000d2b7                operator new[](unsigned long)
                0x00000000c000d2bc                operator delete(void*, unsigned long)
                0x00000000c000d2c1                operator delete[](void*)
                0x00000000c000d2c6                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d2cb        0x1 
 .text          0x00000000c000d2cc       0x44 krnl/cdefs.32
                0x00000000c000d2cc                CUnlockScheduler
                0x00000000c000d2e4                CLockScheduler
                0x00000000c000d2f4                CPrintf
 .text          0x00000000c000d310      0xc7c krnl/cm.32
                0x00000000c000d310                CmOpen(char const*)
                0x00000000c000d42e                CmClose(Reghive_Tag*)
                0x00000000c000d444                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d480                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d4f7                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d536                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d568                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d5a4                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d5cc                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d5ed                CmExpand(Reghive_Tag*, int)
                0x00000000c000d668                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d6ee                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d7e2                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d91a                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d97b                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d9ab                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000d9e2                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000da0c                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000da4c                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000daf0                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000db1e                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dcbb                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000dd08                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000dd82                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000ddd5                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000de99                zStrtok(char*, char const*)
                0x00000000c000df0b                CmFindObjectFromPath(Reghive_Tag*, char const*)
 .text          0x00000000c000df8c       0xe3 krnl/computer.32
                0x00000000c000df8c                Computer::close(int, int, void*)
                0x00000000c000df92                Computer::Computer()
                0x00000000c000df92                Computer::Computer()
                0x00000000c000dfd6                Computer::open(int, int, void*)
 .text          0x00000000c000e06f       0x2b krnl/crc32.32
                0x00000000c000e06f                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e09a      0x5bf krnl/env.32
                0x00000000c000e09a                EnvVarContainer::getEnv(char const*)
                0x00000000c000e0d8                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e19a                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e19c                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e3c0                EnvVarContainer::__loadSystem()
                0x00000000c000e3da                EnvVarContainer::__loadUser()
                0x00000000c000e3dc                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e3dc                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e3fe                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e3fe                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e42e                KeGetEnv(Process*, char const*)
                0x00000000c000e493                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e4ad                KeSetEnvUser(char const*, char const*)
                0x00000000c000e4cc                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e4df                KeDeleteEnvSystem(char const*)
                0x00000000c000e4e0                KeDeleteEnvUser(char const*)
                0x00000000c000e4e1                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e4e2                KeNewProcessEnv(Process*)
                0x00000000c000e504                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e550                KeLoadSystemEnv()
                0x00000000c000e57e                KeLoadUserEnv()
                0x00000000c000e5a4                KeFlushEnv()
                0x00000000c000e5a5                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e5c5                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e659        0x3 
 .text          0x00000000c000e65c      0x1a8 krnl/fault.32
                0x00000000c000e65c                KeDisplayProgramFault(char const*)
                0x00000000c000e6ac                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e700                KePageFault(void*, void*)
                0x00000000c000e754                KeOpcodeFault(void*, void*)
                0x00000000c000e7a8                KeOtherFault(void*, void*)
                0x00000000c000e7dc                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e7ec                KeDoubleFault(void*, void*)
 .text          0x00000000c000e804      0x1db krnl/gdt.32
                0x00000000c000e804                GDTEntry::setBase(unsigned int)
                0x00000000c000e820                GDTEntry::setLimit(unsigned int)
                0x00000000c000e83e                GDT::GDT()
                0x00000000c000e83e                GDT::GDT()
                0x00000000c000e854                GDT::addEntry(GDTEntry)
                0x00000000c000e876                GDT::getNumberOfEntries()
                0x00000000c000e87e                GDT::flush()
                0x00000000c000e8a0                GDT::setup()
 .text          0x00000000c000e9df       0x20 krnl/idle.32
                0x00000000c000e9df                idleFunction(void*)
 *fill*         0x00000000c000e9ff        0x1 
 .text          0x00000000c000ea00      0x46c krnl/idt.32
                0x00000000c000ea00                IDTEntry::IDTEntry(bool)
                0x00000000c000ea00                IDTEntry::IDTEntry(bool)
                0x00000000c000ea7a                IDTEntry::setOffset(unsigned int)
                0x00000000c000ea90                IDT::IDT()
                0x00000000c000ea90                IDT::IDT()
                0x00000000c000ea92                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ea9a                IDT::addEntry(IDTEntry, int)
                0x00000000c000eab4                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000eaec                IDT::flush()
                0x00000000c000eb06                IDT::setup()
 .text          0x00000000c000ee6c       0x9a krnl/inlines.32
                0x00000000c000ee6c                CPU::current()
                0x00000000c000ee78                operator new(unsigned long)
                0x00000000c000ee7d                operator delete(void*)
                0x00000000c000ee82                disableIRQs()
                0x00000000c000ee84                enableIRQs()
                0x00000000c000ee86                lockScheduler()
                0x00000000c000ee8e                unlockScheduler()
                0x00000000c000eea0                lockStuff()
                0x00000000c000eeae                unlockStuff()
                0x00000000c000eeeb                Virt::getAKernelVAS()
                0x00000000c000eef1                __not_memcpy
 .text          0x00000000c000ef06      0x2ae krnl/intlformat.32
                0x00000000c000ef06                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f0e8                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f10a                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f12c                KeSetLocale(klocale_t)
                0x00000000c000f142                KeInitialiseLocale()
                0x00000000c000f1b0                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f1b1                KeFormatCurrency(char*, int, double)
                0x00000000c000f1b2                KeFormatNumber(char*, long long, long long)
                0x00000000c000f1b3                KeFormatNumber(char*, double)
 .text          0x00000000c000f1b4      0x356 krnl/intops.32
                0x00000000c000f1b4                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f2d0                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f410                KeGetDigitsInNumber(long long)
                0x00000000c000f47c                KeItoa(unsigned long long, char*)
                0x00000000c000f4ac                KeItoa(long long, char*)
                0x00000000c000f4dc                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f50a      0x204 krnl/kheap.32
                0x00000000c000f50a                sbrk
                0x00000000c000f59e                sbrk_thunk
                0x00000000c000f5d4                mmap
                0x00000000c000f632                munmap
                0x00000000c000f647                liballoc_lock()
                0x00000000c000f655                liballoc_unlock()
                0x00000000c000f66d                liballoc_alloc(int)
                0x00000000c000f685                liballoc_free(void*, int)
                0x00000000c000f6a0                realloc
                0x00000000c000f6b4                malloc
                0x00000000c000f6c4                free
                0x00000000c000f6d4                rfree
                0x00000000c000f6e4                calloc
 *fill*         0x00000000c000f70e        0x2 
 .text          0x00000000c000f710      0x1d3 krnl/mailbox.32
                0x00000000c000f710                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000f770                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000f7d0                KeMailboxCreate()
                0x00000000c000f804                KeMailboxPost(Mailbox*, void*)
                0x00000000c000f868                KeMailboxGet(Mailbox*, void**)
                0x00000000c000f8cc                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000f8e3      0x20b krnl/main.32
                0x00000000c000f8e3                KeFirstTask()
                0x00000000c000f9ee                KeEntryPoint
 *fill*         0x00000000c000faee        0x2 
 .text          0x00000000c000faf0       0x1a krnl/mutex.32
                0x00000000c000faf0                Mutex::Mutex()
                0x00000000c000faf0                Mutex::Mutex()
 .text          0x00000000c000fb0a       0x12 krnl/panic.32
                0x00000000c000fb0a                KeIsKernelInPanic()
                0x00000000c000fb10                KePanic(char const*)
 .text          0x00000000c000fb1c      0x659 krnl/physmgr.32
                0x00000000c000fb1c                Phys::allocateDMA(unsigned long)
                0x00000000c000fc0a                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000fc45                Phys::setPageState(unsigned long, bool)
                0x00000000c000fc85                Phys::getPageState(unsigned long)
                0x00000000c000fca1                Phys::freePage(unsigned long)
                0x00000000c000fd0a                Phys::allocatePage()
                0x00000000c000fddb                Phys::allocateContiguousPages(int)
                0x00000000c000fe56                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000fe8e                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0010175        0x1 
 .text          0x00000000c0010176      0x271 krnl/pipe.32
                0x00000000c0010176                Pipe::isAtty()
                0x00000000c001017a                Pipe::~Pipe()
                0x00000000c001017a                Pipe::~Pipe()
                0x00000000c001019e                Pipe::~Pipe()
                0x00000000c00101c6                Pipe::write(unsigned long long, void*, int*)
                0x00000000c001028a                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0010380                Pipe::Pipe(int)
                0x00000000c0010380                Pipe::Pipe(int)
 .text          0x00000000c00103e7      0x1a3 krnl/powctrl.32
                0x00000000c00103e7                KePowerThread(void*)
                0x00000000c0010419                KeChangePowerSettings(PowerSettings)
                0x00000000c001042f                KeUserIOReceived()
                0x00000000c001043a                KeSetupPowerManager()
                0x00000000c00104c3                KePrepareShutdown()
                0x00000000c00104e2                KeRegisterShutdownHandler(void (*)())
                0x00000000c00104ec                KeRegisterRestartHandler(void (*)())
                0x00000000c00104f6                KeRegisterSleepHandler(void (*)())
                0x00000000c0010500                KeShutdown()
                0x00000000c0010536                KeSleep()
                0x00000000c0010542                KeHandlePowerButton()
                0x00000000c0010554                KeHandleSleepButton()
                0x00000000c0010566                KeRestart()
 .text          0x00000000c001058a       0x9b krnl/random.32
                0x00000000c001058a                KeRand()
                0x00000000c00105ca                KeSeedRand(unsigned int)
                0x00000000c00105f3                KeInitRand()
 *fill*         0x00000000c0010625        0x3 
 .text          0x00000000c0010628      0x26c krnl/resolve.32
                0x00000000c0010628                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010894      0x415 krnl/semaphore.32
                0x00000000c0010894                Semaphore::Semaphore(int)
                0x00000000c0010894                Semaphore::Semaphore(int)
                0x00000000c00108c4                Semaphore::tryAcquire()
                0x00000000c0010998                Semaphore::assertLocked(char const*)
                0x00000000c0010a24                Semaphore::acquire(int)
                0x00000000c0010bdc                Semaphore::acquire()
                0x00000000c0010bf8                Semaphore::release()
 .text          0x00000000c0010ca9      0x3a8 krnl/signal.32
                0x00000000c0010ca9                KiSigKill(int)
                0x00000000c0010cbd                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010cbe                KiDefaultSignalHandlerPause(int)
                0x00000000c0010cea                KiDefaultSignalHandlerResume(int)
                0x00000000c0010d16                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010d1b                KeInitSignals()
                0x00000000c0010d8d                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010dc3                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010e44                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010f73                KiCheckSignalZ
                0x00000000c0010fc4                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010fff                KiFinishSignalZ
 .text          0x00000000c0011051      0xe7d krnl/syscalls.32
                0x00000000c0011051                SysSeekDir(regs*)
                0x00000000c0011056                SysTellDir(regs*)
                0x00000000c001105b                SysVerify(regs*)
                0x00000000c0011065                SysGetArgc(regs*)
                0x00000000c0011079                SysTTYName(regs*)
                0x00000000c0011081                SysFormatDisk(regs*)
                0x00000000c00110e8                SysSetDiskVolumeLabel(regs*)
                0x00000000c001113c                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011195                SysRealpath(regs*)
                0x00000000c00111e3                SysReadDir(regs*)
                0x00000000c0011263                SysIsATTY(regs*)
                0x00000000c00112bd                SysSeek(regs*)
                0x00000000c001131b                SysTell(regs*)
                0x00000000c0011390                SysSize(regs*)
                0x00000000c001140a                SysSizeFromFilename(regs*)
                0x00000000c001153d                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011670                SysClose(regs*)
                0x00000000c00116d5                SysOpenDir(regs*)
                0x00000000c0011752                SysMakeDir(regs*)
                0x00000000c00117c0                SysCloseDir(regs*)
                0x00000000c0011814                SysWait(regs*)
                0x00000000c0011835                SysNotImpl(regs*)
                0x00000000c0011850                SysPanic(regs*)
                0x00000000c001186b                SysRmdir(regs*)
                0x00000000c00118c9                SysUnlink(regs*)
                0x00000000c0011927                SysGetArgv(regs*)
                0x00000000c0011974                SysUSleep(regs*)
                0x00000000c001199e                SysSpawn(regs*)
                0x00000000c0011a0f                SysGetEnv(regs*)
                0x00000000c0011ac4                SysSetFatAttrib(regs*)
                0x00000000c0011b2d                SysShutdown(regs*)
                0x00000000c0011b8a                SysPipe(regs*)
                0x00000000c0011bcf                SysGetUnixTime(regs*)
                0x00000000c0011c42                string_ends_with(char const*, char const*)
                0x00000000c0011c8d                SysOpen(regs*)
                0x00000000c0011e8c                KeSystemCall(regs*, void*)
 .text          0x00000000c0011ece      0xadd krnl/terminal.32
                0x00000000c0011ece                VgaText::isAtty()
                0x00000000c0011ed2                VgaText::~VgaText()
                0x00000000c0011ed2                VgaText::~VgaText()
                0x00000000c0011ef6                VgaText::~VgaText()
                0x00000000c0011f20                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0011f40                setTerminalScrollLock(bool)
                0x00000000c0011f41                doTerminalCycle()
                0x00000000c0011f42                addToTerminalCycle(VgaText*)
                0x00000000c0011f43                scrollTerminalScrollLock(int)
                0x00000000c0011f44                VgaText::updateTitle()
                0x00000000c0011f46                VgaText::load()
                0x00000000c0011f48                VgaText::updateCursor()
                0x00000000c0011f5e                VgaText::doANSI_SGR(int)
                0x00000000c0011fd2                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0011fe2                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0011ff2                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0012012                VgaText::setTitleTextColour(VgaColour)
                0x00000000c001201e                VgaText::setTitleColour(VgaColour)
                0x00000000c001202a                VgaText::setTitle(char*)
                0x00000000c001202c                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c001203e                VgaText::scrollScreen()
                0x00000000c00120d0                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00120e0                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c001218c                VgaText::getCursorX()
                0x00000000c0012194                VgaText::getCursorY()
                0x00000000c001219c                VgaText::setCursor(int, int)
                0x00000000c00121b3                setActiveTerminal(VgaText*)
                0x00000000c00121fe                VgaText::clearScreen()
                0x00000000c001224c                VgaText::setCursorX(int)
                0x00000000c0012264                VgaText::setCursorY(int)
                0x00000000c001227c                VgaText::incrementCursor(bool)
                0x00000000c00122d0                VgaText::decrementCursor(bool)
                0x00000000c00122f2                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00123c2                VgaText::putchar(char)
                0x00000000c00124aa                VgaText::putx(unsigned int)
                0x00000000c00124f0                VgaText::puts(char const*)
                0x00000000c0012516                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0012562                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00126dc                VgaText::VgaText(char const*)
                0x00000000c00126dc                VgaText::VgaText(char const*)
                0x00000000c001283c                VgaText::receiveKey(unsigned char)
                0x00000000c00129aa                VgaText::doUpdate()
 *fill*         0x00000000c00129ab        0x1 
 .text          0x00000000c00129ac      0x224 krnl/tss.32
                0x00000000c00129ac                TSS::TSS()
                0x00000000c00129ac                TSS::TSS()
                0x00000000c00129bc                TSS::setESP(unsigned long)
                0x00000000c00129d0                TSS::flush()
                0x00000000c00129f0                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012bd0      0x4ce krnl/unixfile.32
                0x00000000c0012bd0                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012c26                ReservedFilename::isAtty()
                0x00000000c0012c42                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012ca0                UnixFile::getFileDescriptor()
                0x00000000c0012ca8                UnixFile::UnixFile(int)
                0x00000000c0012ca8                UnixFile::UnixFile(int)
                0x00000000c0012e5c                ReservedFilename::ReservedFilename(int)
                0x00000000c0012e5c                ReservedFilename::ReservedFilename(int)
                0x00000000c0012e8e                UnixFile::~UnixFile()
                0x00000000c0012e8e                UnixFile::~UnixFile()
                0x00000000c0012f2a                UnixFile::~UnixFile()
                0x00000000c0012f52                ReservedFilename::~ReservedFilename()
                0x00000000c0012f52                ReservedFilename::~ReservedFilename()
                0x00000000c0012f76                ReservedFilename::~ReservedFilename()
                0x00000000c0012f9d                KeGetFileFromDescriptor(int)
 .text          0x00000000c001309e     0x134e krnl/virtmgr.32
                0x00000000c001309e                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00130d8                Virt::getPageState(unsigned long)
                0x00000000c00130fb                Virt::allocateKernelVirtualPages(int)
                0x00000000c0013217                Virt::freeSwapfilePage(unsigned long)
                0x00000000c001323a                Virt::swapIDToSector(unsigned long)
                0x00000000c0013250                Virt::allocateSwapfilePage()
                0x00000000c00132cf                Virt::virtualMemorySetup()
                0x00000000c0013320                Virt::setupPageSwapping(int)
                0x00000000c0013392                VAS::setCPUSpecific(unsigned long)
                0x00000000c0013394                VAS::VAS(VAS*)
                0x00000000c0013394                VAS::VAS(VAS*)
                0x00000000c00133ac                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00133da                VAS::getPageTableEntry(unsigned long)
                0x00000000c00133f9                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0013536                VAS::freeAllocatedPages(unsigned long)
                0x00000000c001355a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0013574                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c00135b6                VAS::VAS()
                0x00000000c00135b6                VAS::VAS()
                0x00000000c0013620                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0013640                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c001366c                VAS::~VAS()
                0x00000000c001366c                VAS::~VAS()
                0x00000000c00137d4                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c00138dc                VAS::allocatePages(int, int)
                0x00000000c00139ce                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013a28                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013b18                VAS::VAS(bool)
                0x00000000c0013b18                VAS::VAS(bool)
                0x00000000c0013d00                VAS::evict(unsigned long)
                0x00000000c0013e04                VAS::canLockPage(unsigned long)
                0x00000000c0013e1e                VAS::unlockPage(unsigned long)
                0x00000000c0013e52                VAS::canLockPages(unsigned long, int)
                0x00000000c0013e8e                VAS::unlockPages(unsigned long, int)
                0x00000000c0013eca                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c001406a                VAS::lockPage(unsigned long)
                0x00000000c00140dc                VAS::lockPages(unsigned long, int)
                0x00000000c0014118                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c001418c                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00141b8                VAS::scanForEviction()
                0x00000000c00142f1                mapVASFirstTime
 .text          0x00000000c00143ec       0x2f sys/alarm.32
                0x00000000c00143ec                SysAlarm(regs*)
 .text          0x00000000c001441b       0x36 sys/eject.32
                0x00000000c001441b                SysEject(regs*)
 .text          0x00000000c0014451       0x18 sys/exit.32
                0x00000000c0014451                SysExit(regs*)
 .text          0x00000000c0014469       0x1f sys/getcwd.32
                0x00000000c0014469                SysGetCwd(regs*)
 .text          0x00000000c0014488       0x26 sys/getpid.32
                0x00000000c0014488                SysGetPID(regs*)
 .text          0x00000000c00144ae       0x21 sys/getramdata.32
                0x00000000c00144ae                SysGetRAMData(regs*)
 .text          0x00000000c00144cf       0xbe sys/getvgaptr.32
                0x00000000c00144cf                SysGetVGAPtr(regs*)
 *fill*         0x00000000c001458d        0x3 
 .text          0x00000000c0014590       0xb9 sys/kill.32
                0x00000000c0014590                SysKill(regs*)
 .text          0x00000000c0014649       0xa8 sys/loaddll.32
                0x00000000c0014649                SysLoadDLL(regs*)
 .text          0x00000000c00146f1       0x12 sys/pause.32
                0x00000000c00146f1                SysPause(regs*)
 .text          0x00000000c0014703       0x49 sys/pthread.32
                0x00000000c0014703                SysPthreadCreate(regs*)
                0x00000000c001471b                SysPthreadGetTID(regs*)
                0x00000000c0014725                SysInternalPthreadGetContext(regs*)
                0x00000000c001472a                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c001472f                SysPthreadJoin(regs*)
                0x00000000c0014734                SysPthreadExit(regs*)
 .text          0x00000000c001474c       0x68 sys/read.32
                0x00000000c001474c                SysRead(regs*)
 .text          0x00000000c00147b4       0x29 sys/registersignal.32
                0x00000000c00147b4                SysRegisterSignal(regs*)
 .text          0x00000000c00147dd      0x1cc sys/registry.32
                0x00000000c00147dd                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014821                SysRegistryReadExtent(regs*)
                0x00000000c0014869                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014880                SysRegistryEnterDirectory(regs*)
                0x00000000c0014897                SysRegistryGetNext(regs*)
                0x00000000c00148ae                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00148e8                SysRegistryOpen(regs*)
                0x00000000c00148fc                SysRegistryClose(regs*)
                0x00000000c0014913                SysRegistryEasyReadString(regs*)
                0x00000000c001495f                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c00149a9       0x55 sys/sbrk.32
                0x00000000c00149a9                SysSbrk(regs*)
 .text          0x00000000c00149fe       0x1c sys/setcwd.32
                0x00000000c00149fe                SysSetCwd(regs*)
 .text          0x00000000c0014a1a       0xf1 sys/settime.32
                0x00000000c0014a1a                SysSetTime(regs*)
 .text          0x00000000c0014b0b       0x73 sys/symlink.32
                0x00000000c0014b0b                SysSymlink(regs*)
 .text          0x00000000c0014b7e       0x3e sys/timezone.32
                0x00000000c0014b7e                SysTimezone(regs*)
 .text          0x00000000c0014bbc       0xfc sys/truncate.32
                0x00000000c0014bbc                SysTruncate(regs*)
 .text          0x00000000c0014cb8       0x68 sys/write.32
                0x00000000c0014cb8                SysWrite(regs*)
 .text          0x00000000c0014d20       0x9d sys/wsbe.32
                0x00000000c0014d20                SysWsbe(regs*)
 .text          0x00000000c0014dbd       0x28 sys/yield.32
                0x00000000c0014dbd                SysYield(regs*)
 *fill*         0x00000000c0014de5        0x3 
 .text          0x00000000c0014de8      0x28d thr/alarm.32
                0x00000000c0014de8                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c0014f84                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c0015075     0x12cc thr/elf.32
                0x00000000c0015075                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0015300                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00155a1                Thr::runtimeReferenceHelper()
                0x00000000c00155b4                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0015603                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00158c1                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0016024                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0016056                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001608d                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00160a7                Thr::loadDLL(char const*, bool)
                0x00000000c0016308                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0016341       0x5a thr/exec.32
                0x00000000c0016341                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c001639b        0x1 
 .text          0x00000000c001639c     0x1269 thr/prcssthr.32
                0x00000000c001639c                userModeEntryPoint(void*)
                0x00000000c00163c8                changeTSS
                0x00000000c00163f8                switchToThread(ThreadControlBlock*)
                0x00000000c00164b8                Process::addArgs(char**)
                0x00000000c0016524                Process::Process(char const*, Process*, char**)
                0x00000000c0016524                Process::Process(char const*, Process*, char**)
                0x00000000c001675c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001675c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016948                taskStartupFunction
                0x00000000c0016954                KeDisablePreemption()
                0x00000000c001697c                KeRestorePreemption()
                0x00000000c001699c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016adc                Process::createUserThread()
                0x00000000c0016afc                setupMultitasking(void (*)())
                0x00000000c0016c44                schedule()
                0x00000000c0016cd8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016d04                blockTask(TaskState)
                0x00000000c0016d40                waitTask(int, int*, int)
                0x00000000c0016d84                milliTenthSleepUntil(unsigned long long)
                0x00000000c0016e38                milliTenthSleep(unsigned long long)
                0x00000000c0016e50                sleep(unsigned long long)
                0x00000000c0016e70                sleep(unsigned int)
                0x00000000c0016e88                milliTenthSleep(unsigned int)
                0x00000000c0016ea8                taskReturned
                0x00000000c0016ef0                KeProcessFromPID(int)
                0x00000000c0016f9c                unblockTask(ThreadControlBlock*)
                0x00000000c0017050                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0017320                cleanerTaskFunction(void*)
                0x00000000c0017438                KeTerminateCurrentThread(int)
 .text          0x00000000c0017605      0xe86 vm86/vm8086.32
                0x00000000c0017605                Vm::inbv(unsigned short)
                0x00000000c0017618                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001764a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001765a                Vm::getSegment(unsigned int)
                0x00000000c0017662                Vm::getOffset(unsigned int)
                0x00000000c0017667                Vm::mainloop2()
                0x00000000c00176a8                Vm::mainVm8086Loop(void*)
                0x00000000c00176bc                Vm::mainloop3(unsigned long)
                0x00000000c00176ee                Vm::initialise8086()
                0x00000000c0017732                Vm::resetConventionalMemory8086()
                0x00000000c0017733                Vm::finish8086()
                0x00000000c00177a4                Vm::getOutput8086(unsigned char*)
                0x00000000c00177c9                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017914                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017b59                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017c05                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017c16                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017c28                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017c39                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017c4e                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017c64                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017c79                Vm::faultHandler(regs*)
 *fill*         0x00000000c001848b        0x1 
 .text          0x00000000c001848c      0x45f arch/i386/apic.32
                0x00000000c001848c                IOAPIC::close(int, int, void*)
                0x00000000c0018492                apicGetBase()
                0x00000000c00184cc                IOAPIC::IOAPIC()
                0x00000000c00184cc                IOAPIC::IOAPIC()
                0x00000000c00184f4                apicOpen()
                0x00000000c0018680                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c00186b2                IOAPIC::read(int)
                0x00000000c00186da                IOAPIC::open(int, int, void*)
                0x00000000c00187c0                IOAPIC::write(int, int)
                0x00000000c00187ec                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c00188eb        0x1 
 .text          0x00000000c00188ec     0x1f41 arch/i386/hal.32
                0x00000000c00188ec                noCopro(unsigned long)
                0x00000000c00188ed                HalRestart()
                0x00000000c00188f8                HalShutdown()
                0x00000000c00188f9                HalSleep()
                0x00000000c00188fa                CPU::close(int, int, void*)
                0x00000000c00188fd                x86ReadCMOS(unsigned char)
                0x00000000c0018951                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c00189b3                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c00189d2                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c00189ef                AMD_K6_writeback(int, int, int)
                0x00000000c0018aaf                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018b4d                cpuidCheckEDX(unsigned int)
                0x00000000c0018b7a                cpuidCheckECX(unsigned int)
                0x00000000c0018ba8                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018bd6                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018c04                HalDetectFeatures()
                0x00000000c00199ef                HalEnableNMI()
                0x00000000c0019a02                HalDisableNMI()
                0x00000000c0019a15                HalGetNMIState()
                0x00000000c0019a1b                x86rdmsr(unsigned int)
                0x00000000c0019a59                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0019a9e                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0019ab4                HalFindRSDP()
                0x00000000c0019b91                HalHandlePageFault(void*, void*)
                0x00000000c0019bc0                HalHandleOpcodeFault(void*, void*)
                0x00000000c0019c02                HalDisplayDebugInfo(void*)
                0x00000000c0019f90                HalReceivedNMI()
                0x00000000c001a02b                HalSystemIdle()
                0x00000000c001a08a                i386SaveCoprocessor(void*)
                0x00000000c001a09e                i386LoadCoprocessor(void*)
                0x00000000c001a0b2                x87EmulHandler(regs*, void*)
                0x00000000c001a14f                HalInitialiseCoprocessor()
                0x00000000c001a1d3                HalPanic(char const*)
                0x00000000c001a2e7                HalQueryPerformanceCounter()
                0x00000000c001a2f7                HalInitialise()
                0x00000000c001a4df                HalMakeBeep(int)
                0x00000000c001a519                HalGetRand()
                0x00000000c001a51c                HalEndOfInterrupt(int)
                0x00000000c001a548                CPU::CPU()
                0x00000000c001a548                CPU::CPU()
                0x00000000c001a5cc                CPU::setupSMEP()
                0x00000000c001a5d8                CPU::setupUMIP()
                0x00000000c001a5e2                CPU::setupTSC()
                0x00000000c001a5ec                CPU::setupLargePages()
                0x00000000c001a5f6                CPU::setupPAT()
                0x00000000c001a628                CPU::setupMTRR()
                0x00000000c001a62a                CPU::setupGlobalPages()
                0x00000000c001a634                CPU::allowUsermodeDataAccess()
                0x00000000c001a642                CPU::prohibitUsermodeDataAccess()
                0x00000000c001a650                CPU::setupSMAP()
                0x00000000c001a65e                CPU::setupFeatures()
                0x00000000c001a72a                CPU::open(int, int, void*)
 .text          0x00000000c001a82d      0x348 arch/i386/intctrl.32
                0x00000000c001a82d                convertLegacyIRQNumber(int)
                0x00000000c001a869                KeSetupInterrupts()
                0x00000000c001a8c6                int_handler
                0x00000000c001a949                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001a993                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001aad0                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001ab04                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001ab75        0x3 
 .text          0x00000000c001ab78      0x2dc arch/i386/pic.32
                0x00000000c001ab78                picIoWait()
                0x00000000c001ab80                picDisable()
                0x00000000c001abb4                picGetIRQReg(int)
                0x00000000c001ac30                picOpen()
                0x00000000c001adb4                picEOI(int)
 .text          0x00000000c001ae54      0x5ed arch/i386/rtc.32
                0x00000000c001ae54                RTC::open(int, int, void*)
                0x00000000c001ae58                RTC::close(int, int, void*)
                0x00000000c001ae5c                RTC::timeInSecondsUTC()
                0x00000000c001ae6e                RTC::timeInDatetimeUTC()
                0x00000000c001ae94                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001aed2                RTC::~RTC()
                0x00000000c001aed2                RTC::~RTC()
                0x00000000c001aef6                RTC::~RTC()
                0x00000000c001af20                RTC::get_update_in_progress_flag()
                0x00000000c001af34                RTC::completeRTCRefresh()
                0x00000000c001b1e2                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b358                rtcIRQHandler(regs*, void*)
                0x00000000c001b398                RTC::RTC()
                0x00000000c001b398                RTC::RTC()
 *fill*         0x00000000c001b441        0x3 
 .text          0x00000000c001b444      0x1f4 arch/i386/vga.32
                0x00000000c001b444                HalConsoleScroll(int, int)
                0x00000000c001b54c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001b5b0                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001b638     0x14f3 fs/fat/vfslink.32
                0x00000000c001b638                FAT::getName()
                0x00000000c001b640                FAT::tell(void*, unsigned long long*)
                0x00000000c001b67c                FAT::stat(void*, unsigned long long*)
                0x00000000c001b6b8                FAT::~FAT()
                0x00000000c001b6b8                FAT::~FAT()
                0x00000000c001b6dc                FAT::~FAT()
                0x00000000c001b704                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b7a8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001b888                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001ba6c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001bc88                FAT::allocateSwapfile(char const*, int)
                0x00000000c001be48                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001bfb8                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001c018                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c078                FAT::close(void*)
                0x00000000c001c0cc                FAT::closeDir(void*)
                0x00000000c001c120                FAT::truncate(void*, unsigned long long)
                0x00000000c001c18c                FAT::seek(void*, unsigned long long)
                0x00000000c001c1e4                fatWrapperReadDisk
                0x00000000c001c224                fatWrapperWriteDisk
                0x00000000c001c264                fatWrapperIoctl
                0x00000000c001c384                FAT::FAT()
                0x00000000c001c384                FAT::FAT()
                0x00000000c001c3dc                FAT::fixFilepath(char*)
                0x00000000c001c41c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c590                FAT::openDir(char const*, void**)
                0x00000000c001c640                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c738                FAT::unlink(char const*)
                0x00000000c001c7b8                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c970                FAT::rename(char const*, char const*)
                0x00000000c001ca3c                FAT::mkdir(char const*)
                0x00000000c001cabc                FAT::exists(char const*)
 *fill*         0x00000000c001cb2b        0x1 
 .text          0x00000000c001cb2c       0x94 fs/iso9660/helper.32
                0x00000000c001cb2c                isoReadDiscSectorHelper
                0x00000000c001cb88                iso_kprintf
                0x00000000c001cba4                iso_kprintfd
 .text          0x00000000c001cbc0      0x71a fs/iso9660/vfslink.32
                0x00000000c001cbc0                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001cbc6                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001cbcc                ISO9660::getName()
                0x00000000c001cbd2                ISO9660::closeDir(void*)
                0x00000000c001cbdc                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001cbe2                ISO9660::unlink(char const*)
                0x00000000c001cbe8                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001cbee                ISO9660::rename(char const*, char const*)
                0x00000000c001cbf4                ISO9660::mkdir(char const*)
                0x00000000c001cbfa                ISO9660::~ISO9660()
                0x00000000c001cbfa                ISO9660::~ISO9660()
                0x00000000c001cc1e                ISO9660::~ISO9660()
                0x00000000c001cc46                ISO9660::exists(char const*)
                0x00000000c001cc5a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001cd40                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001cd88                ISO9660::seek(void*, unsigned long long)
                0x00000000c001cdca                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001ce08                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001ce5a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001cf9c                ISO9660::close(void*)
                0x00000000c001cfcc                ISO9660::openDir(char const*, void**)
                0x00000000c001d0a6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d1c1                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d240                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001d2b2                ISO9660::ISO9660()
                0x00000000c001d2b2                ISO9660::ISO9660()
 .text          0x00000000c001d2da      0x26c hal/sound/sndcard.32
                0x00000000c001d2da                SoundCard::beginPlayback()
                0x00000000c001d2e8                SoundCard::stopPlayback()
                0x00000000c001d2f6                SoundCard::SoundCard(char const*)
                0x00000000c001d2f6                SoundCard::SoundCard(char const*)
                0x00000000c001d394                SoundCard::~SoundCard()
                0x00000000c001d394                SoundCard::~SoundCard()
                0x00000000c001d3b8                SoundCard::~SoundCard()
                0x00000000c001d3e2                SoundCard::configureRates(int, int, int)
                0x00000000c001d412                SoundCard::getSamples16(int, short*)
                0x00000000c001d46e                SoundCard::getSamples32(int, int*)
                0x00000000c001d4f4                SoundCard::addChannel(SoundPort*)
                0x00000000c001d532                SoundCard::removeChannel(int)
 *fill*         0x00000000c001d546        0x2 
 .text          0x00000000c001d548      0x42f hal/sound/sndport.32
                0x00000000c001d548                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d548                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d5d4                SoundPort::~SoundPort()
                0x00000000c001d5d4                SoundPort::~SoundPort()
                0x00000000c001d608                SoundPort::unpause()
                0x00000000c001d614                SoundPort::pause()
                0x00000000c001d620                SoundPort::getBufferUsed()
                0x00000000c001d628                SoundPort::getBufferSize()
                0x00000000c001d630                SoundPort::buffer8(signed char*, int)
                0x00000000c001d6c4                SoundPort::buffer16(short*, int)
                0x00000000c001d758                SoundPort::buffer32(int*, int)
                0x00000000c001d7e4                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001d8b4                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 *fill*         0x00000000c001d977        0x1 
 .text          0x00000000c001d978      0xc25 hw/bus/pci.32
                0x00000000c001d978                PCI::open(int, int, void*)
                0x00000000c001d996                PCI::close(int, int, void*)
                0x00000000c001d99a                PCI::PCI()
                0x00000000c001d99a                PCI::PCI()
                0x00000000c001da32                PCI::readBAR8(unsigned int, int)
                0x00000000c001da4e                PCI::readBAR16(unsigned int, int)
                0x00000000c001da6c                PCI::readBAR32(unsigned int, int)
                0x00000000c001da88                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001daa8                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001daca                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001daea                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001db60                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dc0a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001dc2e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001dc56                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001dca0                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001dcc8                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001dcec                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001dd10                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001dd38                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dd9c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001de82                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e14c                PCI::checkBus(unsigned char)
                0x00000000c001e170                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e356                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e4d2                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e544                PCI::detect()
 *fill*         0x00000000c001e59d        0x1 
 .text          0x00000000c001e59e      0xe52 hw/diskctrl/ide.32
                0x00000000c001e59e                IDE::close(int, int, void*)
                0x00000000c001e5a2                IDE::IDE()
                0x00000000c001e5a2                IDE::IDE()
                0x00000000c001e5d6                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e5e8                selectDrive(unsigned char, unsigned char)
                0x00000000c001e5ea                IDE::getBase(unsigned char)
                0x00000000c001e5fc                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001e6bc                IDE::read(unsigned char, unsigned char)
                0x00000000c001e770                IDE::waitInterrupt(unsigned char)
                0x00000000c001e7d3                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001e7ef                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001e80c                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001e856                IDE::open(int, int, void*)
                0x00000000c001edae                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ee7e                IDE::detect()
                0x00000000c001f2e2                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f39c                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f3f0      0x33f hw/diskctrl/satabus.32
                0x00000000c001f3f0                SATABus::close(int, int, void*)
                0x00000000c001f3f4                SATABus::detect()
                0x00000000c001f3f6                SATABus::SATABus()
                0x00000000c001f3f6                SATABus::SATABus()
                0x00000000c001f47c                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f4ae                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f4f6                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f516                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f540                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f652                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001f6fc                SATABus::open(int, int, void*)
 *fill*         0x00000000c001f72f        0x1 
 .text          0x00000000c001f730      0x7c1 hw/diskphys/ata.32
                0x00000000c001f730                ATA::close(int, int, void*)
                0x00000000c001f754                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001f756                ATA::ATA()
                0x00000000c001f756                ATA::ATA()
                0x00000000c001f784                ATA::flush(bool)
                0x00000000c001f7d2                ATA::readyForCommand()
                0x00000000c001f81e                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001fc26                ATA::read(unsigned long long, int, void*)
                0x00000000c001fc72                ATA::write(unsigned long long, int, void*)
                0x00000000c001fcbe                ATA::detectCHS()
                0x00000000c001fce8                ATA::open(int, int, void*)
                0x00000000c001fed3                combineCharAndColour(char, unsigned char)
                0x00000000c001fee4                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001fef1        0x1 
 .text          0x00000000c001fef2      0x612 hw/diskphys/atapi.32
                0x00000000c001fef2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001fef8                ATAPI::close(int, int, void*)
                0x00000000c001ff1c                ATAPI::ATAPI()
                0x00000000c001ff1c                ATAPI::ATAPI()
                0x00000000c001ff4a                ATAPI::readyForCommand()
                0x00000000c001ff9c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c002025c                ATAPI::diskRemoved()
                0x00000000c0020296                ATAPI::eject()
                0x00000000c00202de                ATAPI::diskInserted()
                0x00000000c00202ea                ATAPI::detectMedia()
                0x00000000c00203aa                ATAPI::open(int, int, void*)
                0x00000000c002048a                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020504      0x44a hw/diskphys/sata.32
                0x00000000c0020504                SATA::close(int, int, void*)
                0x00000000c0020528                SATA::powerSaving(PowerSavingLevel)
                0x00000000c002052a                SATA::open(int, int, void*)
                0x00000000c00205e2                SATA::SATA()
                0x00000000c00205e2                SATA::SATA()
                0x00000000c0020610                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020896                SATA::read(unsigned long long, int, void*)
                0x00000000c00208e2                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c002094e      0x5dc hw/diskphys/satapi.32
                0x00000000c002094e                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020954                SATAPI::close(int, int, void*)
                0x00000000c0020978                SATAPI::SATAPI()
                0x00000000c0020978                SATAPI::SATAPI()
                0x00000000c00209a6                SATAPI::diskRemoved()
                0x00000000c00209a8                SATAPI::diskInserted()
                0x00000000c00209c4                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020cae                SATAPI::eject()
                0x00000000c0020cea                SATAPI::detectMedia()
                0x00000000c0020d40                SATAPI::open(int, int, void*)
                0x00000000c0020e40                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0020f2a        0x2 
 .text          0x00000000c0020f2c       0xf0 hw/timer/apictimer.32
                0x00000000c0020f2c                APICTimer::close(int, int, void*)
                0x00000000c0020f34                apicTimerHandler(regs*, void*)
                0x00000000c0020f5c                APICTimer::open(int, int, void*)
                0x00000000c0020fcc                APICTimer::write(int)
                0x00000000c0020ff4                APICTimer::APICTimer()
                0x00000000c0020ff4                APICTimer::APICTimer()
 .text          0x00000000c002101c      0x1ad hw/timer/pit.32
                0x00000000c002101c                PIT::write(int)
                0x00000000c00210a0                pitHandler(regs*, void*)
                0x00000000c00210c8                PIT::open(int, int, void*)
                0x00000000c0021118                PIT::close(int, int, void*)
                0x00000000c0021148                PIT::PIT()
                0x00000000c0021148                PIT::PIT()
 *fill*         0x00000000c00211c9        0x7 
 .text          0x00000000c00211d0       0x6f arch/i386/avx.32
                0x00000000c00211d0                avxDetect
                0x00000000c00211fa                avxSave
                0x00000000c002120b                avxLoad
                0x00000000c002121c                avxInit
                0x00000000c002123e                avxClose
 *fill*         0x00000000c002123f        0x1 
 .text          0x00000000c0021240      0x2b4 arch/i386/interrupt.32
                0x00000000c0021240                isr0
                0x00000000c0021250                isr1
                0x00000000c002125a                isr2
                0x00000000c0021264                isr3
                0x00000000c002126e                isr4
                0x00000000c0021278                isr5
                0x00000000c0021282                isr6
                0x00000000c002128c                isr7
                0x00000000c0021296                isr8
                0x00000000c002129e                isr9
                0x00000000c00212a8                isr10
                0x00000000c00212b0                isr11
                0x00000000c00212b8                isr12
                0x00000000c00212c0                isr13
                0x00000000c00212da                isr14
                0x00000000c00212e2                isr15
                0x00000000c00212ec                isr16
                0x00000000c00212f6                isr17
                0x00000000c0021300                isr18
                0x00000000c002130a                irq3
                0x00000000c0021314                irq4
                0x00000000c002131e                irq5
                0x00000000c0021328                irq6
                0x00000000c0021332                irq7
                0x00000000c002133c                irq8
                0x00000000c0021346                irq9
                0x00000000c0021350                irq10
                0x00000000c002135a                irq11
                0x00000000c0021364                irq12
                0x00000000c002136e                irq13
                0x00000000c0021378                irq14
                0x00000000c0021382                irq15
                0x00000000c002138c                irq1
                0x00000000c0021393                irq2
                0x00000000c002139a                isr96
                0x00000000c00213a1                irq0
                0x00000000c00213a6                int_common_stub
                0x00000000c00213a6                syscall_common_stub
                0x00000000c00214a4                irq16
                0x00000000c00214ae                irq17
                0x00000000c00214b8                irq18
                0x00000000c00214c2                irq19
                0x00000000c00214cc                irq20
                0x00000000c00214d6                irq21
                0x00000000c00214e0                irq22
                0x00000000c00214ea                irq23
 *fill*         0x00000000c00214f4        0xc 
 .text          0x00000000c0021500       0x10 arch/i386/rdrand.32
                0x00000000c0021500                i386GetRDRAND
 .text          0x00000000c0021510       0x39 arch/i386/sse.32
                0x00000000c0021510                sseDetect
                0x00000000c0021528                sseSave
                0x00000000c0021530                sseLoad
                0x00000000c0021538                sseInit
                0x00000000c0021548                sseClose
 *fill*         0x00000000c0021549        0x7 
 .text          0x00000000c0021550       0x4f arch/i386/x87.32
                0x00000000c0021556                x87Detect
                0x00000000c0021577                x87Save
                0x00000000c002157e                x87Load
                0x00000000c0021585                x87Init
                0x00000000c002159e                x87Close
 *fill*         0x00000000c002159f        0x1 
 .text          0x00000000c00215a0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00215c5        0x0 crtn.32
 *fill*         0x00000000c00215c5        0x3 
 .text          0x00000000c00215c8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00215c8                __divdi3
 *fill*         0x00000000c0021713        0x1 
 .text          0x00000000c0021714      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021714                __moddi3
 *fill*         0x00000000c0021892        0x2 
 .text          0x00000000c0021894       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021894                __udivdi3
 *fill*         0x00000000c0021993        0x1 
 .text          0x00000000c0021994      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021994                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021ab0        0x0
 .iplt          0x00000000c0021ab0        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021aae        0xf
 .init          0x00000000c0021aae        0x3 crti.32
                0x00000000c0021aae                _init
 .init          0x00000000c0021ab1        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021ab6        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021abb        0x2 crtn.32

.fini           0x00000000c0021abd        0xa
 .fini          0x00000000c0021abd        0x3 crti.32
                0x00000000c0021abd                _fini
 .fini          0x00000000c0021ac0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021ac5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021ac8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021ac8       0x1a hal/device.32
                0x00000000c0021ac8                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021ac8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021ae2       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021ae2       0x2a hal/device.32
                0x00000000c0021ae2                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021b0c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021b0c       0xdc hal/device.32
                0x00000000c0021b0c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021be8       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021be8       0x42 hal/device.32
                0x00000000c0021be8                LinkedList<Device>::LinkedList()
                0x00000000c0021be8                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021c2c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021c2c       0x1c hal/timer.32
                0x00000000c0021c2c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021c48        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021c48        0x7 hal/timer.32
                0x00000000c0021c48                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021c50       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021c50       0xbc hal/timer.32
                0x00000000c0021c50                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021d0c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021d0c       0xda hal/timer.32
                0x00000000c0021d0c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021de8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021de8       0x23 hw/acpi.32
                0x00000000c0021de8                ACPI::~ACPI()
                0x00000000c0021de8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0021e0c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0021e0c       0x2a hw/acpi.32
                0x00000000c0021e0c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021e38        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021e38        0x2 hw/acpi.32
                0x00000000c0021e38                LinkedList<Device>::~LinkedList()
                0x00000000c0021e38                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021e3c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021e3c       0x1c hw/acpi.32
                0x00000000c0021e3c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021e58        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021e58        0x7 hw/acpi.32
                0x00000000c0021e58                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021e60       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021e60       0xb8 hw/acpi.32
                0x00000000c0021e60                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0021f18       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0021f18       0x23 krnl/computer.32
                0x00000000c0021f18                Computer::~Computer()
                0x00000000c0021f18                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0021f3c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0021f3c       0x2a krnl/computer.32
                0x00000000c0021f3c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021f66       0x24
 .text._Z10idleCommonv
                0x00000000c0021f66       0x24 krnl/idle.32
                0x00000000c0021f66                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021f8a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021f8a        0x2 krnl/unixfile.32
                0x00000000c0021f8a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0021f8a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021f8c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021f8c       0x42 krnl/unixfile.32
                0x00000000c0021f8c                LinkedList<UnixFile>::LinkedList()
                0x00000000c0021f8c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021fce       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021fce       0xd3 krnl/unixfile.32
                0x00000000c0021fce                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00220a2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00220a2        0x7 krnl/unixfile.32
                0x00000000c00220a2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00220aa       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00220aa       0xa1 krnl/unixfile.32
                0x00000000c00220aa                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002214c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002214c        0x8 krnl/unixfile.32
                0x00000000c002214c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022154        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022154        0x8 sys/kill.32
                0x00000000c0022154                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002215c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002215c        0x2 thr/prcssthr.32
                0x00000000c002215c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002215c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022160       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022160       0x49 thr/prcssthr.32
                0x00000000c0022160                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0022160                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00221ac       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00221ac       0x42 thr/prcssthr.32
                0x00000000c00221ac                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00221ac                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN6IOAPICD2Ev
                0x00000000c00221ee       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00221ee       0x23 arch/i386/apic.32
                0x00000000c00221ee                IOAPIC::~IOAPIC()
                0x00000000c00221ee                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022212       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022212       0x2a arch/i386/apic.32
                0x00000000c0022212                IOAPIC::~IOAPIC()

.text._ZN3CPUD2Ev
                0x00000000c002223c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002223c       0x23 arch/i386/hal.32
                0x00000000c002223c                CPU::~CPU()
                0x00000000c002223c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0022260       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0022260       0x2a arch/i386/hal.32
                0x00000000c0022260                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002228a       0x23
 .text._ZN3PCID2Ev
                0x00000000c002228a       0x23 hw/bus/pci.32
                0x00000000c002228a                PCI::~PCI()
                0x00000000c002228a                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00222ae       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00222ae       0x2a hw/bus/pci.32
                0x00000000c00222ae                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00222d8       0x23
 .text._ZN3IDED2Ev
                0x00000000c00222d8       0x23 hw/diskctrl/ide.32
                0x00000000c00222d8                IDE::~IDE()
                0x00000000c00222d8                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00222fc       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00222fc       0x2a hw/diskctrl/ide.32
                0x00000000c00222fc                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0022326       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0022326       0x23 hw/diskctrl/satabus.32
                0x00000000c0022326                SATABus::~SATABus()
                0x00000000c0022326                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002234a       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002234a       0x2a hw/diskctrl/satabus.32
                0x00000000c002234a                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0022374       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0022374       0x23 hw/diskphys/ata.32
                0x00000000c0022374                ATA::~ATA()
                0x00000000c0022374                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0022398       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0022398       0x2a hw/diskphys/ata.32
                0x00000000c0022398                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00223c2       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00223c2       0x23 hw/diskphys/atapi.32
                0x00000000c00223c2                ATAPI::~ATAPI()
                0x00000000c00223c2                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00223e6       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00223e6       0x2a hw/diskphys/atapi.32
                0x00000000c00223e6                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022410       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022410       0x23 hw/diskphys/sata.32
                0x00000000c0022410                SATA::~SATA()
                0x00000000c0022410                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0022434       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0022434       0x2a hw/diskphys/sata.32
                0x00000000c0022434                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002245e       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002245e       0x23 hw/diskphys/satapi.32
                0x00000000c002245e                SATAPI::~SATAPI()
                0x00000000c002245e                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0022482       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0022482       0x2a hw/diskphys/satapi.32
                0x00000000c0022482                SATAPI::~SATAPI()

.text._ZN9APICTimerD2Ev
                0x00000000c00224ac       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00224ac       0x23 hw/timer/apictimer.32
                0x00000000c00224ac                APICTimer::~APICTimer()
                0x00000000c00224ac                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00224d0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00224d0       0x2a hw/timer/apictimer.32
                0x00000000c00224d0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00224fc       0x23
 .text._ZN3PITD2Ev
                0x00000000c00224fc       0x23 hw/timer/pit.32
                0x00000000c00224fc                PIT::~PIT()
                0x00000000c00224fc                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022520       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022520       0x2a hw/timer/pit.32
                0x00000000c0022520                PIT::~PIT()

.rodata         0x00000000c002254a     0x3b6a
                0x00000000c002254a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002254a        0x2 
 .ctors         0x00000000c002254c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022550        0x4 krnl/unixfile.32
 .ctors         0x00000000c0022554        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022558        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002255c                end_ctors = .
                0x00000000c002255c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c002255c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0022560        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022560                __DTOR_END__
                0x00000000c0022564                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022564       0x1c 
 .rodata        0x00000000c0022580      0x101 acpica/utclib.32
                0x00000000c0022580                AcpiGbl_Ctypes
 *fill*         0x00000000c0022681        0x3 
 .rodata        0x00000000c0022684       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c002269c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c00226e6       0x1a 
 .rodata        0x00000000c0022700       0xed fs/fat/ff.32
 *fill*         0x00000000c00227ed       0x13 
 .rodata        0x00000000c0022800      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022c00       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c0022c6f        0x1 
 .rodata.str1.4
                0x00000000c0022c70       0x38 dbg/kconsole.32
 .rodata        0x00000000c0022ca8      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0022df8      0x169 dbg/usban.32
 *fill*         0x00000000c0022f61        0x3 
 .rodata.str1.4
                0x00000000c0022f64      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002309b      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c00231be       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0023217        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0023218       0x6c fs/vfs.32
                0x00000000c0023218                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0023284       0x1c fs/vfs.32
                0x00000000c0023284                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00232a0       0x1c fs/vfs.32
                0x00000000c00232a0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00232bc       0x2c hal/bus.32
                0x00000000c00232bc                vtable for Bus
 *fill*         0x00000000c00232e8       0x18 
 .rodata        0x00000000c0023300      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0023450       0x3c hal/clock.32
                0x00000000c0023450                vtable for Clock
 .rodata.str1.1
                0x00000000c002348c       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00234f0       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023512       0x15 hal/device.32
 *fill*         0x00000000c0023527        0x1 
 .rodata._ZTV6Device
                0x00000000c0023528       0x2c hal/device.32
                0x00000000c0023528                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023554       0x2c hal/device.32
                0x00000000c0023554                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023580       0x2c hal/diskctrl.32
                0x00000000c0023580                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00235ac       0x38 hal/diskphys.32
                0x00000000c00235ac                vtable for PhysicalDisk
 .rodata        0x00000000c00235e4       0x53 hal/keybrd.32
 *fill*         0x00000000c0023637        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023638       0x34 hal/keybrd.32
                0x00000000c0023638                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002366c       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00236b0       0x2c hal/logidisk.32
                0x00000000c00236b0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00236dc       0x2c hal/mouse.32
                0x00000000c00236dc                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023708       0x34 hal/nic.32
                0x00000000c0023708                vtable for NIC
 .rodata.str1.1
                0x00000000c002373c        0xb hal/partition.32
 *fill*         0x00000000c0023747        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023748       0x44 hal/serial.32
                0x00000000c0023748                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002378c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00237d7        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00237df       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00237df       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c00237df       0x47 hal/timer.32
 *fill*         0x00000000c0023826        0x2 
 .rodata._ZTV5Timer
                0x00000000c0023828       0x30 hal/timer.32
                0x00000000c0023828                vtable for Timer
 .rodata.str1.1
                0x00000000c0023858       0x3e hal/vcache.32
 *fill*         0x00000000c0023896        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023898       0x10 hal/vcache.32
                0x00000000c0023898                vtable for VCache
 .rodata.str1.1
                0x00000000c00238a8       0xba hal/video.32
 *fill*         0x00000000c0023962        0x2 
 .rodata._ZTV5Video
                0x00000000c0023964       0x4c hal/video.32
                0x00000000c0023964                vtable for Video
 .rodata.str1.1
                0x00000000c00239b0      0x1b7 hw/acpi.32
 *fill*         0x00000000c0023b67        0x1 
 .rodata.str1.4
                0x00000000c0023b68       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023c03       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023c03        0x8 hw/acpi.32
 *fill*         0x00000000c0023c03        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023c04       0x2c hw/acpi.32
                0x00000000c0023c04                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023c30       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023c43       0x19 krnl/atexit.32
 .rodata.str1.1
                0x00000000c0023c5c       0x13 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023c6f       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0023ca2        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0023ca5       0x87 krnl/cm.32
                                         0x89 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023d2c       0x21 krnl/computer.32
 *fill*         0x00000000c0023d4d        0x3 
 .rodata.str1.4
                0x00000000c0023d50       0x2c krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c0023d7c       0x2c krnl/computer.32
                0x00000000c0023d7c                vtable for Computer
 .rodata.str1.1
                0x00000000c0023da8       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0023de4       0x3e krnl/fault.32
 *fill*         0x00000000c0023e22        0x2 
 .rodata.str1.4
                0x00000000c0023e24       0x28 krnl/fault.32
 .rodata.str1.1
                0x00000000c0023e4c        0x4 krnl/intlformat.32
 .rodata.str1.4
                0x00000000c0023e50       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023e80        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023e8f       0x9f krnl/main.32
                                         0xb9 (size before relaxing)
 *fill*         0x00000000c0023f2e        0x2 
 .rodata.str1.4
                0x00000000c0023f30       0x48 krnl/main.32
 .rodata.str1.1
                0x00000000c0023f78       0x6a krnl/physmgr.32
 *fill*         0x00000000c0023fe2        0x2 
 .rodata.str1.4
                0x00000000c0023fe4      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00240e9       0x39 krnl/pipe.32
 *fill*         0x00000000c0024122        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0024124       0x1c krnl/pipe.32
                0x00000000c0024124                vtable for Pipe
 .rodata.str1.1
                0x00000000c0024140       0x54 krnl/powctrl.32
 .rodata.str1.1
                0x00000000c0024194       0xd9 krnl/resolve.32
 *fill*         0x00000000c002426d        0x3 
 .rodata.str1.4
                0x00000000c0024270       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c002428f      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c0024397       0x63 krnl/syscalls.32
                                         0x6b (size before relaxing)
 .rodata.str1.1
                0x00000000c00243fa       0x5e krnl/terminal.32
 .rodata._ZTV7VgaText
                0x00000000c0024458       0x1c krnl/terminal.32
                0x00000000c0024458                vtable for VgaText
 .rodata        0x00000000c0024474       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00244af       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00244af       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00244af       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00244af        0x8 krnl/unixfile.32
 *fill*         0x00000000c00244af        0x1 
 .rodata.str1.4
                0x00000000c00244b0       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00244d0       0x1c krnl/unixfile.32
                0x00000000c00244d0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00244ec       0x1c krnl/unixfile.32
                0x00000000c00244ec                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0024508      0x313 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c002481b      0x15a krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024975       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c002498a        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024999        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00249a3       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00249c4       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0024a08       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024a1d       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024a49       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c0024a5a      0x219 thr/elf.32
                                        0x228 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024c73       0x57 thr/prcssthr.32
 *fill*         0x00000000c0024cca        0x2 
 .rodata.str1.4
                0x00000000c0024ccc       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0024dc4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0024dc4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0024dc4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0024dc4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0024dc4       0x61 vm86/vm8086.32
 *fill*         0x00000000c0024e25        0x3 
 .rodata.str1.4
                0x00000000c0024e28       0x81 vm86/vm8086.32
 *fill*         0x00000000c0024ea9        0x3 
 .rodata        0x00000000c0024eac      0x390 vm86/vm8086.32
 .rodata        0x00000000c002523c       0x17 arch/i386/apic.32
 *fill*         0x00000000c0025253        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c0025254       0x2c arch/i386/apic.32
                0x00000000c0025254                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0025280      0x322 arch/i386/hal.32
                                        0x335 (size before relaxing)
 *fill*         0x00000000c00255a2        0x2 
 .rodata.str1.4
                0x00000000c00255a4       0x23 arch/i386/hal.32
 *fill*         0x00000000c00255c7        0x1 
 .rodata._ZTV3CPU
                0x00000000c00255c8       0x2c arch/i386/hal.32
                0x00000000c00255c8                vtable for CPU
 .rodata.str1.4
                0x00000000c00255f4       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025655       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025693       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c00256a8       0x3c arch/i386/rtc.32
                0x00000000c00256a8                vtable for RTC
 .rodata.str1.1
                0x00000000c00256e4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025725        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025728       0x6c fs/fat/vfslink.32
                0x00000000c0025728                vtable for FAT
 .rodata.str1.1
                0x00000000c0025794       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0025794      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00258cc       0x6c fs/iso9660/vfslink.32
                0x00000000c00258cc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025938       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c002597c       0x34 hal/sound/sndcard.32
                0x00000000c002597c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00259b0       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00259ef       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025a27       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0025ac8       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0025b2c       0x2c hw/bus/pci.32
                0x00000000c0025b2c                vtable for PCI
 .rodata.str1.1
                0x00000000c0025b58      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0025c7c       0x2c hw/diskctrl/ide.32
                0x00000000c0025c7c                vtable for IDE
 .rodata.str1.4
                0x00000000c0025ca8       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0025ccc       0x2c hw/diskctrl/satabus.32
                0x00000000c0025ccc                vtable for SATABus
 .rodata.str1.1
                0x00000000c0025cf8       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0025db3        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025db4       0x38 hw/diskphys/ata.32
                0x00000000c0025db4                vtable for ATA
 .rodata.str1.1
                0x00000000c0025dec        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0025df9        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0025dfc       0x38 hw/diskphys/atapi.32
                0x00000000c0025dfc                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0025e34       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0025ebc       0x38 hw/diskphys/sata.32
                0x00000000c0025ebc                vtable for SATA
 .rodata.str1.1
                0x00000000c0025ef4       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0025fde        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0025fe0       0x38 hw/diskphys/satapi.32
                0x00000000c0025fe0                vtable for SATAPI
 .rodata.str1.1
                0x00000000c0026018       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0026033        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0026034       0x30 hw/timer/apictimer.32
                0x00000000c0026034                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0026064       0x1d hw/timer/pit.32
 *fill*         0x00000000c0026081        0x3 
 .rodata._ZTV3PIT
                0x00000000c0026084       0x30 hw/timer/pit.32
                0x00000000c0026084                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00260b4      0xa71
 *(.data)
 .data          0x00000000c00260b4        0x0 crti.32
 .data          0x00000000c00260b4        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00260b4                __dso_handle
 .data          0x00000000c00260b8        0x0 acpica/utclib.32
 .data          0x00000000c00260b8        0x0 krnl/malloc.32
 .data          0x00000000c00260b8        0x0 libk/ctype.32
 .data          0x00000000c00260b8        0x0 libk/string.32
 .data          0x00000000c00260b8        0x0 arch/i386/cc.32
 .data          0x00000000c00260b8        0x0 fs/fat/diskio.32
 .data          0x00000000c00260b8        0x0 fs/fat/ff.32
 .data          0x00000000c00260b8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00260b8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00260b8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00260b8        0x0 dbg/kconsole.32
 *fill*         0x00000000c00260b8        0x8 
 .data          0x00000000c00260c0       0x28 dbg/usban.32
                0x00000000c00260c0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00260e8        0x0 fs/symlink.32
 .data          0x00000000c00260e8        0x0 fs/vfs.32
 .data          0x00000000c00260e8        0x0 hal/bus.32
 .data          0x00000000c00260e8        0x0 hal/buzzer.32
 .data          0x00000000c00260e8        0x0 hal/clock.32
 .data          0x00000000c00260e8        0x0 hal/device.32
 .data          0x00000000c00260e8        0x0 hal/diskctrl.32
 .data          0x00000000c00260e8        0x0 hal/diskphys.32
 .data          0x00000000c00260e8        0x0 hal/fpu.32
 .data          0x00000000c00260e8        0x0 hal/keybrd.32
 .data          0x00000000c00260e8        0x0 hal/logidisk.32
 .data          0x00000000c00260e8        0x0 hal/mouse.32
 .data          0x00000000c00260e8        0x0 hal/nic.32
 .data          0x00000000c00260e8        0x0 hal/partition.32
 .data          0x00000000c00260e8        0x0 hal/serial.32
 .data          0x00000000c00260e8        0x0 hal/timer.32
 .data          0x00000000c00260e8        0x0 hal/vcache.32
 .data          0x00000000c00260e8        0x0 hal/video.32
 .data          0x00000000c00260e8       0x10 hw/acpi.32
                0x00000000c00260e8                legacyIRQRemaps
 .data          0x00000000c00260f8        0x0 krnl/assert.32
 .data          0x00000000c00260f8        0x0 krnl/atexit.32
 .data          0x00000000c00260f8        0x0 krnl/bootflags.32
 .data          0x00000000c00260f8        0x0 krnl/bootmsg.32
 .data          0x00000000c00260f8        0x4 krnl/c++.32
                0x00000000c00260f8                __stack_chk_guard
 .data          0x00000000c00260fc        0x0 krnl/cdefs.32
 *fill*         0x00000000c00260fc        0x4 
 .data          0x00000000c0026100      0x100 krnl/cm.32
                0x00000000c0026100                CmComponents
 .data          0x00000000c0026200        0x0 krnl/computer.32
 .data          0x00000000c0026200      0x400 krnl/crc32.32
                0x00000000c0026200                KiPolyLookupCRC32
 .data          0x00000000c0026600       0x4d krnl/env.32
                0x00000000c0026600                defaultSysEnv
 .data          0x00000000c002664d        0x0 krnl/fault.32
 .data          0x00000000c002664d        0x0 krnl/gdt.32
 .data          0x00000000c002664d        0x0 krnl/idle.32
 .data          0x00000000c002664d        0x0 krnl/idt.32
 .data          0x00000000c002664d        0x0 krnl/inlines.32
 .data          0x00000000c002664d        0x0 krnl/intlformat.32
 .data          0x00000000c002664d        0x0 krnl/intops.32
 *fill*         0x00000000c002664d        0x3 
 .data          0x00000000c0026650        0x4 krnl/kheap.32
 .data          0x00000000c0026654        0x0 krnl/mailbox.32
 .data          0x00000000c0026654        0x0 krnl/main.32
 .data          0x00000000c0026654        0x0 krnl/mutex.32
 .data          0x00000000c0026654        0x0 krnl/panic.32
 .data          0x00000000c0026654        0x4 krnl/physmgr.32
                0x00000000c0026654                Phys::bitmap
 .data          0x00000000c0026658        0x0 krnl/pipe.32
 .data          0x00000000c0026658        0x0 krnl/powctrl.32
 .data          0x00000000c0026658        0x0 krnl/random.32
 .data          0x00000000c0026658        0x0 krnl/resolve.32
 .data          0x00000000c0026658        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026658        0x8 
 .data          0x00000000c0026660       0x4c krnl/signal.32
                0x00000000c0026660                KiDefaultSignalHandlers
 *fill*         0x00000000c00266ac       0x14 
 .data          0x00000000c00266c0      0x124 krnl/syscalls.32
                0x00000000c00266c0                systemCallHandlers
 *fill*         0x00000000c00267e4       0x1c 
 .data          0x00000000c0026800       0x60 krnl/terminal.32
                0x00000000c0026800                VgaText::hiddenOut
                0x00000000c0026820                ansiToVGAMappings
 .data          0x00000000c0026860        0x0 krnl/tss.32
 .data          0x00000000c0026860        0x4 krnl/unixfile.32
                0x00000000c0026860                UnixFile::nextFd
 .data          0x00000000c0026864       0x15 krnl/virtmgr.32
                0x00000000c0026864                Virt::pageAllocPtr
                0x00000000c0026868                Virt::bitmap
                0x00000000c002686c                Virt::swapfileSectorsPerPage
                0x00000000c0026870                Virt::swapfileLength
                0x00000000c0026874                Virt::swapfileSector
                0x00000000c0026878                Virt::swapfileDrive
 .data          0x00000000c0026879        0x0 sys/alarm.32
 .data          0x00000000c0026879        0x0 sys/eject.32
 .data          0x00000000c0026879        0x0 sys/exit.32
 .data          0x00000000c0026879        0x0 sys/getcwd.32
 .data          0x00000000c0026879        0x0 sys/getpid.32
 .data          0x00000000c0026879        0x0 sys/getramdata.32
 .data          0x00000000c0026879        0x0 sys/getvgaptr.32
 .data          0x00000000c0026879        0x0 sys/kill.32
 .data          0x00000000c0026879        0x0 sys/loaddll.32
 .data          0x00000000c0026879        0x0 sys/pause.32
 .data          0x00000000c0026879        0x0 sys/pthread.32
 .data          0x00000000c0026879        0x0 sys/read.32
 .data          0x00000000c0026879        0x0 sys/registersignal.32
 .data          0x00000000c0026879        0x0 sys/registry.32
 .data          0x00000000c0026879        0x0 sys/sbrk.32
 .data          0x00000000c0026879        0x0 sys/setcwd.32
 .data          0x00000000c0026879        0x0 sys/settime.32
 .data          0x00000000c0026879        0x0 sys/symlink.32
 .data          0x00000000c0026879        0x0 sys/timezone.32
 .data          0x00000000c0026879        0x0 sys/truncate.32
 .data          0x00000000c0026879        0x0 sys/write.32
 .data          0x00000000c0026879        0x0 sys/wsbe.32
 .data          0x00000000c0026879        0x0 sys/yield.32
 .data          0x00000000c0026879        0x0 thr/alarm.32
 .data          0x00000000c0026879        0x0 thr/elf.32
 .data          0x00000000c0026879        0x0 thr/exec.32
 *fill*         0x00000000c0026879        0x3 
 .data          0x00000000c002687c        0x4 thr/prcssthr.32
                0x00000000c002687c                keNextPID
 .data          0x00000000c0026880        0x0 vm86/vm8086.32
 .data          0x00000000c0026880        0x0 arch/i386/apic.32
 .data          0x00000000c0026880      0x2a4 arch/i386/hal.32
                0x00000000c0026880                exceptionNames
                0x00000000c0026b20                lastCode
 .data          0x00000000c0026b24        0x0 arch/i386/intctrl.32
 .data          0x00000000c0026b24        0x0 arch/i386/pic.32
 .data          0x00000000c0026b24        0x0 arch/i386/rtc.32
 .data          0x00000000c0026b24        0x0 arch/i386/vga.32
 .data          0x00000000c0026b24        0x0 fs/fat/vfslink.32
 .data          0x00000000c0026b24        0x0 fs/iso9660/helper.32
 .data          0x00000000c0026b24        0x1 fs/iso9660/vfslink.32
                0x00000000c0026b24                recentDriveletter
 .data          0x00000000c0026b25        0x0 hal/sound/sndcard.32
 .data          0x00000000c0026b25        0x0 hal/sound/sndport.32
 .data          0x00000000c0026b25        0x0 hw/bus/pci.32
 .data          0x00000000c0026b25        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0026b25        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0026b25        0x0 hw/diskphys/ata.32
 .data          0x00000000c0026b25        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0026b25        0x0 hw/diskphys/sata.32
 .data          0x00000000c0026b25        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0026b25        0x0 hw/timer/apictimer.32
 .data          0x00000000c0026b25        0x0 hw/timer/pit.32
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0026b25        0x0 crtn.32
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0026b28        0x0
 .got           0x00000000c0026b28        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0026b28        0x0
 .got.plt       0x00000000c0026b28        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0026b28        0x0
 .igot.plt      0x00000000c0026b28        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0026b28        0x0
 .tm_clone_table
                0x00000000c0026b28        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0026b28        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0026b25      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0026b25        0x3 
 .eh_frame      0x00000000c0026b28        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0026b28        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0026b28       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0026b80       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0026bc0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0026c2c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0027000       0x7d
 *(userkernel)
 userkernel     0x00000000c0027000       0x52 krnl/signal.32
                0x00000000c0027000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002702c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0027052       0x2b krnl/syscalls.32
                0x00000000c0027052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0028000        0x1
 *(align_previous)
 align_previous
                0x00000000c0028000        0x1 krnl/signal.32
                0x00000000c0028000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0028004        0x0
 .rel.got       0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028001     0x74fb
                0x00000000c0028001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0028001       0x1f 
 COMMON         0x00000000c0028020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0028020                dcache
                0x00000000c0028060                cdDriveLetter
                0x00000000c0028080                icache
 *(.bss)
 .bss           0x00000000c00280c0        0x0 crti.32
 .bss           0x00000000c00280c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00280e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00280e4       0x1c 
 .bss           0x00000000c0028100      0x378 krnl/malloc.32
 .bss           0x00000000c0028478        0x0 libk/ctype.32
 .bss           0x00000000c0028478        0x0 libk/string.32
 .bss           0x00000000c0028478        0x0 arch/i386/cc.32
 .bss           0x00000000c0028478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028478        0x8 
 .bss           0x00000000c0028480       0x88 fs/fat/ff.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0028508       0x18 
 .bss           0x00000000c0028520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0028eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0028eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0028eb8        0x8 
 .bss           0x00000000c0028ec0     0x2444 fs/symlink.32
                0x00000000c0028ec0                kiNumWaitingRoomSymlinks
                0x00000000c0028ee0                kiNewlyCreatedIDs
                0x00000000c0028f00                kiNewlyCreatedSymlinks
                0x00000000c0029300                kiSymlinkHashTable
                0x00000000c002b300                kiBaseSymlinkID
 .bss           0x00000000c002b304        0x4 fs/vfs.32
                0x00000000c002b304                installedFilesystems
 .bss           0x00000000c002b308        0x0 hal/bus.32
 .bss           0x00000000c002b308        0x0 hal/buzzer.32
 *fill*         0x00000000c002b308       0x18 
 .bss           0x00000000c002b320      0x348 hal/clock.32
                0x00000000c002b320                keLoadedTimezones
                0x00000000c002b324                keNumberOfTimezones
                0x00000000c002b340                keTimezoneStrings
                0x00000000c002b660                keDstOn
                0x00000000c002b661                keTimezoneHalfHourOffset
                0x00000000c002b664                keTimezoneHourOffset
 .bss           0x00000000c002b668        0x0 hal/device.32
 .bss           0x00000000c002b668        0x0 hal/diskctrl.32
 .bss           0x00000000c002b668        0x0 hal/diskphys.32
 .bss           0x00000000c002b668        0x0 hal/fpu.32
 *fill*         0x00000000c002b668       0x18 
 .bss           0x00000000c002b680      0x428 hal/keybrd.32
                0x00000000c002b680                keyboardWaitingTaskList
                0x00000000c002b684                keyboardSetupYet
                0x00000000c002b688                guiKeyboardHandler
                0x00000000c002b6a0                keystates
 *fill*         0x00000000c002baa8       0x18 
 .bss           0x00000000c002bac0       0x88 hal/logidisk.32
                0x00000000c002bac0                diskAssignments
                0x00000000c002bae0                disks
 .bss           0x00000000c002bb48        0x4 hal/mouse.32
                0x00000000c002bb48                guiMouseHandler
 .bss           0x00000000c002bb4c        0x0 hal/nic.32
 .bss           0x00000000c002bb4c        0x0 hal/partition.32
 .bss           0x00000000c002bb4c        0x0 hal/serial.32
 *fill*         0x00000000c002bb4c        0x4 
 .bss           0x00000000c002bb50        0x8 hal/timer.32
                0x00000000c002bb50                milliTenthsSinceBoot
 .bss           0x00000000c002bb58        0x0 hal/vcache.32
 .bss           0x00000000c002bb58        0x4 hal/video.32
                0x00000000c002bb58                screen
 *fill*         0x00000000c002bb5c        0x4 
 .bss           0x00000000c002bb60      0x480 hw/acpi.32
                0x00000000c002bb60                nextACPITable
                0x00000000c002bb80                acpiTables
                0x00000000c002bd80                usingXSDT
                0x00000000c002bd84                RSDTpointer
                0x00000000c002bd88                RSDPpointer
                0x00000000c002bd8c                nextAPICNMI
                0x00000000c002bda0                apicNMIInfo
                0x00000000c002be20                legacyIRQFlags
                0x00000000c002be40                ioapicDiscoveryNumber
                0x00000000c002be60                ioapicFoundInMADT
                0x00000000c002be80                ioapicAddresses
                0x00000000c002bf00                ioapicGSIBase
                0x00000000c002bf80                processorDiscoveryNumber
                0x00000000c002bfa0                matchingAPICID
                0x00000000c002bfc0                processorID
 .bss           0x00000000c002bfe0        0x0 krnl/assert.32
 .bss           0x00000000c002bfe0      0x120 krnl/atexit.32
                0x00000000c002bfe0                kiNextAtexitHandler
                0x00000000c002c000                kiAtexitContexts
                0x00000000c002c080                kiAtexitHandlers
 .bss           0x00000000c002c100        0x4 krnl/bootflags.32
                0x00000000c002c100                keBootSettings
 .bss           0x00000000c002c104        0x0 krnl/bootmsg.32
 .bss           0x00000000c002c104        0x0 krnl/c++.32
 .bss           0x00000000c002c104        0x0 krnl/cdefs.32
 .bss           0x00000000c002c104        0x4 krnl/cm.32
 .bss           0x00000000c002c108        0x6 krnl/computer.32
                0x00000000c002c108                computer
                0x00000000c002c10c                keIsPreemptionOn
                0x00000000c002c10d                keIsSchedulingOn
 .bss           0x00000000c002c10e        0x0 krnl/crc32.32
 *fill*         0x00000000c002c10e        0x2 
 .bss           0x00000000c002c110        0x8 krnl/env.32
                0x00000000c002c110                KeUserEnv
                0x00000000c002c114                KeSystemEnv
 .bss           0x00000000c002c118        0x0 krnl/fault.32
 .bss           0x00000000c002c118        0x6 krnl/gdt.32
                0x00000000c002c118                gdtDescr
 .bss           0x00000000c002c11e        0x0 krnl/idle.32
 *fill*         0x00000000c002c11e        0x2 
 .bss           0x00000000c002c120        0x6 krnl/idt.32
                0x00000000c002c120                idtDescr
 .bss           0x00000000c002c126        0x0 krnl/inlines.32
 *fill*         0x00000000c002c126       0x1a 
 .bss           0x00000000c002c140       0x24 krnl/intlformat.32
                0x00000000c002c140                keLocale
 .bss           0x00000000c002c164        0x0 krnl/intops.32
 .bss           0x00000000c002c164        0x0 krnl/kheap.32
 .bss           0x00000000c002c164        0x0 krnl/mailbox.32
 .bss           0x00000000c002c164        0x0 krnl/main.32
 .bss           0x00000000c002c164        0x0 krnl/mutex.32
 .bss           0x00000000c002c164        0x1 krnl/panic.32
                0x00000000c002c164                keKernelPanicHappening
 *fill*         0x00000000c002c165        0x3 
 .bss           0x00000000c002c168       0x28 krnl/physmgr.32
                0x00000000c002c168                Phys::forbidEvictions
                0x00000000c002c16c                Phys::currentPagePointer
                0x00000000c002c170                Phys::highestMem
                0x00000000c002c174                Phys::oldPercent
                0x00000000c002c178                Phys::usedPages
                0x00000000c002c17c                Phys::usablePages
                0x00000000c002c180                Phys::dmaUsage
 .bss           0x00000000c002c190        0x0 krnl/pipe.32
 *fill*         0x00000000c002c190       0x10 
 .bss           0x00000000c002c1a0       0x48 krnl/powctrl.32
                0x00000000c002c1a0                keSleepFunction
                0x00000000c002c1a4                keRestartFunction
                0x00000000c002c1a8                keShutdownFunction
                0x00000000c002c1ac                powCtrlOnBattery
                0x00000000c002c1c0                currentPowerSettings
                0x00000000c002c1e4                secondsSinceLastUserIO
 .bss           0x00000000c002c1e8        0x8 krnl/random.32
                0x00000000c002c1e8                kiRandSeed
 .bss           0x00000000c002c1f0        0x0 krnl/resolve.32
 .bss           0x00000000c002c1f0        0x0 krnl/semaphore.32
 .bss           0x00000000c002c1f0        0x0 krnl/signal.32
 .bss           0x00000000c002c1f0        0x0 krnl/syscalls.32
 .bss           0x00000000c002c1f0        0x9 krnl/terminal.32
                0x00000000c002c1f0                terminalCycle
                0x00000000c002c1f4                activeTerminal
                0x00000000c002c1f8                VgaText::graphicMode
 *fill*         0x00000000c002c1f9        0x1 
 .bss           0x00000000c002c1fa        0x2 krnl/tss.32
                0x00000000c002c1fa                doubleFaultSelector
 *fill*         0x00000000c002c1fc        0x4 
 .bss           0x00000000c002c200       0x84 krnl/unixfile.32
                0x00000000c002c200                sfileLpt
                0x00000000c002c240                sfileCom
                0x00000000c002c264                sfileNul
                0x00000000c002c268                sfilePnt
                0x00000000c002c26c                sfileAux
                0x00000000c002c270                sfileCon
                0x00000000c002c274                initialFilesAdded
                0x00000000c002c278                unixFileLinkedList
 .bss           0x00000000c002c284       0x10 krnl/virtmgr.32
                0x00000000c002c284                twswaps
                0x00000000c002c288                swapBalance
                0x00000000c002c28c                Virt::swapfileBitmap
                0x00000000c002c290                keFirstVAS
 .bss           0x00000000c002c294        0x0 sys/alarm.32
 .bss           0x00000000c002c294        0x0 sys/eject.32
 .bss           0x00000000c002c294        0x0 sys/exit.32
 .bss           0x00000000c002c294        0x0 sys/getcwd.32
 .bss           0x00000000c002c294        0x0 sys/getpid.32
 .bss           0x00000000c002c294        0x0 sys/getramdata.32
 .bss           0x00000000c002c294        0x0 sys/getvgaptr.32
 .bss           0x00000000c002c294        0x0 sys/kill.32
 .bss           0x00000000c002c294        0x0 sys/loaddll.32
 .bss           0x00000000c002c294        0x0 sys/pause.32
 .bss           0x00000000c002c294        0x0 sys/pthread.32
 .bss           0x00000000c002c294        0x0 sys/read.32
 .bss           0x00000000c002c294        0x0 sys/registersignal.32
 .bss           0x00000000c002c294        0x0 sys/registry.32
 .bss           0x00000000c002c294        0x0 sys/sbrk.32
 .bss           0x00000000c002c294        0x0 sys/setcwd.32
 .bss           0x00000000c002c294        0x0 sys/settime.32
 .bss           0x00000000c002c294        0x0 sys/symlink.32
 .bss           0x00000000c002c294        0x0 sys/timezone.32
 .bss           0x00000000c002c294        0x0 sys/truncate.32
 .bss           0x00000000c002c294        0x0 sys/write.32
 .bss           0x00000000c002c294        0x0 sys/wsbe.32
 .bss           0x00000000c002c294        0x0 sys/yield.32
 .bss           0x00000000c002c294        0x0 thr/alarm.32
 *fill*         0x00000000c002c294        0xc 
 .bss           0x00000000c002c2a0      0x7a4 thr/elf.32
                0x00000000c002c2a0                Thr::driverLookupNext
                0x00000000c002c2c0                Thr::driverLookupLen
                0x00000000c002c4c0                Thr::driverLookupAddr
                0x00000000c002c6c0                Thr::driverNameLookup
                0x00000000c002c8c0                Thr::kernelSymbols
                0x00000000c002c940                Thr::kernelStringTable
                0x00000000c002c9c0                Thr::kernelSymbolTable
                0x00000000c002ca40                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002ca44        0x0 thr/exec.32
 *fill*         0x00000000c002ca44        0x4 
 .bss           0x00000000c002ca48       0x70 thr/prcssthr.32
                0x00000000c002ca48                keRestorePreemptionValue
                0x00000000c002ca4c                kePreemptionDisableCounter
                0x00000000c002ca50                cleanerThread
                0x00000000c002ca54                weNeedTheCleanerToNotBlock
                0x00000000c002ca58                retValLockStuff
                0x00000000c002ca5c                retValSchedLock
                0x00000000c002ca60                lockStuffLock
                0x00000000c002ca64                schedulerLock
                0x00000000c002ca68                taskSwitchesPostponedFlag
                0x00000000c002ca6c                postponeTaskSwitchesCounter
                0x00000000c002ca70                irqDisableCounter
                0x00000000c002ca74                terminatedTaskList
                0x00000000c002ca80                sleepingTaskList
                0x00000000c002ca8c                taskList
                0x00000000c002ca98                kernelProcess
 *fill*         0x00000000c002cab8        0x8 
 .bss           0x00000000c002cac0       0x40 vm86/vm8086.32
                0x00000000c002cac0                Vm::started8086Yet
                0x00000000c002cac4                Vm::vmRetV
                0x00000000c002cac8                Vm::vmDone
                0x00000000c002cac9                Vm::vmReady
                0x00000000c002cacc                Vm::vm86Thread
                0x00000000c002cad0                Vm::vmToHostCommsPtr
                0x00000000c002cae0                Vm::vmToHostComms
 .bss           0x00000000c002cb00       0x41 arch/i386/apic.32
                0x00000000c002cb00                noOfIOAPICs
                0x00000000c002cb20                ioapics
                0x00000000c002cb40                IOAPICsSetupYet
 *fill*         0x00000000c002cb41        0x3 
 .bss           0x00000000c002cb44       0x50 arch/i386/hal.32
                0x00000000c002cb44                guiPanicHandler
                0x00000000c002cb48                fpuOwner
                0x00000000c002cb4c                coproLoadFunc
                0x00000000c002cb50                coproSaveFunc
                0x00000000c002cb54                lastD
                0x00000000c002cb58                lastC
                0x00000000c002cb5c                lastB
                0x00000000c002cb60                lastA
                0x00000000c002cb64                HalPageWriteCombiningFlag
                0x00000000c002cb68                HalPageGlobalFlag
                0x00000000c002cb6c                keNMIEnabled
                0x00000000c002cb70                vendorIDString
                0x00000000c002cb7d                familyID
                0x00000000c002cb7e                model
                0x00000000c002cb7f                processorType
                0x00000000c002cb80                steppingID
                0x00000000c002cb84                vendor
                0x00000000c002cb88                opcodeDetectionMode
                0x00000000c002cb8c                features
 *fill*         0x00000000c002cb94        0xc 
 .bss           0x00000000c002cba0     0x2000 arch/i386/intctrl.32
                0x00000000c002cba0                keInterruptContexts
                0x00000000c002dba0                keInterruptHandlers
 .bss           0x00000000c002eba0        0x0 arch/i386/pic.32
 .bss           0x00000000c002eba0        0x2 arch/i386/rtc.32
 .bss           0x00000000c002eba2        0x0 arch/i386/vga.32
 *fill*         0x00000000c002eba2       0x1e 
 .bss           0x00000000c002ebc0       0xf0 fs/fat/vfslink.32
                0x00000000c002ebc0                FAT::fats
                0x00000000c002ebe0                FAT::vfsToFatRemaps
                0x00000000c002ec60                fatToVFSRemaps
 .bss           0x00000000c002ecb0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002ecb0       0x10 
 .bss           0x00000000c002ecc0      0x820 fs/iso9660/vfslink.32
                0x00000000c002ecc0                iso9660Owner
                0x00000000c002ecc4                recentSector
                0x00000000c002ece0                recentBuffer
 .bss           0x00000000c002f4e0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002f4e0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002f4e0        0xd hw/bus/pci.32
                0x00000000c002f4e0                thePCI
 .bss           0x00000000c002f4ed        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002f4ed        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002f4ed        0x3 
 .bss           0x00000000c002f4f0        0x8 hw/diskphys/ata.32
                0x00000000c002f4f0                ataSectorsWritten
                0x00000000c002f4f4                ataSectorsRead
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c002f4f8        0x0 hw/timer/apictimer.32
 .bss           0x00000000c002f4f8        0x4 hw/timer/pit.32
                0x00000000c002f4f8                pitFreq
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002f4fc        0x0 crtn.32
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002f4fc                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00369f7                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
