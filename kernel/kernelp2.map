Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f92a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x86b fs/symlink.32
                0x00000000c000ae63                KiDeinitialiseSymlinks(void*)
                0x00000000c000aef4                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000af86                KeInitialiseSymlinks()
                0x00000000c000b0fa                KiIsSymlinkRegistered(char const*)
                0x00000000c000b27e                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b425                KeCreateSymlink(char const*, char const*)
 *fill*         0x00000000c000b57f        0x1 
 .text          0x00000000c000b580      0xd7c fs/vfs.32
                0x00000000c000b580                File::read(unsigned long long, void*, int*)
                0x00000000c000b5d8                File::write(unsigned long long, void*, int*)
                0x00000000c000b630                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b688                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b6b6                File::isAtty()
                0x00000000c000b6ba                Directory::isAtty()
                0x00000000c000b6be                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b6c4                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b6ca                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b6d0                File::~File()
                0x00000000c000b6d0                File::~File()
                0x00000000c000b6f4                File::~File()
                0x00000000c000b71e                Directory::~Directory()
                0x00000000c000b71e                Directory::~Directory()
                0x00000000c000b742                Directory::~Directory()
                0x00000000c000b76c                Filesystem::Filesystem()
                0x00000000c000b76c                Filesystem::Filesystem()
                0x00000000c000b790                Filesystem::~Filesystem()
                0x00000000c000b790                Filesystem::~Filesystem()
                0x00000000c000b79e                Filesystem::~Filesystem()
                0x00000000c000b7c2                Fs::getcwd(Process*, char*, int)
                0x00000000c000b7ec                Fs::initVFS()
                0x00000000c000b816                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000ba44                File::File(char const*, Process*, bool)
                0x00000000c000ba44                File::File(char const*, Process*, bool)
                0x00000000c000bb22                File::File(char const*, Process*)
                0x00000000c000bb22                File::File(char const*, Process*)
                0x00000000c000bb40                File::open(FileOpenMode)
                0x00000000c000bb9e                File::close()
                0x00000000c000bbfe                File::seek(unsigned long long)
                0x00000000c000bc54                File::truncate(unsigned long long)
                0x00000000c000bcaa                File::tell(unsigned long long*)
                0x00000000c000bcfa                File::rewind()
                0x00000000c000bd0e                File::unlink()
                0x00000000c000bd5a                File::rename(char const*)
                0x00000000c000bda8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000be04                File::exists()
                0x00000000c000be42                File::stat(unsigned long long*, bool*)
                0x00000000c000bea3                Fs::setcwd(Process*, char*)
                0x00000000c000c002                Directory::Directory(char const*, Process*)
                0x00000000c000c002                Directory::Directory(char const*, Process*)
                0x00000000c000c0ca                Directory::open()
                0x00000000c000c126                Directory::close()
                0x00000000c000c186                Directory::unlink()
                0x00000000c000c1d2                Directory::rename(char const*)
                0x00000000c000c220                Directory::exists()
                0x00000000c000c25e                Directory::read(dirent*)
                0x00000000c000c2aa                Directory::create()
                0x00000000c000c2f6                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c2fc       0x86 hal/bus.32
                0x00000000c000c2fc                Bus::Bus(char const*)
                0x00000000c000c2fc                Bus::Bus(char const*)
                0x00000000c000c334                Bus::~Bus()
                0x00000000c000c334                Bus::~Bus()
                0x00000000c000c358                Bus::~Bus()
 .text          0x00000000c000c382       0x96 hal/buzzer.32
                0x00000000c000c382                beepThread(void*)
                0x00000000c000c3bf                Krnl::beep(int, int, bool)
 .text          0x00000000c000c418      0x465 hal/clock.32
                0x00000000c000c418                User::loadClockSettings(int)
                0x00000000c000c46a                Clock::Clock(char const*)
                0x00000000c000c46a                Clock::Clock(char const*)
                0x00000000c000c4a0                Clock::~Clock()
                0x00000000c000c4a0                Clock::~Clock()
                0x00000000c000c4c4                Clock::~Clock()
                0x00000000c000c4ee                Clock::timeInSecondsLocal()
                0x00000000c000c536                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c58f                datetimeToSeconds(datetime_t)
                0x00000000c000c6b4                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c714                secondsToDatetime(unsigned long long)
                0x00000000c000c858                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c87d        0x1 
 .text          0x00000000c000c87e      0x464 hal/device.32
                0x00000000c000c87e                Device::hibernate()
                0x00000000c000c880                Device::wake()
                0x00000000c000c882                Device::detect()
                0x00000000c000c884                Device::disableLegacy()
                0x00000000c000c886                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c888                DriverlessDevice::close(int, int, void*)
                0x00000000c000c88c                DriverlessDevice::detect()
                0x00000000c000c88e                DriverlessDevice::open(int, int, void*)
                0x00000000c000c8a2                Device::~Device()
                0x00000000c000c8a2                Device::~Device()
                0x00000000c000c8b0                Device::~Device()
                0x00000000c000c8d8                Device::findAndLoadDriver()
                0x00000000c000c8e6                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c90c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c94c                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c976                Device::getParent()
                0x00000000c000c982                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c9a0                Device::addChild(Device*)
                0x00000000c000c9e4                Device::removeAllChildren()
                0x00000000c000ca2a                Device::hibernateAll()
                0x00000000c000ca5a                Device::wakeAll()
                0x00000000c000ca8a                Device::detectAll()
                0x00000000c000caba                Device::disableLegacyAll()
                0x00000000c000cabc                Device::loadDriversForAll()
                0x00000000c000cabe                Device::closeAll()
                0x00000000c000caf4                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cb2a                Device::setName(char const*)
                0x00000000c000cb38                Device::Device(char const*)
                0x00000000c000cb38                Device::Device(char const*)
                0x00000000c000cc34                Device::getName()
                0x00000000c000cc3e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc3e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc74                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ccb8                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000cce2        0x2 
 .text          0x00000000c000cce4       0x86 hal/diskctrl.32
                0x00000000c000cce4                HardDiskController::HardDiskController(char const*)
                0x00000000c000cce4                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd1c                HardDiskController::~HardDiskController()
                0x00000000c000cd1c                HardDiskController::~HardDiskController()
                0x00000000c000cd40                HardDiskController::~HardDiskController()
 .text          0x00000000c000cd6a       0xe2 hal/diskphys.32
                0x00000000c000cd6a                PhysicalDisk::eject()
                0x00000000c000cd6e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cd6e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cdd6                PhysicalDisk::startCache()
                0x00000000c000cdfe                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cdfe                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce22                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ce4c        0x0 hal/fpu.32
 .text          0x00000000c000ce4c      0x360 hal/intctrl.32
                0x00000000c000ce4c                int_handler
                0x00000000c000ced6                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cf20                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d063                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d097                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d10d                setupINTS()
                0x00000000c000d16a                convertLegacyIRQNumber(int)
 .text          0x00000000c000d1ac      0x8be hal/keybrd.32
                0x00000000c000d1ac                startGUI(void*)
                0x00000000c000d21a                startGUIVESA(void*)
                0x00000000c000d288                sendKeyToTerminal(unsigned char)
                0x00000000c000d363                sendKeyboardToken(KeyboardToken)
                0x00000000c000d84d                clearInternalKeybuffer(VgaText*)
                0x00000000c000d882                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d9e0                Keyboard::Keyboard(char const*)
                0x00000000c000d9e0                Keyboard::Keyboard(char const*)
                0x00000000c000da1c                Keyboard::~Keyboard()
                0x00000000c000da1c                Keyboard::~Keyboard()
                0x00000000c000da40                Keyboard::~Keyboard()
 .text          0x00000000c000da6a      0x3f8 hal/logidisk.32
                0x00000000c000da6a                LogicalDisk::close(int, int, void*)
                0x00000000c000da6e                LogicalDisk::~LogicalDisk()
                0x00000000c000da6e                LogicalDisk::~LogicalDisk()
                0x00000000c000da92                LogicalDisk::~LogicalDisk()
                0x00000000c000dabc                LogicalDisk::open(int, int, void*)
                0x00000000c000dad0                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000db08                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000db4e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000db4e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc0e                LogicalDisk::assignDriveLetter()
                0x00000000c000dcc8                LogicalDisk::mount()
                0x00000000c000dd10                LogicalDisk::unmount()
                0x00000000c000dd20                LogicalDisk::eject()
                0x00000000c000dd34                LogicalDisk::unassignDriveLetter()
                0x00000000c000dd8a                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ddf6                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000de62        0x2 
 .text          0x00000000c000de64       0x86 hal/mouse.32
                0x00000000c000de64                Mouse::Mouse(char const*)
                0x00000000c000de64                Mouse::Mouse(char const*)
                0x00000000c000de9c                Mouse::~Mouse()
                0x00000000c000de9c                Mouse::~Mouse()
                0x00000000c000dec0                Mouse::~Mouse()
 .text          0x00000000c000deea       0x90 hal/nic.32
                0x00000000c000deea                NIC::getMAC()
                0x00000000c000def0                NIC::write(int, unsigned char*, int*)
                0x00000000c000def6                NIC::NIC(char const*)
                0x00000000c000def6                NIC::NIC(char const*)
                0x00000000c000df2c                NIC::~NIC()
                0x00000000c000df2c                NIC::~NIC()
                0x00000000c000df50                NIC::~NIC()
 .text          0x00000000c000df7a      0x33b hal/partition.32
                0x00000000c000df7a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e022                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e2b5        0x3 
 .text          0x00000000c000e2b8       0x86 hal/serial.32
                0x00000000c000e2b8                Serial::Serial(char const*)
                0x00000000c000e2b8                Serial::Serial(char const*)
                0x00000000c000e2f0                Serial::~Serial()
                0x00000000c000e2f0                Serial::~Serial()
                0x00000000c000e314                Serial::~Serial()
 *fill*         0x00000000c000e33e        0x2 
 .text          0x00000000c000e340      0x234 hal/timer.32
                0x00000000c000e340                Timer::Timer(char const*)
                0x00000000c000e340                Timer::Timer(char const*)
                0x00000000c000e378                Timer::~Timer()
                0x00000000c000e378                Timer::~Timer()
                0x00000000c000e39c                Timer::~Timer()
                0x00000000c000e3c6                Timer::read()
                0x00000000c000e3d1                setupTimer(int)
                0x00000000c000e40c                timerHandler(unsigned int)
 .text          0x00000000c000e574      0x450 hal/vcache.32
                0x00000000c000e574                VCache::VCache(PhysicalDisk*)
                0x00000000c000e574                VCache::VCache(PhysicalDisk*)
                0x00000000c000e6e4                VCache::invalidateReadBuffer()
                0x00000000c000e6f4                VCache::writeWriteBuffer()
                0x00000000c000e740                VCache::~VCache()
                0x00000000c000e740                VCache::~VCache()
                0x00000000c000e798                VCache::~VCache()
                0x00000000c000e7c0                VCache::write(unsigned long long, int, void*)
                0x00000000c000e8ba                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e9c4      0x4d9 hal/video.32
                0x00000000c000e9c4                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ea10                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ea80                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eb10                Video::clearScreen(unsigned int)
                0x00000000c000eb44                Video::putpixel(int, int, unsigned int)
                0x00000000c000eb52                Video::readPixelApprox(int, int)
                0x00000000c000eb66                Video::Video(char const*)
                0x00000000c000eb66                Video::Video(char const*)
                0x00000000c000eb9c                Video::~Video()
                0x00000000c000eb9c                Video::~Video()
                0x00000000c000ebc0                Video::~Video()
                0x00000000c000ebea                Video::isMonochrome()
                0x00000000c000ebf6                Video::getWidth()
                0x00000000c000ec02                Video::getHeight()
                0x00000000c000ec0e                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ecca                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ee32                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ee9d        0x3 
 .text          0x00000000c000eea0     0x12d2 hw/acpi.32
                0x00000000c000eea0                ACPI::close(int, int, void*)
                0x00000000c000ef54                findRSDP()
                0x00000000c000efec                loadACPITables(unsigned char*)
                0x00000000c000f258                findRSDT(unsigned char*)
                0x00000000c000f3b0                findDataTable(unsigned char*, char*)
                0x00000000c000f430                scanMADT()
                0x00000000c000f8e8                ACPI::ACPI()
                0x00000000c000f8e8                ACPI::ACPI()
                0x00000000c000f93c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fa38                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fb04                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fb0c                ACPI::detectPCI()
                0x00000000c000fd2c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fd74                ACPI::sleep()
                0x00000000c000fd90                ACPI::open(int, int, void*)
 .text          0x00000000c0010172      0xbc5 hw/cpu.32
                0x00000000c0010172                CPU::close(int, int, void*)
                0x00000000c0010176                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0010192                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c00101aa                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c001021e                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00102a2                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c00102d0                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00102fe                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001032c                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c001035a                CPU::CPU()
                0x00000000c001035a                CPU::CPU()
                0x00000000c00103e8                CPU::displayFeatures()
                0x00000000c00103ea                CPU::detectFeatures()
                0x00000000c0010abe                CPU::setupSMEP()
                0x00000000c0010aca                CPU::setupUMIP()
                0x00000000c0010ad4                CPU::setupTSC()
                0x00000000c0010ade                CPU::setupLargePages()
                0x00000000c0010ae8                CPU::setupPAT()
                0x00000000c0010b24                CPU::setupMTRR()
                0x00000000c0010b26                CPU::setupGlobalPages()
                0x00000000c0010b30                CPU::allowUsermodeDataAccess()
                0x00000000c0010b42                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010b54                CPU::setupSMAP()
                0x00000000c0010b62                CPU::setupFeatures()
                0x00000000c0010c2e                CPU::open(int, int, void*)
 .text          0x00000000c0010d37       0xb6 krnl/atexit.32
                0x00000000c0010d37                KeInitialiseAtexit()
                0x00000000c0010d56                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010d8a                KeExecuteAtexit()
 .text          0x00000000c0010ded       0xdf krnl/bootmsg.32
                0x00000000c0010ded                KeDisplaySplashScreen()
                0x00000000c0010e69                KeSetBootMessage(char const*)
 .text          0x00000000c0010ecc       0x1d krnl/compat.32
                0x00000000c0010ecc                Krnl::handlePowerButton()
                0x00000000c0010edc                Krnl::handleSleepButton()
 .text          0x00000000c0010ee9       0x2b krnl/crc32.32
                0x00000000c0010ee9                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010f14      0x5bf krnl/env.32
                0x00000000c0010f14                EnvVarContainer::getEnv(char const*)
                0x00000000c0010f52                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0011014                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0011016                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001123a                EnvVarContainer::__loadSystem()
                0x00000000c0011254                EnvVarContainer::__loadUser()
                0x00000000c0011256                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011256                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011278                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011278                EnvVarContainer::~EnvVarContainer()
                0x00000000c00112a8                KeGetEnv(Process*, char const*)
                0x00000000c001130d                KeSetEnvSystem(char const*, char const*)
                0x00000000c0011327                KeSetEnvUser(char const*, char const*)
                0x00000000c0011346                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0011359                KeDeleteEnvSystem(char const*)
                0x00000000c001135a                KeDeleteEnvUser(char const*)
                0x00000000c001135b                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c001135c                KeNewProcessEnv(Process*)
                0x00000000c001137e                KeCopyProcessEnv(Process*, Process*)
                0x00000000c00113ca                KeLoadSystemEnv()
                0x00000000c00113f8                KeLoadUserEnv()
                0x00000000c001141e                KeFlushEnv()
                0x00000000c001141f                KeGetProcessTotalEnvCount(Process*)
                0x00000000c001143f                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c00114d3       0x94 krnl/inlines.32
                0x00000000c00114d3                CPU::current()
                0x00000000c00114df                operator new(unsigned long)
                0x00000000c00114e4                operator delete(void*)
                0x00000000c00114e9                disableIRQs()
                0x00000000c00114eb                enableIRQs()
                0x00000000c00114ed                lockScheduler()
                0x00000000c00114f5                unlockScheduler()
                0x00000000c0011504                lockStuff()
                0x00000000c0011512                unlockStuff()
                0x00000000c001154c                Virt::getAKernelVAS()
                0x00000000c0011552                __not_memcpy
 .text          0x00000000c0011567        0xc krnl/panic.32
                0x00000000c0011567                KePanic(char const*)
 .text          0x00000000c0011573      0x142 krnl/powctrl.32
                0x00000000c0011573                KePowerThread(void*)
                0x00000000c00115a1                KeChangePowerSettings(PowerSettings)
                0x00000000c00115b7                KeUserIOReceived()
                0x00000000c00115c2                KeHandlePowerButton()
                0x00000000c00115f7                KeHandleSleepButton()
                0x00000000c001162c                KeSetupPowerManager()
 .text          0x00000000c00116b5       0x9b krnl/random.32
                0x00000000c00116b5                KeRand()
                0x00000000c00116f5                KeSeedRand(unsigned int)
                0x00000000c001171e                KeInitRand()
 .text          0x00000000c0011750      0x1bc krnl/resolve.32
                0x00000000c0011750                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c001190c      0x31f krnl/signal.32
                0x00000000c001190c                KiSigKill(int)
                0x00000000c0011920                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011921                KiDefaultSignalHandlerPause(int)
                0x00000000c001194d                KiDefaultSignalHandlerResume(int)
                0x00000000c0011979                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001197e                KeInitSignals()
                0x00000000c00119cd                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011a03                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011a80                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011b77                KiCheckSignalZ
                0x00000000c0011bb9                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011bf4                KiFinishSignalZ
 .text          0x00000000c0011c2b      0xe32 krnl/syscalls.32
                0x00000000c0011c2b                SysSeekDir(regs*)
                0x00000000c0011c30                SysTellDir(regs*)
                0x00000000c0011c35                SysVerify(regs*)
                0x00000000c0011c3f                SysGetArgc(regs*)
                0x00000000c0011c53                SysTTYName(regs*)
                0x00000000c0011c5b                SysFormatDisk(regs*)
                0x00000000c0011cc2                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011d16                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011d6f                SysShutdown(regs*)
                0x00000000c0011dfc                SysRealpath(regs*)
                0x00000000c0011e4a                SysReadDir(regs*)
                0x00000000c0011eca                SysIsATTY(regs*)
                0x00000000c0011f24                SysSeek(regs*)
                0x00000000c0011f7e                SysTell(regs*)
                0x00000000c0011feb                SysSize(regs*)
                0x00000000c001205e                SysSizeFromFilename(regs*)
                0x00000000c0012192                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c00122c6                SysClose(regs*)
                0x00000000c0012326                SysOpenDir(regs*)
                0x00000000c00123a3                SysMakeDir(regs*)
                0x00000000c0012411                SysCloseDir(regs*)
                0x00000000c0012460                SysWait(regs*)
                0x00000000c0012481                SysNotImpl(regs*)
                0x00000000c001249c                SysPanic(regs*)
                0x00000000c00124b7                SysRmdir(regs*)
                0x00000000c0012515                SysUnlink(regs*)
                0x00000000c0012573                SysGetArgv(regs*)
                0x00000000c00125c0                SysUSleep(regs*)
                0x00000000c00125e9                SysSpawn(regs*)
                0x00000000c001265a                SysGetEnv(regs*)
                0x00000000c001270f                SysSetFatAttrib(regs*)
                0x00000000c0012778                SysPipe(regs*)
                0x00000000c00127bd                SysGetUnixTime(regs*)
                0x00000000c00127d1                string_ends_with(char const*, char const*)
                0x00000000c001281c                SysOpen(regs*)
                0x00000000c0012a1b                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012a5d        0x3 
 .text          0x00000000c0012a60      0x159 net/ethernet.32
                0x00000000c0012a60                KeSwitchEndian16(unsigned short)
                0x00000000c0012a84                KeSwitchEndian32(unsigned int)
                0x00000000c0012ab4                EthernetCRC32(unsigned char*, int)
                0x00000000c0012b58                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012bb9      0xd51 reg/cm.32
                0x00000000c0012bb9                CmOpen(char const*)
                0x00000000c0012cd7                CmClose(Reghive_Tag*)
                0x00000000c0012ced                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012d29                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012da0                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012ddf                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012e11                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012e4d                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012e75                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012e96                CmExpand(Reghive_Tag*, int)
                0x00000000c0012f11                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012f97                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c001308b                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c00131c3                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0013224                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0013254                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c001328b                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00132b5                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c00132f5                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013399                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c00133c7                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013564                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00135b1                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001362b                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001367e                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013742                zStrtok(char*, char const*)
                0x00000000c00137b4                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013835                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00138d8                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c001390a      0x545 reg/registry.32
                0x00000000c001390a                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013a96                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013beb                Reg::getLine(char*, char*, char*)
                0x00000000c0013c22                Reg::readInt(char*, char*, int*)
                0x00000000c0013d10                Reg::readString(char*, char*, char*, int)
                0x00000000c0013d91                Reg::readBool(char*, char*, bool*)
                0x00000000c0013db6                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013de2                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013e0e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013e4f       0x36 sys/eject.32
                0x00000000c0013e4f                SysEject(regs*)
 .text          0x00000000c0013e85       0x18 sys/exit.32
                0x00000000c0013e85                SysExit(regs*)
 .text          0x00000000c0013e9d       0x1f sys/getcwd.32
                0x00000000c0013e9d                SysGetCwd(regs*)
 .text          0x00000000c0013ebc        0xc sys/getpid.32
                0x00000000c0013ebc                SysGetPID(regs*)
 .text          0x00000000c0013ec8       0x1a sys/getramdata.32
                0x00000000c0013ec8                SysGetRAMData(regs*)
 .text          0x00000000c0013ee2       0x82 sys/getvgaptr.32
                0x00000000c0013ee2                SysGetVGAPtr(regs*)
 .text          0x00000000c0013f64       0xb9 sys/kill.32
                0x00000000c0013f64                SysKill(regs*)
 .text          0x00000000c001401d       0xa8 sys/loaddll.32
                0x00000000c001401d                SysLoadDLL(regs*)
 .text          0x00000000c00140c5       0x68 sys/read.32
                0x00000000c00140c5                SysRead(regs*)
 .text          0x00000000c001412d       0x29 sys/registersignal.32
                0x00000000c001412d                SysRegisterSignal(regs*)
 .text          0x00000000c0014156      0x19c sys/registry.32
                0x00000000c0014156                SysRegistryGetTypeFromPath(regs*)
                0x00000000c00141cd                SysRegistryReadExtent(regs*)
                0x00000000c0014215                SysRegistryPathToExtentLookup(regs*)
                0x00000000c001423d                SysRegistryEnterDirectory(regs*)
                0x00000000c0014265                SysRegistryGetNext(regs*)
                0x00000000c001428d                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00142c7                SysRegistryOpen(regs*)
                0x00000000c00142db                SysRegistryClose(regs*)
 .text          0x00000000c00142f2       0x55 sys/sbrk.32
                0x00000000c00142f2                SysSbrk(regs*)
 .text          0x00000000c0014347       0x1c sys/setcwd.32
                0x00000000c0014347                SysSetCwd(regs*)
 .text          0x00000000c0014363       0x96 sys/settime.32
                0x00000000c0014363                SysSetTime(regs*)
 .text          0x00000000c00143f9       0x2d sys/symlink.32
                0x00000000c00143f9                SysSymlink(regs*)
 .text          0x00000000c0014426       0x4a sys/timezone.32
                0x00000000c0014426                SysTimezone(regs*)
 .text          0x00000000c0014470       0xfc sys/truncate.32
                0x00000000c0014470                SysTruncate(regs*)
 .text          0x00000000c001456c       0x68 sys/write.32
                0x00000000c001456c                SysWrite(regs*)
 .text          0x00000000c00145d4       0x62 sys/wsbe.32
                0x00000000c00145d4                SysWsbe(regs*)
 .text          0x00000000c0014636       0x25 sys/yield.32
                0x00000000c0014636                SysYield(regs*)
 .text          0x00000000c001465b     0x1203 thr/elf.32
                0x00000000c001465b                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00148e2                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014b01                Thr::runtimeReferenceHelper()
                0x00000000c0014b14                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014b63                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014e21                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015562                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015594                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00155cb                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00155e5                Thr::loadDLL(char const*, bool)
                0x00000000c0015825                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001585e        0x2 
 .text          0x00000000c0015860     0x13b5 thr/prcssthr.32
                0x00000000c0015860                userModeEntryPoint(void*)
                0x00000000c0015888                changeTSS
                0x00000000c00158b8                switchToThread(ThreadControlBlock*)
                0x00000000c0015968                Process::addArgs(char**)
                0x00000000c00159d4                Process::Process(char const*, Process*, char**)
                0x00000000c00159d4                Process::Process(char const*, Process*, char**)
                0x00000000c0015be0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015be0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015db4                taskStartupFunction
                0x00000000c0015dc0                Semaphore::Semaphore(int)
                0x00000000c0015dc0                Semaphore::Semaphore(int)
                0x00000000c0015df0                Mutex::Mutex()
                0x00000000c0015df0                Mutex::Mutex()
                0x00000000c0015e04                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015f0c                Process::createUserThread()
                0x00000000c0015f2c                setupMultitasking(void (*)())
                0x00000000c0016050                schedule()
                0x00000000c00160e4                Semaphore::tryAcquire()
                0x00000000c00161a4                Semaphore::assertLocked(char const*)
                0x00000000c0016228                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016250                blockTask(TaskState)
                0x00000000c0016288                waitTask(int, int*, int)
                0x00000000c00162cc                milliTenthSleepUntil(unsigned int)
                0x00000000c001636c                milliTenthSleep(unsigned int)
                0x00000000c0016380                sleep(unsigned int)
                0x00000000c0016390                Semaphore::acquire()
                0x00000000c0016458                taskReturned
                0x00000000c001649c                Thr::processFromPID(int)
                0x00000000c0016548                unblockTask(ThreadControlBlock*)
                0x00000000c00165f4                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00168c8                cleanerTaskFunction(void*)
                0x00000000c00169d0                terminateTask(int)
                0x00000000c0016abc                Thr::terminateFromIRQ(int)
                0x00000000c0016acc                Semaphore::release()
 .text          0x00000000c0016c15      0xc31 vm86/vm8086.32
                0x00000000c0016c15                Vm::inbv(unsigned short)
                0x00000000c0016c28                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016c5e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016c6e                Vm::getSegment(unsigned int)
                0x00000000c0016c76                Vm::getOffset(unsigned int)
                0x00000000c0016c7b                Vm::mainloop2()
                0x00000000c0016cb5                Vm::mainVm8086Loop(void*)
                0x00000000c0016cc5                Vm::mainloop3(unsigned long)
                0x00000000c0016ceb                Vm::initialise8086()
                0x00000000c0016d2e                Vm::finish8086()
                0x00000000c0016d8f                Vm::getOutput8086(unsigned char*)
                0x00000000c0016db4                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016e6d                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001700b                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00170a8                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00170b9                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00170cb                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00170dc                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00170f1                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017107                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001711c                Vm::faultHandler(regs*)
 .text          0x00000000c0017846      0xaf0 arch/i386/hal.32
                0x00000000c0017846                noCopro(unsigned long)
                0x00000000c0017847                nmiHandler(regs*, void*)
                0x00000000c0017860                doubleFault(regs*, void*)
                0x00000000c0017879                displayDebugInfo(regs*)
                0x00000000c0017bfe                HalSystemIdle()
                0x00000000c0017c7a                displayProgramFault(char const*)
                0x00000000c0017cc6                gpFault(regs*, void*)
                0x00000000c0017d2d                pgFault(regs*, void*)
                0x00000000c0017db6                otherISRHandler(regs*, void*)
                0x00000000c0017dea                opcodeFault(regs*, void*)
                0x00000000c0017e6d                i386SaveCoprocessor(void*)
                0x00000000c0017e81                i386LoadCoprocessor(void*)
                0x00000000c0017e95                x87EmulHandler(regs*, void*)
                0x00000000c0017f32                HalInitialiseCoprocessor()
                0x00000000c0017fe0                HalPanic(char const*)
                0x00000000c00180f4                HalQueryPerformanceCounter()
                0x00000000c001810f                HalInitialise()
                0x00000000c00182c5                HalMakeBeep(int)
                0x00000000c00182ff                HalGetRand()
                0x00000000c0018302                HalEndOfInterrupt(int)
                0x00000000c0018333                HalRestart()
                0x00000000c0018334                HalShutdown()
                0x00000000c0018335                HalSleep()
 *fill*         0x00000000c0018336        0x2 
 .text          0x00000000c0018338      0x2dc arch/i386/pic.32
                0x00000000c0018338                picIoWait()
                0x00000000c0018340                picDisable()
                0x00000000c0018374                picGetIRQReg(int)
                0x00000000c00183f0                picOpen()
                0x00000000c0018574                picEOI(int)
 .text          0x00000000c0018614      0x66e arch/i386/rtc.32
                0x00000000c0018614                RTC::open(int, int, void*)
                0x00000000c0018618                RTC::close(int, int, void*)
                0x00000000c001861c                RTC::timeInSecondsUTC()
                0x00000000c001862e                RTC::timeInDatetimeUTC()
                0x00000000c0018654                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018692                RTC::~RTC()
                0x00000000c0018692                RTC::~RTC()
                0x00000000c00186b6                RTC::~RTC()
                0x00000000c00186e0                RTC::get_update_in_progress_flag()
                0x00000000c00186fa                RTC::completeRTCRefresh()
                0x00000000c00189d4                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018b82                rtcIRQHandler(regs*, void*)
                0x00000000c0018bc8                RTC::RTC()
                0x00000000c0018bc8                RTC::RTC()
 *fill*         0x00000000c0018c82        0x2 
 .text          0x00000000c0018c84      0x1f4 arch/i386/vga.32
                0x00000000c0018c84                HalConsoleScroll(int, int)
                0x00000000c0018d8c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018df0                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018e78     0x14f3 fs/fat/vfslink.32
                0x00000000c0018e78                FAT::getName()
                0x00000000c0018e80                FAT::tell(void*, unsigned long long*)
                0x00000000c0018ebc                FAT::stat(void*, unsigned long long*)
                0x00000000c0018ef8                FAT::~FAT()
                0x00000000c0018ef8                FAT::~FAT()
                0x00000000c0018f1c                FAT::~FAT()
                0x00000000c0018f44                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018fe8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00190c8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00192ac                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00194c8                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019688                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00197f8                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019858                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00198b8                FAT::close(void*)
                0x00000000c001990c                FAT::closeDir(void*)
                0x00000000c0019960                FAT::truncate(void*, unsigned long long)
                0x00000000c00199cc                FAT::seek(void*, unsigned long long)
                0x00000000c0019a24                fatWrapperReadDisk
                0x00000000c0019a64                fatWrapperWriteDisk
                0x00000000c0019aa4                fatWrapperIoctl
                0x00000000c0019bc4                FAT::FAT()
                0x00000000c0019bc4                FAT::FAT()
                0x00000000c0019c1c                FAT::fixFilepath(char*)
                0x00000000c0019c5c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019dd0                FAT::openDir(char const*, void**)
                0x00000000c0019e80                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019f78                FAT::unlink(char const*)
                0x00000000c0019ff8                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a1b0                FAT::rename(char const*, char const*)
                0x00000000c001a27c                FAT::mkdir(char const*)
                0x00000000c001a2fc                FAT::exists(char const*)
 *fill*         0x00000000c001a36b        0x1 
 .text          0x00000000c001a36c       0x94 fs/iso9660/helper.32
                0x00000000c001a36c                isoReadDiscSectorHelper
                0x00000000c001a3c8                iso_kprintf
                0x00000000c001a3e4                iso_kprintfd
 .text          0x00000000c001a400      0x71a fs/iso9660/vfslink.32
                0x00000000c001a400                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a406                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a40c                ISO9660::getName()
                0x00000000c001a412                ISO9660::closeDir(void*)
                0x00000000c001a41c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a422                ISO9660::unlink(char const*)
                0x00000000c001a428                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a42e                ISO9660::rename(char const*, char const*)
                0x00000000c001a434                ISO9660::mkdir(char const*)
                0x00000000c001a43a                ISO9660::~ISO9660()
                0x00000000c001a43a                ISO9660::~ISO9660()
                0x00000000c001a45e                ISO9660::~ISO9660()
                0x00000000c001a486                ISO9660::exists(char const*)
                0x00000000c001a49a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a580                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a5c8                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a60a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a648                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a69a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a7dc                ISO9660::close(void*)
                0x00000000c001a80c                ISO9660::openDir(char const*, void**)
                0x00000000c001a8e6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001aa01                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001aa80                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001aaf2                ISO9660::ISO9660()
                0x00000000c001aaf2                ISO9660::ISO9660()
 .text          0x00000000c001ab1a      0x26c hal/sound/sndcard.32
                0x00000000c001ab1a                SoundCard::beginPlayback()
                0x00000000c001ab28                SoundCard::stopPlayback()
                0x00000000c001ab36                SoundCard::SoundCard(char const*)
                0x00000000c001ab36                SoundCard::SoundCard(char const*)
                0x00000000c001abd4                SoundCard::~SoundCard()
                0x00000000c001abd4                SoundCard::~SoundCard()
                0x00000000c001abf8                SoundCard::~SoundCard()
                0x00000000c001ac22                SoundCard::configureRates(int, int, int)
                0x00000000c001ac52                SoundCard::getSamples16(int, short*)
                0x00000000c001acae                SoundCard::getSamples32(int, int*)
                0x00000000c001ad34                SoundCard::addChannel(SoundPort*)
                0x00000000c001ad72                SoundCard::removeChannel(int)
 *fill*         0x00000000c001ad86        0x2 
 .text          0x00000000c001ad88      0x393 hal/sound/sndport.32
                0x00000000c001ad88                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ad88                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ae14                SoundPort::~SoundPort()
                0x00000000c001ae14                SoundPort::~SoundPort()
                0x00000000c001ae48                SoundPort::unpause()
                0x00000000c001ae54                SoundPort::pause()
                0x00000000c001ae60                SoundPort::getBufferUsed()
                0x00000000c001ae68                SoundPort::getBufferSize()
                0x00000000c001ae70                SoundPort::buffer16(short*, int)
                0x00000000c001aefc                SoundPort::buffer32(int*, int)
                0x00000000c001af88                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b058                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b11b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b11b        0x1 
 .text          0x00000000c001b11c      0xbc5 hw/bus/pci.32
                0x00000000c001b11c                PCI::open(int, int, void*)
                0x00000000c001b13a                PCI::close(int, int, void*)
                0x00000000c001b13e                PCI::PCI()
                0x00000000c001b13e                PCI::PCI()
                0x00000000c001b1d6                PCI::readBAR8(unsigned int, int)
                0x00000000c001b1f2                PCI::readBAR16(unsigned int, int)
                0x00000000c001b210                PCI::readBAR32(unsigned int, int)
                0x00000000c001b22c                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b24c                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b26e                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b28e                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b304                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b3ae                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b3d2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b3fa                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b444                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b46c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b490                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4b4                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4dc                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b540                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b626                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b8f0                PCI::checkBus(unsigned char)
                0x00000000c001b914                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001ba9a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc16                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bc88                PCI::detect()
 *fill*         0x00000000c001bce1        0x1 
 .text          0x00000000c001bce2      0xb96 hw/diskctrl/ide.32
                0x00000000c001bce2                IDE::close(int, int, void*)
                0x00000000c001bce6                IDE::IDE()
                0x00000000c001bce6                IDE::IDE()
                0x00000000c001bd1a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bd2c                selectDrive(unsigned char, unsigned char)
                0x00000000c001bd2e                IDE::getBase(unsigned char)
                0x00000000c001bd40                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001be00                IDE::read(unsigned char, unsigned char)
                0x00000000c001beb4                IDE::waitInterrupt(unsigned char)
                0x00000000c001bf16                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bf32                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bf4e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bf98                IDE::open(int, int, void*)
                0x00000000c001c3d2                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c4a2                IDE::detect()
                0x00000000c001c76a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c824                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c878      0x32c hw/diskctrl/satabus.32
                0x00000000c001c878                SATABus::close(int, int, void*)
                0x00000000c001c87c                SATABus::detect()
                0x00000000c001c87e                SATABus::SATABus()
                0x00000000c001c87e                SATABus::SATABus()
                0x00000000c001c904                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c936                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c97e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c99e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c9c8                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cada                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cb84                SATABus::open(int, int, void*)
 .text          0x00000000c001cba4      0x96d hw/diskphys/ata.32
                0x00000000c001cba4                ATA::close(int, int, void*)
                0x00000000c001cbc8                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cbca                ATA::ATA()
                0x00000000c001cbca                ATA::ATA()
                0x00000000c001cbf8                ATA::flush(bool)
                0x00000000c001cc46                ATA::readyForCommand()
                0x00000000c001cc92                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d056                ATA::detectCHS()
                0x00000000c001d080                ATA::open(int, int, void*)
                0x00000000c001d14c                combineCharAndColour(char, unsigned char)
                0x00000000c001d15d                combineColours(unsigned char, unsigned char)
                0x00000000c001d16a                ATA::read(unsigned long long, int, void*)
                0x00000000c001d340                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d511        0x1 
 .text          0x00000000c001d512      0x612 hw/diskphys/atapi.32
                0x00000000c001d512                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d518                ATAPI::close(int, int, void*)
                0x00000000c001d53c                ATAPI::ATAPI()
                0x00000000c001d53c                ATAPI::ATAPI()
                0x00000000c001d56a                ATAPI::readyForCommand()
                0x00000000c001d5bc                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d87c                ATAPI::diskRemoved()
                0x00000000c001d8b6                ATAPI::eject()
                0x00000000c001d8fe                ATAPI::diskInserted()
                0x00000000c001d90a                ATAPI::detectMedia()
                0x00000000c001d9ca                ATAPI::open(int, int, void*)
                0x00000000c001daaa                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001db24      0x7ff hw/diskphys/sata.32
                0x00000000c001db24                SATA::close(int, int, void*)
                0x00000000c001db48                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001db4a                SATA::open(int, int, void*)
                0x00000000c001dbf4                SATA::SATA()
                0x00000000c001dbf4                SATA::SATA()
                0x00000000c001dc22                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001de74                SATA::read(unsigned long long, int, void*)
                0x00000000c001e0c4                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e323        0x1 
 .text          0x00000000c001e324      0x5d8 hw/diskphys/satapi.32
                0x00000000c001e324                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e32a                SATAPI::close(int, int, void*)
                0x00000000c001e34e                SATAPI::SATAPI()
                0x00000000c001e34e                SATAPI::SATAPI()
                0x00000000c001e37c                SATAPI::diskRemoved()
                0x00000000c001e37e                SATAPI::diskInserted()
                0x00000000c001e39a                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e680                SATAPI::eject()
                0x00000000c001e6bc                SATAPI::detectMedia()
                0x00000000c001e712                SATAPI::open(int, int, void*)
                0x00000000c001e812                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e8fc      0x45b hw/intctrl/apic.32
                0x00000000c001e8fc                IOAPIC::close(int, int, void*)
                0x00000000c001e902                apicGetBase()
                0x00000000c001e948                IOAPIC::IOAPIC()
                0x00000000c001e948                IOAPIC::IOAPIC()
                0x00000000c001e970                apicOpen()
                0x00000000c001eaec                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001eb1e                IOAPIC::read(int)
                0x00000000c001eb46                IOAPIC::open(int, int, void*)
                0x00000000c001ec2c                IOAPIC::write(int, int)
                0x00000000c001ec58                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ed57        0x1 
 .text          0x00000000c001ed58       0xf0 hw/timer/apictimer.32
                0x00000000c001ed58                APICTimer::close(int, int, void*)
                0x00000000c001ed60                apicTimerHandler(regs*, void*)
                0x00000000c001ed88                APICTimer::open(int, int, void*)
                0x00000000c001edf8                APICTimer::write(int)
                0x00000000c001ee20                APICTimer::APICTimer()
                0x00000000c001ee20                APICTimer::APICTimer()
 .text          0x00000000c001ee48      0x1ad hw/timer/pit.32
                0x00000000c001ee48                PIT::write(int)
                0x00000000c001eecc                pitHandler(regs*, void*)
                0x00000000c001eef4                PIT::open(int, int, void*)
                0x00000000c001ef44                PIT::close(int, int, void*)
                0x00000000c001ef74                PIT::PIT()
                0x00000000c001ef74                PIT::PIT()
 *fill*         0x00000000c001eff5        0xb 
 .text          0x00000000c001f000       0x83 arch/i386/avx.32
                0x00000000c001f000                avxDetect
                0x00000000c001f02a                avxSave
                0x00000000c001f03b                avxLoad
                0x00000000c001f04c                avxInit
                0x00000000c001f06e                avxClose
                0x00000000c001f06f                wouldSheSayYes
 *fill*         0x00000000c001f083        0xd 
 .text          0x00000000c001f090      0x2ec arch/i386/interrupt.32
                0x00000000c001f090                isr0
                0x00000000c001f0a0                isr1
                0x00000000c001f0aa                isr2
                0x00000000c001f0b4                isr3
                0x00000000c001f0be                isr4
                0x00000000c001f0c8                isr5
                0x00000000c001f0d2                isr6
                0x00000000c001f0dc                isr7
                0x00000000c001f0e6                isr8
                0x00000000c001f0ee                isr9
                0x00000000c001f0f8                isr10
                0x00000000c001f100                isr11
                0x00000000c001f108                isr12
                0x00000000c001f110                isr13
                0x00000000c001f12a                isr14
                0x00000000c001f132                isr15
                0x00000000c001f13c                isr16
                0x00000000c001f146                isr17
                0x00000000c001f150                isr18
                0x00000000c001f15a                irq3
                0x00000000c001f164                irq4
                0x00000000c001f16e                irq5
                0x00000000c001f178                irq6
                0x00000000c001f182                irq7
                0x00000000c001f18c                irq8
                0x00000000c001f196                irq9
                0x00000000c001f1a0                irq10
                0x00000000c001f1aa                irq11
                0x00000000c001f1b4                irq12
                0x00000000c001f1be                irq13
                0x00000000c001f1c8                irq14
                0x00000000c001f1d2                irq15
                0x00000000c001f1dc                irq1
                0x00000000c001f1e3                irq2
                0x00000000c001f1ea                isr96
                0x00000000c001f1f1                irq0
                0x00000000c001f1f6                int_common_stub
                0x00000000c001f228                syscall_common_stub
                0x00000000c001f32c                irq16
                0x00000000c001f336                irq17
                0x00000000c001f340                irq18
                0x00000000c001f34a                irq19
                0x00000000c001f354                irq20
                0x00000000c001f35e                irq21
                0x00000000c001f368                irq22
                0x00000000c001f372                irq23
 *fill*         0x00000000c001f37c        0x4 
 .text          0x00000000c001f380       0x10 arch/i386/rdrand.32
                0x00000000c001f380                i386GetRDRAND
 .text          0x00000000c001f390       0x39 arch/i386/sse.32
                0x00000000c001f390                absolutelyNoChanceInHell
                0x00000000c001f390                sseDetect
                0x00000000c001f3a8                sseSave
                0x00000000c001f3b0                sseLoad
                0x00000000c001f3b8                sseInit
                0x00000000c001f3c8                sseClose
 *fill*         0x00000000c001f3c9        0x7 
 .text          0x00000000c001f3d0       0x49 arch/i386/x87.32
                0x00000000c001f3d6                x87Detect
                0x00000000c001f3f1                x87Save
                0x00000000c001f3f8                x87Load
                0x00000000c001f3ff                x87Init
                0x00000000c001f418                x87Close
 *fill*         0x00000000c001f419        0x3 
 .text          0x00000000c001f41c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f441        0x0 crtn.32
 *fill*         0x00000000c001f441        0x3 
 .text          0x00000000c001f444      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f444                __divdi3
 *fill*         0x00000000c001f58f        0x1 
 .text          0x00000000c001f590      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f590                __moddi3
 *fill*         0x00000000c001f70e        0x2 
 .text          0x00000000c001f710       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f710                __udivdi3
 *fill*         0x00000000c001f80f        0x1 
 .text          0x00000000c001f810      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f810                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f930        0x0
 .iplt          0x00000000c001f930        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f92a        0xf
 .init          0x00000000c001f92a        0x3 crti.32
                0x00000000c001f92a                _init
 .init          0x00000000c001f92d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f932        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f937        0x2 crtn.32

.fini           0x00000000c001f939        0xa
 .fini          0x00000000c001f939        0x3 crti.32
                0x00000000c001f939                _fini
 .fini          0x00000000c001f93c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f941        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f944       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f944       0x23 core/computer.32
                0x00000000c001f944                Computer::~Computer()
                0x00000000c001f944                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f968       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f968       0x2a core/computer.32
                0x00000000c001f968                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f992       0x21
 .text._Z10idleCommonv
                0x00000000c001f992       0x21 core/idle.32
                0x00000000c001f992                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f9b4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f9b4        0x2 core/unixfile.32
                0x00000000c001f9b4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f9b4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f9b6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f9b6       0x42 core/unixfile.32
                0x00000000c001f9b6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f9b6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f9f8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f9f8       0xd3 core/unixfile.32
                0x00000000c001f9f8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001facc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001facc        0x7 core/unixfile.32
                0x00000000c001facc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fad4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fad4       0xa1 core/unixfile.32
                0x00000000c001fad4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fb76        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fb76        0x8 core/unixfile.32
                0x00000000c001fb76                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb7e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb7e       0x1a hal/device.32
                0x00000000c001fb7e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fb7e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb98       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb98       0x2a hal/device.32
                0x00000000c001fb98                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fbc2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fbc2       0xdc hal/device.32
                0x00000000c001fbc2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fc9e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fc9e       0x42 hal/device.32
                0x00000000c001fc9e                LinkedList<Device>::LinkedList()
                0x00000000c001fc9e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fce0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fce0       0x1c hal/timer.32
                0x00000000c001fce0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fcfc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fcfc        0x7 hal/timer.32
                0x00000000c001fcfc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fd04       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fd04       0xbc hal/timer.32
                0x00000000c001fd04                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fdc0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fdc0       0xda hal/timer.32
                0x00000000c001fdc0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fe9c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fe9c       0x23 hw/acpi.32
                0x00000000c001fe9c                ACPI::~ACPI()
                0x00000000c001fe9c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fec0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fec0       0x2a hw/acpi.32
                0x00000000c001fec0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001feec        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001feec        0x2 hw/acpi.32
                0x00000000c001feec                LinkedList<Device>::~LinkedList()
                0x00000000c001feec                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fef0       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fef0       0x1c hw/acpi.32
                0x00000000c001fef0                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ff0c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ff0c        0x7 hw/acpi.32
                0x00000000c001ff0c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ff14       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ff14       0xb8 hw/acpi.32
                0x00000000c001ff14                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ffcc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ffcc       0x23 hw/cpu.32
                0x00000000c001ffcc                CPU::~CPU()
                0x00000000c001ffcc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fff0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fff0       0x2a hw/cpu.32
                0x00000000c001fff0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002001c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002001c        0x8 sys/kill.32
                0x00000000c002001c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020024        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020024        0x2 thr/prcssthr.32
                0x00000000c0020024                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020024                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020028       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020028       0x49 thr/prcssthr.32
                0x00000000c0020028                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020028                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020074       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020074       0x42 thr/prcssthr.32
                0x00000000c0020074                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020074                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c00200b6       0x23
 .text._ZN3PCID2Ev
                0x00000000c00200b6       0x23 hw/bus/pci.32
                0x00000000c00200b6                PCI::~PCI()
                0x00000000c00200b6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00200da       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00200da       0x2a hw/bus/pci.32
                0x00000000c00200da                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020104       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020104       0x23 hw/diskctrl/ide.32
                0x00000000c0020104                IDE::~IDE()
                0x00000000c0020104                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020128       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020128       0x2a hw/diskctrl/ide.32
                0x00000000c0020128                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020152       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020152       0x23 hw/diskctrl/satabus.32
                0x00000000c0020152                SATABus::~SATABus()
                0x00000000c0020152                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020176       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020176       0x2a hw/diskctrl/satabus.32
                0x00000000c0020176                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c00201a0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c00201a0       0x23 hw/diskphys/ata.32
                0x00000000c00201a0                ATA::~ATA()
                0x00000000c00201a0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00201c4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00201c4       0x2a hw/diskphys/ata.32
                0x00000000c00201c4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00201ee       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00201ee       0x23 hw/diskphys/atapi.32
                0x00000000c00201ee                ATAPI::~ATAPI()
                0x00000000c00201ee                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020212       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020212       0x2a hw/diskphys/atapi.32
                0x00000000c0020212                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002023c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002023c       0x23 hw/diskphys/sata.32
                0x00000000c002023c                SATA::~SATA()
                0x00000000c002023c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020260       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020260       0x2a hw/diskphys/sata.32
                0x00000000c0020260                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002028a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002028a       0x23 hw/diskphys/satapi.32
                0x00000000c002028a                SATAPI::~SATAPI()
                0x00000000c002028a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00202ae       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00202ae       0x2a hw/diskphys/satapi.32
                0x00000000c00202ae                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00202d8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00202d8       0x23 hw/intctrl/apic.32
                0x00000000c00202d8                IOAPIC::~IOAPIC()
                0x00000000c00202d8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00202fc       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00202fc       0x2a hw/intctrl/apic.32
                0x00000000c00202fc                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020328       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020328       0x23 hw/timer/apictimer.32
                0x00000000c0020328                APICTimer::~APICTimer()
                0x00000000c0020328                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002034c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002034c       0x2a hw/timer/apictimer.32
                0x00000000c002034c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020378       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020378       0x23 hw/timer/pit.32
                0x00000000c0020378                PIT::~PIT()
                0x00000000c0020378                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002039c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002039c       0x2a hw/timer/pit.32
                0x00000000c002039c                PIT::~PIT()

.rodata         0x00000000c00203c6     0x3226
                0x00000000c00203c6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00203c6        0x2 
 .ctors         0x00000000c00203c8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00203cc        0x4 core/unixfile.32
 .ctors         0x00000000c00203d0        0x4 thr/prcssthr.32
 .ctors         0x00000000c00203d4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00203d8                end_ctors = .
                0x00000000c00203d8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00203d8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00203dc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00203dc                __DTOR_END__
                0x00000000c00203e0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00203e0        0x0 
 .rodata        0x00000000c00203e0      0x101 acpica/utclib.32
                0x00000000c00203e0                AcpiGbl_Ctypes
 *fill*         0x00000000c00204e1        0x3 
 .rodata        0x00000000c00204e4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c00204fc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020546       0x1a 
 .rodata        0x00000000c0020560       0xed fs/fat/ff.32
 *fill*         0x00000000c002064d       0x13 
 .rodata        0x00000000c0020660      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020a60       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020acf      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020be4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020c4c       0x2c core/computer.32
                0x00000000c0020c4c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020c78       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020ca8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020cb4       0x17 core/main.32
 *fill*         0x00000000c0020ccb        0x1 
 .rodata.str1.4
                0x00000000c0020ccc       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020d71       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020dc9       0x39 core/pipe.32
 *fill*         0x00000000c0020e02        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020e04       0x1c core/pipe.32
                0x00000000c0020e04                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020e20       0x2b core/terminal.32
 *fill*         0x00000000c0020e4b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020e4c       0x1c core/terminal.32
                0x00000000c0020e4c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020e68       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020e8a       0x15 core/unixfile.32
 *fill*         0x00000000c0020e9f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020ea0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020eeb        0x8 core/unixfile.32
 *fill*         0x00000000c0020ef3        0x1 
 .rodata.str1.4
                0x00000000c0020ef4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020f14       0x1c core/unixfile.32
                0x00000000c0020f14                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020f30       0x1c core/unixfile.32
                0x00000000c0020f30                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020f4c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00211e0      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021306       0x33 coreobjs/c++.32
 *fill*         0x00000000c0021339        0x3 
 .rodata        0x00000000c002133c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002148c      0x169 dbg/usban.32
 *fill*         0x00000000c00215f5        0x3 
 .rodata.str1.4
                0x00000000c00215f8      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002172f      0x19b fs/symlink.32
 .rodata.str1.1
                0x00000000c00218ca       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c002190b        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c002190c       0x6c fs/vfs.32
                0x00000000c002190c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021978       0x1c fs/vfs.32
                0x00000000c0021978                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021994       0x1c fs/vfs.32
                0x00000000c0021994                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00219b0       0x2c hal/bus.32
                0x00000000c00219b0                vtable for Bus
 .rodata.str1.1
                0x00000000c00219dc       0x1e hal/clock.32
 *fill*         0x00000000c00219fa        0x2 
 .rodata._ZTV5Clock
                0x00000000c00219fc       0x3c hal/clock.32
                0x00000000c00219fc                vtable for Clock
 *fill*         0x00000000c0021a38        0x8 
 .rodata        0x00000000c0021a40       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021a70       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021ac8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021ac8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021ac8       0x2c hal/device.32
                0x00000000c0021ac8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021af4       0x2c hal/device.32
                0x00000000c0021af4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021b20       0x2c hal/diskctrl.32
                0x00000000c0021b20                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021b4c       0x38 hal/diskphys.32
                0x00000000c0021b4c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021b84       0x3e hal/intctrl.32
 *fill*         0x00000000c0021bc2        0x2 
 .rodata.str1.4
                0x00000000c0021bc4       0x5d hal/intctrl.32
 .rodata        0x00000000c0021c21       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021c74       0x34 hal/keybrd.32
                0x00000000c0021c74                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021ca8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021cec       0x2c hal/logidisk.32
                0x00000000c0021cec                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021d18       0x2c hal/mouse.32
                0x00000000c0021d18                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021d44       0x34 hal/nic.32
                0x00000000c0021d44                vtable for NIC
 .rodata.str1.1
                0x00000000c0021d78        0xb hal/partition.32
 *fill*         0x00000000c0021d83        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021d84       0x44 hal/serial.32
                0x00000000c0021d84                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021dc8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021dc8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021dc8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021dc8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021dc8       0x30 hal/timer.32
                0x00000000c0021dc8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021df8       0x10 hal/vcache.32
                0x00000000c0021df8                vtable for VCache
 .rodata.str1.1
                0x00000000c0021e08       0x93 hal/video.32
 *fill*         0x00000000c0021e9b        0x1 
 .rodata._ZTV5Video
                0x00000000c0021e9c       0x4c hal/video.32
                0x00000000c0021e9c                vtable for Video
 .rodata.str1.4
                0x00000000c0021ee8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021f83      0x174 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00220f7       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00220f7        0x8 hw/acpi.32
 *fill*         0x00000000c00220f7        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00220f8       0x2c hw/acpi.32
                0x00000000c00220f8                vtable for ACPI
 .rodata.str1.1
                0x00000000c0022124      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c002229f        0x1 
 .rodata._ZTV3CPU
                0x00000000c00222a0       0x2c hw/cpu.32
                0x00000000c00222a0                vtable for CPU
 .rodata.str1.1
                0x00000000c00222cc       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c002230c       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0022348       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c00223d9       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c00224a2       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00224ea       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0022515       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002258b       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00225d0        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00225da       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00225fb       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022691       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00226e5       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022711      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00228dd       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022934      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022a44       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022a44       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022a44       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022a44        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022a44       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022b06        0x2 
 .rodata        0x00000000c0022b08       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022b38      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022cd7        0x1 
 .rodata.str1.4
                0x00000000c0022cd8       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022d4b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022d60       0x3c arch/i386/rtc.32
                0x00000000c0022d60                vtable for RTC
 .rodata.str1.1
                0x00000000c0022d9c       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022ddd        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022de0       0x6c fs/fat/vfslink.32
                0x00000000c0022de0                vtable for FAT
 .rodata.str1.1
                0x00000000c0022e4c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022e4c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022f84       0x6c fs/iso9660/vfslink.32
                0x00000000c0022f84                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022ff0       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0023034       0x34 hal/sound/sndcard.32
                0x00000000c0023034                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0023068       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00230a7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00230df       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023180       0x2c hw/bus/pci.32
                0x00000000c0023180                vtable for PCI
 .rodata.str1.1
                0x00000000c00231ac       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0023233        0x1 
 .rodata._ZTV3IDE
                0x00000000c0023234       0x2c hw/diskctrl/ide.32
                0x00000000c0023234                vtable for IDE
 .rodata.str1.4
                0x00000000c0023260       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0023284       0x2c hw/diskctrl/satabus.32
                0x00000000c0023284                vtable for SATABus
 .rodata.str1.1
                0x00000000c00232b0       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c00232c2        0x2 
 .rodata._ZTV3ATA
                0x00000000c00232c4       0x38 hw/diskphys/ata.32
                0x00000000c00232c4                vtable for ATA
 .rodata.str1.1
                0x00000000c00232fc        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0023309        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c002330c       0x38 hw/diskphys/atapi.32
                0x00000000c002330c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0023344       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00233c0       0x38 hw/diskphys/sata.32
                0x00000000c00233c0                vtable for SATA
 .rodata.str1.1
                0x00000000c00233f8       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00234e2        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00234e4       0x38 hw/diskphys/satapi.32
                0x00000000c00234e4                vtable for SATAPI
 .rodata        0x00000000c002351c        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0023524       0x2c hw/intctrl/apic.32
                0x00000000c0023524                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023550       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002356b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002356c       0x30 hw/timer/apictimer.32
                0x00000000c002356c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002359c       0x1d hw/timer/pit.32
 *fill*         0x00000000c00235b9        0x3 
 .rodata._ZTV3PIT
                0x00000000c00235bc       0x30 hw/timer/pit.32
                0x00000000c00235bc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00235ec      0xbb5
 *(.data)
 .data          0x00000000c00235ec        0x0 crti.32
 .data          0x00000000c00235ec        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00235ec                __dso_handle
 .data          0x00000000c00235f0        0x0 acpica/utclib.32
 .data          0x00000000c00235f0        0x0 core/malloc.32
 .data          0x00000000c00235f0        0x0 libk/ctype.32
 .data          0x00000000c00235f0        0x0 libk/string.32
 .data          0x00000000c00235f0        0x0 fs/fat/diskio.32
 .data          0x00000000c00235f0        0x0 fs/fat/ff.32
 .data          0x00000000c00235f0        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00235f0        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00235f0        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00235f0        0x0 core/computer.32
 .data          0x00000000c00235f0        0x0 core/gdt.32
 .data          0x00000000c00235f0        0x0 core/idle.32
 .data          0x00000000c00235f0        0x0 core/idt.32
 .data          0x00000000c00235f0        0x4 core/kheap.32
 .data          0x00000000c00235f4        0x0 core/main.32
 .data          0x00000000c00235f4        0x4 core/physmgr.32
                0x00000000c00235f4                Phys::bitmap
 .data          0x00000000c00235f8        0x0 core/pipe.32
 *fill*         0x00000000c00235f8        0x8 
 .data          0x00000000c0023600       0x60 core/terminal.32
                0x00000000c0023600                VgaText::hiddenOut
                0x00000000c0023620                ansiToVGAMappings
 .data          0x00000000c0023660        0x0 core/tss.32
 .data          0x00000000c0023660        0x4 core/unixfile.32
                0x00000000c0023660                UnixFile::nextFd
 .data          0x00000000c0023664       0x15 core/virtmgr.32
                0x00000000c0023664                Virt::pageAllocPtr
                0x00000000c0023668                Virt::bitmap
                0x00000000c002366c                Virt::swapfileSectorsPerPage
                0x00000000c0023670                Virt::swapfileLength
                0x00000000c0023674                Virt::swapfileSector
                0x00000000c0023678                Virt::swapfileDrive
 *fill*         0x00000000c0023679        0x3 
 .data          0x00000000c002367c        0x4 coreobjs/c++.32
                0x00000000c002367c                __stack_chk_guard
 .data          0x00000000c0023680        0x0 dbg/kconsole.32
 .data          0x00000000c0023680       0x28 dbg/usban.32
                0x00000000c0023680                KiUsbanTypeMismatchTypes
 .data          0x00000000c00236a8        0x0 fs/symlink.32
 .data          0x00000000c00236a8        0x0 fs/vfs.32
 .data          0x00000000c00236a8        0x0 hal/bus.32
 .data          0x00000000c00236a8        0x0 hal/buzzer.32
 .data          0x00000000c00236a8        0x0 hal/clock.32
 .data          0x00000000c00236a8        0x0 hal/device.32
 .data          0x00000000c00236a8        0x0 hal/diskctrl.32
 .data          0x00000000c00236a8        0x0 hal/diskphys.32
 .data          0x00000000c00236a8        0x0 hal/fpu.32
 .data          0x00000000c00236a8        0x0 hal/intctrl.32
 .data          0x00000000c00236a8        0x0 hal/keybrd.32
 .data          0x00000000c00236a8        0x0 hal/logidisk.32
 .data          0x00000000c00236a8        0x0 hal/mouse.32
 .data          0x00000000c00236a8        0x0 hal/nic.32
 .data          0x00000000c00236a8        0x0 hal/partition.32
 .data          0x00000000c00236a8        0x0 hal/serial.32
 .data          0x00000000c00236a8        0x0 hal/timer.32
 .data          0x00000000c00236a8        0x0 hal/vcache.32
 .data          0x00000000c00236a8        0x0 hal/video.32
 .data          0x00000000c00236a8       0x10 hw/acpi.32
                0x00000000c00236a8                legacyIRQRemaps
 .data          0x00000000c00236b8        0x4 hw/cpu.32
                0x00000000c00236b8                lastCode
 .data          0x00000000c00236bc        0x0 krnl/atexit.32
 *fill*         0x00000000c00236bc        0x4 
 .data          0x00000000c00236c0      0x142 krnl/bootmsg.32
                0x00000000c00236c0                KiSplashScreen
 .data          0x00000000c0023802        0x0 krnl/compat.32
 *fill*         0x00000000c0023802       0x1e 
 .data          0x00000000c0023820      0x400 krnl/crc32.32
                0x00000000c0023820                KiPolyLookupCRC32
 .data          0x00000000c0023c20       0x4d krnl/env.32
                0x00000000c0023c20                defaultSysEnv
 .data          0x00000000c0023c6d        0x0 krnl/inlines.32
 .data          0x00000000c0023c6d        0x0 krnl/panic.32
 .data          0x00000000c0023c6d        0x0 krnl/powctrl.32
 .data          0x00000000c0023c6d        0x0 krnl/random.32
 .data          0x00000000c0023c6d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023c6d       0x13 
 .data          0x00000000c0023c80       0x4c krnl/signal.32
                0x00000000c0023c80                KiDefaultSignalHandlers
 *fill*         0x00000000c0023ccc       0x14 
 .data          0x00000000c0023ce0       0xfc krnl/syscalls.32
                0x00000000c0023ce0                systemCallHandlers
 .data          0x00000000c0023ddc        0x0 net/ethernet.32
 *fill*         0x00000000c0023ddc        0x4 
 .data          0x00000000c0023de0      0x100 reg/cm.32
                0x00000000c0023de0                CmComponents
 .data          0x00000000c0023ee0        0x0 reg/registry.32
 .data          0x00000000c0023ee0        0x0 sys/eject.32
 .data          0x00000000c0023ee0        0x0 sys/exit.32
 .data          0x00000000c0023ee0        0x0 sys/getcwd.32
 .data          0x00000000c0023ee0        0x0 sys/getpid.32
 .data          0x00000000c0023ee0        0x0 sys/getramdata.32
 .data          0x00000000c0023ee0        0x0 sys/getvgaptr.32
 .data          0x00000000c0023ee0        0x0 sys/kill.32
 .data          0x00000000c0023ee0        0x0 sys/loaddll.32
 .data          0x00000000c0023ee0        0x0 sys/read.32
 .data          0x00000000c0023ee0        0x0 sys/registersignal.32
 .data          0x00000000c0023ee0        0x0 sys/registry.32
 .data          0x00000000c0023ee0        0x0 sys/sbrk.32
 .data          0x00000000c0023ee0        0x0 sys/setcwd.32
 .data          0x00000000c0023ee0        0x0 sys/settime.32
 .data          0x00000000c0023ee0        0x0 sys/symlink.32
 .data          0x00000000c0023ee0        0x0 sys/timezone.32
 .data          0x00000000c0023ee0        0x0 sys/truncate.32
 .data          0x00000000c0023ee0        0x0 sys/write.32
 .data          0x00000000c0023ee0        0x0 sys/wsbe.32
 .data          0x00000000c0023ee0        0x0 sys/yield.32
 .data          0x00000000c0023ee0        0x0 thr/elf.32
 .data          0x00000000c0023ee0        0x4 thr/prcssthr.32
                0x00000000c0023ee0                Thr::nextPID
 .data          0x00000000c0023ee4        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023ee4       0x1c 
 .data          0x00000000c0023f00      0x2a0 arch/i386/hal.32
                0x00000000c0023f00                exceptionNames
 .data          0x00000000c00241a0        0x0 arch/i386/pic.32
 .data          0x00000000c00241a0        0x0 arch/i386/rtc.32
 .data          0x00000000c00241a0        0x0 arch/i386/vga.32
 .data          0x00000000c00241a0        0x0 fs/fat/vfslink.32
 .data          0x00000000c00241a0        0x0 fs/iso9660/helper.32
 .data          0x00000000c00241a0        0x1 fs/iso9660/vfslink.32
                0x00000000c00241a0                recentDriveletter
 .data          0x00000000c00241a1        0x0 hal/sound/sndcard.32
 .data          0x00000000c00241a1        0x0 hal/sound/sndport.32
 .data          0x00000000c00241a1        0x0 hw/bus/isa.32
 .data          0x00000000c00241a1        0x0 hw/bus/pci.32
 .data          0x00000000c00241a1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00241a1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00241a1        0x0 hw/diskphys/ata.32
 .data          0x00000000c00241a1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00241a1        0x0 hw/diskphys/sata.32
 .data          0x00000000c00241a1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00241a1        0x0 hw/intctrl/apic.32
 .data          0x00000000c00241a1        0x0 hw/timer/apictimer.32
 .data          0x00000000c00241a1        0x0 hw/timer/pit.32
 .data          0x00000000c00241a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00241a1        0x0 crtn.32
 .data          0x00000000c00241a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00241a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00241a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00241a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00241a4        0x0
 .got           0x00000000c00241a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00241a4        0x0
 .got.plt       0x00000000c00241a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00241a4        0x0
 .igot.plt      0x00000000c00241a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00241a4        0x0
 .tm_clone_table
                0x00000000c00241a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00241a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00241a1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00241a1        0x3 
 .eh_frame      0x00000000c00241a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00241a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00241a4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00241fc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002423c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00242a8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
