Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e85a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6b9 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cc5                Krnl::firstTask()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006eb0                Computer::setBootMessage(char const*)
                0x00000000c0006eb2                Computer::detectFeatures()
                0x00000000c00070d8                Computer::displayFeatures()
                0x00000000c00070da                Computer::rdmsr(unsigned int)
                0x00000000c0007106                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007142                Computer::shutdown()
                0x00000000c000715a                Computer::restart()
                0x00000000c0007172                Computer::sleep()
                0x00000000c0007186                Computer::nmiEnabled()
                0x00000000c0007192                Computer::readCMOS(unsigned char)
                0x00000000c00071ae                Computer::enableNMI(bool)
                0x00000000c00071c6                Computer::open(int, int, void*)
                0x00000000c000729a                Computer::disableNMI()
                0x00000000c00072aa                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072ce                Computer::handleNMI()
 *fill*         0x00000000c0007339        0x1 
 .text          0x00000000c000733a      0x1db core/gdt.32
                0x00000000c000733a                GDTEntry::setBase(unsigned int)
                0x00000000c0007356                GDTEntry::setLimit(unsigned int)
                0x00000000c0007374                GDT::GDT()
                0x00000000c0007374                GDT::GDT()
                0x00000000c000738a                GDT::addEntry(GDTEntry)
                0x00000000c00073ac                GDT::getNumberOfEntries()
                0x00000000c00073b4                GDT::flush()
                0x00000000c00073d6                GDT::setup()
 .text          0x00000000c0007515       0x1d core/idle.32
                0x00000000c0007515                idleFunction(void*)
 *fill*         0x00000000c0007532        0x2 
 .text          0x00000000c0007534      0x46c core/idt.32
                0x00000000c0007534                IDTEntry::IDTEntry(bool)
                0x00000000c0007534                IDTEntry::IDTEntry(bool)
                0x00000000c00075ae                IDTEntry::setOffset(unsigned int)
                0x00000000c00075c4                IDT::IDT()
                0x00000000c00075c4                IDT::IDT()
                0x00000000c00075c6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075ce                IDT::addEntry(IDTEntry, int)
                0x00000000c00075e8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007620                IDT::flush()
                0x00000000c000763a                IDT::setup()
 .text          0x00000000c00079a0      0x185 core/kheap.32
                0x00000000c00079a0                sbrk
                0x00000000c0007a34                mmap
                0x00000000c0007a4a                munmap
                0x00000000c0007a60                liballoc_lock()
                0x00000000c0007a6e                liballoc_unlock()
                0x00000000c0007a84                liballoc_alloc(int)
                0x00000000c0007a9c                liballoc_free(void*, int)
                0x00000000c0007ab7                realloc
                0x00000000c0007acb                malloc
                0x00000000c0007adb                free
                0x00000000c0007aeb                rfree
                0x00000000c0007afb                calloc
 .text          0x00000000c0007b25       0xc3 core/main.32
                0x00000000c0007b25                KeEntryPoint
 .text          0x00000000c0007be8      0x639 core/physmgr.32
                0x00000000c0007be8                Phys::allocateDMA(unsigned long)
                0x00000000c0007cd6                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d11                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d51                Phys::getPageState(unsigned long)
                0x00000000c0007d6d                Phys::freePage(unsigned long)
                0x00000000c0007dd6                Phys::allocatePage()
                0x00000000c0007ea5                Phys::allocateContiguousPages(int)
                0x00000000c0007f0c                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f44                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008221        0x1 
 .text          0x00000000c0008222      0x26d core/pipe.32
                0x00000000c0008222                Pipe::isAtty()
                0x00000000c0008226                Pipe::~Pipe()
                0x00000000c0008226                Pipe::~Pipe()
                0x00000000c000824a                Pipe::~Pipe()
                0x00000000c0008272                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008336                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xaaa core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a50                VgaText::putx(unsigned int)
                0x00000000c0008a96                VgaText::puts(char const*)
                0x00000000c0008abc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b08                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c56                VgaText::VgaText(char const*)
                0x00000000c0008c56                VgaText::VgaText(char const*)
                0x00000000c0008da6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f14                VgaText::doUpdate()
                0x00000000c0008f15                newTerminal(char*)
 *fill*         0x00000000c0008f3a        0x2 
 .text          0x00000000c0008f3c      0x1a1 core/tss.32
                0x00000000c0008f3c                TSS::TSS()
                0x00000000c0008f3c                TSS::TSS()
                0x00000000c0008f4c                TSS::setESP(unsigned long)
                0x00000000c0008f60                TSS::flush()
                0x00000000c0008f80                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090dd        0x1 
 .text          0x00000000c00090de      0x4ca core/unixfile.32
                0x00000000c00090de                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009134                ReservedFilename::isAtty()
                0x00000000c0009150                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091ae                UnixFile::getFileDescriptor()
                0x00000000c00091b6                UnixFile::UnixFile(int)
                0x00000000c00091b6                UnixFile::UnixFile(int)
                0x00000000c000936a                ReservedFilename::ReservedFilename(int)
                0x00000000c000936a                ReservedFilename::ReservedFilename(int)
                0x00000000c000939c                UnixFile::~UnixFile()
                0x00000000c000939c                UnixFile::~UnixFile()
                0x00000000c0009438                UnixFile::~UnixFile()
                0x00000000c0009460                ReservedFilename::~ReservedFilename()
                0x00000000c0009460                ReservedFilename::~ReservedFilename()
                0x00000000c0009484                ReservedFilename::~ReservedFilename()
                0x00000000c00094ab                getFromFileDescriptor(int)
 .text          0x00000000c00095a8     0x12b4 core/virtmgr.32
                0x00000000c00095a8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095e2                Virt::getPageState(unsigned long)
                0x00000000c0009605                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009721                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009744                Virt::swapIDToSector(unsigned long)
                0x00000000c000975a                Virt::allocateSwapfilePage()
                0x00000000c00097d9                Virt::virtualMemorySetup()
                0x00000000c000982a                Virt::setupPageSwapping(int)
                0x00000000c000989c                VAS::VAS(VAS*)
                0x00000000c000989c                VAS::VAS(VAS*)
                0x00000000c00098ca                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098f8                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009917                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a2a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a4e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a68                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009aac                VAS::VAS()
                0x00000000c0009aac                VAS::VAS()
                0x00000000c0009b16                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b4a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b76                VAS::~VAS()
                0x00000000c0009b76                VAS::~VAS()
                0x00000000c0009ce4                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009df0                VAS::allocatePages(int, int)
                0x00000000c0009fe0                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009ffe                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a0c6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a1b6                VAS::VAS(bool)
                0x00000000c000a1b6                VAS::VAS(bool)
                0x00000000c000a448                VAS::evict(unsigned long)
                0x00000000c000a526                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a65e                VAS::scanForEviction()
                0x00000000c000a761                mapVASFirstTime
 .text          0x00000000c000a85c       0x5f coreobjs/c++.32
                0x00000000c000a85c                __cxa_atexit
                0x00000000c000a85f                __cxa_finalize
                0x00000000c000a860                __stack_chk_fail
                0x00000000c000a896                __cxa_pure_virtual
                0x00000000c000a8a7                operator new[](unsigned long)
                0x00000000c000a8ac                operator delete(void*, unsigned long)
                0x00000000c000a8b1                operator delete[](void*)
                0x00000000c000a8b6                operator delete[](void*, unsigned long)
 .text          0x00000000c000a8bb      0x225 dbg/kconsole.32
                0x00000000c000a8bb                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a92c                Dbg::logc(char)
                0x00000000c000a94c                Dbg::logs(char*)
                0x00000000c000a96b                Dbg::logWriteInt(unsigned int)
                0x00000000c000a989                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a9aa                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aae0      0xc86 fs/vfs.32
                0x00000000c000aae0                File::read(unsigned long long, void*, int*)
                0x00000000c000ab38                File::write(unsigned long long, void*, int*)
                0x00000000c000ab90                Directory::read(unsigned long long, void*, int*)
                0x00000000c000abe8                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ac16                File::isAtty()
                0x00000000c000ac1a                Directory::isAtty()
                0x00000000c000ac1e                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ac24                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ac2a                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ac30                File::~File()
                0x00000000c000ac30                File::~File()
                0x00000000c000ac54                File::~File()
                0x00000000c000ac7e                Directory::~Directory()
                0x00000000c000ac7e                Directory::~Directory()
                0x00000000c000aca2                Directory::~Directory()
                0x00000000c000accc                Filesystem::Filesystem()
                0x00000000c000accc                Filesystem::Filesystem()
                0x00000000c000acf0                Filesystem::~Filesystem()
                0x00000000c000acf0                Filesystem::~Filesystem()
                0x00000000c000acfe                Filesystem::~Filesystem()
                0x00000000c000ad22                Fs::getcwd(Process*, char*, int)
                0x00000000c000ad4c                Fs::initVFS()
                0x00000000c000ad76                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000af52                File::File(char const*, Process*)
                0x00000000c000af52                File::File(char const*, Process*)
                0x00000000c000b00e                File::open(FileOpenMode)
                0x00000000c000b06c                File::close()
                0x00000000c000b0cc                File::seek(unsigned long long)
                0x00000000c000b122                File::tell(unsigned long long*)
                0x00000000c000b172                File::rewind()
                0x00000000c000b186                File::unlink()
                0x00000000c000b1d2                File::rename(char const*)
                0x00000000c000b220                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b27c                File::exists()
                0x00000000c000b2ba                File::stat(unsigned long long*, bool*)
                0x00000000c000b31b                Fs::setcwd(Process*, char*)
                0x00000000c000b478                Directory::Directory(char const*, Process*)
                0x00000000c000b478                Directory::Directory(char const*, Process*)
                0x00000000c000b534                Directory::open()
                0x00000000c000b590                Directory::close()
                0x00000000c000b5f0                Directory::unlink()
                0x00000000c000b63c                Directory::rename(char const*)
                0x00000000c000b68a                Directory::exists()
                0x00000000c000b6c8                Directory::read(dirent*)
                0x00000000c000b714                Directory::create()
                0x00000000c000b760                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b766        0x2 
 .text          0x00000000c000b768       0x86 hal/bus.32
                0x00000000c000b768                Bus::Bus(char const*)
                0x00000000c000b768                Bus::Bus(char const*)
                0x00000000c000b7a0                Bus::~Bus()
                0x00000000c000b7a0                Bus::~Bus()
                0x00000000c000b7c4                Bus::~Bus()
 .text          0x00000000c000b7ee       0x96 hal/buzzer.32
                0x00000000c000b7ee                beepThread(void*)
                0x00000000c000b82b                Krnl::beep(int, int, bool)
 .text          0x00000000c000b884      0x465 hal/clock.32
                0x00000000c000b884                User::loadClockSettings(int)
                0x00000000c000b8d6                Clock::Clock(char const*)
                0x00000000c000b8d6                Clock::Clock(char const*)
                0x00000000c000b90c                Clock::~Clock()
                0x00000000c000b90c                Clock::~Clock()
                0x00000000c000b930                Clock::~Clock()
                0x00000000c000b95a                Clock::timeInSecondsLocal()
                0x00000000c000b9a2                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b9fb                datetimeToSeconds(datetime_t)
                0x00000000c000bb20                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bb80                secondsToDatetime(unsigned long long)
                0x00000000c000bcc4                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bce9        0x1 
 .text          0x00000000c000bcea      0x464 hal/device.32
                0x00000000c000bcea                Device::hibernate()
                0x00000000c000bcec                Device::wake()
                0x00000000c000bcee                Device::detect()
                0x00000000c000bcf0                Device::disableLegacy()
                0x00000000c000bcf2                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bcf4                DriverlessDevice::close(int, int, void*)
                0x00000000c000bcf8                DriverlessDevice::detect()
                0x00000000c000bcfa                DriverlessDevice::open(int, int, void*)
                0x00000000c000bd0e                Device::~Device()
                0x00000000c000bd0e                Device::~Device()
                0x00000000c000bd1c                Device::~Device()
                0x00000000c000bd44                Device::findAndLoadDriver()
                0x00000000c000bd52                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bd78                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bdb8                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bde2                Device::getParent()
                0x00000000c000bdee                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000be0c                Device::addChild(Device*)
                0x00000000c000be50                Device::removeAllChildren()
                0x00000000c000be96                Device::hibernateAll()
                0x00000000c000bec6                Device::wakeAll()
                0x00000000c000bef6                Device::detectAll()
                0x00000000c000bf26                Device::disableLegacyAll()
                0x00000000c000bf28                Device::loadDriversForAll()
                0x00000000c000bf2a                Device::closeAll()
                0x00000000c000bf60                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bf96                Device::setName(char const*)
                0x00000000c000bfa4                Device::Device(char const*)
                0x00000000c000bfa4                Device::Device(char const*)
                0x00000000c000c0a0                Device::getName()
                0x00000000c000c0aa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c0aa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c0e0                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c124                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c14e        0x2 
 .text          0x00000000c000c150       0x86 hal/diskctrl.32
                0x00000000c000c150                HardDiskController::HardDiskController(char const*)
                0x00000000c000c150                HardDiskController::HardDiskController(char const*)
                0x00000000c000c188                HardDiskController::~HardDiskController()
                0x00000000c000c188                HardDiskController::~HardDiskController()
                0x00000000c000c1ac                HardDiskController::~HardDiskController()
 .text          0x00000000c000c1d6       0xe2 hal/diskphys.32
                0x00000000c000c1d6                PhysicalDisk::eject()
                0x00000000c000c1da                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c1da                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c242                PhysicalDisk::startCache()
                0x00000000c000c26a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c26a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c28e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c2b8        0x0 hal/fpu.32
 .text          0x00000000c000c2b8      0x360 hal/intctrl.32
                0x00000000c000c2b8                int_handler
                0x00000000c000c342                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c38c                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c4cf                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c503                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c579                setupINTS()
                0x00000000c000c5d6                convertLegacyIRQNumber(int)
 .text          0x00000000c000c618      0x8be hal/keybrd.32
                0x00000000c000c618                startGUI(void*)
                0x00000000c000c686                startGUIVESA(void*)
                0x00000000c000c6f4                sendKeyToTerminal(unsigned char)
                0x00000000c000c7cf                sendKeyboardToken(KeyboardToken)
                0x00000000c000ccb9                clearInternalKeybuffer(VgaText*)
                0x00000000c000ccee                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000ce4c                Keyboard::Keyboard(char const*)
                0x00000000c000ce4c                Keyboard::Keyboard(char const*)
                0x00000000c000ce88                Keyboard::~Keyboard()
                0x00000000c000ce88                Keyboard::~Keyboard()
                0x00000000c000ceac                Keyboard::~Keyboard()
 .text          0x00000000c000ced6      0x3f8 hal/logidisk.32
                0x00000000c000ced6                LogicalDisk::close(int, int, void*)
                0x00000000c000ceda                LogicalDisk::~LogicalDisk()
                0x00000000c000ceda                LogicalDisk::~LogicalDisk()
                0x00000000c000cefe                LogicalDisk::~LogicalDisk()
                0x00000000c000cf28                LogicalDisk::open(int, int, void*)
                0x00000000c000cf3c                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cf74                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cfba                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cfba                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d07a                LogicalDisk::assignDriveLetter()
                0x00000000c000d134                LogicalDisk::mount()
                0x00000000c000d17c                LogicalDisk::unmount()
                0x00000000c000d18c                LogicalDisk::eject()
                0x00000000c000d1a0                LogicalDisk::unassignDriveLetter()
                0x00000000c000d1f6                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d262                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000d2ce        0x2 
 .text          0x00000000c000d2d0       0x86 hal/mouse.32
                0x00000000c000d2d0                Mouse::Mouse(char const*)
                0x00000000c000d2d0                Mouse::Mouse(char const*)
                0x00000000c000d308                Mouse::~Mouse()
                0x00000000c000d308                Mouse::~Mouse()
                0x00000000c000d32c                Mouse::~Mouse()
 .text          0x00000000c000d356       0x90 hal/nic.32
                0x00000000c000d356                NIC::getMAC()
                0x00000000c000d35c                NIC::write(int, unsigned char*, int*)
                0x00000000c000d362                NIC::NIC(char const*)
                0x00000000c000d362                NIC::NIC(char const*)
                0x00000000c000d398                NIC::~NIC()
                0x00000000c000d398                NIC::~NIC()
                0x00000000c000d3bc                NIC::~NIC()
 .text          0x00000000c000d3e6      0x33b hal/partition.32
                0x00000000c000d3e6                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d48e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d721        0x3 
 .text          0x00000000c000d724       0x86 hal/serial.32
                0x00000000c000d724                Serial::Serial(char const*)
                0x00000000c000d724                Serial::Serial(char const*)
                0x00000000c000d75c                Serial::~Serial()
                0x00000000c000d75c                Serial::~Serial()
                0x00000000c000d780                Serial::~Serial()
 *fill*         0x00000000c000d7aa        0x2 
 .text          0x00000000c000d7ac      0x234 hal/timer.32
                0x00000000c000d7ac                Timer::Timer(char const*)
                0x00000000c000d7ac                Timer::Timer(char const*)
                0x00000000c000d7e4                Timer::~Timer()
                0x00000000c000d7e4                Timer::~Timer()
                0x00000000c000d808                Timer::~Timer()
                0x00000000c000d832                Timer::read()
                0x00000000c000d83d                setupTimer(int)
                0x00000000c000d878                timerHandler(unsigned int)
 .text          0x00000000c000d9e0      0x450 hal/vcache.32
                0x00000000c000d9e0                VCache::VCache(PhysicalDisk*)
                0x00000000c000d9e0                VCache::VCache(PhysicalDisk*)
                0x00000000c000db50                VCache::invalidateReadBuffer()
                0x00000000c000db60                VCache::writeWriteBuffer()
                0x00000000c000dbac                VCache::~VCache()
                0x00000000c000dbac                VCache::~VCache()
                0x00000000c000dc04                VCache::~VCache()
                0x00000000c000dc2c                VCache::write(unsigned long long, int, void*)
                0x00000000c000dd26                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000de30      0x4d9 hal/video.32
                0x00000000c000de30                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000de7c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000deec                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000df7c                Video::clearScreen(unsigned int)
                0x00000000c000dfb0                Video::putpixel(int, int, unsigned int)
                0x00000000c000dfbe                Video::readPixelApprox(int, int)
                0x00000000c000dfd2                Video::Video(char const*)
                0x00000000c000dfd2                Video::Video(char const*)
                0x00000000c000e008                Video::~Video()
                0x00000000c000e008                Video::~Video()
                0x00000000c000e02c                Video::~Video()
                0x00000000c000e056                Video::isMonochrome()
                0x00000000c000e062                Video::getWidth()
                0x00000000c000e06e                Video::getHeight()
                0x00000000c000e07a                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e136                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e29e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e309        0x3 
 .text          0x00000000c000e30c     0x12d2 hw/acpi.32
                0x00000000c000e30c                ACPI::close(int, int, void*)
                0x00000000c000e3c0                findRSDP()
                0x00000000c000e458                loadACPITables(unsigned char*)
                0x00000000c000e6c4                findRSDT(unsigned char*)
                0x00000000c000e81c                findDataTable(unsigned char*, char*)
                0x00000000c000e89c                scanMADT()
                0x00000000c000ed54                ACPI::ACPI()
                0x00000000c000ed54                ACPI::ACPI()
                0x00000000c000eda8                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000eea4                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ef70                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ef78                ACPI::detectPCI()
                0x00000000c000f198                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f1e0                ACPI::sleep()
                0x00000000c000f1fc                ACPI::open(int, int, void*)
 .text          0x00000000c000f5de      0xba5 hw/cpu.32
                0x00000000c000f5de                CPU::close(int, int, void*)
                0x00000000c000f5e2                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f5fe                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f616                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f68a                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f70e                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f73c                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f76a                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f798                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f7c6                CPU::CPU()
                0x00000000c000f7c6                CPU::CPU()
                0x00000000c000f854                CPU::displayFeatures()
                0x00000000c000f856                CPU::detectFeatures()
                0x00000000c000ff2a                CPU::setupSMEP()
                0x00000000c000ff36                CPU::setupUMIP()
                0x00000000c000ff40                CPU::setupTSC()
                0x00000000c000ff4a                CPU::setupLargePages()
                0x00000000c000ff54                CPU::setupPAT()
                0x00000000c000ff90                CPU::setupMTRR()
                0x00000000c000ff92                CPU::setupGlobalPages()
                0x00000000c000ff9c                CPU::allowUsermodeDataAccess()
                0x00000000c000ffae                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ffc0                CPU::setupSMAP()
                0x00000000c000ffce                CPU::setupFeatures()
                0x00000000c001009a                CPU::open(int, int, void*)
 .text          0x00000000c0010183       0xd8 krnl/bootmsg.32
                0x00000000c0010183                KeDisplaySplashScreen()
                0x00000000c00101f8                KeSetBootMessage(char const*)
 *fill*         0x00000000c001025b        0x1 
 .text          0x00000000c001025c      0x585 krnl/env.32
                0x00000000c001025c                EnvVarContainer::getEnv(char const*)
                0x00000000c001029a                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001035c                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001035e                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010548                EnvVarContainer::__loadSystem()
                0x00000000c0010562                EnvVarContainer::__loadUser()
                0x00000000c0010564                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010564                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010586                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010586                EnvVarContainer::~EnvVarContainer()
                0x00000000c00105b6                Krnl::getEnv(Process*, char const*)
                0x00000000c001061b                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c0010635                Krnl::setEnvUser(char const*, char const*)
                0x00000000c0010654                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0010667                Krnl::deleteEnvSystem(char const*)
                0x00000000c0010668                Krnl::deleteEnvUser(char const*)
                0x00000000c0010669                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c001066a                Krnl::newProcessEnv(Process*)
                0x00000000c001068c                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c00106d8                Krnl::loadSystemEnv()
                0x00000000c0010706                Krnl::loadUserEnv()
                0x00000000c001072c                Krnl::flushEnv()
                0x00000000c001072d                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001074d                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00107e1       0x94 krnl/inlines.32
                0x00000000c00107e1                CPU::current()
                0x00000000c00107ed                operator new(unsigned long)
                0x00000000c00107f2                operator delete(void*)
                0x00000000c00107f7                disableIRQs()
                0x00000000c00107f9                enableIRQs()
                0x00000000c00107fb                lockScheduler()
                0x00000000c0010803                unlockScheduler()
                0x00000000c0010812                lockStuff()
                0x00000000c0010820                unlockStuff()
                0x00000000c001085a                Virt::getAKernelVAS()
                0x00000000c0010860                __not_memcpy
 .text          0x00000000c0010875        0xc krnl/panic.32
                0x00000000c0010875                KePanic(char const*)
 .text          0x00000000c0010881      0x142 krnl/powctrl.32
                0x00000000c0010881                Krnl::powerThread(void*)
                0x00000000c00108af                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c00108c5                Krnl::userIOReceived()
                0x00000000c00108d0                Krnl::handlePowerButton()
                0x00000000c0010905                Krnl::handleSleepButton()
                0x00000000c001093a                Krnl::setupPowerManager()
 .text          0x00000000c00109c3       0x9b krnl/random.32
                0x00000000c00109c3                KeRand()
                0x00000000c0010a03                KeSeedRand(unsigned int)
                0x00000000c0010a2c                KeInitRand()
 *fill*         0x00000000c0010a5e        0x2 
 .text          0x00000000c0010a60      0x1bc krnl/resolve.32
                0x00000000c0010a60                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010c1c      0x313 krnl/signal.32
                0x00000000c0010c1c                KiSigKill(int)
                0x00000000c0010c30                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010c31                KiDefaultSignalHandlerPause(int)
                0x00000000c0010c5d                KiDefaultSignalHandlerResume(int)
                0x00000000c0010c89                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010c8e                KeInitSignals()
                0x00000000c0010cd9                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010d0f                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010d8c                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010e7b                KiCheckSignalZ
                0x00000000c0010ebd                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010ef8                KiFinishSignalZ
 .text          0x00000000c0010f2f      0xc76 krnl/syscalls.32
                0x00000000c0010f2f                SysSeekDir(regs*)
                0x00000000c0010f34                SysTellDir(regs*)
                0x00000000c0010f39                SysVerify(regs*)
                0x00000000c0010f43                SysGetArgc(regs*)
                0x00000000c0010f57                SysTTYName(regs*)
                0x00000000c0010f5f                SysFormatDisk(regs*)
                0x00000000c0010fc6                SysSetDiskVolumeLabel(regs*)
                0x00000000c001101a                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011073                SysShutdown(regs*)
                0x00000000c0011100                SysRealpath(regs*)
                0x00000000c001114f                SysReadDir(regs*)
                0x00000000c00111cf                SysIsATTY(regs*)
                0x00000000c0011229                SysSeek(regs*)
                0x00000000c0011283                SysTell(regs*)
                0x00000000c00112f0                SysSize(regs*)
                0x00000000c0011363                SysSizeFromFilename(regs*)
                0x00000000c001140d                SysClose(regs*)
                0x00000000c001146d                SysOpenDir(regs*)
                0x00000000c00114ea                SysMakeDir(regs*)
                0x00000000c0011558                SysCloseDir(regs*)
                0x00000000c00115a7                SysWait(regs*)
                0x00000000c00115c8                SysNotImpl(regs*)
                0x00000000c00115e3                SysPanic(regs*)
                0x00000000c00115fe                SysRmdir(regs*)
                0x00000000c001165c                SysUnlink(regs*)
                0x00000000c00116ba                SysGetArgv(regs*)
                0x00000000c0011707                SysUSleep(regs*)
                0x00000000c0011730                SysSpawn(regs*)
                0x00000000c00117a1                SysGetEnv(regs*)
                0x00000000c0011856                SysSetFatAttrib(regs*)
                0x00000000c00118bf                SysPipe(regs*)
                0x00000000c0011904                SysGetUnixTime(regs*)
                0x00000000c0011918                string_ends_with(char const*, char const*)
                0x00000000c0011963                SysOpen(regs*)
                0x00000000c0011b63                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011ba5        0x3 
 .text          0x00000000c0011ba8      0x159 net/ethernet.32
                0x00000000c0011ba8                KeSwitchEndian16(unsigned short)
                0x00000000c0011bcc                KeSwitchEndian32(unsigned int)
                0x00000000c0011bfc                EthernetCRC32(unsigned char*, int)
                0x00000000c0011ca0                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0011d01      0xd51 reg/cm.32
                0x00000000c0011d01                CmOpen(char const*)
                0x00000000c0011e1f                CmClose(Reghive_Tag*)
                0x00000000c0011e35                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011e71                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0011ee8                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011f27                CmGetNext(Reghive_Tag*, int)
                0x00000000c0011f59                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011f95                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0011fbd                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0011fde                CmExpand(Reghive_Tag*, int)
                0x00000000c0012059                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c00120df                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c00121d3                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c001230b                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c001236c                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c001239c                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c00123d3                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00123fd                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c001243d                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00124e1                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c001250f                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00126ac                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00126f9                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012773                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00127c6                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001288a                zStrtok(char*, char const*)
                0x00000000c00128fc                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c001297d                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0012a20                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0012a52      0x545 reg/registry.32
                0x00000000c0012a52                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012bde                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0012d33                Reg::getLine(char*, char*, char*)
                0x00000000c0012d6a                Reg::readInt(char*, char*, int*)
                0x00000000c0012e58                Reg::readString(char*, char*, char*, int)
                0x00000000c0012ed9                Reg::readBool(char*, char*, bool*)
                0x00000000c0012efe                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0012f2a                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012f56                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0012f97       0x36 sys/eject.32
                0x00000000c0012f97                SysEject(regs*)
 .text          0x00000000c0012fcd       0x18 sys/exit.32
                0x00000000c0012fcd                SysExit(regs*)
 .text          0x00000000c0012fe5       0x1f sys/getcwd.32
                0x00000000c0012fe5                SysGetCwd(regs*)
 .text          0x00000000c0013004        0xc sys/getpid.32
                0x00000000c0013004                SysGetPID(regs*)
 .text          0x00000000c0013010       0x1a sys/getramdata.32
                0x00000000c0013010                SysGetRAMData(regs*)
 .text          0x00000000c001302a       0x82 sys/getvgaptr.32
                0x00000000c001302a                SysGetVGAPtr(regs*)
 .text          0x00000000c00130ac       0xb9 sys/kill.32
                0x00000000c00130ac                SysKill(regs*)
 .text          0x00000000c0013165       0xa8 sys/loaddll.32
                0x00000000c0013165                SysLoadDLL(regs*)
 .text          0x00000000c001320d       0x68 sys/read.32
                0x00000000c001320d                SysRead(regs*)
 .text          0x00000000c0013275       0x29 sys/registersignal.32
                0x00000000c0013275                SysRegisterSignal(regs*)
 .text          0x00000000c001329e      0x19c sys/registry.32
                0x00000000c001329e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013315                SysRegistryReadExtent(regs*)
                0x00000000c001335d                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013385                SysRegistryEnterDirectory(regs*)
                0x00000000c00133ad                SysRegistryGetNext(regs*)
                0x00000000c00133d5                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001340f                SysRegistryOpen(regs*)
                0x00000000c0013423                SysRegistryClose(regs*)
 .text          0x00000000c001343a       0x55 sys/sbrk.32
                0x00000000c001343a                SysSbrk(regs*)
 .text          0x00000000c001348f       0x1c sys/setcwd.32
                0x00000000c001348f                SysSetCwd(regs*)
 .text          0x00000000c00134ab       0x96 sys/settime.32
                0x00000000c00134ab                SysSetTime(regs*)
 .text          0x00000000c0013541       0x4a sys/timezone.32
                0x00000000c0013541                SysTimezone(regs*)
 .text          0x00000000c001358b       0x68 sys/write.32
                0x00000000c001358b                SysWrite(regs*)
 .text          0x00000000c00135f3       0x62 sys/wsbe.32
                0x00000000c00135f3                SysWsbe(regs*)
 .text          0x00000000c0013655       0x25 sys/yield.32
                0x00000000c0013655                SysYield(regs*)
 .text          0x00000000c001367a     0x1203 thr/elf.32
                0x00000000c001367a                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0013901                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013b20                Thr::runtimeReferenceHelper()
                0x00000000c0013b33                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013b82                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013e40                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014581                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00145b3                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00145ea                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0014604                Thr::loadDLL(char const*, bool)
                0x00000000c0014844                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001487d        0x3 
 .text          0x00000000c0014880     0x13b5 thr/prcssthr.32
                0x00000000c0014880                userModeEntryPoint(void*)
                0x00000000c00148a8                changeTSS
                0x00000000c00148d8                switchToThread(ThreadControlBlock*)
                0x00000000c0014988                Process::addArgs(char**)
                0x00000000c00149f4                Process::Process(char const*, Process*, char**)
                0x00000000c00149f4                Process::Process(char const*, Process*, char**)
                0x00000000c0014c00                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014c00                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014dd4                taskStartupFunction
                0x00000000c0014de0                Semaphore::Semaphore(int)
                0x00000000c0014de0                Semaphore::Semaphore(int)
                0x00000000c0014e10                Mutex::Mutex()
                0x00000000c0014e10                Mutex::Mutex()
                0x00000000c0014e24                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014f2c                Process::createUserThread()
                0x00000000c0014f4c                setupMultitasking(void (*)())
                0x00000000c0015070                schedule()
                0x00000000c0015104                Semaphore::tryAcquire()
                0x00000000c00151c4                Semaphore::assertLocked(char const*)
                0x00000000c0015248                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015270                blockTask(TaskState)
                0x00000000c00152a8                waitTask(int, int*, int)
                0x00000000c00152ec                milliTenthSleepUntil(unsigned int)
                0x00000000c001538c                milliTenthSleep(unsigned int)
                0x00000000c00153a0                sleep(unsigned int)
                0x00000000c00153b0                Semaphore::acquire()
                0x00000000c0015478                taskReturned
                0x00000000c00154bc                Thr::processFromPID(int)
                0x00000000c0015568                unblockTask(ThreadControlBlock*)
                0x00000000c0015614                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00158e8                cleanerTaskFunction(void*)
                0x00000000c00159f0                terminateTask(int)
                0x00000000c0015adc                Thr::terminateFromIRQ(int)
                0x00000000c0015aec                Semaphore::release()
 .text          0x00000000c0015c35      0xbec vm86/vm8086.32
                0x00000000c0015c35                Vm::inbv(unsigned short)
                0x00000000c0015c48                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015c7e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015c8e                Vm::getSegment(unsigned int)
                0x00000000c0015c96                Vm::getOffset(unsigned int)
                0x00000000c0015c9b                Vm::mainloop2()
                0x00000000c0015cd5                Vm::mainVm8086Loop(void*)
                0x00000000c0015ce5                Vm::mainloop3(unsigned long)
                0x00000000c0015d0b                Vm::initialise8086()
                0x00000000c0015d4e                Vm::finish8086()
                0x00000000c0015daf                Vm::getOutput8086(unsigned char*)
                0x00000000c0015dd4                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015e8d                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001601a                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00160a3                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00160b4                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00160c6                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00160d7                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00160ec                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016102                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016117                Vm::faultHandler(regs*)
 .text          0x00000000c0016821      0xabf arch/i386/hal.32
                0x00000000c0016821                noCopro(unsigned long)
                0x00000000c0016822                nmiHandler(regs*, void*)
                0x00000000c001683b                doubleFault(regs*, void*)
                0x00000000c0016854                displayDebugInfo(regs*)
                0x00000000c0016bb0                HalSystemIdle()
                0x00000000c0016c2c                displayProgramFault(char const*)
                0x00000000c0016c78                gpFault(regs*, void*)
                0x00000000c0016cdf                pgFault(regs*, void*)
                0x00000000c0016d68                otherISRHandler(regs*, void*)
                0x00000000c0016d9c                opcodeFault(regs*, void*)
                0x00000000c0016e1f                i386SaveCoprocessor(void*)
                0x00000000c0016e33                i386LoadCoprocessor(void*)
                0x00000000c0016e47                x87EmulHandler(regs*, void*)
                0x00000000c0016ee4                HalInitialiseCoprocessor()
                0x00000000c0016f92                HalPanic(char const*)
                0x00000000c001709e                HalQueryPerformanceCounter()
                0x00000000c00170b9                HalInitialise()
                0x00000000c001726f                HalMakeBeep(int)
                0x00000000c00172a9                HalGetRand()
                0x00000000c00172ac                HalEndOfInterrupt(int)
                0x00000000c00172dd                HalRestart()
                0x00000000c00172de                HalShutdown()
                0x00000000c00172df                HalSleep()
 .text          0x00000000c00172e0      0x2dc arch/i386/pic.32
                0x00000000c00172e0                picIoWait()
                0x00000000c00172e8                picDisable()
                0x00000000c001731c                picGetIRQReg(int)
                0x00000000c0017398                picOpen()
                0x00000000c001751c                picEOI(int)
 .text          0x00000000c00175bc      0x66e arch/i386/rtc.32
                0x00000000c00175bc                RTC::open(int, int, void*)
                0x00000000c00175c0                RTC::close(int, int, void*)
                0x00000000c00175c4                RTC::timeInSecondsUTC()
                0x00000000c00175d6                RTC::timeInDatetimeUTC()
                0x00000000c00175fc                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001763a                RTC::~RTC()
                0x00000000c001763a                RTC::~RTC()
                0x00000000c001765e                RTC::~RTC()
                0x00000000c0017688                RTC::get_update_in_progress_flag()
                0x00000000c00176a2                RTC::completeRTCRefresh()
                0x00000000c001797c                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0017b2a                rtcIRQHandler(regs*, void*)
                0x00000000c0017b70                RTC::RTC()
                0x00000000c0017b70                RTC::RTC()
 *fill*         0x00000000c0017c2a        0x2 
 .text          0x00000000c0017c2c      0x1f4 arch/i386/vga.32
                0x00000000c0017c2c                HalConsoleScroll(int, int)
                0x00000000c0017d34                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017d98                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0017e20     0x1487 fs/fat/vfslink.32
                0x00000000c0017e20                FAT::getName()
                0x00000000c0017e28                FAT::tell(void*, unsigned long long*)
                0x00000000c0017e64                FAT::stat(void*, unsigned long long*)
                0x00000000c0017ea0                FAT::~FAT()
                0x00000000c0017ea0                FAT::~FAT()
                0x00000000c0017ec4                FAT::~FAT()
                0x00000000c0017eec                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017f90                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018070                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018254                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018470                FAT::allocateSwapfile(char const*, int)
                0x00000000c0018630                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00187a0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0018800                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0018860                FAT::close(void*)
                0x00000000c00188b4                FAT::closeDir(void*)
                0x00000000c0018908                FAT::seek(void*, unsigned long long)
                0x00000000c0018960                fatWrapperReadDisk
                0x00000000c00189a0                fatWrapperWriteDisk
                0x00000000c00189e0                fatWrapperIoctl
                0x00000000c0018b00                FAT::FAT()
                0x00000000c0018b00                FAT::FAT()
                0x00000000c0018b58                FAT::fixFilepath(char*)
                0x00000000c0018b98                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0018d0c                FAT::openDir(char const*, void**)
                0x00000000c0018dbc                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018eb4                FAT::unlink(char const*)
                0x00000000c0018f34                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00190ec                FAT::rename(char const*, char const*)
                0x00000000c00191b8                FAT::mkdir(char const*)
                0x00000000c0019238                FAT::exists(char const*)
 *fill*         0x00000000c00192a7        0x1 
 .text          0x00000000c00192a8       0x94 fs/iso9660/helper.32
                0x00000000c00192a8                isoReadDiscSectorHelper
                0x00000000c0019304                iso_kprintf
                0x00000000c0019320                iso_kprintfd
 .text          0x00000000c001933c      0x714 fs/iso9660/vfslink.32
                0x00000000c001933c                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019342                ISO9660::getName()
                0x00000000c0019348                ISO9660::closeDir(void*)
                0x00000000c0019352                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019358                ISO9660::unlink(char const*)
                0x00000000c001935e                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019364                ISO9660::rename(char const*, char const*)
                0x00000000c001936a                ISO9660::mkdir(char const*)
                0x00000000c0019370                ISO9660::~ISO9660()
                0x00000000c0019370                ISO9660::~ISO9660()
                0x00000000c0019394                ISO9660::~ISO9660()
                0x00000000c00193bc                ISO9660::exists(char const*)
                0x00000000c00193d0                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00194b6                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c00194fe                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019540                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001957e                ISO9660::stat(void*, unsigned long long*)
                0x00000000c00195d0                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019712                ISO9660::close(void*)
                0x00000000c0019742                ISO9660::openDir(char const*, void**)
                0x00000000c001981c                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019937                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c00199b6                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019a28                ISO9660::ISO9660()
                0x00000000c0019a28                ISO9660::ISO9660()
 .text          0x00000000c0019a50      0x26c hal/sound/sndcard.32
                0x00000000c0019a50                SoundCard::beginPlayback()
                0x00000000c0019a5e                SoundCard::stopPlayback()
                0x00000000c0019a6c                SoundCard::SoundCard(char const*)
                0x00000000c0019a6c                SoundCard::SoundCard(char const*)
                0x00000000c0019b0a                SoundCard::~SoundCard()
                0x00000000c0019b0a                SoundCard::~SoundCard()
                0x00000000c0019b2e                SoundCard::~SoundCard()
                0x00000000c0019b58                SoundCard::configureRates(int, int, int)
                0x00000000c0019b88                SoundCard::getSamples16(int, short*)
                0x00000000c0019be4                SoundCard::getSamples32(int, int*)
                0x00000000c0019c6a                SoundCard::addChannel(SoundPort*)
                0x00000000c0019ca8                SoundCard::removeChannel(int)
 .text          0x00000000c0019cbc      0x393 hal/sound/sndport.32
                0x00000000c0019cbc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019cbc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019d48                SoundPort::~SoundPort()
                0x00000000c0019d48                SoundPort::~SoundPort()
                0x00000000c0019d7c                SoundPort::unpause()
                0x00000000c0019d88                SoundPort::pause()
                0x00000000c0019d94                SoundPort::getBufferUsed()
                0x00000000c0019d9c                SoundPort::getBufferSize()
                0x00000000c0019da4                SoundPort::buffer16(short*, int)
                0x00000000c0019e30                SoundPort::buffer32(int*, int)
                0x00000000c0019ebc                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019f8c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001a04f        0x0 hw/bus/isa.32
 *fill*         0x00000000c001a04f        0x1 
 .text          0x00000000c001a050      0xbc5 hw/bus/pci.32
                0x00000000c001a050                PCI::open(int, int, void*)
                0x00000000c001a06e                PCI::close(int, int, void*)
                0x00000000c001a072                PCI::PCI()
                0x00000000c001a072                PCI::PCI()
                0x00000000c001a10a                PCI::readBAR8(unsigned int, int)
                0x00000000c001a126                PCI::readBAR16(unsigned int, int)
                0x00000000c001a144                PCI::readBAR32(unsigned int, int)
                0x00000000c001a160                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001a180                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001a1a2                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001a1c2                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a238                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a2e2                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a306                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a32e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a378                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a3a0                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a3c4                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a3e8                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a410                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a474                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001a55a                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a824                PCI::checkBus(unsigned char)
                0x00000000c001a848                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a9ce                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001ab4a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001abbc                PCI::detect()
 *fill*         0x00000000c001ac15        0x1 
 .text          0x00000000c001ac16      0xb96 hw/diskctrl/ide.32
                0x00000000c001ac16                IDE::close(int, int, void*)
                0x00000000c001ac1a                IDE::IDE()
                0x00000000c001ac1a                IDE::IDE()
                0x00000000c001ac4e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ac60                selectDrive(unsigned char, unsigned char)
                0x00000000c001ac62                IDE::getBase(unsigned char)
                0x00000000c001ac74                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ad34                IDE::read(unsigned char, unsigned char)
                0x00000000c001ade8                IDE::waitInterrupt(unsigned char)
                0x00000000c001ae4a                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ae66                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ae82                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001aecc                IDE::open(int, int, void*)
                0x00000000c001b306                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b3d6                IDE::detect()
                0x00000000c001b69e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b758                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b7ac      0x32c hw/diskctrl/satabus.32
                0x00000000c001b7ac                SATABus::close(int, int, void*)
                0x00000000c001b7b0                SATABus::detect()
                0x00000000c001b7b2                SATABus::SATABus()
                0x00000000c001b7b2                SATABus::SATABus()
                0x00000000c001b838                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b86a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b8b2                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b8d2                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b8fc                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001ba0e                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001bab8                SATABus::open(int, int, void*)
 .text          0x00000000c001bad8      0x96d hw/diskphys/ata.32
                0x00000000c001bad8                ATA::close(int, int, void*)
                0x00000000c001bafc                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001bafe                ATA::ATA()
                0x00000000c001bafe                ATA::ATA()
                0x00000000c001bb2c                ATA::flush(bool)
                0x00000000c001bb7a                ATA::readyForCommand()
                0x00000000c001bbc6                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001bf8a                ATA::detectCHS()
                0x00000000c001bfb4                ATA::open(int, int, void*)
                0x00000000c001c080                combineCharAndColour(char, unsigned char)
                0x00000000c001c091                combineColours(unsigned char, unsigned char)
                0x00000000c001c09e                ATA::read(unsigned long long, int, void*)
                0x00000000c001c274                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001c445        0x1 
 .text          0x00000000c001c446      0x612 hw/diskphys/atapi.32
                0x00000000c001c446                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c44c                ATAPI::close(int, int, void*)
                0x00000000c001c470                ATAPI::ATAPI()
                0x00000000c001c470                ATAPI::ATAPI()
                0x00000000c001c49e                ATAPI::readyForCommand()
                0x00000000c001c4f0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c7b0                ATAPI::diskRemoved()
                0x00000000c001c7ea                ATAPI::eject()
                0x00000000c001c832                ATAPI::diskInserted()
                0x00000000c001c83e                ATAPI::detectMedia()
                0x00000000c001c8fe                ATAPI::open(int, int, void*)
                0x00000000c001c9de                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ca58      0x7ff hw/diskphys/sata.32
                0x00000000c001ca58                SATA::close(int, int, void*)
                0x00000000c001ca7c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ca7e                SATA::open(int, int, void*)
                0x00000000c001cb28                SATA::SATA()
                0x00000000c001cb28                SATA::SATA()
                0x00000000c001cb56                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cda8                SATA::read(unsigned long long, int, void*)
                0x00000000c001cff8                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d257        0x1 
 .text          0x00000000c001d258      0x5d8 hw/diskphys/satapi.32
                0x00000000c001d258                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001d25e                SATAPI::close(int, int, void*)
                0x00000000c001d282                SATAPI::SATAPI()
                0x00000000c001d282                SATAPI::SATAPI()
                0x00000000c001d2b0                SATAPI::diskRemoved()
                0x00000000c001d2b2                SATAPI::diskInserted()
                0x00000000c001d2ce                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001d5b4                SATAPI::eject()
                0x00000000c001d5f0                SATAPI::detectMedia()
                0x00000000c001d646                SATAPI::open(int, int, void*)
                0x00000000c001d746                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d830      0x45b hw/intctrl/apic.32
                0x00000000c001d830                IOAPIC::close(int, int, void*)
                0x00000000c001d836                apicGetBase()
                0x00000000c001d87c                IOAPIC::IOAPIC()
                0x00000000c001d87c                IOAPIC::IOAPIC()
                0x00000000c001d8a4                apicOpen()
                0x00000000c001da20                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001da52                IOAPIC::read(int)
                0x00000000c001da7a                IOAPIC::open(int, int, void*)
                0x00000000c001db60                IOAPIC::write(int, int)
                0x00000000c001db8c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001dc8b        0x1 
 .text          0x00000000c001dc8c       0xf0 hw/timer/apictimer.32
                0x00000000c001dc8c                APICTimer::close(int, int, void*)
                0x00000000c001dc94                apicTimerHandler(regs*, void*)
                0x00000000c001dcbc                APICTimer::open(int, int, void*)
                0x00000000c001dd2c                APICTimer::write(int)
                0x00000000c001dd54                APICTimer::APICTimer()
                0x00000000c001dd54                APICTimer::APICTimer()
 .text          0x00000000c001dd7c      0x1ad hw/timer/pit.32
                0x00000000c001dd7c                PIT::write(int)
                0x00000000c001de00                pitHandler(regs*, void*)
                0x00000000c001de28                PIT::open(int, int, void*)
                0x00000000c001de78                PIT::close(int, int, void*)
                0x00000000c001dea8                PIT::PIT()
                0x00000000c001dea8                PIT::PIT()
 *fill*         0x00000000c001df29        0x7 
 .text          0x00000000c001df30       0x83 arch/i386/avx.32
                0x00000000c001df30                avxDetect
                0x00000000c001df5a                avxSave
                0x00000000c001df6b                avxLoad
                0x00000000c001df7c                avxInit
                0x00000000c001df9e                avxClose
                0x00000000c001df9f                wouldSheSayYes
 *fill*         0x00000000c001dfb3        0xd 
 .text          0x00000000c001dfc0      0x2ec arch/i386/interrupt.32
                0x00000000c001dfc0                isr0
                0x00000000c001dfd0                isr1
                0x00000000c001dfda                isr2
                0x00000000c001dfe4                isr3
                0x00000000c001dfee                isr4
                0x00000000c001dff8                isr5
                0x00000000c001e002                isr6
                0x00000000c001e00c                isr7
                0x00000000c001e016                isr8
                0x00000000c001e01e                isr9
                0x00000000c001e028                isr10
                0x00000000c001e030                isr11
                0x00000000c001e038                isr12
                0x00000000c001e040                isr13
                0x00000000c001e05a                isr14
                0x00000000c001e062                isr15
                0x00000000c001e06c                isr16
                0x00000000c001e076                isr17
                0x00000000c001e080                isr18
                0x00000000c001e08a                irq3
                0x00000000c001e094                irq4
                0x00000000c001e09e                irq5
                0x00000000c001e0a8                irq6
                0x00000000c001e0b2                irq7
                0x00000000c001e0bc                irq8
                0x00000000c001e0c6                irq9
                0x00000000c001e0d0                irq10
                0x00000000c001e0da                irq11
                0x00000000c001e0e4                irq12
                0x00000000c001e0ee                irq13
                0x00000000c001e0f8                irq14
                0x00000000c001e102                irq15
                0x00000000c001e10c                irq1
                0x00000000c001e113                irq2
                0x00000000c001e11a                isr96
                0x00000000c001e121                irq0
                0x00000000c001e126                int_common_stub
                0x00000000c001e158                syscall_common_stub
                0x00000000c001e25c                irq16
                0x00000000c001e266                irq17
                0x00000000c001e270                irq18
                0x00000000c001e27a                irq19
                0x00000000c001e284                irq20
                0x00000000c001e28e                irq21
                0x00000000c001e298                irq22
                0x00000000c001e2a2                irq23
 *fill*         0x00000000c001e2ac        0x4 
 .text          0x00000000c001e2b0       0x10 arch/i386/rdrand.32
                0x00000000c001e2b0                i386GetRDRAND
 .text          0x00000000c001e2c0       0x39 arch/i386/sse.32
                0x00000000c001e2c0                absolutelyNoChanceInHell
                0x00000000c001e2c0                sseDetect
                0x00000000c001e2d8                sseSave
                0x00000000c001e2e0                sseLoad
                0x00000000c001e2e8                sseInit
                0x00000000c001e2f8                sseClose
 *fill*         0x00000000c001e2f9        0x7 
 .text          0x00000000c001e300       0x49 arch/i386/x87.32
                0x00000000c001e306                x87Detect
                0x00000000c001e321                x87Save
                0x00000000c001e328                x87Load
                0x00000000c001e32f                x87Init
                0x00000000c001e348                x87Close
 *fill*         0x00000000c001e349        0x3 
 .text          0x00000000c001e34c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e371        0x0 crtn.32
 *fill*         0x00000000c001e371        0x3 
 .text          0x00000000c001e374      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e374                __divdi3
 *fill*         0x00000000c001e4bf        0x1 
 .text          0x00000000c001e4c0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e4c0                __moddi3
 *fill*         0x00000000c001e63e        0x2 
 .text          0x00000000c001e640       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001e640                __udivdi3
 *fill*         0x00000000c001e73f        0x1 
 .text          0x00000000c001e740      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001e740                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e860        0x0
 .iplt          0x00000000c001e860        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e85a        0xf
 .init          0x00000000c001e85a        0x3 crti.32
                0x00000000c001e85a                _init
 .init          0x00000000c001e85d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e862        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e867        0x2 crtn.32

.fini           0x00000000c001e869        0xa
 .fini          0x00000000c001e869        0x3 crti.32
                0x00000000c001e869                _fini
 .fini          0x00000000c001e86c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e871        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e874       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e874       0x23 core/computer.32
                0x00000000c001e874                Computer::~Computer()
                0x00000000c001e874                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e898       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e898       0x2a core/computer.32
                0x00000000c001e898                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e8c2       0x21
 .text._Z10idleCommonv
                0x00000000c001e8c2       0x21 core/idle.32
                0x00000000c001e8c2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e8e4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e8e4        0x2 core/unixfile.32
                0x00000000c001e8e4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e8e4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e8e6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e8e6       0x42 core/unixfile.32
                0x00000000c001e8e6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e8e6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e928       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e928       0xd3 core/unixfile.32
                0x00000000c001e928                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e9fc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e9fc        0x7 core/unixfile.32
                0x00000000c001e9fc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ea04       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ea04       0xa1 core/unixfile.32
                0x00000000c001ea04                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001eaa6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001eaa6        0x8 core/unixfile.32
                0x00000000c001eaa6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001eaae       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001eaae       0x1a hal/device.32
                0x00000000c001eaae                DriverlessDevice::~DriverlessDevice()
                0x00000000c001eaae                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eac8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eac8       0x2a hal/device.32
                0x00000000c001eac8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eaf2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eaf2       0xdc hal/device.32
                0x00000000c001eaf2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ebce       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ebce       0x42 hal/device.32
                0x00000000c001ebce                LinkedList<Device>::LinkedList()
                0x00000000c001ebce                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ec10       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ec10       0x1c hal/timer.32
                0x00000000c001ec10                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec2c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec2c        0x7 hal/timer.32
                0x00000000c001ec2c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ec34       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ec34       0xbc hal/timer.32
                0x00000000c001ec34                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ecf0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ecf0       0xda hal/timer.32
                0x00000000c001ecf0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001edcc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001edcc       0x23 hw/acpi.32
                0x00000000c001edcc                ACPI::~ACPI()
                0x00000000c001edcc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001edf0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001edf0       0x2a hw/acpi.32
                0x00000000c001edf0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ee1c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ee1c        0x2 hw/acpi.32
                0x00000000c001ee1c                LinkedList<Device>::~LinkedList()
                0x00000000c001ee1c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ee20       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ee20       0x1c hw/acpi.32
                0x00000000c001ee20                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ee3c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ee3c        0x7 hw/acpi.32
                0x00000000c001ee3c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ee44       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ee44       0xb8 hw/acpi.32
                0x00000000c001ee44                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001eefc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001eefc       0x23 hw/cpu.32
                0x00000000c001eefc                CPU::~CPU()
                0x00000000c001eefc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ef20       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ef20       0x2a hw/cpu.32
                0x00000000c001ef20                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ef4c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ef4c        0x8 sys/kill.32
                0x00000000c001ef4c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ef54        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ef54        0x2 thr/prcssthr.32
                0x00000000c001ef54                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ef54                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ef58       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ef58       0x49 thr/prcssthr.32
                0x00000000c001ef58                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ef58                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001efa4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001efa4       0x42 thr/prcssthr.32
                0x00000000c001efa4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001efa4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001efe6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001efe6       0x23 hw/bus/pci.32
                0x00000000c001efe6                PCI::~PCI()
                0x00000000c001efe6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001f00a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001f00a       0x2a hw/bus/pci.32
                0x00000000c001f00a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f034       0x23
 .text._ZN3IDED2Ev
                0x00000000c001f034       0x23 hw/diskctrl/ide.32
                0x00000000c001f034                IDE::~IDE()
                0x00000000c001f034                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f058       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f058       0x2a hw/diskctrl/ide.32
                0x00000000c001f058                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001f082       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001f082       0x23 hw/diskctrl/satabus.32
                0x00000000c001f082                SATABus::~SATABus()
                0x00000000c001f082                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001f0a6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001f0a6       0x2a hw/diskctrl/satabus.32
                0x00000000c001f0a6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001f0d0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f0d0       0x23 hw/diskphys/ata.32
                0x00000000c001f0d0                ATA::~ATA()
                0x00000000c001f0d0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f0f4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f0f4       0x2a hw/diskphys/ata.32
                0x00000000c001f0f4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f11e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f11e       0x23 hw/diskphys/atapi.32
                0x00000000c001f11e                ATAPI::~ATAPI()
                0x00000000c001f11e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f142       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f142       0x2a hw/diskphys/atapi.32
                0x00000000c001f142                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001f16c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001f16c       0x23 hw/diskphys/sata.32
                0x00000000c001f16c                SATA::~SATA()
                0x00000000c001f16c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001f190       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001f190       0x2a hw/diskphys/sata.32
                0x00000000c001f190                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001f1ba       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001f1ba       0x23 hw/diskphys/satapi.32
                0x00000000c001f1ba                SATAPI::~SATAPI()
                0x00000000c001f1ba                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001f1de       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001f1de       0x2a hw/diskphys/satapi.32
                0x00000000c001f1de                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001f208       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f208       0x23 hw/intctrl/apic.32
                0x00000000c001f208                IOAPIC::~IOAPIC()
                0x00000000c001f208                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f22c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f22c       0x2a hw/intctrl/apic.32
                0x00000000c001f22c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f258       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f258       0x23 hw/timer/apictimer.32
                0x00000000c001f258                APICTimer::~APICTimer()
                0x00000000c001f258                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f27c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f27c       0x2a hw/timer/apictimer.32
                0x00000000c001f27c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f2a8       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f2a8       0x23 hw/timer/pit.32
                0x00000000c001f2a8                PIT::~PIT()
                0x00000000c001f2a8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f2cc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f2cc       0x2a hw/timer/pit.32
                0x00000000c001f2cc                PIT::~PIT()

.rodata         0x00000000c001f2f6     0x2c2e
                0x00000000c001f2f6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f2f6        0x2 
 .ctors         0x00000000c001f2f8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f2fc        0x4 core/unixfile.32
 .ctors         0x00000000c001f300        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f304        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f308                end_ctors = .
                0x00000000c001f308                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f308        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f30c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f30c                __DTOR_END__
                0x00000000c001f310                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f310       0x10 
 .rodata        0x00000000c001f320      0x101 acpica/utclib.32
                0x00000000c001f320                AcpiGbl_Ctypes
 *fill*         0x00000000c001f421        0x3 
 .rodata        0x00000000c001f424       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f43c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f486       0x1a 
 .rodata        0x00000000c001f4a0       0xed fs/fat/ff.32
 *fill*         0x00000000c001f58d       0x13 
 .rodata        0x00000000c001f5a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f9a0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001fa0f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001fb24       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001fb8c       0x2c core/computer.32
                0x00000000c001fb8c                vtable for Computer
 .rodata.str1.4
                0x00000000c001fbb8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001fbe8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001fbf4       0x17 core/main.32
 *fill*         0x00000000c001fc0b        0x1 
 .rodata.str1.4
                0x00000000c001fc0c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fcb1       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fd09       0x39 core/pipe.32
 *fill*         0x00000000c001fd42        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001fd44       0x1c core/pipe.32
                0x00000000c001fd44                vtable for Pipe
 .rodata.str1.1
                0x00000000c001fd60       0x2b core/terminal.32
 *fill*         0x00000000c001fd8b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001fd8c       0x1c core/terminal.32
                0x00000000c001fd8c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001fda8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001fdca       0x15 core/unixfile.32
 *fill*         0x00000000c001fddf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001fde0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001fe2b        0x8 core/unixfile.32
 *fill*         0x00000000c001fe33        0x1 
 .rodata.str1.4
                0x00000000c001fe34       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001fe54       0x1c core/unixfile.32
                0x00000000c001fe54                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001fe70       0x1c core/unixfile.32
                0x00000000c001fe70                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001fe8c      0x198 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020024      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002014a       0x33 coreobjs/c++.32
 *fill*         0x00000000c002017d        0x3 
 .rodata        0x00000000c0020180      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00202d0       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c00202d0       0x68 fs/vfs.32
                0x00000000c00202d0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020338       0x1c fs/vfs.32
                0x00000000c0020338                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020354       0x1c fs/vfs.32
                0x00000000c0020354                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0020370       0x2c hal/bus.32
                0x00000000c0020370                vtable for Bus
 .rodata.str1.1
                0x00000000c002039c       0x1e hal/clock.32
 *fill*         0x00000000c00203ba        0x2 
 .rodata._ZTV5Clock
                0x00000000c00203bc       0x3c hal/clock.32
                0x00000000c00203bc                vtable for Clock
 *fill*         0x00000000c00203f8        0x8 
 .rodata        0x00000000c0020400       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020430       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020488       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020488       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0020488       0x2c hal/device.32
                0x00000000c0020488                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00204b4       0x2c hal/device.32
                0x00000000c00204b4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00204e0       0x2c hal/diskctrl.32
                0x00000000c00204e0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002050c       0x38 hal/diskphys.32
                0x00000000c002050c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020544       0x3e hal/intctrl.32
 *fill*         0x00000000c0020582        0x2 
 .rodata.str1.4
                0x00000000c0020584       0x5d hal/intctrl.32
 .rodata        0x00000000c00205e1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0020634       0x34 hal/keybrd.32
                0x00000000c0020634                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020668       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00206ac       0x2c hal/logidisk.32
                0x00000000c00206ac                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00206d8       0x2c hal/mouse.32
                0x00000000c00206d8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0020704       0x34 hal/nic.32
                0x00000000c0020704                vtable for NIC
 .rodata.str1.1
                0x00000000c0020738        0xb hal/partition.32
 *fill*         0x00000000c0020743        0x1 
 .rodata._ZTV6Serial
                0x00000000c0020744       0x44 hal/serial.32
                0x00000000c0020744                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020788       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020788        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020788       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020788       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0020788       0x30 hal/timer.32
                0x00000000c0020788                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00207b8       0x10 hal/vcache.32
                0x00000000c00207b8                vtable for VCache
 .rodata.str1.1
                0x00000000c00207c8       0x93 hal/video.32
 *fill*         0x00000000c002085b        0x1 
 .rodata._ZTV5Video
                0x00000000c002085c       0x4c hal/video.32
                0x00000000c002085c                vtable for Video
 .rodata.str1.4
                0x00000000c00208a8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0020943      0x174 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0020ab7       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0020ab7        0x8 hw/acpi.32
 *fill*         0x00000000c0020ab7        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020ab8       0x2c hw/acpi.32
                0x00000000c0020ab8                vtable for ACPI
 .rodata.str1.1
                0x00000000c0020ae4      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020c51        0x3 
 .rodata._ZTV3CPU
                0x00000000c0020c54       0x2c hw/cpu.32
                0x00000000c0020c54                vtable for CPU
 .rodata.str1.1
                0x00000000c0020c80       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0020cbc       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020d4d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0020e16       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020e5e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0020e89       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020eff       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020f44        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0020f4e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0020f6f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0021005       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0021059       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0021085      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0021251       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00212a8      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00213b8       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00213b8       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00213b8       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00213b8        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00213b8       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0021458       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021488      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c0021618       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002168b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c00216a0       0x3c arch/i386/rtc.32
                0x00000000c00216a0                vtable for RTC
 .rodata.str1.1
                0x00000000c00216dc       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c002171d        0x3 
 .rodata._ZTV3FAT
                0x00000000c0021720       0x68 fs/fat/vfslink.32
                0x00000000c0021720                vtable for FAT
 .rodata.str1.1
                0x00000000c0021788       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0021788      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00218c0       0x68 fs/iso9660/vfslink.32
                0x00000000c00218c0                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0021928       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c002196c       0x34 hal/sound/sndcard.32
                0x00000000c002196c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00219a0       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00219df       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0021a17       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0021ab8       0x2c hw/bus/pci.32
                0x00000000c0021ab8                vtable for PCI
 .rodata.str1.1
                0x00000000c0021ae4       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0021b6b        0x1 
 .rodata._ZTV3IDE
                0x00000000c0021b6c       0x2c hw/diskctrl/ide.32
                0x00000000c0021b6c                vtable for IDE
 .rodata.str1.4
                0x00000000c0021b98       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0021bbc       0x2c hw/diskctrl/satabus.32
                0x00000000c0021bbc                vtable for SATABus
 .rodata.str1.1
                0x00000000c0021be8       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0021bfa        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021bfc       0x38 hw/diskphys/ata.32
                0x00000000c0021bfc                vtable for ATA
 .rodata.str1.1
                0x00000000c0021c34        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0021c41        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0021c44       0x38 hw/diskphys/atapi.32
                0x00000000c0021c44                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021c7c       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0021cf8       0x38 hw/diskphys/sata.32
                0x00000000c0021cf8                vtable for SATA
 .rodata.str1.1
                0x00000000c0021d30       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0021e1a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0021e1c       0x38 hw/diskphys/satapi.32
                0x00000000c0021e1c                vtable for SATAPI
 .rodata        0x00000000c0021e54        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0021e5c       0x2c hw/intctrl/apic.32
                0x00000000c0021e5c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0021e88       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0021ea3        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021ea4       0x30 hw/timer/apictimer.32
                0x00000000c0021ea4                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021ed4       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021ef1        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021ef4       0x30 hw/timer/pit.32
                0x00000000c0021ef4                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021f24      0x4e1
 *(.data)
 .data          0x00000000c0021f24        0x0 crti.32
 .data          0x00000000c0021f24        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021f24                __dso_handle
 .data          0x00000000c0021f28        0x0 acpica/utclib.32
 .data          0x00000000c0021f28        0x0 core/malloc.32
 .data          0x00000000c0021f28        0x0 libk/ctype.32
 .data          0x00000000c0021f28        0x0 libk/string.32
 .data          0x00000000c0021f28        0x0 fs/fat/diskio.32
 .data          0x00000000c0021f28        0x0 fs/fat/ff.32
 .data          0x00000000c0021f28        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0021f28        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0021f28        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0021f28        0x0 core/computer.32
 .data          0x00000000c0021f28        0x0 core/gdt.32
 .data          0x00000000c0021f28        0x0 core/idle.32
 .data          0x00000000c0021f28        0x0 core/idt.32
 .data          0x00000000c0021f28        0x4 core/kheap.32
 .data          0x00000000c0021f2c        0x0 core/main.32
 .data          0x00000000c0021f2c        0x4 core/physmgr.32
                0x00000000c0021f2c                Phys::bitmap
 .data          0x00000000c0021f30        0x0 core/pipe.32
 *fill*         0x00000000c0021f30       0x10 
 .data          0x00000000c0021f40       0x60 core/terminal.32
                0x00000000c0021f40                VgaText::hiddenOut
                0x00000000c0021f60                ansiToVGAMappings
 .data          0x00000000c0021fa0        0x0 core/tss.32
 .data          0x00000000c0021fa0        0x4 core/unixfile.32
                0x00000000c0021fa0                UnixFile::nextFd
 .data          0x00000000c0021fa4       0x15 core/virtmgr.32
                0x00000000c0021fa4                Virt::pageAllocPtr
                0x00000000c0021fa8                Virt::bitmap
                0x00000000c0021fac                Virt::swapfileSectorsPerPage
                0x00000000c0021fb0                Virt::swapfileLength
                0x00000000c0021fb4                Virt::swapfileSector
                0x00000000c0021fb8                Virt::swapfileDrive
 *fill*         0x00000000c0021fb9        0x3 
 .data          0x00000000c0021fbc        0x4 coreobjs/c++.32
                0x00000000c0021fbc                __stack_chk_guard
 .data          0x00000000c0021fc0        0x0 dbg/kconsole.32
 .data          0x00000000c0021fc0        0x0 fs/vfs.32
 .data          0x00000000c0021fc0        0x0 hal/bus.32
 .data          0x00000000c0021fc0        0x0 hal/buzzer.32
 .data          0x00000000c0021fc0        0x0 hal/clock.32
 .data          0x00000000c0021fc0        0x0 hal/device.32
 .data          0x00000000c0021fc0        0x0 hal/diskctrl.32
 .data          0x00000000c0021fc0        0x0 hal/diskphys.32
 .data          0x00000000c0021fc0        0x0 hal/fpu.32
 .data          0x00000000c0021fc0        0x0 hal/intctrl.32
 .data          0x00000000c0021fc0        0x0 hal/keybrd.32
 .data          0x00000000c0021fc0        0x0 hal/logidisk.32
 .data          0x00000000c0021fc0        0x0 hal/mouse.32
 .data          0x00000000c0021fc0        0x0 hal/nic.32
 .data          0x00000000c0021fc0        0x0 hal/partition.32
 .data          0x00000000c0021fc0        0x0 hal/serial.32
 .data          0x00000000c0021fc0        0x0 hal/timer.32
 .data          0x00000000c0021fc0        0x0 hal/vcache.32
 .data          0x00000000c0021fc0        0x0 hal/video.32
 .data          0x00000000c0021fc0       0x10 hw/acpi.32
                0x00000000c0021fc0                legacyIRQRemaps
 .data          0x00000000c0021fd0        0x4 hw/cpu.32
                0x00000000c0021fd0                lastCode
 *fill*         0x00000000c0021fd4        0xc 
 .data          0x00000000c0021fe0      0x142 krnl/bootmsg.32
                0x00000000c0021fe0                KiSplashScreen
 *fill*         0x00000000c0022122       0x1e 
 .data          0x00000000c0022140       0x4d krnl/env.32
                0x00000000c0022140                defaultSysEnv
 .data          0x00000000c002218d        0x0 krnl/inlines.32
 .data          0x00000000c002218d        0x0 krnl/panic.32
 .data          0x00000000c002218d        0x0 krnl/powctrl.32
 .data          0x00000000c002218d        0x0 krnl/random.32
 .data          0x00000000c002218d        0x0 krnl/resolve.32
 *fill*         0x00000000c002218d       0x13 
 .data          0x00000000c00221a0       0x4c krnl/signal.32
                0x00000000c00221a0                KiDefaultSignalHandlers
 *fill*         0x00000000c00221ec       0x14 
 .data          0x00000000c0022200       0xf0 krnl/syscalls.32
                0x00000000c0022200                systemCallHandlers
 .data          0x00000000c00222f0        0x0 net/ethernet.32
 *fill*         0x00000000c00222f0       0x10 
 .data          0x00000000c0022300      0x100 reg/cm.32
                0x00000000c0022300                CmComponents
 .data          0x00000000c0022400        0x0 reg/registry.32
 .data          0x00000000c0022400        0x0 sys/eject.32
 .data          0x00000000c0022400        0x0 sys/exit.32
 .data          0x00000000c0022400        0x0 sys/getcwd.32
 .data          0x00000000c0022400        0x0 sys/getpid.32
 .data          0x00000000c0022400        0x0 sys/getramdata.32
 .data          0x00000000c0022400        0x0 sys/getvgaptr.32
 .data          0x00000000c0022400        0x0 sys/kill.32
 .data          0x00000000c0022400        0x0 sys/loaddll.32
 .data          0x00000000c0022400        0x0 sys/read.32
 .data          0x00000000c0022400        0x0 sys/registersignal.32
 .data          0x00000000c0022400        0x0 sys/registry.32
 .data          0x00000000c0022400        0x0 sys/sbrk.32
 .data          0x00000000c0022400        0x0 sys/setcwd.32
 .data          0x00000000c0022400        0x0 sys/settime.32
 .data          0x00000000c0022400        0x0 sys/timezone.32
 .data          0x00000000c0022400        0x0 sys/write.32
 .data          0x00000000c0022400        0x0 sys/wsbe.32
 .data          0x00000000c0022400        0x0 sys/yield.32
 .data          0x00000000c0022400        0x0 thr/elf.32
 .data          0x00000000c0022400        0x4 thr/prcssthr.32
                0x00000000c0022400                Thr::nextPID
 .data          0x00000000c0022404        0x0 vm86/vm8086.32
 .data          0x00000000c0022404        0x0 arch/i386/hal.32
 .data          0x00000000c0022404        0x0 arch/i386/pic.32
 .data          0x00000000c0022404        0x0 arch/i386/rtc.32
 .data          0x00000000c0022404        0x0 arch/i386/vga.32
 .data          0x00000000c0022404        0x0 fs/fat/vfslink.32
 .data          0x00000000c0022404        0x0 fs/iso9660/helper.32
 .data          0x00000000c0022404        0x1 fs/iso9660/vfslink.32
                0x00000000c0022404                recentDriveletter
 .data          0x00000000c0022405        0x0 hal/sound/sndcard.32
 .data          0x00000000c0022405        0x0 hal/sound/sndport.32
 .data          0x00000000c0022405        0x0 hw/bus/isa.32
 .data          0x00000000c0022405        0x0 hw/bus/pci.32
 .data          0x00000000c0022405        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0022405        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0022405        0x0 hw/diskphys/ata.32
 .data          0x00000000c0022405        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0022405        0x0 hw/diskphys/sata.32
 .data          0x00000000c0022405        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0022405        0x0 hw/intctrl/apic.32
 .data          0x00000000c0022405        0x0 hw/timer/apictimer.32
 .data          0x00000000c0022405        0x0 hw/timer/pit.32
 .data          0x00000000c0022405        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0022405        0x0 crtn.32
 .data          0x00000000c0022405        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0022405        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0022405        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0022405        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0022408        0x0
 .got           0x00000000c0022408        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0022408        0x0
 .got.plt       0x00000000c0022408        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0022408        0x0
 .igot.plt      0x00000000c0022408        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0022408        0x0
 .tm_clone_table
                0x00000000c0022408        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0022408        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0022405      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0022405        0x3 
 .eh_frame      0x00000000c0022408        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0022408        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0022408       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022460       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00224a0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002250c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0023000       0x7d
 *(userkernel)
 userkernel     0x00000000c0023000       0x52 krnl/signal.32
                0x00000000c0023000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002302c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0023052       0x2b krnl/syscalls.32
                0x00000000c0023052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0024000        0x1
 *(align_previous)
 align_previous
                0x00000000c0024000        0x1 krnl/signal.32
                0x00000000c0024000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0024004        0x0
 .rel.got       0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0024001     0x4ba7
                0x00000000c0024001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0024001       0x1f 
 COMMON         0x00000000c0024020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0024020                dcache
                0x00000000c0024060                cdDriveLetter
                0x00000000c0024080                icache
 *(.bss)
 .bss           0x00000000c00240c0        0x0 crti.32
 .bss           0x00000000c00240c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00240e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00240e4       0x1c 
 .bss           0x00000000c0024100      0x378 core/malloc.32
 .bss           0x00000000c0024478        0x0 libk/ctype.32
 .bss           0x00000000c0024478        0x0 libk/string.32
 .bss           0x00000000c0024478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024478        0x8 
 .bss           0x00000000c0024480       0x88 fs/fat/ff.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0024508       0x18 
 .bss           0x00000000c0024520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0024eb8        0x6 core/computer.32
                0x00000000c0024eb8                Krnl::computer
                0x00000000c0024ebc                KeIsPreemptionOn
                0x00000000c0024ebd                KeIsSchedulingOn
 *fill*         0x00000000c0024ebe        0x2 
 .bss           0x00000000c0024ec0        0x6 core/gdt.32
                0x00000000c0024ec0                gdtDescr
 .bss           0x00000000c0024ec6        0x0 core/idle.32
 *fill*         0x00000000c0024ec6        0x2 
 .bss           0x00000000c0024ec8        0x6 core/idt.32
                0x00000000c0024ec8                idtDescr
 .bss           0x00000000c0024ece        0x0 core/kheap.32
 *fill*         0x00000000c0024ece        0x2 
 .bss           0x00000000c0024ed0        0x4 core/main.32
                0x00000000c0024ed0                sysBootSettings
 .bss           0x00000000c0024ed4       0x29 core/physmgr.32
                0x00000000c0024ed4                Phys::forbidEvictions
                0x00000000c0024ed8                Phys::currentPagePointer
                0x00000000c0024edc                Phys::highestMem
                0x00000000c0024ee0                Phys::oldPercent
                0x00000000c0024ee4                Phys::usedPages
                0x00000000c0024ee8                Phys::usablePages
                0x00000000c0024eec                Phys::dmaUsage
 .bss           0x00000000c0024efd        0x0 core/pipe.32
 *fill*         0x00000000c0024efd        0x3 
 .bss           0x00000000c0024f00        0x9 core/terminal.32
                0x00000000c0024f00                terminalCycle
                0x00000000c0024f04                activeTerminal
                0x00000000c0024f08                VgaText::graphicMode
 *fill*         0x00000000c0024f09        0x1 
 .bss           0x00000000c0024f0a        0x2 core/tss.32
                0x00000000c0024f0a                doubleFaultSelector
 *fill*         0x00000000c0024f0c       0x14 
 .bss           0x00000000c0024f20       0x84 core/unixfile.32
                0x00000000c0024f20                sfileLpt
                0x00000000c0024f60                sfileCom
                0x00000000c0024f84                sfileNul
                0x00000000c0024f88                sfilePnt
                0x00000000c0024f8c                sfileAux
                0x00000000c0024f90                sfileCon
                0x00000000c0024f94                initialFilesAdded
                0x00000000c0024f98                unixFileLinkedList
 .bss           0x00000000c0024fa4       0x10 core/virtmgr.32
                0x00000000c0024fa4                twswaps
                0x00000000c0024fa8                swapBalance
                0x00000000c0024fac                Virt::swapfileBitmap
                0x00000000c0024fb0                firstVAS
 .bss           0x00000000c0024fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0024fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0024fb4        0x4 fs/vfs.32
                0x00000000c0024fb4                installedFilesystems
 .bss           0x00000000c0024fb8        0x0 hal/bus.32
 .bss           0x00000000c0024fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0024fb8        0x8 hal/clock.32
                0x00000000c0024fb8                User::dstOn
                0x00000000c0024fb9                User::timezoneHalfHourOffset
                0x00000000c0024fbc                User::timezoneHourOffset
 .bss           0x00000000c0024fc0        0x0 hal/device.32
 .bss           0x00000000c0024fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0024fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0024fc0        0x0 hal/fpu.32
 .bss           0x00000000c0024fc0     0x2000 hal/intctrl.32
                0x00000000c0024fc0                INT_contexts
                0x00000000c0025fc0                INT_handlers
 .bss           0x00000000c0026fc0      0x429 hal/keybrd.32
                0x00000000c0026fc0                keyboardWaitingTaskList
                0x00000000c0026fc4                keyboardSetupYet
                0x00000000c0026fc8                guiKeyboardHandler
                0x00000000c0026fe0                keystates
 *fill*         0x00000000c00273e9       0x17 
 .bss           0x00000000c0027400       0x88 hal/logidisk.32
                0x00000000c0027400                diskAssignments
                0x00000000c0027420                disks
 .bss           0x00000000c0027488        0x4 hal/mouse.32
                0x00000000c0027488                guiMouseHandler
 .bss           0x00000000c002748c        0x0 hal/nic.32
 .bss           0x00000000c002748c        0x0 hal/partition.32
 .bss           0x00000000c002748c        0x0 hal/serial.32
 .bss           0x00000000c002748c        0x4 hal/timer.32
                0x00000000c002748c                milliTenthsSinceBoot
 .bss           0x00000000c0027490        0x0 hal/vcache.32
 .bss           0x00000000c0027490        0x4 hal/video.32
                0x00000000c0027490                screen
 *fill*         0x00000000c0027494        0xc 
 .bss           0x00000000c00274a0      0x480 hw/acpi.32
                0x00000000c00274a0                systemSleepFunction
                0x00000000c00274a4                systemResetFunction
                0x00000000c00274a8                systemShutdownFunction
                0x00000000c00274ac                nextACPITable
                0x00000000c00274c0                acpiTables
                0x00000000c00276c0                usingXSDT
                0x00000000c00276c4                MADTpointer
                0x00000000c00276c8                RSDTpointer
                0x00000000c00276cc                RSDPpointer
                0x00000000c00276d0                nextAPICNMI
                0x00000000c00276e0                apicNMIInfo
                0x00000000c0027760                legacyIRQFlags
                0x00000000c0027780                ioapicDiscoveryNumber
                0x00000000c00277a0                ioapicFoundInMADT
                0x00000000c00277c0                ioapicAddresses
                0x00000000c0027840                ioapicGSIBase
                0x00000000c00278c0                processorDiscoveryNumber
                0x00000000c00278e0                matchingAPICID
                0x00000000c0027900                processorID
 .bss           0x00000000c0027920       0x10 hw/cpu.32
                0x00000000c0027920                lastD
                0x00000000c0027924                lastC
                0x00000000c0027928                lastB
                0x00000000c002792c                lastA
 .bss           0x00000000c0027930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0027930        0x8 krnl/env.32
                0x00000000c0027930                Krnl::userEnv
                0x00000000c0027934                Krnl::systemEnv
 .bss           0x00000000c0027938        0x0 krnl/inlines.32
 .bss           0x00000000c0027938        0x1 krnl/panic.32
                0x00000000c0027938                KeIsKernelInPanic
 *fill*         0x00000000c0027939        0x7 
 .bss           0x00000000c0027940       0x48 krnl/powctrl.32
                0x00000000c0027940                Krnl::powCtrlOnBattery
                0x00000000c0027960                Krnl::currentPowerSettings
                0x00000000c0027984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0027988        0x8 krnl/random.32
                0x00000000c0027988                kiRandSeed
 .bss           0x00000000c0027990        0x0 krnl/resolve.32
 .bss           0x00000000c0027990        0x0 krnl/signal.32
 .bss           0x00000000c0027990        0x0 krnl/syscalls.32
 .bss           0x00000000c0027990        0x0 net/ethernet.32
 .bss           0x00000000c0027990        0x4 reg/cm.32
 .bss           0x00000000c0027994        0x0 reg/registry.32
 .bss           0x00000000c0027994        0x0 sys/eject.32
 .bss           0x00000000c0027994        0x0 sys/exit.32
 .bss           0x00000000c0027994        0x0 sys/getcwd.32
 .bss           0x00000000c0027994        0x0 sys/getpid.32
 .bss           0x00000000c0027994        0x0 sys/getramdata.32
 .bss           0x00000000c0027994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0027994        0x0 sys/kill.32
 .bss           0x00000000c0027994        0x0 sys/loaddll.32
 .bss           0x00000000c0027994        0x0 sys/read.32
 .bss           0x00000000c0027994        0x0 sys/registersignal.32
 .bss           0x00000000c0027994        0x0 sys/registry.32
 .bss           0x00000000c0027994        0x0 sys/sbrk.32
 .bss           0x00000000c0027994        0x0 sys/setcwd.32
 .bss           0x00000000c0027994        0x0 sys/settime.32
 .bss           0x00000000c0027994        0x0 sys/timezone.32
 .bss           0x00000000c0027994        0x0 sys/write.32
 .bss           0x00000000c0027994        0x0 sys/wsbe.32
 .bss           0x00000000c0027994        0x0 sys/yield.32
 *fill*         0x00000000c0027994        0xc 
 .bss           0x00000000c00279a0      0x7a4 thr/elf.32
                0x00000000c00279a0                Thr::driverLookupNext
                0x00000000c00279c0                Thr::driverLookupLen
                0x00000000c0027bc0                Thr::driverLookupAddr
                0x00000000c0027dc0                Thr::driverNameLookup
                0x00000000c0027fc0                Thr::kernelSymbols
                0x00000000c0028040                Thr::kernelStringTable
                0x00000000c00280c0                Thr::kernelSymbolTable
                0x00000000c0028140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0028144        0x4 
 .bss           0x00000000c0028148       0x68 thr/prcssthr.32
                0x00000000c0028148                cleanerThread
                0x00000000c002814c                weNeedTheCleanerToNotBlock
                0x00000000c0028150                retValLockStuff
                0x00000000c0028154                retValSchedLock
                0x00000000c0028158                lockStuffLock
                0x00000000c002815c                schedulerLock
                0x00000000c0028160                taskSwitchesPostponedFlag
                0x00000000c0028164                postponeTaskSwitchesCounter
                0x00000000c0028168                irqDisableCounter
                0x00000000c002816c                terminatedTaskList
                0x00000000c0028178                sleepingTaskList
                0x00000000c0028184                taskList
                0x00000000c0028190                kernelProcess
 *fill*         0x00000000c00281b0       0x10 
 .bss           0x00000000c00281c0       0x40 vm86/vm8086.32
                0x00000000c00281c0                Vm::vmRetV
                0x00000000c00281c4                Vm::vmDone
                0x00000000c00281c5                Vm::vmReady
                0x00000000c00281c8                Vm::vm86Thread
                0x00000000c00281cc                Vm::vmToHostCommsPtr
                0x00000000c00281e0                Vm::vmToHostComms
 .bss           0x00000000c0028200       0x18 arch/i386/hal.32
                0x00000000c0028200                apic
                0x00000000c0028204                guiPanicHandler
                0x00000000c0028208                fpuOwner
                0x00000000c002820c                coproLoadFunc
                0x00000000c0028210                coproSaveFunc
                0x00000000c0028214                gpFaultIntercept
 .bss           0x00000000c0028218        0x0 arch/i386/pic.32
 .bss           0x00000000c0028218        0x2 arch/i386/rtc.32
 .bss           0x00000000c002821a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002821a        0x6 
 .bss           0x00000000c0028220       0xf0 fs/fat/vfslink.32
                0x00000000c0028220                FAT::fats
                0x00000000c0028240                FAT::vfsToFatRemaps
                0x00000000c00282c0                fatToVFSRemaps
 .bss           0x00000000c0028310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0028310       0x10 
 .bss           0x00000000c0028320      0x820 fs/iso9660/vfslink.32
                0x00000000c0028320                iso9660Owner
                0x00000000c0028324                recentSector
                0x00000000c0028340                recentBuffer
 .bss           0x00000000c0028b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0028b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0028b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0028b40        0xd hw/bus/pci.32
                0x00000000c0028b40                thePCI
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0028b4d        0x3 
 .bss           0x00000000c0028b50        0x8 hw/diskphys/ata.32
                0x00000000c0028b50                ataSectorsWritten
                0x00000000c0028b54                ataSectorsRead
 .bss           0x00000000c0028b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0028b58        0x8 
 .bss           0x00000000c0028b60       0x41 hw/intctrl/apic.32
                0x00000000c0028b60                noOfIOAPICs
                0x00000000c0028b80                ioapics
                0x00000000c0028ba0                IOAPICsSetupYet
 .bss           0x00000000c0028ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0028ba1        0x3 
 .bss           0x00000000c0028ba4        0x4 hw/timer/pit.32
                0x00000000c0028ba4                pitFreq
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0028ba8        0x0 crtn.32
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0028ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
