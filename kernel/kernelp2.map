Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f4da
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x601 fs/symlink.32
                0x00000000c000ad14                KiCreateSymlinkID()
                0x00000000c000ad7f                KiFlushSymlinkChanges()
                0x00000000c000ae52                KiDeinitialiseSymlinks(void*)
                0x00000000c000ae57                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000aec6                KiIsSymlinkRegistered(char const*)
                0x00000000c000af0d                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b122                KeCreateSymlink(char const*, char const*)
                0x00000000c000b25f                KeInitialiseSymlinks()
 *fill*         0x00000000c000b315        0x1 
 .text          0x00000000c000b316      0xdb2 fs/vfs.32
                0x00000000c000b316                File::read(unsigned long long, void*, int*)
                0x00000000c000b36e                File::write(unsigned long long, void*, int*)
                0x00000000c000b3c6                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b41e                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b44c                File::isAtty()
                0x00000000c000b450                Directory::isAtty()
                0x00000000c000b454                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b45a                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b460                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b466                File::~File()
                0x00000000c000b466                File::~File()
                0x00000000c000b48a                File::~File()
                0x00000000c000b4b4                Directory::~Directory()
                0x00000000c000b4b4                Directory::~Directory()
                0x00000000c000b4d8                Directory::~Directory()
                0x00000000c000b502                Filesystem::Filesystem()
                0x00000000c000b502                Filesystem::Filesystem()
                0x00000000c000b526                Filesystem::~Filesystem()
                0x00000000c000b526                Filesystem::~Filesystem()
                0x00000000c000b534                Filesystem::~Filesystem()
                0x00000000c000b558                Fs::getcwd(Process*, char*, int)
                0x00000000c000b582                Fs::initVFS()
                0x00000000c000b5ac                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000b844                File::File(char const*, Process*)
                0x00000000c000b844                File::File(char const*, Process*)
                0x00000000c000b90c                File::open(FileOpenMode)
                0x00000000c000b96a                File::close()
                0x00000000c000b9ca                File::seek(unsigned long long)
                0x00000000c000ba20                File::truncate(unsigned long long)
                0x00000000c000ba76                File::tell(unsigned long long*)
                0x00000000c000bac6                File::rewind()
                0x00000000c000bada                File::unlink()
                0x00000000c000bb26                File::rename(char const*)
                0x00000000c000bb74                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bbd0                File::exists()
                0x00000000c000bc0e                File::stat(unsigned long long*, bool*)
                0x00000000c000bc6f                Fs::setcwd(Process*, char*)
                0x00000000c000bdce                Directory::Directory(char const*, Process*)
                0x00000000c000bdce                Directory::Directory(char const*, Process*)
                0x00000000c000be96                Directory::open()
                0x00000000c000bef2                Directory::close()
                0x00000000c000bf52                Directory::unlink()
                0x00000000c000bf9e                Directory::rename(char const*)
                0x00000000c000bfec                Directory::exists()
                0x00000000c000c02a                Directory::read(dirent*)
                0x00000000c000c076                Directory::create()
                0x00000000c000c0c2                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c0c8       0x86 hal/bus.32
                0x00000000c000c0c8                Bus::Bus(char const*)
                0x00000000c000c0c8                Bus::Bus(char const*)
                0x00000000c000c100                Bus::~Bus()
                0x00000000c000c100                Bus::~Bus()
                0x00000000c000c124                Bus::~Bus()
 .text          0x00000000c000c14e       0x96 hal/buzzer.32
                0x00000000c000c14e                beepThread(void*)
                0x00000000c000c18b                Krnl::beep(int, int, bool)
 .text          0x00000000c000c1e4      0x465 hal/clock.32
                0x00000000c000c1e4                User::loadClockSettings(int)
                0x00000000c000c236                Clock::Clock(char const*)
                0x00000000c000c236                Clock::Clock(char const*)
                0x00000000c000c26c                Clock::~Clock()
                0x00000000c000c26c                Clock::~Clock()
                0x00000000c000c290                Clock::~Clock()
                0x00000000c000c2ba                Clock::timeInSecondsLocal()
                0x00000000c000c302                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c35b                datetimeToSeconds(datetime_t)
                0x00000000c000c480                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c4e0                secondsToDatetime(unsigned long long)
                0x00000000c000c624                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c649        0x1 
 .text          0x00000000c000c64a      0x464 hal/device.32
                0x00000000c000c64a                Device::hibernate()
                0x00000000c000c64c                Device::wake()
                0x00000000c000c64e                Device::detect()
                0x00000000c000c650                Device::disableLegacy()
                0x00000000c000c652                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c654                DriverlessDevice::close(int, int, void*)
                0x00000000c000c658                DriverlessDevice::detect()
                0x00000000c000c65a                DriverlessDevice::open(int, int, void*)
                0x00000000c000c66e                Device::~Device()
                0x00000000c000c66e                Device::~Device()
                0x00000000c000c67c                Device::~Device()
                0x00000000c000c6a4                Device::findAndLoadDriver()
                0x00000000c000c6b2                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c6d8                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c718                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c742                Device::getParent()
                0x00000000c000c74e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c76c                Device::addChild(Device*)
                0x00000000c000c7b0                Device::removeAllChildren()
                0x00000000c000c7f6                Device::hibernateAll()
                0x00000000c000c826                Device::wakeAll()
                0x00000000c000c856                Device::detectAll()
                0x00000000c000c886                Device::disableLegacyAll()
                0x00000000c000c888                Device::loadDriversForAll()
                0x00000000c000c88a                Device::closeAll()
                0x00000000c000c8c0                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c8f6                Device::setName(char const*)
                0x00000000c000c904                Device::Device(char const*)
                0x00000000c000c904                Device::Device(char const*)
                0x00000000c000ca00                Device::getName()
                0x00000000c000ca0a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000ca0a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000ca40                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ca84                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000caae        0x2 
 .text          0x00000000c000cab0       0x86 hal/diskctrl.32
                0x00000000c000cab0                HardDiskController::HardDiskController(char const*)
                0x00000000c000cab0                HardDiskController::HardDiskController(char const*)
                0x00000000c000cae8                HardDiskController::~HardDiskController()
                0x00000000c000cae8                HardDiskController::~HardDiskController()
                0x00000000c000cb0c                HardDiskController::~HardDiskController()
 .text          0x00000000c000cb36       0xe2 hal/diskphys.32
                0x00000000c000cb36                PhysicalDisk::eject()
                0x00000000c000cb3a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cb3a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cba2                PhysicalDisk::startCache()
                0x00000000c000cbca                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cbca                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cbee                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cc18        0x0 hal/fpu.32
 .text          0x00000000c000cc18      0x360 hal/intctrl.32
                0x00000000c000cc18                int_handler
                0x00000000c000cca2                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000ccec                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ce2f                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000ce63                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ced9                setupINTS()
                0x00000000c000cf36                convertLegacyIRQNumber(int)
 .text          0x00000000c000cf78      0x8be hal/keybrd.32
                0x00000000c000cf78                startGUI(void*)
                0x00000000c000cfe6                startGUIVESA(void*)
                0x00000000c000d054                sendKeyToTerminal(unsigned char)
                0x00000000c000d12f                sendKeyboardToken(KeyboardToken)
                0x00000000c000d619                clearInternalKeybuffer(VgaText*)
                0x00000000c000d64e                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d7ac                Keyboard::Keyboard(char const*)
                0x00000000c000d7ac                Keyboard::Keyboard(char const*)
                0x00000000c000d7e8                Keyboard::~Keyboard()
                0x00000000c000d7e8                Keyboard::~Keyboard()
                0x00000000c000d80c                Keyboard::~Keyboard()
 .text          0x00000000c000d836      0x3f8 hal/logidisk.32
                0x00000000c000d836                LogicalDisk::close(int, int, void*)
                0x00000000c000d83a                LogicalDisk::~LogicalDisk()
                0x00000000c000d83a                LogicalDisk::~LogicalDisk()
                0x00000000c000d85e                LogicalDisk::~LogicalDisk()
                0x00000000c000d888                LogicalDisk::open(int, int, void*)
                0x00000000c000d89c                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d8d4                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d91a                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d91a                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d9da                LogicalDisk::assignDriveLetter()
                0x00000000c000da94                LogicalDisk::mount()
                0x00000000c000dadc                LogicalDisk::unmount()
                0x00000000c000daec                LogicalDisk::eject()
                0x00000000c000db00                LogicalDisk::unassignDriveLetter()
                0x00000000c000db56                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000dbc2                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000dc2e        0x2 
 .text          0x00000000c000dc30       0x86 hal/mouse.32
                0x00000000c000dc30                Mouse::Mouse(char const*)
                0x00000000c000dc30                Mouse::Mouse(char const*)
                0x00000000c000dc68                Mouse::~Mouse()
                0x00000000c000dc68                Mouse::~Mouse()
                0x00000000c000dc8c                Mouse::~Mouse()
 .text          0x00000000c000dcb6       0x90 hal/nic.32
                0x00000000c000dcb6                NIC::getMAC()
                0x00000000c000dcbc                NIC::write(int, unsigned char*, int*)
                0x00000000c000dcc2                NIC::NIC(char const*)
                0x00000000c000dcc2                NIC::NIC(char const*)
                0x00000000c000dcf8                NIC::~NIC()
                0x00000000c000dcf8                NIC::~NIC()
                0x00000000c000dd1c                NIC::~NIC()
 .text          0x00000000c000dd46      0x33b hal/partition.32
                0x00000000c000dd46                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ddee                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e081        0x3 
 .text          0x00000000c000e084       0x86 hal/serial.32
                0x00000000c000e084                Serial::Serial(char const*)
                0x00000000c000e084                Serial::Serial(char const*)
                0x00000000c000e0bc                Serial::~Serial()
                0x00000000c000e0bc                Serial::~Serial()
                0x00000000c000e0e0                Serial::~Serial()
 *fill*         0x00000000c000e10a        0x2 
 .text          0x00000000c000e10c      0x234 hal/timer.32
                0x00000000c000e10c                Timer::Timer(char const*)
                0x00000000c000e10c                Timer::Timer(char const*)
                0x00000000c000e144                Timer::~Timer()
                0x00000000c000e144                Timer::~Timer()
                0x00000000c000e168                Timer::~Timer()
                0x00000000c000e192                Timer::read()
                0x00000000c000e19d                setupTimer(int)
                0x00000000c000e1d8                timerHandler(unsigned int)
 .text          0x00000000c000e340      0x450 hal/vcache.32
                0x00000000c000e340                VCache::VCache(PhysicalDisk*)
                0x00000000c000e340                VCache::VCache(PhysicalDisk*)
                0x00000000c000e4b0                VCache::invalidateReadBuffer()
                0x00000000c000e4c0                VCache::writeWriteBuffer()
                0x00000000c000e50c                VCache::~VCache()
                0x00000000c000e50c                VCache::~VCache()
                0x00000000c000e564                VCache::~VCache()
                0x00000000c000e58c                VCache::write(unsigned long long, int, void*)
                0x00000000c000e686                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e790      0x4d9 hal/video.32
                0x00000000c000e790                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e7dc                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e84c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e8dc                Video::clearScreen(unsigned int)
                0x00000000c000e910                Video::putpixel(int, int, unsigned int)
                0x00000000c000e91e                Video::readPixelApprox(int, int)
                0x00000000c000e932                Video::Video(char const*)
                0x00000000c000e932                Video::Video(char const*)
                0x00000000c000e968                Video::~Video()
                0x00000000c000e968                Video::~Video()
                0x00000000c000e98c                Video::~Video()
                0x00000000c000e9b6                Video::isMonochrome()
                0x00000000c000e9c2                Video::getWidth()
                0x00000000c000e9ce                Video::getHeight()
                0x00000000c000e9da                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ea96                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ebfe                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ec69        0x3 
 .text          0x00000000c000ec6c     0x12d2 hw/acpi.32
                0x00000000c000ec6c                ACPI::close(int, int, void*)
                0x00000000c000ed20                findRSDP()
                0x00000000c000edb8                loadACPITables(unsigned char*)
                0x00000000c000f024                findRSDT(unsigned char*)
                0x00000000c000f17c                findDataTable(unsigned char*, char*)
                0x00000000c000f1fc                scanMADT()
                0x00000000c000f6b4                ACPI::ACPI()
                0x00000000c000f6b4                ACPI::ACPI()
                0x00000000c000f708                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f804                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f8d0                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f8d8                ACPI::detectPCI()
                0x00000000c000faf8                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fb40                ACPI::sleep()
                0x00000000c000fb5c                ACPI::open(int, int, void*)
 .text          0x00000000c000ff3e      0xbc5 hw/cpu.32
                0x00000000c000ff3e                CPU::close(int, int, void*)
                0x00000000c000ff42                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000ff5e                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000ff76                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ffea                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c001006e                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c001009c                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00100ca                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00100f8                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0010126                CPU::CPU()
                0x00000000c0010126                CPU::CPU()
                0x00000000c00101b4                CPU::displayFeatures()
                0x00000000c00101b6                CPU::detectFeatures()
                0x00000000c001088a                CPU::setupSMEP()
                0x00000000c0010896                CPU::setupUMIP()
                0x00000000c00108a0                CPU::setupTSC()
                0x00000000c00108aa                CPU::setupLargePages()
                0x00000000c00108b4                CPU::setupPAT()
                0x00000000c00108f0                CPU::setupMTRR()
                0x00000000c00108f2                CPU::setupGlobalPages()
                0x00000000c00108fc                CPU::allowUsermodeDataAccess()
                0x00000000c001090e                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010920                CPU::setupSMAP()
                0x00000000c001092e                CPU::setupFeatures()
                0x00000000c00109fa                CPU::open(int, int, void*)
 .text          0x00000000c0010b03       0xb6 krnl/atexit.32
                0x00000000c0010b03                KeInitialiseAtexit()
                0x00000000c0010b22                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010b56                KeExecuteAtexit()
 .text          0x00000000c0010bb9       0xdf krnl/bootmsg.32
                0x00000000c0010bb9                KeDisplaySplashScreen()
                0x00000000c0010c35                KeSetBootMessage(char const*)
 .text          0x00000000c0010c98       0x1d krnl/compat.32
                0x00000000c0010c98                Krnl::handlePowerButton()
                0x00000000c0010ca8                Krnl::handleSleepButton()
 *fill*         0x00000000c0010cb5        0x1 
 .text          0x00000000c0010cb6      0x5bf krnl/env.32
                0x00000000c0010cb6                EnvVarContainer::getEnv(char const*)
                0x00000000c0010cf4                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010db6                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010db8                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010fdc                EnvVarContainer::__loadSystem()
                0x00000000c0010ff6                EnvVarContainer::__loadUser()
                0x00000000c0010ff8                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010ff8                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001101a                EnvVarContainer::~EnvVarContainer()
                0x00000000c001101a                EnvVarContainer::~EnvVarContainer()
                0x00000000c001104a                KeGetEnv(Process*, char const*)
                0x00000000c00110af                KeSetEnvSystem(char const*, char const*)
                0x00000000c00110c9                KeSetEnvUser(char const*, char const*)
                0x00000000c00110e8                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00110fb                KeDeleteEnvSystem(char const*)
                0x00000000c00110fc                KeDeleteEnvUser(char const*)
                0x00000000c00110fd                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00110fe                KeNewProcessEnv(Process*)
                0x00000000c0011120                KeCopyProcessEnv(Process*, Process*)
                0x00000000c001116c                KeLoadSystemEnv()
                0x00000000c001119a                KeLoadUserEnv()
                0x00000000c00111c0                KeFlushEnv()
                0x00000000c00111c1                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00111e1                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011275       0x94 krnl/inlines.32
                0x00000000c0011275                CPU::current()
                0x00000000c0011281                operator new(unsigned long)
                0x00000000c0011286                operator delete(void*)
                0x00000000c001128b                disableIRQs()
                0x00000000c001128d                enableIRQs()
                0x00000000c001128f                lockScheduler()
                0x00000000c0011297                unlockScheduler()
                0x00000000c00112a6                lockStuff()
                0x00000000c00112b4                unlockStuff()
                0x00000000c00112ee                Virt::getAKernelVAS()
                0x00000000c00112f4                __not_memcpy
 .text          0x00000000c0011309        0xc krnl/panic.32
                0x00000000c0011309                KePanic(char const*)
 .text          0x00000000c0011315      0x142 krnl/powctrl.32
                0x00000000c0011315                KePowerThread(void*)
                0x00000000c0011343                KeChangePowerSettings(PowerSettings)
                0x00000000c0011359                KeUserIOReceived()
                0x00000000c0011364                KeHandlePowerButton()
                0x00000000c0011399                KeHandleSleepButton()
                0x00000000c00113ce                KeSetupPowerManager()
 .text          0x00000000c0011457       0x9b krnl/random.32
                0x00000000c0011457                KeRand()
                0x00000000c0011497                KeSeedRand(unsigned int)
                0x00000000c00114c0                KeInitRand()
 *fill*         0x00000000c00114f2        0x2 
 .text          0x00000000c00114f4      0x1bc krnl/resolve.32
                0x00000000c00114f4                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00116b0      0x31f krnl/signal.32
                0x00000000c00116b0                KiSigKill(int)
                0x00000000c00116c4                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00116c5                KiDefaultSignalHandlerPause(int)
                0x00000000c00116f1                KiDefaultSignalHandlerResume(int)
                0x00000000c001171d                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011722                KeInitSignals()
                0x00000000c0011771                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00117a7                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011824                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c001191b                KiCheckSignalZ
                0x00000000c001195d                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011998                KiFinishSignalZ
 .text          0x00000000c00119cf      0xc74 krnl/syscalls.32
                0x00000000c00119cf                SysSeekDir(regs*)
                0x00000000c00119d4                SysTellDir(regs*)
                0x00000000c00119d9                SysVerify(regs*)
                0x00000000c00119e3                SysGetArgc(regs*)
                0x00000000c00119f7                SysTTYName(regs*)
                0x00000000c00119ff                SysFormatDisk(regs*)
                0x00000000c0011a66                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011aba                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011b13                SysShutdown(regs*)
                0x00000000c0011ba0                SysRealpath(regs*)
                0x00000000c0011bee                SysReadDir(regs*)
                0x00000000c0011c6e                SysIsATTY(regs*)
                0x00000000c0011cc8                SysSeek(regs*)
                0x00000000c0011d22                SysTell(regs*)
                0x00000000c0011d8f                SysSize(regs*)
                0x00000000c0011e02                SysSizeFromFilename(regs*)
                0x00000000c0011eac                SysClose(regs*)
                0x00000000c0011f0c                SysOpenDir(regs*)
                0x00000000c0011f89                SysMakeDir(regs*)
                0x00000000c0011ff7                SysCloseDir(regs*)
                0x00000000c0012046                SysWait(regs*)
                0x00000000c0012067                SysNotImpl(regs*)
                0x00000000c0012082                SysPanic(regs*)
                0x00000000c001209d                SysRmdir(regs*)
                0x00000000c00120fb                SysUnlink(regs*)
                0x00000000c0012159                SysGetArgv(regs*)
                0x00000000c00121a6                SysUSleep(regs*)
                0x00000000c00121cf                SysSpawn(regs*)
                0x00000000c0012240                SysGetEnv(regs*)
                0x00000000c00122f5                SysSetFatAttrib(regs*)
                0x00000000c001235e                SysPipe(regs*)
                0x00000000c00123a3                SysGetUnixTime(regs*)
                0x00000000c00123b7                string_ends_with(char const*, char const*)
                0x00000000c0012402                SysOpen(regs*)
                0x00000000c0012601                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012643        0x1 
 .text          0x00000000c0012644      0x159 net/ethernet.32
                0x00000000c0012644                KeSwitchEndian16(unsigned short)
                0x00000000c0012668                KeSwitchEndian32(unsigned int)
                0x00000000c0012698                EthernetCRC32(unsigned char*, int)
                0x00000000c001273c                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c001279d      0xd51 reg/cm.32
                0x00000000c001279d                CmOpen(char const*)
                0x00000000c00128bb                CmClose(Reghive_Tag*)
                0x00000000c00128d1                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c001290d                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012984                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c00129c3                CmGetNext(Reghive_Tag*, int)
                0x00000000c00129f5                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012a31                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012a59                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012a7a                CmExpand(Reghive_Tag*, int)
                0x00000000c0012af5                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012b7b                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012c6f                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012da7                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012e08                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012e38                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012e6f                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012e99                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012ed9                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012f7d                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012fab                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013148                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013195                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001320f                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c0013262                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013326                zStrtok(char*, char const*)
                0x00000000c0013398                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013419                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00134bc                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00134ee      0x545 reg/registry.32
                0x00000000c00134ee                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c001367a                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00137cf                Reg::getLine(char*, char*, char*)
                0x00000000c0013806                Reg::readInt(char*, char*, int*)
                0x00000000c00138f4                Reg::readString(char*, char*, char*, int)
                0x00000000c0013975                Reg::readBool(char*, char*, bool*)
                0x00000000c001399a                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00139c6                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00139f2                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013a33       0x36 sys/eject.32
                0x00000000c0013a33                SysEject(regs*)
 .text          0x00000000c0013a69       0x18 sys/exit.32
                0x00000000c0013a69                SysExit(regs*)
 .text          0x00000000c0013a81       0x1f sys/getcwd.32
                0x00000000c0013a81                SysGetCwd(regs*)
 .text          0x00000000c0013aa0        0xc sys/getpid.32
                0x00000000c0013aa0                SysGetPID(regs*)
 .text          0x00000000c0013aac       0x1a sys/getramdata.32
                0x00000000c0013aac                SysGetRAMData(regs*)
 .text          0x00000000c0013ac6       0x82 sys/getvgaptr.32
                0x00000000c0013ac6                SysGetVGAPtr(regs*)
 .text          0x00000000c0013b48       0xb9 sys/kill.32
                0x00000000c0013b48                SysKill(regs*)
 .text          0x00000000c0013c01       0xa8 sys/loaddll.32
                0x00000000c0013c01                SysLoadDLL(regs*)
 .text          0x00000000c0013ca9       0x68 sys/read.32
                0x00000000c0013ca9                SysRead(regs*)
 .text          0x00000000c0013d11       0x29 sys/registersignal.32
                0x00000000c0013d11                SysRegisterSignal(regs*)
 .text          0x00000000c0013d3a      0x19c sys/registry.32
                0x00000000c0013d3a                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013db1                SysRegistryReadExtent(regs*)
                0x00000000c0013df9                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013e21                SysRegistryEnterDirectory(regs*)
                0x00000000c0013e49                SysRegistryGetNext(regs*)
                0x00000000c0013e71                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013eab                SysRegistryOpen(regs*)
                0x00000000c0013ebf                SysRegistryClose(regs*)
 .text          0x00000000c0013ed6       0x55 sys/sbrk.32
                0x00000000c0013ed6                SysSbrk(regs*)
 .text          0x00000000c0013f2b       0x1c sys/setcwd.32
                0x00000000c0013f2b                SysSetCwd(regs*)
 .text          0x00000000c0013f47       0x96 sys/settime.32
                0x00000000c0013f47                SysSetTime(regs*)
 .text          0x00000000c0013fdd       0x4a sys/timezone.32
                0x00000000c0013fdd                SysTimezone(regs*)
 .text          0x00000000c0014027       0xfc sys/truncate.32
                0x00000000c0014027                SysTruncate(regs*)
 .text          0x00000000c0014123       0x68 sys/write.32
                0x00000000c0014123                SysWrite(regs*)
 .text          0x00000000c001418b       0x62 sys/wsbe.32
                0x00000000c001418b                SysWsbe(regs*)
 .text          0x00000000c00141ed       0x25 sys/yield.32
                0x00000000c00141ed                SysYield(regs*)
 .text          0x00000000c0014212     0x1203 thr/elf.32
                0x00000000c0014212                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014499                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00146b8                Thr::runtimeReferenceHelper()
                0x00000000c00146cb                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001471a                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00149d8                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015119                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001514b                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015182                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001519c                Thr::loadDLL(char const*, bool)
                0x00000000c00153dc                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0015415        0x3 
 .text          0x00000000c0015418     0x13b5 thr/prcssthr.32
                0x00000000c0015418                userModeEntryPoint(void*)
                0x00000000c0015440                changeTSS
                0x00000000c0015470                switchToThread(ThreadControlBlock*)
                0x00000000c0015520                Process::addArgs(char**)
                0x00000000c001558c                Process::Process(char const*, Process*, char**)
                0x00000000c001558c                Process::Process(char const*, Process*, char**)
                0x00000000c0015798                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015798                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001596c                taskStartupFunction
                0x00000000c0015978                Semaphore::Semaphore(int)
                0x00000000c0015978                Semaphore::Semaphore(int)
                0x00000000c00159a8                Mutex::Mutex()
                0x00000000c00159a8                Mutex::Mutex()
                0x00000000c00159bc                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015ac4                Process::createUserThread()
                0x00000000c0015ae4                setupMultitasking(void (*)())
                0x00000000c0015c08                schedule()
                0x00000000c0015c9c                Semaphore::tryAcquire()
                0x00000000c0015d5c                Semaphore::assertLocked(char const*)
                0x00000000c0015de0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015e08                blockTask(TaskState)
                0x00000000c0015e40                waitTask(int, int*, int)
                0x00000000c0015e84                milliTenthSleepUntil(unsigned int)
                0x00000000c0015f24                milliTenthSleep(unsigned int)
                0x00000000c0015f38                sleep(unsigned int)
                0x00000000c0015f48                Semaphore::acquire()
                0x00000000c0016010                taskReturned
                0x00000000c0016054                Thr::processFromPID(int)
                0x00000000c0016100                unblockTask(ThreadControlBlock*)
                0x00000000c00161ac                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016480                cleanerTaskFunction(void*)
                0x00000000c0016588                terminateTask(int)
                0x00000000c0016674                Thr::terminateFromIRQ(int)
                0x00000000c0016684                Semaphore::release()
 .text          0x00000000c00167cd      0xc31 vm86/vm8086.32
                0x00000000c00167cd                Vm::inbv(unsigned short)
                0x00000000c00167e0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016816                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016826                Vm::getSegment(unsigned int)
                0x00000000c001682e                Vm::getOffset(unsigned int)
                0x00000000c0016833                Vm::mainloop2()
                0x00000000c001686d                Vm::mainVm8086Loop(void*)
                0x00000000c001687d                Vm::mainloop3(unsigned long)
                0x00000000c00168a3                Vm::initialise8086()
                0x00000000c00168e6                Vm::finish8086()
                0x00000000c0016947                Vm::getOutput8086(unsigned char*)
                0x00000000c001696c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016a25                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016bc3                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016c60                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016c71                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016c83                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016c94                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016ca9                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016cbf                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016cd4                Vm::faultHandler(regs*)
 .text          0x00000000c00173fe      0xaf0 arch/i386/hal.32
                0x00000000c00173fe                noCopro(unsigned long)
                0x00000000c00173ff                nmiHandler(regs*, void*)
                0x00000000c0017418                doubleFault(regs*, void*)
                0x00000000c0017431                displayDebugInfo(regs*)
                0x00000000c00177b6                HalSystemIdle()
                0x00000000c0017832                displayProgramFault(char const*)
                0x00000000c001787e                gpFault(regs*, void*)
                0x00000000c00178e5                pgFault(regs*, void*)
                0x00000000c001796e                otherISRHandler(regs*, void*)
                0x00000000c00179a2                opcodeFault(regs*, void*)
                0x00000000c0017a25                i386SaveCoprocessor(void*)
                0x00000000c0017a39                i386LoadCoprocessor(void*)
                0x00000000c0017a4d                x87EmulHandler(regs*, void*)
                0x00000000c0017aea                HalInitialiseCoprocessor()
                0x00000000c0017b98                HalPanic(char const*)
                0x00000000c0017cac                HalQueryPerformanceCounter()
                0x00000000c0017cc7                HalInitialise()
                0x00000000c0017e7d                HalMakeBeep(int)
                0x00000000c0017eb7                HalGetRand()
                0x00000000c0017eba                HalEndOfInterrupt(int)
                0x00000000c0017eeb                HalRestart()
                0x00000000c0017eec                HalShutdown()
                0x00000000c0017eed                HalSleep()
 *fill*         0x00000000c0017eee        0x2 
 .text          0x00000000c0017ef0      0x2dc arch/i386/pic.32
                0x00000000c0017ef0                picIoWait()
                0x00000000c0017ef8                picDisable()
                0x00000000c0017f2c                picGetIRQReg(int)
                0x00000000c0017fa8                picOpen()
                0x00000000c001812c                picEOI(int)
 .text          0x00000000c00181cc      0x66e arch/i386/rtc.32
                0x00000000c00181cc                RTC::open(int, int, void*)
                0x00000000c00181d0                RTC::close(int, int, void*)
                0x00000000c00181d4                RTC::timeInSecondsUTC()
                0x00000000c00181e6                RTC::timeInDatetimeUTC()
                0x00000000c001820c                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001824a                RTC::~RTC()
                0x00000000c001824a                RTC::~RTC()
                0x00000000c001826e                RTC::~RTC()
                0x00000000c0018298                RTC::get_update_in_progress_flag()
                0x00000000c00182b2                RTC::completeRTCRefresh()
                0x00000000c001858c                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001873a                rtcIRQHandler(regs*, void*)
                0x00000000c0018780                RTC::RTC()
                0x00000000c0018780                RTC::RTC()
 *fill*         0x00000000c001883a        0x2 
 .text          0x00000000c001883c      0x1f4 arch/i386/vga.32
                0x00000000c001883c                HalConsoleScroll(int, int)
                0x00000000c0018944                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00189a8                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018a30     0x14f3 fs/fat/vfslink.32
                0x00000000c0018a30                FAT::getName()
                0x00000000c0018a38                FAT::tell(void*, unsigned long long*)
                0x00000000c0018a74                FAT::stat(void*, unsigned long long*)
                0x00000000c0018ab0                FAT::~FAT()
                0x00000000c0018ab0                FAT::~FAT()
                0x00000000c0018ad4                FAT::~FAT()
                0x00000000c0018afc                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018ba0                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018c80                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018e64                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019080                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019240                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00193b0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019410                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019470                FAT::close(void*)
                0x00000000c00194c4                FAT::closeDir(void*)
                0x00000000c0019518                FAT::truncate(void*, unsigned long long)
                0x00000000c0019584                FAT::seek(void*, unsigned long long)
                0x00000000c00195dc                fatWrapperReadDisk
                0x00000000c001961c                fatWrapperWriteDisk
                0x00000000c001965c                fatWrapperIoctl
                0x00000000c001977c                FAT::FAT()
                0x00000000c001977c                FAT::FAT()
                0x00000000c00197d4                FAT::fixFilepath(char*)
                0x00000000c0019814                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019988                FAT::openDir(char const*, void**)
                0x00000000c0019a38                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019b30                FAT::unlink(char const*)
                0x00000000c0019bb0                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019d68                FAT::rename(char const*, char const*)
                0x00000000c0019e34                FAT::mkdir(char const*)
                0x00000000c0019eb4                FAT::exists(char const*)
 *fill*         0x00000000c0019f23        0x1 
 .text          0x00000000c0019f24       0x94 fs/iso9660/helper.32
                0x00000000c0019f24                isoReadDiscSectorHelper
                0x00000000c0019f80                iso_kprintf
                0x00000000c0019f9c                iso_kprintfd
 .text          0x00000000c0019fb8      0x71a fs/iso9660/vfslink.32
                0x00000000c0019fb8                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019fbe                ISO9660::truncate(void*, unsigned long long)
                0x00000000c0019fc4                ISO9660::getName()
                0x00000000c0019fca                ISO9660::closeDir(void*)
                0x00000000c0019fd4                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019fda                ISO9660::unlink(char const*)
                0x00000000c0019fe0                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019fe6                ISO9660::rename(char const*, char const*)
                0x00000000c0019fec                ISO9660::mkdir(char const*)
                0x00000000c0019ff2                ISO9660::~ISO9660()
                0x00000000c0019ff2                ISO9660::~ISO9660()
                0x00000000c001a016                ISO9660::~ISO9660()
                0x00000000c001a03e                ISO9660::exists(char const*)
                0x00000000c001a052                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a138                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a180                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a1c2                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a200                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a252                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a394                ISO9660::close(void*)
                0x00000000c001a3c4                ISO9660::openDir(char const*, void**)
                0x00000000c001a49e                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a5b9                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a638                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a6aa                ISO9660::ISO9660()
                0x00000000c001a6aa                ISO9660::ISO9660()
 .text          0x00000000c001a6d2      0x26c hal/sound/sndcard.32
                0x00000000c001a6d2                SoundCard::beginPlayback()
                0x00000000c001a6e0                SoundCard::stopPlayback()
                0x00000000c001a6ee                SoundCard::SoundCard(char const*)
                0x00000000c001a6ee                SoundCard::SoundCard(char const*)
                0x00000000c001a78c                SoundCard::~SoundCard()
                0x00000000c001a78c                SoundCard::~SoundCard()
                0x00000000c001a7b0                SoundCard::~SoundCard()
                0x00000000c001a7da                SoundCard::configureRates(int, int, int)
                0x00000000c001a80a                SoundCard::getSamples16(int, short*)
                0x00000000c001a866                SoundCard::getSamples32(int, int*)
                0x00000000c001a8ec                SoundCard::addChannel(SoundPort*)
                0x00000000c001a92a                SoundCard::removeChannel(int)
 *fill*         0x00000000c001a93e        0x2 
 .text          0x00000000c001a940      0x393 hal/sound/sndport.32
                0x00000000c001a940                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a940                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a9cc                SoundPort::~SoundPort()
                0x00000000c001a9cc                SoundPort::~SoundPort()
                0x00000000c001aa00                SoundPort::unpause()
                0x00000000c001aa0c                SoundPort::pause()
                0x00000000c001aa18                SoundPort::getBufferUsed()
                0x00000000c001aa20                SoundPort::getBufferSize()
                0x00000000c001aa28                SoundPort::buffer16(short*, int)
                0x00000000c001aab4                SoundPort::buffer32(int*, int)
                0x00000000c001ab40                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001ac10                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001acd3        0x0 hw/bus/isa.32
 *fill*         0x00000000c001acd3        0x1 
 .text          0x00000000c001acd4      0xbc5 hw/bus/pci.32
                0x00000000c001acd4                PCI::open(int, int, void*)
                0x00000000c001acf2                PCI::close(int, int, void*)
                0x00000000c001acf6                PCI::PCI()
                0x00000000c001acf6                PCI::PCI()
                0x00000000c001ad8e                PCI::readBAR8(unsigned int, int)
                0x00000000c001adaa                PCI::readBAR16(unsigned int, int)
                0x00000000c001adc8                PCI::readBAR32(unsigned int, int)
                0x00000000c001ade4                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001ae04                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001ae26                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001ae46                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001aebc                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001af66                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001af8a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001afb2                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001affc                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b024                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b048                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b06c                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b094                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b0f8                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b1de                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b4a8                PCI::checkBus(unsigned char)
                0x00000000c001b4cc                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b652                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b7ce                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b840                PCI::detect()
 *fill*         0x00000000c001b899        0x1 
 .text          0x00000000c001b89a      0xb96 hw/diskctrl/ide.32
                0x00000000c001b89a                IDE::close(int, int, void*)
                0x00000000c001b89e                IDE::IDE()
                0x00000000c001b89e                IDE::IDE()
                0x00000000c001b8d2                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b8e4                selectDrive(unsigned char, unsigned char)
                0x00000000c001b8e6                IDE::getBase(unsigned char)
                0x00000000c001b8f8                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b9b8                IDE::read(unsigned char, unsigned char)
                0x00000000c001ba6c                IDE::waitInterrupt(unsigned char)
                0x00000000c001bace                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001baea                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bb06                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bb50                IDE::open(int, int, void*)
                0x00000000c001bf8a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c05a                IDE::detect()
                0x00000000c001c322                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c3dc                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c430      0x32c hw/diskctrl/satabus.32
                0x00000000c001c430                SATABus::close(int, int, void*)
                0x00000000c001c434                SATABus::detect()
                0x00000000c001c436                SATABus::SATABus()
                0x00000000c001c436                SATABus::SATABus()
                0x00000000c001c4bc                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c4ee                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c536                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c556                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c580                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c692                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c73c                SATABus::open(int, int, void*)
 .text          0x00000000c001c75c      0x96d hw/diskphys/ata.32
                0x00000000c001c75c                ATA::close(int, int, void*)
                0x00000000c001c780                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c782                ATA::ATA()
                0x00000000c001c782                ATA::ATA()
                0x00000000c001c7b0                ATA::flush(bool)
                0x00000000c001c7fe                ATA::readyForCommand()
                0x00000000c001c84a                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cc0e                ATA::detectCHS()
                0x00000000c001cc38                ATA::open(int, int, void*)
                0x00000000c001cd04                combineCharAndColour(char, unsigned char)
                0x00000000c001cd15                combineColours(unsigned char, unsigned char)
                0x00000000c001cd22                ATA::read(unsigned long long, int, void*)
                0x00000000c001cef8                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d0c9        0x1 
 .text          0x00000000c001d0ca      0x612 hw/diskphys/atapi.32
                0x00000000c001d0ca                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d0d0                ATAPI::close(int, int, void*)
                0x00000000c001d0f4                ATAPI::ATAPI()
                0x00000000c001d0f4                ATAPI::ATAPI()
                0x00000000c001d122                ATAPI::readyForCommand()
                0x00000000c001d174                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d434                ATAPI::diskRemoved()
                0x00000000c001d46e                ATAPI::eject()
                0x00000000c001d4b6                ATAPI::diskInserted()
                0x00000000c001d4c2                ATAPI::detectMedia()
                0x00000000c001d582                ATAPI::open(int, int, void*)
                0x00000000c001d662                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d6dc      0x7ff hw/diskphys/sata.32
                0x00000000c001d6dc                SATA::close(int, int, void*)
                0x00000000c001d700                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d702                SATA::open(int, int, void*)
                0x00000000c001d7ac                SATA::SATA()
                0x00000000c001d7ac                SATA::SATA()
                0x00000000c001d7da                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001da2c                SATA::read(unsigned long long, int, void*)
                0x00000000c001dc7c                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001dedb        0x1 
 .text          0x00000000c001dedc      0x5d8 hw/diskphys/satapi.32
                0x00000000c001dedc                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001dee2                SATAPI::close(int, int, void*)
                0x00000000c001df06                SATAPI::SATAPI()
                0x00000000c001df06                SATAPI::SATAPI()
                0x00000000c001df34                SATAPI::diskRemoved()
                0x00000000c001df36                SATAPI::diskInserted()
                0x00000000c001df52                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e238                SATAPI::eject()
                0x00000000c001e274                SATAPI::detectMedia()
                0x00000000c001e2ca                SATAPI::open(int, int, void*)
                0x00000000c001e3ca                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e4b4      0x45b hw/intctrl/apic.32
                0x00000000c001e4b4                IOAPIC::close(int, int, void*)
                0x00000000c001e4ba                apicGetBase()
                0x00000000c001e500                IOAPIC::IOAPIC()
                0x00000000c001e500                IOAPIC::IOAPIC()
                0x00000000c001e528                apicOpen()
                0x00000000c001e6a4                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e6d6                IOAPIC::read(int)
                0x00000000c001e6fe                IOAPIC::open(int, int, void*)
                0x00000000c001e7e4                IOAPIC::write(int, int)
                0x00000000c001e810                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e90f        0x1 
 .text          0x00000000c001e910       0xf0 hw/timer/apictimer.32
                0x00000000c001e910                APICTimer::close(int, int, void*)
                0x00000000c001e918                apicTimerHandler(regs*, void*)
                0x00000000c001e940                APICTimer::open(int, int, void*)
                0x00000000c001e9b0                APICTimer::write(int)
                0x00000000c001e9d8                APICTimer::APICTimer()
                0x00000000c001e9d8                APICTimer::APICTimer()
 .text          0x00000000c001ea00      0x1ad hw/timer/pit.32
                0x00000000c001ea00                PIT::write(int)
                0x00000000c001ea84                pitHandler(regs*, void*)
                0x00000000c001eaac                PIT::open(int, int, void*)
                0x00000000c001eafc                PIT::close(int, int, void*)
                0x00000000c001eb2c                PIT::PIT()
                0x00000000c001eb2c                PIT::PIT()
 *fill*         0x00000000c001ebad        0x3 
 .text          0x00000000c001ebb0       0x83 arch/i386/avx.32
                0x00000000c001ebb0                avxDetect
                0x00000000c001ebda                avxSave
                0x00000000c001ebeb                avxLoad
                0x00000000c001ebfc                avxInit
                0x00000000c001ec1e                avxClose
                0x00000000c001ec1f                wouldSheSayYes
 *fill*         0x00000000c001ec33        0xd 
 .text          0x00000000c001ec40      0x2ec arch/i386/interrupt.32
                0x00000000c001ec40                isr0
                0x00000000c001ec50                isr1
                0x00000000c001ec5a                isr2
                0x00000000c001ec64                isr3
                0x00000000c001ec6e                isr4
                0x00000000c001ec78                isr5
                0x00000000c001ec82                isr6
                0x00000000c001ec8c                isr7
                0x00000000c001ec96                isr8
                0x00000000c001ec9e                isr9
                0x00000000c001eca8                isr10
                0x00000000c001ecb0                isr11
                0x00000000c001ecb8                isr12
                0x00000000c001ecc0                isr13
                0x00000000c001ecda                isr14
                0x00000000c001ece2                isr15
                0x00000000c001ecec                isr16
                0x00000000c001ecf6                isr17
                0x00000000c001ed00                isr18
                0x00000000c001ed0a                irq3
                0x00000000c001ed14                irq4
                0x00000000c001ed1e                irq5
                0x00000000c001ed28                irq6
                0x00000000c001ed32                irq7
                0x00000000c001ed3c                irq8
                0x00000000c001ed46                irq9
                0x00000000c001ed50                irq10
                0x00000000c001ed5a                irq11
                0x00000000c001ed64                irq12
                0x00000000c001ed6e                irq13
                0x00000000c001ed78                irq14
                0x00000000c001ed82                irq15
                0x00000000c001ed8c                irq1
                0x00000000c001ed93                irq2
                0x00000000c001ed9a                isr96
                0x00000000c001eda1                irq0
                0x00000000c001eda6                int_common_stub
                0x00000000c001edd8                syscall_common_stub
                0x00000000c001eedc                irq16
                0x00000000c001eee6                irq17
                0x00000000c001eef0                irq18
                0x00000000c001eefa                irq19
                0x00000000c001ef04                irq20
                0x00000000c001ef0e                irq21
                0x00000000c001ef18                irq22
                0x00000000c001ef22                irq23
 *fill*         0x00000000c001ef2c        0x4 
 .text          0x00000000c001ef30       0x10 arch/i386/rdrand.32
                0x00000000c001ef30                i386GetRDRAND
 .text          0x00000000c001ef40       0x39 arch/i386/sse.32
                0x00000000c001ef40                absolutelyNoChanceInHell
                0x00000000c001ef40                sseDetect
                0x00000000c001ef58                sseSave
                0x00000000c001ef60                sseLoad
                0x00000000c001ef68                sseInit
                0x00000000c001ef78                sseClose
 *fill*         0x00000000c001ef79        0x7 
 .text          0x00000000c001ef80       0x49 arch/i386/x87.32
                0x00000000c001ef86                x87Detect
                0x00000000c001efa1                x87Save
                0x00000000c001efa8                x87Load
                0x00000000c001efaf                x87Init
                0x00000000c001efc8                x87Close
 *fill*         0x00000000c001efc9        0x3 
 .text          0x00000000c001efcc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001eff1        0x0 crtn.32
 *fill*         0x00000000c001eff1        0x3 
 .text          0x00000000c001eff4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001eff4                __divdi3
 *fill*         0x00000000c001f13f        0x1 
 .text          0x00000000c001f140      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f140                __moddi3
 *fill*         0x00000000c001f2be        0x2 
 .text          0x00000000c001f2c0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f2c0                __udivdi3
 *fill*         0x00000000c001f3bf        0x1 
 .text          0x00000000c001f3c0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f3c0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f4e0        0x0
 .iplt          0x00000000c001f4e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f4da        0xf
 .init          0x00000000c001f4da        0x3 crti.32
                0x00000000c001f4da                _init
 .init          0x00000000c001f4dd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f4e2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f4e7        0x2 crtn.32

.fini           0x00000000c001f4e9        0xa
 .fini          0x00000000c001f4e9        0x3 crti.32
                0x00000000c001f4e9                _fini
 .fini          0x00000000c001f4ec        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f4f1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f4f4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f4f4       0x23 core/computer.32
                0x00000000c001f4f4                Computer::~Computer()
                0x00000000c001f4f4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f518       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f518       0x2a core/computer.32
                0x00000000c001f518                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f542       0x21
 .text._Z10idleCommonv
                0x00000000c001f542       0x21 core/idle.32
                0x00000000c001f542                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f564        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f564        0x2 core/unixfile.32
                0x00000000c001f564                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f564                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f566       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f566       0x42 core/unixfile.32
                0x00000000c001f566                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f566                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f5a8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f5a8       0xd3 core/unixfile.32
                0x00000000c001f5a8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f67c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f67c        0x7 core/unixfile.32
                0x00000000c001f67c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f684       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f684       0xa1 core/unixfile.32
                0x00000000c001f684                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f726        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f726        0x8 core/unixfile.32
                0x00000000c001f726                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f72e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f72e       0x1a hal/device.32
                0x00000000c001f72e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f72e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f748       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f748       0x2a hal/device.32
                0x00000000c001f748                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f772       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f772       0xdc hal/device.32
                0x00000000c001f772                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f84e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f84e       0x42 hal/device.32
                0x00000000c001f84e                LinkedList<Device>::LinkedList()
                0x00000000c001f84e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f890       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f890       0x1c hal/timer.32
                0x00000000c001f890                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f8ac        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f8ac        0x7 hal/timer.32
                0x00000000c001f8ac                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f8b4       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f8b4       0xbc hal/timer.32
                0x00000000c001f8b4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f970       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f970       0xda hal/timer.32
                0x00000000c001f970                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fa4c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fa4c       0x23 hw/acpi.32
                0x00000000c001fa4c                ACPI::~ACPI()
                0x00000000c001fa4c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fa70       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fa70       0x2a hw/acpi.32
                0x00000000c001fa70                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fa9c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fa9c        0x2 hw/acpi.32
                0x00000000c001fa9c                LinkedList<Device>::~LinkedList()
                0x00000000c001fa9c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001faa0       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001faa0       0x1c hw/acpi.32
                0x00000000c001faa0                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fabc        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fabc        0x7 hw/acpi.32
                0x00000000c001fabc                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fac4       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fac4       0xb8 hw/acpi.32
                0x00000000c001fac4                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001fb7c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fb7c       0x23 hw/cpu.32
                0x00000000c001fb7c                CPU::~CPU()
                0x00000000c001fb7c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fba0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fba0       0x2a hw/cpu.32
                0x00000000c001fba0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fbcc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fbcc        0x8 sys/kill.32
                0x00000000c001fbcc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fbd4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fbd4        0x2 thr/prcssthr.32
                0x00000000c001fbd4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fbd4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fbd8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fbd8       0x49 thr/prcssthr.32
                0x00000000c001fbd8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fbd8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fc24       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fc24       0x42 thr/prcssthr.32
                0x00000000c001fc24                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fc24                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fc66       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fc66       0x23 hw/bus/pci.32
                0x00000000c001fc66                PCI::~PCI()
                0x00000000c001fc66                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fc8a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fc8a       0x2a hw/bus/pci.32
                0x00000000c001fc8a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fcb4       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fcb4       0x23 hw/diskctrl/ide.32
                0x00000000c001fcb4                IDE::~IDE()
                0x00000000c001fcb4                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fcd8       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fcd8       0x2a hw/diskctrl/ide.32
                0x00000000c001fcd8                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001fd02       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001fd02       0x23 hw/diskctrl/satabus.32
                0x00000000c001fd02                SATABus::~SATABus()
                0x00000000c001fd02                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001fd26       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001fd26       0x2a hw/diskctrl/satabus.32
                0x00000000c001fd26                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001fd50       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fd50       0x23 hw/diskphys/ata.32
                0x00000000c001fd50                ATA::~ATA()
                0x00000000c001fd50                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fd74       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fd74       0x2a hw/diskphys/ata.32
                0x00000000c001fd74                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fd9e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fd9e       0x23 hw/diskphys/atapi.32
                0x00000000c001fd9e                ATAPI::~ATAPI()
                0x00000000c001fd9e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fdc2       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fdc2       0x2a hw/diskphys/atapi.32
                0x00000000c001fdc2                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001fdec       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001fdec       0x23 hw/diskphys/sata.32
                0x00000000c001fdec                SATA::~SATA()
                0x00000000c001fdec                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001fe10       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001fe10       0x2a hw/diskphys/sata.32
                0x00000000c001fe10                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001fe3a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001fe3a       0x23 hw/diskphys/satapi.32
                0x00000000c001fe3a                SATAPI::~SATAPI()
                0x00000000c001fe3a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001fe5e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001fe5e       0x2a hw/diskphys/satapi.32
                0x00000000c001fe5e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001fe88       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001fe88       0x23 hw/intctrl/apic.32
                0x00000000c001fe88                IOAPIC::~IOAPIC()
                0x00000000c001fe88                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001feac       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001feac       0x2a hw/intctrl/apic.32
                0x00000000c001feac                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001fed8       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001fed8       0x23 hw/timer/apictimer.32
                0x00000000c001fed8                APICTimer::~APICTimer()
                0x00000000c001fed8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001fefc       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001fefc       0x2a hw/timer/apictimer.32
                0x00000000c001fefc                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ff28       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ff28       0x23 hw/timer/pit.32
                0x00000000c001ff28                PIT::~PIT()
                0x00000000c001ff28                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ff4c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ff4c       0x2a hw/timer/pit.32
                0x00000000c001ff4c                PIT::~PIT()

.rodata         0x00000000c001ff76     0x31ba
                0x00000000c001ff76                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001ff76        0x2 
 .ctors         0x00000000c001ff78        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001ff7c        0x4 core/unixfile.32
 .ctors         0x00000000c001ff80        0x4 thr/prcssthr.32
 .ctors         0x00000000c001ff84        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ff88                end_ctors = .
                0x00000000c001ff88                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001ff88        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001ff8c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ff8c                __DTOR_END__
                0x00000000c001ff90                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001ff90       0x10 
 .rodata        0x00000000c001ffa0      0x101 acpica/utclib.32
                0x00000000c001ffa0                AcpiGbl_Ctypes
 *fill*         0x00000000c00200a1        0x3 
 .rodata        0x00000000c00200a4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c00200bc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020106       0x1a 
 .rodata        0x00000000c0020120       0xed fs/fat/ff.32
 *fill*         0x00000000c002020d       0x13 
 .rodata        0x00000000c0020220      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020620       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002068f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c00207a4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c002080c       0x2c core/computer.32
                0x00000000c002080c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020838       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020868        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020874       0x17 core/main.32
 *fill*         0x00000000c002088b        0x1 
 .rodata.str1.4
                0x00000000c002088c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020931       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020989       0x39 core/pipe.32
 *fill*         0x00000000c00209c2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00209c4       0x1c core/pipe.32
                0x00000000c00209c4                vtable for Pipe
 .rodata.str1.1
                0x00000000c00209e0       0x2b core/terminal.32
 *fill*         0x00000000c0020a0b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020a0c       0x1c core/terminal.32
                0x00000000c0020a0c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020a28       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020a4a       0x15 core/unixfile.32
 *fill*         0x00000000c0020a5f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020a60       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020aab        0x8 core/unixfile.32
 *fill*         0x00000000c0020ab3        0x1 
 .rodata.str1.4
                0x00000000c0020ab4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020ad4       0x1c core/unixfile.32
                0x00000000c0020ad4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020af0       0x1c core/unixfile.32
                0x00000000c0020af0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020b0c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020da0      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020ec6       0x33 coreobjs/c++.32
 *fill*         0x00000000c0020ef9        0x3 
 .rodata        0x00000000c0020efc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002104c      0x169 dbg/usban.32
 *fill*         0x00000000c00211b5        0x3 
 .rodata.str1.4
                0x00000000c00211b8      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00212ef      0x120 fs/symlink.32
                                        0x12c (size before relaxing)
 .rodata.str1.1
                0x00000000c002140f       0x4e fs/vfs.32
                                         0x50 (size before relaxing)
 *fill*         0x00000000c002145d        0x3 
 .rodata._ZTV10Filesystem
                0x00000000c0021460       0x6c fs/vfs.32
                0x00000000c0021460                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00214cc       0x1c fs/vfs.32
                0x00000000c00214cc                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00214e8       0x1c fs/vfs.32
                0x00000000c00214e8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021504       0x2c hal/bus.32
                0x00000000c0021504                vtable for Bus
 .rodata.str1.1
                0x00000000c0021530       0x1e hal/clock.32
 *fill*         0x00000000c002154e        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021550       0x3c hal/clock.32
                0x00000000c0021550                vtable for Clock
 *fill*         0x00000000c002158c       0x14 
 .rodata        0x00000000c00215a0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00215d0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021628       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021628       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021628       0x2c hal/device.32
                0x00000000c0021628                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021654       0x2c hal/device.32
                0x00000000c0021654                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021680       0x2c hal/diskctrl.32
                0x00000000c0021680                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00216ac       0x38 hal/diskphys.32
                0x00000000c00216ac                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00216e4       0x3e hal/intctrl.32
 *fill*         0x00000000c0021722        0x2 
 .rodata.str1.4
                0x00000000c0021724       0x5d hal/intctrl.32
 .rodata        0x00000000c0021781       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c00217d4       0x34 hal/keybrd.32
                0x00000000c00217d4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021808       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002184c       0x2c hal/logidisk.32
                0x00000000c002184c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021878       0x2c hal/mouse.32
                0x00000000c0021878                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c00218a4       0x34 hal/nic.32
                0x00000000c00218a4                vtable for NIC
 .rodata.str1.1
                0x00000000c00218d8        0xb hal/partition.32
 *fill*         0x00000000c00218e3        0x1 
 .rodata._ZTV6Serial
                0x00000000c00218e4       0x44 hal/serial.32
                0x00000000c00218e4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021928       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021928        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021928       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021928       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021928       0x30 hal/timer.32
                0x00000000c0021928                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021958       0x10 hal/vcache.32
                0x00000000c0021958                vtable for VCache
 .rodata.str1.1
                0x00000000c0021968       0x93 hal/video.32
 *fill*         0x00000000c00219fb        0x1 
 .rodata._ZTV5Video
                0x00000000c00219fc       0x4c hal/video.32
                0x00000000c00219fc                vtable for Video
 .rodata.str1.4
                0x00000000c0021a48       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021ae3      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021c39       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021c39        0x8 hw/acpi.32
 *fill*         0x00000000c0021c39        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021c3c       0x2c hw/acpi.32
                0x00000000c0021c3c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021c68      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0021de3        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021de4       0x2c hw/cpu.32
                0x00000000c0021de4                vtable for CPU
 .rodata.str1.1
                0x00000000c0021e10       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021e50       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021e8c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0021f1d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0021fe6       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002202e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0022059       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c00220cf       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022114        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002211e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002213f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c00221d5       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022229       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022255      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022421       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022478      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022588       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022588       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022588       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022588        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022588       0xc2 vm86/vm8086.32
 *fill*         0x00000000c002264a        0x2 
 .rodata        0x00000000c002264c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002267c      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c002281b        0x1 
 .rodata.str1.4
                0x00000000c002281c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002288f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c00228a4       0x3c arch/i386/rtc.32
                0x00000000c00228a4                vtable for RTC
 .rodata.str1.1
                0x00000000c00228e0       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022921        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022924       0x6c fs/fat/vfslink.32
                0x00000000c0022924                vtable for FAT
 .rodata.str1.1
                0x00000000c0022990       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022990      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022ac8       0x6c fs/iso9660/vfslink.32
                0x00000000c0022ac8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022b34       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022b78       0x34 hal/sound/sndcard.32
                0x00000000c0022b78                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022bac       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022beb       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022c23       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022cc4       0x2c hw/bus/pci.32
                0x00000000c0022cc4                vtable for PCI
 .rodata.str1.1
                0x00000000c0022cf0       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022d77        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022d78       0x2c hw/diskctrl/ide.32
                0x00000000c0022d78                vtable for IDE
 .rodata.str1.4
                0x00000000c0022da4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022dc8       0x2c hw/diskctrl/satabus.32
                0x00000000c0022dc8                vtable for SATABus
 .rodata.str1.1
                0x00000000c0022df4       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0022e06        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022e08       0x38 hw/diskphys/ata.32
                0x00000000c0022e08                vtable for ATA
 .rodata.str1.1
                0x00000000c0022e40        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022e4d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0022e50       0x38 hw/diskphys/atapi.32
                0x00000000c0022e50                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022e88       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0022f04       0x38 hw/diskphys/sata.32
                0x00000000c0022f04                vtable for SATA
 .rodata.str1.1
                0x00000000c0022f3c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0023026        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0023028       0x38 hw/diskphys/satapi.32
                0x00000000c0023028                vtable for SATAPI
 .rodata        0x00000000c0023060        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0023068       0x2c hw/intctrl/apic.32
                0x00000000c0023068                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023094       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00230af        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00230b0       0x30 hw/timer/apictimer.32
                0x00000000c00230b0                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00230e0       0x1d hw/timer/pit.32
 *fill*         0x00000000c00230fd        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023100       0x30 hw/timer/pit.32
                0x00000000c0023100                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023130      0x7b1
 *(.data)
 .data          0x00000000c0023130        0x0 crti.32
 .data          0x00000000c0023130        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023130                __dso_handle
 .data          0x00000000c0023134        0x0 acpica/utclib.32
 .data          0x00000000c0023134        0x0 core/malloc.32
 .data          0x00000000c0023134        0x0 libk/ctype.32
 .data          0x00000000c0023134        0x0 libk/string.32
 .data          0x00000000c0023134        0x0 fs/fat/diskio.32
 .data          0x00000000c0023134        0x0 fs/fat/ff.32
 .data          0x00000000c0023134        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023134        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023134        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023134        0x0 core/computer.32
 .data          0x00000000c0023134        0x0 core/gdt.32
 .data          0x00000000c0023134        0x0 core/idle.32
 .data          0x00000000c0023134        0x0 core/idt.32
 .data          0x00000000c0023134        0x4 core/kheap.32
 .data          0x00000000c0023138        0x0 core/main.32
 .data          0x00000000c0023138        0x4 core/physmgr.32
                0x00000000c0023138                Phys::bitmap
 .data          0x00000000c002313c        0x0 core/pipe.32
 *fill*         0x00000000c002313c        0x4 
 .data          0x00000000c0023140       0x60 core/terminal.32
                0x00000000c0023140                VgaText::hiddenOut
                0x00000000c0023160                ansiToVGAMappings
 .data          0x00000000c00231a0        0x0 core/tss.32
 .data          0x00000000c00231a0        0x4 core/unixfile.32
                0x00000000c00231a0                UnixFile::nextFd
 .data          0x00000000c00231a4       0x15 core/virtmgr.32
                0x00000000c00231a4                Virt::pageAllocPtr
                0x00000000c00231a8                Virt::bitmap
                0x00000000c00231ac                Virt::swapfileSectorsPerPage
                0x00000000c00231b0                Virt::swapfileLength
                0x00000000c00231b4                Virt::swapfileSector
                0x00000000c00231b8                Virt::swapfileDrive
 *fill*         0x00000000c00231b9        0x3 
 .data          0x00000000c00231bc        0x4 coreobjs/c++.32
                0x00000000c00231bc                __stack_chk_guard
 .data          0x00000000c00231c0        0x0 dbg/kconsole.32
 .data          0x00000000c00231c0       0x28 dbg/usban.32
                0x00000000c00231c0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00231e8        0x0 fs/symlink.32
 .data          0x00000000c00231e8        0x0 fs/vfs.32
 .data          0x00000000c00231e8        0x0 hal/bus.32
 .data          0x00000000c00231e8        0x0 hal/buzzer.32
 .data          0x00000000c00231e8        0x0 hal/clock.32
 .data          0x00000000c00231e8        0x0 hal/device.32
 .data          0x00000000c00231e8        0x0 hal/diskctrl.32
 .data          0x00000000c00231e8        0x0 hal/diskphys.32
 .data          0x00000000c00231e8        0x0 hal/fpu.32
 .data          0x00000000c00231e8        0x0 hal/intctrl.32
 .data          0x00000000c00231e8        0x0 hal/keybrd.32
 .data          0x00000000c00231e8        0x0 hal/logidisk.32
 .data          0x00000000c00231e8        0x0 hal/mouse.32
 .data          0x00000000c00231e8        0x0 hal/nic.32
 .data          0x00000000c00231e8        0x0 hal/partition.32
 .data          0x00000000c00231e8        0x0 hal/serial.32
 .data          0x00000000c00231e8        0x0 hal/timer.32
 .data          0x00000000c00231e8        0x0 hal/vcache.32
 .data          0x00000000c00231e8        0x0 hal/video.32
 .data          0x00000000c00231e8       0x10 hw/acpi.32
                0x00000000c00231e8                legacyIRQRemaps
 .data          0x00000000c00231f8        0x4 hw/cpu.32
                0x00000000c00231f8                lastCode
 .data          0x00000000c00231fc        0x0 krnl/atexit.32
 *fill*         0x00000000c00231fc        0x4 
 .data          0x00000000c0023200      0x142 krnl/bootmsg.32
                0x00000000c0023200                KiSplashScreen
 .data          0x00000000c0023342        0x0 krnl/compat.32
 *fill*         0x00000000c0023342       0x1e 
 .data          0x00000000c0023360       0x4d krnl/env.32
                0x00000000c0023360                defaultSysEnv
 .data          0x00000000c00233ad        0x0 krnl/inlines.32
 .data          0x00000000c00233ad        0x0 krnl/panic.32
 .data          0x00000000c00233ad        0x0 krnl/powctrl.32
 .data          0x00000000c00233ad        0x0 krnl/random.32
 .data          0x00000000c00233ad        0x0 krnl/resolve.32
 *fill*         0x00000000c00233ad       0x13 
 .data          0x00000000c00233c0       0x4c krnl/signal.32
                0x00000000c00233c0                KiDefaultSignalHandlers
 *fill*         0x00000000c002340c       0x14 
 .data          0x00000000c0023420       0xf0 krnl/syscalls.32
                0x00000000c0023420                systemCallHandlers
 .data          0x00000000c0023510        0x0 net/ethernet.32
 *fill*         0x00000000c0023510       0x10 
 .data          0x00000000c0023520      0x100 reg/cm.32
                0x00000000c0023520                CmComponents
 .data          0x00000000c0023620        0x0 reg/registry.32
 .data          0x00000000c0023620        0x0 sys/eject.32
 .data          0x00000000c0023620        0x0 sys/exit.32
 .data          0x00000000c0023620        0x0 sys/getcwd.32
 .data          0x00000000c0023620        0x0 sys/getpid.32
 .data          0x00000000c0023620        0x0 sys/getramdata.32
 .data          0x00000000c0023620        0x0 sys/getvgaptr.32
 .data          0x00000000c0023620        0x0 sys/kill.32
 .data          0x00000000c0023620        0x0 sys/loaddll.32
 .data          0x00000000c0023620        0x0 sys/read.32
 .data          0x00000000c0023620        0x0 sys/registersignal.32
 .data          0x00000000c0023620        0x0 sys/registry.32
 .data          0x00000000c0023620        0x0 sys/sbrk.32
 .data          0x00000000c0023620        0x0 sys/setcwd.32
 .data          0x00000000c0023620        0x0 sys/settime.32
 .data          0x00000000c0023620        0x0 sys/timezone.32
 .data          0x00000000c0023620        0x0 sys/truncate.32
 .data          0x00000000c0023620        0x0 sys/write.32
 .data          0x00000000c0023620        0x0 sys/wsbe.32
 .data          0x00000000c0023620        0x0 sys/yield.32
 .data          0x00000000c0023620        0x0 thr/elf.32
 .data          0x00000000c0023620        0x4 thr/prcssthr.32
                0x00000000c0023620                Thr::nextPID
 .data          0x00000000c0023624        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023624       0x1c 
 .data          0x00000000c0023640      0x2a0 arch/i386/hal.32
                0x00000000c0023640                exceptionNames
 .data          0x00000000c00238e0        0x0 arch/i386/pic.32
 .data          0x00000000c00238e0        0x0 arch/i386/rtc.32
 .data          0x00000000c00238e0        0x0 arch/i386/vga.32
 .data          0x00000000c00238e0        0x0 fs/fat/vfslink.32
 .data          0x00000000c00238e0        0x0 fs/iso9660/helper.32
 .data          0x00000000c00238e0        0x1 fs/iso9660/vfslink.32
                0x00000000c00238e0                recentDriveletter
 .data          0x00000000c00238e1        0x0 hal/sound/sndcard.32
 .data          0x00000000c00238e1        0x0 hal/sound/sndport.32
 .data          0x00000000c00238e1        0x0 hw/bus/isa.32
 .data          0x00000000c00238e1        0x0 hw/bus/pci.32
 .data          0x00000000c00238e1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00238e1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00238e1        0x0 hw/diskphys/ata.32
 .data          0x00000000c00238e1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00238e1        0x0 hw/diskphys/sata.32
 .data          0x00000000c00238e1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00238e1        0x0 hw/intctrl/apic.32
 .data          0x00000000c00238e1        0x0 hw/timer/apictimer.32
 .data          0x00000000c00238e1        0x0 hw/timer/pit.32
 .data          0x00000000c00238e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00238e1        0x0 crtn.32
 .data          0x00000000c00238e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00238e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00238e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00238e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00238e4        0x0
 .got           0x00000000c00238e4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00238e4        0x0
 .got.plt       0x00000000c00238e4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00238e4        0x0
 .igot.plt      0x00000000c00238e4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00238e4        0x0
 .tm_clone_table
                0x00000000c00238e4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00238e4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00238e1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00238e1        0x3 
 .eh_frame      0x00000000c00238e4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00238e4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00238e4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002393c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002397c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00239e8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x5107
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0025fb4        0xc 
 .bss           0x00000000c0025fc0      0x444 fs/symlink.32
                0x00000000c0025fc0                KiNumWaitingRoomSymlinks
                0x00000000c0025fe0                KiNewlyCreatedIDs
                0x00000000c0026000                KiNewlyCreatedSymlinks
                0x00000000c0026400                KiBaseSymlinkID
 .bss           0x00000000c0026404        0x4 fs/vfs.32
                0x00000000c0026404                installedFilesystems
 .bss           0x00000000c0026408        0x0 hal/bus.32
 .bss           0x00000000c0026408        0x0 hal/buzzer.32
 .bss           0x00000000c0026408        0x8 hal/clock.32
                0x00000000c0026408                User::dstOn
                0x00000000c0026409                User::timezoneHalfHourOffset
                0x00000000c002640c                User::timezoneHourOffset
 .bss           0x00000000c0026410        0x0 hal/device.32
 .bss           0x00000000c0026410        0x0 hal/diskctrl.32
 .bss           0x00000000c0026410        0x0 hal/diskphys.32
 .bss           0x00000000c0026410        0x0 hal/fpu.32
 *fill*         0x00000000c0026410       0x10 
 .bss           0x00000000c0026420     0x2000 hal/intctrl.32
                0x00000000c0026420                INT_contexts
                0x00000000c0027420                INT_handlers
 .bss           0x00000000c0028420      0x429 hal/keybrd.32
                0x00000000c0028420                keyboardWaitingTaskList
                0x00000000c0028424                keyboardSetupYet
                0x00000000c0028428                guiKeyboardHandler
                0x00000000c0028440                keystates
 *fill*         0x00000000c0028849       0x17 
 .bss           0x00000000c0028860       0x88 hal/logidisk.32
                0x00000000c0028860                diskAssignments
                0x00000000c0028880                disks
 .bss           0x00000000c00288e8        0x4 hal/mouse.32
                0x00000000c00288e8                guiMouseHandler
 .bss           0x00000000c00288ec        0x0 hal/nic.32
 .bss           0x00000000c00288ec        0x0 hal/partition.32
 .bss           0x00000000c00288ec        0x0 hal/serial.32
 .bss           0x00000000c00288ec        0x4 hal/timer.32
                0x00000000c00288ec                milliTenthsSinceBoot
 .bss           0x00000000c00288f0        0x0 hal/vcache.32
 .bss           0x00000000c00288f0        0x4 hal/video.32
                0x00000000c00288f0                screen
 *fill*         0x00000000c00288f4        0xc 
 .bss           0x00000000c0028900      0x480 hw/acpi.32
                0x00000000c0028900                systemSleepFunction
                0x00000000c0028904                systemResetFunction
                0x00000000c0028908                systemShutdownFunction
                0x00000000c002890c                nextACPITable
                0x00000000c0028920                acpiTables
                0x00000000c0028b20                usingXSDT
                0x00000000c0028b24                MADTpointer
                0x00000000c0028b28                RSDTpointer
                0x00000000c0028b2c                RSDPpointer
                0x00000000c0028b30                nextAPICNMI
                0x00000000c0028b40                apicNMIInfo
                0x00000000c0028bc0                legacyIRQFlags
                0x00000000c0028be0                ioapicDiscoveryNumber
                0x00000000c0028c00                ioapicFoundInMADT
                0x00000000c0028c20                ioapicAddresses
                0x00000000c0028ca0                ioapicGSIBase
                0x00000000c0028d20                processorDiscoveryNumber
                0x00000000c0028d40                matchingAPICID
                0x00000000c0028d60                processorID
 .bss           0x00000000c0028d80       0x10 hw/cpu.32
                0x00000000c0028d80                lastD
                0x00000000c0028d84                lastC
                0x00000000c0028d88                lastB
                0x00000000c0028d8c                lastA
 *fill*         0x00000000c0028d90       0x10 
 .bss           0x00000000c0028da0       0xe0 krnl/atexit.32
                0x00000000c0028da0                KiNextAtexitHandler
                0x00000000c0028dc0                KiAtexitContexts
                0x00000000c0028e20                KiAtexitHandlers
 .bss           0x00000000c0028e80        0x0 krnl/bootmsg.32
 .bss           0x00000000c0028e80        0x0 krnl/compat.32
 .bss           0x00000000c0028e80        0x8 krnl/env.32
                0x00000000c0028e80                KeUserEnv
                0x00000000c0028e84                KeSystemEnv
 .bss           0x00000000c0028e88        0x0 krnl/inlines.32
 .bss           0x00000000c0028e88        0x1 krnl/panic.32
                0x00000000c0028e88                KeIsKernelInPanic
 *fill*         0x00000000c0028e89       0x17 
 .bss           0x00000000c0028ea0       0x48 krnl/powctrl.32
                0x00000000c0028ea0                powCtrlOnBattery
                0x00000000c0028ec0                currentPowerSettings
                0x00000000c0028ee4                secondsSinceLastUserIO
 .bss           0x00000000c0028ee8        0x8 krnl/random.32
                0x00000000c0028ee8                kiRandSeed
 .bss           0x00000000c0028ef0        0x0 krnl/resolve.32
 .bss           0x00000000c0028ef0        0x0 krnl/signal.32
 .bss           0x00000000c0028ef0        0x0 krnl/syscalls.32
 .bss           0x00000000c0028ef0        0x0 net/ethernet.32
 .bss           0x00000000c0028ef0        0x4 reg/cm.32
 .bss           0x00000000c0028ef4        0x0 reg/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/eject.32
 .bss           0x00000000c0028ef4        0x0 sys/exit.32
 .bss           0x00000000c0028ef4        0x0 sys/getcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/getpid.32
 .bss           0x00000000c0028ef4        0x0 sys/getramdata.32
 .bss           0x00000000c0028ef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c0028ef4        0x0 sys/kill.32
 .bss           0x00000000c0028ef4        0x0 sys/loaddll.32
 .bss           0x00000000c0028ef4        0x0 sys/read.32
 .bss           0x00000000c0028ef4        0x0 sys/registersignal.32
 .bss           0x00000000c0028ef4        0x0 sys/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/sbrk.32
 .bss           0x00000000c0028ef4        0x0 sys/setcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/settime.32
 .bss           0x00000000c0028ef4        0x0 sys/timezone.32
 .bss           0x00000000c0028ef4        0x0 sys/truncate.32
 .bss           0x00000000c0028ef4        0x0 sys/write.32
 .bss           0x00000000c0028ef4        0x0 sys/wsbe.32
 .bss           0x00000000c0028ef4        0x0 sys/yield.32
 *fill*         0x00000000c0028ef4        0xc 
 .bss           0x00000000c0028f00      0x7a4 thr/elf.32
                0x00000000c0028f00                Thr::driverLookupNext
                0x00000000c0028f20                Thr::driverLookupLen
                0x00000000c0029120                Thr::driverLookupAddr
                0x00000000c0029320                Thr::driverNameLookup
                0x00000000c0029520                Thr::kernelSymbols
                0x00000000c00295a0                Thr::kernelStringTable
                0x00000000c0029620                Thr::kernelSymbolTable
                0x00000000c00296a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00296a4        0x4 
 .bss           0x00000000c00296a8       0x68 thr/prcssthr.32
                0x00000000c00296a8                cleanerThread
                0x00000000c00296ac                weNeedTheCleanerToNotBlock
                0x00000000c00296b0                retValLockStuff
                0x00000000c00296b4                retValSchedLock
                0x00000000c00296b8                lockStuffLock
                0x00000000c00296bc                schedulerLock
                0x00000000c00296c0                taskSwitchesPostponedFlag
                0x00000000c00296c4                postponeTaskSwitchesCounter
                0x00000000c00296c8                irqDisableCounter
                0x00000000c00296cc                terminatedTaskList
                0x00000000c00296d8                sleepingTaskList
                0x00000000c00296e4                taskList
                0x00000000c00296f0                kernelProcess
 *fill*         0x00000000c0029710       0x10 
 .bss           0x00000000c0029720       0x40 vm86/vm8086.32
                0x00000000c0029720                Vm::vmRetV
                0x00000000c0029724                Vm::vmDone
                0x00000000c0029725                Vm::vmReady
                0x00000000c0029728                Vm::vm86Thread
                0x00000000c002972c                Vm::vmToHostCommsPtr
                0x00000000c0029740                Vm::vmToHostComms
 .bss           0x00000000c0029760       0x18 arch/i386/hal.32
                0x00000000c0029760                apic
                0x00000000c0029764                guiPanicHandler
                0x00000000c0029768                fpuOwner
                0x00000000c002976c                coproLoadFunc
                0x00000000c0029770                coproSaveFunc
                0x00000000c0029774                gpFaultIntercept
 .bss           0x00000000c0029778        0x0 arch/i386/pic.32
 .bss           0x00000000c0029778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002977a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002977a        0x6 
 .bss           0x00000000c0029780       0xf0 fs/fat/vfslink.32
                0x00000000c0029780                FAT::fats
                0x00000000c00297a0                FAT::vfsToFatRemaps
                0x00000000c0029820                fatToVFSRemaps
 .bss           0x00000000c0029870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0029870       0x10 
 .bss           0x00000000c0029880      0x820 fs/iso9660/vfslink.32
                0x00000000c0029880                iso9660Owner
                0x00000000c0029884                recentSector
                0x00000000c00298a0                recentBuffer
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002a0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002a0a0        0xd hw/bus/pci.32
                0x00000000c002a0a0                thePCI
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002a0ad        0x3 
 .bss           0x00000000c002a0b0        0x8 hw/diskphys/ata.32
                0x00000000c002a0b0                ataSectorsWritten
                0x00000000c002a0b4                ataSectorsRead
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002a0b8        0x8 
 .bss           0x00000000c002a0c0       0x41 hw/intctrl/apic.32
                0x00000000c002a0c0                noOfIOAPICs
                0x00000000c002a0e0                ioapics
                0x00000000c002a100                IOAPICsSetupYet
 .bss           0x00000000c002a101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002a101        0x3 
 .bss           0x00000000c002a104        0x4 hw/timer/pit.32
                0x00000000c002a104                pitFreq
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002a108        0x0 crtn.32
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002a108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002f20f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
