Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e83a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6b9 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cc5                Krnl::firstTask()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006eb0                Computer::setBootMessage(char const*)
                0x00000000c0006eb2                Computer::detectFeatures()
                0x00000000c00070d8                Computer::displayFeatures()
                0x00000000c00070da                Computer::rdmsr(unsigned int)
                0x00000000c0007106                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007142                Computer::shutdown()
                0x00000000c000715a                Computer::restart()
                0x00000000c0007172                Computer::sleep()
                0x00000000c0007186                Computer::nmiEnabled()
                0x00000000c0007192                Computer::readCMOS(unsigned char)
                0x00000000c00071ae                Computer::enableNMI(bool)
                0x00000000c00071c6                Computer::open(int, int, void*)
                0x00000000c000729a                Computer::disableNMI()
                0x00000000c00072aa                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072ce                Computer::handleNMI()
 *fill*         0x00000000c0007339        0x1 
 .text          0x00000000c000733a      0x1db core/gdt.32
                0x00000000c000733a                GDTEntry::setBase(unsigned int)
                0x00000000c0007356                GDTEntry::setLimit(unsigned int)
                0x00000000c0007374                GDT::GDT()
                0x00000000c0007374                GDT::GDT()
                0x00000000c000738a                GDT::addEntry(GDTEntry)
                0x00000000c00073ac                GDT::getNumberOfEntries()
                0x00000000c00073b4                GDT::flush()
                0x00000000c00073d6                GDT::setup()
 .text          0x00000000c0007515       0x1d core/idle.32
                0x00000000c0007515                idleFunction(void*)
 *fill*         0x00000000c0007532        0x2 
 .text          0x00000000c0007534      0x46c core/idt.32
                0x00000000c0007534                IDTEntry::IDTEntry(bool)
                0x00000000c0007534                IDTEntry::IDTEntry(bool)
                0x00000000c00075ae                IDTEntry::setOffset(unsigned int)
                0x00000000c00075c4                IDT::IDT()
                0x00000000c00075c4                IDT::IDT()
                0x00000000c00075c6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075ce                IDT::addEntry(IDTEntry, int)
                0x00000000c00075e8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007620                IDT::flush()
                0x00000000c000763a                IDT::setup()
 .text          0x00000000c00079a0      0x185 core/kheap.32
                0x00000000c00079a0                sbrk
                0x00000000c0007a34                mmap
                0x00000000c0007a4a                munmap
                0x00000000c0007a60                liballoc_lock()
                0x00000000c0007a6e                liballoc_unlock()
                0x00000000c0007a84                liballoc_alloc(int)
                0x00000000c0007a9c                liballoc_free(void*, int)
                0x00000000c0007ab7                realloc
                0x00000000c0007acb                malloc
                0x00000000c0007adb                free
                0x00000000c0007aeb                rfree
                0x00000000c0007afb                calloc
 .text          0x00000000c0007b25       0xc3 core/main.32
                0x00000000c0007b25                KeEntryPoint
 .text          0x00000000c0007be8      0x639 core/physmgr.32
                0x00000000c0007be8                Phys::allocateDMA(unsigned long)
                0x00000000c0007cd6                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d11                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d51                Phys::getPageState(unsigned long)
                0x00000000c0007d6d                Phys::freePage(unsigned long)
                0x00000000c0007dd6                Phys::allocatePage()
                0x00000000c0007ea5                Phys::allocateContiguousPages(int)
                0x00000000c0007f0c                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f44                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008221        0x1 
 .text          0x00000000c0008222      0x26d core/pipe.32
                0x00000000c0008222                Pipe::isAtty()
                0x00000000c0008226                Pipe::~Pipe()
                0x00000000c0008226                Pipe::~Pipe()
                0x00000000c000824a                Pipe::~Pipe()
                0x00000000c0008272                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008336                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xaaa core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a50                VgaText::putx(unsigned int)
                0x00000000c0008a96                VgaText::puts(char const*)
                0x00000000c0008abc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b08                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c56                VgaText::VgaText(char const*)
                0x00000000c0008c56                VgaText::VgaText(char const*)
                0x00000000c0008da6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f14                VgaText::doUpdate()
                0x00000000c0008f15                newTerminal(char*)
 *fill*         0x00000000c0008f3a        0x2 
 .text          0x00000000c0008f3c      0x1a1 core/tss.32
                0x00000000c0008f3c                TSS::TSS()
                0x00000000c0008f3c                TSS::TSS()
                0x00000000c0008f4c                TSS::setESP(unsigned long)
                0x00000000c0008f60                TSS::flush()
                0x00000000c0008f80                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090dd        0x1 
 .text          0x00000000c00090de      0x4ca core/unixfile.32
                0x00000000c00090de                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009134                ReservedFilename::isAtty()
                0x00000000c0009150                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091ae                UnixFile::getFileDescriptor()
                0x00000000c00091b6                UnixFile::UnixFile(int)
                0x00000000c00091b6                UnixFile::UnixFile(int)
                0x00000000c000936a                ReservedFilename::ReservedFilename(int)
                0x00000000c000936a                ReservedFilename::ReservedFilename(int)
                0x00000000c000939c                UnixFile::~UnixFile()
                0x00000000c000939c                UnixFile::~UnixFile()
                0x00000000c0009438                UnixFile::~UnixFile()
                0x00000000c0009460                ReservedFilename::~ReservedFilename()
                0x00000000c0009460                ReservedFilename::~ReservedFilename()
                0x00000000c0009484                ReservedFilename::~ReservedFilename()
                0x00000000c00094ab                getFromFileDescriptor(int)
 .text          0x00000000c00095a8     0x128d core/virtmgr.32
                0x00000000c00095a8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095e2                Virt::getPageState(unsigned long)
                0x00000000c0009605                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009721                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009744                Virt::swapIDToSector(unsigned long)
                0x00000000c000975a                Virt::allocateSwapfilePage()
                0x00000000c00097d9                Virt::virtualMemorySetup()
                0x00000000c000982a                Virt::setupPageSwapping(int)
                0x00000000c000989c                VAS::VAS(VAS*)
                0x00000000c000989c                VAS::VAS(VAS*)
                0x00000000c00098ca                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098f8                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009917                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a2a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a4e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a68                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009aac                VAS::VAS()
                0x00000000c0009aac                VAS::VAS()
                0x00000000c0009b16                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b4a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b76                VAS::~VAS()
                0x00000000c0009b76                VAS::~VAS()
                0x00000000c0009ce4                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009df0                VAS::allocatePages(int, int)
                0x00000000c0009fe0                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009ffe                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a0c6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a1b6                VAS::VAS(bool)
                0x00000000c000a1b6                VAS::VAS(bool)
                0x00000000c000a448                VAS::evict(unsigned long)
                0x00000000c000a526                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a652                VAS::scanForEviction()
                0x00000000c000a73a                mapVASFirstTime
 .text          0x00000000c000a835       0x5f coreobjs/c++.32
                0x00000000c000a835                __cxa_atexit
                0x00000000c000a838                __cxa_finalize
                0x00000000c000a839                __stack_chk_fail
                0x00000000c000a86f                __cxa_pure_virtual
                0x00000000c000a880                operator new[](unsigned long)
                0x00000000c000a885                operator delete(void*, unsigned long)
                0x00000000c000a88a                operator delete[](void*)
                0x00000000c000a88f                operator delete[](void*, unsigned long)
 .text          0x00000000c000a894      0x225 dbg/kconsole.32
                0x00000000c000a894                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a905                Dbg::logc(char)
                0x00000000c000a925                Dbg::logs(char*)
                0x00000000c000a944                Dbg::logWriteInt(unsigned int)
                0x00000000c000a962                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a983                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aab9        0x1 
 .text          0x00000000c000aaba      0xc86 fs/vfs.32
                0x00000000c000aaba                File::read(unsigned long long, void*, int*)
                0x00000000c000ab12                File::write(unsigned long long, void*, int*)
                0x00000000c000ab6a                Directory::read(unsigned long long, void*, int*)
                0x00000000c000abc2                Directory::write(unsigned long long, void*, int*)
                0x00000000c000abf0                File::isAtty()
                0x00000000c000abf4                Directory::isAtty()
                0x00000000c000abf8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000abfe                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ac04                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ac0a                File::~File()
                0x00000000c000ac0a                File::~File()
                0x00000000c000ac2e                File::~File()
                0x00000000c000ac58                Directory::~Directory()
                0x00000000c000ac58                Directory::~Directory()
                0x00000000c000ac7c                Directory::~Directory()
                0x00000000c000aca6                Filesystem::Filesystem()
                0x00000000c000aca6                Filesystem::Filesystem()
                0x00000000c000acca                Filesystem::~Filesystem()
                0x00000000c000acca                Filesystem::~Filesystem()
                0x00000000c000acd8                Filesystem::~Filesystem()
                0x00000000c000acfc                Fs::getcwd(Process*, char*, int)
                0x00000000c000ad26                Fs::initVFS()
                0x00000000c000ad50                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000af2c                File::File(char const*, Process*)
                0x00000000c000af2c                File::File(char const*, Process*)
                0x00000000c000afe8                File::open(FileOpenMode)
                0x00000000c000b046                File::close()
                0x00000000c000b0a6                File::seek(unsigned long long)
                0x00000000c000b0fc                File::tell(unsigned long long*)
                0x00000000c000b14c                File::rewind()
                0x00000000c000b160                File::unlink()
                0x00000000c000b1ac                File::rename(char const*)
                0x00000000c000b1fa                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b256                File::exists()
                0x00000000c000b294                File::stat(unsigned long long*, bool*)
                0x00000000c000b2f5                Fs::setcwd(Process*, char*)
                0x00000000c000b452                Directory::Directory(char const*, Process*)
                0x00000000c000b452                Directory::Directory(char const*, Process*)
                0x00000000c000b50e                Directory::open()
                0x00000000c000b56a                Directory::close()
                0x00000000c000b5ca                Directory::unlink()
                0x00000000c000b616                Directory::rename(char const*)
                0x00000000c000b664                Directory::exists()
                0x00000000c000b6a2                Directory::read(dirent*)
                0x00000000c000b6ee                Directory::create()
                0x00000000c000b73a                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000b740       0x86 hal/bus.32
                0x00000000c000b740                Bus::Bus(char const*)
                0x00000000c000b740                Bus::Bus(char const*)
                0x00000000c000b778                Bus::~Bus()
                0x00000000c000b778                Bus::~Bus()
                0x00000000c000b79c                Bus::~Bus()
 .text          0x00000000c000b7c6       0x96 hal/buzzer.32
                0x00000000c000b7c6                beepThread(void*)
                0x00000000c000b803                Krnl::beep(int, int, bool)
 .text          0x00000000c000b85c      0x465 hal/clock.32
                0x00000000c000b85c                User::loadClockSettings(int)
                0x00000000c000b8ae                Clock::Clock(char const*)
                0x00000000c000b8ae                Clock::Clock(char const*)
                0x00000000c000b8e4                Clock::~Clock()
                0x00000000c000b8e4                Clock::~Clock()
                0x00000000c000b908                Clock::~Clock()
                0x00000000c000b932                Clock::timeInSecondsLocal()
                0x00000000c000b97a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b9d3                datetimeToSeconds(datetime_t)
                0x00000000c000baf8                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bb58                secondsToDatetime(unsigned long long)
                0x00000000c000bc9c                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bcc1        0x1 
 .text          0x00000000c000bcc2      0x464 hal/device.32
                0x00000000c000bcc2                Device::hibernate()
                0x00000000c000bcc4                Device::wake()
                0x00000000c000bcc6                Device::detect()
                0x00000000c000bcc8                Device::disableLegacy()
                0x00000000c000bcca                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bccc                DriverlessDevice::close(int, int, void*)
                0x00000000c000bcd0                DriverlessDevice::detect()
                0x00000000c000bcd2                DriverlessDevice::open(int, int, void*)
                0x00000000c000bce6                Device::~Device()
                0x00000000c000bce6                Device::~Device()
                0x00000000c000bcf4                Device::~Device()
                0x00000000c000bd1c                Device::findAndLoadDriver()
                0x00000000c000bd2a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bd50                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bd90                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bdba                Device::getParent()
                0x00000000c000bdc6                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000bde4                Device::addChild(Device*)
                0x00000000c000be28                Device::removeAllChildren()
                0x00000000c000be6e                Device::hibernateAll()
                0x00000000c000be9e                Device::wakeAll()
                0x00000000c000bece                Device::detectAll()
                0x00000000c000befe                Device::disableLegacyAll()
                0x00000000c000bf00                Device::loadDriversForAll()
                0x00000000c000bf02                Device::closeAll()
                0x00000000c000bf38                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bf6e                Device::setName(char const*)
                0x00000000c000bf7c                Device::Device(char const*)
                0x00000000c000bf7c                Device::Device(char const*)
                0x00000000c000c078                Device::getName()
                0x00000000c000c082                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c082                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c0b8                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c0fc                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c126        0x2 
 .text          0x00000000c000c128       0x86 hal/diskctrl.32
                0x00000000c000c128                HardDiskController::HardDiskController(char const*)
                0x00000000c000c128                HardDiskController::HardDiskController(char const*)
                0x00000000c000c160                HardDiskController::~HardDiskController()
                0x00000000c000c160                HardDiskController::~HardDiskController()
                0x00000000c000c184                HardDiskController::~HardDiskController()
 .text          0x00000000c000c1ae       0xe2 hal/diskphys.32
                0x00000000c000c1ae                PhysicalDisk::eject()
                0x00000000c000c1b2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c1b2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c21a                PhysicalDisk::startCache()
                0x00000000c000c242                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c242                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c266                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c290        0x0 hal/fpu.32
 .text          0x00000000c000c290      0x360 hal/intctrl.32
                0x00000000c000c290                int_handler
                0x00000000c000c31a                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c364                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c4a7                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c4db                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c551                setupINTS()
                0x00000000c000c5ae                convertLegacyIRQNumber(int)
 .text          0x00000000c000c5f0      0x8be hal/keybrd.32
                0x00000000c000c5f0                startGUI(void*)
                0x00000000c000c65e                startGUIVESA(void*)
                0x00000000c000c6cc                sendKeyToTerminal(unsigned char)
                0x00000000c000c7a7                sendKeyboardToken(KeyboardToken)
                0x00000000c000cc91                clearInternalKeybuffer(VgaText*)
                0x00000000c000ccc6                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000ce24                Keyboard::Keyboard(char const*)
                0x00000000c000ce24                Keyboard::Keyboard(char const*)
                0x00000000c000ce60                Keyboard::~Keyboard()
                0x00000000c000ce60                Keyboard::~Keyboard()
                0x00000000c000ce84                Keyboard::~Keyboard()
 .text          0x00000000c000ceae      0x3f8 hal/logidisk.32
                0x00000000c000ceae                LogicalDisk::close(int, int, void*)
                0x00000000c000ceb2                LogicalDisk::~LogicalDisk()
                0x00000000c000ceb2                LogicalDisk::~LogicalDisk()
                0x00000000c000ced6                LogicalDisk::~LogicalDisk()
                0x00000000c000cf00                LogicalDisk::open(int, int, void*)
                0x00000000c000cf14                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cf4c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cf92                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cf92                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d052                LogicalDisk::assignDriveLetter()
                0x00000000c000d10c                LogicalDisk::mount()
                0x00000000c000d154                LogicalDisk::unmount()
                0x00000000c000d164                LogicalDisk::eject()
                0x00000000c000d178                LogicalDisk::unassignDriveLetter()
                0x00000000c000d1ce                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d23a                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000d2a6        0x2 
 .text          0x00000000c000d2a8       0x86 hal/mouse.32
                0x00000000c000d2a8                Mouse::Mouse(char const*)
                0x00000000c000d2a8                Mouse::Mouse(char const*)
                0x00000000c000d2e0                Mouse::~Mouse()
                0x00000000c000d2e0                Mouse::~Mouse()
                0x00000000c000d304                Mouse::~Mouse()
 .text          0x00000000c000d32e       0x90 hal/nic.32
                0x00000000c000d32e                NIC::getMAC()
                0x00000000c000d334                NIC::write(int, unsigned char*, int*)
                0x00000000c000d33a                NIC::NIC(char const*)
                0x00000000c000d33a                NIC::NIC(char const*)
                0x00000000c000d370                NIC::~NIC()
                0x00000000c000d370                NIC::~NIC()
                0x00000000c000d394                NIC::~NIC()
 .text          0x00000000c000d3be      0x33b hal/partition.32
                0x00000000c000d3be                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d466                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d6f9        0x3 
 .text          0x00000000c000d6fc       0x86 hal/serial.32
                0x00000000c000d6fc                Serial::Serial(char const*)
                0x00000000c000d6fc                Serial::Serial(char const*)
                0x00000000c000d734                Serial::~Serial()
                0x00000000c000d734                Serial::~Serial()
                0x00000000c000d758                Serial::~Serial()
 *fill*         0x00000000c000d782        0x2 
 .text          0x00000000c000d784      0x234 hal/timer.32
                0x00000000c000d784                Timer::Timer(char const*)
                0x00000000c000d784                Timer::Timer(char const*)
                0x00000000c000d7bc                Timer::~Timer()
                0x00000000c000d7bc                Timer::~Timer()
                0x00000000c000d7e0                Timer::~Timer()
                0x00000000c000d80a                Timer::read()
                0x00000000c000d815                setupTimer(int)
                0x00000000c000d850                timerHandler(unsigned int)
 .text          0x00000000c000d9b8      0x450 hal/vcache.32
                0x00000000c000d9b8                VCache::VCache(PhysicalDisk*)
                0x00000000c000d9b8                VCache::VCache(PhysicalDisk*)
                0x00000000c000db28                VCache::invalidateReadBuffer()
                0x00000000c000db38                VCache::writeWriteBuffer()
                0x00000000c000db84                VCache::~VCache()
                0x00000000c000db84                VCache::~VCache()
                0x00000000c000dbdc                VCache::~VCache()
                0x00000000c000dc04                VCache::write(unsigned long long, int, void*)
                0x00000000c000dcfe                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000de08      0x4d9 hal/video.32
                0x00000000c000de08                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000de54                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000dec4                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000df54                Video::clearScreen(unsigned int)
                0x00000000c000df88                Video::putpixel(int, int, unsigned int)
                0x00000000c000df96                Video::readPixelApprox(int, int)
                0x00000000c000dfaa                Video::Video(char const*)
                0x00000000c000dfaa                Video::Video(char const*)
                0x00000000c000dfe0                Video::~Video()
                0x00000000c000dfe0                Video::~Video()
                0x00000000c000e004                Video::~Video()
                0x00000000c000e02e                Video::isMonochrome()
                0x00000000c000e03a                Video::getWidth()
                0x00000000c000e046                Video::getHeight()
                0x00000000c000e052                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e10e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e276                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e2e1        0x3 
 .text          0x00000000c000e2e4     0x12d2 hw/acpi.32
                0x00000000c000e2e4                ACPI::close(int, int, void*)
                0x00000000c000e398                findRSDP()
                0x00000000c000e430                loadACPITables(unsigned char*)
                0x00000000c000e69c                findRSDT(unsigned char*)
                0x00000000c000e7f4                findDataTable(unsigned char*, char*)
                0x00000000c000e874                scanMADT()
                0x00000000c000ed2c                ACPI::ACPI()
                0x00000000c000ed2c                ACPI::ACPI()
                0x00000000c000ed80                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ee7c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ef48                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ef50                ACPI::detectPCI()
                0x00000000c000f170                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f1b8                ACPI::sleep()
                0x00000000c000f1d4                ACPI::open(int, int, void*)
 .text          0x00000000c000f5b6      0xba5 hw/cpu.32
                0x00000000c000f5b6                CPU::close(int, int, void*)
                0x00000000c000f5ba                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f5d6                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f5ee                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f662                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f6e6                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f714                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f742                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f770                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f79e                CPU::CPU()
                0x00000000c000f79e                CPU::CPU()
                0x00000000c000f82c                CPU::displayFeatures()
                0x00000000c000f82e                CPU::detectFeatures()
                0x00000000c000ff02                CPU::setupSMEP()
                0x00000000c000ff0e                CPU::setupUMIP()
                0x00000000c000ff18                CPU::setupTSC()
                0x00000000c000ff22                CPU::setupLargePages()
                0x00000000c000ff2c                CPU::setupPAT()
                0x00000000c000ff68                CPU::setupMTRR()
                0x00000000c000ff6a                CPU::setupGlobalPages()
                0x00000000c000ff74                CPU::allowUsermodeDataAccess()
                0x00000000c000ff86                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ff98                CPU::setupSMAP()
                0x00000000c000ffa6                CPU::setupFeatures()
                0x00000000c0010072                CPU::open(int, int, void*)
 .text          0x00000000c001015b       0xd8 krnl/bootmsg.32
                0x00000000c001015b                KeDisplaySplashScreen()
                0x00000000c00101d0                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010233        0x1 
 .text          0x00000000c0010234      0x585 krnl/env.32
                0x00000000c0010234                EnvVarContainer::getEnv(char const*)
                0x00000000c0010272                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010334                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010336                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010520                EnvVarContainer::__loadSystem()
                0x00000000c001053a                EnvVarContainer::__loadUser()
                0x00000000c001053c                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001053c                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001055e                EnvVarContainer::~EnvVarContainer()
                0x00000000c001055e                EnvVarContainer::~EnvVarContainer()
                0x00000000c001058e                Krnl::getEnv(Process*, char const*)
                0x00000000c00105f3                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001060d                Krnl::setEnvUser(char const*, char const*)
                0x00000000c001062c                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c001063f                Krnl::deleteEnvSystem(char const*)
                0x00000000c0010640                Krnl::deleteEnvUser(char const*)
                0x00000000c0010641                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0010642                Krnl::newProcessEnv(Process*)
                0x00000000c0010664                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c00106b0                Krnl::loadSystemEnv()
                0x00000000c00106de                Krnl::loadUserEnv()
                0x00000000c0010704                Krnl::flushEnv()
                0x00000000c0010705                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0010725                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00107b9       0x94 krnl/inlines.32
                0x00000000c00107b9                CPU::current()
                0x00000000c00107c5                operator new(unsigned long)
                0x00000000c00107ca                operator delete(void*)
                0x00000000c00107cf                disableIRQs()
                0x00000000c00107d1                enableIRQs()
                0x00000000c00107d3                lockScheduler()
                0x00000000c00107db                unlockScheduler()
                0x00000000c00107ea                lockStuff()
                0x00000000c00107f8                unlockStuff()
                0x00000000c0010832                Virt::getAKernelVAS()
                0x00000000c0010838                __not_memcpy
 .text          0x00000000c001084d        0xc krnl/panic.32
                0x00000000c001084d                KePanic(char const*)
 .text          0x00000000c0010859      0x142 krnl/powctrl.32
                0x00000000c0010859                Krnl::powerThread(void*)
                0x00000000c0010887                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c001089d                Krnl::userIOReceived()
                0x00000000c00108a8                Krnl::handlePowerButton()
                0x00000000c00108dd                Krnl::handleSleepButton()
                0x00000000c0010912                Krnl::setupPowerManager()
 .text          0x00000000c001099b       0x9b krnl/random.32
                0x00000000c001099b                KeRand()
                0x00000000c00109db                KeSeedRand(unsigned int)
                0x00000000c0010a04                KeInitRand()
 *fill*         0x00000000c0010a36        0x2 
 .text          0x00000000c0010a38      0x1bc krnl/resolve.32
                0x00000000c0010a38                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010bf4      0x313 krnl/signal.32
                0x00000000c0010bf4                KiSigKill(int)
                0x00000000c0010c08                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010c09                KiDefaultSignalHandlerPause(int)
                0x00000000c0010c35                KiDefaultSignalHandlerResume(int)
                0x00000000c0010c61                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010c66                KeInitSignals()
                0x00000000c0010cb1                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010ce7                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010d64                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010e53                KiCheckSignalZ
                0x00000000c0010e95                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010ed0                KiFinishSignalZ
 .text          0x00000000c0010f07      0xc76 krnl/syscalls.32
                0x00000000c0010f07                SysSeekDir(regs*)
                0x00000000c0010f0c                SysTellDir(regs*)
                0x00000000c0010f11                SysVerify(regs*)
                0x00000000c0010f1b                SysGetArgc(regs*)
                0x00000000c0010f2f                SysTTYName(regs*)
                0x00000000c0010f37                SysFormatDisk(regs*)
                0x00000000c0010f9e                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010ff2                SysGetDiskVolumeLabel(regs*)
                0x00000000c001104b                SysShutdown(regs*)
                0x00000000c00110d8                SysRealpath(regs*)
                0x00000000c0011127                SysReadDir(regs*)
                0x00000000c00111a7                SysIsATTY(regs*)
                0x00000000c0011201                SysSeek(regs*)
                0x00000000c001125b                SysTell(regs*)
                0x00000000c00112c8                SysSize(regs*)
                0x00000000c001133b                SysSizeFromFilename(regs*)
                0x00000000c00113e5                SysClose(regs*)
                0x00000000c0011445                SysOpenDir(regs*)
                0x00000000c00114c2                SysMakeDir(regs*)
                0x00000000c0011530                SysCloseDir(regs*)
                0x00000000c001157f                SysWait(regs*)
                0x00000000c00115a0                SysNotImpl(regs*)
                0x00000000c00115bb                SysPanic(regs*)
                0x00000000c00115d6                SysRmdir(regs*)
                0x00000000c0011634                SysUnlink(regs*)
                0x00000000c0011692                SysGetArgv(regs*)
                0x00000000c00116df                SysUSleep(regs*)
                0x00000000c0011708                SysSpawn(regs*)
                0x00000000c0011779                SysGetEnv(regs*)
                0x00000000c001182e                SysSetFatAttrib(regs*)
                0x00000000c0011897                SysPipe(regs*)
                0x00000000c00118dc                SysGetUnixTime(regs*)
                0x00000000c00118f0                string_ends_with(char const*, char const*)
                0x00000000c001193b                SysOpen(regs*)
                0x00000000c0011b3b                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011b7d        0x3 
 .text          0x00000000c0011b80      0x159 net/ethernet.32
                0x00000000c0011b80                KeSwitchEndian16(unsigned short)
                0x00000000c0011ba4                KeSwitchEndian32(unsigned int)
                0x00000000c0011bd4                EthernetCRC32(unsigned char*, int)
                0x00000000c0011c78                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0011cd9      0xd51 reg/cm.32
                0x00000000c0011cd9                CmOpen(char const*)
                0x00000000c0011df7                CmClose(Reghive_Tag*)
                0x00000000c0011e0d                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011e49                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0011ec0                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011eff                CmGetNext(Reghive_Tag*, int)
                0x00000000c0011f31                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011f6d                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0011f95                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0011fb6                CmExpand(Reghive_Tag*, int)
                0x00000000c0012031                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c00120b7                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c00121ab                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c00122e3                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012344                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012374                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c00123ab                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00123d5                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012415                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00124b9                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c00124e7                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0012684                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00126d1                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001274b                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001279e                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012862                zStrtok(char*, char const*)
                0x00000000c00128d4                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0012955                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00129f8                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0012a2a      0x545 reg/registry.32
                0x00000000c0012a2a                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012bb6                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0012d0b                Reg::getLine(char*, char*, char*)
                0x00000000c0012d42                Reg::readInt(char*, char*, int*)
                0x00000000c0012e30                Reg::readString(char*, char*, char*, int)
                0x00000000c0012eb1                Reg::readBool(char*, char*, bool*)
                0x00000000c0012ed6                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0012f02                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012f2e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0012f6f       0x36 sys/eject.32
                0x00000000c0012f6f                SysEject(regs*)
 .text          0x00000000c0012fa5       0x18 sys/exit.32
                0x00000000c0012fa5                SysExit(regs*)
 .text          0x00000000c0012fbd       0x1f sys/getcwd.32
                0x00000000c0012fbd                SysGetCwd(regs*)
 .text          0x00000000c0012fdc        0xc sys/getpid.32
                0x00000000c0012fdc                SysGetPID(regs*)
 .text          0x00000000c0012fe8       0x1a sys/getramdata.32
                0x00000000c0012fe8                SysGetRAMData(regs*)
 .text          0x00000000c0013002       0x82 sys/getvgaptr.32
                0x00000000c0013002                SysGetVGAPtr(regs*)
 .text          0x00000000c0013084       0xb9 sys/kill.32
                0x00000000c0013084                SysKill(regs*)
 .text          0x00000000c001313d       0xa8 sys/loaddll.32
                0x00000000c001313d                SysLoadDLL(regs*)
 .text          0x00000000c00131e5       0x68 sys/read.32
                0x00000000c00131e5                SysRead(regs*)
 .text          0x00000000c001324d       0x29 sys/registersignal.32
                0x00000000c001324d                SysRegisterSignal(regs*)
 .text          0x00000000c0013276      0x19c sys/registry.32
                0x00000000c0013276                SysRegistryGetTypeFromPath(regs*)
                0x00000000c00132ed                SysRegistryReadExtent(regs*)
                0x00000000c0013335                SysRegistryPathToExtentLookup(regs*)
                0x00000000c001335d                SysRegistryEnterDirectory(regs*)
                0x00000000c0013385                SysRegistryGetNext(regs*)
                0x00000000c00133ad                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00133e7                SysRegistryOpen(regs*)
                0x00000000c00133fb                SysRegistryClose(regs*)
 .text          0x00000000c0013412       0x55 sys/sbrk.32
                0x00000000c0013412                SysSbrk(regs*)
 .text          0x00000000c0013467       0x1c sys/setcwd.32
                0x00000000c0013467                SysSetCwd(regs*)
 .text          0x00000000c0013483       0x96 sys/settime.32
                0x00000000c0013483                SysSetTime(regs*)
 .text          0x00000000c0013519       0x4a sys/timezone.32
                0x00000000c0013519                SysTimezone(regs*)
 .text          0x00000000c0013563       0x68 sys/write.32
                0x00000000c0013563                SysWrite(regs*)
 .text          0x00000000c00135cb       0x62 sys/wsbe.32
                0x00000000c00135cb                SysWsbe(regs*)
 .text          0x00000000c001362d       0x25 sys/yield.32
                0x00000000c001362d                SysYield(regs*)
 .text          0x00000000c0013652     0x1203 thr/elf.32
                0x00000000c0013652                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00138d9                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013af8                Thr::runtimeReferenceHelper()
                0x00000000c0013b0b                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013b5a                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013e18                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014559                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001458b                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00145c2                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00145dc                Thr::loadDLL(char const*, bool)
                0x00000000c001481c                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0014855        0x3 
 .text          0x00000000c0014858     0x13b5 thr/prcssthr.32
                0x00000000c0014858                userModeEntryPoint(void*)
                0x00000000c0014880                changeTSS
                0x00000000c00148b0                switchToThread(ThreadControlBlock*)
                0x00000000c0014960                Process::addArgs(char**)
                0x00000000c00149cc                Process::Process(char const*, Process*, char**)
                0x00000000c00149cc                Process::Process(char const*, Process*, char**)
                0x00000000c0014bd8                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014bd8                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014dac                taskStartupFunction
                0x00000000c0014db8                Semaphore::Semaphore(int)
                0x00000000c0014db8                Semaphore::Semaphore(int)
                0x00000000c0014de8                Mutex::Mutex()
                0x00000000c0014de8                Mutex::Mutex()
                0x00000000c0014dfc                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014f04                Process::createUserThread()
                0x00000000c0014f24                setupMultitasking(void (*)())
                0x00000000c0015048                schedule()
                0x00000000c00150dc                Semaphore::tryAcquire()
                0x00000000c001519c                Semaphore::assertLocked(char const*)
                0x00000000c0015220                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015248                blockTask(TaskState)
                0x00000000c0015280                waitTask(int, int*, int)
                0x00000000c00152c4                milliTenthSleepUntil(unsigned int)
                0x00000000c0015364                milliTenthSleep(unsigned int)
                0x00000000c0015378                sleep(unsigned int)
                0x00000000c0015388                Semaphore::acquire()
                0x00000000c0015450                taskReturned
                0x00000000c0015494                Thr::processFromPID(int)
                0x00000000c0015540                unblockTask(ThreadControlBlock*)
                0x00000000c00155ec                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00158c0                cleanerTaskFunction(void*)
                0x00000000c00159c8                terminateTask(int)
                0x00000000c0015ab4                Thr::terminateFromIRQ(int)
                0x00000000c0015ac4                Semaphore::release()
 .text          0x00000000c0015c0d      0xbec vm86/vm8086.32
                0x00000000c0015c0d                Vm::inbv(unsigned short)
                0x00000000c0015c20                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015c56                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015c66                Vm::getSegment(unsigned int)
                0x00000000c0015c6e                Vm::getOffset(unsigned int)
                0x00000000c0015c73                Vm::mainloop2()
                0x00000000c0015cad                Vm::mainVm8086Loop(void*)
                0x00000000c0015cbd                Vm::mainloop3(unsigned long)
                0x00000000c0015ce3                Vm::initialise8086()
                0x00000000c0015d26                Vm::finish8086()
                0x00000000c0015d87                Vm::getOutput8086(unsigned char*)
                0x00000000c0015dac                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015e65                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015ff2                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001607b                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001608c                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001609e                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00160af                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00160c4                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00160da                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00160ef                Vm::faultHandler(regs*)
 .text          0x00000000c00167f9      0xabf arch/i386/hal.32
                0x00000000c00167f9                noCopro(unsigned long)
                0x00000000c00167fa                nmiHandler(regs*, void*)
                0x00000000c0016813                doubleFault(regs*, void*)
                0x00000000c001682c                displayDebugInfo(regs*)
                0x00000000c0016b88                HalSystemIdle()
                0x00000000c0016c04                displayProgramFault(char const*)
                0x00000000c0016c50                gpFault(regs*, void*)
                0x00000000c0016cb7                pgFault(regs*, void*)
                0x00000000c0016d40                otherISRHandler(regs*, void*)
                0x00000000c0016d74                opcodeFault(regs*, void*)
                0x00000000c0016df7                i386SaveCoprocessor(void*)
                0x00000000c0016e0b                i386LoadCoprocessor(void*)
                0x00000000c0016e1f                x87EmulHandler(regs*, void*)
                0x00000000c0016ebc                HalInitialiseCoprocessor()
                0x00000000c0016f6a                HalPanic(char const*)
                0x00000000c0017076                HalQueryPerformanceCounter()
                0x00000000c0017091                HalInitialise()
                0x00000000c0017247                HalMakeBeep(int)
                0x00000000c0017281                HalGetRand()
                0x00000000c0017284                HalEndOfInterrupt(int)
                0x00000000c00172b5                HalRestart()
                0x00000000c00172b6                HalShutdown()
                0x00000000c00172b7                HalSleep()
 .text          0x00000000c00172b8      0x2dc arch/i386/pic.32
                0x00000000c00172b8                picIoWait()
                0x00000000c00172c0                picDisable()
                0x00000000c00172f4                picGetIRQReg(int)
                0x00000000c0017370                picOpen()
                0x00000000c00174f4                picEOI(int)
 .text          0x00000000c0017594      0x66e arch/i386/rtc.32
                0x00000000c0017594                RTC::open(int, int, void*)
                0x00000000c0017598                RTC::close(int, int, void*)
                0x00000000c001759c                RTC::timeInSecondsUTC()
                0x00000000c00175ae                RTC::timeInDatetimeUTC()
                0x00000000c00175d4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0017612                RTC::~RTC()
                0x00000000c0017612                RTC::~RTC()
                0x00000000c0017636                RTC::~RTC()
                0x00000000c0017660                RTC::get_update_in_progress_flag()
                0x00000000c001767a                RTC::completeRTCRefresh()
                0x00000000c0017954                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0017b02                rtcIRQHandler(regs*, void*)
                0x00000000c0017b48                RTC::RTC()
                0x00000000c0017b48                RTC::RTC()
 *fill*         0x00000000c0017c02        0x2 
 .text          0x00000000c0017c04      0x1f4 arch/i386/vga.32
                0x00000000c0017c04                HalConsoleScroll(int, int)
                0x00000000c0017d0c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017d70                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0017df8     0x1487 fs/fat/vfslink.32
                0x00000000c0017df8                FAT::getName()
                0x00000000c0017e00                FAT::tell(void*, unsigned long long*)
                0x00000000c0017e3c                FAT::stat(void*, unsigned long long*)
                0x00000000c0017e78                FAT::~FAT()
                0x00000000c0017e78                FAT::~FAT()
                0x00000000c0017e9c                FAT::~FAT()
                0x00000000c0017ec4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017f68                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018048                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001822c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018448                FAT::allocateSwapfile(char const*, int)
                0x00000000c0018608                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0018778                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00187d8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0018838                FAT::close(void*)
                0x00000000c001888c                FAT::closeDir(void*)
                0x00000000c00188e0                FAT::seek(void*, unsigned long long)
                0x00000000c0018938                fatWrapperReadDisk
                0x00000000c0018978                fatWrapperWriteDisk
                0x00000000c00189b8                fatWrapperIoctl
                0x00000000c0018ad8                FAT::FAT()
                0x00000000c0018ad8                FAT::FAT()
                0x00000000c0018b30                FAT::fixFilepath(char*)
                0x00000000c0018b70                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0018ce4                FAT::openDir(char const*, void**)
                0x00000000c0018d94                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018e8c                FAT::unlink(char const*)
                0x00000000c0018f0c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00190c4                FAT::rename(char const*, char const*)
                0x00000000c0019190                FAT::mkdir(char const*)
                0x00000000c0019210                FAT::exists(char const*)
 *fill*         0x00000000c001927f        0x1 
 .text          0x00000000c0019280       0x94 fs/iso9660/helper.32
                0x00000000c0019280                isoReadDiscSectorHelper
                0x00000000c00192dc                iso_kprintf
                0x00000000c00192f8                iso_kprintfd
 .text          0x00000000c0019314      0x714 fs/iso9660/vfslink.32
                0x00000000c0019314                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001931a                ISO9660::getName()
                0x00000000c0019320                ISO9660::closeDir(void*)
                0x00000000c001932a                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019330                ISO9660::unlink(char const*)
                0x00000000c0019336                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001933c                ISO9660::rename(char const*, char const*)
                0x00000000c0019342                ISO9660::mkdir(char const*)
                0x00000000c0019348                ISO9660::~ISO9660()
                0x00000000c0019348                ISO9660::~ISO9660()
                0x00000000c001936c                ISO9660::~ISO9660()
                0x00000000c0019394                ISO9660::exists(char const*)
                0x00000000c00193a8                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001948e                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c00194d6                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019518                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019556                ISO9660::stat(void*, unsigned long long*)
                0x00000000c00195a8                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c00196ea                ISO9660::close(void*)
                0x00000000c001971a                ISO9660::openDir(char const*, void**)
                0x00000000c00197f4                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001990f                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001998e                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019a00                ISO9660::ISO9660()
                0x00000000c0019a00                ISO9660::ISO9660()
 .text          0x00000000c0019a28      0x26c hal/sound/sndcard.32
                0x00000000c0019a28                SoundCard::beginPlayback()
                0x00000000c0019a36                SoundCard::stopPlayback()
                0x00000000c0019a44                SoundCard::SoundCard(char const*)
                0x00000000c0019a44                SoundCard::SoundCard(char const*)
                0x00000000c0019ae2                SoundCard::~SoundCard()
                0x00000000c0019ae2                SoundCard::~SoundCard()
                0x00000000c0019b06                SoundCard::~SoundCard()
                0x00000000c0019b30                SoundCard::configureRates(int, int, int)
                0x00000000c0019b60                SoundCard::getSamples16(int, short*)
                0x00000000c0019bbc                SoundCard::getSamples32(int, int*)
                0x00000000c0019c42                SoundCard::addChannel(SoundPort*)
                0x00000000c0019c80                SoundCard::removeChannel(int)
 .text          0x00000000c0019c94      0x393 hal/sound/sndport.32
                0x00000000c0019c94                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019c94                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019d20                SoundPort::~SoundPort()
                0x00000000c0019d20                SoundPort::~SoundPort()
                0x00000000c0019d54                SoundPort::unpause()
                0x00000000c0019d60                SoundPort::pause()
                0x00000000c0019d6c                SoundPort::getBufferUsed()
                0x00000000c0019d74                SoundPort::getBufferSize()
                0x00000000c0019d7c                SoundPort::buffer16(short*, int)
                0x00000000c0019e08                SoundPort::buffer32(int*, int)
                0x00000000c0019e94                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019f64                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001a027        0x0 hw/bus/isa.32
 *fill*         0x00000000c001a027        0x1 
 .text          0x00000000c001a028      0xbc5 hw/bus/pci.32
                0x00000000c001a028                PCI::open(int, int, void*)
                0x00000000c001a046                PCI::close(int, int, void*)
                0x00000000c001a04a                PCI::PCI()
                0x00000000c001a04a                PCI::PCI()
                0x00000000c001a0e2                PCI::readBAR8(unsigned int, int)
                0x00000000c001a0fe                PCI::readBAR16(unsigned int, int)
                0x00000000c001a11c                PCI::readBAR32(unsigned int, int)
                0x00000000c001a138                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001a158                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001a17a                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001a19a                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a210                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a2ba                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a2de                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a306                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a350                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a378                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a39c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a3c0                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a3e8                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a44c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001a532                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a7fc                PCI::checkBus(unsigned char)
                0x00000000c001a820                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a9a6                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001ab22                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001ab94                PCI::detect()
 *fill*         0x00000000c001abed        0x1 
 .text          0x00000000c001abee      0xb96 hw/diskctrl/ide.32
                0x00000000c001abee                IDE::close(int, int, void*)
                0x00000000c001abf2                IDE::IDE()
                0x00000000c001abf2                IDE::IDE()
                0x00000000c001ac26                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ac38                selectDrive(unsigned char, unsigned char)
                0x00000000c001ac3a                IDE::getBase(unsigned char)
                0x00000000c001ac4c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ad0c                IDE::read(unsigned char, unsigned char)
                0x00000000c001adc0                IDE::waitInterrupt(unsigned char)
                0x00000000c001ae22                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ae3e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ae5a                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001aea4                IDE::open(int, int, void*)
                0x00000000c001b2de                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b3ae                IDE::detect()
                0x00000000c001b676                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b730                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b784      0x32c hw/diskctrl/satabus.32
                0x00000000c001b784                SATABus::close(int, int, void*)
                0x00000000c001b788                SATABus::detect()
                0x00000000c001b78a                SATABus::SATABus()
                0x00000000c001b78a                SATABus::SATABus()
                0x00000000c001b810                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b842                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b88a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b8aa                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b8d4                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001b9e6                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001ba90                SATABus::open(int, int, void*)
 .text          0x00000000c001bab0      0x96d hw/diskphys/ata.32
                0x00000000c001bab0                ATA::close(int, int, void*)
                0x00000000c001bad4                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001bad6                ATA::ATA()
                0x00000000c001bad6                ATA::ATA()
                0x00000000c001bb04                ATA::flush(bool)
                0x00000000c001bb52                ATA::readyForCommand()
                0x00000000c001bb9e                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001bf62                ATA::detectCHS()
                0x00000000c001bf8c                ATA::open(int, int, void*)
                0x00000000c001c058                combineCharAndColour(char, unsigned char)
                0x00000000c001c069                combineColours(unsigned char, unsigned char)
                0x00000000c001c076                ATA::read(unsigned long long, int, void*)
                0x00000000c001c24c                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001c41d        0x1 
 .text          0x00000000c001c41e      0x612 hw/diskphys/atapi.32
                0x00000000c001c41e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c424                ATAPI::close(int, int, void*)
                0x00000000c001c448                ATAPI::ATAPI()
                0x00000000c001c448                ATAPI::ATAPI()
                0x00000000c001c476                ATAPI::readyForCommand()
                0x00000000c001c4c8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c788                ATAPI::diskRemoved()
                0x00000000c001c7c2                ATAPI::eject()
                0x00000000c001c80a                ATAPI::diskInserted()
                0x00000000c001c816                ATAPI::detectMedia()
                0x00000000c001c8d6                ATAPI::open(int, int, void*)
                0x00000000c001c9b6                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ca30      0x7ff hw/diskphys/sata.32
                0x00000000c001ca30                SATA::close(int, int, void*)
                0x00000000c001ca54                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ca56                SATA::open(int, int, void*)
                0x00000000c001cb00                SATA::SATA()
                0x00000000c001cb00                SATA::SATA()
                0x00000000c001cb2e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cd80                SATA::read(unsigned long long, int, void*)
                0x00000000c001cfd0                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d22f        0x1 
 .text          0x00000000c001d230      0x5d8 hw/diskphys/satapi.32
                0x00000000c001d230                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001d236                SATAPI::close(int, int, void*)
                0x00000000c001d25a                SATAPI::SATAPI()
                0x00000000c001d25a                SATAPI::SATAPI()
                0x00000000c001d288                SATAPI::diskRemoved()
                0x00000000c001d28a                SATAPI::diskInserted()
                0x00000000c001d2a6                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001d58c                SATAPI::eject()
                0x00000000c001d5c8                SATAPI::detectMedia()
                0x00000000c001d61e                SATAPI::open(int, int, void*)
                0x00000000c001d71e                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d808      0x45b hw/intctrl/apic.32
                0x00000000c001d808                IOAPIC::close(int, int, void*)
                0x00000000c001d80e                apicGetBase()
                0x00000000c001d854                IOAPIC::IOAPIC()
                0x00000000c001d854                IOAPIC::IOAPIC()
                0x00000000c001d87c                apicOpen()
                0x00000000c001d9f8                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001da2a                IOAPIC::read(int)
                0x00000000c001da52                IOAPIC::open(int, int, void*)
                0x00000000c001db38                IOAPIC::write(int, int)
                0x00000000c001db64                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001dc63        0x1 
 .text          0x00000000c001dc64       0xf0 hw/timer/apictimer.32
                0x00000000c001dc64                APICTimer::close(int, int, void*)
                0x00000000c001dc6c                apicTimerHandler(regs*, void*)
                0x00000000c001dc94                APICTimer::open(int, int, void*)
                0x00000000c001dd04                APICTimer::write(int)
                0x00000000c001dd2c                APICTimer::APICTimer()
                0x00000000c001dd2c                APICTimer::APICTimer()
 .text          0x00000000c001dd54      0x1ad hw/timer/pit.32
                0x00000000c001dd54                PIT::write(int)
                0x00000000c001ddd8                pitHandler(regs*, void*)
                0x00000000c001de00                PIT::open(int, int, void*)
                0x00000000c001de50                PIT::close(int, int, void*)
                0x00000000c001de80                PIT::PIT()
                0x00000000c001de80                PIT::PIT()
 *fill*         0x00000000c001df01        0xf 
 .text          0x00000000c001df10       0x83 arch/i386/avx.32
                0x00000000c001df10                avxDetect
                0x00000000c001df3a                avxSave
                0x00000000c001df4b                avxLoad
                0x00000000c001df5c                avxInit
                0x00000000c001df7e                avxClose
                0x00000000c001df7f                wouldSheSayYes
 *fill*         0x00000000c001df93        0xd 
 .text          0x00000000c001dfa0      0x2ec arch/i386/interrupt.32
                0x00000000c001dfa0                isr0
                0x00000000c001dfb0                isr1
                0x00000000c001dfba                isr2
                0x00000000c001dfc4                isr3
                0x00000000c001dfce                isr4
                0x00000000c001dfd8                isr5
                0x00000000c001dfe2                isr6
                0x00000000c001dfec                isr7
                0x00000000c001dff6                isr8
                0x00000000c001dffe                isr9
                0x00000000c001e008                isr10
                0x00000000c001e010                isr11
                0x00000000c001e018                isr12
                0x00000000c001e020                isr13
                0x00000000c001e03a                isr14
                0x00000000c001e042                isr15
                0x00000000c001e04c                isr16
                0x00000000c001e056                isr17
                0x00000000c001e060                isr18
                0x00000000c001e06a                irq3
                0x00000000c001e074                irq4
                0x00000000c001e07e                irq5
                0x00000000c001e088                irq6
                0x00000000c001e092                irq7
                0x00000000c001e09c                irq8
                0x00000000c001e0a6                irq9
                0x00000000c001e0b0                irq10
                0x00000000c001e0ba                irq11
                0x00000000c001e0c4                irq12
                0x00000000c001e0ce                irq13
                0x00000000c001e0d8                irq14
                0x00000000c001e0e2                irq15
                0x00000000c001e0ec                irq1
                0x00000000c001e0f3                irq2
                0x00000000c001e0fa                isr96
                0x00000000c001e101                irq0
                0x00000000c001e106                int_common_stub
                0x00000000c001e138                syscall_common_stub
                0x00000000c001e23c                irq16
                0x00000000c001e246                irq17
                0x00000000c001e250                irq18
                0x00000000c001e25a                irq19
                0x00000000c001e264                irq20
                0x00000000c001e26e                irq21
                0x00000000c001e278                irq22
                0x00000000c001e282                irq23
 *fill*         0x00000000c001e28c        0x4 
 .text          0x00000000c001e290       0x10 arch/i386/rdrand.32
                0x00000000c001e290                i386GetRDRAND
 .text          0x00000000c001e2a0       0x39 arch/i386/sse.32
                0x00000000c001e2a0                absolutelyNoChanceInHell
                0x00000000c001e2a0                sseDetect
                0x00000000c001e2b8                sseSave
                0x00000000c001e2c0                sseLoad
                0x00000000c001e2c8                sseInit
                0x00000000c001e2d8                sseClose
 *fill*         0x00000000c001e2d9        0x7 
 .text          0x00000000c001e2e0       0x49 arch/i386/x87.32
                0x00000000c001e2e6                x87Detect
                0x00000000c001e301                x87Save
                0x00000000c001e308                x87Load
                0x00000000c001e30f                x87Init
                0x00000000c001e328                x87Close
 *fill*         0x00000000c001e329        0x3 
 .text          0x00000000c001e32c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e351        0x0 crtn.32
 *fill*         0x00000000c001e351        0x3 
 .text          0x00000000c001e354      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e354                __divdi3
 *fill*         0x00000000c001e49f        0x1 
 .text          0x00000000c001e4a0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e4a0                __moddi3
 *fill*         0x00000000c001e61e        0x2 
 .text          0x00000000c001e620       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001e620                __udivdi3
 *fill*         0x00000000c001e71f        0x1 
 .text          0x00000000c001e720      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001e720                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e840        0x0
 .iplt          0x00000000c001e840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e83a        0xf
 .init          0x00000000c001e83a        0x3 crti.32
                0x00000000c001e83a                _init
 .init          0x00000000c001e83d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e842        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e847        0x2 crtn.32

.fini           0x00000000c001e849        0xa
 .fini          0x00000000c001e849        0x3 crti.32
                0x00000000c001e849                _fini
 .fini          0x00000000c001e84c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e851        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e854       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e854       0x23 core/computer.32
                0x00000000c001e854                Computer::~Computer()
                0x00000000c001e854                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e878       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e878       0x2a core/computer.32
                0x00000000c001e878                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e8a2       0x21
 .text._Z10idleCommonv
                0x00000000c001e8a2       0x21 core/idle.32
                0x00000000c001e8a2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e8c4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e8c4        0x2 core/unixfile.32
                0x00000000c001e8c4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e8c4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e8c6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e8c6       0x42 core/unixfile.32
                0x00000000c001e8c6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e8c6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e908       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e908       0xd3 core/unixfile.32
                0x00000000c001e908                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e9dc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e9dc        0x7 core/unixfile.32
                0x00000000c001e9dc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e9e4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e9e4       0xa1 core/unixfile.32
                0x00000000c001e9e4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ea86        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ea86        0x8 core/unixfile.32
                0x00000000c001ea86                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ea8e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ea8e       0x1a hal/device.32
                0x00000000c001ea8e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ea8e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eaa8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eaa8       0x2a hal/device.32
                0x00000000c001eaa8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ead2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ead2       0xdc hal/device.32
                0x00000000c001ead2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ebae       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ebae       0x42 hal/device.32
                0x00000000c001ebae                LinkedList<Device>::LinkedList()
                0x00000000c001ebae                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ebf0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ebf0       0x1c hal/timer.32
                0x00000000c001ebf0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec0c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec0c        0x7 hal/timer.32
                0x00000000c001ec0c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ec14       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ec14       0xbc hal/timer.32
                0x00000000c001ec14                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ecd0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ecd0       0xda hal/timer.32
                0x00000000c001ecd0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001edac       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001edac       0x23 hw/acpi.32
                0x00000000c001edac                ACPI::~ACPI()
                0x00000000c001edac                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001edd0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001edd0       0x2a hw/acpi.32
                0x00000000c001edd0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001edfc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001edfc        0x2 hw/acpi.32
                0x00000000c001edfc                LinkedList<Device>::~LinkedList()
                0x00000000c001edfc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ee00       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ee00       0x1c hw/acpi.32
                0x00000000c001ee00                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ee1c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ee1c        0x7 hw/acpi.32
                0x00000000c001ee1c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ee24       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ee24       0xb8 hw/acpi.32
                0x00000000c001ee24                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001eedc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001eedc       0x23 hw/cpu.32
                0x00000000c001eedc                CPU::~CPU()
                0x00000000c001eedc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ef00       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ef00       0x2a hw/cpu.32
                0x00000000c001ef00                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ef2c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ef2c        0x8 sys/kill.32
                0x00000000c001ef2c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ef34        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ef34        0x2 thr/prcssthr.32
                0x00000000c001ef34                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ef34                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ef38       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ef38       0x49 thr/prcssthr.32
                0x00000000c001ef38                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ef38                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ef84       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ef84       0x42 thr/prcssthr.32
                0x00000000c001ef84                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ef84                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001efc6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001efc6       0x23 hw/bus/pci.32
                0x00000000c001efc6                PCI::~PCI()
                0x00000000c001efc6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001efea       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001efea       0x2a hw/bus/pci.32
                0x00000000c001efea                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f014       0x23
 .text._ZN3IDED2Ev
                0x00000000c001f014       0x23 hw/diskctrl/ide.32
                0x00000000c001f014                IDE::~IDE()
                0x00000000c001f014                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f038       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f038       0x2a hw/diskctrl/ide.32
                0x00000000c001f038                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001f062       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001f062       0x23 hw/diskctrl/satabus.32
                0x00000000c001f062                SATABus::~SATABus()
                0x00000000c001f062                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001f086       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001f086       0x2a hw/diskctrl/satabus.32
                0x00000000c001f086                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001f0b0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f0b0       0x23 hw/diskphys/ata.32
                0x00000000c001f0b0                ATA::~ATA()
                0x00000000c001f0b0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f0d4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f0d4       0x2a hw/diskphys/ata.32
                0x00000000c001f0d4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f0fe       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f0fe       0x23 hw/diskphys/atapi.32
                0x00000000c001f0fe                ATAPI::~ATAPI()
                0x00000000c001f0fe                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f122       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f122       0x2a hw/diskphys/atapi.32
                0x00000000c001f122                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001f14c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001f14c       0x23 hw/diskphys/sata.32
                0x00000000c001f14c                SATA::~SATA()
                0x00000000c001f14c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001f170       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001f170       0x2a hw/diskphys/sata.32
                0x00000000c001f170                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001f19a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001f19a       0x23 hw/diskphys/satapi.32
                0x00000000c001f19a                SATAPI::~SATAPI()
                0x00000000c001f19a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001f1be       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001f1be       0x2a hw/diskphys/satapi.32
                0x00000000c001f1be                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001f1e8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f1e8       0x23 hw/intctrl/apic.32
                0x00000000c001f1e8                IOAPIC::~IOAPIC()
                0x00000000c001f1e8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f20c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f20c       0x2a hw/intctrl/apic.32
                0x00000000c001f20c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f238       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f238       0x23 hw/timer/apictimer.32
                0x00000000c001f238                APICTimer::~APICTimer()
                0x00000000c001f238                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f25c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f25c       0x2a hw/timer/apictimer.32
                0x00000000c001f25c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f288       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f288       0x23 hw/timer/pit.32
                0x00000000c001f288                PIT::~PIT()
                0x00000000c001f288                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f2ac       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f2ac       0x2a hw/timer/pit.32
                0x00000000c001f2ac                PIT::~PIT()

.rodata         0x00000000c001f2d6     0x2c2e
                0x00000000c001f2d6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f2d6        0x2 
 .ctors         0x00000000c001f2d8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f2dc        0x4 core/unixfile.32
 .ctors         0x00000000c001f2e0        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f2e4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f2e8                end_ctors = .
                0x00000000c001f2e8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f2e8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f2ec        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f2ec                __DTOR_END__
                0x00000000c001f2f0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f2f0       0x10 
 .rodata        0x00000000c001f300      0x101 acpica/utclib.32
                0x00000000c001f300                AcpiGbl_Ctypes
 *fill*         0x00000000c001f401        0x3 
 .rodata        0x00000000c001f404       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f41c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f466       0x1a 
 .rodata        0x00000000c001f480       0xed fs/fat/ff.32
 *fill*         0x00000000c001f56d       0x13 
 .rodata        0x00000000c001f580      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f980       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001f9ef      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001fb04       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001fb6c       0x2c core/computer.32
                0x00000000c001fb6c                vtable for Computer
 .rodata.str1.4
                0x00000000c001fb98       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001fbc8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001fbd4       0x17 core/main.32
 *fill*         0x00000000c001fbeb        0x1 
 .rodata.str1.4
                0x00000000c001fbec       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fc91       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fce9       0x39 core/pipe.32
 *fill*         0x00000000c001fd22        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001fd24       0x1c core/pipe.32
                0x00000000c001fd24                vtable for Pipe
 .rodata.str1.1
                0x00000000c001fd40       0x2b core/terminal.32
 *fill*         0x00000000c001fd6b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001fd6c       0x1c core/terminal.32
                0x00000000c001fd6c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001fd88       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001fdaa       0x15 core/unixfile.32
 *fill*         0x00000000c001fdbf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001fdc0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001fe0b        0x8 core/unixfile.32
 *fill*         0x00000000c001fe13        0x1 
 .rodata.str1.4
                0x00000000c001fe14       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001fe34       0x1c core/unixfile.32
                0x00000000c001fe34                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001fe50       0x1c core/unixfile.32
                0x00000000c001fe50                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001fe6c      0x198 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020004      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002012a       0x33 coreobjs/c++.32
 *fill*         0x00000000c002015d        0x3 
 .rodata        0x00000000c0020160      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00202b0       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c00202b0       0x68 fs/vfs.32
                0x00000000c00202b0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020318       0x1c fs/vfs.32
                0x00000000c0020318                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020334       0x1c fs/vfs.32
                0x00000000c0020334                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0020350       0x2c hal/bus.32
                0x00000000c0020350                vtable for Bus
 .rodata.str1.1
                0x00000000c002037c       0x1e hal/clock.32
 *fill*         0x00000000c002039a        0x2 
 .rodata._ZTV5Clock
                0x00000000c002039c       0x3c hal/clock.32
                0x00000000c002039c                vtable for Clock
 *fill*         0x00000000c00203d8        0x8 
 .rodata        0x00000000c00203e0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020410       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020468       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020468       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0020468       0x2c hal/device.32
                0x00000000c0020468                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020494       0x2c hal/device.32
                0x00000000c0020494                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00204c0       0x2c hal/diskctrl.32
                0x00000000c00204c0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00204ec       0x38 hal/diskphys.32
                0x00000000c00204ec                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020524       0x3e hal/intctrl.32
 *fill*         0x00000000c0020562        0x2 
 .rodata.str1.4
                0x00000000c0020564       0x5d hal/intctrl.32
 .rodata        0x00000000c00205c1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0020614       0x34 hal/keybrd.32
                0x00000000c0020614                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020648       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002068c       0x2c hal/logidisk.32
                0x00000000c002068c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00206b8       0x2c hal/mouse.32
                0x00000000c00206b8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c00206e4       0x34 hal/nic.32
                0x00000000c00206e4                vtable for NIC
 .rodata.str1.1
                0x00000000c0020718        0xb hal/partition.32
 *fill*         0x00000000c0020723        0x1 
 .rodata._ZTV6Serial
                0x00000000c0020724       0x44 hal/serial.32
                0x00000000c0020724                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020768       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020768        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020768       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020768       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0020768       0x30 hal/timer.32
                0x00000000c0020768                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020798       0x10 hal/vcache.32
                0x00000000c0020798                vtable for VCache
 .rodata.str1.1
                0x00000000c00207a8       0x93 hal/video.32
 *fill*         0x00000000c002083b        0x1 
 .rodata._ZTV5Video
                0x00000000c002083c       0x4c hal/video.32
                0x00000000c002083c                vtable for Video
 .rodata.str1.4
                0x00000000c0020888       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0020923      0x174 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0020a97       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0020a97        0x8 hw/acpi.32
 *fill*         0x00000000c0020a97        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020a98       0x2c hw/acpi.32
                0x00000000c0020a98                vtable for ACPI
 .rodata.str1.1
                0x00000000c0020ac4      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020c31        0x3 
 .rodata._ZTV3CPU
                0x00000000c0020c34       0x2c hw/cpu.32
                0x00000000c0020c34                vtable for CPU
 .rodata.str1.1
                0x00000000c0020c60       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0020c9c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020d2d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0020df6       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020e3e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0020e69       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020edf       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020f24        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0020f2e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0020f4f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0020fe5       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0021039       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0021065      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0021231       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0021288      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021398       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021398       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021398       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021398        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0021398       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0021438       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021468      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c00215f8       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002166b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0021680       0x3c arch/i386/rtc.32
                0x00000000c0021680                vtable for RTC
 .rodata.str1.1
                0x00000000c00216bc       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00216fd        0x3 
 .rodata._ZTV3FAT
                0x00000000c0021700       0x68 fs/fat/vfslink.32
                0x00000000c0021700                vtable for FAT
 .rodata.str1.1
                0x00000000c0021768       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0021768      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00218a0       0x68 fs/iso9660/vfslink.32
                0x00000000c00218a0                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0021908       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c002194c       0x34 hal/sound/sndcard.32
                0x00000000c002194c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0021980       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00219bf       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00219f7       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0021a98       0x2c hw/bus/pci.32
                0x00000000c0021a98                vtable for PCI
 .rodata.str1.1
                0x00000000c0021ac4       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0021b4b        0x1 
 .rodata._ZTV3IDE
                0x00000000c0021b4c       0x2c hw/diskctrl/ide.32
                0x00000000c0021b4c                vtable for IDE
 .rodata.str1.4
                0x00000000c0021b78       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0021b9c       0x2c hw/diskctrl/satabus.32
                0x00000000c0021b9c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0021bc8       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0021bda        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021bdc       0x38 hw/diskphys/ata.32
                0x00000000c0021bdc                vtable for ATA
 .rodata.str1.1
                0x00000000c0021c14        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0021c21        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0021c24       0x38 hw/diskphys/atapi.32
                0x00000000c0021c24                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021c5c       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0021cd8       0x38 hw/diskphys/sata.32
                0x00000000c0021cd8                vtable for SATA
 .rodata.str1.1
                0x00000000c0021d10       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0021dfa        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0021dfc       0x38 hw/diskphys/satapi.32
                0x00000000c0021dfc                vtable for SATAPI
 .rodata        0x00000000c0021e34        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0021e3c       0x2c hw/intctrl/apic.32
                0x00000000c0021e3c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0021e68       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0021e83        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021e84       0x30 hw/timer/apictimer.32
                0x00000000c0021e84                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021eb4       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021ed1        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021ed4       0x30 hw/timer/pit.32
                0x00000000c0021ed4                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021f04      0x4e1
 *(.data)
 .data          0x00000000c0021f04        0x0 crti.32
 .data          0x00000000c0021f04        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021f04                __dso_handle
 .data          0x00000000c0021f08        0x0 acpica/utclib.32
 .data          0x00000000c0021f08        0x0 core/malloc.32
 .data          0x00000000c0021f08        0x0 libk/ctype.32
 .data          0x00000000c0021f08        0x0 libk/string.32
 .data          0x00000000c0021f08        0x0 fs/fat/diskio.32
 .data          0x00000000c0021f08        0x0 fs/fat/ff.32
 .data          0x00000000c0021f08        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0021f08        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0021f08        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0021f08        0x0 core/computer.32
 .data          0x00000000c0021f08        0x0 core/gdt.32
 .data          0x00000000c0021f08        0x0 core/idle.32
 .data          0x00000000c0021f08        0x0 core/idt.32
 .data          0x00000000c0021f08        0x4 core/kheap.32
 .data          0x00000000c0021f0c        0x0 core/main.32
 .data          0x00000000c0021f0c        0x4 core/physmgr.32
                0x00000000c0021f0c                Phys::bitmap
 .data          0x00000000c0021f10        0x0 core/pipe.32
 *fill*         0x00000000c0021f10       0x10 
 .data          0x00000000c0021f20       0x60 core/terminal.32
                0x00000000c0021f20                VgaText::hiddenOut
                0x00000000c0021f40                ansiToVGAMappings
 .data          0x00000000c0021f80        0x0 core/tss.32
 .data          0x00000000c0021f80        0x4 core/unixfile.32
                0x00000000c0021f80                UnixFile::nextFd
 .data          0x00000000c0021f84       0x15 core/virtmgr.32
                0x00000000c0021f84                Virt::pageAllocPtr
                0x00000000c0021f88                Virt::bitmap
                0x00000000c0021f8c                Virt::swapfileSectorsPerPage
                0x00000000c0021f90                Virt::swapfileLength
                0x00000000c0021f94                Virt::swapfileSector
                0x00000000c0021f98                Virt::swapfileDrive
 *fill*         0x00000000c0021f99        0x3 
 .data          0x00000000c0021f9c        0x4 coreobjs/c++.32
                0x00000000c0021f9c                __stack_chk_guard
 .data          0x00000000c0021fa0        0x0 dbg/kconsole.32
 .data          0x00000000c0021fa0        0x0 fs/vfs.32
 .data          0x00000000c0021fa0        0x0 hal/bus.32
 .data          0x00000000c0021fa0        0x0 hal/buzzer.32
 .data          0x00000000c0021fa0        0x0 hal/clock.32
 .data          0x00000000c0021fa0        0x0 hal/device.32
 .data          0x00000000c0021fa0        0x0 hal/diskctrl.32
 .data          0x00000000c0021fa0        0x0 hal/diskphys.32
 .data          0x00000000c0021fa0        0x0 hal/fpu.32
 .data          0x00000000c0021fa0        0x0 hal/intctrl.32
 .data          0x00000000c0021fa0        0x0 hal/keybrd.32
 .data          0x00000000c0021fa0        0x0 hal/logidisk.32
 .data          0x00000000c0021fa0        0x0 hal/mouse.32
 .data          0x00000000c0021fa0        0x0 hal/nic.32
 .data          0x00000000c0021fa0        0x0 hal/partition.32
 .data          0x00000000c0021fa0        0x0 hal/serial.32
 .data          0x00000000c0021fa0        0x0 hal/timer.32
 .data          0x00000000c0021fa0        0x0 hal/vcache.32
 .data          0x00000000c0021fa0        0x0 hal/video.32
 .data          0x00000000c0021fa0       0x10 hw/acpi.32
                0x00000000c0021fa0                legacyIRQRemaps
 .data          0x00000000c0021fb0        0x4 hw/cpu.32
                0x00000000c0021fb0                lastCode
 *fill*         0x00000000c0021fb4        0xc 
 .data          0x00000000c0021fc0      0x142 krnl/bootmsg.32
                0x00000000c0021fc0                KiSplashScreen
 *fill*         0x00000000c0022102       0x1e 
 .data          0x00000000c0022120       0x4d krnl/env.32
                0x00000000c0022120                defaultSysEnv
 .data          0x00000000c002216d        0x0 krnl/inlines.32
 .data          0x00000000c002216d        0x0 krnl/panic.32
 .data          0x00000000c002216d        0x0 krnl/powctrl.32
 .data          0x00000000c002216d        0x0 krnl/random.32
 .data          0x00000000c002216d        0x0 krnl/resolve.32
 *fill*         0x00000000c002216d       0x13 
 .data          0x00000000c0022180       0x4c krnl/signal.32
                0x00000000c0022180                KiDefaultSignalHandlers
 *fill*         0x00000000c00221cc       0x14 
 .data          0x00000000c00221e0       0xf0 krnl/syscalls.32
                0x00000000c00221e0                systemCallHandlers
 .data          0x00000000c00222d0        0x0 net/ethernet.32
 *fill*         0x00000000c00222d0       0x10 
 .data          0x00000000c00222e0      0x100 reg/cm.32
                0x00000000c00222e0                CmComponents
 .data          0x00000000c00223e0        0x0 reg/registry.32
 .data          0x00000000c00223e0        0x0 sys/eject.32
 .data          0x00000000c00223e0        0x0 sys/exit.32
 .data          0x00000000c00223e0        0x0 sys/getcwd.32
 .data          0x00000000c00223e0        0x0 sys/getpid.32
 .data          0x00000000c00223e0        0x0 sys/getramdata.32
 .data          0x00000000c00223e0        0x0 sys/getvgaptr.32
 .data          0x00000000c00223e0        0x0 sys/kill.32
 .data          0x00000000c00223e0        0x0 sys/loaddll.32
 .data          0x00000000c00223e0        0x0 sys/read.32
 .data          0x00000000c00223e0        0x0 sys/registersignal.32
 .data          0x00000000c00223e0        0x0 sys/registry.32
 .data          0x00000000c00223e0        0x0 sys/sbrk.32
 .data          0x00000000c00223e0        0x0 sys/setcwd.32
 .data          0x00000000c00223e0        0x0 sys/settime.32
 .data          0x00000000c00223e0        0x0 sys/timezone.32
 .data          0x00000000c00223e0        0x0 sys/write.32
 .data          0x00000000c00223e0        0x0 sys/wsbe.32
 .data          0x00000000c00223e0        0x0 sys/yield.32
 .data          0x00000000c00223e0        0x0 thr/elf.32
 .data          0x00000000c00223e0        0x4 thr/prcssthr.32
                0x00000000c00223e0                Thr::nextPID
 .data          0x00000000c00223e4        0x0 vm86/vm8086.32
 .data          0x00000000c00223e4        0x0 arch/i386/hal.32
 .data          0x00000000c00223e4        0x0 arch/i386/pic.32
 .data          0x00000000c00223e4        0x0 arch/i386/rtc.32
 .data          0x00000000c00223e4        0x0 arch/i386/vga.32
 .data          0x00000000c00223e4        0x0 fs/fat/vfslink.32
 .data          0x00000000c00223e4        0x0 fs/iso9660/helper.32
 .data          0x00000000c00223e4        0x1 fs/iso9660/vfslink.32
                0x00000000c00223e4                recentDriveletter
 .data          0x00000000c00223e5        0x0 hal/sound/sndcard.32
 .data          0x00000000c00223e5        0x0 hal/sound/sndport.32
 .data          0x00000000c00223e5        0x0 hw/bus/isa.32
 .data          0x00000000c00223e5        0x0 hw/bus/pci.32
 .data          0x00000000c00223e5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00223e5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00223e5        0x0 hw/diskphys/ata.32
 .data          0x00000000c00223e5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00223e5        0x0 hw/diskphys/sata.32
 .data          0x00000000c00223e5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00223e5        0x0 hw/intctrl/apic.32
 .data          0x00000000c00223e5        0x0 hw/timer/apictimer.32
 .data          0x00000000c00223e5        0x0 hw/timer/pit.32
 .data          0x00000000c00223e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00223e5        0x0 crtn.32
 .data          0x00000000c00223e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00223e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00223e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00223e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00223e8        0x0
 .got           0x00000000c00223e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00223e8        0x0
 .got.plt       0x00000000c00223e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00223e8        0x0
 .igot.plt      0x00000000c00223e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00223e8        0x0
 .tm_clone_table
                0x00000000c00223e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00223e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00223e5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00223e5        0x3 
 .eh_frame      0x00000000c00223e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00223e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00223e8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022440       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022480       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00224ec       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0023000       0x7d
 *(userkernel)
 userkernel     0x00000000c0023000       0x52 krnl/signal.32
                0x00000000c0023000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002302c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0023052       0x2b krnl/syscalls.32
                0x00000000c0023052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0024000        0x1
 *(align_previous)
 align_previous
                0x00000000c0024000        0x1 krnl/signal.32
                0x00000000c0024000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0024004        0x0
 .rel.got       0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0024001     0x4ba7
                0x00000000c0024001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0024001       0x1f 
 COMMON         0x00000000c0024020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0024020                dcache
                0x00000000c0024060                cdDriveLetter
                0x00000000c0024080                icache
 *(.bss)
 .bss           0x00000000c00240c0        0x0 crti.32
 .bss           0x00000000c00240c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00240e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00240e4       0x1c 
 .bss           0x00000000c0024100      0x378 core/malloc.32
 .bss           0x00000000c0024478        0x0 libk/ctype.32
 .bss           0x00000000c0024478        0x0 libk/string.32
 .bss           0x00000000c0024478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024478        0x8 
 .bss           0x00000000c0024480       0x88 fs/fat/ff.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0024508       0x18 
 .bss           0x00000000c0024520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0024eb8        0x6 core/computer.32
                0x00000000c0024eb8                Krnl::computer
                0x00000000c0024ebc                KeIsPreemptionOn
                0x00000000c0024ebd                KeIsSchedulingOn
 *fill*         0x00000000c0024ebe        0x2 
 .bss           0x00000000c0024ec0        0x6 core/gdt.32
                0x00000000c0024ec0                gdtDescr
 .bss           0x00000000c0024ec6        0x0 core/idle.32
 *fill*         0x00000000c0024ec6        0x2 
 .bss           0x00000000c0024ec8        0x6 core/idt.32
                0x00000000c0024ec8                idtDescr
 .bss           0x00000000c0024ece        0x0 core/kheap.32
 *fill*         0x00000000c0024ece        0x2 
 .bss           0x00000000c0024ed0        0x4 core/main.32
                0x00000000c0024ed0                sysBootSettings
 .bss           0x00000000c0024ed4       0x29 core/physmgr.32
                0x00000000c0024ed4                Phys::forbidEvictions
                0x00000000c0024ed8                Phys::currentPagePointer
                0x00000000c0024edc                Phys::highestMem
                0x00000000c0024ee0                Phys::oldPercent
                0x00000000c0024ee4                Phys::usedPages
                0x00000000c0024ee8                Phys::usablePages
                0x00000000c0024eec                Phys::dmaUsage
 .bss           0x00000000c0024efd        0x0 core/pipe.32
 *fill*         0x00000000c0024efd        0x3 
 .bss           0x00000000c0024f00        0x9 core/terminal.32
                0x00000000c0024f00                terminalCycle
                0x00000000c0024f04                activeTerminal
                0x00000000c0024f08                VgaText::graphicMode
 *fill*         0x00000000c0024f09        0x1 
 .bss           0x00000000c0024f0a        0x2 core/tss.32
                0x00000000c0024f0a                doubleFaultSelector
 *fill*         0x00000000c0024f0c       0x14 
 .bss           0x00000000c0024f20       0x84 core/unixfile.32
                0x00000000c0024f20                sfileLpt
                0x00000000c0024f60                sfileCom
                0x00000000c0024f84                sfileNul
                0x00000000c0024f88                sfilePnt
                0x00000000c0024f8c                sfileAux
                0x00000000c0024f90                sfileCon
                0x00000000c0024f94                initialFilesAdded
                0x00000000c0024f98                unixFileLinkedList
 .bss           0x00000000c0024fa4       0x10 core/virtmgr.32
                0x00000000c0024fa4                twswaps
                0x00000000c0024fa8                swapBalance
                0x00000000c0024fac                Virt::swapfileBitmap
                0x00000000c0024fb0                firstVAS
 .bss           0x00000000c0024fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0024fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0024fb4        0x4 fs/vfs.32
                0x00000000c0024fb4                installedFilesystems
 .bss           0x00000000c0024fb8        0x0 hal/bus.32
 .bss           0x00000000c0024fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0024fb8        0x8 hal/clock.32
                0x00000000c0024fb8                User::dstOn
                0x00000000c0024fb9                User::timezoneHalfHourOffset
                0x00000000c0024fbc                User::timezoneHourOffset
 .bss           0x00000000c0024fc0        0x0 hal/device.32
 .bss           0x00000000c0024fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0024fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0024fc0        0x0 hal/fpu.32
 .bss           0x00000000c0024fc0     0x2000 hal/intctrl.32
                0x00000000c0024fc0                INT_contexts
                0x00000000c0025fc0                INT_handlers
 .bss           0x00000000c0026fc0      0x429 hal/keybrd.32
                0x00000000c0026fc0                keyboardWaitingTaskList
                0x00000000c0026fc4                keyboardSetupYet
                0x00000000c0026fc8                guiKeyboardHandler
                0x00000000c0026fe0                keystates
 *fill*         0x00000000c00273e9       0x17 
 .bss           0x00000000c0027400       0x88 hal/logidisk.32
                0x00000000c0027400                diskAssignments
                0x00000000c0027420                disks
 .bss           0x00000000c0027488        0x4 hal/mouse.32
                0x00000000c0027488                guiMouseHandler
 .bss           0x00000000c002748c        0x0 hal/nic.32
 .bss           0x00000000c002748c        0x0 hal/partition.32
 .bss           0x00000000c002748c        0x0 hal/serial.32
 .bss           0x00000000c002748c        0x4 hal/timer.32
                0x00000000c002748c                milliTenthsSinceBoot
 .bss           0x00000000c0027490        0x0 hal/vcache.32
 .bss           0x00000000c0027490        0x4 hal/video.32
                0x00000000c0027490                screen
 *fill*         0x00000000c0027494        0xc 
 .bss           0x00000000c00274a0      0x480 hw/acpi.32
                0x00000000c00274a0                systemSleepFunction
                0x00000000c00274a4                systemResetFunction
                0x00000000c00274a8                systemShutdownFunction
                0x00000000c00274ac                nextACPITable
                0x00000000c00274c0                acpiTables
                0x00000000c00276c0                usingXSDT
                0x00000000c00276c4                MADTpointer
                0x00000000c00276c8                RSDTpointer
                0x00000000c00276cc                RSDPpointer
                0x00000000c00276d0                nextAPICNMI
                0x00000000c00276e0                apicNMIInfo
                0x00000000c0027760                legacyIRQFlags
                0x00000000c0027780                ioapicDiscoveryNumber
                0x00000000c00277a0                ioapicFoundInMADT
                0x00000000c00277c0                ioapicAddresses
                0x00000000c0027840                ioapicGSIBase
                0x00000000c00278c0                processorDiscoveryNumber
                0x00000000c00278e0                matchingAPICID
                0x00000000c0027900                processorID
 .bss           0x00000000c0027920       0x10 hw/cpu.32
                0x00000000c0027920                lastD
                0x00000000c0027924                lastC
                0x00000000c0027928                lastB
                0x00000000c002792c                lastA
 .bss           0x00000000c0027930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0027930        0x8 krnl/env.32
                0x00000000c0027930                Krnl::userEnv
                0x00000000c0027934                Krnl::systemEnv
 .bss           0x00000000c0027938        0x0 krnl/inlines.32
 .bss           0x00000000c0027938        0x1 krnl/panic.32
                0x00000000c0027938                KeIsKernelInPanic
 *fill*         0x00000000c0027939        0x7 
 .bss           0x00000000c0027940       0x48 krnl/powctrl.32
                0x00000000c0027940                Krnl::powCtrlOnBattery
                0x00000000c0027960                Krnl::currentPowerSettings
                0x00000000c0027984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0027988        0x8 krnl/random.32
                0x00000000c0027988                kiRandSeed
 .bss           0x00000000c0027990        0x0 krnl/resolve.32
 .bss           0x00000000c0027990        0x0 krnl/signal.32
 .bss           0x00000000c0027990        0x0 krnl/syscalls.32
 .bss           0x00000000c0027990        0x0 net/ethernet.32
 .bss           0x00000000c0027990        0x4 reg/cm.32
 .bss           0x00000000c0027994        0x0 reg/registry.32
 .bss           0x00000000c0027994        0x0 sys/eject.32
 .bss           0x00000000c0027994        0x0 sys/exit.32
 .bss           0x00000000c0027994        0x0 sys/getcwd.32
 .bss           0x00000000c0027994        0x0 sys/getpid.32
 .bss           0x00000000c0027994        0x0 sys/getramdata.32
 .bss           0x00000000c0027994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0027994        0x0 sys/kill.32
 .bss           0x00000000c0027994        0x0 sys/loaddll.32
 .bss           0x00000000c0027994        0x0 sys/read.32
 .bss           0x00000000c0027994        0x0 sys/registersignal.32
 .bss           0x00000000c0027994        0x0 sys/registry.32
 .bss           0x00000000c0027994        0x0 sys/sbrk.32
 .bss           0x00000000c0027994        0x0 sys/setcwd.32
 .bss           0x00000000c0027994        0x0 sys/settime.32
 .bss           0x00000000c0027994        0x0 sys/timezone.32
 .bss           0x00000000c0027994        0x0 sys/write.32
 .bss           0x00000000c0027994        0x0 sys/wsbe.32
 .bss           0x00000000c0027994        0x0 sys/yield.32
 *fill*         0x00000000c0027994        0xc 
 .bss           0x00000000c00279a0      0x7a4 thr/elf.32
                0x00000000c00279a0                Thr::driverLookupNext
                0x00000000c00279c0                Thr::driverLookupLen
                0x00000000c0027bc0                Thr::driverLookupAddr
                0x00000000c0027dc0                Thr::driverNameLookup
                0x00000000c0027fc0                Thr::kernelSymbols
                0x00000000c0028040                Thr::kernelStringTable
                0x00000000c00280c0                Thr::kernelSymbolTable
                0x00000000c0028140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0028144        0x4 
 .bss           0x00000000c0028148       0x68 thr/prcssthr.32
                0x00000000c0028148                cleanerThread
                0x00000000c002814c                weNeedTheCleanerToNotBlock
                0x00000000c0028150                retValLockStuff
                0x00000000c0028154                retValSchedLock
                0x00000000c0028158                lockStuffLock
                0x00000000c002815c                schedulerLock
                0x00000000c0028160                taskSwitchesPostponedFlag
                0x00000000c0028164                postponeTaskSwitchesCounter
                0x00000000c0028168                irqDisableCounter
                0x00000000c002816c                terminatedTaskList
                0x00000000c0028178                sleepingTaskList
                0x00000000c0028184                taskList
                0x00000000c0028190                kernelProcess
 *fill*         0x00000000c00281b0       0x10 
 .bss           0x00000000c00281c0       0x40 vm86/vm8086.32
                0x00000000c00281c0                Vm::vmRetV
                0x00000000c00281c4                Vm::vmDone
                0x00000000c00281c5                Vm::vmReady
                0x00000000c00281c8                Vm::vm86Thread
                0x00000000c00281cc                Vm::vmToHostCommsPtr
                0x00000000c00281e0                Vm::vmToHostComms
 .bss           0x00000000c0028200       0x18 arch/i386/hal.32
                0x00000000c0028200                apic
                0x00000000c0028204                guiPanicHandler
                0x00000000c0028208                fpuOwner
                0x00000000c002820c                coproLoadFunc
                0x00000000c0028210                coproSaveFunc
                0x00000000c0028214                gpFaultIntercept
 .bss           0x00000000c0028218        0x0 arch/i386/pic.32
 .bss           0x00000000c0028218        0x2 arch/i386/rtc.32
 .bss           0x00000000c002821a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002821a        0x6 
 .bss           0x00000000c0028220       0xf0 fs/fat/vfslink.32
                0x00000000c0028220                FAT::fats
                0x00000000c0028240                FAT::vfsToFatRemaps
                0x00000000c00282c0                fatToVFSRemaps
 .bss           0x00000000c0028310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0028310       0x10 
 .bss           0x00000000c0028320      0x820 fs/iso9660/vfslink.32
                0x00000000c0028320                iso9660Owner
                0x00000000c0028324                recentSector
                0x00000000c0028340                recentBuffer
 .bss           0x00000000c0028b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0028b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0028b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0028b40        0xd hw/bus/pci.32
                0x00000000c0028b40                thePCI
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0028b4d        0x3 
 .bss           0x00000000c0028b50        0x8 hw/diskphys/ata.32
                0x00000000c0028b50                ataSectorsWritten
                0x00000000c0028b54                ataSectorsRead
 .bss           0x00000000c0028b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0028b58        0x8 
 .bss           0x00000000c0028b60       0x41 hw/intctrl/apic.32
                0x00000000c0028b60                noOfIOAPICs
                0x00000000c0028b80                ioapics
                0x00000000c0028ba0                IOAPICsSetupYet
 .bss           0x00000000c0028ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0028ba1        0x3 
 .bss           0x00000000c0028ba4        0x4 hw/timer/pit.32
                0x00000000c0028ba4                pitFreq
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0028ba8        0x0 crtn.32
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0028ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
