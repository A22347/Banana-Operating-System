Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f56a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x5fd fs/symlink.32
                0x00000000c000ad14                KiCreateSymlinkID()
                0x00000000c000ad7f                KiFlushSymlinkChanges()
                0x00000000c000ae51                KiDeinitialiseSymlinks(void*)
                0x00000000c000ae56                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000aec5                KiIsSymlinkRegistered(char const*)
                0x00000000c000af0c                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b120                KeCreateSymlink(char const*, char const*)
                0x00000000c000b25c                KeInitialiseSymlinks()
 *fill*         0x00000000c000b311        0x1 
 .text          0x00000000c000b312      0xd4c fs/vfs.32
                0x00000000c000b312                File::read(unsigned long long, void*, int*)
                0x00000000c000b36a                File::write(unsigned long long, void*, int*)
                0x00000000c000b3c2                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b41a                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b448                File::isAtty()
                0x00000000c000b44c                Directory::isAtty()
                0x00000000c000b450                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b456                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b45c                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b462                File::~File()
                0x00000000c000b462                File::~File()
                0x00000000c000b486                File::~File()
                0x00000000c000b4b0                Directory::~Directory()
                0x00000000c000b4b0                Directory::~Directory()
                0x00000000c000b4d4                Directory::~Directory()
                0x00000000c000b4fe                Filesystem::Filesystem()
                0x00000000c000b4fe                Filesystem::Filesystem()
                0x00000000c000b522                Filesystem::~Filesystem()
                0x00000000c000b522                Filesystem::~Filesystem()
                0x00000000c000b530                Filesystem::~Filesystem()
                0x00000000c000b554                Fs::getcwd(Process*, char*, int)
                0x00000000c000b57e                Fs::initVFS()
                0x00000000c000b5a8                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000b7c6                File::File(char const*, Process*, bool)
                0x00000000c000b7c6                File::File(char const*, Process*, bool)
                0x00000000c000b8a4                File::open(FileOpenMode)
                0x00000000c000b902                File::close()
                0x00000000c000b962                File::seek(unsigned long long)
                0x00000000c000b9b8                File::truncate(unsigned long long)
                0x00000000c000ba0e                File::tell(unsigned long long*)
                0x00000000c000ba5e                File::rewind()
                0x00000000c000ba72                File::unlink()
                0x00000000c000babe                File::rename(char const*)
                0x00000000c000bb0c                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bb68                File::exists()
                0x00000000c000bba6                File::stat(unsigned long long*, bool*)
                0x00000000c000bc07                Fs::setcwd(Process*, char*)
                0x00000000c000bd64                Directory::Directory(char const*, Process*)
                0x00000000c000bd64                Directory::Directory(char const*, Process*)
                0x00000000c000be2c                Directory::open()
                0x00000000c000be88                Directory::close()
                0x00000000c000bee8                Directory::unlink()
                0x00000000c000bf34                Directory::rename(char const*)
                0x00000000c000bf82                Directory::exists()
                0x00000000c000bfc0                Directory::read(dirent*)
                0x00000000c000c00c                Directory::create()
                0x00000000c000c058                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c05e        0x2 
 .text          0x00000000c000c060       0x86 hal/bus.32
                0x00000000c000c060                Bus::Bus(char const*)
                0x00000000c000c060                Bus::Bus(char const*)
                0x00000000c000c098                Bus::~Bus()
                0x00000000c000c098                Bus::~Bus()
                0x00000000c000c0bc                Bus::~Bus()
 .text          0x00000000c000c0e6       0x96 hal/buzzer.32
                0x00000000c000c0e6                beepThread(void*)
                0x00000000c000c123                Krnl::beep(int, int, bool)
 .text          0x00000000c000c17c      0x465 hal/clock.32
                0x00000000c000c17c                User::loadClockSettings(int)
                0x00000000c000c1ce                Clock::Clock(char const*)
                0x00000000c000c1ce                Clock::Clock(char const*)
                0x00000000c000c204                Clock::~Clock()
                0x00000000c000c204                Clock::~Clock()
                0x00000000c000c228                Clock::~Clock()
                0x00000000c000c252                Clock::timeInSecondsLocal()
                0x00000000c000c29a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c2f3                datetimeToSeconds(datetime_t)
                0x00000000c000c418                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c478                secondsToDatetime(unsigned long long)
                0x00000000c000c5bc                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c5e1        0x1 
 .text          0x00000000c000c5e2      0x464 hal/device.32
                0x00000000c000c5e2                Device::hibernate()
                0x00000000c000c5e4                Device::wake()
                0x00000000c000c5e6                Device::detect()
                0x00000000c000c5e8                Device::disableLegacy()
                0x00000000c000c5ea                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c5ec                DriverlessDevice::close(int, int, void*)
                0x00000000c000c5f0                DriverlessDevice::detect()
                0x00000000c000c5f2                DriverlessDevice::open(int, int, void*)
                0x00000000c000c606                Device::~Device()
                0x00000000c000c606                Device::~Device()
                0x00000000c000c614                Device::~Device()
                0x00000000c000c63c                Device::findAndLoadDriver()
                0x00000000c000c64a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c670                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c6b0                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c6da                Device::getParent()
                0x00000000c000c6e6                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c704                Device::addChild(Device*)
                0x00000000c000c748                Device::removeAllChildren()
                0x00000000c000c78e                Device::hibernateAll()
                0x00000000c000c7be                Device::wakeAll()
                0x00000000c000c7ee                Device::detectAll()
                0x00000000c000c81e                Device::disableLegacyAll()
                0x00000000c000c820                Device::loadDriversForAll()
                0x00000000c000c822                Device::closeAll()
                0x00000000c000c858                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c88e                Device::setName(char const*)
                0x00000000c000c89c                Device::Device(char const*)
                0x00000000c000c89c                Device::Device(char const*)
                0x00000000c000c998                Device::getName()
                0x00000000c000c9a2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c9a2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c9d8                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ca1c                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000ca46        0x2 
 .text          0x00000000c000ca48       0x86 hal/diskctrl.32
                0x00000000c000ca48                HardDiskController::HardDiskController(char const*)
                0x00000000c000ca48                HardDiskController::HardDiskController(char const*)
                0x00000000c000ca80                HardDiskController::~HardDiskController()
                0x00000000c000ca80                HardDiskController::~HardDiskController()
                0x00000000c000caa4                HardDiskController::~HardDiskController()
 .text          0x00000000c000cace       0xe2 hal/diskphys.32
                0x00000000c000cace                PhysicalDisk::eject()
                0x00000000c000cad2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cad2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cb3a                PhysicalDisk::startCache()
                0x00000000c000cb62                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cb62                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cb86                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cbb0        0x0 hal/fpu.32
 .text          0x00000000c000cbb0      0x360 hal/intctrl.32
                0x00000000c000cbb0                int_handler
                0x00000000c000cc3a                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cc84                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000cdc7                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000cdfb                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ce71                setupINTS()
                0x00000000c000cece                convertLegacyIRQNumber(int)
 .text          0x00000000c000cf10      0x8be hal/keybrd.32
                0x00000000c000cf10                startGUI(void*)
                0x00000000c000cf7e                startGUIVESA(void*)
                0x00000000c000cfec                sendKeyToTerminal(unsigned char)
                0x00000000c000d0c7                sendKeyboardToken(KeyboardToken)
                0x00000000c000d5b1                clearInternalKeybuffer(VgaText*)
                0x00000000c000d5e6                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d744                Keyboard::Keyboard(char const*)
                0x00000000c000d744                Keyboard::Keyboard(char const*)
                0x00000000c000d780                Keyboard::~Keyboard()
                0x00000000c000d780                Keyboard::~Keyboard()
                0x00000000c000d7a4                Keyboard::~Keyboard()
 .text          0x00000000c000d7ce      0x3f8 hal/logidisk.32
                0x00000000c000d7ce                LogicalDisk::close(int, int, void*)
                0x00000000c000d7d2                LogicalDisk::~LogicalDisk()
                0x00000000c000d7d2                LogicalDisk::~LogicalDisk()
                0x00000000c000d7f6                LogicalDisk::~LogicalDisk()
                0x00000000c000d820                LogicalDisk::open(int, int, void*)
                0x00000000c000d834                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d86c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d8b2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d8b2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d972                LogicalDisk::assignDriveLetter()
                0x00000000c000da2c                LogicalDisk::mount()
                0x00000000c000da74                LogicalDisk::unmount()
                0x00000000c000da84                LogicalDisk::eject()
                0x00000000c000da98                LogicalDisk::unassignDriveLetter()
                0x00000000c000daee                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000db5a                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000dbc6        0x2 
 .text          0x00000000c000dbc8       0x86 hal/mouse.32
                0x00000000c000dbc8                Mouse::Mouse(char const*)
                0x00000000c000dbc8                Mouse::Mouse(char const*)
                0x00000000c000dc00                Mouse::~Mouse()
                0x00000000c000dc00                Mouse::~Mouse()
                0x00000000c000dc24                Mouse::~Mouse()
 .text          0x00000000c000dc4e       0x90 hal/nic.32
                0x00000000c000dc4e                NIC::getMAC()
                0x00000000c000dc54                NIC::write(int, unsigned char*, int*)
                0x00000000c000dc5a                NIC::NIC(char const*)
                0x00000000c000dc5a                NIC::NIC(char const*)
                0x00000000c000dc90                NIC::~NIC()
                0x00000000c000dc90                NIC::~NIC()
                0x00000000c000dcb4                NIC::~NIC()
 .text          0x00000000c000dcde      0x33b hal/partition.32
                0x00000000c000dcde                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dd86                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e019        0x3 
 .text          0x00000000c000e01c       0x86 hal/serial.32
                0x00000000c000e01c                Serial::Serial(char const*)
                0x00000000c000e01c                Serial::Serial(char const*)
                0x00000000c000e054                Serial::~Serial()
                0x00000000c000e054                Serial::~Serial()
                0x00000000c000e078                Serial::~Serial()
 *fill*         0x00000000c000e0a2        0x2 
 .text          0x00000000c000e0a4      0x234 hal/timer.32
                0x00000000c000e0a4                Timer::Timer(char const*)
                0x00000000c000e0a4                Timer::Timer(char const*)
                0x00000000c000e0dc                Timer::~Timer()
                0x00000000c000e0dc                Timer::~Timer()
                0x00000000c000e100                Timer::~Timer()
                0x00000000c000e12a                Timer::read()
                0x00000000c000e135                setupTimer(int)
                0x00000000c000e170                timerHandler(unsigned int)
 .text          0x00000000c000e2d8      0x450 hal/vcache.32
                0x00000000c000e2d8                VCache::VCache(PhysicalDisk*)
                0x00000000c000e2d8                VCache::VCache(PhysicalDisk*)
                0x00000000c000e448                VCache::invalidateReadBuffer()
                0x00000000c000e458                VCache::writeWriteBuffer()
                0x00000000c000e4a4                VCache::~VCache()
                0x00000000c000e4a4                VCache::~VCache()
                0x00000000c000e4fc                VCache::~VCache()
                0x00000000c000e524                VCache::write(unsigned long long, int, void*)
                0x00000000c000e61e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e728      0x4d9 hal/video.32
                0x00000000c000e728                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e774                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e7e4                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e874                Video::clearScreen(unsigned int)
                0x00000000c000e8a8                Video::putpixel(int, int, unsigned int)
                0x00000000c000e8b6                Video::readPixelApprox(int, int)
                0x00000000c000e8ca                Video::Video(char const*)
                0x00000000c000e8ca                Video::Video(char const*)
                0x00000000c000e900                Video::~Video()
                0x00000000c000e900                Video::~Video()
                0x00000000c000e924                Video::~Video()
                0x00000000c000e94e                Video::isMonochrome()
                0x00000000c000e95a                Video::getWidth()
                0x00000000c000e966                Video::getHeight()
                0x00000000c000e972                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ea2e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000eb96                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ec01        0x3 
 .text          0x00000000c000ec04     0x12ca hw/acpi.32
                0x00000000c000ec04                ACPI::close(int, int, void*)
                0x00000000c000ecb8                findRSDP()
                0x00000000c000ed50                loadACPITables(unsigned char*)
                0x00000000c000efbc                findRSDT(unsigned char*)
                0x00000000c000f114                findDataTable(unsigned char*, char*)
                0x00000000c000f194                scanMADT()
                0x00000000c000f64c                ACPI::ACPI()
                0x00000000c000f64c                ACPI::ACPI()
                0x00000000c000f6a0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f79c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f868                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f870                ACPI::detectPCI()
                0x00000000c000fa90                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fad8                ACPI::sleep()
                0x00000000c000faf4                ACPI::open(int, int, void*)
 .text          0x00000000c000fece      0xbc5 hw/cpu.32
                0x00000000c000fece                CPU::close(int, int, void*)
                0x00000000c000fed2                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000feee                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000ff06                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ff7a                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000fffe                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c001002c                CPU::cpuidCheckECX(unsigned int)
                0x00000000c001005a                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0010088                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00100b6                CPU::CPU()
                0x00000000c00100b6                CPU::CPU()
                0x00000000c0010144                CPU::displayFeatures()
                0x00000000c0010146                CPU::detectFeatures()
                0x00000000c001081a                CPU::setupSMEP()
                0x00000000c0010826                CPU::setupUMIP()
                0x00000000c0010830                CPU::setupTSC()
                0x00000000c001083a                CPU::setupLargePages()
                0x00000000c0010844                CPU::setupPAT()
                0x00000000c0010880                CPU::setupMTRR()
                0x00000000c0010882                CPU::setupGlobalPages()
                0x00000000c001088c                CPU::allowUsermodeDataAccess()
                0x00000000c001089e                CPU::prohibitUsermodeDataAccess()
                0x00000000c00108b0                CPU::setupSMAP()
                0x00000000c00108be                CPU::setupFeatures()
                0x00000000c001098a                CPU::open(int, int, void*)
 .text          0x00000000c0010a93       0xb6 krnl/atexit.32
                0x00000000c0010a93                KeInitialiseAtexit()
                0x00000000c0010ab2                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010ae6                KeExecuteAtexit()
 .text          0x00000000c0010b49       0xdf krnl/bootmsg.32
                0x00000000c0010b49                KeDisplaySplashScreen()
                0x00000000c0010bc5                KeSetBootMessage(char const*)
 .text          0x00000000c0010c28       0x1d krnl/compat.32
                0x00000000c0010c28                Krnl::handlePowerButton()
                0x00000000c0010c38                Krnl::handleSleepButton()
 *fill*         0x00000000c0010c45        0x1 
 .text          0x00000000c0010c46      0x5bf krnl/env.32
                0x00000000c0010c46                EnvVarContainer::getEnv(char const*)
                0x00000000c0010c84                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010d46                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010d48                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010f6c                EnvVarContainer::__loadSystem()
                0x00000000c0010f86                EnvVarContainer::__loadUser()
                0x00000000c0010f88                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010f88                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010faa                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010faa                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010fda                KeGetEnv(Process*, char const*)
                0x00000000c001103f                KeSetEnvSystem(char const*, char const*)
                0x00000000c0011059                KeSetEnvUser(char const*, char const*)
                0x00000000c0011078                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c001108b                KeDeleteEnvSystem(char const*)
                0x00000000c001108c                KeDeleteEnvUser(char const*)
                0x00000000c001108d                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c001108e                KeNewProcessEnv(Process*)
                0x00000000c00110b0                KeCopyProcessEnv(Process*, Process*)
                0x00000000c00110fc                KeLoadSystemEnv()
                0x00000000c001112a                KeLoadUserEnv()
                0x00000000c0011150                KeFlushEnv()
                0x00000000c0011151                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0011171                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011205       0x94 krnl/inlines.32
                0x00000000c0011205                CPU::current()
                0x00000000c0011211                operator new(unsigned long)
                0x00000000c0011216                operator delete(void*)
                0x00000000c001121b                disableIRQs()
                0x00000000c001121d                enableIRQs()
                0x00000000c001121f                lockScheduler()
                0x00000000c0011227                unlockScheduler()
                0x00000000c0011236                lockStuff()
                0x00000000c0011244                unlockStuff()
                0x00000000c001127e                Virt::getAKernelVAS()
                0x00000000c0011284                __not_memcpy
 .text          0x00000000c0011299        0xc krnl/panic.32
                0x00000000c0011299                KePanic(char const*)
 .text          0x00000000c00112a5      0x142 krnl/powctrl.32
                0x00000000c00112a5                KePowerThread(void*)
                0x00000000c00112d3                KeChangePowerSettings(PowerSettings)
                0x00000000c00112e9                KeUserIOReceived()
                0x00000000c00112f4                KeHandlePowerButton()
                0x00000000c0011329                KeHandleSleepButton()
                0x00000000c001135e                KeSetupPowerManager()
 .text          0x00000000c00113e7       0x9b krnl/random.32
                0x00000000c00113e7                KeRand()
                0x00000000c0011427                KeSeedRand(unsigned int)
                0x00000000c0011450                KeInitRand()
 *fill*         0x00000000c0011482        0x2 
 .text          0x00000000c0011484      0x1bc krnl/resolve.32
                0x00000000c0011484                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011640      0x31f krnl/signal.32
                0x00000000c0011640                KiSigKill(int)
                0x00000000c0011654                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011655                KiDefaultSignalHandlerPause(int)
                0x00000000c0011681                KiDefaultSignalHandlerResume(int)
                0x00000000c00116ad                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00116b2                KeInitSignals()
                0x00000000c0011701                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011737                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00117b4                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c00118ab                KiCheckSignalZ
                0x00000000c00118ed                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011928                KiFinishSignalZ
 .text          0x00000000c001195f      0xd46 krnl/syscalls.32
                0x00000000c001195f                SysSeekDir(regs*)
                0x00000000c0011964                SysTellDir(regs*)
                0x00000000c0011969                SysVerify(regs*)
                0x00000000c0011973                SysGetArgc(regs*)
                0x00000000c0011987                SysTTYName(regs*)
                0x00000000c001198f                SysFormatDisk(regs*)
                0x00000000c00119f6                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011a4a                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011aa3                SysShutdown(regs*)
                0x00000000c0011b30                SysRealpath(regs*)
                0x00000000c0011b7e                SysReadDir(regs*)
                0x00000000c0011bfe                SysIsATTY(regs*)
                0x00000000c0011c58                SysSeek(regs*)
                0x00000000c0011cb2                SysTell(regs*)
                0x00000000c0011d1f                SysSize(regs*)
                0x00000000c0011d92                SysSizeFromFilename(regs*)
                0x00000000c0011e3b                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011f10                SysClose(regs*)
                0x00000000c0011f70                SysOpenDir(regs*)
                0x00000000c0011fed                SysMakeDir(regs*)
                0x00000000c001205b                SysCloseDir(regs*)
                0x00000000c00120aa                SysWait(regs*)
                0x00000000c00120cb                SysNotImpl(regs*)
                0x00000000c00120e6                SysPanic(regs*)
                0x00000000c0012101                SysRmdir(regs*)
                0x00000000c001215f                SysUnlink(regs*)
                0x00000000c00121bd                SysGetArgv(regs*)
                0x00000000c001220a                SysUSleep(regs*)
                0x00000000c0012233                SysSpawn(regs*)
                0x00000000c00122a4                SysGetEnv(regs*)
                0x00000000c0012359                SysSetFatAttrib(regs*)
                0x00000000c00123c1                SysPipe(regs*)
                0x00000000c0012406                SysGetUnixTime(regs*)
                0x00000000c001241a                string_ends_with(char const*, char const*)
                0x00000000c0012465                SysOpen(regs*)
                0x00000000c0012663                KeSystemCall(regs*, void*)
 *fill*         0x00000000c00126a5        0x3 
 .text          0x00000000c00126a8      0x159 net/ethernet.32
                0x00000000c00126a8                KeSwitchEndian16(unsigned short)
                0x00000000c00126cc                KeSwitchEndian32(unsigned int)
                0x00000000c00126fc                EthernetCRC32(unsigned char*, int)
                0x00000000c00127a0                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012801      0xd50 reg/cm.32
                0x00000000c0012801                CmOpen(char const*)
                0x00000000c001291e                CmClose(Reghive_Tag*)
                0x00000000c0012934                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012970                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c00129e7                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012a26                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012a58                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012a94                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012abc                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012add                CmExpand(Reghive_Tag*, int)
                0x00000000c0012b58                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012bde                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012cd2                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012e0a                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012e6b                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012e9b                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012ed2                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012efc                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012f3c                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012fe0                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c001300e                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00131ab                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00131f8                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013272                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00132c5                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013389                zStrtok(char*, char const*)
                0x00000000c00133fb                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c001347c                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c001351f                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0013551      0x544 reg/registry.32
                0x00000000c0013551                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00136dd                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013831                Reg::getLine(char*, char*, char*)
                0x00000000c0013868                Reg::readInt(char*, char*, int*)
                0x00000000c0013956                Reg::readString(char*, char*, char*, int)
                0x00000000c00139d7                Reg::readBool(char*, char*, bool*)
                0x00000000c00139fc                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013a28                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013a54                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013a95       0x36 sys/eject.32
                0x00000000c0013a95                SysEject(regs*)
 .text          0x00000000c0013acb       0x18 sys/exit.32
                0x00000000c0013acb                SysExit(regs*)
 .text          0x00000000c0013ae3       0x1f sys/getcwd.32
                0x00000000c0013ae3                SysGetCwd(regs*)
 .text          0x00000000c0013b02        0xc sys/getpid.32
                0x00000000c0013b02                SysGetPID(regs*)
 .text          0x00000000c0013b0e       0x1a sys/getramdata.32
                0x00000000c0013b0e                SysGetRAMData(regs*)
 .text          0x00000000c0013b28       0x82 sys/getvgaptr.32
                0x00000000c0013b28                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013baa        0x2 
 .text          0x00000000c0013bac       0xb9 sys/kill.32
                0x00000000c0013bac                SysKill(regs*)
 .text          0x00000000c0013c65       0xa7 sys/loaddll.32
                0x00000000c0013c65                SysLoadDLL(regs*)
 .text          0x00000000c0013d0c       0x68 sys/read.32
                0x00000000c0013d0c                SysRead(regs*)
 .text          0x00000000c0013d74       0x29 sys/registersignal.32
                0x00000000c0013d74                SysRegisterSignal(regs*)
 .text          0x00000000c0013d9d      0x19c sys/registry.32
                0x00000000c0013d9d                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013e14                SysRegistryReadExtent(regs*)
                0x00000000c0013e5c                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013e84                SysRegistryEnterDirectory(regs*)
                0x00000000c0013eac                SysRegistryGetNext(regs*)
                0x00000000c0013ed4                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013f0e                SysRegistryOpen(regs*)
                0x00000000c0013f22                SysRegistryClose(regs*)
 .text          0x00000000c0013f39       0x55 sys/sbrk.32
                0x00000000c0013f39                SysSbrk(regs*)
 .text          0x00000000c0013f8e       0x1c sys/setcwd.32
                0x00000000c0013f8e                SysSetCwd(regs*)
 .text          0x00000000c0013faa       0x96 sys/settime.32
                0x00000000c0013faa                SysSetTime(regs*)
 .text          0x00000000c0014040       0x2d sys/symlink.32
                0x00000000c0014040                SysSymlink(regs*)
 .text          0x00000000c001406d       0x4a sys/timezone.32
                0x00000000c001406d                SysTimezone(regs*)
 .text          0x00000000c00140b7       0xfb sys/truncate.32
                0x00000000c00140b7                SysTruncate(regs*)
 .text          0x00000000c00141b2       0x68 sys/write.32
                0x00000000c00141b2                SysWrite(regs*)
 .text          0x00000000c001421a       0x62 sys/wsbe.32
                0x00000000c001421a                SysWsbe(regs*)
 .text          0x00000000c001427c       0x25 sys/yield.32
                0x00000000c001427c                SysYield(regs*)
 .text          0x00000000c00142a1     0x1205 thr/elf.32
                0x00000000c00142a1                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014528                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014747                Thr::runtimeReferenceHelper()
                0x00000000c001475a                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00147a9                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014a6a                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00151ab                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00151dd                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015214                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001522e                Thr::loadDLL(char const*, bool)
                0x00000000c001546d                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00154a6        0x2 
 .text          0x00000000c00154a8     0x13b5 thr/prcssthr.32
                0x00000000c00154a8                userModeEntryPoint(void*)
                0x00000000c00154d0                changeTSS
                0x00000000c0015500                switchToThread(ThreadControlBlock*)
                0x00000000c00155b0                Process::addArgs(char**)
                0x00000000c001561c                Process::Process(char const*, Process*, char**)
                0x00000000c001561c                Process::Process(char const*, Process*, char**)
                0x00000000c0015828                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015828                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00159fc                taskStartupFunction
                0x00000000c0015a08                Semaphore::Semaphore(int)
                0x00000000c0015a08                Semaphore::Semaphore(int)
                0x00000000c0015a38                Mutex::Mutex()
                0x00000000c0015a38                Mutex::Mutex()
                0x00000000c0015a4c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015b54                Process::createUserThread()
                0x00000000c0015b74                setupMultitasking(void (*)())
                0x00000000c0015c98                schedule()
                0x00000000c0015d2c                Semaphore::tryAcquire()
                0x00000000c0015dec                Semaphore::assertLocked(char const*)
                0x00000000c0015e70                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015e98                blockTask(TaskState)
                0x00000000c0015ed0                waitTask(int, int*, int)
                0x00000000c0015f14                milliTenthSleepUntil(unsigned int)
                0x00000000c0015fb4                milliTenthSleep(unsigned int)
                0x00000000c0015fc8                sleep(unsigned int)
                0x00000000c0015fd8                Semaphore::acquire()
                0x00000000c00160a0                taskReturned
                0x00000000c00160e4                Thr::processFromPID(int)
                0x00000000c0016190                unblockTask(ThreadControlBlock*)
                0x00000000c001623c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016510                cleanerTaskFunction(void*)
                0x00000000c0016618                terminateTask(int)
                0x00000000c0016704                Thr::terminateFromIRQ(int)
                0x00000000c0016714                Semaphore::release()
 .text          0x00000000c001685d      0xc30 vm86/vm8086.32
                0x00000000c001685d                Vm::inbv(unsigned short)
                0x00000000c0016870                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00168a6                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00168b6                Vm::getSegment(unsigned int)
                0x00000000c00168be                Vm::getOffset(unsigned int)
                0x00000000c00168c3                Vm::mainloop2()
                0x00000000c00168fd                Vm::mainVm8086Loop(void*)
                0x00000000c001690d                Vm::mainloop3(unsigned long)
                0x00000000c0016933                Vm::initialise8086()
                0x00000000c0016976                Vm::finish8086()
                0x00000000c00169d7                Vm::getOutput8086(unsigned char*)
                0x00000000c00169fc                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016ab5                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016c52                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016cef                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016d00                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016d12                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016d23                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016d38                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016d4e                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016d63                Vm::faultHandler(regs*)
 .text          0x00000000c001748d      0xaf0 arch/i386/hal.32
                0x00000000c001748d                noCopro(unsigned long)
                0x00000000c001748e                nmiHandler(regs*, void*)
                0x00000000c00174a7                doubleFault(regs*, void*)
                0x00000000c00174c0                displayDebugInfo(regs*)
                0x00000000c0017845                HalSystemIdle()
                0x00000000c00178c1                displayProgramFault(char const*)
                0x00000000c001790d                gpFault(regs*, void*)
                0x00000000c0017974                pgFault(regs*, void*)
                0x00000000c00179fd                otherISRHandler(regs*, void*)
                0x00000000c0017a31                opcodeFault(regs*, void*)
                0x00000000c0017ab4                i386SaveCoprocessor(void*)
                0x00000000c0017ac8                i386LoadCoprocessor(void*)
                0x00000000c0017adc                x87EmulHandler(regs*, void*)
                0x00000000c0017b79                HalInitialiseCoprocessor()
                0x00000000c0017c27                HalPanic(char const*)
                0x00000000c0017d3b                HalQueryPerformanceCounter()
                0x00000000c0017d56                HalInitialise()
                0x00000000c0017f0c                HalMakeBeep(int)
                0x00000000c0017f46                HalGetRand()
                0x00000000c0017f49                HalEndOfInterrupt(int)
                0x00000000c0017f7a                HalRestart()
                0x00000000c0017f7b                HalShutdown()
                0x00000000c0017f7c                HalSleep()
 *fill*         0x00000000c0017f7d        0x3 
 .text          0x00000000c0017f80      0x2dc arch/i386/pic.32
                0x00000000c0017f80                picIoWait()
                0x00000000c0017f88                picDisable()
                0x00000000c0017fbc                picGetIRQReg(int)
                0x00000000c0018038                picOpen()
                0x00000000c00181bc                picEOI(int)
 .text          0x00000000c001825c      0x66e arch/i386/rtc.32
                0x00000000c001825c                RTC::open(int, int, void*)
                0x00000000c0018260                RTC::close(int, int, void*)
                0x00000000c0018264                RTC::timeInSecondsUTC()
                0x00000000c0018276                RTC::timeInDatetimeUTC()
                0x00000000c001829c                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00182da                RTC::~RTC()
                0x00000000c00182da                RTC::~RTC()
                0x00000000c00182fe                RTC::~RTC()
                0x00000000c0018328                RTC::get_update_in_progress_flag()
                0x00000000c0018342                RTC::completeRTCRefresh()
                0x00000000c001861c                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00187ca                rtcIRQHandler(regs*, void*)
                0x00000000c0018810                RTC::RTC()
                0x00000000c0018810                RTC::RTC()
 *fill*         0x00000000c00188ca        0x2 
 .text          0x00000000c00188cc      0x1f4 arch/i386/vga.32
                0x00000000c00188cc                HalConsoleScroll(int, int)
                0x00000000c00189d4                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018a38                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018ac0     0x14ef fs/fat/vfslink.32
                0x00000000c0018ac0                FAT::getName()
                0x00000000c0018ac8                FAT::tell(void*, unsigned long long*)
                0x00000000c0018b04                FAT::stat(void*, unsigned long long*)
                0x00000000c0018b40                FAT::~FAT()
                0x00000000c0018b40                FAT::~FAT()
                0x00000000c0018b64                FAT::~FAT()
                0x00000000c0018b8c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018c30                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018d10                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018ef4                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019110                FAT::allocateSwapfile(char const*, int)
                0x00000000c00192cc                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001943c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001949c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00194fc                FAT::close(void*)
                0x00000000c0019550                FAT::closeDir(void*)
                0x00000000c00195a4                FAT::truncate(void*, unsigned long long)
                0x00000000c0019610                FAT::seek(void*, unsigned long long)
                0x00000000c0019668                fatWrapperReadDisk
                0x00000000c00196a8                fatWrapperWriteDisk
                0x00000000c00196e8                fatWrapperIoctl
                0x00000000c0019808                FAT::FAT()
                0x00000000c0019808                FAT::FAT()
                0x00000000c0019860                FAT::fixFilepath(char*)
                0x00000000c00198a0                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019a14                FAT::openDir(char const*, void**)
                0x00000000c0019ac4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019bbc                FAT::unlink(char const*)
                0x00000000c0019c3c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019df4                FAT::rename(char const*, char const*)
                0x00000000c0019ec0                FAT::mkdir(char const*)
                0x00000000c0019f40                FAT::exists(char const*)
 *fill*         0x00000000c0019faf        0x1 
 .text          0x00000000c0019fb0       0x94 fs/iso9660/helper.32
                0x00000000c0019fb0                isoReadDiscSectorHelper
                0x00000000c001a00c                iso_kprintf
                0x00000000c001a028                iso_kprintfd
 .text          0x00000000c001a044      0x71a fs/iso9660/vfslink.32
                0x00000000c001a044                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a04a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a050                ISO9660::getName()
                0x00000000c001a056                ISO9660::closeDir(void*)
                0x00000000c001a060                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a066                ISO9660::unlink(char const*)
                0x00000000c001a06c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a072                ISO9660::rename(char const*, char const*)
                0x00000000c001a078                ISO9660::mkdir(char const*)
                0x00000000c001a07e                ISO9660::~ISO9660()
                0x00000000c001a07e                ISO9660::~ISO9660()
                0x00000000c001a0a2                ISO9660::~ISO9660()
                0x00000000c001a0ca                ISO9660::exists(char const*)
                0x00000000c001a0de                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a1c4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a20c                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a24e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a28c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a2de                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a420                ISO9660::close(void*)
                0x00000000c001a450                ISO9660::openDir(char const*, void**)
                0x00000000c001a52a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a645                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a6c4                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a736                ISO9660::ISO9660()
                0x00000000c001a736                ISO9660::ISO9660()
 .text          0x00000000c001a75e      0x26c hal/sound/sndcard.32
                0x00000000c001a75e                SoundCard::beginPlayback()
                0x00000000c001a76c                SoundCard::stopPlayback()
                0x00000000c001a77a                SoundCard::SoundCard(char const*)
                0x00000000c001a77a                SoundCard::SoundCard(char const*)
                0x00000000c001a818                SoundCard::~SoundCard()
                0x00000000c001a818                SoundCard::~SoundCard()
                0x00000000c001a83c                SoundCard::~SoundCard()
                0x00000000c001a866                SoundCard::configureRates(int, int, int)
                0x00000000c001a896                SoundCard::getSamples16(int, short*)
                0x00000000c001a8f2                SoundCard::getSamples32(int, int*)
                0x00000000c001a978                SoundCard::addChannel(SoundPort*)
                0x00000000c001a9b6                SoundCard::removeChannel(int)
 *fill*         0x00000000c001a9ca        0x2 
 .text          0x00000000c001a9cc      0x393 hal/sound/sndport.32
                0x00000000c001a9cc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a9cc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001aa58                SoundPort::~SoundPort()
                0x00000000c001aa58                SoundPort::~SoundPort()
                0x00000000c001aa8c                SoundPort::unpause()
                0x00000000c001aa98                SoundPort::pause()
                0x00000000c001aaa4                SoundPort::getBufferUsed()
                0x00000000c001aaac                SoundPort::getBufferSize()
                0x00000000c001aab4                SoundPort::buffer16(short*, int)
                0x00000000c001ab40                SoundPort::buffer32(int*, int)
                0x00000000c001abcc                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001ac9c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001ad5f        0x0 hw/bus/isa.32
 *fill*         0x00000000c001ad5f        0x1 
 .text          0x00000000c001ad60      0xbc3 hw/bus/pci.32
                0x00000000c001ad60                PCI::open(int, int, void*)
                0x00000000c001ad7e                PCI::close(int, int, void*)
                0x00000000c001ad82                PCI::PCI()
                0x00000000c001ad82                PCI::PCI()
                0x00000000c001ae1a                PCI::readBAR8(unsigned int, int)
                0x00000000c001ae36                PCI::readBAR16(unsigned int, int)
                0x00000000c001ae54                PCI::readBAR32(unsigned int, int)
                0x00000000c001ae70                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001ae90                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001aeb2                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001aed2                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001af48                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001aff2                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b016                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b03e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b088                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0b0                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0d4                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0f8                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b120                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b184                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b26a                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b532                PCI::checkBus(unsigned char)
                0x00000000c001b556                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b6dc                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b858                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b8ca                PCI::detect()
 *fill*         0x00000000c001b923        0x1 
 .text          0x00000000c001b924      0xb96 hw/diskctrl/ide.32
                0x00000000c001b924                IDE::close(int, int, void*)
                0x00000000c001b928                IDE::IDE()
                0x00000000c001b928                IDE::IDE()
                0x00000000c001b95c                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b96e                selectDrive(unsigned char, unsigned char)
                0x00000000c001b970                IDE::getBase(unsigned char)
                0x00000000c001b982                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ba42                IDE::read(unsigned char, unsigned char)
                0x00000000c001baf6                IDE::waitInterrupt(unsigned char)
                0x00000000c001bb58                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bb74                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bb90                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bbda                IDE::open(int, int, void*)
                0x00000000c001c014                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c0e4                IDE::detect()
                0x00000000c001c3ac                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c466                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c4ba      0x32c hw/diskctrl/satabus.32
                0x00000000c001c4ba                SATABus::close(int, int, void*)
                0x00000000c001c4be                SATABus::detect()
                0x00000000c001c4c0                SATABus::SATABus()
                0x00000000c001c4c0                SATABus::SATABus()
                0x00000000c001c546                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c578                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c5c0                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c5e0                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c60a                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c71c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c7c6                SATABus::open(int, int, void*)
 .text          0x00000000c001c7e6      0x96d hw/diskphys/ata.32
                0x00000000c001c7e6                ATA::close(int, int, void*)
                0x00000000c001c80a                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c80c                ATA::ATA()
                0x00000000c001c80c                ATA::ATA()
                0x00000000c001c83a                ATA::flush(bool)
                0x00000000c001c888                ATA::readyForCommand()
                0x00000000c001c8d4                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cc98                ATA::detectCHS()
                0x00000000c001ccc2                ATA::open(int, int, void*)
                0x00000000c001cd8e                combineCharAndColour(char, unsigned char)
                0x00000000c001cd9f                combineColours(unsigned char, unsigned char)
                0x00000000c001cdac                ATA::read(unsigned long long, int, void*)
                0x00000000c001cf82                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d153        0x1 
 .text          0x00000000c001d154      0x612 hw/diskphys/atapi.32
                0x00000000c001d154                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d15a                ATAPI::close(int, int, void*)
                0x00000000c001d17e                ATAPI::ATAPI()
                0x00000000c001d17e                ATAPI::ATAPI()
                0x00000000c001d1ac                ATAPI::readyForCommand()
                0x00000000c001d1fe                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d4be                ATAPI::diskRemoved()
                0x00000000c001d4f8                ATAPI::eject()
                0x00000000c001d540                ATAPI::diskInserted()
                0x00000000c001d54c                ATAPI::detectMedia()
                0x00000000c001d60c                ATAPI::open(int, int, void*)
                0x00000000c001d6ec                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d766      0x7ff hw/diskphys/sata.32
                0x00000000c001d766                SATA::close(int, int, void*)
                0x00000000c001d78a                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d78c                SATA::open(int, int, void*)
                0x00000000c001d836                SATA::SATA()
                0x00000000c001d836                SATA::SATA()
                0x00000000c001d864                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001dab6                SATA::read(unsigned long long, int, void*)
                0x00000000c001dd06                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001df65        0x1 
 .text          0x00000000c001df66      0x5d8 hw/diskphys/satapi.32
                0x00000000c001df66                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001df6c                SATAPI::close(int, int, void*)
                0x00000000c001df90                SATAPI::SATAPI()
                0x00000000c001df90                SATAPI::SATAPI()
                0x00000000c001dfbe                SATAPI::diskRemoved()
                0x00000000c001dfc0                SATAPI::diskInserted()
                0x00000000c001dfdc                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e2c2                SATAPI::eject()
                0x00000000c001e2fe                SATAPI::detectMedia()
                0x00000000c001e354                SATAPI::open(int, int, void*)
                0x00000000c001e454                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e53e      0x45b hw/intctrl/apic.32
                0x00000000c001e53e                IOAPIC::close(int, int, void*)
                0x00000000c001e544                apicGetBase()
                0x00000000c001e58a                IOAPIC::IOAPIC()
                0x00000000c001e58a                IOAPIC::IOAPIC()
                0x00000000c001e5b2                apicOpen()
                0x00000000c001e72e                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e760                IOAPIC::read(int)
                0x00000000c001e788                IOAPIC::open(int, int, void*)
                0x00000000c001e86e                IOAPIC::write(int, int)
                0x00000000c001e89a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e999        0x3 
 .text          0x00000000c001e99c       0xf0 hw/timer/apictimer.32
                0x00000000c001e99c                APICTimer::close(int, int, void*)
                0x00000000c001e9a4                apicTimerHandler(regs*, void*)
                0x00000000c001e9cc                APICTimer::open(int, int, void*)
                0x00000000c001ea3c                APICTimer::write(int)
                0x00000000c001ea64                APICTimer::APICTimer()
                0x00000000c001ea64                APICTimer::APICTimer()
 .text          0x00000000c001ea8c      0x1ad hw/timer/pit.32
                0x00000000c001ea8c                PIT::write(int)
                0x00000000c001eb10                pitHandler(regs*, void*)
                0x00000000c001eb38                PIT::open(int, int, void*)
                0x00000000c001eb88                PIT::close(int, int, void*)
                0x00000000c001ebb8                PIT::PIT()
                0x00000000c001ebb8                PIT::PIT()
 *fill*         0x00000000c001ec39        0x7 
 .text          0x00000000c001ec40       0x83 arch/i386/avx.32
                0x00000000c001ec40                avxDetect
                0x00000000c001ec6a                avxSave
                0x00000000c001ec7b                avxLoad
                0x00000000c001ec8c                avxInit
                0x00000000c001ecae                avxClose
                0x00000000c001ecaf                wouldSheSayYes
 *fill*         0x00000000c001ecc3        0xd 
 .text          0x00000000c001ecd0      0x2ec arch/i386/interrupt.32
                0x00000000c001ecd0                isr0
                0x00000000c001ece0                isr1
                0x00000000c001ecea                isr2
                0x00000000c001ecf4                isr3
                0x00000000c001ecfe                isr4
                0x00000000c001ed08                isr5
                0x00000000c001ed12                isr6
                0x00000000c001ed1c                isr7
                0x00000000c001ed26                isr8
                0x00000000c001ed2e                isr9
                0x00000000c001ed38                isr10
                0x00000000c001ed40                isr11
                0x00000000c001ed48                isr12
                0x00000000c001ed50                isr13
                0x00000000c001ed6a                isr14
                0x00000000c001ed72                isr15
                0x00000000c001ed7c                isr16
                0x00000000c001ed86                isr17
                0x00000000c001ed90                isr18
                0x00000000c001ed9a                irq3
                0x00000000c001eda4                irq4
                0x00000000c001edae                irq5
                0x00000000c001edb8                irq6
                0x00000000c001edc2                irq7
                0x00000000c001edcc                irq8
                0x00000000c001edd6                irq9
                0x00000000c001ede0                irq10
                0x00000000c001edea                irq11
                0x00000000c001edf4                irq12
                0x00000000c001edfe                irq13
                0x00000000c001ee08                irq14
                0x00000000c001ee12                irq15
                0x00000000c001ee1c                irq1
                0x00000000c001ee23                irq2
                0x00000000c001ee2a                isr96
                0x00000000c001ee31                irq0
                0x00000000c001ee36                int_common_stub
                0x00000000c001ee68                syscall_common_stub
                0x00000000c001ef6c                irq16
                0x00000000c001ef76                irq17
                0x00000000c001ef80                irq18
                0x00000000c001ef8a                irq19
                0x00000000c001ef94                irq20
                0x00000000c001ef9e                irq21
                0x00000000c001efa8                irq22
                0x00000000c001efb2                irq23
 *fill*         0x00000000c001efbc        0x4 
 .text          0x00000000c001efc0       0x10 arch/i386/rdrand.32
                0x00000000c001efc0                i386GetRDRAND
 .text          0x00000000c001efd0       0x39 arch/i386/sse.32
                0x00000000c001efd0                absolutelyNoChanceInHell
                0x00000000c001efd0                sseDetect
                0x00000000c001efe8                sseSave
                0x00000000c001eff0                sseLoad
                0x00000000c001eff8                sseInit
                0x00000000c001f008                sseClose
 *fill*         0x00000000c001f009        0x7 
 .text          0x00000000c001f010       0x49 arch/i386/x87.32
                0x00000000c001f016                x87Detect
                0x00000000c001f031                x87Save
                0x00000000c001f038                x87Load
                0x00000000c001f03f                x87Init
                0x00000000c001f058                x87Close
 *fill*         0x00000000c001f059        0x3 
 .text          0x00000000c001f05c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f081        0x0 crtn.32
 *fill*         0x00000000c001f081        0x3 
 .text          0x00000000c001f084      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f084                __divdi3
 *fill*         0x00000000c001f1cf        0x1 
 .text          0x00000000c001f1d0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f1d0                __moddi3
 *fill*         0x00000000c001f34e        0x2 
 .text          0x00000000c001f350       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f350                __udivdi3
 *fill*         0x00000000c001f44f        0x1 
 .text          0x00000000c001f450      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f450                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f570        0x0
 .iplt          0x00000000c001f570        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f56a        0xf
 .init          0x00000000c001f56a        0x3 crti.32
                0x00000000c001f56a                _init
 .init          0x00000000c001f56d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f572        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f577        0x2 crtn.32

.fini           0x00000000c001f579        0xa
 .fini          0x00000000c001f579        0x3 crti.32
                0x00000000c001f579                _fini
 .fini          0x00000000c001f57c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f581        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f584       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f584       0x23 core/computer.32
                0x00000000c001f584                Computer::~Computer()
                0x00000000c001f584                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f5a8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f5a8       0x2a core/computer.32
                0x00000000c001f5a8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f5d2       0x21
 .text._Z10idleCommonv
                0x00000000c001f5d2       0x21 core/idle.32
                0x00000000c001f5d2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f5f4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f5f4        0x2 core/unixfile.32
                0x00000000c001f5f4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f5f4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f5f6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f5f6       0x42 core/unixfile.32
                0x00000000c001f5f6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f5f6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f638       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f638       0xd3 core/unixfile.32
                0x00000000c001f638                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f70c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f70c        0x7 core/unixfile.32
                0x00000000c001f70c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f714       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f714       0xa1 core/unixfile.32
                0x00000000c001f714                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f7b6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f7b6        0x8 core/unixfile.32
                0x00000000c001f7b6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f7be       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f7be       0x1a hal/device.32
                0x00000000c001f7be                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f7be                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f7d8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f7d8       0x2a hal/device.32
                0x00000000c001f7d8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f802       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f802       0xdc hal/device.32
                0x00000000c001f802                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f8de       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f8de       0x42 hal/device.32
                0x00000000c001f8de                LinkedList<Device>::LinkedList()
                0x00000000c001f8de                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f920       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f920       0x1c hal/timer.32
                0x00000000c001f920                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f93c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f93c        0x7 hal/timer.32
                0x00000000c001f93c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f944       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f944       0xbc hal/timer.32
                0x00000000c001f944                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fa00       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fa00       0xda hal/timer.32
                0x00000000c001fa00                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fadc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fadc       0x23 hw/acpi.32
                0x00000000c001fadc                ACPI::~ACPI()
                0x00000000c001fadc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fb00       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fb00       0x2a hw/acpi.32
                0x00000000c001fb00                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fb2c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fb2c        0x2 hw/acpi.32
                0x00000000c001fb2c                LinkedList<Device>::~LinkedList()
                0x00000000c001fb2c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fb30       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fb30       0x1c hw/acpi.32
                0x00000000c001fb30                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fb4c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fb4c        0x7 hw/acpi.32
                0x00000000c001fb4c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fb54       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fb54       0xb8 hw/acpi.32
                0x00000000c001fb54                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001fc0c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fc0c       0x23 hw/cpu.32
                0x00000000c001fc0c                CPU::~CPU()
                0x00000000c001fc0c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fc30       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fc30       0x2a hw/cpu.32
                0x00000000c001fc30                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fc5c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fc5c        0x8 sys/kill.32
                0x00000000c001fc5c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fc64        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fc64        0x2 thr/prcssthr.32
                0x00000000c001fc64                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fc64                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fc68       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fc68       0x49 thr/prcssthr.32
                0x00000000c001fc68                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fc68                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fcb4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fcb4       0x42 thr/prcssthr.32
                0x00000000c001fcb4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fcb4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fcf6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fcf6       0x23 hw/bus/pci.32
                0x00000000c001fcf6                PCI::~PCI()
                0x00000000c001fcf6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fd1a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fd1a       0x2a hw/bus/pci.32
                0x00000000c001fd1a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fd44       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fd44       0x23 hw/diskctrl/ide.32
                0x00000000c001fd44                IDE::~IDE()
                0x00000000c001fd44                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fd68       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fd68       0x2a hw/diskctrl/ide.32
                0x00000000c001fd68                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001fd92       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001fd92       0x23 hw/diskctrl/satabus.32
                0x00000000c001fd92                SATABus::~SATABus()
                0x00000000c001fd92                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001fdb6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001fdb6       0x2a hw/diskctrl/satabus.32
                0x00000000c001fdb6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001fde0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fde0       0x23 hw/diskphys/ata.32
                0x00000000c001fde0                ATA::~ATA()
                0x00000000c001fde0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fe04       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fe04       0x2a hw/diskphys/ata.32
                0x00000000c001fe04                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fe2e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fe2e       0x23 hw/diskphys/atapi.32
                0x00000000c001fe2e                ATAPI::~ATAPI()
                0x00000000c001fe2e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fe52       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fe52       0x2a hw/diskphys/atapi.32
                0x00000000c001fe52                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001fe7c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001fe7c       0x23 hw/diskphys/sata.32
                0x00000000c001fe7c                SATA::~SATA()
                0x00000000c001fe7c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001fea0       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001fea0       0x2a hw/diskphys/sata.32
                0x00000000c001fea0                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001feca       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001feca       0x23 hw/diskphys/satapi.32
                0x00000000c001feca                SATAPI::~SATAPI()
                0x00000000c001feca                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001feee       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001feee       0x2a hw/diskphys/satapi.32
                0x00000000c001feee                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001ff18       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001ff18       0x23 hw/intctrl/apic.32
                0x00000000c001ff18                IOAPIC::~IOAPIC()
                0x00000000c001ff18                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001ff3c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001ff3c       0x2a hw/intctrl/apic.32
                0x00000000c001ff3c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ff68       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ff68       0x23 hw/timer/apictimer.32
                0x00000000c001ff68                APICTimer::~APICTimer()
                0x00000000c001ff68                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ff8c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ff8c       0x2a hw/timer/apictimer.32
                0x00000000c001ff8c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ffb8       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ffb8       0x23 hw/timer/pit.32
                0x00000000c001ffb8                PIT::~PIT()
                0x00000000c001ffb8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ffdc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ffdc       0x2a hw/timer/pit.32
                0x00000000c001ffdc                PIT::~PIT()

.rodata         0x00000000c0020006     0x318a
                0x00000000c0020006                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020006        0x2 
 .ctors         0x00000000c0020008        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c002000c        0x4 core/unixfile.32
 .ctors         0x00000000c0020010        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020014        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020018                end_ctors = .
                0x00000000c0020018                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020018        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002001c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002001c                __DTOR_END__
                0x00000000c0020020                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020020        0x0 
 .rodata        0x00000000c0020020      0x101 acpica/utclib.32
                0x00000000c0020020                AcpiGbl_Ctypes
 *fill*         0x00000000c0020121        0x3 
 .rodata        0x00000000c0020124       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002013c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020186       0x1a 
 .rodata        0x00000000c00201a0       0xed fs/fat/ff.32
 *fill*         0x00000000c002028d       0x13 
 .rodata        0x00000000c00202a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00206a0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002070f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020824       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c002088c       0x2c core/computer.32
                0x00000000c002088c                vtable for Computer
 .rodata.str1.4
                0x00000000c00208b8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00208e8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00208f4       0x17 core/main.32
 *fill*         0x00000000c002090b        0x1 
 .rodata.str1.4
                0x00000000c002090c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c00209b1       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020a09       0x39 core/pipe.32
 *fill*         0x00000000c0020a42        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020a44       0x1c core/pipe.32
                0x00000000c0020a44                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020a60       0x2b core/terminal.32
 *fill*         0x00000000c0020a8b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020a8c       0x1c core/terminal.32
                0x00000000c0020a8c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020aa8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020aca       0x15 core/unixfile.32
 *fill*         0x00000000c0020adf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020ae0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020b2b        0x8 core/unixfile.32
 *fill*         0x00000000c0020b33        0x1 
 .rodata.str1.4
                0x00000000c0020b34       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020b54       0x1c core/unixfile.32
                0x00000000c0020b54                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020b70       0x1c core/unixfile.32
                0x00000000c0020b70                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020b8c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020e20      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020f46       0x33 coreobjs/c++.32
 *fill*         0x00000000c0020f79        0x3 
 .rodata        0x00000000c0020f7c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00210cc      0x169 dbg/usban.32
 *fill*         0x00000000c0021235        0x3 
 .rodata.str1.4
                0x00000000c0021238      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002136f      0x120 fs/symlink.32
                                        0x12c (size before relaxing)
 .rodata.str1.1
                0x00000000c002148f       0x26 fs/vfs.32
                                         0x28 (size before relaxing)
 *fill*         0x00000000c00214b5        0x3 
 .rodata._ZTV10Filesystem
                0x00000000c00214b8       0x6c fs/vfs.32
                0x00000000c00214b8                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021524       0x1c fs/vfs.32
                0x00000000c0021524                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021540       0x1c fs/vfs.32
                0x00000000c0021540                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002155c       0x2c hal/bus.32
                0x00000000c002155c                vtable for Bus
 .rodata.str1.1
                0x00000000c0021588       0x1e hal/clock.32
 *fill*         0x00000000c00215a6        0x2 
 .rodata._ZTV5Clock
                0x00000000c00215a8       0x3c hal/clock.32
                0x00000000c00215a8                vtable for Clock
 *fill*         0x00000000c00215e4       0x1c 
 .rodata        0x00000000c0021600       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021630       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021688       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021688       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021688       0x2c hal/device.32
                0x00000000c0021688                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00216b4       0x2c hal/device.32
                0x00000000c00216b4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00216e0       0x2c hal/diskctrl.32
                0x00000000c00216e0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002170c       0x38 hal/diskphys.32
                0x00000000c002170c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021744       0x3e hal/intctrl.32
 *fill*         0x00000000c0021782        0x2 
 .rodata.str1.4
                0x00000000c0021784       0x5d hal/intctrl.32
 .rodata        0x00000000c00217e1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021834       0x34 hal/keybrd.32
                0x00000000c0021834                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021868       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00218ac       0x2c hal/logidisk.32
                0x00000000c00218ac                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00218d8       0x2c hal/mouse.32
                0x00000000c00218d8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021904       0x34 hal/nic.32
                0x00000000c0021904                vtable for NIC
 .rodata.str1.1
                0x00000000c0021938        0xb hal/partition.32
 *fill*         0x00000000c0021943        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021944       0x44 hal/serial.32
                0x00000000c0021944                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021988       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021988        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021988       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021988       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021988       0x30 hal/timer.32
                0x00000000c0021988                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00219b8       0x10 hal/vcache.32
                0x00000000c00219b8                vtable for VCache
 .rodata.str1.1
                0x00000000c00219c8       0x93 hal/video.32
 *fill*         0x00000000c0021a5b        0x1 
 .rodata._ZTV5Video
                0x00000000c0021a5c       0x4c hal/video.32
                0x00000000c0021a5c                vtable for Video
 .rodata.str1.4
                0x00000000c0021aa8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021b43      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021c99       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021c99        0x8 hw/acpi.32
 *fill*         0x00000000c0021c99        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021c9c       0x2c hw/acpi.32
                0x00000000c0021c9c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021cc8      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0021e43        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021e44       0x2c hw/cpu.32
                0x00000000c0021e44                vtable for CPU
 .rodata.str1.1
                0x00000000c0021e70       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021eb0       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021eec       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0021f7d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022046       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002208e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00220b9       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002212f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022174        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002217e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002219f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022235       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022289       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00222b5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022481       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00224d8      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00225e8       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00225e8       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00225e8       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00225e8        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00225e8       0xc2 vm86/vm8086.32
 *fill*         0x00000000c00226aa        0x2 
 .rodata        0x00000000c00226ac       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00226dc      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c002287b        0x1 
 .rodata.str1.4
                0x00000000c002287c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c00228ef       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022904       0x3c arch/i386/rtc.32
                0x00000000c0022904                vtable for RTC
 .rodata.str1.1
                0x00000000c0022940       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022981        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022984       0x6c fs/fat/vfslink.32
                0x00000000c0022984                vtable for FAT
 .rodata.str1.1
                0x00000000c00229f0       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00229f0      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022b28       0x6c fs/iso9660/vfslink.32
                0x00000000c0022b28                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022b94       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022bd8       0x34 hal/sound/sndcard.32
                0x00000000c0022bd8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022c0c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022c4b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022c83       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022d24       0x2c hw/bus/pci.32
                0x00000000c0022d24                vtable for PCI
 .rodata.str1.1
                0x00000000c0022d50       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022dd7        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022dd8       0x2c hw/diskctrl/ide.32
                0x00000000c0022dd8                vtable for IDE
 .rodata.str1.4
                0x00000000c0022e04       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022e28       0x2c hw/diskctrl/satabus.32
                0x00000000c0022e28                vtable for SATABus
 .rodata.str1.1
                0x00000000c0022e54       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0022e66        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022e68       0x38 hw/diskphys/ata.32
                0x00000000c0022e68                vtable for ATA
 .rodata.str1.1
                0x00000000c0022ea0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022ead        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0022eb0       0x38 hw/diskphys/atapi.32
                0x00000000c0022eb0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022ee8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0022f64       0x38 hw/diskphys/sata.32
                0x00000000c0022f64                vtable for SATA
 .rodata.str1.1
                0x00000000c0022f9c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0023086        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0023088       0x38 hw/diskphys/satapi.32
                0x00000000c0023088                vtable for SATAPI
 .rodata        0x00000000c00230c0        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00230c8       0x2c hw/intctrl/apic.32
                0x00000000c00230c8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00230f4       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002310f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023110       0x30 hw/timer/apictimer.32
                0x00000000c0023110                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023140       0x1d hw/timer/pit.32
 *fill*         0x00000000c002315d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023160       0x30 hw/timer/pit.32
                0x00000000c0023160                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023190      0x7b1
 *(.data)
 .data          0x00000000c0023190        0x0 crti.32
 .data          0x00000000c0023190        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023190                __dso_handle
 .data          0x00000000c0023194        0x0 acpica/utclib.32
 .data          0x00000000c0023194        0x0 core/malloc.32
 .data          0x00000000c0023194        0x0 libk/ctype.32
 .data          0x00000000c0023194        0x0 libk/string.32
 .data          0x00000000c0023194        0x0 fs/fat/diskio.32
 .data          0x00000000c0023194        0x0 fs/fat/ff.32
 .data          0x00000000c0023194        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023194        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023194        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023194        0x0 core/computer.32
 .data          0x00000000c0023194        0x0 core/gdt.32
 .data          0x00000000c0023194        0x0 core/idle.32
 .data          0x00000000c0023194        0x0 core/idt.32
 .data          0x00000000c0023194        0x4 core/kheap.32
 .data          0x00000000c0023198        0x0 core/main.32
 .data          0x00000000c0023198        0x4 core/physmgr.32
                0x00000000c0023198                Phys::bitmap
 .data          0x00000000c002319c        0x0 core/pipe.32
 *fill*         0x00000000c002319c        0x4 
 .data          0x00000000c00231a0       0x60 core/terminal.32
                0x00000000c00231a0                VgaText::hiddenOut
                0x00000000c00231c0                ansiToVGAMappings
 .data          0x00000000c0023200        0x0 core/tss.32
 .data          0x00000000c0023200        0x4 core/unixfile.32
                0x00000000c0023200                UnixFile::nextFd
 .data          0x00000000c0023204       0x15 core/virtmgr.32
                0x00000000c0023204                Virt::pageAllocPtr
                0x00000000c0023208                Virt::bitmap
                0x00000000c002320c                Virt::swapfileSectorsPerPage
                0x00000000c0023210                Virt::swapfileLength
                0x00000000c0023214                Virt::swapfileSector
                0x00000000c0023218                Virt::swapfileDrive
 *fill*         0x00000000c0023219        0x3 
 .data          0x00000000c002321c        0x4 coreobjs/c++.32
                0x00000000c002321c                __stack_chk_guard
 .data          0x00000000c0023220        0x0 dbg/kconsole.32
 .data          0x00000000c0023220       0x28 dbg/usban.32
                0x00000000c0023220                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023248        0x0 fs/symlink.32
 .data          0x00000000c0023248        0x0 fs/vfs.32
 .data          0x00000000c0023248        0x0 hal/bus.32
 .data          0x00000000c0023248        0x0 hal/buzzer.32
 .data          0x00000000c0023248        0x0 hal/clock.32
 .data          0x00000000c0023248        0x0 hal/device.32
 .data          0x00000000c0023248        0x0 hal/diskctrl.32
 .data          0x00000000c0023248        0x0 hal/diskphys.32
 .data          0x00000000c0023248        0x0 hal/fpu.32
 .data          0x00000000c0023248        0x0 hal/intctrl.32
 .data          0x00000000c0023248        0x0 hal/keybrd.32
 .data          0x00000000c0023248        0x0 hal/logidisk.32
 .data          0x00000000c0023248        0x0 hal/mouse.32
 .data          0x00000000c0023248        0x0 hal/nic.32
 .data          0x00000000c0023248        0x0 hal/partition.32
 .data          0x00000000c0023248        0x0 hal/serial.32
 .data          0x00000000c0023248        0x0 hal/timer.32
 .data          0x00000000c0023248        0x0 hal/vcache.32
 .data          0x00000000c0023248        0x0 hal/video.32
 .data          0x00000000c0023248       0x10 hw/acpi.32
                0x00000000c0023248                legacyIRQRemaps
 .data          0x00000000c0023258        0x4 hw/cpu.32
                0x00000000c0023258                lastCode
 .data          0x00000000c002325c        0x0 krnl/atexit.32
 *fill*         0x00000000c002325c        0x4 
 .data          0x00000000c0023260      0x142 krnl/bootmsg.32
                0x00000000c0023260                KiSplashScreen
 .data          0x00000000c00233a2        0x0 krnl/compat.32
 *fill*         0x00000000c00233a2       0x1e 
 .data          0x00000000c00233c0       0x4d krnl/env.32
                0x00000000c00233c0                defaultSysEnv
 .data          0x00000000c002340d        0x0 krnl/inlines.32
 .data          0x00000000c002340d        0x0 krnl/panic.32
 .data          0x00000000c002340d        0x0 krnl/powctrl.32
 .data          0x00000000c002340d        0x0 krnl/random.32
 .data          0x00000000c002340d        0x0 krnl/resolve.32
 *fill*         0x00000000c002340d       0x13 
 .data          0x00000000c0023420       0x4c krnl/signal.32
                0x00000000c0023420                KiDefaultSignalHandlers
 *fill*         0x00000000c002346c       0x14 
 .data          0x00000000c0023480       0xfc krnl/syscalls.32
                0x00000000c0023480                systemCallHandlers
 .data          0x00000000c002357c        0x0 net/ethernet.32
 *fill*         0x00000000c002357c        0x4 
 .data          0x00000000c0023580      0x100 reg/cm.32
                0x00000000c0023580                CmComponents
 .data          0x00000000c0023680        0x0 reg/registry.32
 .data          0x00000000c0023680        0x0 sys/eject.32
 .data          0x00000000c0023680        0x0 sys/exit.32
 .data          0x00000000c0023680        0x0 sys/getcwd.32
 .data          0x00000000c0023680        0x0 sys/getpid.32
 .data          0x00000000c0023680        0x0 sys/getramdata.32
 .data          0x00000000c0023680        0x0 sys/getvgaptr.32
 .data          0x00000000c0023680        0x0 sys/kill.32
 .data          0x00000000c0023680        0x0 sys/loaddll.32
 .data          0x00000000c0023680        0x0 sys/read.32
 .data          0x00000000c0023680        0x0 sys/registersignal.32
 .data          0x00000000c0023680        0x0 sys/registry.32
 .data          0x00000000c0023680        0x0 sys/sbrk.32
 .data          0x00000000c0023680        0x0 sys/setcwd.32
 .data          0x00000000c0023680        0x0 sys/settime.32
 .data          0x00000000c0023680        0x0 sys/symlink.32
 .data          0x00000000c0023680        0x0 sys/timezone.32
 .data          0x00000000c0023680        0x0 sys/truncate.32
 .data          0x00000000c0023680        0x0 sys/write.32
 .data          0x00000000c0023680        0x0 sys/wsbe.32
 .data          0x00000000c0023680        0x0 sys/yield.32
 .data          0x00000000c0023680        0x0 thr/elf.32
 .data          0x00000000c0023680        0x4 thr/prcssthr.32
                0x00000000c0023680                Thr::nextPID
 .data          0x00000000c0023684        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023684       0x1c 
 .data          0x00000000c00236a0      0x2a0 arch/i386/hal.32
                0x00000000c00236a0                exceptionNames
 .data          0x00000000c0023940        0x0 arch/i386/pic.32
 .data          0x00000000c0023940        0x0 arch/i386/rtc.32
 .data          0x00000000c0023940        0x0 arch/i386/vga.32
 .data          0x00000000c0023940        0x0 fs/fat/vfslink.32
 .data          0x00000000c0023940        0x0 fs/iso9660/helper.32
 .data          0x00000000c0023940        0x1 fs/iso9660/vfslink.32
                0x00000000c0023940                recentDriveletter
 .data          0x00000000c0023941        0x0 hal/sound/sndcard.32
 .data          0x00000000c0023941        0x0 hal/sound/sndport.32
 .data          0x00000000c0023941        0x0 hw/bus/isa.32
 .data          0x00000000c0023941        0x0 hw/bus/pci.32
 .data          0x00000000c0023941        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0023941        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0023941        0x0 hw/diskphys/ata.32
 .data          0x00000000c0023941        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0023941        0x0 hw/diskphys/sata.32
 .data          0x00000000c0023941        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0023941        0x0 hw/intctrl/apic.32
 .data          0x00000000c0023941        0x0 hw/timer/apictimer.32
 .data          0x00000000c0023941        0x0 hw/timer/pit.32
 .data          0x00000000c0023941        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0023941        0x0 crtn.32
 .data          0x00000000c0023941        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0023941        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0023941        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0023941        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0023944        0x0
 .got           0x00000000c0023944        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0023944        0x0
 .got.plt       0x00000000c0023944        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0023944        0x0
 .igot.plt      0x00000000c0023944        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0023944        0x0
 .tm_clone_table
                0x00000000c0023944        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0023944        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0023941      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0023941        0x3 
 .eh_frame      0x00000000c0023944        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0023944        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0023944       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002399c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00239dc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0023a48       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x5107
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0025fb4        0xc 
 .bss           0x00000000c0025fc0      0x444 fs/symlink.32
                0x00000000c0025fc0                KiNumWaitingRoomSymlinks
                0x00000000c0025fe0                KiNewlyCreatedIDs
                0x00000000c0026000                KiNewlyCreatedSymlinks
                0x00000000c0026400                KiBaseSymlinkID
 .bss           0x00000000c0026404        0x4 fs/vfs.32
                0x00000000c0026404                installedFilesystems
 .bss           0x00000000c0026408        0x0 hal/bus.32
 .bss           0x00000000c0026408        0x0 hal/buzzer.32
 .bss           0x00000000c0026408        0x8 hal/clock.32
                0x00000000c0026408                User::dstOn
                0x00000000c0026409                User::timezoneHalfHourOffset
                0x00000000c002640c                User::timezoneHourOffset
 .bss           0x00000000c0026410        0x0 hal/device.32
 .bss           0x00000000c0026410        0x0 hal/diskctrl.32
 .bss           0x00000000c0026410        0x0 hal/diskphys.32
 .bss           0x00000000c0026410        0x0 hal/fpu.32
 *fill*         0x00000000c0026410       0x10 
 .bss           0x00000000c0026420     0x2000 hal/intctrl.32
                0x00000000c0026420                INT_contexts
                0x00000000c0027420                INT_handlers
 .bss           0x00000000c0028420      0x429 hal/keybrd.32
                0x00000000c0028420                keyboardWaitingTaskList
                0x00000000c0028424                keyboardSetupYet
                0x00000000c0028428                guiKeyboardHandler
                0x00000000c0028440                keystates
 *fill*         0x00000000c0028849       0x17 
 .bss           0x00000000c0028860       0x88 hal/logidisk.32
                0x00000000c0028860                diskAssignments
                0x00000000c0028880                disks
 .bss           0x00000000c00288e8        0x4 hal/mouse.32
                0x00000000c00288e8                guiMouseHandler
 .bss           0x00000000c00288ec        0x0 hal/nic.32
 .bss           0x00000000c00288ec        0x0 hal/partition.32
 .bss           0x00000000c00288ec        0x0 hal/serial.32
 .bss           0x00000000c00288ec        0x4 hal/timer.32
                0x00000000c00288ec                milliTenthsSinceBoot
 .bss           0x00000000c00288f0        0x0 hal/vcache.32
 .bss           0x00000000c00288f0        0x4 hal/video.32
                0x00000000c00288f0                screen
 *fill*         0x00000000c00288f4        0xc 
 .bss           0x00000000c0028900      0x480 hw/acpi.32
                0x00000000c0028900                systemSleepFunction
                0x00000000c0028904                systemResetFunction
                0x00000000c0028908                systemShutdownFunction
                0x00000000c002890c                nextACPITable
                0x00000000c0028920                acpiTables
                0x00000000c0028b20                usingXSDT
                0x00000000c0028b24                MADTpointer
                0x00000000c0028b28                RSDTpointer
                0x00000000c0028b2c                RSDPpointer
                0x00000000c0028b30                nextAPICNMI
                0x00000000c0028b40                apicNMIInfo
                0x00000000c0028bc0                legacyIRQFlags
                0x00000000c0028be0                ioapicDiscoveryNumber
                0x00000000c0028c00                ioapicFoundInMADT
                0x00000000c0028c20                ioapicAddresses
                0x00000000c0028ca0                ioapicGSIBase
                0x00000000c0028d20                processorDiscoveryNumber
                0x00000000c0028d40                matchingAPICID
                0x00000000c0028d60                processorID
 .bss           0x00000000c0028d80       0x10 hw/cpu.32
                0x00000000c0028d80                lastD
                0x00000000c0028d84                lastC
                0x00000000c0028d88                lastB
                0x00000000c0028d8c                lastA
 *fill*         0x00000000c0028d90       0x10 
 .bss           0x00000000c0028da0       0xe0 krnl/atexit.32
                0x00000000c0028da0                KiNextAtexitHandler
                0x00000000c0028dc0                KiAtexitContexts
                0x00000000c0028e20                KiAtexitHandlers
 .bss           0x00000000c0028e80        0x0 krnl/bootmsg.32
 .bss           0x00000000c0028e80        0x0 krnl/compat.32
 .bss           0x00000000c0028e80        0x8 krnl/env.32
                0x00000000c0028e80                KeUserEnv
                0x00000000c0028e84                KeSystemEnv
 .bss           0x00000000c0028e88        0x0 krnl/inlines.32
 .bss           0x00000000c0028e88        0x1 krnl/panic.32
                0x00000000c0028e88                KeIsKernelInPanic
 *fill*         0x00000000c0028e89       0x17 
 .bss           0x00000000c0028ea0       0x48 krnl/powctrl.32
                0x00000000c0028ea0                powCtrlOnBattery
                0x00000000c0028ec0                currentPowerSettings
                0x00000000c0028ee4                secondsSinceLastUserIO
 .bss           0x00000000c0028ee8        0x8 krnl/random.32
                0x00000000c0028ee8                kiRandSeed
 .bss           0x00000000c0028ef0        0x0 krnl/resolve.32
 .bss           0x00000000c0028ef0        0x0 krnl/signal.32
 .bss           0x00000000c0028ef0        0x0 krnl/syscalls.32
 .bss           0x00000000c0028ef0        0x0 net/ethernet.32
 .bss           0x00000000c0028ef0        0x4 reg/cm.32
 .bss           0x00000000c0028ef4        0x0 reg/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/eject.32
 .bss           0x00000000c0028ef4        0x0 sys/exit.32
 .bss           0x00000000c0028ef4        0x0 sys/getcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/getpid.32
 .bss           0x00000000c0028ef4        0x0 sys/getramdata.32
 .bss           0x00000000c0028ef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c0028ef4        0x0 sys/kill.32
 .bss           0x00000000c0028ef4        0x0 sys/loaddll.32
 .bss           0x00000000c0028ef4        0x0 sys/read.32
 .bss           0x00000000c0028ef4        0x0 sys/registersignal.32
 .bss           0x00000000c0028ef4        0x0 sys/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/sbrk.32
 .bss           0x00000000c0028ef4        0x0 sys/setcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/settime.32
 .bss           0x00000000c0028ef4        0x0 sys/symlink.32
 .bss           0x00000000c0028ef4        0x0 sys/timezone.32
 .bss           0x00000000c0028ef4        0x0 sys/truncate.32
 .bss           0x00000000c0028ef4        0x0 sys/write.32
 .bss           0x00000000c0028ef4        0x0 sys/wsbe.32
 .bss           0x00000000c0028ef4        0x0 sys/yield.32
 *fill*         0x00000000c0028ef4        0xc 
 .bss           0x00000000c0028f00      0x7a4 thr/elf.32
                0x00000000c0028f00                Thr::driverLookupNext
                0x00000000c0028f20                Thr::driverLookupLen
                0x00000000c0029120                Thr::driverLookupAddr
                0x00000000c0029320                Thr::driverNameLookup
                0x00000000c0029520                Thr::kernelSymbols
                0x00000000c00295a0                Thr::kernelStringTable
                0x00000000c0029620                Thr::kernelSymbolTable
                0x00000000c00296a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00296a4        0x4 
 .bss           0x00000000c00296a8       0x68 thr/prcssthr.32
                0x00000000c00296a8                cleanerThread
                0x00000000c00296ac                weNeedTheCleanerToNotBlock
                0x00000000c00296b0                retValLockStuff
                0x00000000c00296b4                retValSchedLock
                0x00000000c00296b8                lockStuffLock
                0x00000000c00296bc                schedulerLock
                0x00000000c00296c0                taskSwitchesPostponedFlag
                0x00000000c00296c4                postponeTaskSwitchesCounter
                0x00000000c00296c8                irqDisableCounter
                0x00000000c00296cc                terminatedTaskList
                0x00000000c00296d8                sleepingTaskList
                0x00000000c00296e4                taskList
                0x00000000c00296f0                kernelProcess
 *fill*         0x00000000c0029710       0x10 
 .bss           0x00000000c0029720       0x40 vm86/vm8086.32
                0x00000000c0029720                Vm::vmRetV
                0x00000000c0029724                Vm::vmDone
                0x00000000c0029725                Vm::vmReady
                0x00000000c0029728                Vm::vm86Thread
                0x00000000c002972c                Vm::vmToHostCommsPtr
                0x00000000c0029740                Vm::vmToHostComms
 .bss           0x00000000c0029760       0x18 arch/i386/hal.32
                0x00000000c0029760                apic
                0x00000000c0029764                guiPanicHandler
                0x00000000c0029768                fpuOwner
                0x00000000c002976c                coproLoadFunc
                0x00000000c0029770                coproSaveFunc
                0x00000000c0029774                gpFaultIntercept
 .bss           0x00000000c0029778        0x0 arch/i386/pic.32
 .bss           0x00000000c0029778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002977a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002977a        0x6 
 .bss           0x00000000c0029780       0xf0 fs/fat/vfslink.32
                0x00000000c0029780                FAT::fats
                0x00000000c00297a0                FAT::vfsToFatRemaps
                0x00000000c0029820                fatToVFSRemaps
 .bss           0x00000000c0029870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0029870       0x10 
 .bss           0x00000000c0029880      0x820 fs/iso9660/vfslink.32
                0x00000000c0029880                iso9660Owner
                0x00000000c0029884                recentSector
                0x00000000c00298a0                recentBuffer
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002a0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002a0a0        0xd hw/bus/pci.32
                0x00000000c002a0a0                thePCI
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002a0ad        0x3 
 .bss           0x00000000c002a0b0        0x8 hw/diskphys/ata.32
                0x00000000c002a0b0                ataSectorsWritten
                0x00000000c002a0b4                ataSectorsRead
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002a0b8        0x8 
 .bss           0x00000000c002a0c0       0x41 hw/intctrl/apic.32
                0x00000000c002a0c0                noOfIOAPICs
                0x00000000c002a0e0                ioapics
                0x00000000c002a100                IOAPICsSetupYet
 .bss           0x00000000c002a101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002a101        0x3 
 .bss           0x00000000c002a104        0x4 hw/timer/pit.32
                0x00000000c002a104                pitFreq
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002a108        0x0 crtn.32
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002a108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002f20f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
