Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1ed4a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6b9 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cc5                Krnl::firstTask()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006eb0                Computer::setBootMessage(char const*)
                0x00000000c0006eb2                Computer::detectFeatures()
                0x00000000c00070d8                Computer::displayFeatures()
                0x00000000c00070da                Computer::rdmsr(unsigned int)
                0x00000000c0007106                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007142                Computer::shutdown()
                0x00000000c000715a                Computer::restart()
                0x00000000c0007172                Computer::sleep()
                0x00000000c0007186                Computer::nmiEnabled()
                0x00000000c0007192                Computer::readCMOS(unsigned char)
                0x00000000c00071ae                Computer::enableNMI(bool)
                0x00000000c00071c6                Computer::open(int, int, void*)
                0x00000000c000729a                Computer::disableNMI()
                0x00000000c00072aa                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072ce                Computer::handleNMI()
 *fill*         0x00000000c0007339        0x1 
 .text          0x00000000c000733a      0x1db core/gdt.32
                0x00000000c000733a                GDTEntry::setBase(unsigned int)
                0x00000000c0007356                GDTEntry::setLimit(unsigned int)
                0x00000000c0007374                GDT::GDT()
                0x00000000c0007374                GDT::GDT()
                0x00000000c000738a                GDT::addEntry(GDTEntry)
                0x00000000c00073ac                GDT::getNumberOfEntries()
                0x00000000c00073b4                GDT::flush()
                0x00000000c00073d6                GDT::setup()
 .text          0x00000000c0007515       0x1d core/idle.32
                0x00000000c0007515                idleFunction(void*)
 *fill*         0x00000000c0007532        0x2 
 .text          0x00000000c0007534      0x46c core/idt.32
                0x00000000c0007534                IDTEntry::IDTEntry(bool)
                0x00000000c0007534                IDTEntry::IDTEntry(bool)
                0x00000000c00075ae                IDTEntry::setOffset(unsigned int)
                0x00000000c00075c4                IDT::IDT()
                0x00000000c00075c4                IDT::IDT()
                0x00000000c00075c6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075ce                IDT::addEntry(IDTEntry, int)
                0x00000000c00075e8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007620                IDT::flush()
                0x00000000c000763a                IDT::setup()
 .text          0x00000000c00079a0      0x185 core/kheap.32
                0x00000000c00079a0                sbrk
                0x00000000c0007a34                mmap
                0x00000000c0007a4a                munmap
                0x00000000c0007a60                liballoc_lock()
                0x00000000c0007a6e                liballoc_unlock()
                0x00000000c0007a84                liballoc_alloc(int)
                0x00000000c0007a9c                liballoc_free(void*, int)
                0x00000000c0007ab7                realloc
                0x00000000c0007acb                malloc
                0x00000000c0007adb                free
                0x00000000c0007aeb                rfree
                0x00000000c0007afb                calloc
 .text          0x00000000c0007b25       0xc2 core/main.32
                0x00000000c0007b25                KeEntryPoint
 .text          0x00000000c0007be7      0x643 core/physmgr.32
                0x00000000c0007be7                Phys::allocateDMA(unsigned long)
                0x00000000c0007cd5                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d10                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d50                Phys::getPageState(unsigned long)
                0x00000000c0007d6c                Phys::freePage(unsigned long)
                0x00000000c0007dd5                Phys::allocatePage()
                0x00000000c0007ea4                Phys::allocateContiguousPages(int)
                0x00000000c0007f0b                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f43                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000822a      0x26d core/pipe.32
                0x00000000c000822a                Pipe::isAtty()
                0x00000000c000822e                Pipe::~Pipe()
                0x00000000c000822e                Pipe::~Pipe()
                0x00000000c0008252                Pipe::~Pipe()
                0x00000000c000827a                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000833e                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008430                Pipe::Pipe(int)
                0x00000000c0008430                Pipe::Pipe(int)
 *fill*         0x00000000c0008497        0x1 
 .text          0x00000000c0008498      0xa85 core/terminal.32
                0x00000000c0008498                VgaText::isAtty()
                0x00000000c000849c                VgaText::~VgaText()
                0x00000000c000849c                VgaText::~VgaText()
                0x00000000c00084c0                VgaText::~VgaText()
                0x00000000c00084ea                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000850a                setTerminalScrollLock(bool)
                0x00000000c000850b                doTerminalCycle()
                0x00000000c000850c                addToTerminalCycle(VgaText*)
                0x00000000c000850d                scrollTerminalScrollLock(int)
                0x00000000c000850e                VgaText::updateTitle()
                0x00000000c0008510                VgaText::load()
                0x00000000c0008512                VgaText::updateCursor()
                0x00000000c0008528                VgaText::doANSI_SGR(int)
                0x00000000c000859c                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ac                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085bc                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085dc                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e8                VgaText::setTitleColour(VgaColour)
                0x00000000c00085f4                VgaText::setTitle(char*)
                0x00000000c00085f6                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008608                VgaText::scrollScreen()
                0x00000000c000869a                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086aa                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000873a                VgaText::getCursorX()
                0x00000000c0008742                VgaText::getCursorY()
                0x00000000c000874a                VgaText::setCursor(int, int)
                0x00000000c0008761                setActiveTerminal(VgaText*)
                0x00000000c00087ac                VgaText::clearScreen()
                0x00000000c00087fa                VgaText::setCursorX(int)
                0x00000000c0008812                VgaText::setCursorY(int)
                0x00000000c000882a                VgaText::incrementCursor(bool)
                0x00000000c000887e                VgaText::decrementCursor(bool)
                0x00000000c00088a0                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008970                VgaText::putchar(char)
                0x00000000c0008a58                VgaText::putx(unsigned int)
                0x00000000c0008a9e                VgaText::puts(char const*)
                0x00000000c0008ac4                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b10                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c5e                VgaText::VgaText(char const*)
                0x00000000c0008c5e                VgaText::VgaText(char const*)
                0x00000000c0008dae                VgaText::receiveKey(unsigned char)
                0x00000000c0008f1c                VgaText::doUpdate()
 *fill*         0x00000000c0008f1d        0x3 
 .text          0x00000000c0008f20      0x1a1 core/tss.32
                0x00000000c0008f20                TSS::TSS()
                0x00000000c0008f20                TSS::TSS()
                0x00000000c0008f30                TSS::setESP(unsigned long)
                0x00000000c0008f44                TSS::flush()
                0x00000000c0008f64                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090c1        0x1 
 .text          0x00000000c00090c2      0x4ca core/unixfile.32
                0x00000000c00090c2                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009118                ReservedFilename::isAtty()
                0x00000000c0009134                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0009192                UnixFile::getFileDescriptor()
                0x00000000c000919a                UnixFile::UnixFile(int)
                0x00000000c000919a                UnixFile::UnixFile(int)
                0x00000000c000934e                ReservedFilename::ReservedFilename(int)
                0x00000000c000934e                ReservedFilename::ReservedFilename(int)
                0x00000000c0009380                UnixFile::~UnixFile()
                0x00000000c0009380                UnixFile::~UnixFile()
                0x00000000c000941c                UnixFile::~UnixFile()
                0x00000000c0009444                ReservedFilename::~ReservedFilename()
                0x00000000c0009444                ReservedFilename::~ReservedFilename()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c000948f                KeGetFileFromDescriptor(int)
 .text          0x00000000c000958c     0x1224 core/virtmgr.32
                0x00000000c000958c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095c6                Virt::getPageState(unsigned long)
                0x00000000c00095e9                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009705                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009728                Virt::swapIDToSector(unsigned long)
                0x00000000c000973e                Virt::allocateSwapfilePage()
                0x00000000c00097bd                Virt::virtualMemorySetup()
                0x00000000c000980e                Virt::setupPageSwapping(int)
                0x00000000c0009880                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009882                VAS::VAS(VAS*)
                0x00000000c0009882                VAS::VAS(VAS*)
                0x00000000c00098b0                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098de                VAS::getPageTableEntry(unsigned long)
                0x00000000c00098fd                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a3a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a5e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a78                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009aba                VAS::VAS()
                0x00000000c0009aba                VAS::VAS()
                0x00000000c0009b24                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b58                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b84                VAS::~VAS()
                0x00000000c0009b84                VAS::~VAS()
                0x00000000c0009cf2                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009dfa                VAS::allocatePages(int, int)
                0x00000000c0009efc                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f56                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a046                VAS::VAS(bool)
                0x00000000c000a046                VAS::VAS(bool)
                0x00000000c000a290                VAS::evict(unsigned long)
                0x00000000c000a36e                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a512                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a586                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5b2                VAS::scanForEviction()
                0x00000000c000a6b5                mapVASFirstTime
 .text          0x00000000c000a7b0       0x5f coreobjs/c++.32
                0x00000000c000a7b0                __cxa_atexit
                0x00000000c000a7b3                __cxa_finalize
                0x00000000c000a7b4                __stack_chk_fail
                0x00000000c000a7ea                __cxa_pure_virtual
                0x00000000c000a7fb                operator new[](unsigned long)
                0x00000000c000a800                operator delete(void*, unsigned long)
                0x00000000c000a805                operator delete[](void*)
                0x00000000c000a80a                operator delete[](void*, unsigned long)
 .text          0x00000000c000a80f      0x225 dbg/kconsole.32
                0x00000000c000a80f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a880                Dbg::logc(char)
                0x00000000c000a8a0                Dbg::logs(char*)
                0x00000000c000a8bf                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8dd                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a8fe                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa34      0x2d4 dbg/usban.32
                0x00000000c000aa34                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaa0                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab7c                __ubsan_handle_pointer_overflow
                0x00000000c000aba8                __ubsan_handle_out_of_bounds
                0x00000000c000abd4                __ubsan_handle_add_overflow
                0x00000000c000ac00                __ubsan_handle_load_invalid_value
                0x00000000c000ac2c                __ubsan_handle_divrem_overflow
                0x00000000c000ac58                __ubsan_handle_mul_overflow
                0x00000000c000ac84                __ubsan_handle_sub_overflow
                0x00000000c000acb0                __ubsan_handle_shift_out_of_bounds
                0x00000000c000acdc                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad08      0xcdc fs/vfs.32
                0x00000000c000ad08                File::read(unsigned long long, void*, int*)
                0x00000000c000ad60                File::write(unsigned long long, void*, int*)
                0x00000000c000adb8                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ae10                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ae3e                File::isAtty()
                0x00000000c000ae42                Directory::isAtty()
                0x00000000c000ae46                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ae4c                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ae52                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ae58                File::~File()
                0x00000000c000ae58                File::~File()
                0x00000000c000ae7c                File::~File()
                0x00000000c000aea6                Directory::~Directory()
                0x00000000c000aea6                Directory::~Directory()
                0x00000000c000aeca                Directory::~Directory()
                0x00000000c000aef4                Filesystem::Filesystem()
                0x00000000c000aef4                Filesystem::Filesystem()
                0x00000000c000af18                Filesystem::~Filesystem()
                0x00000000c000af18                Filesystem::~Filesystem()
                0x00000000c000af26                Filesystem::~Filesystem()
                0x00000000c000af4a                Fs::getcwd(Process*, char*, int)
                0x00000000c000af74                Fs::initVFS()
                0x00000000c000af9e                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b17a                File::File(char const*, Process*)
                0x00000000c000b17a                File::File(char const*, Process*)
                0x00000000c000b236                File::open(FileOpenMode)
                0x00000000c000b294                File::close()
                0x00000000c000b2f4                File::seek(unsigned long long)
                0x00000000c000b34a                File::truncate(unsigned long long)
                0x00000000c000b3a0                File::tell(unsigned long long*)
                0x00000000c000b3f0                File::rewind()
                0x00000000c000b404                File::unlink()
                0x00000000c000b450                File::rename(char const*)
                0x00000000c000b49e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b4fa                File::exists()
                0x00000000c000b538                File::stat(unsigned long long*, bool*)
                0x00000000c000b599                Fs::setcwd(Process*, char*)
                0x00000000c000b6f6                Directory::Directory(char const*, Process*)
                0x00000000c000b6f6                Directory::Directory(char const*, Process*)
                0x00000000c000b7b2                Directory::open()
                0x00000000c000b80e                Directory::close()
                0x00000000c000b86e                Directory::unlink()
                0x00000000c000b8ba                Directory::rename(char const*)
                0x00000000c000b908                Directory::exists()
                0x00000000c000b946                Directory::read(dirent*)
                0x00000000c000b992                Directory::create()
                0x00000000c000b9de                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000b9e4       0x86 hal/bus.32
                0x00000000c000b9e4                Bus::Bus(char const*)
                0x00000000c000b9e4                Bus::Bus(char const*)
                0x00000000c000ba1c                Bus::~Bus()
                0x00000000c000ba1c                Bus::~Bus()
                0x00000000c000ba40                Bus::~Bus()
 .text          0x00000000c000ba6a       0x96 hal/buzzer.32
                0x00000000c000ba6a                beepThread(void*)
                0x00000000c000baa7                Krnl::beep(int, int, bool)
 .text          0x00000000c000bb00      0x465 hal/clock.32
                0x00000000c000bb00                User::loadClockSettings(int)
                0x00000000c000bb52                Clock::Clock(char const*)
                0x00000000c000bb52                Clock::Clock(char const*)
                0x00000000c000bb88                Clock::~Clock()
                0x00000000c000bb88                Clock::~Clock()
                0x00000000c000bbac                Clock::~Clock()
                0x00000000c000bbd6                Clock::timeInSecondsLocal()
                0x00000000c000bc1e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000bc77                datetimeToSeconds(datetime_t)
                0x00000000c000bd9c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bdfc                secondsToDatetime(unsigned long long)
                0x00000000c000bf40                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bf65        0x1 
 .text          0x00000000c000bf66      0x464 hal/device.32
                0x00000000c000bf66                Device::hibernate()
                0x00000000c000bf68                Device::wake()
                0x00000000c000bf6a                Device::detect()
                0x00000000c000bf6c                Device::disableLegacy()
                0x00000000c000bf6e                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bf70                DriverlessDevice::close(int, int, void*)
                0x00000000c000bf74                DriverlessDevice::detect()
                0x00000000c000bf76                DriverlessDevice::open(int, int, void*)
                0x00000000c000bf8a                Device::~Device()
                0x00000000c000bf8a                Device::~Device()
                0x00000000c000bf98                Device::~Device()
                0x00000000c000bfc0                Device::findAndLoadDriver()
                0x00000000c000bfce                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bff4                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c034                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c05e                Device::getParent()
                0x00000000c000c06a                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c088                Device::addChild(Device*)
                0x00000000c000c0cc                Device::removeAllChildren()
                0x00000000c000c112                Device::hibernateAll()
                0x00000000c000c142                Device::wakeAll()
                0x00000000c000c172                Device::detectAll()
                0x00000000c000c1a2                Device::disableLegacyAll()
                0x00000000c000c1a4                Device::loadDriversForAll()
                0x00000000c000c1a6                Device::closeAll()
                0x00000000c000c1dc                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c212                Device::setName(char const*)
                0x00000000c000c220                Device::Device(char const*)
                0x00000000c000c220                Device::Device(char const*)
                0x00000000c000c31c                Device::getName()
                0x00000000c000c326                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c326                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c35c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c3a0                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c3ca        0x2 
 .text          0x00000000c000c3cc       0x86 hal/diskctrl.32
                0x00000000c000c3cc                HardDiskController::HardDiskController(char const*)
                0x00000000c000c3cc                HardDiskController::HardDiskController(char const*)
                0x00000000c000c404                HardDiskController::~HardDiskController()
                0x00000000c000c404                HardDiskController::~HardDiskController()
                0x00000000c000c428                HardDiskController::~HardDiskController()
 .text          0x00000000c000c452       0xe2 hal/diskphys.32
                0x00000000c000c452                PhysicalDisk::eject()
                0x00000000c000c456                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c456                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c4be                PhysicalDisk::startCache()
                0x00000000c000c4e6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c4e6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c50a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c534        0x0 hal/fpu.32
 .text          0x00000000c000c534      0x360 hal/intctrl.32
                0x00000000c000c534                int_handler
                0x00000000c000c5be                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c608                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c74b                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c77f                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c7f5                setupINTS()
                0x00000000c000c852                convertLegacyIRQNumber(int)
 .text          0x00000000c000c894      0x8be hal/keybrd.32
                0x00000000c000c894                startGUI(void*)
                0x00000000c000c902                startGUIVESA(void*)
                0x00000000c000c970                sendKeyToTerminal(unsigned char)
                0x00000000c000ca4b                sendKeyboardToken(KeyboardToken)
                0x00000000c000cf35                clearInternalKeybuffer(VgaText*)
                0x00000000c000cf6a                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d0c8                Keyboard::Keyboard(char const*)
                0x00000000c000d0c8                Keyboard::Keyboard(char const*)
                0x00000000c000d104                Keyboard::~Keyboard()
                0x00000000c000d104                Keyboard::~Keyboard()
                0x00000000c000d128                Keyboard::~Keyboard()
 .text          0x00000000c000d152      0x3f8 hal/logidisk.32
                0x00000000c000d152                LogicalDisk::close(int, int, void*)
                0x00000000c000d156                LogicalDisk::~LogicalDisk()
                0x00000000c000d156                LogicalDisk::~LogicalDisk()
                0x00000000c000d17a                LogicalDisk::~LogicalDisk()
                0x00000000c000d1a4                LogicalDisk::open(int, int, void*)
                0x00000000c000d1b8                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d1f0                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d236                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d236                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d2f6                LogicalDisk::assignDriveLetter()
                0x00000000c000d3b0                LogicalDisk::mount()
                0x00000000c000d3f8                LogicalDisk::unmount()
                0x00000000c000d408                LogicalDisk::eject()
                0x00000000c000d41c                LogicalDisk::unassignDriveLetter()
                0x00000000c000d472                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d4de                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000d54a        0x2 
 .text          0x00000000c000d54c       0x86 hal/mouse.32
                0x00000000c000d54c                Mouse::Mouse(char const*)
                0x00000000c000d54c                Mouse::Mouse(char const*)
                0x00000000c000d584                Mouse::~Mouse()
                0x00000000c000d584                Mouse::~Mouse()
                0x00000000c000d5a8                Mouse::~Mouse()
 .text          0x00000000c000d5d2       0x90 hal/nic.32
                0x00000000c000d5d2                NIC::getMAC()
                0x00000000c000d5d8                NIC::write(int, unsigned char*, int*)
                0x00000000c000d5de                NIC::NIC(char const*)
                0x00000000c000d5de                NIC::NIC(char const*)
                0x00000000c000d614                NIC::~NIC()
                0x00000000c000d614                NIC::~NIC()
                0x00000000c000d638                NIC::~NIC()
 .text          0x00000000c000d662      0x33b hal/partition.32
                0x00000000c000d662                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d70a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d99d        0x3 
 .text          0x00000000c000d9a0       0x86 hal/serial.32
                0x00000000c000d9a0                Serial::Serial(char const*)
                0x00000000c000d9a0                Serial::Serial(char const*)
                0x00000000c000d9d8                Serial::~Serial()
                0x00000000c000d9d8                Serial::~Serial()
                0x00000000c000d9fc                Serial::~Serial()
 *fill*         0x00000000c000da26        0x2 
 .text          0x00000000c000da28      0x234 hal/timer.32
                0x00000000c000da28                Timer::Timer(char const*)
                0x00000000c000da28                Timer::Timer(char const*)
                0x00000000c000da60                Timer::~Timer()
                0x00000000c000da60                Timer::~Timer()
                0x00000000c000da84                Timer::~Timer()
                0x00000000c000daae                Timer::read()
                0x00000000c000dab9                setupTimer(int)
                0x00000000c000daf4                timerHandler(unsigned int)
 .text          0x00000000c000dc5c      0x450 hal/vcache.32
                0x00000000c000dc5c                VCache::VCache(PhysicalDisk*)
                0x00000000c000dc5c                VCache::VCache(PhysicalDisk*)
                0x00000000c000ddcc                VCache::invalidateReadBuffer()
                0x00000000c000dddc                VCache::writeWriteBuffer()
                0x00000000c000de28                VCache::~VCache()
                0x00000000c000de28                VCache::~VCache()
                0x00000000c000de80                VCache::~VCache()
                0x00000000c000dea8                VCache::write(unsigned long long, int, void*)
                0x00000000c000dfa2                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e0ac      0x4d9 hal/video.32
                0x00000000c000e0ac                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e0f8                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e168                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e1f8                Video::clearScreen(unsigned int)
                0x00000000c000e22c                Video::putpixel(int, int, unsigned int)
                0x00000000c000e23a                Video::readPixelApprox(int, int)
                0x00000000c000e24e                Video::Video(char const*)
                0x00000000c000e24e                Video::Video(char const*)
                0x00000000c000e284                Video::~Video()
                0x00000000c000e284                Video::~Video()
                0x00000000c000e2a8                Video::~Video()
                0x00000000c000e2d2                Video::isMonochrome()
                0x00000000c000e2de                Video::getWidth()
                0x00000000c000e2ea                Video::getHeight()
                0x00000000c000e2f6                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e3b2                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e51a                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e585        0x3 
 .text          0x00000000c000e588     0x12d2 hw/acpi.32
                0x00000000c000e588                ACPI::close(int, int, void*)
                0x00000000c000e63c                findRSDP()
                0x00000000c000e6d4                loadACPITables(unsigned char*)
                0x00000000c000e940                findRSDT(unsigned char*)
                0x00000000c000ea98                findDataTable(unsigned char*, char*)
                0x00000000c000eb18                scanMADT()
                0x00000000c000efd0                ACPI::ACPI()
                0x00000000c000efd0                ACPI::ACPI()
                0x00000000c000f024                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f120                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f1ec                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f1f4                ACPI::detectPCI()
                0x00000000c000f414                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f45c                ACPI::sleep()
                0x00000000c000f478                ACPI::open(int, int, void*)
 .text          0x00000000c000f85a      0xbc5 hw/cpu.32
                0x00000000c000f85a                CPU::close(int, int, void*)
                0x00000000c000f85e                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f87a                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f892                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f906                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f98a                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f9b8                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f9e6                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000fa14                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000fa42                CPU::CPU()
                0x00000000c000fa42                CPU::CPU()
                0x00000000c000fad0                CPU::displayFeatures()
                0x00000000c000fad2                CPU::detectFeatures()
                0x00000000c00101a6                CPU::setupSMEP()
                0x00000000c00101b2                CPU::setupUMIP()
                0x00000000c00101bc                CPU::setupTSC()
                0x00000000c00101c6                CPU::setupLargePages()
                0x00000000c00101d0                CPU::setupPAT()
                0x00000000c001020c                CPU::setupMTRR()
                0x00000000c001020e                CPU::setupGlobalPages()
                0x00000000c0010218                CPU::allowUsermodeDataAccess()
                0x00000000c001022a                CPU::prohibitUsermodeDataAccess()
                0x00000000c001023c                CPU::setupSMAP()
                0x00000000c001024a                CPU::setupFeatures()
                0x00000000c0010316                CPU::open(int, int, void*)
 .text          0x00000000c001041f       0xdf krnl/bootmsg.32
                0x00000000c001041f                KeDisplaySplashScreen()
                0x00000000c001049b                KeSetBootMessage(char const*)
 *fill*         0x00000000c00104fe        0x2 
 .text          0x00000000c0010500       0x1d krnl/compat.32
                0x00000000c0010500                Krnl::handlePowerButton()
                0x00000000c0010510                Krnl::handleSleepButton()
 *fill*         0x00000000c001051d        0x1 
 .text          0x00000000c001051e      0x5bf krnl/env.32
                0x00000000c001051e                EnvVarContainer::getEnv(char const*)
                0x00000000c001055c                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001061e                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010620                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010844                EnvVarContainer::__loadSystem()
                0x00000000c001085e                EnvVarContainer::__loadUser()
                0x00000000c0010860                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010860                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010882                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010882                EnvVarContainer::~EnvVarContainer()
                0x00000000c00108b2                KeGetEnv(Process*, char const*)
                0x00000000c0010917                KeSetEnvSystem(char const*, char const*)
                0x00000000c0010931                KeSetEnvUser(char const*, char const*)
                0x00000000c0010950                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0010963                KeDeleteEnvSystem(char const*)
                0x00000000c0010964                KeDeleteEnvUser(char const*)
                0x00000000c0010965                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0010966                KeNewProcessEnv(Process*)
                0x00000000c0010988                KeCopyProcessEnv(Process*, Process*)
                0x00000000c00109d4                KeLoadSystemEnv()
                0x00000000c0010a02                KeLoadUserEnv()
                0x00000000c0010a28                KeFlushEnv()
                0x00000000c0010a29                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0010a49                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0010add       0x94 krnl/inlines.32
                0x00000000c0010add                CPU::current()
                0x00000000c0010ae9                operator new(unsigned long)
                0x00000000c0010aee                operator delete(void*)
                0x00000000c0010af3                disableIRQs()
                0x00000000c0010af5                enableIRQs()
                0x00000000c0010af7                lockScheduler()
                0x00000000c0010aff                unlockScheduler()
                0x00000000c0010b0e                lockStuff()
                0x00000000c0010b1c                unlockStuff()
                0x00000000c0010b56                Virt::getAKernelVAS()
                0x00000000c0010b5c                __not_memcpy
 .text          0x00000000c0010b71        0xc krnl/panic.32
                0x00000000c0010b71                KePanic(char const*)
 .text          0x00000000c0010b7d      0x142 krnl/powctrl.32
                0x00000000c0010b7d                KePowerThread(void*)
                0x00000000c0010bab                KeChangePowerSettings(PowerSettings)
                0x00000000c0010bc1                KeUserIOReceived()
                0x00000000c0010bcc                KeHandlePowerButton()
                0x00000000c0010c01                KeHandleSleepButton()
                0x00000000c0010c36                KeSetupPowerManager()
 .text          0x00000000c0010cbf       0x9b krnl/random.32
                0x00000000c0010cbf                KeRand()
                0x00000000c0010cff                KeSeedRand(unsigned int)
                0x00000000c0010d28                KeInitRand()
 *fill*         0x00000000c0010d5a        0x2 
 .text          0x00000000c0010d5c      0x1bc krnl/resolve.32
                0x00000000c0010d5c                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010f18      0x31f krnl/signal.32
                0x00000000c0010f18                KiSigKill(int)
                0x00000000c0010f2c                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010f2d                KiDefaultSignalHandlerPause(int)
                0x00000000c0010f59                KiDefaultSignalHandlerResume(int)
                0x00000000c0010f85                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010f8a                KeInitSignals()
                0x00000000c0010fd9                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c001100f                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001108c                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011183                KiCheckSignalZ
                0x00000000c00111c5                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011200                KiFinishSignalZ
 .text          0x00000000c0011237      0xc76 krnl/syscalls.32
                0x00000000c0011237                SysSeekDir(regs*)
                0x00000000c001123c                SysTellDir(regs*)
                0x00000000c0011241                SysVerify(regs*)
                0x00000000c001124b                SysGetArgc(regs*)
                0x00000000c001125f                SysTTYName(regs*)
                0x00000000c0011267                SysFormatDisk(regs*)
                0x00000000c00112ce                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011322                SysGetDiskVolumeLabel(regs*)
                0x00000000c001137b                SysShutdown(regs*)
                0x00000000c0011408                SysRealpath(regs*)
                0x00000000c0011457                SysReadDir(regs*)
                0x00000000c00114d7                SysIsATTY(regs*)
                0x00000000c0011531                SysSeek(regs*)
                0x00000000c001158b                SysTell(regs*)
                0x00000000c00115f8                SysSize(regs*)
                0x00000000c001166b                SysSizeFromFilename(regs*)
                0x00000000c0011715                SysClose(regs*)
                0x00000000c0011775                SysOpenDir(regs*)
                0x00000000c00117f2                SysMakeDir(regs*)
                0x00000000c0011860                SysCloseDir(regs*)
                0x00000000c00118af                SysWait(regs*)
                0x00000000c00118d0                SysNotImpl(regs*)
                0x00000000c00118eb                SysPanic(regs*)
                0x00000000c0011906                SysRmdir(regs*)
                0x00000000c0011964                SysUnlink(regs*)
                0x00000000c00119c2                SysGetArgv(regs*)
                0x00000000c0011a0f                SysUSleep(regs*)
                0x00000000c0011a38                SysSpawn(regs*)
                0x00000000c0011aa9                SysGetEnv(regs*)
                0x00000000c0011b5e                SysSetFatAttrib(regs*)
                0x00000000c0011bc7                SysPipe(regs*)
                0x00000000c0011c0c                SysGetUnixTime(regs*)
                0x00000000c0011c20                string_ends_with(char const*, char const*)
                0x00000000c0011c6b                SysOpen(regs*)
                0x00000000c0011e6b                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011ead        0x3 
 .text          0x00000000c0011eb0      0x159 net/ethernet.32
                0x00000000c0011eb0                KeSwitchEndian16(unsigned short)
                0x00000000c0011ed4                KeSwitchEndian32(unsigned int)
                0x00000000c0011f04                EthernetCRC32(unsigned char*, int)
                0x00000000c0011fa8                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012009      0xd51 reg/cm.32
                0x00000000c0012009                CmOpen(char const*)
                0x00000000c0012127                CmClose(Reghive_Tag*)
                0x00000000c001213d                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012179                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c00121f0                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c001222f                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012261                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c001229d                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c00122c5                CmUpdateHeader(Reghive_Tag*)
                0x00000000c00122e6                CmExpand(Reghive_Tag*, int)
                0x00000000c0012361                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c00123e7                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c00124db                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012613                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012674                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c00126a4                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c00126db                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012705                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012745                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00127e9                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012817                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00129b4                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0012a01                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012a7b                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c0012ace                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012b92                zStrtok(char*, char const*)
                0x00000000c0012c04                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0012c85                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0012d28                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0012d5a      0x545 reg/registry.32
                0x00000000c0012d5a                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012ee6                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001303b                Reg::getLine(char*, char*, char*)
                0x00000000c0013072                Reg::readInt(char*, char*, int*)
                0x00000000c0013160                Reg::readString(char*, char*, char*, int)
                0x00000000c00131e1                Reg::readBool(char*, char*, bool*)
                0x00000000c0013206                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013232                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001325e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001329f       0x36 sys/eject.32
                0x00000000c001329f                SysEject(regs*)
 .text          0x00000000c00132d5       0x18 sys/exit.32
                0x00000000c00132d5                SysExit(regs*)
 .text          0x00000000c00132ed       0x1f sys/getcwd.32
                0x00000000c00132ed                SysGetCwd(regs*)
 .text          0x00000000c001330c        0xc sys/getpid.32
                0x00000000c001330c                SysGetPID(regs*)
 .text          0x00000000c0013318       0x1a sys/getramdata.32
                0x00000000c0013318                SysGetRAMData(regs*)
 .text          0x00000000c0013332       0x82 sys/getvgaptr.32
                0x00000000c0013332                SysGetVGAPtr(regs*)
 .text          0x00000000c00133b4       0xb9 sys/kill.32
                0x00000000c00133b4                SysKill(regs*)
 .text          0x00000000c001346d       0xa8 sys/loaddll.32
                0x00000000c001346d                SysLoadDLL(regs*)
 .text          0x00000000c0013515       0x68 sys/read.32
                0x00000000c0013515                SysRead(regs*)
 .text          0x00000000c001357d       0x29 sys/registersignal.32
                0x00000000c001357d                SysRegisterSignal(regs*)
 .text          0x00000000c00135a6      0x19c sys/registry.32
                0x00000000c00135a6                SysRegistryGetTypeFromPath(regs*)
                0x00000000c001361d                SysRegistryReadExtent(regs*)
                0x00000000c0013665                SysRegistryPathToExtentLookup(regs*)
                0x00000000c001368d                SysRegistryEnterDirectory(regs*)
                0x00000000c00136b5                SysRegistryGetNext(regs*)
                0x00000000c00136dd                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013717                SysRegistryOpen(regs*)
                0x00000000c001372b                SysRegistryClose(regs*)
 .text          0x00000000c0013742       0x55 sys/sbrk.32
                0x00000000c0013742                SysSbrk(regs*)
 .text          0x00000000c0013797       0x1c sys/setcwd.32
                0x00000000c0013797                SysSetCwd(regs*)
 .text          0x00000000c00137b3       0x96 sys/settime.32
                0x00000000c00137b3                SysSetTime(regs*)
 .text          0x00000000c0013849       0x4a sys/timezone.32
                0x00000000c0013849                SysTimezone(regs*)
 .text          0x00000000c0013893       0xfc sys/truncate.32
                0x00000000c0013893                SysTruncate(regs*)
 .text          0x00000000c001398f       0x68 sys/write.32
                0x00000000c001398f                SysWrite(regs*)
 .text          0x00000000c00139f7       0x62 sys/wsbe.32
                0x00000000c00139f7                SysWsbe(regs*)
 .text          0x00000000c0013a59       0x25 sys/yield.32
                0x00000000c0013a59                SysYield(regs*)
 .text          0x00000000c0013a7e     0x1203 thr/elf.32
                0x00000000c0013a7e                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0013d05                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013f24                Thr::runtimeReferenceHelper()
                0x00000000c0013f37                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013f86                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014244                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014985                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00149b7                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00149ee                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0014a08                Thr::loadDLL(char const*, bool)
                0x00000000c0014c48                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0014c81        0x3 
 .text          0x00000000c0014c84     0x13b5 thr/prcssthr.32
                0x00000000c0014c84                userModeEntryPoint(void*)
                0x00000000c0014cac                changeTSS
                0x00000000c0014cdc                switchToThread(ThreadControlBlock*)
                0x00000000c0014d8c                Process::addArgs(char**)
                0x00000000c0014df8                Process::Process(char const*, Process*, char**)
                0x00000000c0014df8                Process::Process(char const*, Process*, char**)
                0x00000000c0015004                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015004                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00151d8                taskStartupFunction
                0x00000000c00151e4                Semaphore::Semaphore(int)
                0x00000000c00151e4                Semaphore::Semaphore(int)
                0x00000000c0015214                Mutex::Mutex()
                0x00000000c0015214                Mutex::Mutex()
                0x00000000c0015228                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015330                Process::createUserThread()
                0x00000000c0015350                setupMultitasking(void (*)())
                0x00000000c0015474                schedule()
                0x00000000c0015508                Semaphore::tryAcquire()
                0x00000000c00155c8                Semaphore::assertLocked(char const*)
                0x00000000c001564c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015674                blockTask(TaskState)
                0x00000000c00156ac                waitTask(int, int*, int)
                0x00000000c00156f0                milliTenthSleepUntil(unsigned int)
                0x00000000c0015790                milliTenthSleep(unsigned int)
                0x00000000c00157a4                sleep(unsigned int)
                0x00000000c00157b4                Semaphore::acquire()
                0x00000000c001587c                taskReturned
                0x00000000c00158c0                Thr::processFromPID(int)
                0x00000000c001596c                unblockTask(ThreadControlBlock*)
                0x00000000c0015a18                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015cec                cleanerTaskFunction(void*)
                0x00000000c0015df4                terminateTask(int)
                0x00000000c0015ee0                Thr::terminateFromIRQ(int)
                0x00000000c0015ef0                Semaphore::release()
 .text          0x00000000c0016039      0xc31 vm86/vm8086.32
                0x00000000c0016039                Vm::inbv(unsigned short)
                0x00000000c001604c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016082                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016092                Vm::getSegment(unsigned int)
                0x00000000c001609a                Vm::getOffset(unsigned int)
                0x00000000c001609f                Vm::mainloop2()
                0x00000000c00160d9                Vm::mainVm8086Loop(void*)
                0x00000000c00160e9                Vm::mainloop3(unsigned long)
                0x00000000c001610f                Vm::initialise8086()
                0x00000000c0016152                Vm::finish8086()
                0x00000000c00161b3                Vm::getOutput8086(unsigned char*)
                0x00000000c00161d8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016291                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001642f                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00164cc                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00164dd                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00164ef                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016500                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016515                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001652b                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016540                Vm::faultHandler(regs*)
 .text          0x00000000c0016c6a      0xaf0 arch/i386/hal.32
                0x00000000c0016c6a                noCopro(unsigned long)
                0x00000000c0016c6b                nmiHandler(regs*, void*)
                0x00000000c0016c84                doubleFault(regs*, void*)
                0x00000000c0016c9d                displayDebugInfo(regs*)
                0x00000000c0017022                HalSystemIdle()
                0x00000000c001709e                displayProgramFault(char const*)
                0x00000000c00170ea                gpFault(regs*, void*)
                0x00000000c0017151                pgFault(regs*, void*)
                0x00000000c00171da                otherISRHandler(regs*, void*)
                0x00000000c001720e                opcodeFault(regs*, void*)
                0x00000000c0017291                i386SaveCoprocessor(void*)
                0x00000000c00172a5                i386LoadCoprocessor(void*)
                0x00000000c00172b9                x87EmulHandler(regs*, void*)
                0x00000000c0017356                HalInitialiseCoprocessor()
                0x00000000c0017404                HalPanic(char const*)
                0x00000000c0017518                HalQueryPerformanceCounter()
                0x00000000c0017533                HalInitialise()
                0x00000000c00176e9                HalMakeBeep(int)
                0x00000000c0017723                HalGetRand()
                0x00000000c0017726                HalEndOfInterrupt(int)
                0x00000000c0017757                HalRestart()
                0x00000000c0017758                HalShutdown()
                0x00000000c0017759                HalSleep()
 *fill*         0x00000000c001775a        0x2 
 .text          0x00000000c001775c      0x2dc arch/i386/pic.32
                0x00000000c001775c                picIoWait()
                0x00000000c0017764                picDisable()
                0x00000000c0017798                picGetIRQReg(int)
                0x00000000c0017814                picOpen()
                0x00000000c0017998                picEOI(int)
 .text          0x00000000c0017a38      0x66e arch/i386/rtc.32
                0x00000000c0017a38                RTC::open(int, int, void*)
                0x00000000c0017a3c                RTC::close(int, int, void*)
                0x00000000c0017a40                RTC::timeInSecondsUTC()
                0x00000000c0017a52                RTC::timeInDatetimeUTC()
                0x00000000c0017a78                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0017ab6                RTC::~RTC()
                0x00000000c0017ab6                RTC::~RTC()
                0x00000000c0017ada                RTC::~RTC()
                0x00000000c0017b04                RTC::get_update_in_progress_flag()
                0x00000000c0017b1e                RTC::completeRTCRefresh()
                0x00000000c0017df8                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0017fa6                rtcIRQHandler(regs*, void*)
                0x00000000c0017fec                RTC::RTC()
                0x00000000c0017fec                RTC::RTC()
 *fill*         0x00000000c00180a6        0x2 
 .text          0x00000000c00180a8      0x1f4 arch/i386/vga.32
                0x00000000c00180a8                HalConsoleScroll(int, int)
                0x00000000c00181b0                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018214                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001829c     0x14f3 fs/fat/vfslink.32
                0x00000000c001829c                FAT::getName()
                0x00000000c00182a4                FAT::tell(void*, unsigned long long*)
                0x00000000c00182e0                FAT::stat(void*, unsigned long long*)
                0x00000000c001831c                FAT::~FAT()
                0x00000000c001831c                FAT::~FAT()
                0x00000000c0018340                FAT::~FAT()
                0x00000000c0018368                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001840c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00184ec                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00186d0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00188ec                FAT::allocateSwapfile(char const*, int)
                0x00000000c0018aac                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0018c1c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0018c7c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0018cdc                FAT::close(void*)
                0x00000000c0018d30                FAT::closeDir(void*)
                0x00000000c0018d84                FAT::truncate(void*, unsigned long long)
                0x00000000c0018df0                FAT::seek(void*, unsigned long long)
                0x00000000c0018e48                fatWrapperReadDisk
                0x00000000c0018e88                fatWrapperWriteDisk
                0x00000000c0018ec8                fatWrapperIoctl
                0x00000000c0018fe8                FAT::FAT()
                0x00000000c0018fe8                FAT::FAT()
                0x00000000c0019040                FAT::fixFilepath(char*)
                0x00000000c0019080                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00191f4                FAT::openDir(char const*, void**)
                0x00000000c00192a4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001939c                FAT::unlink(char const*)
                0x00000000c001941c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00195d4                FAT::rename(char const*, char const*)
                0x00000000c00196a0                FAT::mkdir(char const*)
                0x00000000c0019720                FAT::exists(char const*)
 *fill*         0x00000000c001978f        0x1 
 .text          0x00000000c0019790       0x94 fs/iso9660/helper.32
                0x00000000c0019790                isoReadDiscSectorHelper
                0x00000000c00197ec                iso_kprintf
                0x00000000c0019808                iso_kprintfd
 .text          0x00000000c0019824      0x71a fs/iso9660/vfslink.32
                0x00000000c0019824                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001982a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c0019830                ISO9660::getName()
                0x00000000c0019836                ISO9660::closeDir(void*)
                0x00000000c0019840                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019846                ISO9660::unlink(char const*)
                0x00000000c001984c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019852                ISO9660::rename(char const*, char const*)
                0x00000000c0019858                ISO9660::mkdir(char const*)
                0x00000000c001985e                ISO9660::~ISO9660()
                0x00000000c001985e                ISO9660::~ISO9660()
                0x00000000c0019882                ISO9660::~ISO9660()
                0x00000000c00198aa                ISO9660::exists(char const*)
                0x00000000c00198be                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00199a4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c00199ec                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019a2e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019a6c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019abe                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019c00                ISO9660::close(void*)
                0x00000000c0019c30                ISO9660::openDir(char const*, void**)
                0x00000000c0019d0a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019e25                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0019ea4                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019f16                ISO9660::ISO9660()
                0x00000000c0019f16                ISO9660::ISO9660()
 .text          0x00000000c0019f3e      0x26c hal/sound/sndcard.32
                0x00000000c0019f3e                SoundCard::beginPlayback()
                0x00000000c0019f4c                SoundCard::stopPlayback()
                0x00000000c0019f5a                SoundCard::SoundCard(char const*)
                0x00000000c0019f5a                SoundCard::SoundCard(char const*)
                0x00000000c0019ff8                SoundCard::~SoundCard()
                0x00000000c0019ff8                SoundCard::~SoundCard()
                0x00000000c001a01c                SoundCard::~SoundCard()
                0x00000000c001a046                SoundCard::configureRates(int, int, int)
                0x00000000c001a076                SoundCard::getSamples16(int, short*)
                0x00000000c001a0d2                SoundCard::getSamples32(int, int*)
                0x00000000c001a158                SoundCard::addChannel(SoundPort*)
                0x00000000c001a196                SoundCard::removeChannel(int)
 *fill*         0x00000000c001a1aa        0x2 
 .text          0x00000000c001a1ac      0x393 hal/sound/sndport.32
                0x00000000c001a1ac                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a1ac                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a238                SoundPort::~SoundPort()
                0x00000000c001a238                SoundPort::~SoundPort()
                0x00000000c001a26c                SoundPort::unpause()
                0x00000000c001a278                SoundPort::pause()
                0x00000000c001a284                SoundPort::getBufferUsed()
                0x00000000c001a28c                SoundPort::getBufferSize()
                0x00000000c001a294                SoundPort::buffer16(short*, int)
                0x00000000c001a320                SoundPort::buffer32(int*, int)
                0x00000000c001a3ac                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001a47c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001a53f        0x0 hw/bus/isa.32
 *fill*         0x00000000c001a53f        0x1 
 .text          0x00000000c001a540      0xbc5 hw/bus/pci.32
                0x00000000c001a540                PCI::open(int, int, void*)
                0x00000000c001a55e                PCI::close(int, int, void*)
                0x00000000c001a562                PCI::PCI()
                0x00000000c001a562                PCI::PCI()
                0x00000000c001a5fa                PCI::readBAR8(unsigned int, int)
                0x00000000c001a616                PCI::readBAR16(unsigned int, int)
                0x00000000c001a634                PCI::readBAR32(unsigned int, int)
                0x00000000c001a650                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001a670                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001a692                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001a6b2                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a728                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a7d2                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a7f6                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a81e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a868                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a890                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a8b4                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a8d8                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a900                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a964                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001aa4a                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001ad14                PCI::checkBus(unsigned char)
                0x00000000c001ad38                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001aebe                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b03a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b0ac                PCI::detect()
 *fill*         0x00000000c001b105        0x1 
 .text          0x00000000c001b106      0xb96 hw/diskctrl/ide.32
                0x00000000c001b106                IDE::close(int, int, void*)
                0x00000000c001b10a                IDE::IDE()
                0x00000000c001b10a                IDE::IDE()
                0x00000000c001b13e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b150                selectDrive(unsigned char, unsigned char)
                0x00000000c001b152                IDE::getBase(unsigned char)
                0x00000000c001b164                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b224                IDE::read(unsigned char, unsigned char)
                0x00000000c001b2d8                IDE::waitInterrupt(unsigned char)
                0x00000000c001b33a                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001b356                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001b372                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001b3bc                IDE::open(int, int, void*)
                0x00000000c001b7f6                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b8c6                IDE::detect()
                0x00000000c001bb8e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc48                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001bc9c      0x32c hw/diskctrl/satabus.32
                0x00000000c001bc9c                SATABus::close(int, int, void*)
                0x00000000c001bca0                SATABus::detect()
                0x00000000c001bca2                SATABus::SATABus()
                0x00000000c001bca2                SATABus::SATABus()
                0x00000000c001bd28                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001bd5a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001bda2                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001bdc2                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001bdec                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001befe                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001bfa8                SATABus::open(int, int, void*)
 .text          0x00000000c001bfc8      0x96d hw/diskphys/ata.32
                0x00000000c001bfc8                ATA::close(int, int, void*)
                0x00000000c001bfec                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001bfee                ATA::ATA()
                0x00000000c001bfee                ATA::ATA()
                0x00000000c001c01c                ATA::flush(bool)
                0x00000000c001c06a                ATA::readyForCommand()
                0x00000000c001c0b6                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001c47a                ATA::detectCHS()
                0x00000000c001c4a4                ATA::open(int, int, void*)
                0x00000000c001c570                combineCharAndColour(char, unsigned char)
                0x00000000c001c581                combineColours(unsigned char, unsigned char)
                0x00000000c001c58e                ATA::read(unsigned long long, int, void*)
                0x00000000c001c764                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001c935        0x1 
 .text          0x00000000c001c936      0x612 hw/diskphys/atapi.32
                0x00000000c001c936                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c93c                ATAPI::close(int, int, void*)
                0x00000000c001c960                ATAPI::ATAPI()
                0x00000000c001c960                ATAPI::ATAPI()
                0x00000000c001c98e                ATAPI::readyForCommand()
                0x00000000c001c9e0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001cca0                ATAPI::diskRemoved()
                0x00000000c001ccda                ATAPI::eject()
                0x00000000c001cd22                ATAPI::diskInserted()
                0x00000000c001cd2e                ATAPI::detectMedia()
                0x00000000c001cdee                ATAPI::open(int, int, void*)
                0x00000000c001cece                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001cf48      0x7ff hw/diskphys/sata.32
                0x00000000c001cf48                SATA::close(int, int, void*)
                0x00000000c001cf6c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001cf6e                SATA::open(int, int, void*)
                0x00000000c001d018                SATA::SATA()
                0x00000000c001d018                SATA::SATA()
                0x00000000c001d046                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d298                SATA::read(unsigned long long, int, void*)
                0x00000000c001d4e8                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d747        0x1 
 .text          0x00000000c001d748      0x5d8 hw/diskphys/satapi.32
                0x00000000c001d748                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001d74e                SATAPI::close(int, int, void*)
                0x00000000c001d772                SATAPI::SATAPI()
                0x00000000c001d772                SATAPI::SATAPI()
                0x00000000c001d7a0                SATAPI::diskRemoved()
                0x00000000c001d7a2                SATAPI::diskInserted()
                0x00000000c001d7be                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001daa4                SATAPI::eject()
                0x00000000c001dae0                SATAPI::detectMedia()
                0x00000000c001db36                SATAPI::open(int, int, void*)
                0x00000000c001dc36                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001dd20      0x45b hw/intctrl/apic.32
                0x00000000c001dd20                IOAPIC::close(int, int, void*)
                0x00000000c001dd26                apicGetBase()
                0x00000000c001dd6c                IOAPIC::IOAPIC()
                0x00000000c001dd6c                IOAPIC::IOAPIC()
                0x00000000c001dd94                apicOpen()
                0x00000000c001df10                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001df42                IOAPIC::read(int)
                0x00000000c001df6a                IOAPIC::open(int, int, void*)
                0x00000000c001e050                IOAPIC::write(int, int)
                0x00000000c001e07c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e17b        0x1 
 .text          0x00000000c001e17c       0xf0 hw/timer/apictimer.32
                0x00000000c001e17c                APICTimer::close(int, int, void*)
                0x00000000c001e184                apicTimerHandler(regs*, void*)
                0x00000000c001e1ac                APICTimer::open(int, int, void*)
                0x00000000c001e21c                APICTimer::write(int)
                0x00000000c001e244                APICTimer::APICTimer()
                0x00000000c001e244                APICTimer::APICTimer()
 .text          0x00000000c001e26c      0x1ad hw/timer/pit.32
                0x00000000c001e26c                PIT::write(int)
                0x00000000c001e2f0                pitHandler(regs*, void*)
                0x00000000c001e318                PIT::open(int, int, void*)
                0x00000000c001e368                PIT::close(int, int, void*)
                0x00000000c001e398                PIT::PIT()
                0x00000000c001e398                PIT::PIT()
 *fill*         0x00000000c001e419        0x7 
 .text          0x00000000c001e420       0x83 arch/i386/avx.32
                0x00000000c001e420                avxDetect
                0x00000000c001e44a                avxSave
                0x00000000c001e45b                avxLoad
                0x00000000c001e46c                avxInit
                0x00000000c001e48e                avxClose
                0x00000000c001e48f                wouldSheSayYes
 *fill*         0x00000000c001e4a3        0xd 
 .text          0x00000000c001e4b0      0x2ec arch/i386/interrupt.32
                0x00000000c001e4b0                isr0
                0x00000000c001e4c0                isr1
                0x00000000c001e4ca                isr2
                0x00000000c001e4d4                isr3
                0x00000000c001e4de                isr4
                0x00000000c001e4e8                isr5
                0x00000000c001e4f2                isr6
                0x00000000c001e4fc                isr7
                0x00000000c001e506                isr8
                0x00000000c001e50e                isr9
                0x00000000c001e518                isr10
                0x00000000c001e520                isr11
                0x00000000c001e528                isr12
                0x00000000c001e530                isr13
                0x00000000c001e54a                isr14
                0x00000000c001e552                isr15
                0x00000000c001e55c                isr16
                0x00000000c001e566                isr17
                0x00000000c001e570                isr18
                0x00000000c001e57a                irq3
                0x00000000c001e584                irq4
                0x00000000c001e58e                irq5
                0x00000000c001e598                irq6
                0x00000000c001e5a2                irq7
                0x00000000c001e5ac                irq8
                0x00000000c001e5b6                irq9
                0x00000000c001e5c0                irq10
                0x00000000c001e5ca                irq11
                0x00000000c001e5d4                irq12
                0x00000000c001e5de                irq13
                0x00000000c001e5e8                irq14
                0x00000000c001e5f2                irq15
                0x00000000c001e5fc                irq1
                0x00000000c001e603                irq2
                0x00000000c001e60a                isr96
                0x00000000c001e611                irq0
                0x00000000c001e616                int_common_stub
                0x00000000c001e648                syscall_common_stub
                0x00000000c001e74c                irq16
                0x00000000c001e756                irq17
                0x00000000c001e760                irq18
                0x00000000c001e76a                irq19
                0x00000000c001e774                irq20
                0x00000000c001e77e                irq21
                0x00000000c001e788                irq22
                0x00000000c001e792                irq23
 *fill*         0x00000000c001e79c        0x4 
 .text          0x00000000c001e7a0       0x10 arch/i386/rdrand.32
                0x00000000c001e7a0                i386GetRDRAND
 .text          0x00000000c001e7b0       0x39 arch/i386/sse.32
                0x00000000c001e7b0                absolutelyNoChanceInHell
                0x00000000c001e7b0                sseDetect
                0x00000000c001e7c8                sseSave
                0x00000000c001e7d0                sseLoad
                0x00000000c001e7d8                sseInit
                0x00000000c001e7e8                sseClose
 *fill*         0x00000000c001e7e9        0x7 
 .text          0x00000000c001e7f0       0x49 arch/i386/x87.32
                0x00000000c001e7f6                x87Detect
                0x00000000c001e811                x87Save
                0x00000000c001e818                x87Load
                0x00000000c001e81f                x87Init
                0x00000000c001e838                x87Close
 *fill*         0x00000000c001e839        0x3 
 .text          0x00000000c001e83c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e861        0x0 crtn.32
 *fill*         0x00000000c001e861        0x3 
 .text          0x00000000c001e864      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e864                __divdi3
 *fill*         0x00000000c001e9af        0x1 
 .text          0x00000000c001e9b0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e9b0                __moddi3
 *fill*         0x00000000c001eb2e        0x2 
 .text          0x00000000c001eb30       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001eb30                __udivdi3
 *fill*         0x00000000c001ec2f        0x1 
 .text          0x00000000c001ec30      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001ec30                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001ed50        0x0
 .iplt          0x00000000c001ed50        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001ed4a        0xf
 .init          0x00000000c001ed4a        0x3 crti.32
                0x00000000c001ed4a                _init
 .init          0x00000000c001ed4d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001ed52        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001ed57        0x2 crtn.32

.fini           0x00000000c001ed59        0xa
 .fini          0x00000000c001ed59        0x3 crti.32
                0x00000000c001ed59                _fini
 .fini          0x00000000c001ed5c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001ed61        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001ed64       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001ed64       0x23 core/computer.32
                0x00000000c001ed64                Computer::~Computer()
                0x00000000c001ed64                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001ed88       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001ed88       0x2a core/computer.32
                0x00000000c001ed88                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001edb2       0x21
 .text._Z10idleCommonv
                0x00000000c001edb2       0x21 core/idle.32
                0x00000000c001edb2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001edd4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001edd4        0x2 core/unixfile.32
                0x00000000c001edd4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001edd4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001edd6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001edd6       0x42 core/unixfile.32
                0x00000000c001edd6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001edd6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ee18       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ee18       0xd3 core/unixfile.32
                0x00000000c001ee18                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001eeec        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001eeec        0x7 core/unixfile.32
                0x00000000c001eeec                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001eef4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001eef4       0xa1 core/unixfile.32
                0x00000000c001eef4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ef96        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ef96        0x8 core/unixfile.32
                0x00000000c001ef96                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ef9e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ef9e       0x1a hal/device.32
                0x00000000c001ef9e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ef9e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001efb8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001efb8       0x2a hal/device.32
                0x00000000c001efb8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001efe2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001efe2       0xdc hal/device.32
                0x00000000c001efe2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f0be       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f0be       0x42 hal/device.32
                0x00000000c001f0be                LinkedList<Device>::LinkedList()
                0x00000000c001f0be                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f100       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f100       0x1c hal/timer.32
                0x00000000c001f100                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f11c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f11c        0x7 hal/timer.32
                0x00000000c001f11c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f124       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f124       0xbc hal/timer.32
                0x00000000c001f124                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f1e0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f1e0       0xda hal/timer.32
                0x00000000c001f1e0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f2bc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f2bc       0x23 hw/acpi.32
                0x00000000c001f2bc                ACPI::~ACPI()
                0x00000000c001f2bc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f2e0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f2e0       0x2a hw/acpi.32
                0x00000000c001f2e0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f30c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f30c        0x2 hw/acpi.32
                0x00000000c001f30c                LinkedList<Device>::~LinkedList()
                0x00000000c001f30c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f310       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f310       0x1c hw/acpi.32
                0x00000000c001f310                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f32c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f32c        0x7 hw/acpi.32
                0x00000000c001f32c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f334       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f334       0xb8 hw/acpi.32
                0x00000000c001f334                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001f3ec       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001f3ec       0x23 hw/cpu.32
                0x00000000c001f3ec                CPU::~CPU()
                0x00000000c001f3ec                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001f410       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001f410       0x2a hw/cpu.32
                0x00000000c001f410                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001f43c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001f43c        0x8 sys/kill.32
                0x00000000c001f43c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001f444        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001f444        0x2 thr/prcssthr.32
                0x00000000c001f444                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001f444                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001f448       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001f448       0x49 thr/prcssthr.32
                0x00000000c001f448                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001f448                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001f494       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001f494       0x42 thr/prcssthr.32
                0x00000000c001f494                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001f494                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001f4d6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001f4d6       0x23 hw/bus/pci.32
                0x00000000c001f4d6                PCI::~PCI()
                0x00000000c001f4d6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001f4fa       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001f4fa       0x2a hw/bus/pci.32
                0x00000000c001f4fa                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f524       0x23
 .text._ZN3IDED2Ev
                0x00000000c001f524       0x23 hw/diskctrl/ide.32
                0x00000000c001f524                IDE::~IDE()
                0x00000000c001f524                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f548       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f548       0x2a hw/diskctrl/ide.32
                0x00000000c001f548                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001f572       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001f572       0x23 hw/diskctrl/satabus.32
                0x00000000c001f572                SATABus::~SATABus()
                0x00000000c001f572                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001f596       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001f596       0x2a hw/diskctrl/satabus.32
                0x00000000c001f596                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001f5c0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f5c0       0x23 hw/diskphys/ata.32
                0x00000000c001f5c0                ATA::~ATA()
                0x00000000c001f5c0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f5e4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f5e4       0x2a hw/diskphys/ata.32
                0x00000000c001f5e4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f60e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f60e       0x23 hw/diskphys/atapi.32
                0x00000000c001f60e                ATAPI::~ATAPI()
                0x00000000c001f60e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f632       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f632       0x2a hw/diskphys/atapi.32
                0x00000000c001f632                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001f65c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001f65c       0x23 hw/diskphys/sata.32
                0x00000000c001f65c                SATA::~SATA()
                0x00000000c001f65c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001f680       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001f680       0x2a hw/diskphys/sata.32
                0x00000000c001f680                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001f6aa       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001f6aa       0x23 hw/diskphys/satapi.32
                0x00000000c001f6aa                SATAPI::~SATAPI()
                0x00000000c001f6aa                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001f6ce       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001f6ce       0x2a hw/diskphys/satapi.32
                0x00000000c001f6ce                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001f6f8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f6f8       0x23 hw/intctrl/apic.32
                0x00000000c001f6f8                IOAPIC::~IOAPIC()
                0x00000000c001f6f8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f71c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f71c       0x2a hw/intctrl/apic.32
                0x00000000c001f71c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f748       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f748       0x23 hw/timer/apictimer.32
                0x00000000c001f748                APICTimer::~APICTimer()
                0x00000000c001f748                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f76c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f76c       0x2a hw/timer/apictimer.32
                0x00000000c001f76c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f798       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f798       0x23 hw/timer/pit.32
                0x00000000c001f798                PIT::~PIT()
                0x00000000c001f798                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f7bc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f7bc       0x2a hw/timer/pit.32
                0x00000000c001f7bc                PIT::~PIT()

.rodata         0x00000000c001f7e6     0x3006
                0x00000000c001f7e6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f7e6        0x2 
 .ctors         0x00000000c001f7e8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f7ec        0x4 core/unixfile.32
 .ctors         0x00000000c001f7f0        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f7f4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f7f8                end_ctors = .
                0x00000000c001f7f8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f7f8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f7fc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f7fc                __DTOR_END__
                0x00000000c001f800                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f800        0x0 
 .rodata        0x00000000c001f800      0x101 acpica/utclib.32
                0x00000000c001f800                AcpiGbl_Ctypes
 *fill*         0x00000000c001f901        0x3 
 .rodata        0x00000000c001f904       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f91c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f966       0x1a 
 .rodata        0x00000000c001f980       0xed fs/fat/ff.32
 *fill*         0x00000000c001fa6d       0x13 
 .rodata        0x00000000c001fa80      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001fe80       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001feef      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020004       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c002006c       0x2c core/computer.32
                0x00000000c002006c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020098       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00200c8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00200d4       0x17 core/main.32
 *fill*         0x00000000c00200eb        0x1 
 .rodata.str1.4
                0x00000000c00200ec       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020191       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c00201e9       0x39 core/pipe.32
 *fill*         0x00000000c0020222        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020224       0x1c core/pipe.32
                0x00000000c0020224                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020240       0x2b core/terminal.32
 *fill*         0x00000000c002026b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c002026c       0x1c core/terminal.32
                0x00000000c002026c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020288       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00202aa       0x15 core/unixfile.32
 *fill*         0x00000000c00202bf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00202c0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002030b        0x8 core/unixfile.32
 *fill*         0x00000000c0020313        0x1 
 .rodata.str1.4
                0x00000000c0020314       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020334       0x1c core/unixfile.32
                0x00000000c0020334                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020350       0x1c core/unixfile.32
                0x00000000c0020350                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002036c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020600      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020726       0x33 coreobjs/c++.32
 *fill*         0x00000000c0020759        0x3 
 .rodata        0x00000000c002075c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00208ac      0x169 dbg/usban.32
 *fill*         0x00000000c0020a15        0x3 
 .rodata.str1.4
                0x00000000c0020a18      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0020b4f      0x169 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c0020b4f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0020b50       0x6c fs/vfs.32
                0x00000000c0020b50                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020bbc       0x1c fs/vfs.32
                0x00000000c0020bbc                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020bd8       0x1c fs/vfs.32
                0x00000000c0020bd8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0020bf4       0x2c hal/bus.32
                0x00000000c0020bf4                vtable for Bus
 .rodata.str1.1
                0x00000000c0020c20       0x1e hal/clock.32
 *fill*         0x00000000c0020c3e        0x2 
 .rodata._ZTV5Clock
                0x00000000c0020c40       0x3c hal/clock.32
                0x00000000c0020c40                vtable for Clock
 *fill*         0x00000000c0020c7c        0x4 
 .rodata        0x00000000c0020c80       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020cb0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020d08       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020d08       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0020d08       0x2c hal/device.32
                0x00000000c0020d08                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020d34       0x2c hal/device.32
                0x00000000c0020d34                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020d60       0x2c hal/diskctrl.32
                0x00000000c0020d60                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0020d8c       0x38 hal/diskphys.32
                0x00000000c0020d8c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020dc4       0x3e hal/intctrl.32
 *fill*         0x00000000c0020e02        0x2 
 .rodata.str1.4
                0x00000000c0020e04       0x5d hal/intctrl.32
 .rodata        0x00000000c0020e61       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0020eb4       0x34 hal/keybrd.32
                0x00000000c0020eb4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020ee8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0020f2c       0x2c hal/logidisk.32
                0x00000000c0020f2c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0020f58       0x2c hal/mouse.32
                0x00000000c0020f58                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0020f84       0x34 hal/nic.32
                0x00000000c0020f84                vtable for NIC
 .rodata.str1.1
                0x00000000c0020fb8        0xb hal/partition.32
 *fill*         0x00000000c0020fc3        0x1 
 .rodata._ZTV6Serial
                0x00000000c0020fc4       0x44 hal/serial.32
                0x00000000c0020fc4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021008       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021008        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021008       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021008       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021008       0x30 hal/timer.32
                0x00000000c0021008                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021038       0x10 hal/vcache.32
                0x00000000c0021038                vtable for VCache
 .rodata.str1.1
                0x00000000c0021048       0x93 hal/video.32
 *fill*         0x00000000c00210db        0x1 
 .rodata._ZTV5Video
                0x00000000c00210dc       0x4c hal/video.32
                0x00000000c00210dc                vtable for Video
 .rodata.str1.4
                0x00000000c0021128       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c00211c3      0x174 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021337       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021337        0x8 hw/acpi.32
 *fill*         0x00000000c0021337        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0021338       0x2c hw/acpi.32
                0x00000000c0021338                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021364      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c00214df        0x1 
 .rodata._ZTV3CPU
                0x00000000c00214e0       0x2c hw/cpu.32
                0x00000000c00214e0                vtable for CPU
 .rodata.str1.1
                0x00000000c002150c       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021548       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c00215d9       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c00216a2       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00216ea       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0021715       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002178b       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00217d0        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00217da       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00217fb       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0021891       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00218e5       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0021911      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0021add       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0021b34      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021c44       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021c44       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021c44       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021c44        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0021c44       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0021d06        0x2 
 .rodata        0x00000000c0021d08       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021d38      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0021ed7        0x1 
 .rodata.str1.4
                0x00000000c0021ed8       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0021f4b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0021f60       0x3c arch/i386/rtc.32
                0x00000000c0021f60                vtable for RTC
 .rodata.str1.1
                0x00000000c0021f9c       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0021fdd        0x3 
 .rodata._ZTV3FAT
                0x00000000c0021fe0       0x6c fs/fat/vfslink.32
                0x00000000c0021fe0                vtable for FAT
 .rodata.str1.1
                0x00000000c002204c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c002204c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022184       0x6c fs/iso9660/vfslink.32
                0x00000000c0022184                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00221f0       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022234       0x34 hal/sound/sndcard.32
                0x00000000c0022234                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022268       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00222a7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00222df       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022380       0x2c hw/bus/pci.32
                0x00000000c0022380                vtable for PCI
 .rodata.str1.1
                0x00000000c00223ac       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022433        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022434       0x2c hw/diskctrl/ide.32
                0x00000000c0022434                vtable for IDE
 .rodata.str1.4
                0x00000000c0022460       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022484       0x2c hw/diskctrl/satabus.32
                0x00000000c0022484                vtable for SATABus
 .rodata.str1.1
                0x00000000c00224b0       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c00224c2        0x2 
 .rodata._ZTV3ATA
                0x00000000c00224c4       0x38 hw/diskphys/ata.32
                0x00000000c00224c4                vtable for ATA
 .rodata.str1.1
                0x00000000c00224fc        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022509        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c002250c       0x38 hw/diskphys/atapi.32
                0x00000000c002250c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022544       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00225c0       0x38 hw/diskphys/sata.32
                0x00000000c00225c0                vtable for SATA
 .rodata.str1.1
                0x00000000c00225f8       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00226e2        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00226e4       0x38 hw/diskphys/satapi.32
                0x00000000c00226e4                vtable for SATAPI
 .rodata        0x00000000c002271c        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0022724       0x2c hw/intctrl/apic.32
                0x00000000c0022724                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0022750       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002276b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002276c       0x30 hw/timer/apictimer.32
                0x00000000c002276c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002279c       0x1d hw/timer/pit.32
 *fill*         0x00000000c00227b9        0x3 
 .rodata._ZTV3PIT
                0x00000000c00227bc       0x30 hw/timer/pit.32
                0x00000000c00227bc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00227ec      0x7b5
 *(.data)
 .data          0x00000000c00227ec        0x0 crti.32
 .data          0x00000000c00227ec        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00227ec                __dso_handle
 .data          0x00000000c00227f0        0x0 acpica/utclib.32
 .data          0x00000000c00227f0        0x0 core/malloc.32
 .data          0x00000000c00227f0        0x0 libk/ctype.32
 .data          0x00000000c00227f0        0x0 libk/string.32
 .data          0x00000000c00227f0        0x0 fs/fat/diskio.32
 .data          0x00000000c00227f0        0x0 fs/fat/ff.32
 .data          0x00000000c00227f0        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00227f0        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00227f0        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00227f0        0x0 core/computer.32
 .data          0x00000000c00227f0        0x0 core/gdt.32
 .data          0x00000000c00227f0        0x0 core/idle.32
 .data          0x00000000c00227f0        0x0 core/idt.32
 .data          0x00000000c00227f0        0x4 core/kheap.32
 .data          0x00000000c00227f4        0x0 core/main.32
 .data          0x00000000c00227f4        0x4 core/physmgr.32
                0x00000000c00227f4                Phys::bitmap
 .data          0x00000000c00227f8        0x0 core/pipe.32
 *fill*         0x00000000c00227f8        0x8 
 .data          0x00000000c0022800       0x60 core/terminal.32
                0x00000000c0022800                VgaText::hiddenOut
                0x00000000c0022820                ansiToVGAMappings
 .data          0x00000000c0022860        0x0 core/tss.32
 .data          0x00000000c0022860        0x4 core/unixfile.32
                0x00000000c0022860                UnixFile::nextFd
 .data          0x00000000c0022864       0x15 core/virtmgr.32
                0x00000000c0022864                Virt::pageAllocPtr
                0x00000000c0022868                Virt::bitmap
                0x00000000c002286c                Virt::swapfileSectorsPerPage
                0x00000000c0022870                Virt::swapfileLength
                0x00000000c0022874                Virt::swapfileSector
                0x00000000c0022878                Virt::swapfileDrive
 *fill*         0x00000000c0022879        0x3 
 .data          0x00000000c002287c        0x4 coreobjs/c++.32
                0x00000000c002287c                __stack_chk_guard
 .data          0x00000000c0022880        0x0 dbg/kconsole.32
 .data          0x00000000c0022880       0x28 dbg/usban.32
                0x00000000c0022880                KiUsbanTypeMismatchTypes
 .data          0x00000000c00228a8        0x0 fs/vfs.32
 .data          0x00000000c00228a8        0x0 hal/bus.32
 .data          0x00000000c00228a8        0x0 hal/buzzer.32
 .data          0x00000000c00228a8        0x0 hal/clock.32
 .data          0x00000000c00228a8        0x0 hal/device.32
 .data          0x00000000c00228a8        0x0 hal/diskctrl.32
 .data          0x00000000c00228a8        0x0 hal/diskphys.32
 .data          0x00000000c00228a8        0x0 hal/fpu.32
 .data          0x00000000c00228a8        0x0 hal/intctrl.32
 .data          0x00000000c00228a8        0x0 hal/keybrd.32
 .data          0x00000000c00228a8        0x0 hal/logidisk.32
 .data          0x00000000c00228a8        0x0 hal/mouse.32
 .data          0x00000000c00228a8        0x0 hal/nic.32
 .data          0x00000000c00228a8        0x0 hal/partition.32
 .data          0x00000000c00228a8        0x0 hal/serial.32
 .data          0x00000000c00228a8        0x0 hal/timer.32
 .data          0x00000000c00228a8        0x0 hal/vcache.32
 .data          0x00000000c00228a8        0x0 hal/video.32
 .data          0x00000000c00228a8       0x10 hw/acpi.32
                0x00000000c00228a8                legacyIRQRemaps
 .data          0x00000000c00228b8        0x4 hw/cpu.32
                0x00000000c00228b8                lastCode
 *fill*         0x00000000c00228bc        0x4 
 .data          0x00000000c00228c0      0x142 krnl/bootmsg.32
                0x00000000c00228c0                KiSplashScreen
 .data          0x00000000c0022a02        0x0 krnl/compat.32
 *fill*         0x00000000c0022a02       0x1e 
 .data          0x00000000c0022a20       0x4d krnl/env.32
                0x00000000c0022a20                defaultSysEnv
 .data          0x00000000c0022a6d        0x0 krnl/inlines.32
 .data          0x00000000c0022a6d        0x0 krnl/panic.32
 .data          0x00000000c0022a6d        0x0 krnl/powctrl.32
 .data          0x00000000c0022a6d        0x0 krnl/random.32
 .data          0x00000000c0022a6d        0x0 krnl/resolve.32
 *fill*         0x00000000c0022a6d       0x13 
 .data          0x00000000c0022a80       0x4c krnl/signal.32
                0x00000000c0022a80                KiDefaultSignalHandlers
 *fill*         0x00000000c0022acc       0x14 
 .data          0x00000000c0022ae0       0xf0 krnl/syscalls.32
                0x00000000c0022ae0                systemCallHandlers
 .data          0x00000000c0022bd0        0x0 net/ethernet.32
 *fill*         0x00000000c0022bd0       0x10 
 .data          0x00000000c0022be0      0x100 reg/cm.32
                0x00000000c0022be0                CmComponents
 .data          0x00000000c0022ce0        0x0 reg/registry.32
 .data          0x00000000c0022ce0        0x0 sys/eject.32
 .data          0x00000000c0022ce0        0x0 sys/exit.32
 .data          0x00000000c0022ce0        0x0 sys/getcwd.32
 .data          0x00000000c0022ce0        0x0 sys/getpid.32
 .data          0x00000000c0022ce0        0x0 sys/getramdata.32
 .data          0x00000000c0022ce0        0x0 sys/getvgaptr.32
 .data          0x00000000c0022ce0        0x0 sys/kill.32
 .data          0x00000000c0022ce0        0x0 sys/loaddll.32
 .data          0x00000000c0022ce0        0x0 sys/read.32
 .data          0x00000000c0022ce0        0x0 sys/registersignal.32
 .data          0x00000000c0022ce0        0x0 sys/registry.32
 .data          0x00000000c0022ce0        0x0 sys/sbrk.32
 .data          0x00000000c0022ce0        0x0 sys/setcwd.32
 .data          0x00000000c0022ce0        0x0 sys/settime.32
 .data          0x00000000c0022ce0        0x0 sys/timezone.32
 .data          0x00000000c0022ce0        0x0 sys/truncate.32
 .data          0x00000000c0022ce0        0x0 sys/write.32
 .data          0x00000000c0022ce0        0x0 sys/wsbe.32
 .data          0x00000000c0022ce0        0x0 sys/yield.32
 .data          0x00000000c0022ce0        0x0 thr/elf.32
 .data          0x00000000c0022ce0        0x4 thr/prcssthr.32
                0x00000000c0022ce0                Thr::nextPID
 .data          0x00000000c0022ce4        0x0 vm86/vm8086.32
 *fill*         0x00000000c0022ce4       0x1c 
 .data          0x00000000c0022d00      0x2a0 arch/i386/hal.32
                0x00000000c0022d00                exceptionNames
 .data          0x00000000c0022fa0        0x0 arch/i386/pic.32
 .data          0x00000000c0022fa0        0x0 arch/i386/rtc.32
 .data          0x00000000c0022fa0        0x0 arch/i386/vga.32
 .data          0x00000000c0022fa0        0x0 fs/fat/vfslink.32
 .data          0x00000000c0022fa0        0x0 fs/iso9660/helper.32
 .data          0x00000000c0022fa0        0x1 fs/iso9660/vfslink.32
                0x00000000c0022fa0                recentDriveletter
 .data          0x00000000c0022fa1        0x0 hal/sound/sndcard.32
 .data          0x00000000c0022fa1        0x0 hal/sound/sndport.32
 .data          0x00000000c0022fa1        0x0 hw/bus/isa.32
 .data          0x00000000c0022fa1        0x0 hw/bus/pci.32
 .data          0x00000000c0022fa1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0022fa1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0022fa1        0x0 hw/diskphys/ata.32
 .data          0x00000000c0022fa1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0022fa1        0x0 hw/diskphys/sata.32
 .data          0x00000000c0022fa1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0022fa1        0x0 hw/intctrl/apic.32
 .data          0x00000000c0022fa1        0x0 hw/timer/apictimer.32
 .data          0x00000000c0022fa1        0x0 hw/timer/pit.32
 .data          0x00000000c0022fa1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0022fa1        0x0 crtn.32
 .data          0x00000000c0022fa1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0022fa1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0022fa1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0022fa1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0022fa4        0x0
 .got           0x00000000c0022fa4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0022fa4        0x0
 .got.plt       0x00000000c0022fa4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0022fa4        0x0
 .igot.plt      0x00000000c0022fa4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0022fa4        0x0
 .tm_clone_table
                0x00000000c0022fa4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0022fa4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0022fa1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0022fa1        0x3 
 .eh_frame      0x00000000c0022fa4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0022fa4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0022fa4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022ffc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002303c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00230a8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x4ba7
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 .bss           0x00000000c0025fb4        0x4 fs/vfs.32
                0x00000000c0025fb4                installedFilesystems
 .bss           0x00000000c0025fb8        0x0 hal/bus.32
 .bss           0x00000000c0025fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0025fb8        0x8 hal/clock.32
                0x00000000c0025fb8                User::dstOn
                0x00000000c0025fb9                User::timezoneHalfHourOffset
                0x00000000c0025fbc                User::timezoneHourOffset
 .bss           0x00000000c0025fc0        0x0 hal/device.32
 .bss           0x00000000c0025fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0025fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0025fc0        0x0 hal/fpu.32
 .bss           0x00000000c0025fc0     0x2000 hal/intctrl.32
                0x00000000c0025fc0                INT_contexts
                0x00000000c0026fc0                INT_handlers
 .bss           0x00000000c0027fc0      0x429 hal/keybrd.32
                0x00000000c0027fc0                keyboardWaitingTaskList
                0x00000000c0027fc4                keyboardSetupYet
                0x00000000c0027fc8                guiKeyboardHandler
                0x00000000c0027fe0                keystates
 *fill*         0x00000000c00283e9       0x17 
 .bss           0x00000000c0028400       0x88 hal/logidisk.32
                0x00000000c0028400                diskAssignments
                0x00000000c0028420                disks
 .bss           0x00000000c0028488        0x4 hal/mouse.32
                0x00000000c0028488                guiMouseHandler
 .bss           0x00000000c002848c        0x0 hal/nic.32
 .bss           0x00000000c002848c        0x0 hal/partition.32
 .bss           0x00000000c002848c        0x0 hal/serial.32
 .bss           0x00000000c002848c        0x4 hal/timer.32
                0x00000000c002848c                milliTenthsSinceBoot
 .bss           0x00000000c0028490        0x0 hal/vcache.32
 .bss           0x00000000c0028490        0x4 hal/video.32
                0x00000000c0028490                screen
 *fill*         0x00000000c0028494        0xc 
 .bss           0x00000000c00284a0      0x480 hw/acpi.32
                0x00000000c00284a0                systemSleepFunction
                0x00000000c00284a4                systemResetFunction
                0x00000000c00284a8                systemShutdownFunction
                0x00000000c00284ac                nextACPITable
                0x00000000c00284c0                acpiTables
                0x00000000c00286c0                usingXSDT
                0x00000000c00286c4                MADTpointer
                0x00000000c00286c8                RSDTpointer
                0x00000000c00286cc                RSDPpointer
                0x00000000c00286d0                nextAPICNMI
                0x00000000c00286e0                apicNMIInfo
                0x00000000c0028760                legacyIRQFlags
                0x00000000c0028780                ioapicDiscoveryNumber
                0x00000000c00287a0                ioapicFoundInMADT
                0x00000000c00287c0                ioapicAddresses
                0x00000000c0028840                ioapicGSIBase
                0x00000000c00288c0                processorDiscoveryNumber
                0x00000000c00288e0                matchingAPICID
                0x00000000c0028900                processorID
 .bss           0x00000000c0028920       0x10 hw/cpu.32
                0x00000000c0028920                lastD
                0x00000000c0028924                lastC
                0x00000000c0028928                lastB
                0x00000000c002892c                lastA
 .bss           0x00000000c0028930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0028930        0x0 krnl/compat.32
 .bss           0x00000000c0028930        0x8 krnl/env.32
                0x00000000c0028930                KeUserEnv
                0x00000000c0028934                KeSystemEnv
 .bss           0x00000000c0028938        0x0 krnl/inlines.32
 .bss           0x00000000c0028938        0x1 krnl/panic.32
                0x00000000c0028938                KeIsKernelInPanic
 *fill*         0x00000000c0028939        0x7 
 .bss           0x00000000c0028940       0x48 krnl/powctrl.32
                0x00000000c0028940                powCtrlOnBattery
                0x00000000c0028960                currentPowerSettings
                0x00000000c0028984                secondsSinceLastUserIO
 .bss           0x00000000c0028988        0x8 krnl/random.32
                0x00000000c0028988                kiRandSeed
 .bss           0x00000000c0028990        0x0 krnl/resolve.32
 .bss           0x00000000c0028990        0x0 krnl/signal.32
 .bss           0x00000000c0028990        0x0 krnl/syscalls.32
 .bss           0x00000000c0028990        0x0 net/ethernet.32
 .bss           0x00000000c0028990        0x4 reg/cm.32
 .bss           0x00000000c0028994        0x0 reg/registry.32
 .bss           0x00000000c0028994        0x0 sys/eject.32
 .bss           0x00000000c0028994        0x0 sys/exit.32
 .bss           0x00000000c0028994        0x0 sys/getcwd.32
 .bss           0x00000000c0028994        0x0 sys/getpid.32
 .bss           0x00000000c0028994        0x0 sys/getramdata.32
 .bss           0x00000000c0028994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0028994        0x0 sys/kill.32
 .bss           0x00000000c0028994        0x0 sys/loaddll.32
 .bss           0x00000000c0028994        0x0 sys/read.32
 .bss           0x00000000c0028994        0x0 sys/registersignal.32
 .bss           0x00000000c0028994        0x0 sys/registry.32
 .bss           0x00000000c0028994        0x0 sys/sbrk.32
 .bss           0x00000000c0028994        0x0 sys/setcwd.32
 .bss           0x00000000c0028994        0x0 sys/settime.32
 .bss           0x00000000c0028994        0x0 sys/timezone.32
 .bss           0x00000000c0028994        0x0 sys/truncate.32
 .bss           0x00000000c0028994        0x0 sys/write.32
 .bss           0x00000000c0028994        0x0 sys/wsbe.32
 .bss           0x00000000c0028994        0x0 sys/yield.32
 *fill*         0x00000000c0028994        0xc 
 .bss           0x00000000c00289a0      0x7a4 thr/elf.32
                0x00000000c00289a0                Thr::driverLookupNext
                0x00000000c00289c0                Thr::driverLookupLen
                0x00000000c0028bc0                Thr::driverLookupAddr
                0x00000000c0028dc0                Thr::driverNameLookup
                0x00000000c0028fc0                Thr::kernelSymbols
                0x00000000c0029040                Thr::kernelStringTable
                0x00000000c00290c0                Thr::kernelSymbolTable
                0x00000000c0029140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0029144        0x4 
 .bss           0x00000000c0029148       0x68 thr/prcssthr.32
                0x00000000c0029148                cleanerThread
                0x00000000c002914c                weNeedTheCleanerToNotBlock
                0x00000000c0029150                retValLockStuff
                0x00000000c0029154                retValSchedLock
                0x00000000c0029158                lockStuffLock
                0x00000000c002915c                schedulerLock
                0x00000000c0029160                taskSwitchesPostponedFlag
                0x00000000c0029164                postponeTaskSwitchesCounter
                0x00000000c0029168                irqDisableCounter
                0x00000000c002916c                terminatedTaskList
                0x00000000c0029178                sleepingTaskList
                0x00000000c0029184                taskList
                0x00000000c0029190                kernelProcess
 *fill*         0x00000000c00291b0       0x10 
 .bss           0x00000000c00291c0       0x40 vm86/vm8086.32
                0x00000000c00291c0                Vm::vmRetV
                0x00000000c00291c4                Vm::vmDone
                0x00000000c00291c5                Vm::vmReady
                0x00000000c00291c8                Vm::vm86Thread
                0x00000000c00291cc                Vm::vmToHostCommsPtr
                0x00000000c00291e0                Vm::vmToHostComms
 .bss           0x00000000c0029200       0x18 arch/i386/hal.32
                0x00000000c0029200                apic
                0x00000000c0029204                guiPanicHandler
                0x00000000c0029208                fpuOwner
                0x00000000c002920c                coproLoadFunc
                0x00000000c0029210                coproSaveFunc
                0x00000000c0029214                gpFaultIntercept
 .bss           0x00000000c0029218        0x0 arch/i386/pic.32
 .bss           0x00000000c0029218        0x2 arch/i386/rtc.32
 .bss           0x00000000c002921a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002921a        0x6 
 .bss           0x00000000c0029220       0xf0 fs/fat/vfslink.32
                0x00000000c0029220                FAT::fats
                0x00000000c0029240                FAT::vfsToFatRemaps
                0x00000000c00292c0                fatToVFSRemaps
 .bss           0x00000000c0029310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0029310       0x10 
 .bss           0x00000000c0029320      0x820 fs/iso9660/vfslink.32
                0x00000000c0029320                iso9660Owner
                0x00000000c0029324                recentSector
                0x00000000c0029340                recentBuffer
 .bss           0x00000000c0029b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0029b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0029b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0029b40        0xd hw/bus/pci.32
                0x00000000c0029b40                thePCI
 .bss           0x00000000c0029b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0029b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0029b4d        0x3 
 .bss           0x00000000c0029b50        0x8 hw/diskphys/ata.32
                0x00000000c0029b50                ataSectorsWritten
                0x00000000c0029b54                ataSectorsRead
 .bss           0x00000000c0029b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0029b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0029b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0029b58        0x8 
 .bss           0x00000000c0029b60       0x41 hw/intctrl/apic.32
                0x00000000c0029b60                noOfIOAPICs
                0x00000000c0029b80                ioapics
                0x00000000c0029ba0                IOAPICsSetupYet
 .bss           0x00000000c0029ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0029ba1        0x3 
 .bss           0x00000000c0029ba4        0x4 hw/timer/pit.32
                0x00000000c0029ba4                pitFreq
 .bss           0x00000000c0029ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0029ba8        0x0 crtn.32
 .bss           0x00000000c0029ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0029ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0029ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0029ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0029ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002e74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
