Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f33a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x550 fs/symlink.32
                0x00000000c000ad14                KiCreateSymlinkID()
                0x00000000c000ad7f                KiFlushSymlinkChanges()
                0x00000000c000ae52                KiDeinitialiseSymlinks(void*)
                0x00000000c000ae57                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000aec6                KeInitialiseSymlinks()
                0x00000000c000af6b                KiIsSymlinkRegistered(char const*)
                0x00000000c000af70                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b127                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c000b264      0xcdc fs/vfs.32
                0x00000000c000b264                File::read(unsigned long long, void*, int*)
                0x00000000c000b2bc                File::write(unsigned long long, void*, int*)
                0x00000000c000b314                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b36c                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b39a                File::isAtty()
                0x00000000c000b39e                Directory::isAtty()
                0x00000000c000b3a2                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b3a8                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b3ae                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b3b4                File::~File()
                0x00000000c000b3b4                File::~File()
                0x00000000c000b3d8                File::~File()
                0x00000000c000b402                Directory::~Directory()
                0x00000000c000b402                Directory::~Directory()
                0x00000000c000b426                Directory::~Directory()
                0x00000000c000b450                Filesystem::Filesystem()
                0x00000000c000b450                Filesystem::Filesystem()
                0x00000000c000b474                Filesystem::~Filesystem()
                0x00000000c000b474                Filesystem::~Filesystem()
                0x00000000c000b482                Filesystem::~Filesystem()
                0x00000000c000b4a6                Fs::getcwd(Process*, char*, int)
                0x00000000c000b4d0                Fs::initVFS()
                0x00000000c000b4fa                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b6d6                File::File(char const*, Process*)
                0x00000000c000b6d6                File::File(char const*, Process*)
                0x00000000c000b792                File::open(FileOpenMode)
                0x00000000c000b7f0                File::close()
                0x00000000c000b850                File::seek(unsigned long long)
                0x00000000c000b8a6                File::truncate(unsigned long long)
                0x00000000c000b8fc                File::tell(unsigned long long*)
                0x00000000c000b94c                File::rewind()
                0x00000000c000b960                File::unlink()
                0x00000000c000b9ac                File::rename(char const*)
                0x00000000c000b9fa                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ba56                File::exists()
                0x00000000c000ba94                File::stat(unsigned long long*, bool*)
                0x00000000c000baf5                Fs::setcwd(Process*, char*)
                0x00000000c000bc52                Directory::Directory(char const*, Process*)
                0x00000000c000bc52                Directory::Directory(char const*, Process*)
                0x00000000c000bd0e                Directory::open()
                0x00000000c000bd6a                Directory::close()
                0x00000000c000bdca                Directory::unlink()
                0x00000000c000be16                Directory::rename(char const*)
                0x00000000c000be64                Directory::exists()
                0x00000000c000bea2                Directory::read(dirent*)
                0x00000000c000beee                Directory::create()
                0x00000000c000bf3a                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000bf40       0x86 hal/bus.32
                0x00000000c000bf40                Bus::Bus(char const*)
                0x00000000c000bf40                Bus::Bus(char const*)
                0x00000000c000bf78                Bus::~Bus()
                0x00000000c000bf78                Bus::~Bus()
                0x00000000c000bf9c                Bus::~Bus()
 .text          0x00000000c000bfc6       0x96 hal/buzzer.32
                0x00000000c000bfc6                beepThread(void*)
                0x00000000c000c003                Krnl::beep(int, int, bool)
 .text          0x00000000c000c05c      0x465 hal/clock.32
                0x00000000c000c05c                User::loadClockSettings(int)
                0x00000000c000c0ae                Clock::Clock(char const*)
                0x00000000c000c0ae                Clock::Clock(char const*)
                0x00000000c000c0e4                Clock::~Clock()
                0x00000000c000c0e4                Clock::~Clock()
                0x00000000c000c108                Clock::~Clock()
                0x00000000c000c132                Clock::timeInSecondsLocal()
                0x00000000c000c17a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c1d3                datetimeToSeconds(datetime_t)
                0x00000000c000c2f8                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c358                secondsToDatetime(unsigned long long)
                0x00000000c000c49c                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c4c1        0x1 
 .text          0x00000000c000c4c2      0x464 hal/device.32
                0x00000000c000c4c2                Device::hibernate()
                0x00000000c000c4c4                Device::wake()
                0x00000000c000c4c6                Device::detect()
                0x00000000c000c4c8                Device::disableLegacy()
                0x00000000c000c4ca                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c4cc                DriverlessDevice::close(int, int, void*)
                0x00000000c000c4d0                DriverlessDevice::detect()
                0x00000000c000c4d2                DriverlessDevice::open(int, int, void*)
                0x00000000c000c4e6                Device::~Device()
                0x00000000c000c4e6                Device::~Device()
                0x00000000c000c4f4                Device::~Device()
                0x00000000c000c51c                Device::findAndLoadDriver()
                0x00000000c000c52a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c550                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c590                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c5ba                Device::getParent()
                0x00000000c000c5c6                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c5e4                Device::addChild(Device*)
                0x00000000c000c628                Device::removeAllChildren()
                0x00000000c000c66e                Device::hibernateAll()
                0x00000000c000c69e                Device::wakeAll()
                0x00000000c000c6ce                Device::detectAll()
                0x00000000c000c6fe                Device::disableLegacyAll()
                0x00000000c000c700                Device::loadDriversForAll()
                0x00000000c000c702                Device::closeAll()
                0x00000000c000c738                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c76e                Device::setName(char const*)
                0x00000000c000c77c                Device::Device(char const*)
                0x00000000c000c77c                Device::Device(char const*)
                0x00000000c000c878                Device::getName()
                0x00000000c000c882                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c882                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c8b8                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c8fc                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c926        0x2 
 .text          0x00000000c000c928       0x86 hal/diskctrl.32
                0x00000000c000c928                HardDiskController::HardDiskController(char const*)
                0x00000000c000c928                HardDiskController::HardDiskController(char const*)
                0x00000000c000c960                HardDiskController::~HardDiskController()
                0x00000000c000c960                HardDiskController::~HardDiskController()
                0x00000000c000c984                HardDiskController::~HardDiskController()
 .text          0x00000000c000c9ae       0xe2 hal/diskphys.32
                0x00000000c000c9ae                PhysicalDisk::eject()
                0x00000000c000c9b2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c9b2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ca1a                PhysicalDisk::startCache()
                0x00000000c000ca42                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ca42                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ca66                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ca90        0x0 hal/fpu.32
 .text          0x00000000c000ca90      0x360 hal/intctrl.32
                0x00000000c000ca90                int_handler
                0x00000000c000cb1a                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cb64                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000cca7                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000ccdb                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000cd51                setupINTS()
                0x00000000c000cdae                convertLegacyIRQNumber(int)
 .text          0x00000000c000cdf0      0x8be hal/keybrd.32
                0x00000000c000cdf0                startGUI(void*)
                0x00000000c000ce5e                startGUIVESA(void*)
                0x00000000c000cecc                sendKeyToTerminal(unsigned char)
                0x00000000c000cfa7                sendKeyboardToken(KeyboardToken)
                0x00000000c000d491                clearInternalKeybuffer(VgaText*)
                0x00000000c000d4c6                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d624                Keyboard::Keyboard(char const*)
                0x00000000c000d624                Keyboard::Keyboard(char const*)
                0x00000000c000d660                Keyboard::~Keyboard()
                0x00000000c000d660                Keyboard::~Keyboard()
                0x00000000c000d684                Keyboard::~Keyboard()
 .text          0x00000000c000d6ae      0x3f8 hal/logidisk.32
                0x00000000c000d6ae                LogicalDisk::close(int, int, void*)
                0x00000000c000d6b2                LogicalDisk::~LogicalDisk()
                0x00000000c000d6b2                LogicalDisk::~LogicalDisk()
                0x00000000c000d6d6                LogicalDisk::~LogicalDisk()
                0x00000000c000d700                LogicalDisk::open(int, int, void*)
                0x00000000c000d714                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d74c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d792                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d792                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d852                LogicalDisk::assignDriveLetter()
                0x00000000c000d90c                LogicalDisk::mount()
                0x00000000c000d954                LogicalDisk::unmount()
                0x00000000c000d964                LogicalDisk::eject()
                0x00000000c000d978                LogicalDisk::unassignDriveLetter()
                0x00000000c000d9ce                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000da3a                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000daa6        0x2 
 .text          0x00000000c000daa8       0x86 hal/mouse.32
                0x00000000c000daa8                Mouse::Mouse(char const*)
                0x00000000c000daa8                Mouse::Mouse(char const*)
                0x00000000c000dae0                Mouse::~Mouse()
                0x00000000c000dae0                Mouse::~Mouse()
                0x00000000c000db04                Mouse::~Mouse()
 .text          0x00000000c000db2e       0x90 hal/nic.32
                0x00000000c000db2e                NIC::getMAC()
                0x00000000c000db34                NIC::write(int, unsigned char*, int*)
                0x00000000c000db3a                NIC::NIC(char const*)
                0x00000000c000db3a                NIC::NIC(char const*)
                0x00000000c000db70                NIC::~NIC()
                0x00000000c000db70                NIC::~NIC()
                0x00000000c000db94                NIC::~NIC()
 .text          0x00000000c000dbbe      0x33b hal/partition.32
                0x00000000c000dbbe                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc66                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000def9        0x3 
 .text          0x00000000c000defc       0x86 hal/serial.32
                0x00000000c000defc                Serial::Serial(char const*)
                0x00000000c000defc                Serial::Serial(char const*)
                0x00000000c000df34                Serial::~Serial()
                0x00000000c000df34                Serial::~Serial()
                0x00000000c000df58                Serial::~Serial()
 *fill*         0x00000000c000df82        0x2 
 .text          0x00000000c000df84      0x234 hal/timer.32
                0x00000000c000df84                Timer::Timer(char const*)
                0x00000000c000df84                Timer::Timer(char const*)
                0x00000000c000dfbc                Timer::~Timer()
                0x00000000c000dfbc                Timer::~Timer()
                0x00000000c000dfe0                Timer::~Timer()
                0x00000000c000e00a                Timer::read()
                0x00000000c000e015                setupTimer(int)
                0x00000000c000e050                timerHandler(unsigned int)
 .text          0x00000000c000e1b8      0x450 hal/vcache.32
                0x00000000c000e1b8                VCache::VCache(PhysicalDisk*)
                0x00000000c000e1b8                VCache::VCache(PhysicalDisk*)
                0x00000000c000e328                VCache::invalidateReadBuffer()
                0x00000000c000e338                VCache::writeWriteBuffer()
                0x00000000c000e384                VCache::~VCache()
                0x00000000c000e384                VCache::~VCache()
                0x00000000c000e3dc                VCache::~VCache()
                0x00000000c000e404                VCache::write(unsigned long long, int, void*)
                0x00000000c000e4fe                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e608      0x4d9 hal/video.32
                0x00000000c000e608                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e654                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e6c4                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e754                Video::clearScreen(unsigned int)
                0x00000000c000e788                Video::putpixel(int, int, unsigned int)
                0x00000000c000e796                Video::readPixelApprox(int, int)
                0x00000000c000e7aa                Video::Video(char const*)
                0x00000000c000e7aa                Video::Video(char const*)
                0x00000000c000e7e0                Video::~Video()
                0x00000000c000e7e0                Video::~Video()
                0x00000000c000e804                Video::~Video()
                0x00000000c000e82e                Video::isMonochrome()
                0x00000000c000e83a                Video::getWidth()
                0x00000000c000e846                Video::getHeight()
                0x00000000c000e852                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e90e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ea76                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eae1        0x3 
 .text          0x00000000c000eae4     0x12d2 hw/acpi.32
                0x00000000c000eae4                ACPI::close(int, int, void*)
                0x00000000c000eb98                findRSDP()
                0x00000000c000ec30                loadACPITables(unsigned char*)
                0x00000000c000ee9c                findRSDT(unsigned char*)
                0x00000000c000eff4                findDataTable(unsigned char*, char*)
                0x00000000c000f074                scanMADT()
                0x00000000c000f52c                ACPI::ACPI()
                0x00000000c000f52c                ACPI::ACPI()
                0x00000000c000f580                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f67c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f748                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f750                ACPI::detectPCI()
                0x00000000c000f970                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f9b8                ACPI::sleep()
                0x00000000c000f9d4                ACPI::open(int, int, void*)
 .text          0x00000000c000fdb6      0xbc5 hw/cpu.32
                0x00000000c000fdb6                CPU::close(int, int, void*)
                0x00000000c000fdba                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000fdd6                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000fdee                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000fe62                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000fee6                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000ff14                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000ff42                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000ff70                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000ff9e                CPU::CPU()
                0x00000000c000ff9e                CPU::CPU()
                0x00000000c001002c                CPU::displayFeatures()
                0x00000000c001002e                CPU::detectFeatures()
                0x00000000c0010702                CPU::setupSMEP()
                0x00000000c001070e                CPU::setupUMIP()
                0x00000000c0010718                CPU::setupTSC()
                0x00000000c0010722                CPU::setupLargePages()
                0x00000000c001072c                CPU::setupPAT()
                0x00000000c0010768                CPU::setupMTRR()
                0x00000000c001076a                CPU::setupGlobalPages()
                0x00000000c0010774                CPU::allowUsermodeDataAccess()
                0x00000000c0010786                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010798                CPU::setupSMAP()
                0x00000000c00107a6                CPU::setupFeatures()
                0x00000000c0010872                CPU::open(int, int, void*)
 .text          0x00000000c001097b       0x91 krnl/atexit.32
                0x00000000c001097b                KeInitialiseAtexit()
                0x00000000c001099d                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c00109d1                KeExecuteAtexit()
 .text          0x00000000c0010a0c       0xdf krnl/bootmsg.32
                0x00000000c0010a0c                KeDisplaySplashScreen()
                0x00000000c0010a88                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010aeb        0x1 
 .text          0x00000000c0010aec       0x1d krnl/compat.32
                0x00000000c0010aec                Krnl::handlePowerButton()
                0x00000000c0010afc                Krnl::handleSleepButton()
 *fill*         0x00000000c0010b09        0x1 
 .text          0x00000000c0010b0a      0x5bf krnl/env.32
                0x00000000c0010b0a                EnvVarContainer::getEnv(char const*)
                0x00000000c0010b48                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010c0a                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010c0c                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010e30                EnvVarContainer::__loadSystem()
                0x00000000c0010e4a                EnvVarContainer::__loadUser()
                0x00000000c0010e4c                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010e4c                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010e6e                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010e6e                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010e9e                KeGetEnv(Process*, char const*)
                0x00000000c0010f03                KeSetEnvSystem(char const*, char const*)
                0x00000000c0010f1d                KeSetEnvUser(char const*, char const*)
                0x00000000c0010f3c                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0010f4f                KeDeleteEnvSystem(char const*)
                0x00000000c0010f50                KeDeleteEnvUser(char const*)
                0x00000000c0010f51                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0010f52                KeNewProcessEnv(Process*)
                0x00000000c0010f74                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0010fc0                KeLoadSystemEnv()
                0x00000000c0010fee                KeLoadUserEnv()
                0x00000000c0011014                KeFlushEnv()
                0x00000000c0011015                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0011035                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c00110c9       0x94 krnl/inlines.32
                0x00000000c00110c9                CPU::current()
                0x00000000c00110d5                operator new(unsigned long)
                0x00000000c00110da                operator delete(void*)
                0x00000000c00110df                disableIRQs()
                0x00000000c00110e1                enableIRQs()
                0x00000000c00110e3                lockScheduler()
                0x00000000c00110eb                unlockScheduler()
                0x00000000c00110fa                lockStuff()
                0x00000000c0011108                unlockStuff()
                0x00000000c0011142                Virt::getAKernelVAS()
                0x00000000c0011148                __not_memcpy
 .text          0x00000000c001115d        0xc krnl/panic.32
                0x00000000c001115d                KePanic(char const*)
 .text          0x00000000c0011169      0x142 krnl/powctrl.32
                0x00000000c0011169                KePowerThread(void*)
                0x00000000c0011197                KeChangePowerSettings(PowerSettings)
                0x00000000c00111ad                KeUserIOReceived()
                0x00000000c00111b8                KeHandlePowerButton()
                0x00000000c00111ed                KeHandleSleepButton()
                0x00000000c0011222                KeSetupPowerManager()
 .text          0x00000000c00112ab       0x9b krnl/random.32
                0x00000000c00112ab                KeRand()
                0x00000000c00112eb                KeSeedRand(unsigned int)
                0x00000000c0011314                KeInitRand()
 *fill*         0x00000000c0011346        0x2 
 .text          0x00000000c0011348      0x1bc krnl/resolve.32
                0x00000000c0011348                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011504      0x31f krnl/signal.32
                0x00000000c0011504                KiSigKill(int)
                0x00000000c0011518                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011519                KiDefaultSignalHandlerPause(int)
                0x00000000c0011545                KiDefaultSignalHandlerResume(int)
                0x00000000c0011571                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011576                KeInitSignals()
                0x00000000c00115c5                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00115fb                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011678                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c001176f                KiCheckSignalZ
                0x00000000c00117b1                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00117ec                KiFinishSignalZ
 .text          0x00000000c0011823      0xc76 krnl/syscalls.32
                0x00000000c0011823                SysSeekDir(regs*)
                0x00000000c0011828                SysTellDir(regs*)
                0x00000000c001182d                SysVerify(regs*)
                0x00000000c0011837                SysGetArgc(regs*)
                0x00000000c001184b                SysTTYName(regs*)
                0x00000000c0011853                SysFormatDisk(regs*)
                0x00000000c00118ba                SysSetDiskVolumeLabel(regs*)
                0x00000000c001190e                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011967                SysShutdown(regs*)
                0x00000000c00119f4                SysRealpath(regs*)
                0x00000000c0011a43                SysReadDir(regs*)
                0x00000000c0011ac3                SysIsATTY(regs*)
                0x00000000c0011b1d                SysSeek(regs*)
                0x00000000c0011b77                SysTell(regs*)
                0x00000000c0011be4                SysSize(regs*)
                0x00000000c0011c57                SysSizeFromFilename(regs*)
                0x00000000c0011d01                SysClose(regs*)
                0x00000000c0011d61                SysOpenDir(regs*)
                0x00000000c0011dde                SysMakeDir(regs*)
                0x00000000c0011e4c                SysCloseDir(regs*)
                0x00000000c0011e9b                SysWait(regs*)
                0x00000000c0011ebc                SysNotImpl(regs*)
                0x00000000c0011ed7                SysPanic(regs*)
                0x00000000c0011ef2                SysRmdir(regs*)
                0x00000000c0011f50                SysUnlink(regs*)
                0x00000000c0011fae                SysGetArgv(regs*)
                0x00000000c0011ffb                SysUSleep(regs*)
                0x00000000c0012024                SysSpawn(regs*)
                0x00000000c0012095                SysGetEnv(regs*)
                0x00000000c001214a                SysSetFatAttrib(regs*)
                0x00000000c00121b3                SysPipe(regs*)
                0x00000000c00121f8                SysGetUnixTime(regs*)
                0x00000000c001220c                string_ends_with(char const*, char const*)
                0x00000000c0012257                SysOpen(regs*)
                0x00000000c0012457                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012499        0x3 
 .text          0x00000000c001249c      0x159 net/ethernet.32
                0x00000000c001249c                KeSwitchEndian16(unsigned short)
                0x00000000c00124c0                KeSwitchEndian32(unsigned int)
                0x00000000c00124f0                EthernetCRC32(unsigned char*, int)
                0x00000000c0012594                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c00125f5      0xd51 reg/cm.32
                0x00000000c00125f5                CmOpen(char const*)
                0x00000000c0012713                CmClose(Reghive_Tag*)
                0x00000000c0012729                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012765                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c00127dc                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c001281b                CmGetNext(Reghive_Tag*, int)
                0x00000000c001284d                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012889                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c00128b1                CmUpdateHeader(Reghive_Tag*)
                0x00000000c00128d2                CmExpand(Reghive_Tag*, int)
                0x00000000c001294d                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c00129d3                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012ac7                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012bff                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012c60                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012c90                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012cc7                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012cf1                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012d31                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012dd5                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012e03                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0012fa0                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0012fed                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013067                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00130ba                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001317e                zStrtok(char*, char const*)
                0x00000000c00131f0                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013271                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013314                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0013346      0x545 reg/registry.32
                0x00000000c0013346                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00134d2                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013627                Reg::getLine(char*, char*, char*)
                0x00000000c001365e                Reg::readInt(char*, char*, int*)
                0x00000000c001374c                Reg::readString(char*, char*, char*, int)
                0x00000000c00137cd                Reg::readBool(char*, char*, bool*)
                0x00000000c00137f2                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001381e                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001384a                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001388b       0x36 sys/eject.32
                0x00000000c001388b                SysEject(regs*)
 .text          0x00000000c00138c1       0x18 sys/exit.32
                0x00000000c00138c1                SysExit(regs*)
 .text          0x00000000c00138d9       0x1f sys/getcwd.32
                0x00000000c00138d9                SysGetCwd(regs*)
 .text          0x00000000c00138f8        0xc sys/getpid.32
                0x00000000c00138f8                SysGetPID(regs*)
 .text          0x00000000c0013904       0x1a sys/getramdata.32
                0x00000000c0013904                SysGetRAMData(regs*)
 .text          0x00000000c001391e       0x82 sys/getvgaptr.32
                0x00000000c001391e                SysGetVGAPtr(regs*)
 .text          0x00000000c00139a0       0xb9 sys/kill.32
                0x00000000c00139a0                SysKill(regs*)
 .text          0x00000000c0013a59       0xa8 sys/loaddll.32
                0x00000000c0013a59                SysLoadDLL(regs*)
 .text          0x00000000c0013b01       0x68 sys/read.32
                0x00000000c0013b01                SysRead(regs*)
 .text          0x00000000c0013b69       0x29 sys/registersignal.32
                0x00000000c0013b69                SysRegisterSignal(regs*)
 .text          0x00000000c0013b92      0x19c sys/registry.32
                0x00000000c0013b92                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013c09                SysRegistryReadExtent(regs*)
                0x00000000c0013c51                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013c79                SysRegistryEnterDirectory(regs*)
                0x00000000c0013ca1                SysRegistryGetNext(regs*)
                0x00000000c0013cc9                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013d03                SysRegistryOpen(regs*)
                0x00000000c0013d17                SysRegistryClose(regs*)
 .text          0x00000000c0013d2e       0x55 sys/sbrk.32
                0x00000000c0013d2e                SysSbrk(regs*)
 .text          0x00000000c0013d83       0x1c sys/setcwd.32
                0x00000000c0013d83                SysSetCwd(regs*)
 .text          0x00000000c0013d9f       0x96 sys/settime.32
                0x00000000c0013d9f                SysSetTime(regs*)
 .text          0x00000000c0013e35       0x4a sys/timezone.32
                0x00000000c0013e35                SysTimezone(regs*)
 .text          0x00000000c0013e7f       0xfc sys/truncate.32
                0x00000000c0013e7f                SysTruncate(regs*)
 .text          0x00000000c0013f7b       0x68 sys/write.32
                0x00000000c0013f7b                SysWrite(regs*)
 .text          0x00000000c0013fe3       0x62 sys/wsbe.32
                0x00000000c0013fe3                SysWsbe(regs*)
 .text          0x00000000c0014045       0x25 sys/yield.32
                0x00000000c0014045                SysYield(regs*)
 .text          0x00000000c001406a     0x1203 thr/elf.32
                0x00000000c001406a                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00142f1                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014510                Thr::runtimeReferenceHelper()
                0x00000000c0014523                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014572                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014830                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014f71                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0014fa3                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014fda                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0014ff4                Thr::loadDLL(char const*, bool)
                0x00000000c0015234                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001526d        0x3 
 .text          0x00000000c0015270     0x13b5 thr/prcssthr.32
                0x00000000c0015270                userModeEntryPoint(void*)
                0x00000000c0015298                changeTSS
                0x00000000c00152c8                switchToThread(ThreadControlBlock*)
                0x00000000c0015378                Process::addArgs(char**)
                0x00000000c00153e4                Process::Process(char const*, Process*, char**)
                0x00000000c00153e4                Process::Process(char const*, Process*, char**)
                0x00000000c00155f0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00155f0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00157c4                taskStartupFunction
                0x00000000c00157d0                Semaphore::Semaphore(int)
                0x00000000c00157d0                Semaphore::Semaphore(int)
                0x00000000c0015800                Mutex::Mutex()
                0x00000000c0015800                Mutex::Mutex()
                0x00000000c0015814                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001591c                Process::createUserThread()
                0x00000000c001593c                setupMultitasking(void (*)())
                0x00000000c0015a60                schedule()
                0x00000000c0015af4                Semaphore::tryAcquire()
                0x00000000c0015bb4                Semaphore::assertLocked(char const*)
                0x00000000c0015c38                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015c60                blockTask(TaskState)
                0x00000000c0015c98                waitTask(int, int*, int)
                0x00000000c0015cdc                milliTenthSleepUntil(unsigned int)
                0x00000000c0015d7c                milliTenthSleep(unsigned int)
                0x00000000c0015d90                sleep(unsigned int)
                0x00000000c0015da0                Semaphore::acquire()
                0x00000000c0015e68                taskReturned
                0x00000000c0015eac                Thr::processFromPID(int)
                0x00000000c0015f58                unblockTask(ThreadControlBlock*)
                0x00000000c0016004                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00162d8                cleanerTaskFunction(void*)
                0x00000000c00163e0                terminateTask(int)
                0x00000000c00164cc                Thr::terminateFromIRQ(int)
                0x00000000c00164dc                Semaphore::release()
 .text          0x00000000c0016625      0xc31 vm86/vm8086.32
                0x00000000c0016625                Vm::inbv(unsigned short)
                0x00000000c0016638                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001666e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001667e                Vm::getSegment(unsigned int)
                0x00000000c0016686                Vm::getOffset(unsigned int)
                0x00000000c001668b                Vm::mainloop2()
                0x00000000c00166c5                Vm::mainVm8086Loop(void*)
                0x00000000c00166d5                Vm::mainloop3(unsigned long)
                0x00000000c00166fb                Vm::initialise8086()
                0x00000000c001673e                Vm::finish8086()
                0x00000000c001679f                Vm::getOutput8086(unsigned char*)
                0x00000000c00167c4                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001687d                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016a1b                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016ab8                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016ac9                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016adb                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016aec                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016b01                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016b17                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016b2c                Vm::faultHandler(regs*)
 .text          0x00000000c0017256      0xaf0 arch/i386/hal.32
                0x00000000c0017256                noCopro(unsigned long)
                0x00000000c0017257                nmiHandler(regs*, void*)
                0x00000000c0017270                doubleFault(regs*, void*)
                0x00000000c0017289                displayDebugInfo(regs*)
                0x00000000c001760e                HalSystemIdle()
                0x00000000c001768a                displayProgramFault(char const*)
                0x00000000c00176d6                gpFault(regs*, void*)
                0x00000000c001773d                pgFault(regs*, void*)
                0x00000000c00177c6                otherISRHandler(regs*, void*)
                0x00000000c00177fa                opcodeFault(regs*, void*)
                0x00000000c001787d                i386SaveCoprocessor(void*)
                0x00000000c0017891                i386LoadCoprocessor(void*)
                0x00000000c00178a5                x87EmulHandler(regs*, void*)
                0x00000000c0017942                HalInitialiseCoprocessor()
                0x00000000c00179f0                HalPanic(char const*)
                0x00000000c0017b04                HalQueryPerformanceCounter()
                0x00000000c0017b1f                HalInitialise()
                0x00000000c0017cd5                HalMakeBeep(int)
                0x00000000c0017d0f                HalGetRand()
                0x00000000c0017d12                HalEndOfInterrupt(int)
                0x00000000c0017d43                HalRestart()
                0x00000000c0017d44                HalShutdown()
                0x00000000c0017d45                HalSleep()
 *fill*         0x00000000c0017d46        0x2 
 .text          0x00000000c0017d48      0x2dc arch/i386/pic.32
                0x00000000c0017d48                picIoWait()
                0x00000000c0017d50                picDisable()
                0x00000000c0017d84                picGetIRQReg(int)
                0x00000000c0017e00                picOpen()
                0x00000000c0017f84                picEOI(int)
 .text          0x00000000c0018024      0x66e arch/i386/rtc.32
                0x00000000c0018024                RTC::open(int, int, void*)
                0x00000000c0018028                RTC::close(int, int, void*)
                0x00000000c001802c                RTC::timeInSecondsUTC()
                0x00000000c001803e                RTC::timeInDatetimeUTC()
                0x00000000c0018064                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00180a2                RTC::~RTC()
                0x00000000c00180a2                RTC::~RTC()
                0x00000000c00180c6                RTC::~RTC()
                0x00000000c00180f0                RTC::get_update_in_progress_flag()
                0x00000000c001810a                RTC::completeRTCRefresh()
                0x00000000c00183e4                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018592                rtcIRQHandler(regs*, void*)
                0x00000000c00185d8                RTC::RTC()
                0x00000000c00185d8                RTC::RTC()
 *fill*         0x00000000c0018692        0x2 
 .text          0x00000000c0018694      0x1f4 arch/i386/vga.32
                0x00000000c0018694                HalConsoleScroll(int, int)
                0x00000000c001879c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018800                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018888     0x14f3 fs/fat/vfslink.32
                0x00000000c0018888                FAT::getName()
                0x00000000c0018890                FAT::tell(void*, unsigned long long*)
                0x00000000c00188cc                FAT::stat(void*, unsigned long long*)
                0x00000000c0018908                FAT::~FAT()
                0x00000000c0018908                FAT::~FAT()
                0x00000000c001892c                FAT::~FAT()
                0x00000000c0018954                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00189f8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018ad8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018cbc                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018ed8                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019098                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019208                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019268                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00192c8                FAT::close(void*)
                0x00000000c001931c                FAT::closeDir(void*)
                0x00000000c0019370                FAT::truncate(void*, unsigned long long)
                0x00000000c00193dc                FAT::seek(void*, unsigned long long)
                0x00000000c0019434                fatWrapperReadDisk
                0x00000000c0019474                fatWrapperWriteDisk
                0x00000000c00194b4                fatWrapperIoctl
                0x00000000c00195d4                FAT::FAT()
                0x00000000c00195d4                FAT::FAT()
                0x00000000c001962c                FAT::fixFilepath(char*)
                0x00000000c001966c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00197e0                FAT::openDir(char const*, void**)
                0x00000000c0019890                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019988                FAT::unlink(char const*)
                0x00000000c0019a08                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019bc0                FAT::rename(char const*, char const*)
                0x00000000c0019c8c                FAT::mkdir(char const*)
                0x00000000c0019d0c                FAT::exists(char const*)
 *fill*         0x00000000c0019d7b        0x1 
 .text          0x00000000c0019d7c       0x94 fs/iso9660/helper.32
                0x00000000c0019d7c                isoReadDiscSectorHelper
                0x00000000c0019dd8                iso_kprintf
                0x00000000c0019df4                iso_kprintfd
 .text          0x00000000c0019e10      0x71a fs/iso9660/vfslink.32
                0x00000000c0019e10                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019e16                ISO9660::truncate(void*, unsigned long long)
                0x00000000c0019e1c                ISO9660::getName()
                0x00000000c0019e22                ISO9660::closeDir(void*)
                0x00000000c0019e2c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019e32                ISO9660::unlink(char const*)
                0x00000000c0019e38                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019e3e                ISO9660::rename(char const*, char const*)
                0x00000000c0019e44                ISO9660::mkdir(char const*)
                0x00000000c0019e4a                ISO9660::~ISO9660()
                0x00000000c0019e4a                ISO9660::~ISO9660()
                0x00000000c0019e6e                ISO9660::~ISO9660()
                0x00000000c0019e96                ISO9660::exists(char const*)
                0x00000000c0019eaa                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0019f90                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0019fd8                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a01a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a058                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a0aa                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a1ec                ISO9660::close(void*)
                0x00000000c001a21c                ISO9660::openDir(char const*, void**)
                0x00000000c001a2f6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a411                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a490                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a502                ISO9660::ISO9660()
                0x00000000c001a502                ISO9660::ISO9660()
 .text          0x00000000c001a52a      0x26c hal/sound/sndcard.32
                0x00000000c001a52a                SoundCard::beginPlayback()
                0x00000000c001a538                SoundCard::stopPlayback()
                0x00000000c001a546                SoundCard::SoundCard(char const*)
                0x00000000c001a546                SoundCard::SoundCard(char const*)
                0x00000000c001a5e4                SoundCard::~SoundCard()
                0x00000000c001a5e4                SoundCard::~SoundCard()
                0x00000000c001a608                SoundCard::~SoundCard()
                0x00000000c001a632                SoundCard::configureRates(int, int, int)
                0x00000000c001a662                SoundCard::getSamples16(int, short*)
                0x00000000c001a6be                SoundCard::getSamples32(int, int*)
                0x00000000c001a744                SoundCard::addChannel(SoundPort*)
                0x00000000c001a782                SoundCard::removeChannel(int)
 *fill*         0x00000000c001a796        0x2 
 .text          0x00000000c001a798      0x393 hal/sound/sndport.32
                0x00000000c001a798                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a798                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a824                SoundPort::~SoundPort()
                0x00000000c001a824                SoundPort::~SoundPort()
                0x00000000c001a858                SoundPort::unpause()
                0x00000000c001a864                SoundPort::pause()
                0x00000000c001a870                SoundPort::getBufferUsed()
                0x00000000c001a878                SoundPort::getBufferSize()
                0x00000000c001a880                SoundPort::buffer16(short*, int)
                0x00000000c001a90c                SoundPort::buffer32(int*, int)
                0x00000000c001a998                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001aa68                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001ab2b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001ab2b        0x1 
 .text          0x00000000c001ab2c      0xbc5 hw/bus/pci.32
                0x00000000c001ab2c                PCI::open(int, int, void*)
                0x00000000c001ab4a                PCI::close(int, int, void*)
                0x00000000c001ab4e                PCI::PCI()
                0x00000000c001ab4e                PCI::PCI()
                0x00000000c001abe6                PCI::readBAR8(unsigned int, int)
                0x00000000c001ac02                PCI::readBAR16(unsigned int, int)
                0x00000000c001ac20                PCI::readBAR32(unsigned int, int)
                0x00000000c001ac3c                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001ac5c                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001ac7e                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001ac9e                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ad14                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001adbe                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ade2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae0a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae54                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae7c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001aea0                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001aec4                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001aeec                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001af50                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b036                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b300                PCI::checkBus(unsigned char)
                0x00000000c001b324                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b4aa                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b626                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b698                PCI::detect()
 *fill*         0x00000000c001b6f1        0x1 
 .text          0x00000000c001b6f2      0xb96 hw/diskctrl/ide.32
                0x00000000c001b6f2                IDE::close(int, int, void*)
                0x00000000c001b6f6                IDE::IDE()
                0x00000000c001b6f6                IDE::IDE()
                0x00000000c001b72a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b73c                selectDrive(unsigned char, unsigned char)
                0x00000000c001b73e                IDE::getBase(unsigned char)
                0x00000000c001b750                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b810                IDE::read(unsigned char, unsigned char)
                0x00000000c001b8c4                IDE::waitInterrupt(unsigned char)
                0x00000000c001b926                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001b942                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001b95e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001b9a8                IDE::open(int, int, void*)
                0x00000000c001bde2                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001beb2                IDE::detect()
                0x00000000c001c17a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c234                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c288      0x32c hw/diskctrl/satabus.32
                0x00000000c001c288                SATABus::close(int, int, void*)
                0x00000000c001c28c                SATABus::detect()
                0x00000000c001c28e                SATABus::SATABus()
                0x00000000c001c28e                SATABus::SATABus()
                0x00000000c001c314                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c346                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c38e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c3ae                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c3d8                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c4ea                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c594                SATABus::open(int, int, void*)
 .text          0x00000000c001c5b4      0x96d hw/diskphys/ata.32
                0x00000000c001c5b4                ATA::close(int, int, void*)
                0x00000000c001c5d8                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c5da                ATA::ATA()
                0x00000000c001c5da                ATA::ATA()
                0x00000000c001c608                ATA::flush(bool)
                0x00000000c001c656                ATA::readyForCommand()
                0x00000000c001c6a2                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ca66                ATA::detectCHS()
                0x00000000c001ca90                ATA::open(int, int, void*)
                0x00000000c001cb5c                combineCharAndColour(char, unsigned char)
                0x00000000c001cb6d                combineColours(unsigned char, unsigned char)
                0x00000000c001cb7a                ATA::read(unsigned long long, int, void*)
                0x00000000c001cd50                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001cf21        0x1 
 .text          0x00000000c001cf22      0x612 hw/diskphys/atapi.32
                0x00000000c001cf22                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001cf28                ATAPI::close(int, int, void*)
                0x00000000c001cf4c                ATAPI::ATAPI()
                0x00000000c001cf4c                ATAPI::ATAPI()
                0x00000000c001cf7a                ATAPI::readyForCommand()
                0x00000000c001cfcc                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d28c                ATAPI::diskRemoved()
                0x00000000c001d2c6                ATAPI::eject()
                0x00000000c001d30e                ATAPI::diskInserted()
                0x00000000c001d31a                ATAPI::detectMedia()
                0x00000000c001d3da                ATAPI::open(int, int, void*)
                0x00000000c001d4ba                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d534      0x7ff hw/diskphys/sata.32
                0x00000000c001d534                SATA::close(int, int, void*)
                0x00000000c001d558                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d55a                SATA::open(int, int, void*)
                0x00000000c001d604                SATA::SATA()
                0x00000000c001d604                SATA::SATA()
                0x00000000c001d632                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d884                SATA::read(unsigned long long, int, void*)
                0x00000000c001dad4                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001dd33        0x1 
 .text          0x00000000c001dd34      0x5d8 hw/diskphys/satapi.32
                0x00000000c001dd34                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001dd3a                SATAPI::close(int, int, void*)
                0x00000000c001dd5e                SATAPI::SATAPI()
                0x00000000c001dd5e                SATAPI::SATAPI()
                0x00000000c001dd8c                SATAPI::diskRemoved()
                0x00000000c001dd8e                SATAPI::diskInserted()
                0x00000000c001ddaa                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e090                SATAPI::eject()
                0x00000000c001e0cc                SATAPI::detectMedia()
                0x00000000c001e122                SATAPI::open(int, int, void*)
                0x00000000c001e222                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e30c      0x45b hw/intctrl/apic.32
                0x00000000c001e30c                IOAPIC::close(int, int, void*)
                0x00000000c001e312                apicGetBase()
                0x00000000c001e358                IOAPIC::IOAPIC()
                0x00000000c001e358                IOAPIC::IOAPIC()
                0x00000000c001e380                apicOpen()
                0x00000000c001e4fc                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e52e                IOAPIC::read(int)
                0x00000000c001e556                IOAPIC::open(int, int, void*)
                0x00000000c001e63c                IOAPIC::write(int, int)
                0x00000000c001e668                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e767        0x1 
 .text          0x00000000c001e768       0xf0 hw/timer/apictimer.32
                0x00000000c001e768                APICTimer::close(int, int, void*)
                0x00000000c001e770                apicTimerHandler(regs*, void*)
                0x00000000c001e798                APICTimer::open(int, int, void*)
                0x00000000c001e808                APICTimer::write(int)
                0x00000000c001e830                APICTimer::APICTimer()
                0x00000000c001e830                APICTimer::APICTimer()
 .text          0x00000000c001e858      0x1ad hw/timer/pit.32
                0x00000000c001e858                PIT::write(int)
                0x00000000c001e8dc                pitHandler(regs*, void*)
                0x00000000c001e904                PIT::open(int, int, void*)
                0x00000000c001e954                PIT::close(int, int, void*)
                0x00000000c001e984                PIT::PIT()
                0x00000000c001e984                PIT::PIT()
 *fill*         0x00000000c001ea05        0xb 
 .text          0x00000000c001ea10       0x83 arch/i386/avx.32
                0x00000000c001ea10                avxDetect
                0x00000000c001ea3a                avxSave
                0x00000000c001ea4b                avxLoad
                0x00000000c001ea5c                avxInit
                0x00000000c001ea7e                avxClose
                0x00000000c001ea7f                wouldSheSayYes
 *fill*         0x00000000c001ea93        0xd 
 .text          0x00000000c001eaa0      0x2ec arch/i386/interrupt.32
                0x00000000c001eaa0                isr0
                0x00000000c001eab0                isr1
                0x00000000c001eaba                isr2
                0x00000000c001eac4                isr3
                0x00000000c001eace                isr4
                0x00000000c001ead8                isr5
                0x00000000c001eae2                isr6
                0x00000000c001eaec                isr7
                0x00000000c001eaf6                isr8
                0x00000000c001eafe                isr9
                0x00000000c001eb08                isr10
                0x00000000c001eb10                isr11
                0x00000000c001eb18                isr12
                0x00000000c001eb20                isr13
                0x00000000c001eb3a                isr14
                0x00000000c001eb42                isr15
                0x00000000c001eb4c                isr16
                0x00000000c001eb56                isr17
                0x00000000c001eb60                isr18
                0x00000000c001eb6a                irq3
                0x00000000c001eb74                irq4
                0x00000000c001eb7e                irq5
                0x00000000c001eb88                irq6
                0x00000000c001eb92                irq7
                0x00000000c001eb9c                irq8
                0x00000000c001eba6                irq9
                0x00000000c001ebb0                irq10
                0x00000000c001ebba                irq11
                0x00000000c001ebc4                irq12
                0x00000000c001ebce                irq13
                0x00000000c001ebd8                irq14
                0x00000000c001ebe2                irq15
                0x00000000c001ebec                irq1
                0x00000000c001ebf3                irq2
                0x00000000c001ebfa                isr96
                0x00000000c001ec01                irq0
                0x00000000c001ec06                int_common_stub
                0x00000000c001ec38                syscall_common_stub
                0x00000000c001ed3c                irq16
                0x00000000c001ed46                irq17
                0x00000000c001ed50                irq18
                0x00000000c001ed5a                irq19
                0x00000000c001ed64                irq20
                0x00000000c001ed6e                irq21
                0x00000000c001ed78                irq22
                0x00000000c001ed82                irq23
 *fill*         0x00000000c001ed8c        0x4 
 .text          0x00000000c001ed90       0x10 arch/i386/rdrand.32
                0x00000000c001ed90                i386GetRDRAND
 .text          0x00000000c001eda0       0x39 arch/i386/sse.32
                0x00000000c001eda0                absolutelyNoChanceInHell
                0x00000000c001eda0                sseDetect
                0x00000000c001edb8                sseSave
                0x00000000c001edc0                sseLoad
                0x00000000c001edc8                sseInit
                0x00000000c001edd8                sseClose
 *fill*         0x00000000c001edd9        0x7 
 .text          0x00000000c001ede0       0x49 arch/i386/x87.32
                0x00000000c001ede6                x87Detect
                0x00000000c001ee01                x87Save
                0x00000000c001ee08                x87Load
                0x00000000c001ee0f                x87Init
                0x00000000c001ee28                x87Close
 *fill*         0x00000000c001ee29        0x3 
 .text          0x00000000c001ee2c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001ee51        0x0 crtn.32
 *fill*         0x00000000c001ee51        0x3 
 .text          0x00000000c001ee54      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001ee54                __divdi3
 *fill*         0x00000000c001ef9f        0x1 
 .text          0x00000000c001efa0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001efa0                __moddi3
 *fill*         0x00000000c001f11e        0x2 
 .text          0x00000000c001f120       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f120                __udivdi3
 *fill*         0x00000000c001f21f        0x1 
 .text          0x00000000c001f220      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f220                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f340        0x0
 .iplt          0x00000000c001f340        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f33a        0xf
 .init          0x00000000c001f33a        0x3 crti.32
                0x00000000c001f33a                _init
 .init          0x00000000c001f33d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f342        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f347        0x2 crtn.32

.fini           0x00000000c001f349        0xa
 .fini          0x00000000c001f349        0x3 crti.32
                0x00000000c001f349                _fini
 .fini          0x00000000c001f34c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f351        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f354       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f354       0x23 core/computer.32
                0x00000000c001f354                Computer::~Computer()
                0x00000000c001f354                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f378       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f378       0x2a core/computer.32
                0x00000000c001f378                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f3a2       0x21
 .text._Z10idleCommonv
                0x00000000c001f3a2       0x21 core/idle.32
                0x00000000c001f3a2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f3c4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f3c4        0x2 core/unixfile.32
                0x00000000c001f3c4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f3c4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f3c6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f3c6       0x42 core/unixfile.32
                0x00000000c001f3c6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f3c6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f408       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f408       0xd3 core/unixfile.32
                0x00000000c001f408                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f4dc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f4dc        0x7 core/unixfile.32
                0x00000000c001f4dc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f4e4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f4e4       0xa1 core/unixfile.32
                0x00000000c001f4e4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f586        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f586        0x8 core/unixfile.32
                0x00000000c001f586                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f58e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f58e       0x1a hal/device.32
                0x00000000c001f58e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f58e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f5a8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f5a8       0x2a hal/device.32
                0x00000000c001f5a8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f5d2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f5d2       0xdc hal/device.32
                0x00000000c001f5d2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f6ae       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f6ae       0x42 hal/device.32
                0x00000000c001f6ae                LinkedList<Device>::LinkedList()
                0x00000000c001f6ae                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f6f0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f6f0       0x1c hal/timer.32
                0x00000000c001f6f0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f70c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f70c        0x7 hal/timer.32
                0x00000000c001f70c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f714       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f714       0xbc hal/timer.32
                0x00000000c001f714                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f7d0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f7d0       0xda hal/timer.32
                0x00000000c001f7d0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f8ac       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f8ac       0x23 hw/acpi.32
                0x00000000c001f8ac                ACPI::~ACPI()
                0x00000000c001f8ac                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f8d0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f8d0       0x2a hw/acpi.32
                0x00000000c001f8d0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f8fc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f8fc        0x2 hw/acpi.32
                0x00000000c001f8fc                LinkedList<Device>::~LinkedList()
                0x00000000c001f8fc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f900       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f900       0x1c hw/acpi.32
                0x00000000c001f900                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f91c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f91c        0x7 hw/acpi.32
                0x00000000c001f91c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f924       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f924       0xb8 hw/acpi.32
                0x00000000c001f924                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001f9dc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001f9dc       0x23 hw/cpu.32
                0x00000000c001f9dc                CPU::~CPU()
                0x00000000c001f9dc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fa00       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fa00       0x2a hw/cpu.32
                0x00000000c001fa00                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fa2c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fa2c        0x8 sys/kill.32
                0x00000000c001fa2c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fa34        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fa34        0x2 thr/prcssthr.32
                0x00000000c001fa34                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fa34                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fa38       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fa38       0x49 thr/prcssthr.32
                0x00000000c001fa38                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fa38                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fa84       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fa84       0x42 thr/prcssthr.32
                0x00000000c001fa84                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fa84                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fac6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fac6       0x23 hw/bus/pci.32
                0x00000000c001fac6                PCI::~PCI()
                0x00000000c001fac6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001faea       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001faea       0x2a hw/bus/pci.32
                0x00000000c001faea                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fb14       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fb14       0x23 hw/diskctrl/ide.32
                0x00000000c001fb14                IDE::~IDE()
                0x00000000c001fb14                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fb38       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fb38       0x2a hw/diskctrl/ide.32
                0x00000000c001fb38                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001fb62       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001fb62       0x23 hw/diskctrl/satabus.32
                0x00000000c001fb62                SATABus::~SATABus()
                0x00000000c001fb62                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001fb86       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001fb86       0x2a hw/diskctrl/satabus.32
                0x00000000c001fb86                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001fbb0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fbb0       0x23 hw/diskphys/ata.32
                0x00000000c001fbb0                ATA::~ATA()
                0x00000000c001fbb0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fbd4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fbd4       0x2a hw/diskphys/ata.32
                0x00000000c001fbd4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fbfe       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fbfe       0x23 hw/diskphys/atapi.32
                0x00000000c001fbfe                ATAPI::~ATAPI()
                0x00000000c001fbfe                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fc22       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fc22       0x2a hw/diskphys/atapi.32
                0x00000000c001fc22                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001fc4c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001fc4c       0x23 hw/diskphys/sata.32
                0x00000000c001fc4c                SATA::~SATA()
                0x00000000c001fc4c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001fc70       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001fc70       0x2a hw/diskphys/sata.32
                0x00000000c001fc70                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001fc9a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001fc9a       0x23 hw/diskphys/satapi.32
                0x00000000c001fc9a                SATAPI::~SATAPI()
                0x00000000c001fc9a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001fcbe       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001fcbe       0x2a hw/diskphys/satapi.32
                0x00000000c001fcbe                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001fce8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001fce8       0x23 hw/intctrl/apic.32
                0x00000000c001fce8                IOAPIC::~IOAPIC()
                0x00000000c001fce8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001fd0c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001fd0c       0x2a hw/intctrl/apic.32
                0x00000000c001fd0c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001fd38       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001fd38       0x23 hw/timer/apictimer.32
                0x00000000c001fd38                APICTimer::~APICTimer()
                0x00000000c001fd38                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001fd5c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001fd5c       0x2a hw/timer/apictimer.32
                0x00000000c001fd5c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001fd88       0x23
 .text._ZN3PITD2Ev
                0x00000000c001fd88       0x23 hw/timer/pit.32
                0x00000000c001fd88                PIT::~PIT()
                0x00000000c001fd88                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001fdac       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001fdac       0x2a hw/timer/pit.32
                0x00000000c001fdac                PIT::~PIT()

.rodata         0x00000000c001fdd6     0x30f2
                0x00000000c001fdd6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001fdd6        0x2 
 .ctors         0x00000000c001fdd8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001fddc        0x4 core/unixfile.32
 .ctors         0x00000000c001fde0        0x4 thr/prcssthr.32
 .ctors         0x00000000c001fde4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fde8                end_ctors = .
                0x00000000c001fde8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001fde8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001fdec        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fdec                __DTOR_END__
                0x00000000c001fdf0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001fdf0       0x10 
 .rodata        0x00000000c001fe00      0x101 acpica/utclib.32
                0x00000000c001fe00                AcpiGbl_Ctypes
 *fill*         0x00000000c001ff01        0x3 
 .rodata        0x00000000c001ff04       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001ff1c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001ff66       0x1a 
 .rodata        0x00000000c001ff80       0xed fs/fat/ff.32
 *fill*         0x00000000c002006d       0x13 
 .rodata        0x00000000c0020080      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020480       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c00204ef      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020604       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c002066c       0x2c core/computer.32
                0x00000000c002066c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020698       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00206c8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00206d4       0x17 core/main.32
 *fill*         0x00000000c00206eb        0x1 
 .rodata.str1.4
                0x00000000c00206ec       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020791       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c00207e9       0x39 core/pipe.32
 *fill*         0x00000000c0020822        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020824       0x1c core/pipe.32
                0x00000000c0020824                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020840       0x2b core/terminal.32
 *fill*         0x00000000c002086b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c002086c       0x1c core/terminal.32
                0x00000000c002086c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020888       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00208aa       0x15 core/unixfile.32
 *fill*         0x00000000c00208bf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00208c0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002090b        0x8 core/unixfile.32
 *fill*         0x00000000c0020913        0x1 
 .rodata.str1.4
                0x00000000c0020914       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020934       0x1c core/unixfile.32
                0x00000000c0020934                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020950       0x1c core/unixfile.32
                0x00000000c0020950                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002096c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020c00      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020d26       0x33 coreobjs/c++.32
 *fill*         0x00000000c0020d59        0x3 
 .rodata        0x00000000c0020d5c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020eac      0x169 dbg/usban.32
 *fill*         0x00000000c0021015        0x3 
 .rodata.str1.4
                0x00000000c0021018      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002114f       0xb7 fs/symlink.32
 .rodata        0x00000000c0021206        0x9 fs/symlink.32
 .rodata.str1.1
                0x00000000c002120f       0xb7 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c002120f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021210       0x6c fs/vfs.32
                0x00000000c0021210                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002127c       0x1c fs/vfs.32
                0x00000000c002127c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021298       0x1c fs/vfs.32
                0x00000000c0021298                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00212b4       0x2c hal/bus.32
                0x00000000c00212b4                vtable for Bus
 .rodata.str1.1
                0x00000000c00212e0       0x1e hal/clock.32
 *fill*         0x00000000c00212fe        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021300       0x3c hal/clock.32
                0x00000000c0021300                vtable for Clock
 *fill*         0x00000000c002133c        0x4 
 .rodata        0x00000000c0021340       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021370       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00213c8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00213c8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c00213c8       0x2c hal/device.32
                0x00000000c00213c8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00213f4       0x2c hal/device.32
                0x00000000c00213f4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021420       0x2c hal/diskctrl.32
                0x00000000c0021420                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002144c       0x38 hal/diskphys.32
                0x00000000c002144c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021484       0x3e hal/intctrl.32
 *fill*         0x00000000c00214c2        0x2 
 .rodata.str1.4
                0x00000000c00214c4       0x5d hal/intctrl.32
 .rodata        0x00000000c0021521       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021574       0x34 hal/keybrd.32
                0x00000000c0021574                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00215a8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00215ec       0x2c hal/logidisk.32
                0x00000000c00215ec                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021618       0x2c hal/mouse.32
                0x00000000c0021618                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021644       0x34 hal/nic.32
                0x00000000c0021644                vtable for NIC
 .rodata.str1.1
                0x00000000c0021678        0xb hal/partition.32
 *fill*         0x00000000c0021683        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021684       0x44 hal/serial.32
                0x00000000c0021684                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00216c8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00216c8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00216c8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00216c8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c00216c8       0x30 hal/timer.32
                0x00000000c00216c8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00216f8       0x10 hal/vcache.32
                0x00000000c00216f8                vtable for VCache
 .rodata.str1.1
                0x00000000c0021708       0x93 hal/video.32
 *fill*         0x00000000c002179b        0x1 
 .rodata._ZTV5Video
                0x00000000c002179c       0x4c hal/video.32
                0x00000000c002179c                vtable for Video
 .rodata.str1.4
                0x00000000c00217e8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021883      0x174 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00219f7       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00219f7        0x8 hw/acpi.32
 *fill*         0x00000000c00219f7        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00219f8       0x2c hw/acpi.32
                0x00000000c00219f8                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021a24      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0021b9f        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021ba0       0x2c hw/cpu.32
                0x00000000c0021ba0                vtable for CPU
 .rodata.str1.1
                0x00000000c0021bcc       0x19 krnl/atexit.32
 .rodata.str1.1
                0x00000000c0021be5       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021c21       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0021cb2       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0021d7b       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021dc3       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0021dee       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0021e64       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021ea9        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0021eb3       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0021ed4       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0021f6a       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0021fbe       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0021fea      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00221b6       0x57 thr/prcssthr.32
 *fill*         0x00000000c002220d        0x3 
 .rodata.str1.4
                0x00000000c0022210      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022320       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022320       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022320       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022320        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022320       0xc2 vm86/vm8086.32
 *fill*         0x00000000c00223e2        0x2 
 .rodata        0x00000000c00223e4       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022414      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c00225b3        0x1 
 .rodata.str1.4
                0x00000000c00225b4       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022627       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c002263c       0x3c arch/i386/rtc.32
                0x00000000c002263c                vtable for RTC
 .rodata.str1.1
                0x00000000c0022678       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00226b9        0x3 
 .rodata._ZTV3FAT
                0x00000000c00226bc       0x6c fs/fat/vfslink.32
                0x00000000c00226bc                vtable for FAT
 .rodata.str1.1
                0x00000000c0022728       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022728      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022860       0x6c fs/iso9660/vfslink.32
                0x00000000c0022860                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00228cc       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022910       0x34 hal/sound/sndcard.32
                0x00000000c0022910                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022944       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022983       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00229bb       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022a5c       0x2c hw/bus/pci.32
                0x00000000c0022a5c                vtable for PCI
 .rodata.str1.1
                0x00000000c0022a88       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022b0f        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022b10       0x2c hw/diskctrl/ide.32
                0x00000000c0022b10                vtable for IDE
 .rodata.str1.4
                0x00000000c0022b3c       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022b60       0x2c hw/diskctrl/satabus.32
                0x00000000c0022b60                vtable for SATABus
 .rodata.str1.1
                0x00000000c0022b8c       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0022b9e        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022ba0       0x38 hw/diskphys/ata.32
                0x00000000c0022ba0                vtable for ATA
 .rodata.str1.1
                0x00000000c0022bd8        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022be5        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0022be8       0x38 hw/diskphys/atapi.32
                0x00000000c0022be8                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022c20       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0022c9c       0x38 hw/diskphys/sata.32
                0x00000000c0022c9c                vtable for SATA
 .rodata.str1.1
                0x00000000c0022cd4       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0022dbe        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0022dc0       0x38 hw/diskphys/satapi.32
                0x00000000c0022dc0                vtable for SATAPI
 .rodata        0x00000000c0022df8        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0022e00       0x2c hw/intctrl/apic.32
                0x00000000c0022e00                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0022e2c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0022e47        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0022e48       0x30 hw/timer/apictimer.32
                0x00000000c0022e48                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0022e78       0x1d hw/timer/pit.32
 *fill*         0x00000000c0022e95        0x3 
 .rodata._ZTV3PIT
                0x00000000c0022e98       0x30 hw/timer/pit.32
                0x00000000c0022e98                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0022ec8      0x7b9
 *(.data)
 .data          0x00000000c0022ec8        0x0 crti.32
 .data          0x00000000c0022ec8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0022ec8                __dso_handle
 .data          0x00000000c0022ecc        0x0 acpica/utclib.32
 .data          0x00000000c0022ecc        0x0 core/malloc.32
 .data          0x00000000c0022ecc        0x0 libk/ctype.32
 .data          0x00000000c0022ecc        0x0 libk/string.32
 .data          0x00000000c0022ecc        0x0 fs/fat/diskio.32
 .data          0x00000000c0022ecc        0x0 fs/fat/ff.32
 .data          0x00000000c0022ecc        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0022ecc        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0022ecc        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0022ecc        0x0 core/computer.32
 .data          0x00000000c0022ecc        0x0 core/gdt.32
 .data          0x00000000c0022ecc        0x0 core/idle.32
 .data          0x00000000c0022ecc        0x0 core/idt.32
 .data          0x00000000c0022ecc        0x4 core/kheap.32
 .data          0x00000000c0022ed0        0x0 core/main.32
 .data          0x00000000c0022ed0        0x4 core/physmgr.32
                0x00000000c0022ed0                Phys::bitmap
 .data          0x00000000c0022ed4        0x0 core/pipe.32
 *fill*         0x00000000c0022ed4        0xc 
 .data          0x00000000c0022ee0       0x60 core/terminal.32
                0x00000000c0022ee0                VgaText::hiddenOut
                0x00000000c0022f00                ansiToVGAMappings
 .data          0x00000000c0022f40        0x0 core/tss.32
 .data          0x00000000c0022f40        0x4 core/unixfile.32
                0x00000000c0022f40                UnixFile::nextFd
 .data          0x00000000c0022f44       0x15 core/virtmgr.32
                0x00000000c0022f44                Virt::pageAllocPtr
                0x00000000c0022f48                Virt::bitmap
                0x00000000c0022f4c                Virt::swapfileSectorsPerPage
                0x00000000c0022f50                Virt::swapfileLength
                0x00000000c0022f54                Virt::swapfileSector
                0x00000000c0022f58                Virt::swapfileDrive
 *fill*         0x00000000c0022f59        0x3 
 .data          0x00000000c0022f5c        0x4 coreobjs/c++.32
                0x00000000c0022f5c                __stack_chk_guard
 .data          0x00000000c0022f60        0x0 dbg/kconsole.32
 .data          0x00000000c0022f60       0x28 dbg/usban.32
                0x00000000c0022f60                KiUsbanTypeMismatchTypes
 .data          0x00000000c0022f88        0x0 fs/symlink.32
 .data          0x00000000c0022f88        0x0 fs/vfs.32
 .data          0x00000000c0022f88        0x0 hal/bus.32
 .data          0x00000000c0022f88        0x0 hal/buzzer.32
 .data          0x00000000c0022f88        0x0 hal/clock.32
 .data          0x00000000c0022f88        0x0 hal/device.32
 .data          0x00000000c0022f88        0x0 hal/diskctrl.32
 .data          0x00000000c0022f88        0x0 hal/diskphys.32
 .data          0x00000000c0022f88        0x0 hal/fpu.32
 .data          0x00000000c0022f88        0x0 hal/intctrl.32
 .data          0x00000000c0022f88        0x0 hal/keybrd.32
 .data          0x00000000c0022f88        0x0 hal/logidisk.32
 .data          0x00000000c0022f88        0x0 hal/mouse.32
 .data          0x00000000c0022f88        0x0 hal/nic.32
 .data          0x00000000c0022f88        0x0 hal/partition.32
 .data          0x00000000c0022f88        0x0 hal/serial.32
 .data          0x00000000c0022f88        0x0 hal/timer.32
 .data          0x00000000c0022f88        0x0 hal/vcache.32
 .data          0x00000000c0022f88        0x0 hal/video.32
 .data          0x00000000c0022f88       0x10 hw/acpi.32
                0x00000000c0022f88                legacyIRQRemaps
 .data          0x00000000c0022f98        0x4 hw/cpu.32
                0x00000000c0022f98                lastCode
 .data          0x00000000c0022f9c        0x0 krnl/atexit.32
 *fill*         0x00000000c0022f9c        0x4 
 .data          0x00000000c0022fa0      0x142 krnl/bootmsg.32
                0x00000000c0022fa0                KiSplashScreen
 .data          0x00000000c00230e2        0x0 krnl/compat.32
 *fill*         0x00000000c00230e2       0x1e 
 .data          0x00000000c0023100       0x4d krnl/env.32
                0x00000000c0023100                defaultSysEnv
 .data          0x00000000c002314d        0x0 krnl/inlines.32
 .data          0x00000000c002314d        0x0 krnl/panic.32
 .data          0x00000000c002314d        0x0 krnl/powctrl.32
 .data          0x00000000c002314d        0x0 krnl/random.32
 .data          0x00000000c002314d        0x0 krnl/resolve.32
 *fill*         0x00000000c002314d       0x13 
 .data          0x00000000c0023160       0x4c krnl/signal.32
                0x00000000c0023160                KiDefaultSignalHandlers
 *fill*         0x00000000c00231ac       0x14 
 .data          0x00000000c00231c0       0xf0 krnl/syscalls.32
                0x00000000c00231c0                systemCallHandlers
 .data          0x00000000c00232b0        0x0 net/ethernet.32
 *fill*         0x00000000c00232b0       0x10 
 .data          0x00000000c00232c0      0x100 reg/cm.32
                0x00000000c00232c0                CmComponents
 .data          0x00000000c00233c0        0x0 reg/registry.32
 .data          0x00000000c00233c0        0x0 sys/eject.32
 .data          0x00000000c00233c0        0x0 sys/exit.32
 .data          0x00000000c00233c0        0x0 sys/getcwd.32
 .data          0x00000000c00233c0        0x0 sys/getpid.32
 .data          0x00000000c00233c0        0x0 sys/getramdata.32
 .data          0x00000000c00233c0        0x0 sys/getvgaptr.32
 .data          0x00000000c00233c0        0x0 sys/kill.32
 .data          0x00000000c00233c0        0x0 sys/loaddll.32
 .data          0x00000000c00233c0        0x0 sys/read.32
 .data          0x00000000c00233c0        0x0 sys/registersignal.32
 .data          0x00000000c00233c0        0x0 sys/registry.32
 .data          0x00000000c00233c0        0x0 sys/sbrk.32
 .data          0x00000000c00233c0        0x0 sys/setcwd.32
 .data          0x00000000c00233c0        0x0 sys/settime.32
 .data          0x00000000c00233c0        0x0 sys/timezone.32
 .data          0x00000000c00233c0        0x0 sys/truncate.32
 .data          0x00000000c00233c0        0x0 sys/write.32
 .data          0x00000000c00233c0        0x0 sys/wsbe.32
 .data          0x00000000c00233c0        0x0 sys/yield.32
 .data          0x00000000c00233c0        0x0 thr/elf.32
 .data          0x00000000c00233c0        0x4 thr/prcssthr.32
                0x00000000c00233c0                Thr::nextPID
 .data          0x00000000c00233c4        0x0 vm86/vm8086.32
 *fill*         0x00000000c00233c4       0x1c 
 .data          0x00000000c00233e0      0x2a0 arch/i386/hal.32
                0x00000000c00233e0                exceptionNames
 .data          0x00000000c0023680        0x0 arch/i386/pic.32
 .data          0x00000000c0023680        0x0 arch/i386/rtc.32
 .data          0x00000000c0023680        0x0 arch/i386/vga.32
 .data          0x00000000c0023680        0x0 fs/fat/vfslink.32
 .data          0x00000000c0023680        0x0 fs/iso9660/helper.32
 .data          0x00000000c0023680        0x1 fs/iso9660/vfslink.32
                0x00000000c0023680                recentDriveletter
 .data          0x00000000c0023681        0x0 hal/sound/sndcard.32
 .data          0x00000000c0023681        0x0 hal/sound/sndport.32
 .data          0x00000000c0023681        0x0 hw/bus/isa.32
 .data          0x00000000c0023681        0x0 hw/bus/pci.32
 .data          0x00000000c0023681        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0023681        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0023681        0x0 hw/diskphys/ata.32
 .data          0x00000000c0023681        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0023681        0x0 hw/diskphys/sata.32
 .data          0x00000000c0023681        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0023681        0x0 hw/intctrl/apic.32
 .data          0x00000000c0023681        0x0 hw/timer/apictimer.32
 .data          0x00000000c0023681        0x0 hw/timer/pit.32
 .data          0x00000000c0023681        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0023681        0x0 crtn.32
 .data          0x00000000c0023681        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0023681        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0023681        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0023681        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0023684        0x0
 .got           0x00000000c0023684        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0023684        0x0
 .got.plt       0x00000000c0023684        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0023684        0x0
 .igot.plt      0x00000000c0023684        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0023684        0x0
 .tm_clone_table
                0x00000000c0023684        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0023684        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0023681      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0023681        0x3 
 .eh_frame      0x00000000c0023684        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0023684        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0023684       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00236dc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002371c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0023788       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x5ea7
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0025fb4        0xc 
 .bss           0x00000000c0025fc0     0x10a4 fs/symlink.32
                0x00000000c0025fc0                KiNumWaitingRoomSymlinks
                0x00000000c0025fe0                KiNewlyCreatedIDs
                0x00000000c0026060                KiNewlyCreatedSymlinks
                0x00000000c0027060                KiBaseSymlinkID
 .bss           0x00000000c0027064        0x4 fs/vfs.32
                0x00000000c0027064                installedFilesystems
 .bss           0x00000000c0027068        0x0 hal/bus.32
 .bss           0x00000000c0027068        0x0 hal/buzzer.32
 .bss           0x00000000c0027068        0x8 hal/clock.32
                0x00000000c0027068                User::dstOn
                0x00000000c0027069                User::timezoneHalfHourOffset
                0x00000000c002706c                User::timezoneHourOffset
 .bss           0x00000000c0027070        0x0 hal/device.32
 .bss           0x00000000c0027070        0x0 hal/diskctrl.32
 .bss           0x00000000c0027070        0x0 hal/diskphys.32
 .bss           0x00000000c0027070        0x0 hal/fpu.32
 *fill*         0x00000000c0027070       0x10 
 .bss           0x00000000c0027080     0x2000 hal/intctrl.32
                0x00000000c0027080                INT_contexts
                0x00000000c0028080                INT_handlers
 .bss           0x00000000c0029080      0x429 hal/keybrd.32
                0x00000000c0029080                keyboardWaitingTaskList
                0x00000000c0029084                keyboardSetupYet
                0x00000000c0029088                guiKeyboardHandler
                0x00000000c00290a0                keystates
 *fill*         0x00000000c00294a9       0x17 
 .bss           0x00000000c00294c0       0x88 hal/logidisk.32
                0x00000000c00294c0                diskAssignments
                0x00000000c00294e0                disks
 .bss           0x00000000c0029548        0x4 hal/mouse.32
                0x00000000c0029548                guiMouseHandler
 .bss           0x00000000c002954c        0x0 hal/nic.32
 .bss           0x00000000c002954c        0x0 hal/partition.32
 .bss           0x00000000c002954c        0x0 hal/serial.32
 .bss           0x00000000c002954c        0x4 hal/timer.32
                0x00000000c002954c                milliTenthsSinceBoot
 .bss           0x00000000c0029550        0x0 hal/vcache.32
 .bss           0x00000000c0029550        0x4 hal/video.32
                0x00000000c0029550                screen
 *fill*         0x00000000c0029554        0xc 
 .bss           0x00000000c0029560      0x480 hw/acpi.32
                0x00000000c0029560                systemSleepFunction
                0x00000000c0029564                systemResetFunction
                0x00000000c0029568                systemShutdownFunction
                0x00000000c002956c                nextACPITable
                0x00000000c0029580                acpiTables
                0x00000000c0029780                usingXSDT
                0x00000000c0029784                MADTpointer
                0x00000000c0029788                RSDTpointer
                0x00000000c002978c                RSDPpointer
                0x00000000c0029790                nextAPICNMI
                0x00000000c00297a0                apicNMIInfo
                0x00000000c0029820                legacyIRQFlags
                0x00000000c0029840                ioapicDiscoveryNumber
                0x00000000c0029860                ioapicFoundInMADT
                0x00000000c0029880                ioapicAddresses
                0x00000000c0029900                ioapicGSIBase
                0x00000000c0029980                processorDiscoveryNumber
                0x00000000c00299a0                matchingAPICID
                0x00000000c00299c0                processorID
 .bss           0x00000000c00299e0       0x10 hw/cpu.32
                0x00000000c00299e0                lastD
                0x00000000c00299e4                lastC
                0x00000000c00299e8                lastB
                0x00000000c00299ec                lastA
 *fill*         0x00000000c00299f0       0x10 
 .bss           0x00000000c0029a00      0x220 krnl/atexit.32
                0x00000000c0029a00                KiNextAtexitHandler
                0x00000000c0029a20                KiAtexitContexts
                0x00000000c0029b20                KiAtexitHandlers
 .bss           0x00000000c0029c20        0x0 krnl/bootmsg.32
 .bss           0x00000000c0029c20        0x0 krnl/compat.32
 .bss           0x00000000c0029c20        0x8 krnl/env.32
                0x00000000c0029c20                KeUserEnv
                0x00000000c0029c24                KeSystemEnv
 .bss           0x00000000c0029c28        0x0 krnl/inlines.32
 .bss           0x00000000c0029c28        0x1 krnl/panic.32
                0x00000000c0029c28                KeIsKernelInPanic
 *fill*         0x00000000c0029c29       0x17 
 .bss           0x00000000c0029c40       0x48 krnl/powctrl.32
                0x00000000c0029c40                powCtrlOnBattery
                0x00000000c0029c60                currentPowerSettings
                0x00000000c0029c84                secondsSinceLastUserIO
 .bss           0x00000000c0029c88        0x8 krnl/random.32
                0x00000000c0029c88                kiRandSeed
 .bss           0x00000000c0029c90        0x0 krnl/resolve.32
 .bss           0x00000000c0029c90        0x0 krnl/signal.32
 .bss           0x00000000c0029c90        0x0 krnl/syscalls.32
 .bss           0x00000000c0029c90        0x0 net/ethernet.32
 .bss           0x00000000c0029c90        0x4 reg/cm.32
 .bss           0x00000000c0029c94        0x0 reg/registry.32
 .bss           0x00000000c0029c94        0x0 sys/eject.32
 .bss           0x00000000c0029c94        0x0 sys/exit.32
 .bss           0x00000000c0029c94        0x0 sys/getcwd.32
 .bss           0x00000000c0029c94        0x0 sys/getpid.32
 .bss           0x00000000c0029c94        0x0 sys/getramdata.32
 .bss           0x00000000c0029c94        0x0 sys/getvgaptr.32
 .bss           0x00000000c0029c94        0x0 sys/kill.32
 .bss           0x00000000c0029c94        0x0 sys/loaddll.32
 .bss           0x00000000c0029c94        0x0 sys/read.32
 .bss           0x00000000c0029c94        0x0 sys/registersignal.32
 .bss           0x00000000c0029c94        0x0 sys/registry.32
 .bss           0x00000000c0029c94        0x0 sys/sbrk.32
 .bss           0x00000000c0029c94        0x0 sys/setcwd.32
 .bss           0x00000000c0029c94        0x0 sys/settime.32
 .bss           0x00000000c0029c94        0x0 sys/timezone.32
 .bss           0x00000000c0029c94        0x0 sys/truncate.32
 .bss           0x00000000c0029c94        0x0 sys/write.32
 .bss           0x00000000c0029c94        0x0 sys/wsbe.32
 .bss           0x00000000c0029c94        0x0 sys/yield.32
 *fill*         0x00000000c0029c94        0xc 
 .bss           0x00000000c0029ca0      0x7a4 thr/elf.32
                0x00000000c0029ca0                Thr::driverLookupNext
                0x00000000c0029cc0                Thr::driverLookupLen
                0x00000000c0029ec0                Thr::driverLookupAddr
                0x00000000c002a0c0                Thr::driverNameLookup
                0x00000000c002a2c0                Thr::kernelSymbols
                0x00000000c002a340                Thr::kernelStringTable
                0x00000000c002a3c0                Thr::kernelSymbolTable
                0x00000000c002a440                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002a444        0x4 
 .bss           0x00000000c002a448       0x68 thr/prcssthr.32
                0x00000000c002a448                cleanerThread
                0x00000000c002a44c                weNeedTheCleanerToNotBlock
                0x00000000c002a450                retValLockStuff
                0x00000000c002a454                retValSchedLock
                0x00000000c002a458                lockStuffLock
                0x00000000c002a45c                schedulerLock
                0x00000000c002a460                taskSwitchesPostponedFlag
                0x00000000c002a464                postponeTaskSwitchesCounter
                0x00000000c002a468                irqDisableCounter
                0x00000000c002a46c                terminatedTaskList
                0x00000000c002a478                sleepingTaskList
                0x00000000c002a484                taskList
                0x00000000c002a490                kernelProcess
 *fill*         0x00000000c002a4b0       0x10 
 .bss           0x00000000c002a4c0       0x40 vm86/vm8086.32
                0x00000000c002a4c0                Vm::vmRetV
                0x00000000c002a4c4                Vm::vmDone
                0x00000000c002a4c5                Vm::vmReady
                0x00000000c002a4c8                Vm::vm86Thread
                0x00000000c002a4cc                Vm::vmToHostCommsPtr
                0x00000000c002a4e0                Vm::vmToHostComms
 .bss           0x00000000c002a500       0x18 arch/i386/hal.32
                0x00000000c002a500                apic
                0x00000000c002a504                guiPanicHandler
                0x00000000c002a508                fpuOwner
                0x00000000c002a50c                coproLoadFunc
                0x00000000c002a510                coproSaveFunc
                0x00000000c002a514                gpFaultIntercept
 .bss           0x00000000c002a518        0x0 arch/i386/pic.32
 .bss           0x00000000c002a518        0x2 arch/i386/rtc.32
 .bss           0x00000000c002a51a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002a51a        0x6 
 .bss           0x00000000c002a520       0xf0 fs/fat/vfslink.32
                0x00000000c002a520                FAT::fats
                0x00000000c002a540                FAT::vfsToFatRemaps
                0x00000000c002a5c0                fatToVFSRemaps
 .bss           0x00000000c002a610        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002a610       0x10 
 .bss           0x00000000c002a620      0x820 fs/iso9660/vfslink.32
                0x00000000c002a620                iso9660Owner
                0x00000000c002a624                recentSector
                0x00000000c002a640                recentBuffer
 .bss           0x00000000c002ae40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002ae40        0x0 hal/sound/sndport.32
 .bss           0x00000000c002ae40        0x0 hw/bus/isa.32
 .bss           0x00000000c002ae40        0xd hw/bus/pci.32
                0x00000000c002ae40                thePCI
 .bss           0x00000000c002ae4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002ae4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002ae4d        0x3 
 .bss           0x00000000c002ae50        0x8 hw/diskphys/ata.32
                0x00000000c002ae50                ataSectorsWritten
                0x00000000c002ae54                ataSectorsRead
 .bss           0x00000000c002ae58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002ae58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002ae58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002ae58        0x8 
 .bss           0x00000000c002ae60       0x41 hw/intctrl/apic.32
                0x00000000c002ae60                noOfIOAPICs
                0x00000000c002ae80                ioapics
                0x00000000c002aea0                IOAPICsSetupYet
 .bss           0x00000000c002aea1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002aea1        0x3 
 .bss           0x00000000c002aea4        0x4 hw/timer/pit.32
                0x00000000c002aea4                pitFreq
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002aea8        0x0 crtn.32
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002aea8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0030d4f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
