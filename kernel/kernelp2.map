Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f8fa
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x887 fs/symlink.32
                0x00000000c000ae63                KiDeinitialiseSymlinks(void*)
                0x00000000c000aef4                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000af77                KiIsSymlinkRegistered(char const*)
                0x00000000c000b0e1                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b2fc                KeCreateSymlink(char const*, char const*)
                0x00000000c000b438                KeInitialiseSymlinks()
 *fill*         0x00000000c000b59b        0x1 
 .text          0x00000000c000b59c      0xd6c fs/vfs.32
                0x00000000c000b59c                File::read(unsigned long long, void*, int*)
                0x00000000c000b5f4                File::write(unsigned long long, void*, int*)
                0x00000000c000b64c                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b6a4                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b6d2                File::isAtty()
                0x00000000c000b6d6                Directory::isAtty()
                0x00000000c000b6da                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b6e0                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b6e6                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b6ec                File::~File()
                0x00000000c000b6ec                File::~File()
                0x00000000c000b710                File::~File()
                0x00000000c000b73a                Directory::~Directory()
                0x00000000c000b73a                Directory::~Directory()
                0x00000000c000b75e                Directory::~Directory()
                0x00000000c000b788                Filesystem::Filesystem()
                0x00000000c000b788                Filesystem::Filesystem()
                0x00000000c000b7ac                Filesystem::~Filesystem()
                0x00000000c000b7ac                Filesystem::~Filesystem()
                0x00000000c000b7ba                Filesystem::~Filesystem()
                0x00000000c000b7de                Fs::getcwd(Process*, char*, int)
                0x00000000c000b808                Fs::initVFS()
                0x00000000c000b832                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000ba50                File::File(char const*, Process*, bool)
                0x00000000c000ba50                File::File(char const*, Process*, bool)
                0x00000000c000bb2e                File::File(char const*, Process*)
                0x00000000c000bb2e                File::File(char const*, Process*)
                0x00000000c000bb4c                File::open(FileOpenMode)
                0x00000000c000bbaa                File::close()
                0x00000000c000bc0a                File::seek(unsigned long long)
                0x00000000c000bc60                File::truncate(unsigned long long)
                0x00000000c000bcb6                File::tell(unsigned long long*)
                0x00000000c000bd06                File::rewind()
                0x00000000c000bd1a                File::unlink()
                0x00000000c000bd66                File::rename(char const*)
                0x00000000c000bdb4                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000be10                File::exists()
                0x00000000c000be4e                File::stat(unsigned long long*, bool*)
                0x00000000c000beaf                Fs::setcwd(Process*, char*)
                0x00000000c000c00e                Directory::Directory(char const*, Process*)
                0x00000000c000c00e                Directory::Directory(char const*, Process*)
                0x00000000c000c0d6                Directory::open()
                0x00000000c000c132                Directory::close()
                0x00000000c000c192                Directory::unlink()
                0x00000000c000c1de                Directory::rename(char const*)
                0x00000000c000c22c                Directory::exists()
                0x00000000c000c26a                Directory::read(dirent*)
                0x00000000c000c2b6                Directory::create()
                0x00000000c000c302                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c308       0x86 hal/bus.32
                0x00000000c000c308                Bus::Bus(char const*)
                0x00000000c000c308                Bus::Bus(char const*)
                0x00000000c000c340                Bus::~Bus()
                0x00000000c000c340                Bus::~Bus()
                0x00000000c000c364                Bus::~Bus()
 .text          0x00000000c000c38e       0x96 hal/buzzer.32
                0x00000000c000c38e                beepThread(void*)
                0x00000000c000c3cb                Krnl::beep(int, int, bool)
 .text          0x00000000c000c424      0x465 hal/clock.32
                0x00000000c000c424                User::loadClockSettings(int)
                0x00000000c000c476                Clock::Clock(char const*)
                0x00000000c000c476                Clock::Clock(char const*)
                0x00000000c000c4ac                Clock::~Clock()
                0x00000000c000c4ac                Clock::~Clock()
                0x00000000c000c4d0                Clock::~Clock()
                0x00000000c000c4fa                Clock::timeInSecondsLocal()
                0x00000000c000c542                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c59b                datetimeToSeconds(datetime_t)
                0x00000000c000c6c0                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c720                secondsToDatetime(unsigned long long)
                0x00000000c000c864                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c889        0x1 
 .text          0x00000000c000c88a      0x464 hal/device.32
                0x00000000c000c88a                Device::hibernate()
                0x00000000c000c88c                Device::wake()
                0x00000000c000c88e                Device::detect()
                0x00000000c000c890                Device::disableLegacy()
                0x00000000c000c892                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c894                DriverlessDevice::close(int, int, void*)
                0x00000000c000c898                DriverlessDevice::detect()
                0x00000000c000c89a                DriverlessDevice::open(int, int, void*)
                0x00000000c000c8ae                Device::~Device()
                0x00000000c000c8ae                Device::~Device()
                0x00000000c000c8bc                Device::~Device()
                0x00000000c000c8e4                Device::findAndLoadDriver()
                0x00000000c000c8f2                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c918                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c958                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c982                Device::getParent()
                0x00000000c000c98e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c9ac                Device::addChild(Device*)
                0x00000000c000c9f0                Device::removeAllChildren()
                0x00000000c000ca36                Device::hibernateAll()
                0x00000000c000ca66                Device::wakeAll()
                0x00000000c000ca96                Device::detectAll()
                0x00000000c000cac6                Device::disableLegacyAll()
                0x00000000c000cac8                Device::loadDriversForAll()
                0x00000000c000caca                Device::closeAll()
                0x00000000c000cb00                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cb36                Device::setName(char const*)
                0x00000000c000cb44                Device::Device(char const*)
                0x00000000c000cb44                Device::Device(char const*)
                0x00000000c000cc40                Device::getName()
                0x00000000c000cc4a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc4a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc80                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ccc4                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000ccee        0x2 
 .text          0x00000000c000ccf0       0x86 hal/diskctrl.32
                0x00000000c000ccf0                HardDiskController::HardDiskController(char const*)
                0x00000000c000ccf0                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd28                HardDiskController::~HardDiskController()
                0x00000000c000cd28                HardDiskController::~HardDiskController()
                0x00000000c000cd4c                HardDiskController::~HardDiskController()
 .text          0x00000000c000cd76       0xe2 hal/diskphys.32
                0x00000000c000cd76                PhysicalDisk::eject()
                0x00000000c000cd7a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cd7a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cde2                PhysicalDisk::startCache()
                0x00000000c000ce0a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce0a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce2e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ce58        0x0 hal/fpu.32
 .text          0x00000000c000ce58      0x360 hal/intctrl.32
                0x00000000c000ce58                int_handler
                0x00000000c000cee2                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cf2c                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d06f                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d0a3                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d119                setupINTS()
                0x00000000c000d176                convertLegacyIRQNumber(int)
 .text          0x00000000c000d1b8      0x8be hal/keybrd.32
                0x00000000c000d1b8                startGUI(void*)
                0x00000000c000d226                startGUIVESA(void*)
                0x00000000c000d294                sendKeyToTerminal(unsigned char)
                0x00000000c000d36f                sendKeyboardToken(KeyboardToken)
                0x00000000c000d859                clearInternalKeybuffer(VgaText*)
                0x00000000c000d88e                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d9ec                Keyboard::Keyboard(char const*)
                0x00000000c000d9ec                Keyboard::Keyboard(char const*)
                0x00000000c000da28                Keyboard::~Keyboard()
                0x00000000c000da28                Keyboard::~Keyboard()
                0x00000000c000da4c                Keyboard::~Keyboard()
 .text          0x00000000c000da76      0x3f8 hal/logidisk.32
                0x00000000c000da76                LogicalDisk::close(int, int, void*)
                0x00000000c000da7a                LogicalDisk::~LogicalDisk()
                0x00000000c000da7a                LogicalDisk::~LogicalDisk()
                0x00000000c000da9e                LogicalDisk::~LogicalDisk()
                0x00000000c000dac8                LogicalDisk::open(int, int, void*)
                0x00000000c000dadc                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000db14                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000db5a                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000db5a                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc1a                LogicalDisk::assignDriveLetter()
                0x00000000c000dcd4                LogicalDisk::mount()
                0x00000000c000dd1c                LogicalDisk::unmount()
                0x00000000c000dd2c                LogicalDisk::eject()
                0x00000000c000dd40                LogicalDisk::unassignDriveLetter()
                0x00000000c000dd96                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000de02                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000de6e        0x2 
 .text          0x00000000c000de70       0x86 hal/mouse.32
                0x00000000c000de70                Mouse::Mouse(char const*)
                0x00000000c000de70                Mouse::Mouse(char const*)
                0x00000000c000dea8                Mouse::~Mouse()
                0x00000000c000dea8                Mouse::~Mouse()
                0x00000000c000decc                Mouse::~Mouse()
 .text          0x00000000c000def6       0x90 hal/nic.32
                0x00000000c000def6                NIC::getMAC()
                0x00000000c000defc                NIC::write(int, unsigned char*, int*)
                0x00000000c000df02                NIC::NIC(char const*)
                0x00000000c000df02                NIC::NIC(char const*)
                0x00000000c000df38                NIC::~NIC()
                0x00000000c000df38                NIC::~NIC()
                0x00000000c000df5c                NIC::~NIC()
 .text          0x00000000c000df86      0x33b hal/partition.32
                0x00000000c000df86                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e02e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e2c1        0x3 
 .text          0x00000000c000e2c4       0x86 hal/serial.32
                0x00000000c000e2c4                Serial::Serial(char const*)
                0x00000000c000e2c4                Serial::Serial(char const*)
                0x00000000c000e2fc                Serial::~Serial()
                0x00000000c000e2fc                Serial::~Serial()
                0x00000000c000e320                Serial::~Serial()
 *fill*         0x00000000c000e34a        0x2 
 .text          0x00000000c000e34c      0x234 hal/timer.32
                0x00000000c000e34c                Timer::Timer(char const*)
                0x00000000c000e34c                Timer::Timer(char const*)
                0x00000000c000e384                Timer::~Timer()
                0x00000000c000e384                Timer::~Timer()
                0x00000000c000e3a8                Timer::~Timer()
                0x00000000c000e3d2                Timer::read()
                0x00000000c000e3dd                setupTimer(int)
                0x00000000c000e418                timerHandler(unsigned int)
 .text          0x00000000c000e580      0x450 hal/vcache.32
                0x00000000c000e580                VCache::VCache(PhysicalDisk*)
                0x00000000c000e580                VCache::VCache(PhysicalDisk*)
                0x00000000c000e6f0                VCache::invalidateReadBuffer()
                0x00000000c000e700                VCache::writeWriteBuffer()
                0x00000000c000e74c                VCache::~VCache()
                0x00000000c000e74c                VCache::~VCache()
                0x00000000c000e7a4                VCache::~VCache()
                0x00000000c000e7cc                VCache::write(unsigned long long, int, void*)
                0x00000000c000e8c6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e9d0      0x4d9 hal/video.32
                0x00000000c000e9d0                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ea1c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ea8c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eb1c                Video::clearScreen(unsigned int)
                0x00000000c000eb50                Video::putpixel(int, int, unsigned int)
                0x00000000c000eb5e                Video::readPixelApprox(int, int)
                0x00000000c000eb72                Video::Video(char const*)
                0x00000000c000eb72                Video::Video(char const*)
                0x00000000c000eba8                Video::~Video()
                0x00000000c000eba8                Video::~Video()
                0x00000000c000ebcc                Video::~Video()
                0x00000000c000ebf6                Video::isMonochrome()
                0x00000000c000ec02                Video::getWidth()
                0x00000000c000ec0e                Video::getHeight()
                0x00000000c000ec1a                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ecd6                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ee3e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eea9        0x3 
 .text          0x00000000c000eeac     0x12d2 hw/acpi.32
                0x00000000c000eeac                ACPI::close(int, int, void*)
                0x00000000c000ef60                findRSDP()
                0x00000000c000eff8                loadACPITables(unsigned char*)
                0x00000000c000f264                findRSDT(unsigned char*)
                0x00000000c000f3bc                findDataTable(unsigned char*, char*)
                0x00000000c000f43c                scanMADT()
                0x00000000c000f8f4                ACPI::ACPI()
                0x00000000c000f8f4                ACPI::ACPI()
                0x00000000c000f948                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fa44                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fb10                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fb18                ACPI::detectPCI()
                0x00000000c000fd38                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fd80                ACPI::sleep()
                0x00000000c000fd9c                ACPI::open(int, int, void*)
 .text          0x00000000c001017e      0xbc5 hw/cpu.32
                0x00000000c001017e                CPU::close(int, int, void*)
                0x00000000c0010182                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c001019e                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c00101b6                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c001022a                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00102ae                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c00102dc                CPU::cpuidCheckECX(unsigned int)
                0x00000000c001030a                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0010338                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0010366                CPU::CPU()
                0x00000000c0010366                CPU::CPU()
                0x00000000c00103f4                CPU::displayFeatures()
                0x00000000c00103f6                CPU::detectFeatures()
                0x00000000c0010aca                CPU::setupSMEP()
                0x00000000c0010ad6                CPU::setupUMIP()
                0x00000000c0010ae0                CPU::setupTSC()
                0x00000000c0010aea                CPU::setupLargePages()
                0x00000000c0010af4                CPU::setupPAT()
                0x00000000c0010b30                CPU::setupMTRR()
                0x00000000c0010b32                CPU::setupGlobalPages()
                0x00000000c0010b3c                CPU::allowUsermodeDataAccess()
                0x00000000c0010b4e                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010b60                CPU::setupSMAP()
                0x00000000c0010b6e                CPU::setupFeatures()
                0x00000000c0010c3a                CPU::open(int, int, void*)
 .text          0x00000000c0010d43       0xb6 krnl/atexit.32
                0x00000000c0010d43                KeInitialiseAtexit()
                0x00000000c0010d62                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010d96                KeExecuteAtexit()
 .text          0x00000000c0010df9       0xdf krnl/bootmsg.32
                0x00000000c0010df9                KeDisplaySplashScreen()
                0x00000000c0010e75                KeSetBootMessage(char const*)
 .text          0x00000000c0010ed8       0x1d krnl/compat.32
                0x00000000c0010ed8                Krnl::handlePowerButton()
                0x00000000c0010ee8                Krnl::handleSleepButton()
 .text          0x00000000c0010ef5       0x2b krnl/crc32.32
                0x00000000c0010ef5                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010f20      0x5bf krnl/env.32
                0x00000000c0010f20                EnvVarContainer::getEnv(char const*)
                0x00000000c0010f5e                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0011020                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0011022                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0011246                EnvVarContainer::__loadSystem()
                0x00000000c0011260                EnvVarContainer::__loadUser()
                0x00000000c0011262                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011262                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011284                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011284                EnvVarContainer::~EnvVarContainer()
                0x00000000c00112b4                KeGetEnv(Process*, char const*)
                0x00000000c0011319                KeSetEnvSystem(char const*, char const*)
                0x00000000c0011333                KeSetEnvUser(char const*, char const*)
                0x00000000c0011352                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0011365                KeDeleteEnvSystem(char const*)
                0x00000000c0011366                KeDeleteEnvUser(char const*)
                0x00000000c0011367                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0011368                KeNewProcessEnv(Process*)
                0x00000000c001138a                KeCopyProcessEnv(Process*, Process*)
                0x00000000c00113d6                KeLoadSystemEnv()
                0x00000000c0011404                KeLoadUserEnv()
                0x00000000c001142a                KeFlushEnv()
                0x00000000c001142b                KeGetProcessTotalEnvCount(Process*)
                0x00000000c001144b                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c00114df       0x94 krnl/inlines.32
                0x00000000c00114df                CPU::current()
                0x00000000c00114eb                operator new(unsigned long)
                0x00000000c00114f0                operator delete(void*)
                0x00000000c00114f5                disableIRQs()
                0x00000000c00114f7                enableIRQs()
                0x00000000c00114f9                lockScheduler()
                0x00000000c0011501                unlockScheduler()
                0x00000000c0011510                lockStuff()
                0x00000000c001151e                unlockStuff()
                0x00000000c0011558                Virt::getAKernelVAS()
                0x00000000c001155e                __not_memcpy
 .text          0x00000000c0011573        0xc krnl/panic.32
                0x00000000c0011573                KePanic(char const*)
 .text          0x00000000c001157f      0x142 krnl/powctrl.32
                0x00000000c001157f                KePowerThread(void*)
                0x00000000c00115ad                KeChangePowerSettings(PowerSettings)
                0x00000000c00115c3                KeUserIOReceived()
                0x00000000c00115ce                KeHandlePowerButton()
                0x00000000c0011603                KeHandleSleepButton()
                0x00000000c0011638                KeSetupPowerManager()
 .text          0x00000000c00116c1       0x9b krnl/random.32
                0x00000000c00116c1                KeRand()
                0x00000000c0011701                KeSeedRand(unsigned int)
                0x00000000c001172a                KeInitRand()
 .text          0x00000000c001175c      0x1bc krnl/resolve.32
                0x00000000c001175c                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011918      0x31f krnl/signal.32
                0x00000000c0011918                KiSigKill(int)
                0x00000000c001192c                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001192d                KiDefaultSignalHandlerPause(int)
                0x00000000c0011959                KiDefaultSignalHandlerResume(int)
                0x00000000c0011985                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001198a                KeInitSignals()
                0x00000000c00119d9                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011a0f                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011a8c                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011b83                KiCheckSignalZ
                0x00000000c0011bc5                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011c00                KiFinishSignalZ
 .text          0x00000000c0011c37      0xdf8 krnl/syscalls.32
                0x00000000c0011c37                SysSeekDir(regs*)
                0x00000000c0011c3c                SysTellDir(regs*)
                0x00000000c0011c41                SysVerify(regs*)
                0x00000000c0011c4b                SysGetArgc(regs*)
                0x00000000c0011c5f                SysTTYName(regs*)
                0x00000000c0011c67                SysFormatDisk(regs*)
                0x00000000c0011cce                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011d22                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011d7b                SysShutdown(regs*)
                0x00000000c0011e08                SysRealpath(regs*)
                0x00000000c0011e56                SysReadDir(regs*)
                0x00000000c0011ed6                SysIsATTY(regs*)
                0x00000000c0011f30                SysSeek(regs*)
                0x00000000c0011f8a                SysTell(regs*)
                0x00000000c0011ff7                SysSize(regs*)
                0x00000000c001206a                SysSizeFromFilename(regs*)
                0x00000000c0012181                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0012298                SysClose(regs*)
                0x00000000c00122f8                SysOpenDir(regs*)
                0x00000000c0012375                SysMakeDir(regs*)
                0x00000000c00123e3                SysCloseDir(regs*)
                0x00000000c0012432                SysWait(regs*)
                0x00000000c0012453                SysNotImpl(regs*)
                0x00000000c001246e                SysPanic(regs*)
                0x00000000c0012489                SysRmdir(regs*)
                0x00000000c00124e7                SysUnlink(regs*)
                0x00000000c0012545                SysGetArgv(regs*)
                0x00000000c0012592                SysUSleep(regs*)
                0x00000000c00125bb                SysSpawn(regs*)
                0x00000000c001262c                SysGetEnv(regs*)
                0x00000000c00126e1                SysSetFatAttrib(regs*)
                0x00000000c001274a                SysPipe(regs*)
                0x00000000c001278f                SysGetUnixTime(regs*)
                0x00000000c00127a3                string_ends_with(char const*, char const*)
                0x00000000c00127ee                SysOpen(regs*)
                0x00000000c00129ed                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012a2f        0x1 
 .text          0x00000000c0012a30      0x159 net/ethernet.32
                0x00000000c0012a30                KeSwitchEndian16(unsigned short)
                0x00000000c0012a54                KeSwitchEndian32(unsigned int)
                0x00000000c0012a84                EthernetCRC32(unsigned char*, int)
                0x00000000c0012b28                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012b89      0xd51 reg/cm.32
                0x00000000c0012b89                CmOpen(char const*)
                0x00000000c0012ca7                CmClose(Reghive_Tag*)
                0x00000000c0012cbd                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012cf9                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012d70                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012daf                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012de1                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012e1d                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012e45                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012e66                CmExpand(Reghive_Tag*, int)
                0x00000000c0012ee1                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012f67                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c001305b                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0013193                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c00131f4                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0013224                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c001325b                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0013285                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c00132c5                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013369                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0013397                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013534                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013581                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00135fb                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001364e                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013712                zStrtok(char*, char const*)
                0x00000000c0013784                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013805                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00138a8                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00138da      0x545 reg/registry.32
                0x00000000c00138da                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013a66                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013bbb                Reg::getLine(char*, char*, char*)
                0x00000000c0013bf2                Reg::readInt(char*, char*, int*)
                0x00000000c0013ce0                Reg::readString(char*, char*, char*, int)
                0x00000000c0013d61                Reg::readBool(char*, char*, bool*)
                0x00000000c0013d86                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013db2                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013dde                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013e1f       0x36 sys/eject.32
                0x00000000c0013e1f                SysEject(regs*)
 .text          0x00000000c0013e55       0x18 sys/exit.32
                0x00000000c0013e55                SysExit(regs*)
 .text          0x00000000c0013e6d       0x1f sys/getcwd.32
                0x00000000c0013e6d                SysGetCwd(regs*)
 .text          0x00000000c0013e8c        0xc sys/getpid.32
                0x00000000c0013e8c                SysGetPID(regs*)
 .text          0x00000000c0013e98       0x1a sys/getramdata.32
                0x00000000c0013e98                SysGetRAMData(regs*)
 .text          0x00000000c0013eb2       0x82 sys/getvgaptr.32
                0x00000000c0013eb2                SysGetVGAPtr(regs*)
 .text          0x00000000c0013f34       0xb9 sys/kill.32
                0x00000000c0013f34                SysKill(regs*)
 .text          0x00000000c0013fed       0xa8 sys/loaddll.32
                0x00000000c0013fed                SysLoadDLL(regs*)
 .text          0x00000000c0014095       0x68 sys/read.32
                0x00000000c0014095                SysRead(regs*)
 .text          0x00000000c00140fd       0x29 sys/registersignal.32
                0x00000000c00140fd                SysRegisterSignal(regs*)
 .text          0x00000000c0014126      0x19c sys/registry.32
                0x00000000c0014126                SysRegistryGetTypeFromPath(regs*)
                0x00000000c001419d                SysRegistryReadExtent(regs*)
                0x00000000c00141e5                SysRegistryPathToExtentLookup(regs*)
                0x00000000c001420d                SysRegistryEnterDirectory(regs*)
                0x00000000c0014235                SysRegistryGetNext(regs*)
                0x00000000c001425d                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014297                SysRegistryOpen(regs*)
                0x00000000c00142ab                SysRegistryClose(regs*)
 .text          0x00000000c00142c2       0x55 sys/sbrk.32
                0x00000000c00142c2                SysSbrk(regs*)
 .text          0x00000000c0014317       0x1c sys/setcwd.32
                0x00000000c0014317                SysSetCwd(regs*)
 .text          0x00000000c0014333       0x96 sys/settime.32
                0x00000000c0014333                SysSetTime(regs*)
 .text          0x00000000c00143c9       0x2d sys/symlink.32
                0x00000000c00143c9                SysSymlink(regs*)
 .text          0x00000000c00143f6       0x4a sys/timezone.32
                0x00000000c00143f6                SysTimezone(regs*)
 .text          0x00000000c0014440       0xfc sys/truncate.32
                0x00000000c0014440                SysTruncate(regs*)
 .text          0x00000000c001453c       0x68 sys/write.32
                0x00000000c001453c                SysWrite(regs*)
 .text          0x00000000c00145a4       0x62 sys/wsbe.32
                0x00000000c00145a4                SysWsbe(regs*)
 .text          0x00000000c0014606       0x25 sys/yield.32
                0x00000000c0014606                SysYield(regs*)
 .text          0x00000000c001462b     0x1203 thr/elf.32
                0x00000000c001462b                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00148b2                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014ad1                Thr::runtimeReferenceHelper()
                0x00000000c0014ae4                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014b33                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014df1                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015532                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015564                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001559b                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00155b5                Thr::loadDLL(char const*, bool)
                0x00000000c00157f5                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001582e        0x2 
 .text          0x00000000c0015830     0x13b5 thr/prcssthr.32
                0x00000000c0015830                userModeEntryPoint(void*)
                0x00000000c0015858                changeTSS
                0x00000000c0015888                switchToThread(ThreadControlBlock*)
                0x00000000c0015938                Process::addArgs(char**)
                0x00000000c00159a4                Process::Process(char const*, Process*, char**)
                0x00000000c00159a4                Process::Process(char const*, Process*, char**)
                0x00000000c0015bb0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015bb0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015d84                taskStartupFunction
                0x00000000c0015d90                Semaphore::Semaphore(int)
                0x00000000c0015d90                Semaphore::Semaphore(int)
                0x00000000c0015dc0                Mutex::Mutex()
                0x00000000c0015dc0                Mutex::Mutex()
                0x00000000c0015dd4                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015edc                Process::createUserThread()
                0x00000000c0015efc                setupMultitasking(void (*)())
                0x00000000c0016020                schedule()
                0x00000000c00160b4                Semaphore::tryAcquire()
                0x00000000c0016174                Semaphore::assertLocked(char const*)
                0x00000000c00161f8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016220                blockTask(TaskState)
                0x00000000c0016258                waitTask(int, int*, int)
                0x00000000c001629c                milliTenthSleepUntil(unsigned int)
                0x00000000c001633c                milliTenthSleep(unsigned int)
                0x00000000c0016350                sleep(unsigned int)
                0x00000000c0016360                Semaphore::acquire()
                0x00000000c0016428                taskReturned
                0x00000000c001646c                Thr::processFromPID(int)
                0x00000000c0016518                unblockTask(ThreadControlBlock*)
                0x00000000c00165c4                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016898                cleanerTaskFunction(void*)
                0x00000000c00169a0                terminateTask(int)
                0x00000000c0016a8c                Thr::terminateFromIRQ(int)
                0x00000000c0016a9c                Semaphore::release()
 .text          0x00000000c0016be5      0xc31 vm86/vm8086.32
                0x00000000c0016be5                Vm::inbv(unsigned short)
                0x00000000c0016bf8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016c2e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016c3e                Vm::getSegment(unsigned int)
                0x00000000c0016c46                Vm::getOffset(unsigned int)
                0x00000000c0016c4b                Vm::mainloop2()
                0x00000000c0016c85                Vm::mainVm8086Loop(void*)
                0x00000000c0016c95                Vm::mainloop3(unsigned long)
                0x00000000c0016cbb                Vm::initialise8086()
                0x00000000c0016cfe                Vm::finish8086()
                0x00000000c0016d5f                Vm::getOutput8086(unsigned char*)
                0x00000000c0016d84                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016e3d                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016fdb                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017078                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017089                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001709b                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00170ac                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00170c1                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00170d7                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00170ec                Vm::faultHandler(regs*)
 .text          0x00000000c0017816      0xaf0 arch/i386/hal.32
                0x00000000c0017816                noCopro(unsigned long)
                0x00000000c0017817                nmiHandler(regs*, void*)
                0x00000000c0017830                doubleFault(regs*, void*)
                0x00000000c0017849                displayDebugInfo(regs*)
                0x00000000c0017bce                HalSystemIdle()
                0x00000000c0017c4a                displayProgramFault(char const*)
                0x00000000c0017c96                gpFault(regs*, void*)
                0x00000000c0017cfd                pgFault(regs*, void*)
                0x00000000c0017d86                otherISRHandler(regs*, void*)
                0x00000000c0017dba                opcodeFault(regs*, void*)
                0x00000000c0017e3d                i386SaveCoprocessor(void*)
                0x00000000c0017e51                i386LoadCoprocessor(void*)
                0x00000000c0017e65                x87EmulHandler(regs*, void*)
                0x00000000c0017f02                HalInitialiseCoprocessor()
                0x00000000c0017fb0                HalPanic(char const*)
                0x00000000c00180c4                HalQueryPerformanceCounter()
                0x00000000c00180df                HalInitialise()
                0x00000000c0018295                HalMakeBeep(int)
                0x00000000c00182cf                HalGetRand()
                0x00000000c00182d2                HalEndOfInterrupt(int)
                0x00000000c0018303                HalRestart()
                0x00000000c0018304                HalShutdown()
                0x00000000c0018305                HalSleep()
 *fill*         0x00000000c0018306        0x2 
 .text          0x00000000c0018308      0x2dc arch/i386/pic.32
                0x00000000c0018308                picIoWait()
                0x00000000c0018310                picDisable()
                0x00000000c0018344                picGetIRQReg(int)
                0x00000000c00183c0                picOpen()
                0x00000000c0018544                picEOI(int)
 .text          0x00000000c00185e4      0x66e arch/i386/rtc.32
                0x00000000c00185e4                RTC::open(int, int, void*)
                0x00000000c00185e8                RTC::close(int, int, void*)
                0x00000000c00185ec                RTC::timeInSecondsUTC()
                0x00000000c00185fe                RTC::timeInDatetimeUTC()
                0x00000000c0018624                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018662                RTC::~RTC()
                0x00000000c0018662                RTC::~RTC()
                0x00000000c0018686                RTC::~RTC()
                0x00000000c00186b0                RTC::get_update_in_progress_flag()
                0x00000000c00186ca                RTC::completeRTCRefresh()
                0x00000000c00189a4                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018b52                rtcIRQHandler(regs*, void*)
                0x00000000c0018b98                RTC::RTC()
                0x00000000c0018b98                RTC::RTC()
 *fill*         0x00000000c0018c52        0x2 
 .text          0x00000000c0018c54      0x1f4 arch/i386/vga.32
                0x00000000c0018c54                HalConsoleScroll(int, int)
                0x00000000c0018d5c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018dc0                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018e48     0x14f3 fs/fat/vfslink.32
                0x00000000c0018e48                FAT::getName()
                0x00000000c0018e50                FAT::tell(void*, unsigned long long*)
                0x00000000c0018e8c                FAT::stat(void*, unsigned long long*)
                0x00000000c0018ec8                FAT::~FAT()
                0x00000000c0018ec8                FAT::~FAT()
                0x00000000c0018eec                FAT::~FAT()
                0x00000000c0018f14                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018fb8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019098                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001927c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019498                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019658                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00197c8                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019828                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019888                FAT::close(void*)
                0x00000000c00198dc                FAT::closeDir(void*)
                0x00000000c0019930                FAT::truncate(void*, unsigned long long)
                0x00000000c001999c                FAT::seek(void*, unsigned long long)
                0x00000000c00199f4                fatWrapperReadDisk
                0x00000000c0019a34                fatWrapperWriteDisk
                0x00000000c0019a74                fatWrapperIoctl
                0x00000000c0019b94                FAT::FAT()
                0x00000000c0019b94                FAT::FAT()
                0x00000000c0019bec                FAT::fixFilepath(char*)
                0x00000000c0019c2c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019da0                FAT::openDir(char const*, void**)
                0x00000000c0019e50                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019f48                FAT::unlink(char const*)
                0x00000000c0019fc8                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a180                FAT::rename(char const*, char const*)
                0x00000000c001a24c                FAT::mkdir(char const*)
                0x00000000c001a2cc                FAT::exists(char const*)
 *fill*         0x00000000c001a33b        0x1 
 .text          0x00000000c001a33c       0x94 fs/iso9660/helper.32
                0x00000000c001a33c                isoReadDiscSectorHelper
                0x00000000c001a398                iso_kprintf
                0x00000000c001a3b4                iso_kprintfd
 .text          0x00000000c001a3d0      0x71a fs/iso9660/vfslink.32
                0x00000000c001a3d0                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a3d6                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a3dc                ISO9660::getName()
                0x00000000c001a3e2                ISO9660::closeDir(void*)
                0x00000000c001a3ec                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a3f2                ISO9660::unlink(char const*)
                0x00000000c001a3f8                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a3fe                ISO9660::rename(char const*, char const*)
                0x00000000c001a404                ISO9660::mkdir(char const*)
                0x00000000c001a40a                ISO9660::~ISO9660()
                0x00000000c001a40a                ISO9660::~ISO9660()
                0x00000000c001a42e                ISO9660::~ISO9660()
                0x00000000c001a456                ISO9660::exists(char const*)
                0x00000000c001a46a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a550                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a598                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a5da                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a618                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a66a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a7ac                ISO9660::close(void*)
                0x00000000c001a7dc                ISO9660::openDir(char const*, void**)
                0x00000000c001a8b6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a9d1                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001aa50                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001aac2                ISO9660::ISO9660()
                0x00000000c001aac2                ISO9660::ISO9660()
 .text          0x00000000c001aaea      0x26c hal/sound/sndcard.32
                0x00000000c001aaea                SoundCard::beginPlayback()
                0x00000000c001aaf8                SoundCard::stopPlayback()
                0x00000000c001ab06                SoundCard::SoundCard(char const*)
                0x00000000c001ab06                SoundCard::SoundCard(char const*)
                0x00000000c001aba4                SoundCard::~SoundCard()
                0x00000000c001aba4                SoundCard::~SoundCard()
                0x00000000c001abc8                SoundCard::~SoundCard()
                0x00000000c001abf2                SoundCard::configureRates(int, int, int)
                0x00000000c001ac22                SoundCard::getSamples16(int, short*)
                0x00000000c001ac7e                SoundCard::getSamples32(int, int*)
                0x00000000c001ad04                SoundCard::addChannel(SoundPort*)
                0x00000000c001ad42                SoundCard::removeChannel(int)
 *fill*         0x00000000c001ad56        0x2 
 .text          0x00000000c001ad58      0x393 hal/sound/sndport.32
                0x00000000c001ad58                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ad58                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ade4                SoundPort::~SoundPort()
                0x00000000c001ade4                SoundPort::~SoundPort()
                0x00000000c001ae18                SoundPort::unpause()
                0x00000000c001ae24                SoundPort::pause()
                0x00000000c001ae30                SoundPort::getBufferUsed()
                0x00000000c001ae38                SoundPort::getBufferSize()
                0x00000000c001ae40                SoundPort::buffer16(short*, int)
                0x00000000c001aecc                SoundPort::buffer32(int*, int)
                0x00000000c001af58                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b028                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b0eb        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b0eb        0x1 
 .text          0x00000000c001b0ec      0xbc5 hw/bus/pci.32
                0x00000000c001b0ec                PCI::open(int, int, void*)
                0x00000000c001b10a                PCI::close(int, int, void*)
                0x00000000c001b10e                PCI::PCI()
                0x00000000c001b10e                PCI::PCI()
                0x00000000c001b1a6                PCI::readBAR8(unsigned int, int)
                0x00000000c001b1c2                PCI::readBAR16(unsigned int, int)
                0x00000000c001b1e0                PCI::readBAR32(unsigned int, int)
                0x00000000c001b1fc                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b21c                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b23e                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b25e                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b2d4                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b37e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b3a2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b3ca                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b414                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b43c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b460                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b484                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4ac                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b510                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b5f6                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b8c0                PCI::checkBus(unsigned char)
                0x00000000c001b8e4                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001ba6a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bbe6                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bc58                PCI::detect()
 *fill*         0x00000000c001bcb1        0x1 
 .text          0x00000000c001bcb2      0xb96 hw/diskctrl/ide.32
                0x00000000c001bcb2                IDE::close(int, int, void*)
                0x00000000c001bcb6                IDE::IDE()
                0x00000000c001bcb6                IDE::IDE()
                0x00000000c001bcea                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bcfc                selectDrive(unsigned char, unsigned char)
                0x00000000c001bcfe                IDE::getBase(unsigned char)
                0x00000000c001bd10                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bdd0                IDE::read(unsigned char, unsigned char)
                0x00000000c001be84                IDE::waitInterrupt(unsigned char)
                0x00000000c001bee6                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bf02                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bf1e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bf68                IDE::open(int, int, void*)
                0x00000000c001c3a2                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c472                IDE::detect()
                0x00000000c001c73a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c7f4                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c848      0x32c hw/diskctrl/satabus.32
                0x00000000c001c848                SATABus::close(int, int, void*)
                0x00000000c001c84c                SATABus::detect()
                0x00000000c001c84e                SATABus::SATABus()
                0x00000000c001c84e                SATABus::SATABus()
                0x00000000c001c8d4                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c906                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c94e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c96e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c998                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001caaa                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cb54                SATABus::open(int, int, void*)
 .text          0x00000000c001cb74      0x96d hw/diskphys/ata.32
                0x00000000c001cb74                ATA::close(int, int, void*)
                0x00000000c001cb98                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cb9a                ATA::ATA()
                0x00000000c001cb9a                ATA::ATA()
                0x00000000c001cbc8                ATA::flush(bool)
                0x00000000c001cc16                ATA::readyForCommand()
                0x00000000c001cc62                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d026                ATA::detectCHS()
                0x00000000c001d050                ATA::open(int, int, void*)
                0x00000000c001d11c                combineCharAndColour(char, unsigned char)
                0x00000000c001d12d                combineColours(unsigned char, unsigned char)
                0x00000000c001d13a                ATA::read(unsigned long long, int, void*)
                0x00000000c001d310                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d4e1        0x1 
 .text          0x00000000c001d4e2      0x612 hw/diskphys/atapi.32
                0x00000000c001d4e2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d4e8                ATAPI::close(int, int, void*)
                0x00000000c001d50c                ATAPI::ATAPI()
                0x00000000c001d50c                ATAPI::ATAPI()
                0x00000000c001d53a                ATAPI::readyForCommand()
                0x00000000c001d58c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d84c                ATAPI::diskRemoved()
                0x00000000c001d886                ATAPI::eject()
                0x00000000c001d8ce                ATAPI::diskInserted()
                0x00000000c001d8da                ATAPI::detectMedia()
                0x00000000c001d99a                ATAPI::open(int, int, void*)
                0x00000000c001da7a                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001daf4      0x7ff hw/diskphys/sata.32
                0x00000000c001daf4                SATA::close(int, int, void*)
                0x00000000c001db18                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001db1a                SATA::open(int, int, void*)
                0x00000000c001dbc4                SATA::SATA()
                0x00000000c001dbc4                SATA::SATA()
                0x00000000c001dbf2                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001de44                SATA::read(unsigned long long, int, void*)
                0x00000000c001e094                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e2f3        0x1 
 .text          0x00000000c001e2f4      0x5d8 hw/diskphys/satapi.32
                0x00000000c001e2f4                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e2fa                SATAPI::close(int, int, void*)
                0x00000000c001e31e                SATAPI::SATAPI()
                0x00000000c001e31e                SATAPI::SATAPI()
                0x00000000c001e34c                SATAPI::diskRemoved()
                0x00000000c001e34e                SATAPI::diskInserted()
                0x00000000c001e36a                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e650                SATAPI::eject()
                0x00000000c001e68c                SATAPI::detectMedia()
                0x00000000c001e6e2                SATAPI::open(int, int, void*)
                0x00000000c001e7e2                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e8cc      0x45b hw/intctrl/apic.32
                0x00000000c001e8cc                IOAPIC::close(int, int, void*)
                0x00000000c001e8d2                apicGetBase()
                0x00000000c001e918                IOAPIC::IOAPIC()
                0x00000000c001e918                IOAPIC::IOAPIC()
                0x00000000c001e940                apicOpen()
                0x00000000c001eabc                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001eaee                IOAPIC::read(int)
                0x00000000c001eb16                IOAPIC::open(int, int, void*)
                0x00000000c001ebfc                IOAPIC::write(int, int)
                0x00000000c001ec28                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ed27        0x1 
 .text          0x00000000c001ed28       0xf0 hw/timer/apictimer.32
                0x00000000c001ed28                APICTimer::close(int, int, void*)
                0x00000000c001ed30                apicTimerHandler(regs*, void*)
                0x00000000c001ed58                APICTimer::open(int, int, void*)
                0x00000000c001edc8                APICTimer::write(int)
                0x00000000c001edf0                APICTimer::APICTimer()
                0x00000000c001edf0                APICTimer::APICTimer()
 .text          0x00000000c001ee18      0x1ad hw/timer/pit.32
                0x00000000c001ee18                PIT::write(int)
                0x00000000c001ee9c                pitHandler(regs*, void*)
                0x00000000c001eec4                PIT::open(int, int, void*)
                0x00000000c001ef14                PIT::close(int, int, void*)
                0x00000000c001ef44                PIT::PIT()
                0x00000000c001ef44                PIT::PIT()
 *fill*         0x00000000c001efc5        0xb 
 .text          0x00000000c001efd0       0x83 arch/i386/avx.32
                0x00000000c001efd0                avxDetect
                0x00000000c001effa                avxSave
                0x00000000c001f00b                avxLoad
                0x00000000c001f01c                avxInit
                0x00000000c001f03e                avxClose
                0x00000000c001f03f                wouldSheSayYes
 *fill*         0x00000000c001f053        0xd 
 .text          0x00000000c001f060      0x2ec arch/i386/interrupt.32
                0x00000000c001f060                isr0
                0x00000000c001f070                isr1
                0x00000000c001f07a                isr2
                0x00000000c001f084                isr3
                0x00000000c001f08e                isr4
                0x00000000c001f098                isr5
                0x00000000c001f0a2                isr6
                0x00000000c001f0ac                isr7
                0x00000000c001f0b6                isr8
                0x00000000c001f0be                isr9
                0x00000000c001f0c8                isr10
                0x00000000c001f0d0                isr11
                0x00000000c001f0d8                isr12
                0x00000000c001f0e0                isr13
                0x00000000c001f0fa                isr14
                0x00000000c001f102                isr15
                0x00000000c001f10c                isr16
                0x00000000c001f116                isr17
                0x00000000c001f120                isr18
                0x00000000c001f12a                irq3
                0x00000000c001f134                irq4
                0x00000000c001f13e                irq5
                0x00000000c001f148                irq6
                0x00000000c001f152                irq7
                0x00000000c001f15c                irq8
                0x00000000c001f166                irq9
                0x00000000c001f170                irq10
                0x00000000c001f17a                irq11
                0x00000000c001f184                irq12
                0x00000000c001f18e                irq13
                0x00000000c001f198                irq14
                0x00000000c001f1a2                irq15
                0x00000000c001f1ac                irq1
                0x00000000c001f1b3                irq2
                0x00000000c001f1ba                isr96
                0x00000000c001f1c1                irq0
                0x00000000c001f1c6                int_common_stub
                0x00000000c001f1f8                syscall_common_stub
                0x00000000c001f2fc                irq16
                0x00000000c001f306                irq17
                0x00000000c001f310                irq18
                0x00000000c001f31a                irq19
                0x00000000c001f324                irq20
                0x00000000c001f32e                irq21
                0x00000000c001f338                irq22
                0x00000000c001f342                irq23
 *fill*         0x00000000c001f34c        0x4 
 .text          0x00000000c001f350       0x10 arch/i386/rdrand.32
                0x00000000c001f350                i386GetRDRAND
 .text          0x00000000c001f360       0x39 arch/i386/sse.32
                0x00000000c001f360                absolutelyNoChanceInHell
                0x00000000c001f360                sseDetect
                0x00000000c001f378                sseSave
                0x00000000c001f380                sseLoad
                0x00000000c001f388                sseInit
                0x00000000c001f398                sseClose
 *fill*         0x00000000c001f399        0x7 
 .text          0x00000000c001f3a0       0x49 arch/i386/x87.32
                0x00000000c001f3a6                x87Detect
                0x00000000c001f3c1                x87Save
                0x00000000c001f3c8                x87Load
                0x00000000c001f3cf                x87Init
                0x00000000c001f3e8                x87Close
 *fill*         0x00000000c001f3e9        0x3 
 .text          0x00000000c001f3ec       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f411        0x0 crtn.32
 *fill*         0x00000000c001f411        0x3 
 .text          0x00000000c001f414      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f414                __divdi3
 *fill*         0x00000000c001f55f        0x1 
 .text          0x00000000c001f560      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f560                __moddi3
 *fill*         0x00000000c001f6de        0x2 
 .text          0x00000000c001f6e0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f6e0                __udivdi3
 *fill*         0x00000000c001f7df        0x1 
 .text          0x00000000c001f7e0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f7e0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f900        0x0
 .iplt          0x00000000c001f900        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f8fa        0xf
 .init          0x00000000c001f8fa        0x3 crti.32
                0x00000000c001f8fa                _init
 .init          0x00000000c001f8fd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f902        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f907        0x2 crtn.32

.fini           0x00000000c001f909        0xa
 .fini          0x00000000c001f909        0x3 crti.32
                0x00000000c001f909                _fini
 .fini          0x00000000c001f90c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f911        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f914       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f914       0x23 core/computer.32
                0x00000000c001f914                Computer::~Computer()
                0x00000000c001f914                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f938       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f938       0x2a core/computer.32
                0x00000000c001f938                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f962       0x21
 .text._Z10idleCommonv
                0x00000000c001f962       0x21 core/idle.32
                0x00000000c001f962                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f984        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f984        0x2 core/unixfile.32
                0x00000000c001f984                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f984                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f986       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f986       0x42 core/unixfile.32
                0x00000000c001f986                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f986                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f9c8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f9c8       0xd3 core/unixfile.32
                0x00000000c001f9c8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fa9c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fa9c        0x7 core/unixfile.32
                0x00000000c001fa9c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001faa4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001faa4       0xa1 core/unixfile.32
                0x00000000c001faa4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fb46        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fb46        0x8 core/unixfile.32
                0x00000000c001fb46                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb4e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb4e       0x1a hal/device.32
                0x00000000c001fb4e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fb4e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb68       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb68       0x2a hal/device.32
                0x00000000c001fb68                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fb92       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fb92       0xdc hal/device.32
                0x00000000c001fb92                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fc6e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fc6e       0x42 hal/device.32
                0x00000000c001fc6e                LinkedList<Device>::LinkedList()
                0x00000000c001fc6e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fcb0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fcb0       0x1c hal/timer.32
                0x00000000c001fcb0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fccc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fccc        0x7 hal/timer.32
                0x00000000c001fccc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fcd4       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fcd4       0xbc hal/timer.32
                0x00000000c001fcd4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fd90       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fd90       0xda hal/timer.32
                0x00000000c001fd90                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fe6c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fe6c       0x23 hw/acpi.32
                0x00000000c001fe6c                ACPI::~ACPI()
                0x00000000c001fe6c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fe90       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fe90       0x2a hw/acpi.32
                0x00000000c001fe90                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001febc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001febc        0x2 hw/acpi.32
                0x00000000c001febc                LinkedList<Device>::~LinkedList()
                0x00000000c001febc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fec0       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fec0       0x1c hw/acpi.32
                0x00000000c001fec0                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fedc        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fedc        0x7 hw/acpi.32
                0x00000000c001fedc                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fee4       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fee4       0xb8 hw/acpi.32
                0x00000000c001fee4                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ff9c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ff9c       0x23 hw/cpu.32
                0x00000000c001ff9c                CPU::~CPU()
                0x00000000c001ff9c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ffc0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ffc0       0x2a hw/cpu.32
                0x00000000c001ffc0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ffec        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ffec        0x8 sys/kill.32
                0x00000000c001ffec                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fff4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fff4        0x2 thr/prcssthr.32
                0x00000000c001fff4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fff4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fff8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fff8       0x49 thr/prcssthr.32
                0x00000000c001fff8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fff8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020044       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020044       0x42 thr/prcssthr.32
                0x00000000c0020044                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020044                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c0020086       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020086       0x23 hw/bus/pci.32
                0x00000000c0020086                PCI::~PCI()
                0x00000000c0020086                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00200aa       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00200aa       0x2a hw/bus/pci.32
                0x00000000c00200aa                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00200d4       0x23
 .text._ZN3IDED2Ev
                0x00000000c00200d4       0x23 hw/diskctrl/ide.32
                0x00000000c00200d4                IDE::~IDE()
                0x00000000c00200d4                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00200f8       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00200f8       0x2a hw/diskctrl/ide.32
                0x00000000c00200f8                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020122       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020122       0x23 hw/diskctrl/satabus.32
                0x00000000c0020122                SATABus::~SATABus()
                0x00000000c0020122                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020146       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020146       0x2a hw/diskctrl/satabus.32
                0x00000000c0020146                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020170       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020170       0x23 hw/diskphys/ata.32
                0x00000000c0020170                ATA::~ATA()
                0x00000000c0020170                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020194       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020194       0x2a hw/diskphys/ata.32
                0x00000000c0020194                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00201be       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00201be       0x23 hw/diskphys/atapi.32
                0x00000000c00201be                ATAPI::~ATAPI()
                0x00000000c00201be                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00201e2       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00201e2       0x2a hw/diskphys/atapi.32
                0x00000000c00201e2                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002020c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002020c       0x23 hw/diskphys/sata.32
                0x00000000c002020c                SATA::~SATA()
                0x00000000c002020c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020230       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020230       0x2a hw/diskphys/sata.32
                0x00000000c0020230                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002025a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002025a       0x23 hw/diskphys/satapi.32
                0x00000000c002025a                SATAPI::~SATAPI()
                0x00000000c002025a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002027e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002027e       0x2a hw/diskphys/satapi.32
                0x00000000c002027e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00202a8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00202a8       0x23 hw/intctrl/apic.32
                0x00000000c00202a8                IOAPIC::~IOAPIC()
                0x00000000c00202a8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00202cc       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00202cc       0x2a hw/intctrl/apic.32
                0x00000000c00202cc                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00202f8       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00202f8       0x23 hw/timer/apictimer.32
                0x00000000c00202f8                APICTimer::~APICTimer()
                0x00000000c00202f8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002031c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002031c       0x2a hw/timer/apictimer.32
                0x00000000c002031c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020348       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020348       0x23 hw/timer/pit.32
                0x00000000c0020348                PIT::~PIT()
                0x00000000c0020348                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002036c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002036c       0x2a hw/timer/pit.32
                0x00000000c002036c                PIT::~PIT()

.rodata         0x00000000c0020396     0x31fa
                0x00000000c0020396                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020396        0x2 
 .ctors         0x00000000c0020398        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c002039c        0x4 core/unixfile.32
 .ctors         0x00000000c00203a0        0x4 thr/prcssthr.32
 .ctors         0x00000000c00203a4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00203a8                end_ctors = .
                0x00000000c00203a8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00203a8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00203ac        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00203ac                __DTOR_END__
                0x00000000c00203b0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00203b0       0x10 
 .rodata        0x00000000c00203c0      0x101 acpica/utclib.32
                0x00000000c00203c0                AcpiGbl_Ctypes
 *fill*         0x00000000c00204c1        0x3 
 .rodata        0x00000000c00204c4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c00204dc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020526       0x1a 
 .rodata        0x00000000c0020540       0xed fs/fat/ff.32
 *fill*         0x00000000c002062d       0x13 
 .rodata        0x00000000c0020640      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020a40       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020aaf      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020bc4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020c2c       0x2c core/computer.32
                0x00000000c0020c2c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020c58       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020c88        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020c94       0x17 core/main.32
 *fill*         0x00000000c0020cab        0x1 
 .rodata.str1.4
                0x00000000c0020cac       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020d51       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020da9       0x39 core/pipe.32
 *fill*         0x00000000c0020de2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020de4       0x1c core/pipe.32
                0x00000000c0020de4                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020e00       0x2b core/terminal.32
 *fill*         0x00000000c0020e2b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020e2c       0x1c core/terminal.32
                0x00000000c0020e2c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020e48       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020e6a       0x15 core/unixfile.32
 *fill*         0x00000000c0020e7f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020e80       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020ecb        0x8 core/unixfile.32
 *fill*         0x00000000c0020ed3        0x1 
 .rodata.str1.4
                0x00000000c0020ed4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020ef4       0x1c core/unixfile.32
                0x00000000c0020ef4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020f10       0x1c core/unixfile.32
                0x00000000c0020f10                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020f2c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00211c0      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00212e6       0x33 coreobjs/c++.32
 *fill*         0x00000000c0021319        0x3 
 .rodata        0x00000000c002131c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002146c      0x169 dbg/usban.32
 *fill*         0x00000000c00215d5        0x3 
 .rodata.str1.4
                0x00000000c00215d8      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002170f      0x18b fs/symlink.32
                                        0x197 (size before relaxing)
 .rodata.str1.1
                0x00000000c002189a       0x26 fs/vfs.32
                                         0x28 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c00218c0       0x6c fs/vfs.32
                0x00000000c00218c0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002192c       0x1c fs/vfs.32
                0x00000000c002192c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021948       0x1c fs/vfs.32
                0x00000000c0021948                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021964       0x2c hal/bus.32
                0x00000000c0021964                vtable for Bus
 .rodata.str1.1
                0x00000000c0021990       0x1e hal/clock.32
 *fill*         0x00000000c00219ae        0x2 
 .rodata._ZTV5Clock
                0x00000000c00219b0       0x3c hal/clock.32
                0x00000000c00219b0                vtable for Clock
 *fill*         0x00000000c00219ec       0x14 
 .rodata        0x00000000c0021a00       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021a30       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021a88       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021a88       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021a88       0x2c hal/device.32
                0x00000000c0021a88                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021ab4       0x2c hal/device.32
                0x00000000c0021ab4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021ae0       0x2c hal/diskctrl.32
                0x00000000c0021ae0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021b0c       0x38 hal/diskphys.32
                0x00000000c0021b0c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021b44       0x3e hal/intctrl.32
 *fill*         0x00000000c0021b82        0x2 
 .rodata.str1.4
                0x00000000c0021b84       0x5d hal/intctrl.32
 .rodata        0x00000000c0021be1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021c34       0x34 hal/keybrd.32
                0x00000000c0021c34                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021c68       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021cac       0x2c hal/logidisk.32
                0x00000000c0021cac                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021cd8       0x2c hal/mouse.32
                0x00000000c0021cd8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021d04       0x34 hal/nic.32
                0x00000000c0021d04                vtable for NIC
 .rodata.str1.1
                0x00000000c0021d38        0xb hal/partition.32
 *fill*         0x00000000c0021d43        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021d44       0x44 hal/serial.32
                0x00000000c0021d44                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021d88       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021d88        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021d88       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021d88       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021d88       0x30 hal/timer.32
                0x00000000c0021d88                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021db8       0x10 hal/vcache.32
                0x00000000c0021db8                vtable for VCache
 .rodata.str1.1
                0x00000000c0021dc8       0x93 hal/video.32
 *fill*         0x00000000c0021e5b        0x1 
 .rodata._ZTV5Video
                0x00000000c0021e5c       0x4c hal/video.32
                0x00000000c0021e5c                vtable for Video
 .rodata.str1.4
                0x00000000c0021ea8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021f43      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0022099       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0022099        0x8 hw/acpi.32
 *fill*         0x00000000c0022099        0x3 
 .rodata._ZTV4ACPI
                0x00000000c002209c       0x2c hw/acpi.32
                0x00000000c002209c                vtable for ACPI
 .rodata.str1.1
                0x00000000c00220c8      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022243        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022244       0x2c hw/cpu.32
                0x00000000c0022244                vtable for CPU
 .rodata.str1.1
                0x00000000c0022270       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00222b0       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00222ec       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c002237d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022446       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002248e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00224b9       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002252f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022574        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002257e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002259f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022635       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022689       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00226b5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022881       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00228d8      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00229e8       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00229e8       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00229e8       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00229e8        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00229e8       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022aaa        0x2 
 .rodata        0x00000000c0022aac       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022adc      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022c7b        0x1 
 .rodata.str1.4
                0x00000000c0022c7c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022cef       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022d04       0x3c arch/i386/rtc.32
                0x00000000c0022d04                vtable for RTC
 .rodata.str1.1
                0x00000000c0022d40       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022d81        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022d84       0x6c fs/fat/vfslink.32
                0x00000000c0022d84                vtable for FAT
 .rodata.str1.1
                0x00000000c0022df0       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022df0      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022f28       0x6c fs/iso9660/vfslink.32
                0x00000000c0022f28                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022f94       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022fd8       0x34 hal/sound/sndcard.32
                0x00000000c0022fd8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c002300c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002304b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023083       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023124       0x2c hw/bus/pci.32
                0x00000000c0023124                vtable for PCI
 .rodata.str1.1
                0x00000000c0023150       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c00231d7        0x1 
 .rodata._ZTV3IDE
                0x00000000c00231d8       0x2c hw/diskctrl/ide.32
                0x00000000c00231d8                vtable for IDE
 .rodata.str1.4
                0x00000000c0023204       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0023228       0x2c hw/diskctrl/satabus.32
                0x00000000c0023228                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023254       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023266        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023268       0x38 hw/diskphys/ata.32
                0x00000000c0023268                vtable for ATA
 .rodata.str1.1
                0x00000000c00232a0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00232ad        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00232b0       0x38 hw/diskphys/atapi.32
                0x00000000c00232b0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00232e8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023364       0x38 hw/diskphys/sata.32
                0x00000000c0023364                vtable for SATA
 .rodata.str1.1
                0x00000000c002339c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0023486        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0023488       0x38 hw/diskphys/satapi.32
                0x00000000c0023488                vtable for SATAPI
 .rodata        0x00000000c00234c0        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00234c8       0x2c hw/intctrl/apic.32
                0x00000000c00234c8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00234f4       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002350f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023510       0x30 hw/timer/apictimer.32
                0x00000000c0023510                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023540       0x1d hw/timer/pit.32
 *fill*         0x00000000c002355d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023560       0x30 hw/timer/pit.32
                0x00000000c0023560                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023590      0xbb1
 *(.data)
 .data          0x00000000c0023590        0x0 crti.32
 .data          0x00000000c0023590        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023590                __dso_handle
 .data          0x00000000c0023594        0x0 acpica/utclib.32
 .data          0x00000000c0023594        0x0 core/malloc.32
 .data          0x00000000c0023594        0x0 libk/ctype.32
 .data          0x00000000c0023594        0x0 libk/string.32
 .data          0x00000000c0023594        0x0 fs/fat/diskio.32
 .data          0x00000000c0023594        0x0 fs/fat/ff.32
 .data          0x00000000c0023594        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023594        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023594        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023594        0x0 core/computer.32
 .data          0x00000000c0023594        0x0 core/gdt.32
 .data          0x00000000c0023594        0x0 core/idle.32
 .data          0x00000000c0023594        0x0 core/idt.32
 .data          0x00000000c0023594        0x4 core/kheap.32
 .data          0x00000000c0023598        0x0 core/main.32
 .data          0x00000000c0023598        0x4 core/physmgr.32
                0x00000000c0023598                Phys::bitmap
 .data          0x00000000c002359c        0x0 core/pipe.32
 *fill*         0x00000000c002359c        0x4 
 .data          0x00000000c00235a0       0x60 core/terminal.32
                0x00000000c00235a0                VgaText::hiddenOut
                0x00000000c00235c0                ansiToVGAMappings
 .data          0x00000000c0023600        0x0 core/tss.32
 .data          0x00000000c0023600        0x4 core/unixfile.32
                0x00000000c0023600                UnixFile::nextFd
 .data          0x00000000c0023604       0x15 core/virtmgr.32
                0x00000000c0023604                Virt::pageAllocPtr
                0x00000000c0023608                Virt::bitmap
                0x00000000c002360c                Virt::swapfileSectorsPerPage
                0x00000000c0023610                Virt::swapfileLength
                0x00000000c0023614                Virt::swapfileSector
                0x00000000c0023618                Virt::swapfileDrive
 *fill*         0x00000000c0023619        0x3 
 .data          0x00000000c002361c        0x4 coreobjs/c++.32
                0x00000000c002361c                __stack_chk_guard
 .data          0x00000000c0023620        0x0 dbg/kconsole.32
 .data          0x00000000c0023620       0x28 dbg/usban.32
                0x00000000c0023620                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023648        0x0 fs/symlink.32
 .data          0x00000000c0023648        0x0 fs/vfs.32
 .data          0x00000000c0023648        0x0 hal/bus.32
 .data          0x00000000c0023648        0x0 hal/buzzer.32
 .data          0x00000000c0023648        0x0 hal/clock.32
 .data          0x00000000c0023648        0x0 hal/device.32
 .data          0x00000000c0023648        0x0 hal/diskctrl.32
 .data          0x00000000c0023648        0x0 hal/diskphys.32
 .data          0x00000000c0023648        0x0 hal/fpu.32
 .data          0x00000000c0023648        0x0 hal/intctrl.32
 .data          0x00000000c0023648        0x0 hal/keybrd.32
 .data          0x00000000c0023648        0x0 hal/logidisk.32
 .data          0x00000000c0023648        0x0 hal/mouse.32
 .data          0x00000000c0023648        0x0 hal/nic.32
 .data          0x00000000c0023648        0x0 hal/partition.32
 .data          0x00000000c0023648        0x0 hal/serial.32
 .data          0x00000000c0023648        0x0 hal/timer.32
 .data          0x00000000c0023648        0x0 hal/vcache.32
 .data          0x00000000c0023648        0x0 hal/video.32
 .data          0x00000000c0023648       0x10 hw/acpi.32
                0x00000000c0023648                legacyIRQRemaps
 .data          0x00000000c0023658        0x4 hw/cpu.32
                0x00000000c0023658                lastCode
 .data          0x00000000c002365c        0x0 krnl/atexit.32
 *fill*         0x00000000c002365c        0x4 
 .data          0x00000000c0023660      0x142 krnl/bootmsg.32
                0x00000000c0023660                KiSplashScreen
 .data          0x00000000c00237a2        0x0 krnl/compat.32
 *fill*         0x00000000c00237a2       0x1e 
 .data          0x00000000c00237c0      0x400 krnl/crc32.32
                0x00000000c00237c0                KiPolyLookupCRC32
 .data          0x00000000c0023bc0       0x4d krnl/env.32
                0x00000000c0023bc0                defaultSysEnv
 .data          0x00000000c0023c0d        0x0 krnl/inlines.32
 .data          0x00000000c0023c0d        0x0 krnl/panic.32
 .data          0x00000000c0023c0d        0x0 krnl/powctrl.32
 .data          0x00000000c0023c0d        0x0 krnl/random.32
 .data          0x00000000c0023c0d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023c0d       0x13 
 .data          0x00000000c0023c20       0x4c krnl/signal.32
                0x00000000c0023c20                KiDefaultSignalHandlers
 *fill*         0x00000000c0023c6c       0x14 
 .data          0x00000000c0023c80       0xfc krnl/syscalls.32
                0x00000000c0023c80                systemCallHandlers
 .data          0x00000000c0023d7c        0x0 net/ethernet.32
 *fill*         0x00000000c0023d7c        0x4 
 .data          0x00000000c0023d80      0x100 reg/cm.32
                0x00000000c0023d80                CmComponents
 .data          0x00000000c0023e80        0x0 reg/registry.32
 .data          0x00000000c0023e80        0x0 sys/eject.32
 .data          0x00000000c0023e80        0x0 sys/exit.32
 .data          0x00000000c0023e80        0x0 sys/getcwd.32
 .data          0x00000000c0023e80        0x0 sys/getpid.32
 .data          0x00000000c0023e80        0x0 sys/getramdata.32
 .data          0x00000000c0023e80        0x0 sys/getvgaptr.32
 .data          0x00000000c0023e80        0x0 sys/kill.32
 .data          0x00000000c0023e80        0x0 sys/loaddll.32
 .data          0x00000000c0023e80        0x0 sys/read.32
 .data          0x00000000c0023e80        0x0 sys/registersignal.32
 .data          0x00000000c0023e80        0x0 sys/registry.32
 .data          0x00000000c0023e80        0x0 sys/sbrk.32
 .data          0x00000000c0023e80        0x0 sys/setcwd.32
 .data          0x00000000c0023e80        0x0 sys/settime.32
 .data          0x00000000c0023e80        0x0 sys/symlink.32
 .data          0x00000000c0023e80        0x0 sys/timezone.32
 .data          0x00000000c0023e80        0x0 sys/truncate.32
 .data          0x00000000c0023e80        0x0 sys/write.32
 .data          0x00000000c0023e80        0x0 sys/wsbe.32
 .data          0x00000000c0023e80        0x0 sys/yield.32
 .data          0x00000000c0023e80        0x0 thr/elf.32
 .data          0x00000000c0023e80        0x4 thr/prcssthr.32
                0x00000000c0023e80                Thr::nextPID
 .data          0x00000000c0023e84        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023e84       0x1c 
 .data          0x00000000c0023ea0      0x2a0 arch/i386/hal.32
                0x00000000c0023ea0                exceptionNames
 .data          0x00000000c0024140        0x0 arch/i386/pic.32
 .data          0x00000000c0024140        0x0 arch/i386/rtc.32
 .data          0x00000000c0024140        0x0 arch/i386/vga.32
 .data          0x00000000c0024140        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024140        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024140        0x1 fs/iso9660/vfslink.32
                0x00000000c0024140                recentDriveletter
 .data          0x00000000c0024141        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024141        0x0 hal/sound/sndport.32
 .data          0x00000000c0024141        0x0 hw/bus/isa.32
 .data          0x00000000c0024141        0x0 hw/bus/pci.32
 .data          0x00000000c0024141        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024141        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024141        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024141        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024141        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024141        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024141        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024141        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024141        0x0 hw/timer/pit.32
 .data          0x00000000c0024141        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024141        0x0 crtn.32
 .data          0x00000000c0024141        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024141        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024141        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024141        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024144        0x0
 .got           0x00000000c0024144        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024144        0x0
 .got.plt       0x00000000c0024144        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024144        0x0
 .igot.plt      0x00000000c0024144        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024144        0x0
 .tm_clone_table
                0x00000000c0024144        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024144        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024141      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024141        0x3 
 .eh_frame      0x00000000c0024144        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024144        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024144       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002419c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00241dc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024248       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
