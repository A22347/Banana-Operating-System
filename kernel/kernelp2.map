Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootflags.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/elf2.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/apic.32
 .group         0x0000000000000000        0xc arch/i386/apic.32
 .comment       0x0000000000000000       0x12 arch/i386/apic.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootflags.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/elf2.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/apic.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2204e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x27e dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006efd                Dbg::logs(char*)
                0x00000000c0006f27                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f45                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f66                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00070dd        0x3 
 .text          0x00000000c00070e0      0x2d4 dbg/usban.32
                0x00000000c00070e0                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000714c                __ubsan_handle_type_mismatch_v1
                0x00000000c0007228                __ubsan_handle_pointer_overflow
                0x00000000c0007254                __ubsan_handle_out_of_bounds
                0x00000000c0007280                __ubsan_handle_add_overflow
                0x00000000c00072ac                __ubsan_handle_load_invalid_value
                0x00000000c00072d8                __ubsan_handle_divrem_overflow
                0x00000000c0007304                __ubsan_handle_mul_overflow
                0x00000000c0007330                __ubsan_handle_sub_overflow
                0x00000000c000735c                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007388                __ubsan_handle_negate_overflow
 .text          0x00000000c00073b4      0x812 fs/symlink.32
                0x00000000c0007503                KiDeinitialiseSymlinks(void*)
                0x00000000c0007594                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c0007617                KeInitialiseSymlinks()
                0x00000000c0007779                KiIsSymlinkRegistered(char const*)
                0x00000000c00078e3                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a8a                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007bc6      0xd9c fs/vfs.32
                0x00000000c0007bc6                File::read(unsigned long long, void*, int*)
                0x00000000c0007c1e                File::write(unsigned long long, void*, int*)
                0x00000000c0007c76                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007cce                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cfc                File::isAtty()
                0x00000000c0007d00                Directory::isAtty()
                0x00000000c0007d04                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007d0a                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007d10                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007d16                File::~File()
                0x00000000c0007d16                File::~File()
                0x00000000c0007d3a                File::~File()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d88                Directory::~Directory()
                0x00000000c0007db2                Filesystem::Filesystem()
                0x00000000c0007db2                Filesystem::Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007de4                Filesystem::~Filesystem()
                0x00000000c0007e08                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e32                Fs::initVFS()
                0x00000000c0007e5c                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000808a                File::File(char const*, Process*, bool)
                0x00000000c000808a                File::File(char const*, Process*, bool)
                0x00000000c0008188                File::File(char const*, Process*)
                0x00000000c0008188                File::File(char const*, Process*)
                0x00000000c00081a6                File::open(FileOpenMode)
                0x00000000c0008204                File::close()
                0x00000000c0008264                File::seek(unsigned long long)
                0x00000000c00082ba                File::truncate(unsigned long long)
                0x00000000c0008310                File::tell(unsigned long long*)
                0x00000000c0008360                File::rewind()
                0x00000000c0008374                File::unlink()
                0x00000000c00083c0                File::rename(char const*)
                0x00000000c000840e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000846a                File::exists()
                0x00000000c00084a8                File::stat(unsigned long long*, bool*)
                0x00000000c0008509                Fs::setcwd(Process*, char*)
                0x00000000c0008668                Directory::Directory(char const*, Process*)
                0x00000000c0008668                Directory::Directory(char const*, Process*)
                0x00000000c0008730                Directory::open()
                0x00000000c000878c                Directory::close()
                0x00000000c00087ec                Directory::unlink()
                0x00000000c0008838                Directory::rename(char const*)
                0x00000000c0008886                Directory::exists()
                0x00000000c00088c4                Directory::read(dirent*)
                0x00000000c0008910                Directory::create()
                0x00000000c000895c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c0008962        0x2 
 .text          0x00000000c0008964       0x86 hal/bus.32
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c000899c                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
                0x00000000c00089c0                Bus::~Bus()
 .text          0x00000000c00089ea       0x9b hal/buzzer.32
                0x00000000c00089ea                KeBeepThread(void*)
                0x00000000c0008a2b                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a85        0x1 
 .text          0x00000000c0008a86      0xe4e hal/clock.32
                0x00000000c0008a86                KeLoadTimezoneStrings()
                0x00000000c0008e15                KeGetTimezoneStringFromID(int)
                0x00000000c0008eb2                KeUpdateTimezone(char const*)
                0x00000000c0008fac                KeSetTimezone(char const*)
                0x00000000c0009009                KeSetTimezone(int)
                0x00000000c000903c                KeLoadTimezone()
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009110                Clock::~Clock()
                0x00000000c000913a                Clock::timeInSecondsLocal()
                0x00000000c00091a4                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0009224                KeDatetimeToSeconds(datetime_t)
                0x00000000c0009552                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0009614                KeSecondsToDatetime(unsigned long long)
                0x00000000c00098a8                Clock::timeInDatetimeLocal()
 .text          0x00000000c00098d4      0x47a hal/device.32
                0x00000000c00098d4                Device::hibernate()
                0x00000000c00098d6                Device::wake()
                0x00000000c00098d8                Device::detect()
                0x00000000c00098da                Device::disableLegacy()
                0x00000000c00098dc                Device::powerSaving(PowerSavingLevel)
                0x00000000c00098de                DriverlessDevice::close(int, int, void*)
                0x00000000c00098e2                DriverlessDevice::detect()
                0x00000000c00098e4                DriverlessDevice::open(int, int, void*)
                0x00000000c00098f8                Device::~Device()
                0x00000000c00098f8                Device::~Device()
                0x00000000c0009906                Device::~Device()
                0x00000000c000992e                Device::findAndLoadDriver()
                0x00000000c000993c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0009962                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00099a2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00099cc                Device::getParent()
                0x00000000c00099d8                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00099f6                Device::addChild(Device*)
                0x00000000c0009a3a                Device::removeAllChildren()
                0x00000000c0009a80                Device::hibernateAll()
                0x00000000c0009ab0                Device::wakeAll()
                0x00000000c0009ae0                Device::detectAll()
                0x00000000c0009b10                Device::disableLegacyAll()
                0x00000000c0009b12                Device::loadDriversForAll()
                0x00000000c0009b14                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009b4a                Device::setName(char const*)
                0x00000000c0009b58                Device::Device(char const*)
                0x00000000c0009b58                Device::Device(char const*)
                0x00000000c0009c54                Device::getName()
                0x00000000c0009c5e                Device::closeAll()
                0x00000000c0009caa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009caa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009ce0                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d24                getDevicesOfType(DeviceType)
 *fill*         0x00000000c0009d4e        0x2 
 .text          0x00000000c0009d50       0x86 hal/diskctrl.32
                0x00000000c0009d50                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d50                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d88                HardDiskController::~HardDiskController()
                0x00000000c0009d88                HardDiskController::~HardDiskController()
                0x00000000c0009dac                HardDiskController::~HardDiskController()
 .text          0x00000000c0009dd6       0xe2 hal/diskphys.32
                0x00000000c0009dd6                PhysicalDisk::eject()
                0x00000000c0009dda                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009dda                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e42                PhysicalDisk::startCache()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e8e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009eb8        0x0 hal/fpu.32
 .text          0x00000000c0009eb8      0x83e hal/keybrd.32
                0x00000000c0009eb8                startGUI(void*)
                0x00000000c0009f02                startGUIVESA(void*)
                0x00000000c0009f4c                sendKeyToTerminal(unsigned char)
                0x00000000c000a022                sendKeyboardToken(KeyboardToken)
                0x00000000c000a4de                clearInternalKeybuffer(VgaText*)
                0x00000000c000a513                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a66c                Keyboard::Keyboard(char const*)
                0x00000000c000a66c                Keyboard::Keyboard(char const*)
                0x00000000c000a6a8                Keyboard::~Keyboard()
                0x00000000c000a6a8                Keyboard::~Keyboard()
                0x00000000c000a6cc                Keyboard::~Keyboard()
 .text          0x00000000c000a6f6      0x3f8 hal/logidisk.32
                0x00000000c000a6f6                LogicalDisk::close(int, int, void*)
                0x00000000c000a6fa                LogicalDisk::~LogicalDisk()
                0x00000000c000a6fa                LogicalDisk::~LogicalDisk()
                0x00000000c000a71e                LogicalDisk::~LogicalDisk()
                0x00000000c000a748                LogicalDisk::open(int, int, void*)
                0x00000000c000a75c                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a794                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a7da                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a7da                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a89a                LogicalDisk::assignDriveLetter()
                0x00000000c000a954                LogicalDisk::mount()
                0x00000000c000a99c                LogicalDisk::unmount()
                0x00000000c000a9ac                LogicalDisk::eject()
                0x00000000c000a9c0                LogicalDisk::unassignDriveLetter()
                0x00000000c000aa16                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aa82                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000aaee        0x2 
 .text          0x00000000c000aaf0       0x86 hal/mouse.32
                0x00000000c000aaf0                Mouse::Mouse(char const*)
                0x00000000c000aaf0                Mouse::Mouse(char const*)
                0x00000000c000ab28                Mouse::~Mouse()
                0x00000000c000ab28                Mouse::~Mouse()
                0x00000000c000ab4c                Mouse::~Mouse()
 .text          0x00000000c000ab76       0x90 hal/nic.32
                0x00000000c000ab76                NIC::getMAC()
                0x00000000c000ab7c                NIC::write(int, unsigned char*, int*)
                0x00000000c000ab82                NIC::NIC(char const*)
                0x00000000c000ab82                NIC::NIC(char const*)
                0x00000000c000abb8                NIC::~NIC()
                0x00000000c000abb8                NIC::~NIC()
                0x00000000c000abdc                NIC::~NIC()
 .text          0x00000000c000ac06      0x33b hal/partition.32
                0x00000000c000ac06                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000acae                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af41        0x3 
 .text          0x00000000c000af44       0x86 hal/serial.32
                0x00000000c000af44                Serial::Serial(char const*)
                0x00000000c000af44                Serial::Serial(char const*)
                0x00000000c000af7c                Serial::~Serial()
                0x00000000c000af7c                Serial::~Serial()
                0x00000000c000afa0                Serial::~Serial()
 *fill*         0x00000000c000afca        0x2 
 .text          0x00000000c000afcc      0x248 hal/timer.32
                0x00000000c000afcc                Timer::Timer(char const*)
                0x00000000c000afcc                Timer::Timer(char const*)
                0x00000000c000b004                Timer::~Timer()
                0x00000000c000b004                Timer::~Timer()
                0x00000000c000b028                Timer::~Timer()
                0x00000000c000b052                Timer::read()
                0x00000000c000b05d                setupTimer(int)
                0x00000000c000b098                timerHandler(unsigned int)
 .text          0x00000000c000b214      0x60e hal/vcache.32
                0x00000000c000b214                VCache::VCache(PhysicalDisk*)
                0x00000000c000b214                VCache::VCache(PhysicalDisk*)
                0x00000000c000b384                VCache::invalidateReadBuffer()
                0x00000000c000b394                VCache::writeWriteBuffer()
                0x00000000c000b3e0                VCache::~VCache()
                0x00000000c000b3e0                VCache::~VCache()
                0x00000000c000b438                VCache::~VCache()
                0x00000000c000b460                VCache::write(unsigned long long, int, void*)
                0x00000000c000b62e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b822      0x70f hal/video.32
                0x00000000c000b822                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b86e                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b8de                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b96e                Video::clearScreen(unsigned int)
                0x00000000c000b994                Video::putpixel(int, int, unsigned int)
                0x00000000c000b9a2                Video::readPixelApprox(int, int)
                0x00000000c000b9b6                Video::Video(char const*)
                0x00000000c000b9b6                Video::Video(char const*)
                0x00000000c000b9ec                Video::~Video()
                0x00000000c000b9ec                Video::~Video()
                0x00000000c000ba10                Video::~Video()
                0x00000000c000ba3a                Video::isMonochrome()
                0x00000000c000ba46                Video::getWidth()
                0x00000000c000ba52                Video::getHeight()
                0x00000000c000ba5e                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb1a                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000bec0                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000bf31        0x3 
 .text          0x00000000c000bf34     0x10c6 hw/acpi.32
                0x00000000c000bf34                ACPI::close(int, int, void*)
                0x00000000c000bf3c                loadACPITables(unsigned char*)
                0x00000000c000c19c                findRSDT(unsigned char*)
                0x00000000c000c2e8                findDataTable(unsigned char*, char*)
                0x00000000c000c35c                scanMADT()
                0x00000000c000c80c                ACPI::ACPI()
                0x00000000c000c80c                ACPI::ACPI()
                0x00000000c000c85c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c958                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca24                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca2c                ACPI::detectPCI()
                0x00000000c000cc38                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cc50                ACPI::open(int, int, void*)
 *fill*         0x00000000c000cffa        0x2 
 .text          0x00000000c000cffc       0xea krnl/assert.32
                0x00000000c000cffc                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d0e6       0x91 krnl/atexit.32
                0x00000000c000d0e6                KeInitialiseAtexit()
                0x00000000c000d108                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d13c                KeExecuteAtexit()
 *fill*         0x00000000c000d177        0x1 
 .text          0x00000000c000d178       0x1e krnl/bootflags.32
                0x00000000c000d178                KeGetBootConfigurationFlag(BootConfigurationFlag)
                0x00000000c000d188                KeInitialiseBootConfigurationFlags()
 .text          0x00000000c000d196       0x8a krnl/bootmsg.32
                0x00000000c000d196                KeDisplaySplashScreen()
                0x00000000c000d1c5                KeSetBootMessage(char const*)
 .text          0x00000000c000d220       0x5f krnl/c++.32
                0x00000000c000d220                __cxa_atexit
                0x00000000c000d223                __cxa_finalize
                0x00000000c000d224                __stack_chk_fail
                0x00000000c000d25a                __cxa_pure_virtual
                0x00000000c000d26b                operator new[](unsigned long)
                0x00000000c000d270                operator delete(void*, unsigned long)
                0x00000000c000d275                operator delete[](void*)
                0x00000000c000d27a                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d27f        0x1 
 .text          0x00000000c000d280       0x44 krnl/cdefs.32
                0x00000000c000d280                CUnlockScheduler
                0x00000000c000d298                CLockScheduler
                0x00000000c000d2a8                CPrintf
 .text          0x00000000c000d2c4      0xc7c krnl/cm.32
                0x00000000c000d2c4                CmOpen(char const*)
                0x00000000c000d3e2                CmClose(Reghive_Tag*)
                0x00000000c000d3f8                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d434                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d4ab                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d4ea                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d51c                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d558                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d580                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d5a1                CmExpand(Reghive_Tag*, int)
                0x00000000c000d61c                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d6a2                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d796                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d8ce                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d92f                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d95f                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000d996                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000d9c0                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000da00                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000daa4                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000dad2                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dc6f                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000dcbc                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000dd36                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000dd89                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000de4d                zStrtok(char*, char const*)
                0x00000000c000debf                CmFindObjectFromPath(Reghive_Tag*, char const*)
 .text          0x00000000c000df40       0xe3 krnl/computer.32
                0x00000000c000df40                Computer::close(int, int, void*)
                0x00000000c000df46                Computer::Computer()
                0x00000000c000df46                Computer::Computer()
                0x00000000c000df8a                Computer::open(int, int, void*)
 .text          0x00000000c000e023       0x2b krnl/crc32.32
                0x00000000c000e023                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e04e      0x5bf krnl/env.32
                0x00000000c000e04e                EnvVarContainer::getEnv(char const*)
                0x00000000c000e08c                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e14e                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e150                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e374                EnvVarContainer::__loadSystem()
                0x00000000c000e38e                EnvVarContainer::__loadUser()
                0x00000000c000e390                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e390                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e3b2                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e3b2                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e3e2                KeGetEnv(Process*, char const*)
                0x00000000c000e447                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e461                KeSetEnvUser(char const*, char const*)
                0x00000000c000e480                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e493                KeDeleteEnvSystem(char const*)
                0x00000000c000e494                KeDeleteEnvUser(char const*)
                0x00000000c000e495                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e496                KeNewProcessEnv(Process*)
                0x00000000c000e4b8                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e504                KeLoadSystemEnv()
                0x00000000c000e532                KeLoadUserEnv()
                0x00000000c000e558                KeFlushEnv()
                0x00000000c000e559                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e579                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e60d        0x3 
 .text          0x00000000c000e610      0x1a8 krnl/fault.32
                0x00000000c000e610                KeDisplayProgramFault(char const*)
                0x00000000c000e660                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e6b4                KePageFault(void*, void*)
                0x00000000c000e708                KeOpcodeFault(void*, void*)
                0x00000000c000e75c                KeOtherFault(void*, void*)
                0x00000000c000e790                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e7a0                KeDoubleFault(void*, void*)
 .text          0x00000000c000e7b8      0x1db krnl/gdt.32
                0x00000000c000e7b8                GDTEntry::setBase(unsigned int)
                0x00000000c000e7d4                GDTEntry::setLimit(unsigned int)
                0x00000000c000e7f2                GDT::GDT()
                0x00000000c000e7f2                GDT::GDT()
                0x00000000c000e808                GDT::addEntry(GDTEntry)
                0x00000000c000e82a                GDT::getNumberOfEntries()
                0x00000000c000e832                GDT::flush()
                0x00000000c000e854                GDT::setup()
 .text          0x00000000c000e993       0x20 krnl/idle.32
                0x00000000c000e993                idleFunction(void*)
 *fill*         0x00000000c000e9b3        0x1 
 .text          0x00000000c000e9b4      0x46c krnl/idt.32
                0x00000000c000e9b4                IDTEntry::IDTEntry(bool)
                0x00000000c000e9b4                IDTEntry::IDTEntry(bool)
                0x00000000c000ea2e                IDTEntry::setOffset(unsigned int)
                0x00000000c000ea44                IDT::IDT()
                0x00000000c000ea44                IDT::IDT()
                0x00000000c000ea46                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ea4e                IDT::addEntry(IDTEntry, int)
                0x00000000c000ea68                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000eaa0                IDT::flush()
                0x00000000c000eaba                IDT::setup()
 .text          0x00000000c000ee20       0x9a krnl/inlines.32
                0x00000000c000ee20                CPU::current()
                0x00000000c000ee2c                operator new(unsigned long)
                0x00000000c000ee31                operator delete(void*)
                0x00000000c000ee36                disableIRQs()
                0x00000000c000ee38                enableIRQs()
                0x00000000c000ee3a                lockScheduler()
                0x00000000c000ee42                unlockScheduler()
                0x00000000c000ee54                lockStuff()
                0x00000000c000ee62                unlockStuff()
                0x00000000c000ee9f                Virt::getAKernelVAS()
                0x00000000c000eea5                __not_memcpy
 .text          0x00000000c000eeba      0x2ae krnl/intlformat.32
                0x00000000c000eeba                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f09c                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f0be                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f0e0                KeSetLocale(klocale_t)
                0x00000000c000f0f6                KeInitialiseLocale()
                0x00000000c000f164                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f165                KeFormatCurrency(char*, int, double)
                0x00000000c000f166                KeFormatNumber(char*, long long, long long)
                0x00000000c000f167                KeFormatNumber(char*, double)
 .text          0x00000000c000f168      0x356 krnl/intops.32
                0x00000000c000f168                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f284                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f3c4                KeGetDigitsInNumber(long long)
                0x00000000c000f430                KeItoa(unsigned long long, char*)
                0x00000000c000f460                KeItoa(long long, char*)
                0x00000000c000f490                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f4be      0x204 krnl/kheap.32
                0x00000000c000f4be                sbrk
                0x00000000c000f552                sbrk_thunk
                0x00000000c000f588                mmap
                0x00000000c000f5e6                munmap
                0x00000000c000f5fb                liballoc_lock()
                0x00000000c000f609                liballoc_unlock()
                0x00000000c000f621                liballoc_alloc(int)
                0x00000000c000f639                liballoc_free(void*, int)
                0x00000000c000f654                realloc
                0x00000000c000f668                malloc
                0x00000000c000f678                free
                0x00000000c000f688                rfree
                0x00000000c000f698                calloc
 *fill*         0x00000000c000f6c2        0x2 
 .text          0x00000000c000f6c4      0x1d3 krnl/mailbox.32
                0x00000000c000f6c4                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000f724                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000f784                KeMailboxCreate()
                0x00000000c000f7b8                KeMailboxPost(Mailbox*, void*)
                0x00000000c000f81c                KeMailboxGet(Mailbox*, void**)
                0x00000000c000f880                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000f897      0x204 krnl/main.32
                0x00000000c000f897                KeFirstTask()
                0x00000000c000f99b                KeEntryPoint
 *fill*         0x00000000c000fa9b        0x1 
 .text          0x00000000c000fa9c       0x1a krnl/mutex.32
                0x00000000c000fa9c                Mutex::Mutex()
                0x00000000c000fa9c                Mutex::Mutex()
 .text          0x00000000c000fab6       0x12 krnl/panic.32
                0x00000000c000fab6                KeIsKernelInPanic()
                0x00000000c000fabc                KePanic(char const*)
 .text          0x00000000c000fac8      0x5b8 krnl/physmgr.32
                0x00000000c000fac8                Phys::allocateDMA(unsigned long)
                0x00000000c000fbb6                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000fbf1                Phys::setPageState(unsigned long, bool)
                0x00000000c000fc31                Phys::getPageState(unsigned long)
                0x00000000c000fc4d                Phys::freePage(unsigned long)
                0x00000000c000fcb6                Phys::allocatePage()
                0x00000000c000fd9d                Phys::allocateContiguousPages(int)
                0x00000000c000fe18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000fe50                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0010080      0x271 krnl/pipe.32
                0x00000000c0010080                Pipe::isAtty()
                0x00000000c0010084                Pipe::~Pipe()
                0x00000000c0010084                Pipe::~Pipe()
                0x00000000c00100a8                Pipe::~Pipe()
                0x00000000c00100d0                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0010194                Pipe::read(unsigned long long, void*, int*)
                0x00000000c001028a                Pipe::Pipe(int)
                0x00000000c001028a                Pipe::Pipe(int)
 .text          0x00000000c00102f1      0x1a3 krnl/powctrl.32
                0x00000000c00102f1                KePowerThread(void*)
                0x00000000c0010323                KeChangePowerSettings(PowerSettings)
                0x00000000c0010339                KeUserIOReceived()
                0x00000000c0010344                KeSetupPowerManager()
                0x00000000c00103cd                KePrepareShutdown()
                0x00000000c00103ec                KeRegisterShutdownHandler(void (*)())
                0x00000000c00103f6                KeRegisterRestartHandler(void (*)())
                0x00000000c0010400                KeRegisterSleepHandler(void (*)())
                0x00000000c001040a                KeShutdown()
                0x00000000c0010440                KeSleep()
                0x00000000c001044c                KeHandlePowerButton()
                0x00000000c001045e                KeHandleSleepButton()
                0x00000000c0010470                KeRestart()
 .text          0x00000000c0010494       0x9b krnl/random.32
                0x00000000c0010494                KeRand()
                0x00000000c00104d4                KeSeedRand(unsigned int)
                0x00000000c00104fd                KeInitRand()
 *fill*         0x00000000c001052f        0x1 
 .text          0x00000000c0010530      0x26c krnl/resolve.32
                0x00000000c0010530                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c001079c      0x415 krnl/semaphore.32
                0x00000000c001079c                Semaphore::Semaphore(int)
                0x00000000c001079c                Semaphore::Semaphore(int)
                0x00000000c00107cc                Semaphore::tryAcquire()
                0x00000000c00108a0                Semaphore::assertLocked(char const*)
                0x00000000c001092c                Semaphore::acquire(int)
                0x00000000c0010ae4                Semaphore::acquire()
                0x00000000c0010b00                Semaphore::release()
 .text          0x00000000c0010bb1      0x3a8 krnl/signal.32
                0x00000000c0010bb1                KiSigKill(int)
                0x00000000c0010bc5                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010bc6                KiDefaultSignalHandlerPause(int)
                0x00000000c0010bf2                KiDefaultSignalHandlerResume(int)
                0x00000000c0010c1e                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010c23                KeInitSignals()
                0x00000000c0010c95                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010ccb                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010d4c                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010e7b                KiCheckSignalZ
                0x00000000c0010ecc                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010f07                KiFinishSignalZ
 .text          0x00000000c0010f59      0xe7d krnl/syscalls.32
                0x00000000c0010f59                SysSeekDir(regs*)
                0x00000000c0010f5e                SysTellDir(regs*)
                0x00000000c0010f63                SysVerify(regs*)
                0x00000000c0010f6d                SysGetArgc(regs*)
                0x00000000c0010f81                SysTTYName(regs*)
                0x00000000c0010f89                SysFormatDisk(regs*)
                0x00000000c0010ff0                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011044                SysGetDiskVolumeLabel(regs*)
                0x00000000c001109d                SysRealpath(regs*)
                0x00000000c00110eb                SysReadDir(regs*)
                0x00000000c001116b                SysIsATTY(regs*)
                0x00000000c00111c5                SysSeek(regs*)
                0x00000000c0011223                SysTell(regs*)
                0x00000000c0011298                SysSize(regs*)
                0x00000000c0011312                SysSizeFromFilename(regs*)
                0x00000000c0011445                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011578                SysClose(regs*)
                0x00000000c00115dd                SysOpenDir(regs*)
                0x00000000c001165a                SysMakeDir(regs*)
                0x00000000c00116c8                SysCloseDir(regs*)
                0x00000000c001171c                SysWait(regs*)
                0x00000000c001173d                SysNotImpl(regs*)
                0x00000000c0011758                SysPanic(regs*)
                0x00000000c0011773                SysRmdir(regs*)
                0x00000000c00117d1                SysUnlink(regs*)
                0x00000000c001182f                SysGetArgv(regs*)
                0x00000000c001187c                SysUSleep(regs*)
                0x00000000c00118a6                SysSpawn(regs*)
                0x00000000c0011917                SysGetEnv(regs*)
                0x00000000c00119cc                SysSetFatAttrib(regs*)
                0x00000000c0011a35                SysShutdown(regs*)
                0x00000000c0011a92                SysPipe(regs*)
                0x00000000c0011ad7                SysGetUnixTime(regs*)
                0x00000000c0011b4a                string_ends_with(char const*, char const*)
                0x00000000c0011b95                SysOpen(regs*)
                0x00000000c0011d94                KeSystemCall(regs*, void*)
 .text          0x00000000c0011dd6      0xadd krnl/terminal.32
                0x00000000c0011dd6                VgaText::isAtty()
                0x00000000c0011dda                VgaText::~VgaText()
                0x00000000c0011dda                VgaText::~VgaText()
                0x00000000c0011dfe                VgaText::~VgaText()
                0x00000000c0011e28                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0011e48                setTerminalScrollLock(bool)
                0x00000000c0011e49                doTerminalCycle()
                0x00000000c0011e4a                addToTerminalCycle(VgaText*)
                0x00000000c0011e4b                scrollTerminalScrollLock(int)
                0x00000000c0011e4c                VgaText::updateTitle()
                0x00000000c0011e4e                VgaText::load()
                0x00000000c0011e50                VgaText::updateCursor()
                0x00000000c0011e66                VgaText::doANSI_SGR(int)
                0x00000000c0011eda                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0011eea                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0011efa                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0011f1a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0011f26                VgaText::setTitleColour(VgaColour)
                0x00000000c0011f32                VgaText::setTitle(char*)
                0x00000000c0011f34                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0011f46                VgaText::scrollScreen()
                0x00000000c0011fd8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0011fe8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0012094                VgaText::getCursorX()
                0x00000000c001209c                VgaText::getCursorY()
                0x00000000c00120a4                VgaText::setCursor(int, int)
                0x00000000c00120bb                setActiveTerminal(VgaText*)
                0x00000000c0012106                VgaText::clearScreen()
                0x00000000c0012154                VgaText::setCursorX(int)
                0x00000000c001216c                VgaText::setCursorY(int)
                0x00000000c0012184                VgaText::incrementCursor(bool)
                0x00000000c00121d8                VgaText::decrementCursor(bool)
                0x00000000c00121fa                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00122ca                VgaText::putchar(char)
                0x00000000c00123b2                VgaText::putx(unsigned int)
                0x00000000c00123f8                VgaText::puts(char const*)
                0x00000000c001241e                VgaText::write(unsigned long long, void*, int*)
                0x00000000c001246a                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00125e4                VgaText::VgaText(char const*)
                0x00000000c00125e4                VgaText::VgaText(char const*)
                0x00000000c0012744                VgaText::receiveKey(unsigned char)
                0x00000000c00128b2                VgaText::doUpdate()
 *fill*         0x00000000c00128b3        0x1 
 .text          0x00000000c00128b4      0x224 krnl/tss.32
                0x00000000c00128b4                TSS::TSS()
                0x00000000c00128b4                TSS::TSS()
                0x00000000c00128c4                TSS::setESP(unsigned long)
                0x00000000c00128d8                TSS::flush()
                0x00000000c00128f8                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012ad8      0x4ce krnl/unixfile.32
                0x00000000c0012ad8                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012b2e                ReservedFilename::isAtty()
                0x00000000c0012b4a                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012ba8                UnixFile::getFileDescriptor()
                0x00000000c0012bb0                UnixFile::UnixFile(int)
                0x00000000c0012bb0                UnixFile::UnixFile(int)
                0x00000000c0012d64                ReservedFilename::ReservedFilename(int)
                0x00000000c0012d64                ReservedFilename::ReservedFilename(int)
                0x00000000c0012d96                UnixFile::~UnixFile()
                0x00000000c0012d96                UnixFile::~UnixFile()
                0x00000000c0012e32                UnixFile::~UnixFile()
                0x00000000c0012e5a                ReservedFilename::~ReservedFilename()
                0x00000000c0012e5a                ReservedFilename::~ReservedFilename()
                0x00000000c0012e7e                ReservedFilename::~ReservedFilename()
                0x00000000c0012ea5                KeGetFileFromDescriptor(int)
 .text          0x00000000c0012fa6     0x1367 krnl/virtmgr.32
                0x00000000c0012fa6                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0012fe0                Virt::getPageState(unsigned long)
                0x00000000c0013003                Virt::allocateKernelVirtualPages(int)
                0x00000000c001311f                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0013142                Virt::swapIDToSector(unsigned long)
                0x00000000c0013158                Virt::allocateSwapfilePage()
                0x00000000c00131d7                Virt::virtualMemorySetup()
                0x00000000c0013228                Virt::setupPageSwapping(int)
                0x00000000c001329a                VAS::setCPUSpecific(unsigned long)
                0x00000000c001329c                VAS::VAS(VAS*)
                0x00000000c001329c                VAS::VAS(VAS*)
                0x00000000c00132b4                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00132e2                VAS::getPageTableEntry(unsigned long)
                0x00000000c0013301                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c001343e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0013462                VAS::virtualToPhysical(unsigned long)
                0x00000000c001347c                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c00134be                VAS::VAS()
                0x00000000c00134be                VAS::VAS()
                0x00000000c0013528                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0013548                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0013574                VAS::~VAS()
                0x00000000c0013574                VAS::~VAS()
                0x00000000c00136dc                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c00137e4                VAS::allocatePages(int, int)
                0x00000000c00138d6                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013930                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013a20                VAS::VAS(bool)
                0x00000000c0013a20                VAS::VAS(bool)
                0x00000000c0013c08                VAS::evict(unsigned long)
                0x00000000c0013d0c                VAS::canLockPage(unsigned long)
                0x00000000c0013d26                VAS::unlockPage(unsigned long)
                0x00000000c0013d5a                VAS::canLockPages(unsigned long, int)
                0x00000000c0013d96                VAS::unlockPages(unsigned long, int)
                0x00000000c0013dd2                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0013f86                VAS::lockPage(unsigned long)
                0x00000000c0013ff8                VAS::lockPages(unsigned long, int)
                0x00000000c0014034                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c00140a8                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00140d4                VAS::scanForEviction()
                0x00000000c0014212                mapVASFirstTime
 .text          0x00000000c001430d       0x2f sys/alarm.32
                0x00000000c001430d                SysAlarm(regs*)
 .text          0x00000000c001433c       0x36 sys/eject.32
                0x00000000c001433c                SysEject(regs*)
 .text          0x00000000c0014372       0x18 sys/exit.32
                0x00000000c0014372                SysExit(regs*)
 .text          0x00000000c001438a       0x1f sys/getcwd.32
                0x00000000c001438a                SysGetCwd(regs*)
 .text          0x00000000c00143a9       0x26 sys/getpid.32
                0x00000000c00143a9                SysGetPID(regs*)
 .text          0x00000000c00143cf       0x21 sys/getramdata.32
                0x00000000c00143cf                SysGetRAMData(regs*)
 .text          0x00000000c00143f0       0xbe sys/getvgaptr.32
                0x00000000c00143f0                SysGetVGAPtr(regs*)
 *fill*         0x00000000c00144ae        0x2 
 .text          0x00000000c00144b0       0xb9 sys/kill.32
                0x00000000c00144b0                SysKill(regs*)
 .text          0x00000000c0014569       0x9e sys/loaddll.32
                0x00000000c0014569                SysLoadDLL(regs*)
 .text          0x00000000c0014607       0x12 sys/pause.32
                0x00000000c0014607                SysPause(regs*)
 .text          0x00000000c0014619       0x49 sys/pthread.32
                0x00000000c0014619                SysPthreadCreate(regs*)
                0x00000000c0014631                SysPthreadGetTID(regs*)
                0x00000000c001463b                SysInternalPthreadGetContext(regs*)
                0x00000000c0014640                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c0014645                SysPthreadJoin(regs*)
                0x00000000c001464a                SysPthreadExit(regs*)
 .text          0x00000000c0014662       0x68 sys/read.32
                0x00000000c0014662                SysRead(regs*)
 .text          0x00000000c00146ca       0x29 sys/registersignal.32
                0x00000000c00146ca                SysRegisterSignal(regs*)
 .text          0x00000000c00146f3      0x1cc sys/registry.32
                0x00000000c00146f3                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014737                SysRegistryReadExtent(regs*)
                0x00000000c001477f                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014796                SysRegistryEnterDirectory(regs*)
                0x00000000c00147ad                SysRegistryGetNext(regs*)
                0x00000000c00147c4                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00147fe                SysRegistryOpen(regs*)
                0x00000000c0014812                SysRegistryClose(regs*)
                0x00000000c0014829                SysRegistryEasyReadString(regs*)
                0x00000000c0014875                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c00148bf       0x55 sys/sbrk.32
                0x00000000c00148bf                SysSbrk(regs*)
 .text          0x00000000c0014914       0x1c sys/setcwd.32
                0x00000000c0014914                SysSetCwd(regs*)
 .text          0x00000000c0014930       0xf1 sys/settime.32
                0x00000000c0014930                SysSetTime(regs*)
 .text          0x00000000c0014a21       0x73 sys/symlink.32
                0x00000000c0014a21                SysSymlink(regs*)
 .text          0x00000000c0014a94       0x3e sys/timezone.32
                0x00000000c0014a94                SysTimezone(regs*)
 .text          0x00000000c0014ad2       0xfc sys/truncate.32
                0x00000000c0014ad2                SysTruncate(regs*)
 .text          0x00000000c0014bce       0x68 sys/write.32
                0x00000000c0014bce                SysWrite(regs*)
 .text          0x00000000c0014c36       0x9d sys/wsbe.32
                0x00000000c0014c36                SysWsbe(regs*)
 .text          0x00000000c0014cd3       0x28 sys/yield.32
                0x00000000c0014cd3                SysYield(regs*)
 *fill*         0x00000000c0014cfb        0x1 
 .text          0x00000000c0014cfc      0x28d thr/alarm.32
                0x00000000c0014cfc                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c0014e98                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c0014f89      0x84c thr/elf.32
                0x00000000c0014f89                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0015214                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00154b5                Thr::runtimeReferenceHelper()
                0x00000000c00154c8                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0015517                Thr::loadKernelSymbolTable(char const*)
 .text          0x00000000c00157d5      0x551 thr/elf2.32
                0x00000000c00157d5                KeIsELFValid(Elf32_Ehdr*)
                0x00000000c00157f4                KeGetELFSectionHeader(unsigned char*, int)
                0x00000000c0015803                KeGetELFProgramHeader(unsigned char*, int)
                0x00000000c0015814                KeLookupELFString(unsigned char*, int)
                0x00000000c0015837                KeLoadELFProgramHeaders(unsigned char*, bool, unsigned long)
                0x00000000c00158e7                KeGetELFSymbolValue(unsigned char*, int, int, bool*, unsigned long, unsigned long)
                0x00000000c0015983                KePerformRelocation(unsigned char*, unsigned long, Elf32_Shdr*, Elf32_Rel*)
                0x00000000c0015a03                KePerformRelocations(unsigned char*, unsigned long)
                0x00000000c0015ab8                KeLoadELF(unsigned char*, bool, unsigned long)
                0x00000000c0015b2d                KeLoadDriver(char const*)
                0x00000000c0015c89                KeExecuteDriver(unsigned long, void*)
                0x00000000c0015cb3                KeLoadAndExecuteDriver(char const*, void*, bool)
 .text          0x00000000c0015d26       0x5a thr/exec.32
                0x00000000c0015d26                KeProcessExec(Process*, char const*)
 .text          0x00000000c0015d80     0x1275 thr/prcssthr.32
                0x00000000c0015d80                userModeEntryPoint(void*)
                0x00000000c0015dac                changeTSS
                0x00000000c0015ddc                switchToThread(ThreadControlBlock*)
                0x00000000c0015e9c                Process::addArgs(char**)
                0x00000000c0015f08                Process::Process(char const*, Process*, char**)
                0x00000000c0015f08                Process::Process(char const*, Process*, char**)
                0x00000000c0016140                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016140                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001632c                taskStartupFunction
                0x00000000c0016338                KeDisablePreemption()
                0x00000000c0016360                KeRestorePreemption()
                0x00000000c0016380                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00164cc                Process::createUserThread()
                0x00000000c00164ec                setupMultitasking(void (*)())
                0x00000000c0016634                schedule()
                0x00000000c00166c8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00166f4                blockTask(TaskState)
                0x00000000c0016730                waitTask(int, int*, int)
                0x00000000c0016774                milliTenthSleepUntil(unsigned long long)
                0x00000000c0016828                milliTenthSleep(unsigned long long)
                0x00000000c0016840                sleep(unsigned long long)
                0x00000000c0016860                sleep(unsigned int)
                0x00000000c0016878                milliTenthSleep(unsigned int)
                0x00000000c0016898                taskReturned
                0x00000000c00168e0                KeProcessFromPID(int)
                0x00000000c001698c                unblockTask(ThreadControlBlock*)
                0x00000000c0016a40                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016d10                cleanerTaskFunction(void*)
                0x00000000c0016e28                KeTerminateCurrentThread(int)
 .text          0x00000000c0016ff5     0x1a26 vm86/vm8086.32
                0x00000000c0016ff5                Vm::inbv(unsigned short)
                0x00000000c001702c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0017093                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00170b8                Vm::getSegment(unsigned int)
                0x00000000c00170c3                Vm::getOffset(unsigned int)
                0x00000000c00170cb                Vm::mainloop2()
                0x00000000c001713e                Vm::mainVm8086Loop(void*)
                0x00000000c001715e                Vm::mainloop3(unsigned long)
                0x00000000c0017196                Vm::initialise8086()
                0x00000000c00171e0                Vm::resetConventionalMemory8086()
                0x00000000c00171e8                Vm::finish8086()
                0x00000000c0017259                Vm::getOutput8086(unsigned char*)
                0x00000000c00172ba                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017491                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017762                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017966                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00179b9                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017a0d                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017a60                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017abf                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017b1e                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017b75                Vm::faultHandler(regs*)
 *fill*         0x00000000c0018a1b        0x1 
 .text          0x00000000c0018a1c      0x45f arch/i386/apic.32
                0x00000000c0018a1c                IOAPIC::close(int, int, void*)
                0x00000000c0018a22                apicGetBase()
                0x00000000c0018a5c                IOAPIC::IOAPIC()
                0x00000000c0018a5c                IOAPIC::IOAPIC()
                0x00000000c0018a84                apicOpen()
                0x00000000c0018c10                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0018c42                IOAPIC::read(int)
                0x00000000c0018c6a                IOAPIC::open(int, int, void*)
                0x00000000c0018d50                IOAPIC::write(int, int)
                0x00000000c0018d7c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0018e7b        0x1 
 .text          0x00000000c0018e7c     0x1f55 arch/i386/hal.32
                0x00000000c0018e7c                noCopro(unsigned long)
                0x00000000c0018e7d                HalRestart()
                0x00000000c0018e88                HalShutdown()
                0x00000000c0018e89                HalSleep()
                0x00000000c0018e8a                CPU::close(int, int, void*)
                0x00000000c0018e8d                x86ReadCMOS(unsigned char)
                0x00000000c0018ee1                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0018f43                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0018f62                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018f7f                AMD_K6_writeback(int, int, int)
                0x00000000c001903f                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00190dd                cpuidCheckEDX(unsigned int)
                0x00000000c001910a                cpuidCheckECX(unsigned int)
                0x00000000c0019138                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0019166                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0019194                HalDetectFeatures()
                0x00000000c0019f7f                HalEnableNMI()
                0x00000000c0019f92                HalDisableNMI()
                0x00000000c0019fa5                HalGetNMIState()
                0x00000000c0019fab                x86rdmsr(unsigned int)
                0x00000000c0019fe9                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c001a02e                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c001a059                HalFindRSDP()
                0x00000000c001a136                HalHandlePageFault(void*, void*)
                0x00000000c001a165                HalHandleOpcodeFault(void*, void*)
                0x00000000c001a1a7                HalDisplayDebugInfo(void*)
                0x00000000c001a535                HalReceivedNMI()
                0x00000000c001a5d0                HalSystemIdle()
                0x00000000c001a62f                i386SaveCoprocessor(void*)
                0x00000000c001a643                i386LoadCoprocessor(void*)
                0x00000000c001a657                x87EmulHandler(regs*, void*)
                0x00000000c001a6f4                HalInitialiseCoprocessor()
                0x00000000c001a778                HalPanic(char const*)
                0x00000000c001a88c                HalQueryPerformanceCounter()
                0x00000000c001a89c                HalInitialise()
                0x00000000c001aa84                HalMakeBeep(int)
                0x00000000c001aabe                HalGetRand()
                0x00000000c001aac1                HalEndOfInterrupt(int)
                0x00000000c001aaec                CPU::CPU()
                0x00000000c001aaec                CPU::CPU()
                0x00000000c001ab70                CPU::setupSMEP()
                0x00000000c001ab7c                CPU::setupUMIP()
                0x00000000c001ab86                CPU::setupTSC()
                0x00000000c001ab90                CPU::setupLargePages()
                0x00000000c001ab9a                CPU::setupPAT()
                0x00000000c001abcc                CPU::setupMTRR()
                0x00000000c001abce                CPU::setupGlobalPages()
                0x00000000c001abd8                CPU::allowUsermodeDataAccess()
                0x00000000c001abe6                CPU::prohibitUsermodeDataAccess()
                0x00000000c001abf4                CPU::setupSMAP()
                0x00000000c001ac02                CPU::setupFeatures()
                0x00000000c001acce                CPU::open(int, int, void*)
 .text          0x00000000c001add1      0x348 arch/i386/intctrl.32
                0x00000000c001add1                convertLegacyIRQNumber(int)
                0x00000000c001ae0d                KeSetupInterrupts()
                0x00000000c001ae6a                int_handler
                0x00000000c001aeed                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001af37                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001b074                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001b0a8                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001b119        0x3 
 .text          0x00000000c001b11c      0x2dc arch/i386/pic.32
                0x00000000c001b11c                picIoWait()
                0x00000000c001b124                picDisable()
                0x00000000c001b158                picGetIRQReg(int)
                0x00000000c001b1d4                picOpen()
                0x00000000c001b358                picEOI(int)
 .text          0x00000000c001b3f8      0x5ed arch/i386/rtc.32
                0x00000000c001b3f8                RTC::open(int, int, void*)
                0x00000000c001b3fc                RTC::close(int, int, void*)
                0x00000000c001b400                RTC::timeInSecondsUTC()
                0x00000000c001b412                RTC::timeInDatetimeUTC()
                0x00000000c001b438                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b476                RTC::~RTC()
                0x00000000c001b476                RTC::~RTC()
                0x00000000c001b49a                RTC::~RTC()
                0x00000000c001b4c4                RTC::get_update_in_progress_flag()
                0x00000000c001b4d8                RTC::completeRTCRefresh()
                0x00000000c001b786                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b8fc                rtcIRQHandler(regs*, void*)
                0x00000000c001b93c                RTC::RTC()
                0x00000000c001b93c                RTC::RTC()
 *fill*         0x00000000c001b9e5        0x3 
 .text          0x00000000c001b9e8      0x1f4 arch/i386/vga.32
                0x00000000c001b9e8                HalConsoleScroll(int, int)
                0x00000000c001baf0                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001bb54                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001bbdc     0x14f3 fs/fat/vfslink.32
                0x00000000c001bbdc                FAT::getName()
                0x00000000c001bbe4                FAT::tell(void*, unsigned long long*)
                0x00000000c001bc20                FAT::stat(void*, unsigned long long*)
                0x00000000c001bc5c                FAT::~FAT()
                0x00000000c001bc5c                FAT::~FAT()
                0x00000000c001bc80                FAT::~FAT()
                0x00000000c001bca8                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001bd4c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001be2c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001c010                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001c22c                FAT::allocateSwapfile(char const*, int)
                0x00000000c001c3ec                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c55c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001c5bc                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c61c                FAT::close(void*)
                0x00000000c001c670                FAT::closeDir(void*)
                0x00000000c001c6c4                FAT::truncate(void*, unsigned long long)
                0x00000000c001c730                FAT::seek(void*, unsigned long long)
                0x00000000c001c788                fatWrapperReadDisk
                0x00000000c001c7c8                fatWrapperWriteDisk
                0x00000000c001c808                fatWrapperIoctl
                0x00000000c001c928                FAT::FAT()
                0x00000000c001c928                FAT::FAT()
                0x00000000c001c980                FAT::fixFilepath(char*)
                0x00000000c001c9c0                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001cb34                FAT::openDir(char const*, void**)
                0x00000000c001cbe4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001ccdc                FAT::unlink(char const*)
                0x00000000c001cd5c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001cf14                FAT::rename(char const*, char const*)
                0x00000000c001cfe0                FAT::mkdir(char const*)
                0x00000000c001d060                FAT::exists(char const*)
 *fill*         0x00000000c001d0cf        0x1 
 .text          0x00000000c001d0d0       0x94 fs/iso9660/helper.32
                0x00000000c001d0d0                isoReadDiscSectorHelper
                0x00000000c001d12c                iso_kprintf
                0x00000000c001d148                iso_kprintfd
 .text          0x00000000c001d164      0x71a fs/iso9660/vfslink.32
                0x00000000c001d164                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001d16a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001d170                ISO9660::getName()
                0x00000000c001d176                ISO9660::closeDir(void*)
                0x00000000c001d180                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001d186                ISO9660::unlink(char const*)
                0x00000000c001d18c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001d192                ISO9660::rename(char const*, char const*)
                0x00000000c001d198                ISO9660::mkdir(char const*)
                0x00000000c001d19e                ISO9660::~ISO9660()
                0x00000000c001d19e                ISO9660::~ISO9660()
                0x00000000c001d1c2                ISO9660::~ISO9660()
                0x00000000c001d1ea                ISO9660::exists(char const*)
                0x00000000c001d1fe                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001d2e4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001d32c                ISO9660::seek(void*, unsigned long long)
                0x00000000c001d36e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001d3ac                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001d3fe                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d540                ISO9660::close(void*)
                0x00000000c001d570                ISO9660::openDir(char const*, void**)
                0x00000000c001d64a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d765                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d7e4                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001d856                ISO9660::ISO9660()
                0x00000000c001d856                ISO9660::ISO9660()
 .text          0x00000000c001d87e      0x26c hal/sound/sndcard.32
                0x00000000c001d87e                SoundCard::beginPlayback()
                0x00000000c001d88c                SoundCard::stopPlayback()
                0x00000000c001d89a                SoundCard::SoundCard(char const*)
                0x00000000c001d89a                SoundCard::SoundCard(char const*)
                0x00000000c001d938                SoundCard::~SoundCard()
                0x00000000c001d938                SoundCard::~SoundCard()
                0x00000000c001d95c                SoundCard::~SoundCard()
                0x00000000c001d986                SoundCard::configureRates(int, int, int)
                0x00000000c001d9b6                SoundCard::getSamples16(int, short*)
                0x00000000c001da12                SoundCard::getSamples32(int, int*)
                0x00000000c001da98                SoundCard::addChannel(SoundPort*)
                0x00000000c001dad6                SoundCard::removeChannel(int)
 *fill*         0x00000000c001daea        0x2 
 .text          0x00000000c001daec      0x42f hal/sound/sndport.32
                0x00000000c001daec                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001daec                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001db78                SoundPort::~SoundPort()
                0x00000000c001db78                SoundPort::~SoundPort()
                0x00000000c001dbac                SoundPort::unpause()
                0x00000000c001dbb8                SoundPort::pause()
                0x00000000c001dbc4                SoundPort::getBufferUsed()
                0x00000000c001dbcc                SoundPort::getBufferSize()
                0x00000000c001dbd4                SoundPort::buffer8(signed char*, int)
                0x00000000c001dc68                SoundPort::buffer16(short*, int)
                0x00000000c001dcfc                SoundPort::buffer32(int*, int)
                0x00000000c001dd88                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001de58                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 *fill*         0x00000000c001df1b        0x1 
 .text          0x00000000c001df1c      0xc25 hw/bus/pci.32
                0x00000000c001df1c                PCI::open(int, int, void*)
                0x00000000c001df3a                PCI::close(int, int, void*)
                0x00000000c001df3e                PCI::PCI()
                0x00000000c001df3e                PCI::PCI()
                0x00000000c001dfd6                PCI::readBAR8(unsigned int, int)
                0x00000000c001dff2                PCI::readBAR16(unsigned int, int)
                0x00000000c001e010                PCI::readBAR32(unsigned int, int)
                0x00000000c001e02c                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001e04c                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001e06e                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001e08e                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e104                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e1ae                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001e1d2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001e1fa                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001e244                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001e26c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001e290                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001e2b4                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001e2dc                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e340                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001e426                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e6f0                PCI::checkBus(unsigned char)
                0x00000000c001e714                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e8fa                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001ea76                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001eae8                PCI::detect()
 *fill*         0x00000000c001eb41        0x1 
 .text          0x00000000c001eb42      0xe52 hw/diskctrl/ide.32
                0x00000000c001eb42                IDE::close(int, int, void*)
                0x00000000c001eb46                IDE::IDE()
                0x00000000c001eb46                IDE::IDE()
                0x00000000c001eb7a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001eb8c                selectDrive(unsigned char, unsigned char)
                0x00000000c001eb8e                IDE::getBase(unsigned char)
                0x00000000c001eba0                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ec60                IDE::read(unsigned char, unsigned char)
                0x00000000c001ed14                IDE::waitInterrupt(unsigned char)
                0x00000000c001ed77                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ed93                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001edb0                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001edfa                IDE::open(int, int, void*)
                0x00000000c001f352                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001f422                IDE::detect()
                0x00000000c001f886                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f940                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f994      0x33f hw/diskctrl/satabus.32
                0x00000000c001f994                SATABus::close(int, int, void*)
                0x00000000c001f998                SATABus::detect()
                0x00000000c001f99a                SATABus::SATABus()
                0x00000000c001f99a                SATABus::SATABus()
                0x00000000c001fa20                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001fa52                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001fa9a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001faba                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001fae4                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001fbf6                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001fca0                SATABus::open(int, int, void*)
 *fill*         0x00000000c001fcd3        0x1 
 .text          0x00000000c001fcd4      0x7c1 hw/diskphys/ata.32
                0x00000000c001fcd4                ATA::close(int, int, void*)
                0x00000000c001fcf8                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001fcfa                ATA::ATA()
                0x00000000c001fcfa                ATA::ATA()
                0x00000000c001fd28                ATA::flush(bool)
                0x00000000c001fd76                ATA::readyForCommand()
                0x00000000c001fdc2                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c00201ca                ATA::read(unsigned long long, int, void*)
                0x00000000c0020216                ATA::write(unsigned long long, int, void*)
                0x00000000c0020262                ATA::detectCHS()
                0x00000000c002028c                ATA::open(int, int, void*)
                0x00000000c0020477                combineCharAndColour(char, unsigned char)
                0x00000000c0020488                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c0020495        0x1 
 .text          0x00000000c0020496      0x612 hw/diskphys/atapi.32
                0x00000000c0020496                ATAPI::write(unsigned long long, int, void*)
                0x00000000c002049c                ATAPI::close(int, int, void*)
                0x00000000c00204c0                ATAPI::ATAPI()
                0x00000000c00204c0                ATAPI::ATAPI()
                0x00000000c00204ee                ATAPI::readyForCommand()
                0x00000000c0020540                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0020800                ATAPI::diskRemoved()
                0x00000000c002083a                ATAPI::eject()
                0x00000000c0020882                ATAPI::diskInserted()
                0x00000000c002088e                ATAPI::detectMedia()
                0x00000000c002094e                ATAPI::open(int, int, void*)
                0x00000000c0020a2e                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020aa8      0x44a hw/diskphys/sata.32
                0x00000000c0020aa8                SATA::close(int, int, void*)
                0x00000000c0020acc                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0020ace                SATA::open(int, int, void*)
                0x00000000c0020b86                SATA::SATA()
                0x00000000c0020b86                SATA::SATA()
                0x00000000c0020bb4                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020e3a                SATA::read(unsigned long long, int, void*)
                0x00000000c0020e86                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020ef2      0x5dc hw/diskphys/satapi.32
                0x00000000c0020ef2                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020ef8                SATAPI::close(int, int, void*)
                0x00000000c0020f1c                SATAPI::SATAPI()
                0x00000000c0020f1c                SATAPI::SATAPI()
                0x00000000c0020f4a                SATAPI::diskRemoved()
                0x00000000c0020f4c                SATAPI::diskInserted()
                0x00000000c0020f68                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0021252                SATAPI::eject()
                0x00000000c002128e                SATAPI::detectMedia()
                0x00000000c00212e4                SATAPI::open(int, int, void*)
                0x00000000c00213e4                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c00214ce        0x2 
 .text          0x00000000c00214d0       0xf0 hw/timer/apictimer.32
                0x00000000c00214d0                APICTimer::close(int, int, void*)
                0x00000000c00214d8                apicTimerHandler(regs*, void*)
                0x00000000c0021500                APICTimer::open(int, int, void*)
                0x00000000c0021570                APICTimer::write(int)
                0x00000000c0021598                APICTimer::APICTimer()
                0x00000000c0021598                APICTimer::APICTimer()
 .text          0x00000000c00215c0      0x1ad hw/timer/pit.32
                0x00000000c00215c0                PIT::write(int)
                0x00000000c0021644                pitHandler(regs*, void*)
                0x00000000c002166c                PIT::open(int, int, void*)
                0x00000000c00216bc                PIT::close(int, int, void*)
                0x00000000c00216ec                PIT::PIT()
                0x00000000c00216ec                PIT::PIT()
 *fill*         0x00000000c002176d        0x3 
 .text          0x00000000c0021770       0x6f arch/i386/avx.32
                0x00000000c0021770                avxDetect
                0x00000000c002179a                avxSave
                0x00000000c00217ab                avxLoad
                0x00000000c00217bc                avxInit
                0x00000000c00217de                avxClose
 *fill*         0x00000000c00217df        0x1 
 .text          0x00000000c00217e0      0x2b8 arch/i386/interrupt.32
                0x00000000c00217e0                isr0
                0x00000000c00217f0                isr1
                0x00000000c00217fa                isr2
                0x00000000c0021804                isr3
                0x00000000c002180e                isr4
                0x00000000c0021818                isr5
                0x00000000c0021822                isr6
                0x00000000c002182c                isr7
                0x00000000c0021836                isr8
                0x00000000c002183e                isr9
                0x00000000c0021848                isr10
                0x00000000c0021850                isr11
                0x00000000c0021858                isr12
                0x00000000c0021860                isr13
                0x00000000c002187a                isr14
                0x00000000c0021882                isr15
                0x00000000c002188c                isr16
                0x00000000c0021896                isr17
                0x00000000c00218a0                isr18
                0x00000000c00218aa                irq3
                0x00000000c00218b4                irq4
                0x00000000c00218be                irq5
                0x00000000c00218c8                irq6
                0x00000000c00218d2                irq7
                0x00000000c00218dc                irq8
                0x00000000c00218e6                irq9
                0x00000000c00218f0                irq10
                0x00000000c00218fa                irq11
                0x00000000c0021904                irq12
                0x00000000c002190e                irq13
                0x00000000c0021918                irq14
                0x00000000c0021922                irq15
                0x00000000c002192c                irq1
                0x00000000c0021933                irq2
                0x00000000c002193a                isr96
                0x00000000c0021941                irq0
                0x00000000c0021946                int_common_stub
                0x00000000c0021946                syscall_common_stub
                0x00000000c0021a48                irq16
                0x00000000c0021a52                irq17
                0x00000000c0021a5c                irq18
                0x00000000c0021a66                irq19
                0x00000000c0021a70                irq20
                0x00000000c0021a7a                irq21
                0x00000000c0021a84                irq22
                0x00000000c0021a8e                irq23
 *fill*         0x00000000c0021a98        0x8 
 .text          0x00000000c0021aa0       0x10 arch/i386/rdrand.32
                0x00000000c0021aa0                i386GetRDRAND
 .text          0x00000000c0021ab0       0x39 arch/i386/sse.32
                0x00000000c0021ab0                sseDetect
                0x00000000c0021ac8                sseSave
                0x00000000c0021ad0                sseLoad
                0x00000000c0021ad8                sseInit
                0x00000000c0021ae8                sseClose
 *fill*         0x00000000c0021ae9        0x7 
 .text          0x00000000c0021af0       0x4f arch/i386/x87.32
                0x00000000c0021af6                x87Detect
                0x00000000c0021b17                x87Save
                0x00000000c0021b1e                x87Load
                0x00000000c0021b25                x87Init
                0x00000000c0021b3e                x87Close
 *fill*         0x00000000c0021b3f        0x1 
 .text          0x00000000c0021b40       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0021b65        0x0 crtn.32
 *fill*         0x00000000c0021b65        0x3 
 .text          0x00000000c0021b68      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0021b68                __divdi3
 *fill*         0x00000000c0021cb3        0x1 
 .text          0x00000000c0021cb4      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021cb4                __moddi3
 *fill*         0x00000000c0021e32        0x2 
 .text          0x00000000c0021e34       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021e34                __udivdi3
 *fill*         0x00000000c0021f33        0x1 
 .text          0x00000000c0021f34      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021f34                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0022050        0x0
 .iplt          0x00000000c0022050        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002204e        0xf
 .init          0x00000000c002204e        0x3 crti.32
                0x00000000c002204e                _init
 .init          0x00000000c0022051        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0022056        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c002205b        0x2 crtn.32

.fini           0x00000000c002205d        0xa
 .fini          0x00000000c002205d        0x3 crti.32
                0x00000000c002205d                _fini
 .fini          0x00000000c0022060        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0022065        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0022068       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0022068       0x1a hal/device.32
                0x00000000c0022068                DriverlessDevice::~DriverlessDevice()
                0x00000000c0022068                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0022082       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0022082       0x2a hal/device.32
                0x00000000c0022082                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00220ac       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00220ac       0xdc hal/device.32
                0x00000000c00220ac                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0022188       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0022188       0x42 hal/device.32
                0x00000000c0022188                LinkedList<Device>::LinkedList()
                0x00000000c0022188                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00221cc       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00221cc       0x1c hal/timer.32
                0x00000000c00221cc                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00221e8        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00221e8        0x7 hal/timer.32
                0x00000000c00221e8                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00221f0       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00221f0       0xbc hal/timer.32
                0x00000000c00221f0                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00222ac       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00222ac       0xda hal/timer.32
                0x00000000c00222ac                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0022388       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0022388       0x23 hw/acpi.32
                0x00000000c0022388                ACPI::~ACPI()
                0x00000000c0022388                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c00223ac       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c00223ac       0x2a hw/acpi.32
                0x00000000c00223ac                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00223d8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00223d8        0x2 hw/acpi.32
                0x00000000c00223d8                LinkedList<Device>::~LinkedList()
                0x00000000c00223d8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00223dc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00223dc       0x1c hw/acpi.32
                0x00000000c00223dc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00223f8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00223f8        0x7 hw/acpi.32
                0x00000000c00223f8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0022400       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0022400       0xb8 hw/acpi.32
                0x00000000c0022400                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c00224b8       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c00224b8       0x23 krnl/computer.32
                0x00000000c00224b8                Computer::~Computer()
                0x00000000c00224b8                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c00224dc       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c00224dc       0x2a krnl/computer.32
                0x00000000c00224dc                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0022506       0x24
 .text._Z10idleCommonv
                0x00000000c0022506       0x24 krnl/idle.32
                0x00000000c0022506                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002252a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002252a        0x2 krnl/unixfile.32
                0x00000000c002252a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c002252a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002252c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002252c       0x42 krnl/unixfile.32
                0x00000000c002252c                LinkedList<UnixFile>::LinkedList()
                0x00000000c002252c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002256e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002256e       0xd3 krnl/unixfile.32
                0x00000000c002256e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022642        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022642        0x7 krnl/unixfile.32
                0x00000000c0022642                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002264a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002264a       0xa1 krnl/unixfile.32
                0x00000000c002264a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00226ec        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00226ec        0x8 krnl/unixfile.32
                0x00000000c00226ec                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00226f4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00226f4        0x8 sys/kill.32
                0x00000000c00226f4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00226fc        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00226fc        0x2 thr/prcssthr.32
                0x00000000c00226fc                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00226fc                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022700       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022700       0x49 thr/prcssthr.32
                0x00000000c0022700                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0022700                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002274c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002274c       0x42 thr/prcssthr.32
                0x00000000c002274c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c002274c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN6IOAPICD2Ev
                0x00000000c002278e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002278e       0x23 arch/i386/apic.32
                0x00000000c002278e                IOAPIC::~IOAPIC()
                0x00000000c002278e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00227b2       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00227b2       0x2a arch/i386/apic.32
                0x00000000c00227b2                IOAPIC::~IOAPIC()

.text._ZN3CPUD2Ev
                0x00000000c00227dc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00227dc       0x23 arch/i386/hal.32
                0x00000000c00227dc                CPU::~CPU()
                0x00000000c00227dc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0022800       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0022800       0x2a arch/i386/hal.32
                0x00000000c0022800                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002282a       0x23
 .text._ZN3PCID2Ev
                0x00000000c002282a       0x23 hw/bus/pci.32
                0x00000000c002282a                PCI::~PCI()
                0x00000000c002282a                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002284e       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002284e       0x2a hw/bus/pci.32
                0x00000000c002284e                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0022878       0x23
 .text._ZN3IDED2Ev
                0x00000000c0022878       0x23 hw/diskctrl/ide.32
                0x00000000c0022878                IDE::~IDE()
                0x00000000c0022878                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002289c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002289c       0x2a hw/diskctrl/ide.32
                0x00000000c002289c                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c00228c6       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c00228c6       0x23 hw/diskctrl/satabus.32
                0x00000000c00228c6                SATABus::~SATABus()
                0x00000000c00228c6                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c00228ea       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c00228ea       0x2a hw/diskctrl/satabus.32
                0x00000000c00228ea                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0022914       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0022914       0x23 hw/diskphys/ata.32
                0x00000000c0022914                ATA::~ATA()
                0x00000000c0022914                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0022938       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0022938       0x2a hw/diskphys/ata.32
                0x00000000c0022938                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0022962       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0022962       0x23 hw/diskphys/atapi.32
                0x00000000c0022962                ATAPI::~ATAPI()
                0x00000000c0022962                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0022986       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0022986       0x2a hw/diskphys/atapi.32
                0x00000000c0022986                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00229b0       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00229b0       0x23 hw/diskphys/sata.32
                0x00000000c00229b0                SATA::~SATA()
                0x00000000c00229b0                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c00229d4       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c00229d4       0x2a hw/diskphys/sata.32
                0x00000000c00229d4                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00229fe       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00229fe       0x23 hw/diskphys/satapi.32
                0x00000000c00229fe                SATAPI::~SATAPI()
                0x00000000c00229fe                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0022a22       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0022a22       0x2a hw/diskphys/satapi.32
                0x00000000c0022a22                SATAPI::~SATAPI()

.text._ZN9APICTimerD2Ev
                0x00000000c0022a4c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0022a4c       0x23 hw/timer/apictimer.32
                0x00000000c0022a4c                APICTimer::~APICTimer()
                0x00000000c0022a4c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0022a70       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0022a70       0x2a hw/timer/apictimer.32
                0x00000000c0022a70                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0022a9c       0x23
 .text._ZN3PITD2Ev
                0x00000000c0022a9c       0x23 hw/timer/pit.32
                0x00000000c0022a9c                PIT::~PIT()
                0x00000000c0022a9c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022ac0       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022ac0       0x2a hw/timer/pit.32
                0x00000000c0022ac0                PIT::~PIT()

.rodata         0x00000000c0022aea     0x3b0e
                0x00000000c0022aea                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0022aea        0x2 
 .ctors         0x00000000c0022aec        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022af0        0x4 krnl/unixfile.32
 .ctors         0x00000000c0022af4        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022af8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022afc                end_ctors = .
                0x00000000c0022afc                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0022afc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0022b00        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022b00                __DTOR_END__
                0x00000000c0022b04                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022b04       0x1c 
 .rodata        0x00000000c0022b20      0x101 acpica/utclib.32
                0x00000000c0022b20                AcpiGbl_Ctypes
 *fill*         0x00000000c0022c21        0x3 
 .rodata        0x00000000c0022c24       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c0022c3c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022c86       0x1a 
 .rodata        0x00000000c0022ca0       0xed fs/fat/ff.32
 *fill*         0x00000000c0022d8d       0x13 
 .rodata        0x00000000c0022da0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00231a0       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c002320f        0x1 
 .rodata.str1.4
                0x00000000c0023210       0x38 dbg/kconsole.32
 .rodata        0x00000000c0023248      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0023398      0x169 dbg/usban.32
 *fill*         0x00000000c0023501        0x3 
 .rodata.str1.4
                0x00000000c0023504      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002363b      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c002375e       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c00237b7        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c00237b8       0x6c fs/vfs.32
                0x00000000c00237b8                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0023824       0x1c fs/vfs.32
                0x00000000c0023824                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0023840       0x1c fs/vfs.32
                0x00000000c0023840                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002385c       0x2c hal/bus.32
                0x00000000c002385c                vtable for Bus
 *fill*         0x00000000c0023888       0x18 
 .rodata        0x00000000c00238a0      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c00239f0       0x3c hal/clock.32
                0x00000000c00239f0                vtable for Clock
 .rodata.str1.1
                0x00000000c0023a2c       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0023a90       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023ab2       0x15 hal/device.32
 *fill*         0x00000000c0023ac7        0x1 
 .rodata._ZTV6Device
                0x00000000c0023ac8       0x2c hal/device.32
                0x00000000c0023ac8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023af4       0x2c hal/device.32
                0x00000000c0023af4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023b20       0x2c hal/diskctrl.32
                0x00000000c0023b20                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0023b4c       0x38 hal/diskphys.32
                0x00000000c0023b4c                vtable for PhysicalDisk
 .rodata        0x00000000c0023b84       0x53 hal/keybrd.32
 *fill*         0x00000000c0023bd7        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023bd8       0x34 hal/keybrd.32
                0x00000000c0023bd8                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0023c0c       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0023c50       0x2c hal/logidisk.32
                0x00000000c0023c50                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0023c7c       0x2c hal/mouse.32
                0x00000000c0023c7c                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023ca8       0x34 hal/nic.32
                0x00000000c0023ca8                vtable for NIC
 .rodata.str1.1
                0x00000000c0023cdc        0xb hal/partition.32
 *fill*         0x00000000c0023ce7        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023ce8       0x44 hal/serial.32
                0x00000000c0023ce8                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0023d2c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023d77        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023d7f       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023d7f       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0023d7f       0x47 hal/timer.32
 *fill*         0x00000000c0023dc6        0x2 
 .rodata._ZTV5Timer
                0x00000000c0023dc8       0x30 hal/timer.32
                0x00000000c0023dc8                vtable for Timer
 .rodata.str1.1
                0x00000000c0023df8       0x3e hal/vcache.32
 *fill*         0x00000000c0023e36        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023e38       0x10 hal/vcache.32
                0x00000000c0023e38                vtable for VCache
 .rodata.str1.1
                0x00000000c0023e48       0xba hal/video.32
 *fill*         0x00000000c0023f02        0x2 
 .rodata._ZTV5Video
                0x00000000c0023f04       0x4c hal/video.32
                0x00000000c0023f04                vtable for Video
 .rodata.str1.1
                0x00000000c0023f50      0x1b7 hw/acpi.32
 *fill*         0x00000000c0024107        0x1 
 .rodata.str1.4
                0x00000000c0024108       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00241a3       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00241a3        0x8 hw/acpi.32
 *fill*         0x00000000c00241a3        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00241a4       0x2c hw/acpi.32
                0x00000000c00241a4                vtable for ACPI
 .rodata.str1.1
                0x00000000c00241d0       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c00241e3       0x19 krnl/atexit.32
 .rodata.str1.1
                0x00000000c00241fc       0x13 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c002420f       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0024242        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0024245       0x87 krnl/cm.32
                                         0x89 (size before relaxing)
 .rodata.str1.1
                0x00000000c00242cc       0x21 krnl/computer.32
 *fill*         0x00000000c00242ed        0x3 
 .rodata.str1.4
                0x00000000c00242f0       0x2c krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c002431c       0x2c krnl/computer.32
                0x00000000c002431c                vtable for Computer
 .rodata.str1.1
                0x00000000c0024348       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0024384       0x3e krnl/fault.32
 *fill*         0x00000000c00243c2        0x2 
 .rodata.str1.4
                0x00000000c00243c4       0x28 krnl/fault.32
 .rodata.str1.1
                0x00000000c00243ec        0x4 krnl/intlformat.32
 .rodata.str1.4
                0x00000000c00243f0       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0024420        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c002442f       0x9f krnl/main.32
                                         0xb9 (size before relaxing)
 *fill*         0x00000000c00244ce        0x2 
 .rodata.str1.4
                0x00000000c00244d0       0x48 krnl/main.32
 .rodata.str1.1
                0x00000000c0024518       0x6f krnl/physmgr.32
 *fill*         0x00000000c0024587        0x1 
 .rodata.str1.4
                0x00000000c0024588       0xdd krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0024665       0x39 krnl/pipe.32
 *fill*         0x00000000c002469e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00246a0       0x1c krnl/pipe.32
                0x00000000c00246a0                vtable for Pipe
 .rodata.str1.1
                0x00000000c00246bc       0x54 krnl/powctrl.32
 .rodata.str1.1
                0x00000000c0024710       0xd9 krnl/resolve.32
 *fill*         0x00000000c00247e9        0x3 
 .rodata.str1.4
                0x00000000c00247ec       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c002480b      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c0024913       0x63 krnl/syscalls.32
                                         0x6b (size before relaxing)
 .rodata.str1.1
                0x00000000c0024976       0x5e krnl/terminal.32
 .rodata._ZTV7VgaText
                0x00000000c00249d4       0x1c krnl/terminal.32
                0x00000000c00249d4                vtable for VgaText
 .rodata        0x00000000c00249f0       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0024a2b       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0024a2b       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0024a2b       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0024a2b        0x8 krnl/unixfile.32
 *fill*         0x00000000c0024a2b        0x1 
 .rodata.str1.4
                0x00000000c0024a2c       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0024a4c       0x1c krnl/unixfile.32
                0x00000000c0024a4c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0024a68       0x1c krnl/unixfile.32
                0x00000000c0024a68                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0024a84      0x313 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024d97      0x173 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024f0a       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0024f1f        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024f2e        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0024f38       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0024f59       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0024f9d       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024fb2       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024fde       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c0024fef       0x91 thr/elf.32
 .rodata.str1.1
                0x00000000c0025080       0xec thr/elf2.32
 .rodata.str1.1
                0x00000000c002516c       0x6b thr/prcssthr.32
 *fill*         0x00000000c00251d7        0x1 
 .rodata.str1.4
                0x00000000c00251d8       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00252d0       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00252d0       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00252d0       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00252d0        0x8 thr/prcssthr.32
 .rodata        0x00000000c00252d0      0x4b0 vm86/vm8086.32
 .rodata        0x00000000c0025780       0x17 arch/i386/apic.32
 *fill*         0x00000000c0025797        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c0025798       0x2c arch/i386/apic.32
                0x00000000c0025798                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00257c4      0x322 arch/i386/hal.32
                                        0x335 (size before relaxing)
 *fill*         0x00000000c0025ae6        0x2 
 .rodata.str1.4
                0x00000000c0025ae8       0x23 arch/i386/hal.32
 *fill*         0x00000000c0025b0b        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025b0c       0x2c arch/i386/hal.32
                0x00000000c0025b0c                vtable for CPU
 .rodata.str1.4
                0x00000000c0025b38       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025b99       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025bd7       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0025bec       0x3c arch/i386/rtc.32
                0x00000000c0025bec                vtable for RTC
 .rodata.str1.1
                0x00000000c0025c28       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025c69        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025c6c       0x6c fs/fat/vfslink.32
                0x00000000c0025c6c                vtable for FAT
 .rodata.str1.1
                0x00000000c0025cd8       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0025cd8      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0025e10       0x6c fs/iso9660/vfslink.32
                0x00000000c0025e10                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025e7c       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0025ec0       0x34 hal/sound/sndcard.32
                0x00000000c0025ec0                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0025ef4       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025f33       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025f6b       0xa1 hw/bus/pci.32
 .rodata        0x00000000c002600c       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0026070       0x2c hw/bus/pci.32
                0x00000000c0026070                vtable for PCI
 .rodata.str1.1
                0x00000000c002609c      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c00261c0       0x2c hw/diskctrl/ide.32
                0x00000000c00261c0                vtable for IDE
 .rodata.str1.4
                0x00000000c00261ec       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0026210       0x2c hw/diskctrl/satabus.32
                0x00000000c0026210                vtable for SATABus
 .rodata.str1.1
                0x00000000c002623c       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c00262f7        0x1 
 .rodata._ZTV3ATA
                0x00000000c00262f8       0x38 hw/diskphys/ata.32
                0x00000000c00262f8                vtable for ATA
 .rodata.str1.1
                0x00000000c0026330        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c002633d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0026340       0x38 hw/diskphys/atapi.32
                0x00000000c0026340                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0026378       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0026400       0x38 hw/diskphys/sata.32
                0x00000000c0026400                vtable for SATA
 .rodata.str1.1
                0x00000000c0026438       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0026522        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0026524       0x38 hw/diskphys/satapi.32
                0x00000000c0026524                vtable for SATAPI
 .rodata.str1.1
                0x00000000c002655c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0026577        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0026578       0x30 hw/timer/apictimer.32
                0x00000000c0026578                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00265a8       0x1d hw/timer/pit.32
 *fill*         0x00000000c00265c5        0x3 
 .rodata._ZTV3PIT
                0x00000000c00265c8       0x30 hw/timer/pit.32
                0x00000000c00265c8                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00265f8      0xa6d
 *(.data)
 .data          0x00000000c00265f8        0x0 crti.32
 .data          0x00000000c00265f8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00265f8                __dso_handle
 .data          0x00000000c00265fc        0x0 acpica/utclib.32
 .data          0x00000000c00265fc        0x0 krnl/malloc.32
 .data          0x00000000c00265fc        0x0 libk/ctype.32
 .data          0x00000000c00265fc        0x0 libk/string.32
 .data          0x00000000c00265fc        0x0 arch/i386/cc.32
 .data          0x00000000c00265fc        0x0 fs/fat/diskio.32
 .data          0x00000000c00265fc        0x0 fs/fat/ff.32
 .data          0x00000000c00265fc        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00265fc        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00265fc        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00265fc        0x0 dbg/kconsole.32
 *fill*         0x00000000c00265fc        0x4 
 .data          0x00000000c0026600       0x28 dbg/usban.32
                0x00000000c0026600                KiUsbanTypeMismatchTypes
 .data          0x00000000c0026628        0x0 fs/symlink.32
 .data          0x00000000c0026628        0x0 fs/vfs.32
 .data          0x00000000c0026628        0x0 hal/bus.32
 .data          0x00000000c0026628        0x0 hal/buzzer.32
 .data          0x00000000c0026628        0x0 hal/clock.32
 .data          0x00000000c0026628        0x0 hal/device.32
 .data          0x00000000c0026628        0x0 hal/diskctrl.32
 .data          0x00000000c0026628        0x0 hal/diskphys.32
 .data          0x00000000c0026628        0x0 hal/fpu.32
 .data          0x00000000c0026628        0x0 hal/keybrd.32
 .data          0x00000000c0026628        0x0 hal/logidisk.32
 .data          0x00000000c0026628        0x0 hal/mouse.32
 .data          0x00000000c0026628        0x0 hal/nic.32
 .data          0x00000000c0026628        0x0 hal/partition.32
 .data          0x00000000c0026628        0x0 hal/serial.32
 .data          0x00000000c0026628        0x0 hal/timer.32
 .data          0x00000000c0026628        0x0 hal/vcache.32
 .data          0x00000000c0026628        0x0 hal/video.32
 .data          0x00000000c0026628       0x10 hw/acpi.32
                0x00000000c0026628                legacyIRQRemaps
 .data          0x00000000c0026638        0x0 krnl/assert.32
 .data          0x00000000c0026638        0x0 krnl/atexit.32
 .data          0x00000000c0026638        0x0 krnl/bootflags.32
 .data          0x00000000c0026638        0x0 krnl/bootmsg.32
 .data          0x00000000c0026638        0x4 krnl/c++.32
                0x00000000c0026638                __stack_chk_guard
 .data          0x00000000c002663c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002663c        0x4 
 .data          0x00000000c0026640      0x100 krnl/cm.32
                0x00000000c0026640                CmComponents
 .data          0x00000000c0026740        0x0 krnl/computer.32
 .data          0x00000000c0026740      0x400 krnl/crc32.32
                0x00000000c0026740                KiPolyLookupCRC32
 .data          0x00000000c0026b40       0x4d krnl/env.32
                0x00000000c0026b40                defaultSysEnv
 .data          0x00000000c0026b8d        0x0 krnl/fault.32
 .data          0x00000000c0026b8d        0x0 krnl/gdt.32
 .data          0x00000000c0026b8d        0x0 krnl/idle.32
 .data          0x00000000c0026b8d        0x0 krnl/idt.32
 .data          0x00000000c0026b8d        0x0 krnl/inlines.32
 .data          0x00000000c0026b8d        0x0 krnl/intlformat.32
 .data          0x00000000c0026b8d        0x0 krnl/intops.32
 *fill*         0x00000000c0026b8d        0x3 
 .data          0x00000000c0026b90        0x4 krnl/kheap.32
 .data          0x00000000c0026b94        0x0 krnl/mailbox.32
 .data          0x00000000c0026b94        0x0 krnl/main.32
 .data          0x00000000c0026b94        0x0 krnl/mutex.32
 .data          0x00000000c0026b94        0x0 krnl/panic.32
 .data          0x00000000c0026b94        0x4 krnl/physmgr.32
                0x00000000c0026b94                Phys::bitmap
 .data          0x00000000c0026b98        0x0 krnl/pipe.32
 .data          0x00000000c0026b98        0x0 krnl/powctrl.32
 .data          0x00000000c0026b98        0x0 krnl/random.32
 .data          0x00000000c0026b98        0x0 krnl/resolve.32
 .data          0x00000000c0026b98        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026b98        0x8 
 .data          0x00000000c0026ba0       0x4c krnl/signal.32
                0x00000000c0026ba0                KiDefaultSignalHandlers
 *fill*         0x00000000c0026bec       0x14 
 .data          0x00000000c0026c00      0x124 krnl/syscalls.32
                0x00000000c0026c00                systemCallHandlers
 *fill*         0x00000000c0026d24       0x1c 
 .data          0x00000000c0026d40       0x60 krnl/terminal.32
                0x00000000c0026d40                VgaText::hiddenOut
                0x00000000c0026d60                ansiToVGAMappings
 .data          0x00000000c0026da0        0x0 krnl/tss.32
 .data          0x00000000c0026da0        0x4 krnl/unixfile.32
                0x00000000c0026da0                UnixFile::nextFd
 .data          0x00000000c0026da4       0x15 krnl/virtmgr.32
                0x00000000c0026da4                Virt::pageAllocPtr
                0x00000000c0026da8                Virt::bitmap
                0x00000000c0026dac                Virt::swapfileSectorsPerPage
                0x00000000c0026db0                Virt::swapfileLength
                0x00000000c0026db4                Virt::swapfileSector
                0x00000000c0026db8                Virt::swapfileDrive
 .data          0x00000000c0026db9        0x0 sys/alarm.32
 .data          0x00000000c0026db9        0x0 sys/eject.32
 .data          0x00000000c0026db9        0x0 sys/exit.32
 .data          0x00000000c0026db9        0x0 sys/getcwd.32
 .data          0x00000000c0026db9        0x0 sys/getpid.32
 .data          0x00000000c0026db9        0x0 sys/getramdata.32
 .data          0x00000000c0026db9        0x0 sys/getvgaptr.32
 .data          0x00000000c0026db9        0x0 sys/kill.32
 .data          0x00000000c0026db9        0x0 sys/loaddll.32
 .data          0x00000000c0026db9        0x0 sys/pause.32
 .data          0x00000000c0026db9        0x0 sys/pthread.32
 .data          0x00000000c0026db9        0x0 sys/read.32
 .data          0x00000000c0026db9        0x0 sys/registersignal.32
 .data          0x00000000c0026db9        0x0 sys/registry.32
 .data          0x00000000c0026db9        0x0 sys/sbrk.32
 .data          0x00000000c0026db9        0x0 sys/setcwd.32
 .data          0x00000000c0026db9        0x0 sys/settime.32
 .data          0x00000000c0026db9        0x0 sys/symlink.32
 .data          0x00000000c0026db9        0x0 sys/timezone.32
 .data          0x00000000c0026db9        0x0 sys/truncate.32
 .data          0x00000000c0026db9        0x0 sys/write.32
 .data          0x00000000c0026db9        0x0 sys/wsbe.32
 .data          0x00000000c0026db9        0x0 sys/yield.32
 .data          0x00000000c0026db9        0x0 thr/alarm.32
 .data          0x00000000c0026db9        0x0 thr/elf.32
 .data          0x00000000c0026db9        0x0 thr/elf2.32
 .data          0x00000000c0026db9        0x0 thr/exec.32
 *fill*         0x00000000c0026db9        0x3 
 .data          0x00000000c0026dbc        0x4 thr/prcssthr.32
                0x00000000c0026dbc                keNextPID
 .data          0x00000000c0026dc0        0x0 vm86/vm8086.32
 .data          0x00000000c0026dc0        0x0 arch/i386/apic.32
 .data          0x00000000c0026dc0      0x2a4 arch/i386/hal.32
                0x00000000c0026dc0                exceptionNames
                0x00000000c0027060                lastCode
 .data          0x00000000c0027064        0x0 arch/i386/intctrl.32
 .data          0x00000000c0027064        0x0 arch/i386/pic.32
 .data          0x00000000c0027064        0x0 arch/i386/rtc.32
 .data          0x00000000c0027064        0x0 arch/i386/vga.32
 .data          0x00000000c0027064        0x0 fs/fat/vfslink.32
 .data          0x00000000c0027064        0x0 fs/iso9660/helper.32
 .data          0x00000000c0027064        0x1 fs/iso9660/vfslink.32
                0x00000000c0027064                recentDriveletter
 .data          0x00000000c0027065        0x0 hal/sound/sndcard.32
 .data          0x00000000c0027065        0x0 hal/sound/sndport.32
 .data          0x00000000c0027065        0x0 hw/bus/pci.32
 .data          0x00000000c0027065        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0027065        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0027065        0x0 hw/diskphys/ata.32
 .data          0x00000000c0027065        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0027065        0x0 hw/diskphys/sata.32
 .data          0x00000000c0027065        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0027065        0x0 hw/timer/apictimer.32
 .data          0x00000000c0027065        0x0 hw/timer/pit.32
 .data          0x00000000c0027065        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0027065        0x0 crtn.32
 .data          0x00000000c0027065        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0027065        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0027065        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0027065        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0027068        0x0
 .got           0x00000000c0027068        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0027068        0x0
 .got.plt       0x00000000c0027068        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0027068        0x0
 .igot.plt      0x00000000c0027068        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0027068        0x0
 .tm_clone_table
                0x00000000c0027068        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0027068        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0027065      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0027065        0x3 
 .eh_frame      0x00000000c0027068        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0027068        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0027068       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00270c0       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0027100       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002716c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0028000       0x7d
 *(userkernel)
 userkernel     0x00000000c0028000       0x52 krnl/signal.32
                0x00000000c0028000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002802c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0028052       0x2b krnl/syscalls.32
                0x00000000c0028052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0029000        0x1
 *(align_previous)
 align_previous
                0x00000000c0029000        0x1 krnl/signal.32
                0x00000000c0029000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0029004        0x0
 .rel.got       0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0029001     0x6dbb
                0x00000000c0029001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0029001       0x1f 
 COMMON         0x00000000c0029020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0029020                dcache
                0x00000000c0029060                cdDriveLetter
                0x00000000c0029080                icache
 *(.bss)
 .bss           0x00000000c00290c0        0x0 crti.32
 .bss           0x00000000c00290c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00290e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00290e4       0x1c 
 .bss           0x00000000c0029100      0x378 krnl/malloc.32
 .bss           0x00000000c0029478        0x0 libk/ctype.32
 .bss           0x00000000c0029478        0x0 libk/string.32
 .bss           0x00000000c0029478        0x0 arch/i386/cc.32
 .bss           0x00000000c0029478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0029478        0x8 
 .bss           0x00000000c0029480       0x88 fs/fat/ff.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0029508       0x18 
 .bss           0x00000000c0029520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0029eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0029eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0029eb8        0x8 
 .bss           0x00000000c0029ec0     0x2444 fs/symlink.32
                0x00000000c0029ec0                kiNumWaitingRoomSymlinks
                0x00000000c0029ee0                kiNewlyCreatedIDs
                0x00000000c0029f00                kiNewlyCreatedSymlinks
                0x00000000c002a300                kiSymlinkHashTable
                0x00000000c002c300                kiBaseSymlinkID
 .bss           0x00000000c002c304        0x4 fs/vfs.32
                0x00000000c002c304                installedFilesystems
 .bss           0x00000000c002c308        0x0 hal/bus.32
 .bss           0x00000000c002c308        0x0 hal/buzzer.32
 *fill*         0x00000000c002c308       0x18 
 .bss           0x00000000c002c320      0x348 hal/clock.32
                0x00000000c002c320                keLoadedTimezones
                0x00000000c002c324                keNumberOfTimezones
                0x00000000c002c340                keTimezoneStrings
                0x00000000c002c660                keDstOn
                0x00000000c002c661                keTimezoneHalfHourOffset
                0x00000000c002c664                keTimezoneHourOffset
 .bss           0x00000000c002c668        0x0 hal/device.32
 .bss           0x00000000c002c668        0x0 hal/diskctrl.32
 .bss           0x00000000c002c668        0x0 hal/diskphys.32
 .bss           0x00000000c002c668        0x0 hal/fpu.32
 *fill*         0x00000000c002c668       0x18 
 .bss           0x00000000c002c680      0x428 hal/keybrd.32
                0x00000000c002c680                keyboardWaitingTaskList
                0x00000000c002c684                keyboardSetupYet
                0x00000000c002c688                guiKeyboardHandler
                0x00000000c002c6a0                keystates
 *fill*         0x00000000c002caa8       0x18 
 .bss           0x00000000c002cac0       0x88 hal/logidisk.32
                0x00000000c002cac0                diskAssignments
                0x00000000c002cae0                disks
 .bss           0x00000000c002cb48        0x4 hal/mouse.32
                0x00000000c002cb48                guiMouseHandler
 .bss           0x00000000c002cb4c        0x0 hal/nic.32
 .bss           0x00000000c002cb4c        0x0 hal/partition.32
 .bss           0x00000000c002cb4c        0x0 hal/serial.32
 *fill*         0x00000000c002cb4c        0x4 
 .bss           0x00000000c002cb50        0x8 hal/timer.32
                0x00000000c002cb50                milliTenthsSinceBoot
 .bss           0x00000000c002cb58        0x0 hal/vcache.32
 .bss           0x00000000c002cb58        0x4 hal/video.32
                0x00000000c002cb58                screen
 *fill*         0x00000000c002cb5c        0x4 
 .bss           0x00000000c002cb60      0x480 hw/acpi.32
                0x00000000c002cb60                nextACPITable
                0x00000000c002cb80                acpiTables
                0x00000000c002cd80                usingXSDT
                0x00000000c002cd84                RSDTpointer
                0x00000000c002cd88                RSDPpointer
                0x00000000c002cd8c                nextAPICNMI
                0x00000000c002cda0                apicNMIInfo
                0x00000000c002ce20                legacyIRQFlags
                0x00000000c002ce40                ioapicDiscoveryNumber
                0x00000000c002ce60                ioapicFoundInMADT
                0x00000000c002ce80                ioapicAddresses
                0x00000000c002cf00                ioapicGSIBase
                0x00000000c002cf80                processorDiscoveryNumber
                0x00000000c002cfa0                matchingAPICID
                0x00000000c002cfc0                processorID
 .bss           0x00000000c002cfe0        0x0 krnl/assert.32
 .bss           0x00000000c002cfe0      0x120 krnl/atexit.32
                0x00000000c002cfe0                kiNextAtexitHandler
                0x00000000c002d000                kiAtexitContexts
                0x00000000c002d080                kiAtexitHandlers
 .bss           0x00000000c002d100        0x4 krnl/bootflags.32
                0x00000000c002d100                keBootSettings
 .bss           0x00000000c002d104        0x0 krnl/bootmsg.32
 .bss           0x00000000c002d104        0x0 krnl/c++.32
 .bss           0x00000000c002d104        0x0 krnl/cdefs.32
 .bss           0x00000000c002d104        0x4 krnl/cm.32
 .bss           0x00000000c002d108        0x6 krnl/computer.32
                0x00000000c002d108                computer
                0x00000000c002d10c                keIsPreemptionOn
                0x00000000c002d10d                keIsSchedulingOn
 .bss           0x00000000c002d10e        0x0 krnl/crc32.32
 *fill*         0x00000000c002d10e        0x2 
 .bss           0x00000000c002d110        0x8 krnl/env.32
                0x00000000c002d110                KeUserEnv
                0x00000000c002d114                KeSystemEnv
 .bss           0x00000000c002d118        0x0 krnl/fault.32
 .bss           0x00000000c002d118        0x6 krnl/gdt.32
                0x00000000c002d118                gdtDescr
 .bss           0x00000000c002d11e        0x0 krnl/idle.32
 *fill*         0x00000000c002d11e        0x2 
 .bss           0x00000000c002d120        0x6 krnl/idt.32
                0x00000000c002d120                idtDescr
 .bss           0x00000000c002d126        0x0 krnl/inlines.32
 *fill*         0x00000000c002d126       0x1a 
 .bss           0x00000000c002d140       0x24 krnl/intlformat.32
                0x00000000c002d140                keLocale
 .bss           0x00000000c002d164        0x0 krnl/intops.32
 .bss           0x00000000c002d164        0x0 krnl/kheap.32
 .bss           0x00000000c002d164        0x0 krnl/mailbox.32
 .bss           0x00000000c002d164        0x0 krnl/main.32
 .bss           0x00000000c002d164        0x0 krnl/mutex.32
 .bss           0x00000000c002d164        0x1 krnl/panic.32
                0x00000000c002d164                keKernelPanicHappening
 *fill*         0x00000000c002d165        0x3 
 .bss           0x00000000c002d168       0x28 krnl/physmgr.32
                0x00000000c002d168                Phys::forbidEvictions
                0x00000000c002d16c                Phys::currentPagePointer
                0x00000000c002d170                Phys::highestMem
                0x00000000c002d174                Phys::oldPercent
                0x00000000c002d178                Phys::usedPages
                0x00000000c002d17c                Phys::usablePages
                0x00000000c002d180                Phys::dmaUsage
 .bss           0x00000000c002d190        0x0 krnl/pipe.32
 *fill*         0x00000000c002d190       0x10 
 .bss           0x00000000c002d1a0       0x48 krnl/powctrl.32
                0x00000000c002d1a0                keSleepFunction
                0x00000000c002d1a4                keRestartFunction
                0x00000000c002d1a8                keShutdownFunction
                0x00000000c002d1ac                powCtrlOnBattery
                0x00000000c002d1c0                currentPowerSettings
                0x00000000c002d1e4                secondsSinceLastUserIO
 .bss           0x00000000c002d1e8        0x8 krnl/random.32
                0x00000000c002d1e8                kiRandSeed
 .bss           0x00000000c002d1f0        0x0 krnl/resolve.32
 .bss           0x00000000c002d1f0        0x0 krnl/semaphore.32
 .bss           0x00000000c002d1f0        0x0 krnl/signal.32
 .bss           0x00000000c002d1f0        0x0 krnl/syscalls.32
 .bss           0x00000000c002d1f0        0x9 krnl/terminal.32
                0x00000000c002d1f0                terminalCycle
                0x00000000c002d1f4                activeTerminal
                0x00000000c002d1f8                VgaText::graphicMode
 *fill*         0x00000000c002d1f9        0x1 
 .bss           0x00000000c002d1fa        0x2 krnl/tss.32
                0x00000000c002d1fa                doubleFaultSelector
 *fill*         0x00000000c002d1fc        0x4 
 .bss           0x00000000c002d200       0x84 krnl/unixfile.32
                0x00000000c002d200                sfileLpt
                0x00000000c002d240                sfileCom
                0x00000000c002d264                sfileNul
                0x00000000c002d268                sfilePnt
                0x00000000c002d26c                sfileAux
                0x00000000c002d270                sfileCon
                0x00000000c002d274                initialFilesAdded
                0x00000000c002d278                unixFileLinkedList
 .bss           0x00000000c002d284       0x10 krnl/virtmgr.32
                0x00000000c002d284                twswaps
                0x00000000c002d288                swapBalance
                0x00000000c002d28c                Virt::swapfileBitmap
                0x00000000c002d290                keFirstVAS
 .bss           0x00000000c002d294        0x0 sys/alarm.32
 .bss           0x00000000c002d294        0x0 sys/eject.32
 .bss           0x00000000c002d294        0x0 sys/exit.32
 .bss           0x00000000c002d294        0x0 sys/getcwd.32
 .bss           0x00000000c002d294        0x0 sys/getpid.32
 .bss           0x00000000c002d294        0x0 sys/getramdata.32
 .bss           0x00000000c002d294        0x0 sys/getvgaptr.32
 .bss           0x00000000c002d294        0x0 sys/kill.32
 .bss           0x00000000c002d294        0x0 sys/loaddll.32
 .bss           0x00000000c002d294        0x0 sys/pause.32
 .bss           0x00000000c002d294        0x0 sys/pthread.32
 .bss           0x00000000c002d294        0x0 sys/read.32
 .bss           0x00000000c002d294        0x0 sys/registersignal.32
 .bss           0x00000000c002d294        0x0 sys/registry.32
 .bss           0x00000000c002d294        0x0 sys/sbrk.32
 .bss           0x00000000c002d294        0x0 sys/setcwd.32
 .bss           0x00000000c002d294        0x0 sys/settime.32
 .bss           0x00000000c002d294        0x0 sys/symlink.32
 .bss           0x00000000c002d294        0x0 sys/timezone.32
 .bss           0x00000000c002d294        0x0 sys/truncate.32
 .bss           0x00000000c002d294        0x0 sys/write.32
 .bss           0x00000000c002d294        0x0 sys/wsbe.32
 .bss           0x00000000c002d294        0x0 sys/yield.32
 .bss           0x00000000c002d294        0x0 thr/alarm.32
 *fill*         0x00000000c002d294        0xc 
 .bss           0x00000000c002d2a0       0x64 thr/elf.32
                0x00000000c002d2a0                Thr::kernelSymbols
                0x00000000c002d2c0                Thr::kernelStringTable
                0x00000000c002d2e0                Thr::kernelSymbolTable
                0x00000000c002d300                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002d304        0x0 thr/elf2.32
 .bss           0x00000000c002d304        0x0 thr/exec.32
 *fill*         0x00000000c002d304        0x4 
 .bss           0x00000000c002d308       0x70 thr/prcssthr.32
                0x00000000c002d308                keRestorePreemptionValue
                0x00000000c002d30c                kePreemptionDisableCounter
                0x00000000c002d310                cleanerThread
                0x00000000c002d314                weNeedTheCleanerToNotBlock
                0x00000000c002d318                retValLockStuff
                0x00000000c002d31c                retValSchedLock
                0x00000000c002d320                lockStuffLock
                0x00000000c002d324                schedulerLock
                0x00000000c002d328                taskSwitchesPostponedFlag
                0x00000000c002d32c                postponeTaskSwitchesCounter
                0x00000000c002d330                irqDisableCounter
                0x00000000c002d334                terminatedTaskList
                0x00000000c002d340                sleepingTaskList
                0x00000000c002d34c                taskList
                0x00000000c002d358                kernelProcess
 *fill*         0x00000000c002d378        0x8 
 .bss           0x00000000c002d380       0x40 vm86/vm8086.32
                0x00000000c002d380                Vm::started8086Yet
                0x00000000c002d384                Vm::vmRetV
                0x00000000c002d388                Vm::vmDone
                0x00000000c002d389                Vm::vmReady
                0x00000000c002d38c                Vm::vm86Thread
                0x00000000c002d390                Vm::vmToHostCommsPtr
                0x00000000c002d3a0                Vm::vmToHostComms
 .bss           0x00000000c002d3c0       0x41 arch/i386/apic.32
                0x00000000c002d3c0                noOfIOAPICs
                0x00000000c002d3e0                ioapics
                0x00000000c002d400                IOAPICsSetupYet
 *fill*         0x00000000c002d401        0x3 
 .bss           0x00000000c002d404       0x50 arch/i386/hal.32
                0x00000000c002d404                guiPanicHandler
                0x00000000c002d408                fpuOwner
                0x00000000c002d40c                coproLoadFunc
                0x00000000c002d410                coproSaveFunc
                0x00000000c002d414                lastD
                0x00000000c002d418                lastC
                0x00000000c002d41c                lastB
                0x00000000c002d420                lastA
                0x00000000c002d424                HalPageWriteCombiningFlag
                0x00000000c002d428                HalPageGlobalFlag
                0x00000000c002d42c                keNMIEnabled
                0x00000000c002d430                vendorIDString
                0x00000000c002d43d                familyID
                0x00000000c002d43e                model
                0x00000000c002d43f                processorType
                0x00000000c002d440                steppingID
                0x00000000c002d444                vendor
                0x00000000c002d448                opcodeDetectionMode
                0x00000000c002d44c                features
 *fill*         0x00000000c002d454        0xc 
 .bss           0x00000000c002d460     0x2000 arch/i386/intctrl.32
                0x00000000c002d460                keInterruptContexts
                0x00000000c002e460                keInterruptHandlers
 .bss           0x00000000c002f460        0x0 arch/i386/pic.32
 .bss           0x00000000c002f460        0x2 arch/i386/rtc.32
 .bss           0x00000000c002f462        0x0 arch/i386/vga.32
 *fill*         0x00000000c002f462       0x1e 
 .bss           0x00000000c002f480       0xf0 fs/fat/vfslink.32
                0x00000000c002f480                FAT::fats
                0x00000000c002f4a0                FAT::vfsToFatRemaps
                0x00000000c002f520                fatToVFSRemaps
 .bss           0x00000000c002f570        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002f570       0x10 
 .bss           0x00000000c002f580      0x820 fs/iso9660/vfslink.32
                0x00000000c002f580                iso9660Owner
                0x00000000c002f584                recentSector
                0x00000000c002f5a0                recentBuffer
 .bss           0x00000000c002fda0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002fda0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002fda0        0xd hw/bus/pci.32
                0x00000000c002fda0                thePCI
 .bss           0x00000000c002fdad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002fdad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002fdad        0x3 
 .bss           0x00000000c002fdb0        0x8 hw/diskphys/ata.32
                0x00000000c002fdb0                ataSectorsWritten
                0x00000000c002fdb4                ataSectorsRead
 .bss           0x00000000c002fdb8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002fdb8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002fdb8        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c002fdb8        0x0 hw/timer/apictimer.32
 .bss           0x00000000c002fdb8        0x4 hw/timer/pit.32
                0x00000000c002fdb8                pitFreq
 .bss           0x00000000c002fdbc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002fdbc        0x0 crtn.32
 .bss           0x00000000c002fdbc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002fdbc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002fdbc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002fdbc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002fdbc                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0036b77                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
