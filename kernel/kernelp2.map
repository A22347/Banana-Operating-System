Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/cpu.32
 .group         0x0000000000000000        0xc arch/i386/cpu.32
 .comment       0x0000000000000000       0x12 arch/i386/cpu.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/cpu.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1fffa
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x225 dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006ef0                Dbg::logs(char*)
                0x00000000c0006f0f                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f2d                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f4e                Dbg::kprintf(char const*, ...)
 .text          0x00000000c0007084      0x2d4 dbg/usban.32
                0x00000000c0007084                KiUbsanPrintDetails(char const*, void*)
                0x00000000c00070f0                __ubsan_handle_type_mismatch_v1
                0x00000000c00071cc                __ubsan_handle_pointer_overflow
                0x00000000c00071f8                __ubsan_handle_out_of_bounds
                0x00000000c0007224                __ubsan_handle_add_overflow
                0x00000000c0007250                __ubsan_handle_load_invalid_value
                0x00000000c000727c                __ubsan_handle_divrem_overflow
                0x00000000c00072a8                __ubsan_handle_mul_overflow
                0x00000000c00072d4                __ubsan_handle_sub_overflow
                0x00000000c0007300                __ubsan_handle_shift_out_of_bounds
                0x00000000c000732c                __ubsan_handle_negate_overflow
 .text          0x00000000c0007358      0x812 fs/symlink.32
                0x00000000c00074a7                KiDeinitialiseSymlinks(void*)
                0x00000000c0007538                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075bb                KeInitialiseSymlinks()
                0x00000000c000771d                KiIsSymlinkRegistered(char const*)
                0x00000000c0007887                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a2e                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b6a      0xd7c fs/vfs.32
                0x00000000c0007b6a                File::read(unsigned long long, void*, int*)
                0x00000000c0007bc2                File::write(unsigned long long, void*, int*)
                0x00000000c0007c1a                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c72                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007ca0                File::isAtty()
                0x00000000c0007ca4                Directory::isAtty()
                0x00000000c0007ca8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cae                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cb4                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cba                File::~File()
                0x00000000c0007cba                File::~File()
                0x00000000c0007cde                File::~File()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d2c                Directory::~Directory()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d88                Filesystem::~Filesystem()
                0x00000000c0007dac                Fs::getcwd(Process*, char*, int)
                0x00000000c0007dd6                Fs::initVFS()
                0x00000000c0007e00                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000810c                File::File(char const*, Process*)
                0x00000000c000810c                File::File(char const*, Process*)
                0x00000000c000812a                File::open(FileOpenMode)
                0x00000000c0008188                File::close()
                0x00000000c00081e8                File::seek(unsigned long long)
                0x00000000c000823e                File::truncate(unsigned long long)
                0x00000000c0008294                File::tell(unsigned long long*)
                0x00000000c00082e4                File::rewind()
                0x00000000c00082f8                File::unlink()
                0x00000000c0008344                File::rename(char const*)
                0x00000000c0008392                File::chfatattr(unsigned char, unsigned char)
                0x00000000c00083ee                File::exists()
                0x00000000c000842c                File::stat(unsigned long long*, bool*)
                0x00000000c000848d                Fs::setcwd(Process*, char*)
                0x00000000c00085ec                Directory::Directory(char const*, Process*)
                0x00000000c00085ec                Directory::Directory(char const*, Process*)
                0x00000000c00086b4                Directory::open()
                0x00000000c0008710                Directory::close()
                0x00000000c0008770                Directory::unlink()
                0x00000000c00087bc                Directory::rename(char const*)
                0x00000000c000880a                Directory::exists()
                0x00000000c0008848                Directory::read(dirent*)
                0x00000000c0008894                Directory::create()
                0x00000000c00088e0                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c00088e6        0x2 
 .text          0x00000000c00088e8       0x86 hal/bus.32
                0x00000000c00088e8                Bus::Bus(char const*)
                0x00000000c00088e8                Bus::Bus(char const*)
                0x00000000c0008920                Bus::~Bus()
                0x00000000c0008920                Bus::~Bus()
                0x00000000c0008944                Bus::~Bus()
 .text          0x00000000c000896e       0x96 hal/buzzer.32
                0x00000000c000896e                beepThread(void*)
                0x00000000c00089ab                Krnl::beep(int, int, bool)
 .text          0x00000000c0008a04      0x51b hal/clock.32
                0x00000000c0008a04                User::loadClockSettings()
                0x00000000c0008b0c                Clock::Clock(char const*)
                0x00000000c0008b0c                Clock::Clock(char const*)
                0x00000000c0008b42                Clock::~Clock()
                0x00000000c0008b42                Clock::~Clock()
                0x00000000c0008b66                Clock::~Clock()
                0x00000000c0008b90                Clock::timeInSecondsLocal()
                0x00000000c0008bd8                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0008c31                datetimeToSeconds(datetime_t)
                0x00000000c0008d56                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0008db6                secondsToDatetime(unsigned long long)
                0x00000000c0008efa                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0008f1f        0x1 
 .text          0x00000000c0008f20      0x47a hal/device.32
                0x00000000c0008f20                Device::hibernate()
                0x00000000c0008f22                Device::wake()
                0x00000000c0008f24                Device::detect()
                0x00000000c0008f26                Device::disableLegacy()
                0x00000000c0008f28                Device::powerSaving(PowerSavingLevel)
                0x00000000c0008f2a                DriverlessDevice::close(int, int, void*)
                0x00000000c0008f2e                DriverlessDevice::detect()
                0x00000000c0008f30                DriverlessDevice::open(int, int, void*)
                0x00000000c0008f44                Device::~Device()
                0x00000000c0008f44                Device::~Device()
                0x00000000c0008f52                Device::~Device()
                0x00000000c0008f7a                Device::findAndLoadDriver()
                0x00000000c0008f88                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0008fae                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0008fee                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009018                Device::getParent()
                0x00000000c0009024                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009042                Device::addChild(Device*)
                0x00000000c0009086                Device::removeAllChildren()
                0x00000000c00090cc                Device::hibernateAll()
                0x00000000c00090fc                Device::wakeAll()
                0x00000000c000912c                Device::detectAll()
                0x00000000c000915c                Device::disableLegacyAll()
                0x00000000c000915e                Device::loadDriversForAll()
                0x00000000c0009160                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009196                Device::setName(char const*)
                0x00000000c00091a4                Device::Device(char const*)
                0x00000000c00091a4                Device::Device(char const*)
                0x00000000c00092a0                Device::getName()
                0x00000000c00092aa                Device::closeAll()
                0x00000000c00092f6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00092f6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000932c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009370                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000939a        0x2 
 .text          0x00000000c000939c       0x86 hal/diskctrl.32
                0x00000000c000939c                HardDiskController::HardDiskController(char const*)
                0x00000000c000939c                HardDiskController::HardDiskController(char const*)
                0x00000000c00093d4                HardDiskController::~HardDiskController()
                0x00000000c00093d4                HardDiskController::~HardDiskController()
                0x00000000c00093f8                HardDiskController::~HardDiskController()
 .text          0x00000000c0009422       0xe2 hal/diskphys.32
                0x00000000c0009422                PhysicalDisk::eject()
                0x00000000c0009426                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009426                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000948e                PhysicalDisk::startCache()
                0x00000000c00094b6                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094b6                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094da                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009504        0x0 hal/fpu.32
 .text          0x00000000c0009504        0x0 hal/intctrl.32
 .text          0x00000000c0009504      0x8bc hal/keybrd.32
                0x00000000c0009504                startGUI(void*)
                0x00000000c000956e                startGUIVESA(void*)
                0x00000000c00095d8                sendKeyToTerminal(unsigned char)
                0x00000000c00096b3                sendKeyboardToken(KeyboardToken)
                0x00000000c0009b6f                clearInternalKeybuffer(VgaText*)
                0x00000000c0009ba4                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0009d36                Keyboard::Keyboard(char const*)
                0x00000000c0009d36                Keyboard::Keyboard(char const*)
                0x00000000c0009d72                Keyboard::~Keyboard()
                0x00000000c0009d72                Keyboard::~Keyboard()
                0x00000000c0009d96                Keyboard::~Keyboard()
 .text          0x00000000c0009dc0      0x3f8 hal/logidisk.32
                0x00000000c0009dc0                LogicalDisk::close(int, int, void*)
                0x00000000c0009dc4                LogicalDisk::~LogicalDisk()
                0x00000000c0009dc4                LogicalDisk::~LogicalDisk()
                0x00000000c0009de8                LogicalDisk::~LogicalDisk()
                0x00000000c0009e12                LogicalDisk::open(int, int, void*)
                0x00000000c0009e26                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0009e5e                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0009ea4                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009ea4                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009f64                LogicalDisk::assignDriveLetter()
                0x00000000c000a01e                LogicalDisk::mount()
                0x00000000c000a066                LogicalDisk::unmount()
                0x00000000c000a076                LogicalDisk::eject()
                0x00000000c000a08a                LogicalDisk::unassignDriveLetter()
                0x00000000c000a0e0                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000a14c                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000a1b8       0x86 hal/mouse.32
                0x00000000c000a1b8                Mouse::Mouse(char const*)
                0x00000000c000a1b8                Mouse::Mouse(char const*)
                0x00000000c000a1f0                Mouse::~Mouse()
                0x00000000c000a1f0                Mouse::~Mouse()
                0x00000000c000a214                Mouse::~Mouse()
 .text          0x00000000c000a23e       0x90 hal/nic.32
                0x00000000c000a23e                NIC::getMAC()
                0x00000000c000a244                NIC::write(int, unsigned char*, int*)
                0x00000000c000a24a                NIC::NIC(char const*)
                0x00000000c000a24a                NIC::NIC(char const*)
                0x00000000c000a280                NIC::~NIC()
                0x00000000c000a280                NIC::~NIC()
                0x00000000c000a2a4                NIC::~NIC()
 .text          0x00000000c000a2ce      0x33b hal/partition.32
                0x00000000c000a2ce                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a376                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000a609        0x3 
 .text          0x00000000c000a60c       0x86 hal/serial.32
                0x00000000c000a60c                Serial::Serial(char const*)
                0x00000000c000a60c                Serial::Serial(char const*)
                0x00000000c000a644                Serial::~Serial()
                0x00000000c000a644                Serial::~Serial()
                0x00000000c000a668                Serial::~Serial()
 *fill*         0x00000000c000a692        0x2 
 .text          0x00000000c000a694      0x230 hal/timer.32
                0x00000000c000a694                Timer::Timer(char const*)
                0x00000000c000a694                Timer::Timer(char const*)
                0x00000000c000a6cc                Timer::~Timer()
                0x00000000c000a6cc                Timer::~Timer()
                0x00000000c000a6f0                Timer::~Timer()
                0x00000000c000a71a                Timer::read()
                0x00000000c000a725                setupTimer(int)
                0x00000000c000a760                timerHandler(unsigned int)
 .text          0x00000000c000a8c4      0x444 hal/vcache.32
                0x00000000c000a8c4                VCache::VCache(PhysicalDisk*)
                0x00000000c000a8c4                VCache::VCache(PhysicalDisk*)
                0x00000000c000aa34                VCache::invalidateReadBuffer()
                0x00000000c000aa44                VCache::writeWriteBuffer()
                0x00000000c000aa90                VCache::~VCache()
                0x00000000c000aa90                VCache::~VCache()
                0x00000000c000aae8                VCache::~VCache()
                0x00000000c000ab10                VCache::write(unsigned long long, int, void*)
                0x00000000c000ac00                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ad08      0x71d hal/video.32
                0x00000000c000ad08                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ad54                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000adc4                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000ae54                Video::clearScreen(unsigned int)
                0x00000000c000ae88                Video::putpixel(int, int, unsigned int)
                0x00000000c000ae96                Video::readPixelApprox(int, int)
                0x00000000c000aeaa                Video::Video(char const*)
                0x00000000c000aeaa                Video::Video(char const*)
                0x00000000c000aee0                Video::~Video()
                0x00000000c000aee0                Video::~Video()
                0x00000000c000af04                Video::~Video()
                0x00000000c000af2e                Video::isMonochrome()
                0x00000000c000af3a                Video::getWidth()
                0x00000000c000af46                Video::getHeight()
                0x00000000c000af52                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000b00e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000b3b4                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000b425        0x3 
 .text          0x00000000c000b428     0x1096 hw/acpi.32
                0x00000000c000b428                ACPI::close(int, int, void*)
                0x00000000c000b430                loadACPITables(unsigned char*)
                0x00000000c000b690                findRSDT(unsigned char*)
                0x00000000c000b7dc                findDataTable(unsigned char*, char*)
                0x00000000c000b850                scanMADT()
                0x00000000c000bca8                ACPI::ACPI()
                0x00000000c000bca8                ACPI::ACPI()
                0x00000000c000bcfc                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000bdf8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000bec4                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000becc                ACPI::detectPCI()
                0x00000000c000c0d8                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000c0f0                ACPI::open(int, int, void*)
 .text          0x00000000c000c4be       0xb6 krnl/atexit.32
                0x00000000c000c4be                KeInitialiseAtexit()
                0x00000000c000c4dd                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000c511                KeExecuteAtexit()
 .text          0x00000000c000c574       0x9f krnl/bootmsg.32
                0x00000000c000c574                KeDisplaySplashScreen()
                0x00000000c000c5a3                KeSetBootMessage(char const*)
 .text          0x00000000c000c613       0x5f krnl/c++.32
                0x00000000c000c613                __cxa_atexit
                0x00000000c000c616                __cxa_finalize
                0x00000000c000c617                __stack_chk_fail
                0x00000000c000c64d                __cxa_pure_virtual
                0x00000000c000c65e                operator new[](unsigned long)
                0x00000000c000c663                operator delete(void*, unsigned long)
                0x00000000c000c668                operator delete[](void*)
                0x00000000c000c66d                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000c672        0x2 
 .text          0x00000000c000c674       0x48 krnl/cdefs.32
                0x00000000c000c674                CUnlockScheduler
                0x00000000c000c690                CLockScheduler
                0x00000000c000c6a0                CPrintf
 .text          0x00000000c000c6bc      0xd51 krnl/cm.32
                0x00000000c000c6bc                CmOpen(char const*)
                0x00000000c000c7da                CmClose(Reghive_Tag*)
                0x00000000c000c7f0                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000c82c                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000c8a3                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000c8e2                CmGetNext(Reghive_Tag*, int)
                0x00000000c000c914                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000c950                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000c978                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000c999                CmExpand(Reghive_Tag*, int)
                0x00000000c000ca14                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000ca9a                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000cb8e                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000ccc6                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000cd27                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000cd57                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000cd8e                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000cdb8                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000cdf8                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000ce9c                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000ceca                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000d067                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000d0b4                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d12e                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000d181                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d245                zStrtok(char*, char const*)
                0x00000000c000d2b7                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000d338                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000d3db                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000d40d        0x3 
 .text          0x00000000c000d410       0x1d krnl/compat.32
                0x00000000c000d410                Krnl::handlePowerButton()
                0x00000000c000d420                Krnl::handleSleepButton()
 *fill*         0x00000000c000d42d        0x1 
 .text          0x00000000c000d42e      0x2a7 krnl/computer.32
                0x00000000c000d42e                Computer::close(int, int, void*)
                0x00000000c000d434                Computer::open(int, int, void*)
                0x00000000c000d4ff                KeFirstTask()
                0x00000000c000d620                Computer::Computer()
                0x00000000c000d620                Computer::Computer()
                0x00000000c000d664                KePrepareShutdown()
                0x00000000c000d684                KeShutdown()
                0x00000000c000d6a8                KeSleep()
                0x00000000c000d6b4                KeRestart()
 .text          0x00000000c000d6d5       0x2b krnl/crc32.32
                0x00000000c000d6d5                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000d700      0x5bf krnl/env.32
                0x00000000c000d700                EnvVarContainer::getEnv(char const*)
                0x00000000c000d73e                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000d800                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000d802                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000da26                EnvVarContainer::__loadSystem()
                0x00000000c000da40                EnvVarContainer::__loadUser()
                0x00000000c000da42                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000da42                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000da64                EnvVarContainer::~EnvVarContainer()
                0x00000000c000da64                EnvVarContainer::~EnvVarContainer()
                0x00000000c000da94                KeGetEnv(Process*, char const*)
                0x00000000c000daf9                KeSetEnvSystem(char const*, char const*)
                0x00000000c000db13                KeSetEnvUser(char const*, char const*)
                0x00000000c000db32                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000db45                KeDeleteEnvSystem(char const*)
                0x00000000c000db46                KeDeleteEnvUser(char const*)
                0x00000000c000db47                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000db48                KeNewProcessEnv(Process*)
                0x00000000c000db6a                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000dbb6                KeLoadSystemEnv()
                0x00000000c000dbe4                KeLoadUserEnv()
                0x00000000c000dc0a                KeFlushEnv()
                0x00000000c000dc0b                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000dc2b                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000dcbf        0x1 
 .text          0x00000000c000dcc0      0x351 krnl/fault.32
                0x00000000c000dcc0                KeSetupInterrupts()
                0x00000000c000dd38                int_handler
                0x00000000c000de68                KeDisplayProgramFault(char const*)
                0x00000000c000deb8                KeGeneralProtectionFault(void*, void*)
                0x00000000c000df0c                KePageFault(void*, void*)
                0x00000000c000df60                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000df70                KeOtherFault(void*, void*)
                0x00000000c000dfa4                KeOpcodeFault(void*, void*)
                0x00000000c000dff8                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000e011        0x1 
 .text          0x00000000c000e012      0x1db krnl/gdt.32
                0x00000000c000e012                GDTEntry::setBase(unsigned int)
                0x00000000c000e02e                GDTEntry::setLimit(unsigned int)
                0x00000000c000e04c                GDT::GDT()
                0x00000000c000e04c                GDT::GDT()
                0x00000000c000e062                GDT::addEntry(GDTEntry)
                0x00000000c000e084                GDT::getNumberOfEntries()
                0x00000000c000e08c                GDT::flush()
                0x00000000c000e0ae                GDT::setup()
 .text          0x00000000c000e1ed       0x1d krnl/idle.32
                0x00000000c000e1ed                idleFunction(void*)
 *fill*         0x00000000c000e20a        0x2 
 .text          0x00000000c000e20c      0x46c krnl/idt.32
                0x00000000c000e20c                IDTEntry::IDTEntry(bool)
                0x00000000c000e20c                IDTEntry::IDTEntry(bool)
                0x00000000c000e286                IDTEntry::setOffset(unsigned int)
                0x00000000c000e29c                IDT::IDT()
                0x00000000c000e29c                IDT::IDT()
                0x00000000c000e29e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000e2a6                IDT::addEntry(IDTEntry, int)
                0x00000000c000e2c0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000e2f8                IDT::flush()
                0x00000000c000e312                IDT::setup()
 .text          0x00000000c000e678       0x94 krnl/inlines.32
                0x00000000c000e678                CPU::current()
                0x00000000c000e684                operator new(unsigned long)
                0x00000000c000e689                operator delete(void*)
                0x00000000c000e68e                disableIRQs()
                0x00000000c000e690                enableIRQs()
                0x00000000c000e692                lockScheduler()
                0x00000000c000e69a                unlockScheduler()
                0x00000000c000e6a9                lockStuff()
                0x00000000c000e6b7                unlockStuff()
                0x00000000c000e6f1                Virt::getAKernelVAS()
                0x00000000c000e6f7                __not_memcpy
 .text          0x00000000c000e70c      0x202 krnl/kheap.32
                0x00000000c000e70c                sbrk
                0x00000000c000e7a0                sbrk_thunk
                0x00000000c000e7d6                mmap
                0x00000000c000e834                munmap
                0x00000000c000e849                liballoc_lock()
                0x00000000c000e857                liballoc_unlock()
                0x00000000c000e86d                liballoc_alloc(int)
                0x00000000c000e885                liballoc_free(void*, int)
                0x00000000c000e8a0                realloc
                0x00000000c000e8b4                malloc
                0x00000000c000e8c4                free
                0x00000000c000e8d4                rfree
                0x00000000c000e8e4                calloc
 *fill*         0x00000000c000e90e        0x2 
 .text          0x00000000c000e910      0x1e3 krnl/mailbox.32
                0x00000000c000e910                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000e974                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000e9d8                KeMailboxCreate()
                0x00000000c000ea0c                KeMailboxPost(Mailbox*, void*)
                0x00000000c000ea74                KeMailboxGet(Mailbox*, void**)
                0x00000000c000eadc                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000eaf3       0xfc krnl/main.32
                0x00000000c000eaf3                KeEntryPoint
 *fill*         0x00000000c000ebef        0x1 
 .text          0x00000000c000ebf0       0x1a krnl/mutex.32
                0x00000000c000ebf0                Mutex::Mutex()
                0x00000000c000ebf0                Mutex::Mutex()
 .text          0x00000000c000ec0a        0xc krnl/panic.32
                0x00000000c000ec0a                KePanic(char const*)
 .text          0x00000000c000ec16      0x643 krnl/physmgr.32
                0x00000000c000ec16                Phys::allocateDMA(unsigned long)
                0x00000000c000ed04                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000ed3f                Phys::setPageState(unsigned long, bool)
                0x00000000c000ed7f                Phys::getPageState(unsigned long)
                0x00000000c000ed9b                Phys::freePage(unsigned long)
                0x00000000c000ee04                Phys::allocatePage()
                0x00000000c000eed3                Phys::allocateContiguousPages(int)
                0x00000000c000ef3a                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000ef72                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000f259        0x1 
 .text          0x00000000c000f25a      0x26d krnl/pipe.32
                0x00000000c000f25a                Pipe::isAtty()
                0x00000000c000f25e                Pipe::~Pipe()
                0x00000000c000f25e                Pipe::~Pipe()
                0x00000000c000f282                Pipe::~Pipe()
                0x00000000c000f2aa                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000f36e                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000f460                Pipe::Pipe(int)
                0x00000000c000f460                Pipe::Pipe(int)
 .text          0x00000000c000f4c7      0x108 krnl/powctrl.32
                0x00000000c000f4c7                KePowerThread(void*)
                0x00000000c000f4f5                KeChangePowerSettings(PowerSettings)
                0x00000000c000f50b                KeUserIOReceived()
                0x00000000c000f516                KeHandlePowerButton()
                0x00000000c000f52e                KeHandleSleepButton()
                0x00000000c000f546                KeSetupPowerManager()
 .text          0x00000000c000f5cf       0x9b krnl/random.32
                0x00000000c000f5cf                KeRand()
                0x00000000c000f60f                KeSeedRand(unsigned int)
                0x00000000c000f638                KeInitRand()
 *fill*         0x00000000c000f66a        0x2 
 .text          0x00000000c000f66c      0x1bc krnl/resolve.32
                0x00000000c000f66c                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c000f828      0x415 krnl/semaphore.32
                0x00000000c000f828                Semaphore::Semaphore(int)
                0x00000000c000f828                Semaphore::Semaphore(int)
                0x00000000c000f858                Semaphore::tryAcquire()
                0x00000000c000f934                Semaphore::assertLocked(char const*)
                0x00000000c000f9c4                Semaphore::acquire(int)
                0x00000000c000fb6c                Semaphore::acquire()
                0x00000000c000fb88                Semaphore::release()
 .text          0x00000000c000fc3d      0x31f krnl/signal.32
                0x00000000c000fc3d                KiSigKill(int)
                0x00000000c000fc51                KiDefaultSignalHandlerIgnore(int)
                0x00000000c000fc52                KiDefaultSignalHandlerPause(int)
                0x00000000c000fc7e                KiDefaultSignalHandlerResume(int)
                0x00000000c000fcaa                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c000fcaf                KeInitSignals()
                0x00000000c000fcfe                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c000fd34                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c000fdb1                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c000fea8                KiCheckSignalZ
                0x00000000c000feea                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c000ff25                KiFinishSignalZ
 .text          0x00000000c000ff5c      0xe3f krnl/syscalls.32
                0x00000000c000ff5c                SysSeekDir(regs*)
                0x00000000c000ff61                SysTellDir(regs*)
                0x00000000c000ff66                SysVerify(regs*)
                0x00000000c000ff70                SysGetArgc(regs*)
                0x00000000c000ff84                SysTTYName(regs*)
                0x00000000c000ff8c                SysFormatDisk(regs*)
                0x00000000c000fff3                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010047                SysGetDiskVolumeLabel(regs*)
                0x00000000c00100a0                SysShutdown(regs*)
                0x00000000c001012d                SysRealpath(regs*)
                0x00000000c001017b                SysReadDir(regs*)
                0x00000000c00101fb                SysIsATTY(regs*)
                0x00000000c0010255                SysSeek(regs*)
                0x00000000c00102af                SysTell(regs*)
                0x00000000c001031c                SysSize(regs*)
                0x00000000c001038f                SysSizeFromFilename(regs*)
                0x00000000c00104c3                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c00105f7                SysClose(regs*)
                0x00000000c0010657                SysOpenDir(regs*)
                0x00000000c00106d4                SysMakeDir(regs*)
                0x00000000c0010742                SysCloseDir(regs*)
                0x00000000c0010791                SysWait(regs*)
                0x00000000c00107b2                SysNotImpl(regs*)
                0x00000000c00107cd                SysPanic(regs*)
                0x00000000c00107e8                SysRmdir(regs*)
                0x00000000c0010846                SysUnlink(regs*)
                0x00000000c00108a4                SysGetArgv(regs*)
                0x00000000c00108f1                SysUSleep(regs*)
                0x00000000c001091a                SysSpawn(regs*)
                0x00000000c001098b                SysGetEnv(regs*)
                0x00000000c0010a40                SysSetFatAttrib(regs*)
                0x00000000c0010aa9                SysPipe(regs*)
                0x00000000c0010aee                SysGetUnixTime(regs*)
                0x00000000c0010b02                string_ends_with(char const*, char const*)
                0x00000000c0010b4d                SysOpen(regs*)
                0x00000000c0010d4c                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0010d9b        0x1 
 .text          0x00000000c0010d9c      0xa85 krnl/terminal.32
                0x00000000c0010d9c                VgaText::isAtty()
                0x00000000c0010da0                VgaText::~VgaText()
                0x00000000c0010da0                VgaText::~VgaText()
                0x00000000c0010dc4                VgaText::~VgaText()
                0x00000000c0010dee                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0010e0e                setTerminalScrollLock(bool)
                0x00000000c0010e0f                doTerminalCycle()
                0x00000000c0010e10                addToTerminalCycle(VgaText*)
                0x00000000c0010e11                scrollTerminalScrollLock(int)
                0x00000000c0010e12                VgaText::updateTitle()
                0x00000000c0010e14                VgaText::load()
                0x00000000c0010e16                VgaText::updateCursor()
                0x00000000c0010e2c                VgaText::doANSI_SGR(int)
                0x00000000c0010ea0                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0010eb0                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0010ec0                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0010ee0                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0010eec                VgaText::setTitleColour(VgaColour)
                0x00000000c0010ef8                VgaText::setTitle(char*)
                0x00000000c0010efa                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0010f0c                VgaText::scrollScreen()
                0x00000000c0010f9e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0010fae                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c001103e                VgaText::getCursorX()
                0x00000000c0011046                VgaText::getCursorY()
                0x00000000c001104e                VgaText::setCursor(int, int)
                0x00000000c0011065                setActiveTerminal(VgaText*)
                0x00000000c00110b0                VgaText::clearScreen()
                0x00000000c00110fe                VgaText::setCursorX(int)
                0x00000000c0011116                VgaText::setCursorY(int)
                0x00000000c001112e                VgaText::incrementCursor(bool)
                0x00000000c0011182                VgaText::decrementCursor(bool)
                0x00000000c00111a4                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0011274                VgaText::putchar(char)
                0x00000000c001135c                VgaText::putx(unsigned int)
                0x00000000c00113a2                VgaText::puts(char const*)
                0x00000000c00113c8                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0011414                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0011562                VgaText::VgaText(char const*)
                0x00000000c0011562                VgaText::VgaText(char const*)
                0x00000000c00116b2                VgaText::receiveKey(unsigned char)
                0x00000000c0011820                VgaText::doUpdate()
 *fill*         0x00000000c0011821        0x3 
 .text          0x00000000c0011824      0x1b8 krnl/tss.32
                0x00000000c0011824                TSS::TSS()
                0x00000000c0011824                TSS::TSS()
                0x00000000c0011834                TSS::setESP(unsigned long)
                0x00000000c0011848                TSS::flush()
                0x00000000c0011868                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c00119dc      0x4ca krnl/unixfile.32
                0x00000000c00119dc                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0011a32                ReservedFilename::isAtty()
                0x00000000c0011a4e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011aac                UnixFile::getFileDescriptor()
                0x00000000c0011ab4                UnixFile::UnixFile(int)
                0x00000000c0011ab4                UnixFile::UnixFile(int)
                0x00000000c0011c68                ReservedFilename::ReservedFilename(int)
                0x00000000c0011c68                ReservedFilename::ReservedFilename(int)
                0x00000000c0011c9a                UnixFile::~UnixFile()
                0x00000000c0011c9a                UnixFile::~UnixFile()
                0x00000000c0011d36                UnixFile::~UnixFile()
                0x00000000c0011d5e                ReservedFilename::~ReservedFilename()
                0x00000000c0011d5e                ReservedFilename::~ReservedFilename()
                0x00000000c0011d82                ReservedFilename::~ReservedFilename()
                0x00000000c0011da9                KeGetFileFromDescriptor(int)
 .text          0x00000000c0011ea6     0x119c krnl/virtmgr.32
                0x00000000c0011ea6                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0011ee0                Virt::getPageState(unsigned long)
                0x00000000c0011f03                Virt::allocateKernelVirtualPages(int)
                0x00000000c001201f                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0012042                Virt::swapIDToSector(unsigned long)
                0x00000000c0012058                Virt::allocateSwapfilePage()
                0x00000000c00120d7                Virt::virtualMemorySetup()
                0x00000000c0012128                Virt::setupPageSwapping(int)
                0x00000000c001219a                VAS::setCPUSpecific(unsigned long)
                0x00000000c001219c                VAS::VAS(VAS*)
                0x00000000c001219c                VAS::VAS(VAS*)
                0x00000000c00121b4                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00121e2                VAS::getPageTableEntry(unsigned long)
                0x00000000c0012201                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c001233e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0012362                VAS::virtualToPhysical(unsigned long)
                0x00000000c001237c                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c00123be                VAS::VAS()
                0x00000000c00123be                VAS::VAS()
                0x00000000c0012428                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0012448                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0012474                VAS::~VAS()
                0x00000000c0012474                VAS::~VAS()
                0x00000000c00125e2                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c00126ea                VAS::allocatePages(int, int)
                0x00000000c00127dc                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0012836                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0012926                VAS::VAS(bool)
                0x00000000c0012926                VAS::VAS(bool)
                0x00000000c0012b0e                VAS::evict(unsigned long)
                0x00000000c0012bec                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0012da4                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0012e18                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0012e44                VAS::scanForEviction()
                0x00000000c0012f47                mapVASFirstTime
 .text          0x00000000c0013042       0x36 sys/eject.32
                0x00000000c0013042                SysEject(regs*)
 .text          0x00000000c0013078       0x18 sys/exit.32
                0x00000000c0013078                SysExit(regs*)
 .text          0x00000000c0013090       0x1f sys/getcwd.32
                0x00000000c0013090                SysGetCwd(regs*)
 .text          0x00000000c00130af        0xc sys/getpid.32
                0x00000000c00130af                SysGetPID(regs*)
 .text          0x00000000c00130bb       0x1a sys/getramdata.32
                0x00000000c00130bb                SysGetRAMData(regs*)
 .text          0x00000000c00130d5       0x82 sys/getvgaptr.32
                0x00000000c00130d5                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013157        0x1 
 .text          0x00000000c0013158       0xb9 sys/kill.32
                0x00000000c0013158                SysKill(regs*)
 .text          0x00000000c0013211       0xa8 sys/loaddll.32
                0x00000000c0013211                SysLoadDLL(regs*)
 .text          0x00000000c00132b9       0x68 sys/read.32
                0x00000000c00132b9                SysRead(regs*)
 .text          0x00000000c0013321       0x29 sys/registersignal.32
                0x00000000c0013321                SysRegisterSignal(regs*)
 .text          0x00000000c001334a      0x1cc sys/registry.32
                0x00000000c001334a                SysRegistryGetTypeFromPath(regs*)
                0x00000000c001338e                SysRegistryReadExtent(regs*)
                0x00000000c00133d6                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00133ed                SysRegistryEnterDirectory(regs*)
                0x00000000c0013404                SysRegistryGetNext(regs*)
                0x00000000c001341b                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013455                SysRegistryOpen(regs*)
                0x00000000c0013469                SysRegistryClose(regs*)
                0x00000000c0013480                SysRegistryEasyReadString(regs*)
                0x00000000c00134cc                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0013516       0x55 sys/sbrk.32
                0x00000000c0013516                SysSbrk(regs*)
 .text          0x00000000c001356b       0x1c sys/setcwd.32
                0x00000000c001356b                SysSetCwd(regs*)
 .text          0x00000000c0013587       0x96 sys/settime.32
                0x00000000c0013587                SysSetTime(regs*)
 .text          0x00000000c001361d       0x73 sys/symlink.32
                0x00000000c001361d                SysSymlink(regs*)
 .text          0x00000000c0013690       0x3f sys/timezone.32
                0x00000000c0013690                SysTimezone(regs*)
 .text          0x00000000c00136cf       0xfc sys/truncate.32
                0x00000000c00136cf                SysTruncate(regs*)
 .text          0x00000000c00137cb       0x68 sys/write.32
                0x00000000c00137cb                SysWrite(regs*)
 .text          0x00000000c0013833       0x9d sys/wsbe.32
                0x00000000c0013833                SysWsbe(regs*)
 .text          0x00000000c00138d0       0x25 sys/yield.32
                0x00000000c00138d0                SysYield(regs*)
 .text          0x00000000c00138f5     0x1224 thr/elf.32
                0x00000000c00138f5                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0013b7c                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013d9b                Thr::runtimeReferenceHelper()
                0x00000000c0013dae                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013dfd                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00140bb                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00147fc                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001482e                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014865                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001487f                Thr::loadDLL(char const*, bool)
                0x00000000c0014ae0                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0014b19       0x5a thr/exec.32
                0x00000000c0014b19                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0014b73        0x1 
 .text          0x00000000c0014b74     0x1121 thr/prcssthr.32
                0x00000000c0014b74                userModeEntryPoint(void*)
                0x00000000c0014b9c                changeTSS
                0x00000000c0014bcc                switchToThread(ThreadControlBlock*)
                0x00000000c0014c7c                Process::addArgs(char**)
                0x00000000c0014ce8                Process::Process(char const*, Process*, char**)
                0x00000000c0014ce8                Process::Process(char const*, Process*, char**)
                0x00000000c0014ef4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014ef4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00150c8                taskStartupFunction
                0x00000000c00150d4                KeDisablePreemption()
                0x00000000c00150fc                KeRestorePreemption()
                0x00000000c001511c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015224                Process::createUserThread()
                0x00000000c0015244                setupMultitasking(void (*)())
                0x00000000c0015368                schedule()
                0x00000000c00153fc                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015424                blockTask(TaskState)
                0x00000000c001545c                waitTask(int, int*, int)
                0x00000000c00154a0                milliTenthSleepUntil(unsigned int)
                0x00000000c0015540                milliTenthSleep(unsigned int)
                0x00000000c0015554                sleep(unsigned int)
                0x00000000c0015564                taskReturned
                0x00000000c00155a8                Thr::processFromPID(int)
                0x00000000c0015654                unblockTask(ThreadControlBlock*)
                0x00000000c0015700                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00159d4                cleanerTaskFunction(void*)
                0x00000000c0015adc                terminateTask(int)
                0x00000000c0015bc8                Thr::terminateFromIRQ(int)
 .text          0x00000000c0015c95      0xd08 vm86/vm8086.32
                0x00000000c0015c95                Vm::inbv(unsigned short)
                0x00000000c0015ca8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015cde                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015cee                Vm::getSegment(unsigned int)
                0x00000000c0015cf6                Vm::getOffset(unsigned int)
                0x00000000c0015cfb                Vm::mainloop2()
                0x00000000c0015d35                Vm::mainVm8086Loop(void*)
                0x00000000c0015d45                Vm::mainloop3(unsigned long)
                0x00000000c0015d6b                Vm::initialise8086()
                0x00000000c0015dae                Vm::resetConventionalMemory8086()
                0x00000000c0015daf                Vm::finish8086()
                0x00000000c0015e10                Vm::getOutput8086(unsigned char*)
                0x00000000c0015e35                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015f5c                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016162                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00161ff                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016210                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016222                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016233                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016248                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001625e                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016273                Vm::faultHandler(regs*)
 *fill*         0x00000000c001699d        0x1 
 .text          0x00000000c001699e      0xc03 arch/i386/cpu.32
                0x00000000c001699e                CPU::close(int, int, void*)
                0x00000000c00169a1                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c00169bd                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c00169d5                AMD_K6_writeback(int, int, int)
                0x00000000c0016a48                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0016acb                cpuidCheckEDX(unsigned int)
                0x00000000c0016af8                cpuidCheckECX(unsigned int)
                0x00000000c0016b25                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0016b52                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0016b80                CPU::CPU()
                0x00000000c0016b80                CPU::CPU()
                0x00000000c0016c1e                CPU::detectFeatures()
                0x00000000c00172f2                CPU::setupSMEP()
                0x00000000c00172fe                CPU::setupUMIP()
                0x00000000c0017308                CPU::setupTSC()
                0x00000000c0017312                CPU::setupLargePages()
                0x00000000c001731c                CPU::setupPAT()
                0x00000000c001734e                CPU::setupMTRR()
                0x00000000c0017350                CPU::setupGlobalPages()
                0x00000000c001735a                CPU::allowUsermodeDataAccess()
                0x00000000c0017368                CPU::prohibitUsermodeDataAccess()
                0x00000000c0017376                CPU::setupSMAP()
                0x00000000c0017384                CPU::setupFeatures()
                0x00000000c0017450                CPU::open(int, int, void*)
 .text          0x00000000c00175a1      0xfa6 arch/i386/hal.32
                0x00000000c00175a1                noCopro(unsigned long)
                0x00000000c00175a2                x86ReadCMOS(unsigned char)
                0x00000000c00175f6                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0017658                HalDetectFeatures()
                0x00000000c0017a79                HalEnableNMI()
                0x00000000c0017a8c                HalDisableNMI()
                0x00000000c0017a9f                HalGetNMIState()
                0x00000000c0017aa5                x86rdmsr(unsigned int)
                0x00000000c0017ae3                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0017b28                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0017b3e                HalFindRSDP()
                0x00000000c0017bd3                HalHandlePageFault(void*, void*)
                0x00000000c0017c02                HalHandleOpcodeFault(void*, void*)
                0x00000000c0017c50                HalDisplayDebugInfo(void*)
                0x00000000c0017fde                HalReceivedNMI()
                0x00000000c0018079                HalSystemIdle()
                0x00000000c00180d8                i386SaveCoprocessor(void*)
                0x00000000c00180ec                i386LoadCoprocessor(void*)
                0x00000000c0018100                x87EmulHandler(regs*, void*)
                0x00000000c001819d                HalInitialiseCoprocessor()
                0x00000000c0018226                HalPanic(char const*)
                0x00000000c001833a                HalQueryPerformanceCounter()
                0x00000000c001834a                HalInitialise()
                0x00000000c00184dc                HalMakeBeep(int)
                0x00000000c0018516                HalGetRand()
                0x00000000c0018519                HalEndOfInterrupt(int)
                0x00000000c0018544                HalRestart()
                0x00000000c0018545                HalShutdown()
                0x00000000c0018546                HalSleep()
 .text          0x00000000c0018547      0x268 arch/i386/intctrl.32
                0x00000000c0018547                convertLegacyIRQNumber(int)
                0x00000000c0018583                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c00185cd                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001870a                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001873e                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c00187af        0x1 
 .text          0x00000000c00187b0      0x2dc arch/i386/pic.32
                0x00000000c00187b0                picIoWait()
                0x00000000c00187b8                picDisable()
                0x00000000c00187ec                picGetIRQReg(int)
                0x00000000c0018868                picOpen()
                0x00000000c00189ec                picEOI(int)
 .text          0x00000000c0018a8c      0x5f2 arch/i386/rtc.32
                0x00000000c0018a8c                RTC::open(int, int, void*)
                0x00000000c0018a90                RTC::close(int, int, void*)
                0x00000000c0018a94                RTC::timeInSecondsUTC()
                0x00000000c0018aa6                RTC::timeInDatetimeUTC()
                0x00000000c0018acc                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018b0a                RTC::~RTC()
                0x00000000c0018b0a                RTC::~RTC()
                0x00000000c0018b2e                RTC::~RTC()
                0x00000000c0018b58                RTC::get_update_in_progress_flag()
                0x00000000c0018b6c                RTC::completeRTCRefresh()
                0x00000000c0018e1a                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018f90                rtcIRQHandler(regs*, void*)
                0x00000000c0018fd0                RTC::RTC()
                0x00000000c0018fd0                RTC::RTC()
 *fill*         0x00000000c001907e        0x2 
 .text          0x00000000c0019080      0x1f4 arch/i386/vga.32
                0x00000000c0019080                HalConsoleScroll(int, int)
                0x00000000c0019188                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00191ec                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0019274     0x14f3 fs/fat/vfslink.32
                0x00000000c0019274                FAT::getName()
                0x00000000c001927c                FAT::tell(void*, unsigned long long*)
                0x00000000c00192b8                FAT::stat(void*, unsigned long long*)
                0x00000000c00192f4                FAT::~FAT()
                0x00000000c00192f4                FAT::~FAT()
                0x00000000c0019318                FAT::~FAT()
                0x00000000c0019340                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00193e4                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00194c4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00196a8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00198c4                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019a84                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019bf4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019c54                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019cb4                FAT::close(void*)
                0x00000000c0019d08                FAT::closeDir(void*)
                0x00000000c0019d5c                FAT::truncate(void*, unsigned long long)
                0x00000000c0019dc8                FAT::seek(void*, unsigned long long)
                0x00000000c0019e20                fatWrapperReadDisk
                0x00000000c0019e60                fatWrapperWriteDisk
                0x00000000c0019ea0                fatWrapperIoctl
                0x00000000c0019fc0                FAT::FAT()
                0x00000000c0019fc0                FAT::FAT()
                0x00000000c001a018                FAT::fixFilepath(char*)
                0x00000000c001a058                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001a1cc                FAT::openDir(char const*, void**)
                0x00000000c001a27c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a374                FAT::unlink(char const*)
                0x00000000c001a3f4                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a5ac                FAT::rename(char const*, char const*)
                0x00000000c001a678                FAT::mkdir(char const*)
                0x00000000c001a6f8                FAT::exists(char const*)
 *fill*         0x00000000c001a767        0x1 
 .text          0x00000000c001a768       0x94 fs/iso9660/helper.32
                0x00000000c001a768                isoReadDiscSectorHelper
                0x00000000c001a7c4                iso_kprintf
                0x00000000c001a7e0                iso_kprintfd
 .text          0x00000000c001a7fc      0x71a fs/iso9660/vfslink.32
                0x00000000c001a7fc                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a802                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a808                ISO9660::getName()
                0x00000000c001a80e                ISO9660::closeDir(void*)
                0x00000000c001a818                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a81e                ISO9660::unlink(char const*)
                0x00000000c001a824                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a82a                ISO9660::rename(char const*, char const*)
                0x00000000c001a830                ISO9660::mkdir(char const*)
                0x00000000c001a836                ISO9660::~ISO9660()
                0x00000000c001a836                ISO9660::~ISO9660()
                0x00000000c001a85a                ISO9660::~ISO9660()
                0x00000000c001a882                ISO9660::exists(char const*)
                0x00000000c001a896                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a97c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a9c4                ISO9660::seek(void*, unsigned long long)
                0x00000000c001aa06                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001aa44                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001aa96                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001abd8                ISO9660::close(void*)
                0x00000000c001ac08                ISO9660::openDir(char const*, void**)
                0x00000000c001ace2                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001adfd                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001ae7c                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001aeee                ISO9660::ISO9660()
                0x00000000c001aeee                ISO9660::ISO9660()
 .text          0x00000000c001af16      0x26c hal/sound/sndcard.32
                0x00000000c001af16                SoundCard::beginPlayback()
                0x00000000c001af24                SoundCard::stopPlayback()
                0x00000000c001af32                SoundCard::SoundCard(char const*)
                0x00000000c001af32                SoundCard::SoundCard(char const*)
                0x00000000c001afd0                SoundCard::~SoundCard()
                0x00000000c001afd0                SoundCard::~SoundCard()
                0x00000000c001aff4                SoundCard::~SoundCard()
                0x00000000c001b01e                SoundCard::configureRates(int, int, int)
                0x00000000c001b04e                SoundCard::getSamples16(int, short*)
                0x00000000c001b0aa                SoundCard::getSamples32(int, int*)
                0x00000000c001b130                SoundCard::addChannel(SoundPort*)
                0x00000000c001b16e                SoundCard::removeChannel(int)
 *fill*         0x00000000c001b182        0x2 
 .text          0x00000000c001b184      0x393 hal/sound/sndport.32
                0x00000000c001b184                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b184                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b210                SoundPort::~SoundPort()
                0x00000000c001b210                SoundPort::~SoundPort()
                0x00000000c001b244                SoundPort::unpause()
                0x00000000c001b250                SoundPort::pause()
                0x00000000c001b25c                SoundPort::getBufferUsed()
                0x00000000c001b264                SoundPort::getBufferSize()
                0x00000000c001b26c                SoundPort::buffer16(short*, int)
                0x00000000c001b2f8                SoundPort::buffer32(int*, int)
                0x00000000c001b384                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b454                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b517        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b517        0x1 
 .text          0x00000000c001b518      0xc25 hw/bus/pci.32
                0x00000000c001b518                PCI::open(int, int, void*)
                0x00000000c001b536                PCI::close(int, int, void*)
                0x00000000c001b53a                PCI::PCI()
                0x00000000c001b53a                PCI::PCI()
                0x00000000c001b5d2                PCI::readBAR8(unsigned int, int)
                0x00000000c001b5ee                PCI::readBAR16(unsigned int, int)
                0x00000000c001b60c                PCI::readBAR32(unsigned int, int)
                0x00000000c001b628                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b648                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b66a                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b68a                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b700                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b7aa                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b7ce                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b7f6                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b840                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b868                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b88c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b8b0                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b8d8                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b93c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001ba22                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001bcec                PCI::checkBus(unsigned char)
                0x00000000c001bd10                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bef6                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001c072                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001c0e4                PCI::detect()
 *fill*         0x00000000c001c13d        0x1 
 .text          0x00000000c001c13e      0xdb8 hw/diskctrl/ide.32
                0x00000000c001c13e                IDE::close(int, int, void*)
                0x00000000c001c142                IDE::IDE()
                0x00000000c001c142                IDE::IDE()
                0x00000000c001c176                IDE::prepareInterrupt(unsigned char)
                0x00000000c001c188                selectDrive(unsigned char, unsigned char)
                0x00000000c001c18a                IDE::getBase(unsigned char)
                0x00000000c001c19c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001c25c                IDE::read(unsigned char, unsigned char)
                0x00000000c001c310                IDE::waitInterrupt(unsigned char)
                0x00000000c001c372                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c38e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c3aa                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c3f4                IDE::open(int, int, void*)
                0x00000000c001c8de                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c9ae                IDE::detect()
                0x00000000c001cde8                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001cea2                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001cef6      0x33f hw/diskctrl/satabus.32
                0x00000000c001cef6                SATABus::close(int, int, void*)
                0x00000000c001cefa                SATABus::detect()
                0x00000000c001cefc                SATABus::SATABus()
                0x00000000c001cefc                SATABus::SATABus()
                0x00000000c001cf82                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cfb4                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cffc                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d01c                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d046                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001d158                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001d202                SATABus::open(int, int, void*)
 *fill*         0x00000000c001d235        0x1 
 .text          0x00000000c001d236      0x9b5 hw/diskphys/ata.32
                0x00000000c001d236                ATA::close(int, int, void*)
                0x00000000c001d25a                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001d25c                ATA::ATA()
                0x00000000c001d25c                ATA::ATA()
                0x00000000c001d28a                ATA::flush(bool)
                0x00000000c001d2d8                ATA::readyForCommand()
                0x00000000c001d324                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d730                ATA::detectCHS()
                0x00000000c001d75a                ATA::open(int, int, void*)
                0x00000000c001d826                combineCharAndColour(char, unsigned char)
                0x00000000c001d837                combineColours(unsigned char, unsigned char)
                0x00000000c001d844                ATA::read(unsigned long long, int, void*)
                0x00000000c001da1a                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001dbeb        0x1 
 .text          0x00000000c001dbec      0x612 hw/diskphys/atapi.32
                0x00000000c001dbec                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001dbf2                ATAPI::close(int, int, void*)
                0x00000000c001dc16                ATAPI::ATAPI()
                0x00000000c001dc16                ATAPI::ATAPI()
                0x00000000c001dc44                ATAPI::readyForCommand()
                0x00000000c001dc96                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001df56                ATAPI::diskRemoved()
                0x00000000c001df90                ATAPI::eject()
                0x00000000c001dfd8                ATAPI::diskInserted()
                0x00000000c001dfe4                ATAPI::detectMedia()
                0x00000000c001e0a4                ATAPI::open(int, int, void*)
                0x00000000c001e184                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e1fe      0x841 hw/diskphys/sata.32
                0x00000000c001e1fe                SATA::close(int, int, void*)
                0x00000000c001e222                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001e224                SATA::open(int, int, void*)
                0x00000000c001e2dc                SATA::SATA()
                0x00000000c001e2dc                SATA::SATA()
                0x00000000c001e30a                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001e590                SATA::read(unsigned long long, int, void*)
                0x00000000c001e7e0                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001ea3f        0x1 
 .text          0x00000000c001ea40      0x5d8 hw/diskphys/satapi.32
                0x00000000c001ea40                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ea46                SATAPI::close(int, int, void*)
                0x00000000c001ea6a                SATAPI::SATAPI()
                0x00000000c001ea6a                SATAPI::SATAPI()
                0x00000000c001ea98                SATAPI::diskRemoved()
                0x00000000c001ea9a                SATAPI::diskInserted()
                0x00000000c001eab6                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001ed9c                SATAPI::eject()
                0x00000000c001edd8                SATAPI::detectMedia()
                0x00000000c001ee2e                SATAPI::open(int, int, void*)
                0x00000000c001ef2e                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001f018      0x433 hw/intctrl/apic.32
                0x00000000c001f018                IOAPIC::close(int, int, void*)
                0x00000000c001f01e                apicGetBase()
                0x00000000c001f03c                IOAPIC::IOAPIC()
                0x00000000c001f03c                IOAPIC::IOAPIC()
                0x00000000c001f064                apicOpen()
                0x00000000c001f1e0                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001f212                IOAPIC::read(int)
                0x00000000c001f23a                IOAPIC::open(int, int, void*)
                0x00000000c001f320                IOAPIC::write(int, int)
                0x00000000c001f34c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001f44b        0x1 
 .text          0x00000000c001f44c       0xf0 hw/timer/apictimer.32
                0x00000000c001f44c                APICTimer::close(int, int, void*)
                0x00000000c001f454                apicTimerHandler(regs*, void*)
                0x00000000c001f47c                APICTimer::open(int, int, void*)
                0x00000000c001f4ec                APICTimer::write(int)
                0x00000000c001f514                APICTimer::APICTimer()
                0x00000000c001f514                APICTimer::APICTimer()
 .text          0x00000000c001f53c      0x1ad hw/timer/pit.32
                0x00000000c001f53c                PIT::write(int)
                0x00000000c001f5c0                pitHandler(regs*, void*)
                0x00000000c001f5e8                PIT::open(int, int, void*)
                0x00000000c001f638                PIT::close(int, int, void*)
                0x00000000c001f668                PIT::PIT()
                0x00000000c001f668                PIT::PIT()
 *fill*         0x00000000c001f6e9        0x7 
 .text          0x00000000c001f6f0       0x6f arch/i386/avx.32
                0x00000000c001f6f0                avxDetect
                0x00000000c001f71a                avxSave
                0x00000000c001f72b                avxLoad
                0x00000000c001f73c                avxInit
                0x00000000c001f75e                avxClose
 *fill*         0x00000000c001f75f        0x1 
 .text          0x00000000c001f760      0x2ec arch/i386/interrupt.32
                0x00000000c001f760                isr0
                0x00000000c001f770                isr1
                0x00000000c001f77a                isr2
                0x00000000c001f784                isr3
                0x00000000c001f78e                isr4
                0x00000000c001f798                isr5
                0x00000000c001f7a2                isr6
                0x00000000c001f7ac                isr7
                0x00000000c001f7b6                isr8
                0x00000000c001f7be                isr9
                0x00000000c001f7c8                isr10
                0x00000000c001f7d0                isr11
                0x00000000c001f7d8                isr12
                0x00000000c001f7e0                isr13
                0x00000000c001f7fa                isr14
                0x00000000c001f802                isr15
                0x00000000c001f80c                isr16
                0x00000000c001f816                isr17
                0x00000000c001f820                isr18
                0x00000000c001f82a                irq3
                0x00000000c001f834                irq4
                0x00000000c001f83e                irq5
                0x00000000c001f848                irq6
                0x00000000c001f852                irq7
                0x00000000c001f85c                irq8
                0x00000000c001f866                irq9
                0x00000000c001f870                irq10
                0x00000000c001f87a                irq11
                0x00000000c001f884                irq12
                0x00000000c001f88e                irq13
                0x00000000c001f898                irq14
                0x00000000c001f8a2                irq15
                0x00000000c001f8ac                irq1
                0x00000000c001f8b3                irq2
                0x00000000c001f8ba                isr96
                0x00000000c001f8c1                irq0
                0x00000000c001f8c6                int_common_stub
                0x00000000c001f8f8                syscall_common_stub
                0x00000000c001f9fc                irq16
                0x00000000c001fa06                irq17
                0x00000000c001fa10                irq18
                0x00000000c001fa1a                irq19
                0x00000000c001fa24                irq20
                0x00000000c001fa2e                irq21
                0x00000000c001fa38                irq22
                0x00000000c001fa42                irq23
 *fill*         0x00000000c001fa4c        0x4 
 .text          0x00000000c001fa50       0x10 arch/i386/rdrand.32
                0x00000000c001fa50                i386GetRDRAND
 .text          0x00000000c001fa60       0x39 arch/i386/sse.32
                0x00000000c001fa60                sseDetect
                0x00000000c001fa78                sseSave
                0x00000000c001fa80                sseLoad
                0x00000000c001fa88                sseInit
                0x00000000c001fa98                sseClose
 *fill*         0x00000000c001fa99        0x7 
 .text          0x00000000c001faa0       0x49 arch/i386/x87.32
                0x00000000c001faa6                x87Detect
                0x00000000c001fac1                x87Save
                0x00000000c001fac8                x87Load
                0x00000000c001facf                x87Init
                0x00000000c001fae8                x87Close
 *fill*         0x00000000c001fae9        0x3 
 .text          0x00000000c001faec       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001fb11        0x0 crtn.32
 *fill*         0x00000000c001fb11        0x3 
 .text          0x00000000c001fb14      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001fb14                __divdi3
 *fill*         0x00000000c001fc5f        0x1 
 .text          0x00000000c001fc60      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001fc60                __moddi3
 *fill*         0x00000000c001fdde        0x2 
 .text          0x00000000c001fde0       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001fde0                __udivdi3
 *fill*         0x00000000c001fedf        0x1 
 .text          0x00000000c001fee0      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001fee0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0020000        0x0
 .iplt          0x00000000c0020000        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001fffa        0xf
 .init          0x00000000c001fffa        0x3 crti.32
                0x00000000c001fffa                _init
 .init          0x00000000c001fffd        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0020002        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0020007        0x2 crtn.32

.fini           0x00000000c0020009        0xa
 .fini          0x00000000c0020009        0x3 crti.32
                0x00000000c0020009                _fini
 .fini          0x00000000c002000c        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0020011        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020014       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020014       0x1a hal/device.32
                0x00000000c0020014                DriverlessDevice::~DriverlessDevice()
                0x00000000c0020014                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c002002e       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c002002e       0x2a hal/device.32
                0x00000000c002002e                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0020058       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0020058       0xdc hal/device.32
                0x00000000c0020058                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020134       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020134       0x42 hal/device.32
                0x00000000c0020134                LinkedList<Device>::LinkedList()
                0x00000000c0020134                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0020178       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0020178       0x1c hal/timer.32
                0x00000000c0020178                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020194        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020194        0x7 hal/timer.32
                0x00000000c0020194                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c002019c       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c002019c       0xbc hal/timer.32
                0x00000000c002019c                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0020258       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0020258       0xda hal/timer.32
                0x00000000c0020258                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0020334       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0020334       0x23 hw/acpi.32
                0x00000000c0020334                ACPI::~ACPI()
                0x00000000c0020334                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0020358       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0020358       0x2a hw/acpi.32
                0x00000000c0020358                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0020384        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0020384        0x2 hw/acpi.32
                0x00000000c0020384                LinkedList<Device>::~LinkedList()
                0x00000000c0020384                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0020388       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0020388       0x1c hw/acpi.32
                0x00000000c0020388                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00203a4        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00203a4        0x7 hw/acpi.32
                0x00000000c00203a4                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00203ac       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00203ac       0xb8 hw/acpi.32
                0x00000000c00203ac                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0020464       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0020464       0x23 krnl/computer.32
                0x00000000c0020464                Computer::~Computer()
                0x00000000c0020464                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0020488       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0020488       0x2a krnl/computer.32
                0x00000000c0020488                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c00204b2       0x21
 .text._Z10idleCommonv
                0x00000000c00204b2       0x21 krnl/idle.32
                0x00000000c00204b2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00204d4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00204d4        0x2 krnl/unixfile.32
                0x00000000c00204d4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00204d4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00204d6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00204d6       0x42 krnl/unixfile.32
                0x00000000c00204d6                LinkedList<UnixFile>::LinkedList()
                0x00000000c00204d6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0020518       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0020518       0xd3 krnl/unixfile.32
                0x00000000c0020518                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00205ec        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00205ec        0x7 krnl/unixfile.32
                0x00000000c00205ec                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00205f4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00205f4       0xa1 krnl/unixfile.32
                0x00000000c00205f4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0020696        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0020696        0x8 krnl/unixfile.32
                0x00000000c0020696                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00206a0        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00206a0        0x8 sys/kill.32
                0x00000000c00206a0                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00206a8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00206a8        0x2 thr/prcssthr.32
                0x00000000c00206a8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00206a8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00206ac       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00206ac       0x49 thr/prcssthr.32
                0x00000000c00206ac                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00206ac                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00206f8       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00206f8       0x42 thr/prcssthr.32
                0x00000000c00206f8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00206f8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c002073a       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002073a       0x23 arch/i386/cpu.32
                0x00000000c002073a                CPU::~CPU()
                0x00000000c002073a                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c002075e       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c002075e       0x2a arch/i386/cpu.32
                0x00000000c002075e                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c0020788       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020788       0x23 hw/bus/pci.32
                0x00000000c0020788                PCI::~PCI()
                0x00000000c0020788                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00207ac       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00207ac       0x2a hw/bus/pci.32
                0x00000000c00207ac                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00207d6       0x23
 .text._ZN3IDED2Ev
                0x00000000c00207d6       0x23 hw/diskctrl/ide.32
                0x00000000c00207d6                IDE::~IDE()
                0x00000000c00207d6                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00207fa       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00207fa       0x2a hw/diskctrl/ide.32
                0x00000000c00207fa                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020824       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020824       0x23 hw/diskctrl/satabus.32
                0x00000000c0020824                SATABus::~SATABus()
                0x00000000c0020824                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020848       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020848       0x2a hw/diskctrl/satabus.32
                0x00000000c0020848                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020872       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020872       0x23 hw/diskphys/ata.32
                0x00000000c0020872                ATA::~ATA()
                0x00000000c0020872                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020896       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020896       0x2a hw/diskphys/ata.32
                0x00000000c0020896                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00208c0       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00208c0       0x23 hw/diskphys/atapi.32
                0x00000000c00208c0                ATAPI::~ATAPI()
                0x00000000c00208c0                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00208e4       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00208e4       0x2a hw/diskphys/atapi.32
                0x00000000c00208e4                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002090e       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002090e       0x23 hw/diskphys/sata.32
                0x00000000c002090e                SATA::~SATA()
                0x00000000c002090e                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020932       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020932       0x2a hw/diskphys/sata.32
                0x00000000c0020932                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002095c       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002095c       0x23 hw/diskphys/satapi.32
                0x00000000c002095c                SATAPI::~SATAPI()
                0x00000000c002095c                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0020980       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0020980       0x2a hw/diskphys/satapi.32
                0x00000000c0020980                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00209aa       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00209aa       0x23 hw/intctrl/apic.32
                0x00000000c00209aa                IOAPIC::~IOAPIC()
                0x00000000c00209aa                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00209ce       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00209ce       0x2a hw/intctrl/apic.32
                0x00000000c00209ce                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00209f8       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00209f8       0x23 hw/timer/apictimer.32
                0x00000000c00209f8                APICTimer::~APICTimer()
                0x00000000c00209f8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0020a1c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0020a1c       0x2a hw/timer/apictimer.32
                0x00000000c0020a1c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020a48       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020a48       0x23 hw/timer/pit.32
                0x00000000c0020a48                PIT::~PIT()
                0x00000000c0020a48                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0020a6c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0020a6c       0x2a hw/timer/pit.32
                0x00000000c0020a6c                PIT::~PIT()

.rodata         0x00000000c0020a96     0x332e
                0x00000000c0020a96                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020a96        0x2 
 .ctors         0x00000000c0020a98        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0020a9c        0x4 krnl/unixfile.32
 .ctors         0x00000000c0020aa0        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020aa4        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020aa8                end_ctors = .
                0x00000000c0020aa8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020aa8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0020aac        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020aac                __DTOR_END__
                0x00000000c0020ab0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020ab0       0x10 
 .rodata        0x00000000c0020ac0      0x101 acpica/utclib.32
                0x00000000c0020ac0                AcpiGbl_Ctypes
 *fill*         0x00000000c0020bc1        0x3 
 .rodata        0x00000000c0020bc4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c0020bdc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020c26       0x1a 
 .rodata        0x00000000c0020c40       0xed fs/fat/ff.32
 *fill*         0x00000000c0020d2d       0x13 
 .rodata        0x00000000c0020d40      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0021140       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c00211af        0x1 
 .rodata        0x00000000c00211b0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021300      0x169 dbg/usban.32
 *fill*         0x00000000c0021469        0x3 
 .rodata.str1.4
                0x00000000c002146c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00215a3      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c00216c6       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c0021707        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021708       0x6c fs/vfs.32
                0x00000000c0021708                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021774       0x1c fs/vfs.32
                0x00000000c0021774                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021790       0x1c fs/vfs.32
                0x00000000c0021790                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00217ac       0x2c hal/bus.32
                0x00000000c00217ac                vtable for Bus
 .rodata.str1.1
                0x00000000c00217d8       0x70 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0021848       0x3c hal/clock.32
                0x00000000c0021848                vtable for Clock
 *fill*         0x00000000c0021884       0x1c 
 .rodata        0x00000000c00218a0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00218d0       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021934       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021956       0x15 hal/device.32
 *fill*         0x00000000c002196b        0x1 
 .rodata._ZTV6Device
                0x00000000c002196c       0x2c hal/device.32
                0x00000000c002196c                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021998       0x2c hal/device.32
                0x00000000c0021998                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00219c4       0x2c hal/diskctrl.32
                0x00000000c00219c4                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00219f0       0x38 hal/diskphys.32
                0x00000000c00219f0                vtable for PhysicalDisk
 .rodata        0x00000000c0021a28       0x53 hal/keybrd.32
 *fill*         0x00000000c0021a7b        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0021a7c       0x34 hal/keybrd.32
                0x00000000c0021a7c                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021ab0       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021af4       0x2c hal/logidisk.32
                0x00000000c0021af4                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021b20       0x2c hal/mouse.32
                0x00000000c0021b20                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021b4c       0x34 hal/nic.32
                0x00000000c0021b4c                vtable for NIC
 .rodata.str1.1
                0x00000000c0021b80        0xb hal/partition.32
 *fill*         0x00000000c0021b8b        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021b8c       0x44 hal/serial.32
                0x00000000c0021b8c                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021bd0       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021c1b        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021c23       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021c23       0x15 hal/timer.32
 *fill*         0x00000000c0021c23        0x1 
 .rodata._ZTV5Timer
                0x00000000c0021c24       0x30 hal/timer.32
                0x00000000c0021c24                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021c54       0x10 hal/vcache.32
                0x00000000c0021c54                vtable for VCache
 .rodata.str1.1
                0x00000000c0021c64       0xba hal/video.32
 *fill*         0x00000000c0021d1e        0x2 
 .rodata._ZTV5Video
                0x00000000c0021d20       0x4c hal/video.32
                0x00000000c0021d20                vtable for Video
 .rodata.str1.1
                0x00000000c0021d6c      0x17e hw/acpi.32
 *fill*         0x00000000c0021eea        0x2 
 .rodata.str1.4
                0x00000000c0021eec       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021f63       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021f63        0x8 hw/acpi.32
 *fill*         0x00000000c0021f63        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0021f64       0x2c hw/acpi.32
                0x00000000c0021f64                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021f90       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021fd0       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0021ff1       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0022024        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0022027       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002209d       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0022146        0x2 
 .rodata.str1.4
                0x00000000c0022148       0x8c krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c00221d4       0x2c krnl/computer.32
                0x00000000c00221d4                vtable for Computer
 .rodata.str1.1
                0x00000000c0022200       0x3c krnl/env.32
 .rodata        0x00000000c002223c       0x66 krnl/fault.32
 *fill*         0x00000000c00222a2        0x2 
 .rodata.str1.4
                0x00000000c00222a4       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c00222d4        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c00222e3       0x5a krnl/main.32
 *fill*         0x00000000c002233d        0x3 
 .rodata.str1.4
                0x00000000c0022340       0xa5 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00223e5       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c002243d       0x39 krnl/pipe.32
 *fill*         0x00000000c0022476        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0022478       0x1c krnl/pipe.32
                0x00000000c0022478                vtable for Pipe
 .rodata.str1.1
                0x00000000c0022494       0x91 krnl/resolve.32
 *fill*         0x00000000c0022525        0x3 
 .rodata.str1.4
                0x00000000c0022528       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c0022547       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022610       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022658       0x2b krnl/terminal.32
 *fill*         0x00000000c0022683        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0022684       0x1c krnl/terminal.32
                0x00000000c0022684                vtable for VgaText
 .rodata        0x00000000c00226a0       0x17 krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00226b7       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00226b7       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00226b7       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00226b7        0x8 krnl/unixfile.32
 *fill*         0x00000000c00226b7        0x1 
 .rodata.str1.4
                0x00000000c00226b8       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00226d8       0x1c krnl/unixfile.32
                0x00000000c00226d8                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00226f4       0x1c krnl/unixfile.32
                0x00000000c00226f4                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0022710      0x270 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0022980      0x126 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0022aa6        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0022ab0       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0022ad1       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022b25       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022b51      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022d5b       0x57 thr/prcssthr.32
 *fill*         0x00000000c0022db2        0x2 
 .rodata.str1.4
                0x00000000c0022db4       0xf0 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022ea4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022ea4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022ea4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022ea4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022ea4       0xdd vm86/vm8086.32
 *fill*         0x00000000c0022f81        0x3 
 .rodata        0x00000000c0022f84       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022fb4      0x1db arch/i386/cpu.32
                                        0x1df (size before relaxing)
 *fill*         0x00000000c002318f        0x1 
 .rodata._ZTV3CPU
                0x00000000c0023190       0x2c arch/i386/cpu.32
                0x00000000c0023190                vtable for CPU
 .rodata.str1.1
                0x00000000c00231bc      0x19d arch/i386/hal.32
                                        0x1ac (size before relaxing)
 *fill*         0x00000000c0023359        0x3 
 .rodata.str1.4
                0x00000000c002335c       0x23 arch/i386/hal.32
 *fill*         0x00000000c002337f        0x1 
 .rodata.str1.4
                0x00000000c0023380       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c00233e1       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c002341f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0023434       0x3c arch/i386/rtc.32
                0x00000000c0023434                vtable for RTC
 .rodata.str1.1
                0x00000000c0023470       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00234b1        0x3 
 .rodata._ZTV3FAT
                0x00000000c00234b4       0x6c fs/fat/vfslink.32
                0x00000000c00234b4                vtable for FAT
 .rodata.str1.1
                0x00000000c0023520       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0023520      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0023658       0x6c fs/iso9660/vfslink.32
                0x00000000c0023658                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00236c4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0023708       0x34 hal/sound/sndcard.32
                0x00000000c0023708                vtable for SoundCard
 .rodata.str1.4
                0x00000000c002373c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002377b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00237b3       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0023854       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00238b8       0x2c hw/bus/pci.32
                0x00000000c00238b8                vtable for PCI
 .rodata.str1.1
                0x00000000c00238e4      0x10c hw/diskctrl/ide.32
                                        0x120 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c00239f0       0x2c hw/diskctrl/ide.32
                0x00000000c00239f0                vtable for IDE
 .rodata.str1.4
                0x00000000c0023a1c       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0023a40       0x2c hw/diskctrl/satabus.32
                0x00000000c0023a40                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023a6c       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023a7e        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023a80       0x38 hw/diskphys/ata.32
                0x00000000c0023a80                vtable for ATA
 .rodata.str1.1
                0x00000000c0023ab8        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0023ac5        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0023ac8       0x38 hw/diskphys/atapi.32
                0x00000000c0023ac8                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0023b00       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023b88       0x38 hw/diskphys/sata.32
                0x00000000c0023b88                vtable for SATA
 .rodata.str1.1
                0x00000000c0023bc0       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0023caa        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0023cac       0x38 hw/diskphys/satapi.32
                0x00000000c0023cac                vtable for SATAPI
 .rodata        0x00000000c0023ce4       0x17 hw/intctrl/apic.32
 *fill*         0x00000000c0023cfb        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c0023cfc       0x2c hw/intctrl/apic.32
                0x00000000c0023cfc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023d28       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0023d43        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023d44       0x30 hw/timer/apictimer.32
                0x00000000c0023d44                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023d74       0x1d hw/timer/pit.32
 *fill*         0x00000000c0023d91        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023d94       0x30 hw/timer/pit.32
                0x00000000c0023d94                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023dc4      0xa7d
 *(.data)
 .data          0x00000000c0023dc4        0x0 crti.32
 .data          0x00000000c0023dc4        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023dc4                __dso_handle
 .data          0x00000000c0023dc8        0x0 acpica/utclib.32
 .data          0x00000000c0023dc8        0x0 krnl/malloc.32
 .data          0x00000000c0023dc8        0x0 libk/ctype.32
 .data          0x00000000c0023dc8        0x0 libk/string.32
 .data          0x00000000c0023dc8        0x0 arch/i386/cc.32
 .data          0x00000000c0023dc8        0x0 fs/fat/diskio.32
 .data          0x00000000c0023dc8        0x0 fs/fat/ff.32
 .data          0x00000000c0023dc8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023dc8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023dc8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023dc8        0x0 dbg/kconsole.32
 *fill*         0x00000000c0023dc8       0x18 
 .data          0x00000000c0023de0       0x28 dbg/usban.32
                0x00000000c0023de0                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023e08        0x0 fs/symlink.32
 .data          0x00000000c0023e08        0x0 fs/vfs.32
 .data          0x00000000c0023e08        0x0 hal/bus.32
 .data          0x00000000c0023e08        0x0 hal/buzzer.32
 .data          0x00000000c0023e08        0x0 hal/clock.32
 .data          0x00000000c0023e08        0x0 hal/device.32
 .data          0x00000000c0023e08        0x0 hal/diskctrl.32
 .data          0x00000000c0023e08        0x0 hal/diskphys.32
 .data          0x00000000c0023e08        0x0 hal/fpu.32
 .data          0x00000000c0023e08        0x0 hal/intctrl.32
 .data          0x00000000c0023e08        0x0 hal/keybrd.32
 .data          0x00000000c0023e08        0x0 hal/logidisk.32
 .data          0x00000000c0023e08        0x0 hal/mouse.32
 .data          0x00000000c0023e08        0x0 hal/nic.32
 .data          0x00000000c0023e08        0x0 hal/partition.32
 .data          0x00000000c0023e08        0x0 hal/serial.32
 .data          0x00000000c0023e08        0x0 hal/timer.32
 .data          0x00000000c0023e08        0x0 hal/vcache.32
 .data          0x00000000c0023e08        0x0 hal/video.32
 .data          0x00000000c0023e08       0x10 hw/acpi.32
                0x00000000c0023e08                legacyIRQRemaps
 .data          0x00000000c0023e18        0x0 krnl/atexit.32
 .data          0x00000000c0023e18        0x0 krnl/bootmsg.32
 .data          0x00000000c0023e18        0x4 krnl/c++.32
                0x00000000c0023e18                __stack_chk_guard
 .data          0x00000000c0023e1c        0x0 krnl/cdefs.32
 *fill*         0x00000000c0023e1c        0x4 
 .data          0x00000000c0023e20      0x100 krnl/cm.32
                0x00000000c0023e20                CmComponents
 .data          0x00000000c0023f20        0x0 krnl/compat.32
 .data          0x00000000c0023f20        0x0 krnl/computer.32
 .data          0x00000000c0023f20      0x400 krnl/crc32.32
                0x00000000c0023f20                KiPolyLookupCRC32
 .data          0x00000000c0024320       0x4d krnl/env.32
                0x00000000c0024320                defaultSysEnv
 .data          0x00000000c002436d        0x0 krnl/fault.32
 .data          0x00000000c002436d        0x0 krnl/gdt.32
 .data          0x00000000c002436d        0x0 krnl/idle.32
 .data          0x00000000c002436d        0x0 krnl/idt.32
 .data          0x00000000c002436d        0x0 krnl/inlines.32
 *fill*         0x00000000c002436d        0x3 
 .data          0x00000000c0024370        0x4 krnl/kheap.32
 .data          0x00000000c0024374        0x0 krnl/mailbox.32
 .data          0x00000000c0024374        0x0 krnl/main.32
 .data          0x00000000c0024374        0x0 krnl/mutex.32
 .data          0x00000000c0024374        0x0 krnl/panic.32
 .data          0x00000000c0024374        0x4 krnl/physmgr.32
                0x00000000c0024374                Phys::bitmap
 .data          0x00000000c0024378        0x0 krnl/pipe.32
 .data          0x00000000c0024378        0x0 krnl/powctrl.32
 .data          0x00000000c0024378        0x0 krnl/random.32
 .data          0x00000000c0024378        0x0 krnl/resolve.32
 .data          0x00000000c0024378        0x0 krnl/semaphore.32
 *fill*         0x00000000c0024378        0x8 
 .data          0x00000000c0024380       0x4c krnl/signal.32
                0x00000000c0024380                KiDefaultSignalHandlers
 *fill*         0x00000000c00243cc       0x14 
 .data          0x00000000c00243e0      0x104 krnl/syscalls.32
                0x00000000c00243e0                systemCallHandlers
 *fill*         0x00000000c00244e4       0x1c 
 .data          0x00000000c0024500       0x60 krnl/terminal.32
                0x00000000c0024500                VgaText::hiddenOut
                0x00000000c0024520                ansiToVGAMappings
 .data          0x00000000c0024560        0x0 krnl/tss.32
 .data          0x00000000c0024560        0x4 krnl/unixfile.32
                0x00000000c0024560                UnixFile::nextFd
 .data          0x00000000c0024564       0x15 krnl/virtmgr.32
                0x00000000c0024564                Virt::pageAllocPtr
                0x00000000c0024568                Virt::bitmap
                0x00000000c002456c                Virt::swapfileSectorsPerPage
                0x00000000c0024570                Virt::swapfileLength
                0x00000000c0024574                Virt::swapfileSector
                0x00000000c0024578                Virt::swapfileDrive
 .data          0x00000000c0024579        0x0 sys/eject.32
 .data          0x00000000c0024579        0x0 sys/exit.32
 .data          0x00000000c0024579        0x0 sys/getcwd.32
 .data          0x00000000c0024579        0x0 sys/getpid.32
 .data          0x00000000c0024579        0x0 sys/getramdata.32
 .data          0x00000000c0024579        0x0 sys/getvgaptr.32
 .data          0x00000000c0024579        0x0 sys/kill.32
 .data          0x00000000c0024579        0x0 sys/loaddll.32
 .data          0x00000000c0024579        0x0 sys/read.32
 .data          0x00000000c0024579        0x0 sys/registersignal.32
 .data          0x00000000c0024579        0x0 sys/registry.32
 .data          0x00000000c0024579        0x0 sys/sbrk.32
 .data          0x00000000c0024579        0x0 sys/setcwd.32
 .data          0x00000000c0024579        0x0 sys/settime.32
 .data          0x00000000c0024579        0x0 sys/symlink.32
 .data          0x00000000c0024579        0x0 sys/timezone.32
 .data          0x00000000c0024579        0x0 sys/truncate.32
 .data          0x00000000c0024579        0x0 sys/write.32
 .data          0x00000000c0024579        0x0 sys/wsbe.32
 .data          0x00000000c0024579        0x0 sys/yield.32
 .data          0x00000000c0024579        0x0 thr/elf.32
 .data          0x00000000c0024579        0x0 thr/exec.32
 *fill*         0x00000000c0024579        0x3 
 .data          0x00000000c002457c        0x4 thr/prcssthr.32
                0x00000000c002457c                Thr::nextPID
 .data          0x00000000c0024580        0x0 vm86/vm8086.32
 .data          0x00000000c0024580        0x4 arch/i386/cpu.32
                0x00000000c0024580                lastCode
 *fill*         0x00000000c0024584       0x1c 
 .data          0x00000000c00245a0      0x2a0 arch/i386/hal.32
                0x00000000c00245a0                exceptionNames
 .data          0x00000000c0024840        0x0 arch/i386/intctrl.32
 .data          0x00000000c0024840        0x0 arch/i386/pic.32
 .data          0x00000000c0024840        0x0 arch/i386/rtc.32
 .data          0x00000000c0024840        0x0 arch/i386/vga.32
 .data          0x00000000c0024840        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024840        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024840        0x1 fs/iso9660/vfslink.32
                0x00000000c0024840                recentDriveletter
 .data          0x00000000c0024841        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024841        0x0 hal/sound/sndport.32
 .data          0x00000000c0024841        0x0 hw/bus/isa.32
 .data          0x00000000c0024841        0x0 hw/bus/pci.32
 .data          0x00000000c0024841        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024841        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024841        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024841        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024841        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024841        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024841        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024841        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024841        0x0 hw/timer/pit.32
 .data          0x00000000c0024841        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024841        0x0 crtn.32
 .data          0x00000000c0024841        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024841        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024841        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024841        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024844        0x0
 .got           0x00000000c0024844        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024844        0x0
 .got.plt       0x00000000c0024844        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024844        0x0
 .igot.plt      0x00000000c0024844        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024844        0x0
 .tm_clone_table
                0x00000000c0024844        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024844        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024841      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024841        0x3 
 .eh_frame      0x00000000c0024844        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024844        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024844       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002489c       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00248dc       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024948       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 krnl/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 arch/i386/cc.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0026eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0026eb8        0x8 
 .bss           0x00000000c0026ec0     0x2444 fs/symlink.32
                0x00000000c0026ec0                kiNumWaitingRoomSymlinks
                0x00000000c0026ee0                kiNewlyCreatedIDs
                0x00000000c0026f00                kiNewlyCreatedSymlinks
                0x00000000c0027300                kiSymlinkHashTable
                0x00000000c0029300                kiBaseSymlinkID
 .bss           0x00000000c0029304        0x4 fs/vfs.32
                0x00000000c0029304                installedFilesystems
 .bss           0x00000000c0029308        0x0 hal/bus.32
 .bss           0x00000000c0029308        0x0 hal/buzzer.32
 .bss           0x00000000c0029308        0x8 hal/clock.32
                0x00000000c0029308                User::dstOn
                0x00000000c0029309                User::timezoneHalfHourOffset
                0x00000000c002930c                User::timezoneHourOffset
 .bss           0x00000000c0029310        0x0 hal/device.32
 .bss           0x00000000c0029310        0x0 hal/diskctrl.32
 .bss           0x00000000c0029310        0x0 hal/diskphys.32
 .bss           0x00000000c0029310        0x0 hal/fpu.32
 .bss           0x00000000c0029310        0x0 hal/intctrl.32
 *fill*         0x00000000c0029310       0x10 
 .bss           0x00000000c0029320      0x428 hal/keybrd.32
                0x00000000c0029320                keyboardWaitingTaskList
                0x00000000c0029324                keyboardSetupYet
                0x00000000c0029328                guiKeyboardHandler
                0x00000000c002932c                kiKeyboardGUILock
                0x00000000c002932d                kiKeyboardGUILatch
                0x00000000c0029340                keystates
 *fill*         0x00000000c0029748       0x18 
 .bss           0x00000000c0029760       0x88 hal/logidisk.32
                0x00000000c0029760                diskAssignments
                0x00000000c0029780                disks
 .bss           0x00000000c00297e8        0x4 hal/mouse.32
                0x00000000c00297e8                guiMouseHandler
 .bss           0x00000000c00297ec        0x0 hal/nic.32
 .bss           0x00000000c00297ec        0x0 hal/partition.32
 .bss           0x00000000c00297ec        0x0 hal/serial.32
 .bss           0x00000000c00297ec        0x4 hal/timer.32
                0x00000000c00297ec                milliTenthsSinceBoot
 .bss           0x00000000c00297f0        0x0 hal/vcache.32
 .bss           0x00000000c00297f0        0x4 hal/video.32
                0x00000000c00297f0                screen
 *fill*         0x00000000c00297f4        0xc 
 .bss           0x00000000c0029800      0x480 hw/acpi.32
                0x00000000c0029800                nextACPITable
                0x00000000c0029820                acpiTables
                0x00000000c0029a20                usingXSDT
                0x00000000c0029a24                RSDTpointer
                0x00000000c0029a28                RSDPpointer
                0x00000000c0029a2c                nextAPICNMI
                0x00000000c0029a40                apicNMIInfo
                0x00000000c0029ac0                legacyIRQFlags
                0x00000000c0029ae0                ioapicDiscoveryNumber
                0x00000000c0029b00                ioapicFoundInMADT
                0x00000000c0029b20                ioapicAddresses
                0x00000000c0029ba0                ioapicGSIBase
                0x00000000c0029c20                processorDiscoveryNumber
                0x00000000c0029c40                matchingAPICID
                0x00000000c0029c60                processorID
 .bss           0x00000000c0029c80       0xe0 krnl/atexit.32
                0x00000000c0029c80                KiNextAtexitHandler
                0x00000000c0029ca0                KiAtexitContexts
                0x00000000c0029d00                KiAtexitHandlers
 .bss           0x00000000c0029d60        0x0 krnl/bootmsg.32
 .bss           0x00000000c0029d60        0x0 krnl/c++.32
 .bss           0x00000000c0029d60        0x0 krnl/cdefs.32
 .bss           0x00000000c0029d60        0x4 krnl/cm.32
 .bss           0x00000000c0029d64        0x0 krnl/compat.32
 .bss           0x00000000c0029d64       0x12 krnl/computer.32
                0x00000000c0029d64                systemSleepFunction
                0x00000000c0029d68                systemResetFunction
                0x00000000c0029d6c                systemShutdownFunction
                0x00000000c0029d70                Krnl::computer
                0x00000000c0029d74                KeIsPreemptionOn
                0x00000000c0029d75                KeIsSchedulingOn
 .bss           0x00000000c0029d76        0x0 krnl/crc32.32
 *fill*         0x00000000c0029d76        0x2 
 .bss           0x00000000c0029d78        0x8 krnl/env.32
                0x00000000c0029d78                KeUserEnv
                0x00000000c0029d7c                KeSystemEnv
 .bss           0x00000000c0029d80     0x2000 krnl/fault.32
                0x00000000c0029d80                keInterruptContexts
                0x00000000c002ad80                keInterruptHandlers
 .bss           0x00000000c002bd80        0x6 krnl/gdt.32
                0x00000000c002bd80                gdtDescr
 .bss           0x00000000c002bd86        0x0 krnl/idle.32
 *fill*         0x00000000c002bd86        0x2 
 .bss           0x00000000c002bd88        0x6 krnl/idt.32
                0x00000000c002bd88                idtDescr
 .bss           0x00000000c002bd8e        0x0 krnl/inlines.32
 .bss           0x00000000c002bd8e        0x0 krnl/kheap.32
 .bss           0x00000000c002bd8e        0x0 krnl/mailbox.32
 *fill*         0x00000000c002bd8e        0x2 
 .bss           0x00000000c002bd90        0x4 krnl/main.32
                0x00000000c002bd90                sysBootSettings
 .bss           0x00000000c002bd94        0x0 krnl/mutex.32
 .bss           0x00000000c002bd94        0x1 krnl/panic.32
                0x00000000c002bd94                KeIsKernelInPanic
 *fill*         0x00000000c002bd95        0x3 
 .bss           0x00000000c002bd98       0x29 krnl/physmgr.32
                0x00000000c002bd98                Phys::forbidEvictions
                0x00000000c002bd9c                Phys::currentPagePointer
                0x00000000c002bda0                Phys::highestMem
                0x00000000c002bda4                Phys::oldPercent
                0x00000000c002bda8                Phys::usedPages
                0x00000000c002bdac                Phys::usablePages
                0x00000000c002bdb0                Phys::dmaUsage
 .bss           0x00000000c002bdc1        0x0 krnl/pipe.32
 *fill*         0x00000000c002bdc1       0x1f 
 .bss           0x00000000c002bde0       0x48 krnl/powctrl.32
                0x00000000c002bde0                powCtrlOnBattery
                0x00000000c002be00                currentPowerSettings
                0x00000000c002be24                secondsSinceLastUserIO
 .bss           0x00000000c002be28        0x8 krnl/random.32
                0x00000000c002be28                kiRandSeed
 .bss           0x00000000c002be30        0x0 krnl/resolve.32
 .bss           0x00000000c002be30        0x0 krnl/semaphore.32
 .bss           0x00000000c002be30        0x0 krnl/signal.32
 .bss           0x00000000c002be30        0x0 krnl/syscalls.32
 .bss           0x00000000c002be30        0x9 krnl/terminal.32
                0x00000000c002be30                terminalCycle
                0x00000000c002be34                activeTerminal
                0x00000000c002be38                VgaText::graphicMode
 *fill*         0x00000000c002be39        0x1 
 .bss           0x00000000c002be3a        0x2 krnl/tss.32
                0x00000000c002be3a                doubleFaultSelector
 *fill*         0x00000000c002be3c        0x4 
 .bss           0x00000000c002be40       0x84 krnl/unixfile.32
                0x00000000c002be40                sfileLpt
                0x00000000c002be80                sfileCom
                0x00000000c002bea4                sfileNul
                0x00000000c002bea8                sfilePnt
                0x00000000c002beac                sfileAux
                0x00000000c002beb0                sfileCon
                0x00000000c002beb4                initialFilesAdded
                0x00000000c002beb8                unixFileLinkedList
 .bss           0x00000000c002bec4       0x10 krnl/virtmgr.32
                0x00000000c002bec4                twswaps
                0x00000000c002bec8                swapBalance
                0x00000000c002becc                Virt::swapfileBitmap
                0x00000000c002bed0                firstVAS
 .bss           0x00000000c002bed4        0x0 sys/eject.32
 .bss           0x00000000c002bed4        0x0 sys/exit.32
 .bss           0x00000000c002bed4        0x0 sys/getcwd.32
 .bss           0x00000000c002bed4        0x0 sys/getpid.32
 .bss           0x00000000c002bed4        0x0 sys/getramdata.32
 .bss           0x00000000c002bed4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bed4        0x0 sys/kill.32
 .bss           0x00000000c002bed4        0x0 sys/loaddll.32
 .bss           0x00000000c002bed4        0x0 sys/read.32
 .bss           0x00000000c002bed4        0x0 sys/registersignal.32
 .bss           0x00000000c002bed4        0x0 sys/registry.32
 .bss           0x00000000c002bed4        0x0 sys/sbrk.32
 .bss           0x00000000c002bed4        0x0 sys/setcwd.32
 .bss           0x00000000c002bed4        0x0 sys/settime.32
 .bss           0x00000000c002bed4        0x0 sys/symlink.32
 .bss           0x00000000c002bed4        0x0 sys/timezone.32
 .bss           0x00000000c002bed4        0x0 sys/truncate.32
 .bss           0x00000000c002bed4        0x0 sys/write.32
 .bss           0x00000000c002bed4        0x0 sys/wsbe.32
 .bss           0x00000000c002bed4        0x0 sys/yield.32
 *fill*         0x00000000c002bed4        0xc 
 .bss           0x00000000c002bee0      0x7a4 thr/elf.32
                0x00000000c002bee0                Thr::driverLookupNext
                0x00000000c002bf00                Thr::driverLookupLen
                0x00000000c002c100                Thr::driverLookupAddr
                0x00000000c002c300                Thr::driverNameLookup
                0x00000000c002c500                Thr::kernelSymbols
                0x00000000c002c580                Thr::kernelStringTable
                0x00000000c002c600                Thr::kernelSymbolTable
                0x00000000c002c680                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002c684        0x0 thr/exec.32
 *fill*         0x00000000c002c684        0x4 
 .bss           0x00000000c002c688       0x70 thr/prcssthr.32
                0x00000000c002c688                KiRestorePreemptionValue
                0x00000000c002c68c                KiPreemptionDisableCounter
                0x00000000c002c690                cleanerThread
                0x00000000c002c694                weNeedTheCleanerToNotBlock
                0x00000000c002c698                retValLockStuff
                0x00000000c002c69c                retValSchedLock
                0x00000000c002c6a0                lockStuffLock
                0x00000000c002c6a4                schedulerLock
                0x00000000c002c6a8                taskSwitchesPostponedFlag
                0x00000000c002c6ac                postponeTaskSwitchesCounter
                0x00000000c002c6b0                irqDisableCounter
                0x00000000c002c6b4                terminatedTaskList
                0x00000000c002c6c0                sleepingTaskList
                0x00000000c002c6cc                taskList
                0x00000000c002c6d8                kernelProcess
 *fill*         0x00000000c002c6f8        0x8 
 .bss           0x00000000c002c700       0x40 vm86/vm8086.32
                0x00000000c002c700                Vm::started8086Yet
                0x00000000c002c704                Vm::vmRetV
                0x00000000c002c708                Vm::vmDone
                0x00000000c002c709                Vm::vmReady
                0x00000000c002c70c                Vm::vm86Thread
                0x00000000c002c710                Vm::vmToHostCommsPtr
                0x00000000c002c720                Vm::vmToHostComms
 .bss           0x00000000c002c740       0x18 arch/i386/cpu.32
                0x00000000c002c740                lastD
                0x00000000c002c744                lastC
                0x00000000c002c748                lastB
                0x00000000c002c74c                lastA
                0x00000000c002c750                features
 .bss           0x00000000c002c758       0x1d arch/i386/hal.32
                0x00000000c002c758                apic
                0x00000000c002c75c                guiPanicHandler
                0x00000000c002c760                fpuOwner
                0x00000000c002c764                coproLoadFunc
                0x00000000c002c768                coproSaveFunc
                0x00000000c002c76c                HalPageWriteCombiningFlag
                0x00000000c002c770                HalPageGlobalFlag
                0x00000000c002c774                nmi
 .bss           0x00000000c002c775        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002c775        0x0 arch/i386/pic.32
 *fill*         0x00000000c002c775        0x1 
 .bss           0x00000000c002c776        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c778        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c778        0x8 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
