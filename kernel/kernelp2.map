Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f34a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x561 fs/symlink.32
                0x00000000c000ad14                KiCreateSymlinkID()
                0x00000000c000ad7f                KiFlushSymlinkChanges()
                0x00000000c000ae52                KiDeinitialiseSymlinks(void*)
                0x00000000c000ae57                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000aec6                KiIsSymlinkRegistered(char const*)
                0x00000000c000aecb                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b082                KeCreateSymlink(char const*, char const*)
                0x00000000c000b1bf                KeInitialiseSymlinks()
 *fill*         0x00000000c000b275        0x1 
 .text          0x00000000c000b276      0xcdc fs/vfs.32
                0x00000000c000b276                File::read(unsigned long long, void*, int*)
                0x00000000c000b2ce                File::write(unsigned long long, void*, int*)
                0x00000000c000b326                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b37e                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b3ac                File::isAtty()
                0x00000000c000b3b0                Directory::isAtty()
                0x00000000c000b3b4                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b3ba                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b3c0                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b3c6                File::~File()
                0x00000000c000b3c6                File::~File()
                0x00000000c000b3ea                File::~File()
                0x00000000c000b414                Directory::~Directory()
                0x00000000c000b414                Directory::~Directory()
                0x00000000c000b438                Directory::~Directory()
                0x00000000c000b462                Filesystem::Filesystem()
                0x00000000c000b462                Filesystem::Filesystem()
                0x00000000c000b486                Filesystem::~Filesystem()
                0x00000000c000b486                Filesystem::~Filesystem()
                0x00000000c000b494                Filesystem::~Filesystem()
                0x00000000c000b4b8                Fs::getcwd(Process*, char*, int)
                0x00000000c000b4e2                Fs::initVFS()
                0x00000000c000b50c                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b6e8                File::File(char const*, Process*)
                0x00000000c000b6e8                File::File(char const*, Process*)
                0x00000000c000b7a4                File::open(FileOpenMode)
                0x00000000c000b802                File::close()
                0x00000000c000b862                File::seek(unsigned long long)
                0x00000000c000b8b8                File::truncate(unsigned long long)
                0x00000000c000b90e                File::tell(unsigned long long*)
                0x00000000c000b95e                File::rewind()
                0x00000000c000b972                File::unlink()
                0x00000000c000b9be                File::rename(char const*)
                0x00000000c000ba0c                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ba68                File::exists()
                0x00000000c000baa6                File::stat(unsigned long long*, bool*)
                0x00000000c000bb07                Fs::setcwd(Process*, char*)
                0x00000000c000bc64                Directory::Directory(char const*, Process*)
                0x00000000c000bc64                Directory::Directory(char const*, Process*)
                0x00000000c000bd20                Directory::open()
                0x00000000c000bd7c                Directory::close()
                0x00000000c000bddc                Directory::unlink()
                0x00000000c000be28                Directory::rename(char const*)
                0x00000000c000be76                Directory::exists()
                0x00000000c000beb4                Directory::read(dirent*)
                0x00000000c000bf00                Directory::create()
                0x00000000c000bf4c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000bf52        0x2 
 .text          0x00000000c000bf54       0x86 hal/bus.32
                0x00000000c000bf54                Bus::Bus(char const*)
                0x00000000c000bf54                Bus::Bus(char const*)
                0x00000000c000bf8c                Bus::~Bus()
                0x00000000c000bf8c                Bus::~Bus()
                0x00000000c000bfb0                Bus::~Bus()
 .text          0x00000000c000bfda       0x96 hal/buzzer.32
                0x00000000c000bfda                beepThread(void*)
                0x00000000c000c017                Krnl::beep(int, int, bool)
 .text          0x00000000c000c070      0x465 hal/clock.32
                0x00000000c000c070                User::loadClockSettings(int)
                0x00000000c000c0c2                Clock::Clock(char const*)
                0x00000000c000c0c2                Clock::Clock(char const*)
                0x00000000c000c0f8                Clock::~Clock()
                0x00000000c000c0f8                Clock::~Clock()
                0x00000000c000c11c                Clock::~Clock()
                0x00000000c000c146                Clock::timeInSecondsLocal()
                0x00000000c000c18e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c1e7                datetimeToSeconds(datetime_t)
                0x00000000c000c30c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c36c                secondsToDatetime(unsigned long long)
                0x00000000c000c4b0                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c4d5        0x1 
 .text          0x00000000c000c4d6      0x464 hal/device.32
                0x00000000c000c4d6                Device::hibernate()
                0x00000000c000c4d8                Device::wake()
                0x00000000c000c4da                Device::detect()
                0x00000000c000c4dc                Device::disableLegacy()
                0x00000000c000c4de                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c4e0                DriverlessDevice::close(int, int, void*)
                0x00000000c000c4e4                DriverlessDevice::detect()
                0x00000000c000c4e6                DriverlessDevice::open(int, int, void*)
                0x00000000c000c4fa                Device::~Device()
                0x00000000c000c4fa                Device::~Device()
                0x00000000c000c508                Device::~Device()
                0x00000000c000c530                Device::findAndLoadDriver()
                0x00000000c000c53e                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c564                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c5a4                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c5ce                Device::getParent()
                0x00000000c000c5da                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c5f8                Device::addChild(Device*)
                0x00000000c000c63c                Device::removeAllChildren()
                0x00000000c000c682                Device::hibernateAll()
                0x00000000c000c6b2                Device::wakeAll()
                0x00000000c000c6e2                Device::detectAll()
                0x00000000c000c712                Device::disableLegacyAll()
                0x00000000c000c714                Device::loadDriversForAll()
                0x00000000c000c716                Device::closeAll()
                0x00000000c000c74c                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c782                Device::setName(char const*)
                0x00000000c000c790                Device::Device(char const*)
                0x00000000c000c790                Device::Device(char const*)
                0x00000000c000c88c                Device::getName()
                0x00000000c000c896                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c896                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c8cc                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c910                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c93a        0x2 
 .text          0x00000000c000c93c       0x86 hal/diskctrl.32
                0x00000000c000c93c                HardDiskController::HardDiskController(char const*)
                0x00000000c000c93c                HardDiskController::HardDiskController(char const*)
                0x00000000c000c974                HardDiskController::~HardDiskController()
                0x00000000c000c974                HardDiskController::~HardDiskController()
                0x00000000c000c998                HardDiskController::~HardDiskController()
 .text          0x00000000c000c9c2       0xe2 hal/diskphys.32
                0x00000000c000c9c2                PhysicalDisk::eject()
                0x00000000c000c9c6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c9c6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ca2e                PhysicalDisk::startCache()
                0x00000000c000ca56                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ca56                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ca7a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000caa4        0x0 hal/fpu.32
 .text          0x00000000c000caa4      0x360 hal/intctrl.32
                0x00000000c000caa4                int_handler
                0x00000000c000cb2e                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cb78                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ccbb                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000ccef                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000cd65                setupINTS()
                0x00000000c000cdc2                convertLegacyIRQNumber(int)
 .text          0x00000000c000ce04      0x8be hal/keybrd.32
                0x00000000c000ce04                startGUI(void*)
                0x00000000c000ce72                startGUIVESA(void*)
                0x00000000c000cee0                sendKeyToTerminal(unsigned char)
                0x00000000c000cfbb                sendKeyboardToken(KeyboardToken)
                0x00000000c000d4a5                clearInternalKeybuffer(VgaText*)
                0x00000000c000d4da                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d638                Keyboard::Keyboard(char const*)
                0x00000000c000d638                Keyboard::Keyboard(char const*)
                0x00000000c000d674                Keyboard::~Keyboard()
                0x00000000c000d674                Keyboard::~Keyboard()
                0x00000000c000d698                Keyboard::~Keyboard()
 .text          0x00000000c000d6c2      0x3f8 hal/logidisk.32
                0x00000000c000d6c2                LogicalDisk::close(int, int, void*)
                0x00000000c000d6c6                LogicalDisk::~LogicalDisk()
                0x00000000c000d6c6                LogicalDisk::~LogicalDisk()
                0x00000000c000d6ea                LogicalDisk::~LogicalDisk()
                0x00000000c000d714                LogicalDisk::open(int, int, void*)
                0x00000000c000d728                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d760                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d7a6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d7a6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d866                LogicalDisk::assignDriveLetter()
                0x00000000c000d920                LogicalDisk::mount()
                0x00000000c000d968                LogicalDisk::unmount()
                0x00000000c000d978                LogicalDisk::eject()
                0x00000000c000d98c                LogicalDisk::unassignDriveLetter()
                0x00000000c000d9e2                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000da4e                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000daba        0x2 
 .text          0x00000000c000dabc       0x86 hal/mouse.32
                0x00000000c000dabc                Mouse::Mouse(char const*)
                0x00000000c000dabc                Mouse::Mouse(char const*)
                0x00000000c000daf4                Mouse::~Mouse()
                0x00000000c000daf4                Mouse::~Mouse()
                0x00000000c000db18                Mouse::~Mouse()
 .text          0x00000000c000db42       0x90 hal/nic.32
                0x00000000c000db42                NIC::getMAC()
                0x00000000c000db48                NIC::write(int, unsigned char*, int*)
                0x00000000c000db4e                NIC::NIC(char const*)
                0x00000000c000db4e                NIC::NIC(char const*)
                0x00000000c000db84                NIC::~NIC()
                0x00000000c000db84                NIC::~NIC()
                0x00000000c000dba8                NIC::~NIC()
 .text          0x00000000c000dbd2      0x33b hal/partition.32
                0x00000000c000dbd2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc7a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000df0d        0x3 
 .text          0x00000000c000df10       0x86 hal/serial.32
                0x00000000c000df10                Serial::Serial(char const*)
                0x00000000c000df10                Serial::Serial(char const*)
                0x00000000c000df48                Serial::~Serial()
                0x00000000c000df48                Serial::~Serial()
                0x00000000c000df6c                Serial::~Serial()
 *fill*         0x00000000c000df96        0x2 
 .text          0x00000000c000df98      0x234 hal/timer.32
                0x00000000c000df98                Timer::Timer(char const*)
                0x00000000c000df98                Timer::Timer(char const*)
                0x00000000c000dfd0                Timer::~Timer()
                0x00000000c000dfd0                Timer::~Timer()
                0x00000000c000dff4                Timer::~Timer()
                0x00000000c000e01e                Timer::read()
                0x00000000c000e029                setupTimer(int)
                0x00000000c000e064                timerHandler(unsigned int)
 .text          0x00000000c000e1cc      0x450 hal/vcache.32
                0x00000000c000e1cc                VCache::VCache(PhysicalDisk*)
                0x00000000c000e1cc                VCache::VCache(PhysicalDisk*)
                0x00000000c000e33c                VCache::invalidateReadBuffer()
                0x00000000c000e34c                VCache::writeWriteBuffer()
                0x00000000c000e398                VCache::~VCache()
                0x00000000c000e398                VCache::~VCache()
                0x00000000c000e3f0                VCache::~VCache()
                0x00000000c000e418                VCache::write(unsigned long long, int, void*)
                0x00000000c000e512                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e61c      0x4d9 hal/video.32
                0x00000000c000e61c                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e668                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e6d8                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e768                Video::clearScreen(unsigned int)
                0x00000000c000e79c                Video::putpixel(int, int, unsigned int)
                0x00000000c000e7aa                Video::readPixelApprox(int, int)
                0x00000000c000e7be                Video::Video(char const*)
                0x00000000c000e7be                Video::Video(char const*)
                0x00000000c000e7f4                Video::~Video()
                0x00000000c000e7f4                Video::~Video()
                0x00000000c000e818                Video::~Video()
                0x00000000c000e842                Video::isMonochrome()
                0x00000000c000e84e                Video::getWidth()
                0x00000000c000e85a                Video::getHeight()
                0x00000000c000e866                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e922                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ea8a                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eaf5        0x3 
 .text          0x00000000c000eaf8     0x12d2 hw/acpi.32
                0x00000000c000eaf8                ACPI::close(int, int, void*)
                0x00000000c000ebac                findRSDP()
                0x00000000c000ec44                loadACPITables(unsigned char*)
                0x00000000c000eeb0                findRSDT(unsigned char*)
                0x00000000c000f008                findDataTable(unsigned char*, char*)
                0x00000000c000f088                scanMADT()
                0x00000000c000f540                ACPI::ACPI()
                0x00000000c000f540                ACPI::ACPI()
                0x00000000c000f594                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f690                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f75c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f764                ACPI::detectPCI()
                0x00000000c000f984                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f9cc                ACPI::sleep()
                0x00000000c000f9e8                ACPI::open(int, int, void*)
 .text          0x00000000c000fdca      0xbc5 hw/cpu.32
                0x00000000c000fdca                CPU::close(int, int, void*)
                0x00000000c000fdce                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000fdea                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000fe02                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000fe76                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000fefa                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000ff28                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000ff56                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000ff84                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000ffb2                CPU::CPU()
                0x00000000c000ffb2                CPU::CPU()
                0x00000000c0010040                CPU::displayFeatures()
                0x00000000c0010042                CPU::detectFeatures()
                0x00000000c0010716                CPU::setupSMEP()
                0x00000000c0010722                CPU::setupUMIP()
                0x00000000c001072c                CPU::setupTSC()
                0x00000000c0010736                CPU::setupLargePages()
                0x00000000c0010740                CPU::setupPAT()
                0x00000000c001077c                CPU::setupMTRR()
                0x00000000c001077e                CPU::setupGlobalPages()
                0x00000000c0010788                CPU::allowUsermodeDataAccess()
                0x00000000c001079a                CPU::prohibitUsermodeDataAccess()
                0x00000000c00107ac                CPU::setupSMAP()
                0x00000000c00107ba                CPU::setupFeatures()
                0x00000000c0010886                CPU::open(int, int, void*)
 .text          0x00000000c001098f       0x91 krnl/atexit.32
                0x00000000c001098f                KeInitialiseAtexit()
                0x00000000c00109b1                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c00109e5                KeExecuteAtexit()
 .text          0x00000000c0010a20       0xdf krnl/bootmsg.32
                0x00000000c0010a20                KeDisplaySplashScreen()
                0x00000000c0010a9c                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010aff        0x1 
 .text          0x00000000c0010b00       0x1d krnl/compat.32
                0x00000000c0010b00                Krnl::handlePowerButton()
                0x00000000c0010b10                Krnl::handleSleepButton()
 *fill*         0x00000000c0010b1d        0x1 
 .text          0x00000000c0010b1e      0x5bf krnl/env.32
                0x00000000c0010b1e                EnvVarContainer::getEnv(char const*)
                0x00000000c0010b5c                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010c1e                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010c20                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010e44                EnvVarContainer::__loadSystem()
                0x00000000c0010e5e                EnvVarContainer::__loadUser()
                0x00000000c0010e60                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010e60                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010e82                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010e82                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010eb2                KeGetEnv(Process*, char const*)
                0x00000000c0010f17                KeSetEnvSystem(char const*, char const*)
                0x00000000c0010f31                KeSetEnvUser(char const*, char const*)
                0x00000000c0010f50                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0010f63                KeDeleteEnvSystem(char const*)
                0x00000000c0010f64                KeDeleteEnvUser(char const*)
                0x00000000c0010f65                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0010f66                KeNewProcessEnv(Process*)
                0x00000000c0010f88                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0010fd4                KeLoadSystemEnv()
                0x00000000c0011002                KeLoadUserEnv()
                0x00000000c0011028                KeFlushEnv()
                0x00000000c0011029                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0011049                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c00110dd       0x94 krnl/inlines.32
                0x00000000c00110dd                CPU::current()
                0x00000000c00110e9                operator new(unsigned long)
                0x00000000c00110ee                operator delete(void*)
                0x00000000c00110f3                disableIRQs()
                0x00000000c00110f5                enableIRQs()
                0x00000000c00110f7                lockScheduler()
                0x00000000c00110ff                unlockScheduler()
                0x00000000c001110e                lockStuff()
                0x00000000c001111c                unlockStuff()
                0x00000000c0011156                Virt::getAKernelVAS()
                0x00000000c001115c                __not_memcpy
 .text          0x00000000c0011171        0xc krnl/panic.32
                0x00000000c0011171                KePanic(char const*)
 .text          0x00000000c001117d      0x142 krnl/powctrl.32
                0x00000000c001117d                KePowerThread(void*)
                0x00000000c00111ab                KeChangePowerSettings(PowerSettings)
                0x00000000c00111c1                KeUserIOReceived()
                0x00000000c00111cc                KeHandlePowerButton()
                0x00000000c0011201                KeHandleSleepButton()
                0x00000000c0011236                KeSetupPowerManager()
 .text          0x00000000c00112bf       0x9b krnl/random.32
                0x00000000c00112bf                KeRand()
                0x00000000c00112ff                KeSeedRand(unsigned int)
                0x00000000c0011328                KeInitRand()
 *fill*         0x00000000c001135a        0x2 
 .text          0x00000000c001135c      0x1bc krnl/resolve.32
                0x00000000c001135c                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011518      0x31f krnl/signal.32
                0x00000000c0011518                KiSigKill(int)
                0x00000000c001152c                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001152d                KiDefaultSignalHandlerPause(int)
                0x00000000c0011559                KiDefaultSignalHandlerResume(int)
                0x00000000c0011585                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001158a                KeInitSignals()
                0x00000000c00115d9                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c001160f                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001168c                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011783                KiCheckSignalZ
                0x00000000c00117c5                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011800                KiFinishSignalZ
 .text          0x00000000c0011837      0xc76 krnl/syscalls.32
                0x00000000c0011837                SysSeekDir(regs*)
                0x00000000c001183c                SysTellDir(regs*)
                0x00000000c0011841                SysVerify(regs*)
                0x00000000c001184b                SysGetArgc(regs*)
                0x00000000c001185f                SysTTYName(regs*)
                0x00000000c0011867                SysFormatDisk(regs*)
                0x00000000c00118ce                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011922                SysGetDiskVolumeLabel(regs*)
                0x00000000c001197b                SysShutdown(regs*)
                0x00000000c0011a08                SysRealpath(regs*)
                0x00000000c0011a57                SysReadDir(regs*)
                0x00000000c0011ad7                SysIsATTY(regs*)
                0x00000000c0011b31                SysSeek(regs*)
                0x00000000c0011b8b                SysTell(regs*)
                0x00000000c0011bf8                SysSize(regs*)
                0x00000000c0011c6b                SysSizeFromFilename(regs*)
                0x00000000c0011d15                SysClose(regs*)
                0x00000000c0011d75                SysOpenDir(regs*)
                0x00000000c0011df2                SysMakeDir(regs*)
                0x00000000c0011e60                SysCloseDir(regs*)
                0x00000000c0011eaf                SysWait(regs*)
                0x00000000c0011ed0                SysNotImpl(regs*)
                0x00000000c0011eeb                SysPanic(regs*)
                0x00000000c0011f06                SysRmdir(regs*)
                0x00000000c0011f64                SysUnlink(regs*)
                0x00000000c0011fc2                SysGetArgv(regs*)
                0x00000000c001200f                SysUSleep(regs*)
                0x00000000c0012038                SysSpawn(regs*)
                0x00000000c00120a9                SysGetEnv(regs*)
                0x00000000c001215e                SysSetFatAttrib(regs*)
                0x00000000c00121c7                SysPipe(regs*)
                0x00000000c001220c                SysGetUnixTime(regs*)
                0x00000000c0012220                string_ends_with(char const*, char const*)
                0x00000000c001226b                SysOpen(regs*)
                0x00000000c001246b                KeSystemCall(regs*, void*)
 *fill*         0x00000000c00124ad        0x3 
 .text          0x00000000c00124b0      0x159 net/ethernet.32
                0x00000000c00124b0                KeSwitchEndian16(unsigned short)
                0x00000000c00124d4                KeSwitchEndian32(unsigned int)
                0x00000000c0012504                EthernetCRC32(unsigned char*, int)
                0x00000000c00125a8                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012609      0xd51 reg/cm.32
                0x00000000c0012609                CmOpen(char const*)
                0x00000000c0012727                CmClose(Reghive_Tag*)
                0x00000000c001273d                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012779                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c00127f0                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c001282f                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012861                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c001289d                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c00128c5                CmUpdateHeader(Reghive_Tag*)
                0x00000000c00128e6                CmExpand(Reghive_Tag*, int)
                0x00000000c0012961                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c00129e7                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012adb                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012c13                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012c74                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012ca4                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012cdb                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012d05                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012d45                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012de9                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012e17                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0012fb4                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013001                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001307b                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00130ce                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013192                zStrtok(char*, char const*)
                0x00000000c0013204                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013285                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013328                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c001335a      0x545 reg/registry.32
                0x00000000c001335a                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00134e6                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001363b                Reg::getLine(char*, char*, char*)
                0x00000000c0013672                Reg::readInt(char*, char*, int*)
                0x00000000c0013760                Reg::readString(char*, char*, char*, int)
                0x00000000c00137e1                Reg::readBool(char*, char*, bool*)
                0x00000000c0013806                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013832                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001385e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001389f       0x36 sys/eject.32
                0x00000000c001389f                SysEject(regs*)
 .text          0x00000000c00138d5       0x18 sys/exit.32
                0x00000000c00138d5                SysExit(regs*)
 .text          0x00000000c00138ed       0x1f sys/getcwd.32
                0x00000000c00138ed                SysGetCwd(regs*)
 .text          0x00000000c001390c        0xc sys/getpid.32
                0x00000000c001390c                SysGetPID(regs*)
 .text          0x00000000c0013918       0x1a sys/getramdata.32
                0x00000000c0013918                SysGetRAMData(regs*)
 .text          0x00000000c0013932       0x82 sys/getvgaptr.32
                0x00000000c0013932                SysGetVGAPtr(regs*)
 .text          0x00000000c00139b4       0xb9 sys/kill.32
                0x00000000c00139b4                SysKill(regs*)
 .text          0x00000000c0013a6d       0xa8 sys/loaddll.32
                0x00000000c0013a6d                SysLoadDLL(regs*)
 .text          0x00000000c0013b15       0x68 sys/read.32
                0x00000000c0013b15                SysRead(regs*)
 .text          0x00000000c0013b7d       0x29 sys/registersignal.32
                0x00000000c0013b7d                SysRegisterSignal(regs*)
 .text          0x00000000c0013ba6      0x19c sys/registry.32
                0x00000000c0013ba6                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013c1d                SysRegistryReadExtent(regs*)
                0x00000000c0013c65                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013c8d                SysRegistryEnterDirectory(regs*)
                0x00000000c0013cb5                SysRegistryGetNext(regs*)
                0x00000000c0013cdd                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013d17                SysRegistryOpen(regs*)
                0x00000000c0013d2b                SysRegistryClose(regs*)
 .text          0x00000000c0013d42       0x55 sys/sbrk.32
                0x00000000c0013d42                SysSbrk(regs*)
 .text          0x00000000c0013d97       0x1c sys/setcwd.32
                0x00000000c0013d97                SysSetCwd(regs*)
 .text          0x00000000c0013db3       0x96 sys/settime.32
                0x00000000c0013db3                SysSetTime(regs*)
 .text          0x00000000c0013e49       0x4a sys/timezone.32
                0x00000000c0013e49                SysTimezone(regs*)
 .text          0x00000000c0013e93       0xfc sys/truncate.32
                0x00000000c0013e93                SysTruncate(regs*)
 .text          0x00000000c0013f8f       0x68 sys/write.32
                0x00000000c0013f8f                SysWrite(regs*)
 .text          0x00000000c0013ff7       0x62 sys/wsbe.32
                0x00000000c0013ff7                SysWsbe(regs*)
 .text          0x00000000c0014059       0x25 sys/yield.32
                0x00000000c0014059                SysYield(regs*)
 .text          0x00000000c001407e     0x1203 thr/elf.32
                0x00000000c001407e                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014305                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014524                Thr::runtimeReferenceHelper()
                0x00000000c0014537                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014586                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014844                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014f85                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0014fb7                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014fee                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015008                Thr::loadDLL(char const*, bool)
                0x00000000c0015248                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0015281        0x3 
 .text          0x00000000c0015284     0x13b5 thr/prcssthr.32
                0x00000000c0015284                userModeEntryPoint(void*)
                0x00000000c00152ac                changeTSS
                0x00000000c00152dc                switchToThread(ThreadControlBlock*)
                0x00000000c001538c                Process::addArgs(char**)
                0x00000000c00153f8                Process::Process(char const*, Process*, char**)
                0x00000000c00153f8                Process::Process(char const*, Process*, char**)
                0x00000000c0015604                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015604                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00157d8                taskStartupFunction
                0x00000000c00157e4                Semaphore::Semaphore(int)
                0x00000000c00157e4                Semaphore::Semaphore(int)
                0x00000000c0015814                Mutex::Mutex()
                0x00000000c0015814                Mutex::Mutex()
                0x00000000c0015828                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015930                Process::createUserThread()
                0x00000000c0015950                setupMultitasking(void (*)())
                0x00000000c0015a74                schedule()
                0x00000000c0015b08                Semaphore::tryAcquire()
                0x00000000c0015bc8                Semaphore::assertLocked(char const*)
                0x00000000c0015c4c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015c74                blockTask(TaskState)
                0x00000000c0015cac                waitTask(int, int*, int)
                0x00000000c0015cf0                milliTenthSleepUntil(unsigned int)
                0x00000000c0015d90                milliTenthSleep(unsigned int)
                0x00000000c0015da4                sleep(unsigned int)
                0x00000000c0015db4                Semaphore::acquire()
                0x00000000c0015e7c                taskReturned
                0x00000000c0015ec0                Thr::processFromPID(int)
                0x00000000c0015f6c                unblockTask(ThreadControlBlock*)
                0x00000000c0016018                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00162ec                cleanerTaskFunction(void*)
                0x00000000c00163f4                terminateTask(int)
                0x00000000c00164e0                Thr::terminateFromIRQ(int)
                0x00000000c00164f0                Semaphore::release()
 .text          0x00000000c0016639      0xc31 vm86/vm8086.32
                0x00000000c0016639                Vm::inbv(unsigned short)
                0x00000000c001664c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016682                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016692                Vm::getSegment(unsigned int)
                0x00000000c001669a                Vm::getOffset(unsigned int)
                0x00000000c001669f                Vm::mainloop2()
                0x00000000c00166d9                Vm::mainVm8086Loop(void*)
                0x00000000c00166e9                Vm::mainloop3(unsigned long)
                0x00000000c001670f                Vm::initialise8086()
                0x00000000c0016752                Vm::finish8086()
                0x00000000c00167b3                Vm::getOutput8086(unsigned char*)
                0x00000000c00167d8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016891                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016a2f                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016acc                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016add                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016aef                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016b00                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016b15                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016b2b                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016b40                Vm::faultHandler(regs*)
 .text          0x00000000c001726a      0xaf0 arch/i386/hal.32
                0x00000000c001726a                noCopro(unsigned long)
                0x00000000c001726b                nmiHandler(regs*, void*)
                0x00000000c0017284                doubleFault(regs*, void*)
                0x00000000c001729d                displayDebugInfo(regs*)
                0x00000000c0017622                HalSystemIdle()
                0x00000000c001769e                displayProgramFault(char const*)
                0x00000000c00176ea                gpFault(regs*, void*)
                0x00000000c0017751                pgFault(regs*, void*)
                0x00000000c00177da                otherISRHandler(regs*, void*)
                0x00000000c001780e                opcodeFault(regs*, void*)
                0x00000000c0017891                i386SaveCoprocessor(void*)
                0x00000000c00178a5                i386LoadCoprocessor(void*)
                0x00000000c00178b9                x87EmulHandler(regs*, void*)
                0x00000000c0017956                HalInitialiseCoprocessor()
                0x00000000c0017a04                HalPanic(char const*)
                0x00000000c0017b18                HalQueryPerformanceCounter()
                0x00000000c0017b33                HalInitialise()
                0x00000000c0017ce9                HalMakeBeep(int)
                0x00000000c0017d23                HalGetRand()
                0x00000000c0017d26                HalEndOfInterrupt(int)
                0x00000000c0017d57                HalRestart()
                0x00000000c0017d58                HalShutdown()
                0x00000000c0017d59                HalSleep()
 *fill*         0x00000000c0017d5a        0x2 
 .text          0x00000000c0017d5c      0x2dc arch/i386/pic.32
                0x00000000c0017d5c                picIoWait()
                0x00000000c0017d64                picDisable()
                0x00000000c0017d98                picGetIRQReg(int)
                0x00000000c0017e14                picOpen()
                0x00000000c0017f98                picEOI(int)
 .text          0x00000000c0018038      0x66e arch/i386/rtc.32
                0x00000000c0018038                RTC::open(int, int, void*)
                0x00000000c001803c                RTC::close(int, int, void*)
                0x00000000c0018040                RTC::timeInSecondsUTC()
                0x00000000c0018052                RTC::timeInDatetimeUTC()
                0x00000000c0018078                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00180b6                RTC::~RTC()
                0x00000000c00180b6                RTC::~RTC()
                0x00000000c00180da                RTC::~RTC()
                0x00000000c0018104                RTC::get_update_in_progress_flag()
                0x00000000c001811e                RTC::completeRTCRefresh()
                0x00000000c00183f8                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00185a6                rtcIRQHandler(regs*, void*)
                0x00000000c00185ec                RTC::RTC()
                0x00000000c00185ec                RTC::RTC()
 *fill*         0x00000000c00186a6        0x2 
 .text          0x00000000c00186a8      0x1f4 arch/i386/vga.32
                0x00000000c00186a8                HalConsoleScroll(int, int)
                0x00000000c00187b0                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018814                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001889c     0x14f3 fs/fat/vfslink.32
                0x00000000c001889c                FAT::getName()
                0x00000000c00188a4                FAT::tell(void*, unsigned long long*)
                0x00000000c00188e0                FAT::stat(void*, unsigned long long*)
                0x00000000c001891c                FAT::~FAT()
                0x00000000c001891c                FAT::~FAT()
                0x00000000c0018940                FAT::~FAT()
                0x00000000c0018968                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018a0c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018aec                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018cd0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018eec                FAT::allocateSwapfile(char const*, int)
                0x00000000c00190ac                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001921c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001927c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00192dc                FAT::close(void*)
                0x00000000c0019330                FAT::closeDir(void*)
                0x00000000c0019384                FAT::truncate(void*, unsigned long long)
                0x00000000c00193f0                FAT::seek(void*, unsigned long long)
                0x00000000c0019448                fatWrapperReadDisk
                0x00000000c0019488                fatWrapperWriteDisk
                0x00000000c00194c8                fatWrapperIoctl
                0x00000000c00195e8                FAT::FAT()
                0x00000000c00195e8                FAT::FAT()
                0x00000000c0019640                FAT::fixFilepath(char*)
                0x00000000c0019680                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00197f4                FAT::openDir(char const*, void**)
                0x00000000c00198a4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001999c                FAT::unlink(char const*)
                0x00000000c0019a1c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019bd4                FAT::rename(char const*, char const*)
                0x00000000c0019ca0                FAT::mkdir(char const*)
                0x00000000c0019d20                FAT::exists(char const*)
 *fill*         0x00000000c0019d8f        0x1 
 .text          0x00000000c0019d90       0x94 fs/iso9660/helper.32
                0x00000000c0019d90                isoReadDiscSectorHelper
                0x00000000c0019dec                iso_kprintf
                0x00000000c0019e08                iso_kprintfd
 .text          0x00000000c0019e24      0x71a fs/iso9660/vfslink.32
                0x00000000c0019e24                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019e2a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c0019e30                ISO9660::getName()
                0x00000000c0019e36                ISO9660::closeDir(void*)
                0x00000000c0019e40                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019e46                ISO9660::unlink(char const*)
                0x00000000c0019e4c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019e52                ISO9660::rename(char const*, char const*)
                0x00000000c0019e58                ISO9660::mkdir(char const*)
                0x00000000c0019e5e                ISO9660::~ISO9660()
                0x00000000c0019e5e                ISO9660::~ISO9660()
                0x00000000c0019e82                ISO9660::~ISO9660()
                0x00000000c0019eaa                ISO9660::exists(char const*)
                0x00000000c0019ebe                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0019fa4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0019fec                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a02e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a06c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a0be                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a200                ISO9660::close(void*)
                0x00000000c001a230                ISO9660::openDir(char const*, void**)
                0x00000000c001a30a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a425                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a4a4                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a516                ISO9660::ISO9660()
                0x00000000c001a516                ISO9660::ISO9660()
 .text          0x00000000c001a53e      0x26c hal/sound/sndcard.32
                0x00000000c001a53e                SoundCard::beginPlayback()
                0x00000000c001a54c                SoundCard::stopPlayback()
                0x00000000c001a55a                SoundCard::SoundCard(char const*)
                0x00000000c001a55a                SoundCard::SoundCard(char const*)
                0x00000000c001a5f8                SoundCard::~SoundCard()
                0x00000000c001a5f8                SoundCard::~SoundCard()
                0x00000000c001a61c                SoundCard::~SoundCard()
                0x00000000c001a646                SoundCard::configureRates(int, int, int)
                0x00000000c001a676                SoundCard::getSamples16(int, short*)
                0x00000000c001a6d2                SoundCard::getSamples32(int, int*)
                0x00000000c001a758                SoundCard::addChannel(SoundPort*)
                0x00000000c001a796                SoundCard::removeChannel(int)
 *fill*         0x00000000c001a7aa        0x2 
 .text          0x00000000c001a7ac      0x393 hal/sound/sndport.32
                0x00000000c001a7ac                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a7ac                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a838                SoundPort::~SoundPort()
                0x00000000c001a838                SoundPort::~SoundPort()
                0x00000000c001a86c                SoundPort::unpause()
                0x00000000c001a878                SoundPort::pause()
                0x00000000c001a884                SoundPort::getBufferUsed()
                0x00000000c001a88c                SoundPort::getBufferSize()
                0x00000000c001a894                SoundPort::buffer16(short*, int)
                0x00000000c001a920                SoundPort::buffer32(int*, int)
                0x00000000c001a9ac                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001aa7c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001ab3f        0x0 hw/bus/isa.32
 *fill*         0x00000000c001ab3f        0x1 
 .text          0x00000000c001ab40      0xbc5 hw/bus/pci.32
                0x00000000c001ab40                PCI::open(int, int, void*)
                0x00000000c001ab5e                PCI::close(int, int, void*)
                0x00000000c001ab62                PCI::PCI()
                0x00000000c001ab62                PCI::PCI()
                0x00000000c001abfa                PCI::readBAR8(unsigned int, int)
                0x00000000c001ac16                PCI::readBAR16(unsigned int, int)
                0x00000000c001ac34                PCI::readBAR32(unsigned int, int)
                0x00000000c001ac50                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001ac70                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001ac92                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001acb2                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ad28                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001add2                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001adf6                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae1e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae68                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae90                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001aeb4                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001aed8                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001af00                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001af64                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b04a                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b314                PCI::checkBus(unsigned char)
                0x00000000c001b338                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b4be                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b63a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b6ac                PCI::detect()
 *fill*         0x00000000c001b705        0x1 
 .text          0x00000000c001b706      0xb96 hw/diskctrl/ide.32
                0x00000000c001b706                IDE::close(int, int, void*)
                0x00000000c001b70a                IDE::IDE()
                0x00000000c001b70a                IDE::IDE()
                0x00000000c001b73e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b750                selectDrive(unsigned char, unsigned char)
                0x00000000c001b752                IDE::getBase(unsigned char)
                0x00000000c001b764                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b824                IDE::read(unsigned char, unsigned char)
                0x00000000c001b8d8                IDE::waitInterrupt(unsigned char)
                0x00000000c001b93a                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001b956                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001b972                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001b9bc                IDE::open(int, int, void*)
                0x00000000c001bdf6                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001bec6                IDE::detect()
                0x00000000c001c18e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c248                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c29c      0x32c hw/diskctrl/satabus.32
                0x00000000c001c29c                SATABus::close(int, int, void*)
                0x00000000c001c2a0                SATABus::detect()
                0x00000000c001c2a2                SATABus::SATABus()
                0x00000000c001c2a2                SATABus::SATABus()
                0x00000000c001c328                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c35a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c3a2                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c3c2                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c3ec                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c4fe                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c5a8                SATABus::open(int, int, void*)
 .text          0x00000000c001c5c8      0x96d hw/diskphys/ata.32
                0x00000000c001c5c8                ATA::close(int, int, void*)
                0x00000000c001c5ec                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c5ee                ATA::ATA()
                0x00000000c001c5ee                ATA::ATA()
                0x00000000c001c61c                ATA::flush(bool)
                0x00000000c001c66a                ATA::readyForCommand()
                0x00000000c001c6b6                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ca7a                ATA::detectCHS()
                0x00000000c001caa4                ATA::open(int, int, void*)
                0x00000000c001cb70                combineCharAndColour(char, unsigned char)
                0x00000000c001cb81                combineColours(unsigned char, unsigned char)
                0x00000000c001cb8e                ATA::read(unsigned long long, int, void*)
                0x00000000c001cd64                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001cf35        0x1 
 .text          0x00000000c001cf36      0x612 hw/diskphys/atapi.32
                0x00000000c001cf36                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001cf3c                ATAPI::close(int, int, void*)
                0x00000000c001cf60                ATAPI::ATAPI()
                0x00000000c001cf60                ATAPI::ATAPI()
                0x00000000c001cf8e                ATAPI::readyForCommand()
                0x00000000c001cfe0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d2a0                ATAPI::diskRemoved()
                0x00000000c001d2da                ATAPI::eject()
                0x00000000c001d322                ATAPI::diskInserted()
                0x00000000c001d32e                ATAPI::detectMedia()
                0x00000000c001d3ee                ATAPI::open(int, int, void*)
                0x00000000c001d4ce                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d548      0x7ff hw/diskphys/sata.32
                0x00000000c001d548                SATA::close(int, int, void*)
                0x00000000c001d56c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d56e                SATA::open(int, int, void*)
                0x00000000c001d618                SATA::SATA()
                0x00000000c001d618                SATA::SATA()
                0x00000000c001d646                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d898                SATA::read(unsigned long long, int, void*)
                0x00000000c001dae8                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001dd47        0x1 
 .text          0x00000000c001dd48      0x5d8 hw/diskphys/satapi.32
                0x00000000c001dd48                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001dd4e                SATAPI::close(int, int, void*)
                0x00000000c001dd72                SATAPI::SATAPI()
                0x00000000c001dd72                SATAPI::SATAPI()
                0x00000000c001dda0                SATAPI::diskRemoved()
                0x00000000c001dda2                SATAPI::diskInserted()
                0x00000000c001ddbe                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e0a4                SATAPI::eject()
                0x00000000c001e0e0                SATAPI::detectMedia()
                0x00000000c001e136                SATAPI::open(int, int, void*)
                0x00000000c001e236                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e320      0x45b hw/intctrl/apic.32
                0x00000000c001e320                IOAPIC::close(int, int, void*)
                0x00000000c001e326                apicGetBase()
                0x00000000c001e36c                IOAPIC::IOAPIC()
                0x00000000c001e36c                IOAPIC::IOAPIC()
                0x00000000c001e394                apicOpen()
                0x00000000c001e510                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e542                IOAPIC::read(int)
                0x00000000c001e56a                IOAPIC::open(int, int, void*)
                0x00000000c001e650                IOAPIC::write(int, int)
                0x00000000c001e67c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e77b        0x1 
 .text          0x00000000c001e77c       0xf0 hw/timer/apictimer.32
                0x00000000c001e77c                APICTimer::close(int, int, void*)
                0x00000000c001e784                apicTimerHandler(regs*, void*)
                0x00000000c001e7ac                APICTimer::open(int, int, void*)
                0x00000000c001e81c                APICTimer::write(int)
                0x00000000c001e844                APICTimer::APICTimer()
                0x00000000c001e844                APICTimer::APICTimer()
 .text          0x00000000c001e86c      0x1ad hw/timer/pit.32
                0x00000000c001e86c                PIT::write(int)
                0x00000000c001e8f0                pitHandler(regs*, void*)
                0x00000000c001e918                PIT::open(int, int, void*)
                0x00000000c001e968                PIT::close(int, int, void*)
                0x00000000c001e998                PIT::PIT()
                0x00000000c001e998                PIT::PIT()
 *fill*         0x00000000c001ea19        0x7 
 .text          0x00000000c001ea20       0x83 arch/i386/avx.32
                0x00000000c001ea20                avxDetect
                0x00000000c001ea4a                avxSave
                0x00000000c001ea5b                avxLoad
                0x00000000c001ea6c                avxInit
                0x00000000c001ea8e                avxClose
                0x00000000c001ea8f                wouldSheSayYes
 *fill*         0x00000000c001eaa3        0xd 
 .text          0x00000000c001eab0      0x2ec arch/i386/interrupt.32
                0x00000000c001eab0                isr0
                0x00000000c001eac0                isr1
                0x00000000c001eaca                isr2
                0x00000000c001ead4                isr3
                0x00000000c001eade                isr4
                0x00000000c001eae8                isr5
                0x00000000c001eaf2                isr6
                0x00000000c001eafc                isr7
                0x00000000c001eb06                isr8
                0x00000000c001eb0e                isr9
                0x00000000c001eb18                isr10
                0x00000000c001eb20                isr11
                0x00000000c001eb28                isr12
                0x00000000c001eb30                isr13
                0x00000000c001eb4a                isr14
                0x00000000c001eb52                isr15
                0x00000000c001eb5c                isr16
                0x00000000c001eb66                isr17
                0x00000000c001eb70                isr18
                0x00000000c001eb7a                irq3
                0x00000000c001eb84                irq4
                0x00000000c001eb8e                irq5
                0x00000000c001eb98                irq6
                0x00000000c001eba2                irq7
                0x00000000c001ebac                irq8
                0x00000000c001ebb6                irq9
                0x00000000c001ebc0                irq10
                0x00000000c001ebca                irq11
                0x00000000c001ebd4                irq12
                0x00000000c001ebde                irq13
                0x00000000c001ebe8                irq14
                0x00000000c001ebf2                irq15
                0x00000000c001ebfc                irq1
                0x00000000c001ec03                irq2
                0x00000000c001ec0a                isr96
                0x00000000c001ec11                irq0
                0x00000000c001ec16                int_common_stub
                0x00000000c001ec48                syscall_common_stub
                0x00000000c001ed4c                irq16
                0x00000000c001ed56                irq17
                0x00000000c001ed60                irq18
                0x00000000c001ed6a                irq19
                0x00000000c001ed74                irq20
                0x00000000c001ed7e                irq21
                0x00000000c001ed88                irq22
                0x00000000c001ed92                irq23
 *fill*         0x00000000c001ed9c        0x4 
 .text          0x00000000c001eda0       0x10 arch/i386/rdrand.32
                0x00000000c001eda0                i386GetRDRAND
 .text          0x00000000c001edb0       0x39 arch/i386/sse.32
                0x00000000c001edb0                absolutelyNoChanceInHell
                0x00000000c001edb0                sseDetect
                0x00000000c001edc8                sseSave
                0x00000000c001edd0                sseLoad
                0x00000000c001edd8                sseInit
                0x00000000c001ede8                sseClose
 *fill*         0x00000000c001ede9        0x7 
 .text          0x00000000c001edf0       0x49 arch/i386/x87.32
                0x00000000c001edf6                x87Detect
                0x00000000c001ee11                x87Save
                0x00000000c001ee18                x87Load
                0x00000000c001ee1f                x87Init
                0x00000000c001ee38                x87Close
 *fill*         0x00000000c001ee39        0x3 
 .text          0x00000000c001ee3c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001ee61        0x0 crtn.32
 *fill*         0x00000000c001ee61        0x3 
 .text          0x00000000c001ee64      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001ee64                __divdi3
 *fill*         0x00000000c001efaf        0x1 
 .text          0x00000000c001efb0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001efb0                __moddi3
 *fill*         0x00000000c001f12e        0x2 
 .text          0x00000000c001f130       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f130                __udivdi3
 *fill*         0x00000000c001f22f        0x1 
 .text          0x00000000c001f230      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f230                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f350        0x0
 .iplt          0x00000000c001f350        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f34a        0xf
 .init          0x00000000c001f34a        0x3 crti.32
                0x00000000c001f34a                _init
 .init          0x00000000c001f34d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f352        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f357        0x2 crtn.32

.fini           0x00000000c001f359        0xa
 .fini          0x00000000c001f359        0x3 crti.32
                0x00000000c001f359                _fini
 .fini          0x00000000c001f35c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f361        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f364       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f364       0x23 core/computer.32
                0x00000000c001f364                Computer::~Computer()
                0x00000000c001f364                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f388       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f388       0x2a core/computer.32
                0x00000000c001f388                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f3b2       0x21
 .text._Z10idleCommonv
                0x00000000c001f3b2       0x21 core/idle.32
                0x00000000c001f3b2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f3d4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f3d4        0x2 core/unixfile.32
                0x00000000c001f3d4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f3d4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f3d6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f3d6       0x42 core/unixfile.32
                0x00000000c001f3d6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f3d6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f418       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f418       0xd3 core/unixfile.32
                0x00000000c001f418                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f4ec        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f4ec        0x7 core/unixfile.32
                0x00000000c001f4ec                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f4f4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f4f4       0xa1 core/unixfile.32
                0x00000000c001f4f4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f596        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f596        0x8 core/unixfile.32
                0x00000000c001f596                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f59e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f59e       0x1a hal/device.32
                0x00000000c001f59e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f59e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f5b8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f5b8       0x2a hal/device.32
                0x00000000c001f5b8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f5e2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f5e2       0xdc hal/device.32
                0x00000000c001f5e2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f6be       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f6be       0x42 hal/device.32
                0x00000000c001f6be                LinkedList<Device>::LinkedList()
                0x00000000c001f6be                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f700       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f700       0x1c hal/timer.32
                0x00000000c001f700                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f71c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f71c        0x7 hal/timer.32
                0x00000000c001f71c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f724       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f724       0xbc hal/timer.32
                0x00000000c001f724                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f7e0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f7e0       0xda hal/timer.32
                0x00000000c001f7e0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f8bc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f8bc       0x23 hw/acpi.32
                0x00000000c001f8bc                ACPI::~ACPI()
                0x00000000c001f8bc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f8e0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f8e0       0x2a hw/acpi.32
                0x00000000c001f8e0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f90c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f90c        0x2 hw/acpi.32
                0x00000000c001f90c                LinkedList<Device>::~LinkedList()
                0x00000000c001f90c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f910       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f910       0x1c hw/acpi.32
                0x00000000c001f910                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f92c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f92c        0x7 hw/acpi.32
                0x00000000c001f92c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f934       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f934       0xb8 hw/acpi.32
                0x00000000c001f934                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001f9ec       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001f9ec       0x23 hw/cpu.32
                0x00000000c001f9ec                CPU::~CPU()
                0x00000000c001f9ec                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fa10       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fa10       0x2a hw/cpu.32
                0x00000000c001fa10                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fa3c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fa3c        0x8 sys/kill.32
                0x00000000c001fa3c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fa44        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fa44        0x2 thr/prcssthr.32
                0x00000000c001fa44                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fa44                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fa48       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fa48       0x49 thr/prcssthr.32
                0x00000000c001fa48                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fa48                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fa94       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fa94       0x42 thr/prcssthr.32
                0x00000000c001fa94                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fa94                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fad6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fad6       0x23 hw/bus/pci.32
                0x00000000c001fad6                PCI::~PCI()
                0x00000000c001fad6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fafa       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fafa       0x2a hw/bus/pci.32
                0x00000000c001fafa                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fb24       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fb24       0x23 hw/diskctrl/ide.32
                0x00000000c001fb24                IDE::~IDE()
                0x00000000c001fb24                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fb48       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fb48       0x2a hw/diskctrl/ide.32
                0x00000000c001fb48                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001fb72       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001fb72       0x23 hw/diskctrl/satabus.32
                0x00000000c001fb72                SATABus::~SATABus()
                0x00000000c001fb72                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001fb96       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001fb96       0x2a hw/diskctrl/satabus.32
                0x00000000c001fb96                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001fbc0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fbc0       0x23 hw/diskphys/ata.32
                0x00000000c001fbc0                ATA::~ATA()
                0x00000000c001fbc0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fbe4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fbe4       0x2a hw/diskphys/ata.32
                0x00000000c001fbe4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fc0e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fc0e       0x23 hw/diskphys/atapi.32
                0x00000000c001fc0e                ATAPI::~ATAPI()
                0x00000000c001fc0e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fc32       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fc32       0x2a hw/diskphys/atapi.32
                0x00000000c001fc32                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001fc5c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001fc5c       0x23 hw/diskphys/sata.32
                0x00000000c001fc5c                SATA::~SATA()
                0x00000000c001fc5c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001fc80       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001fc80       0x2a hw/diskphys/sata.32
                0x00000000c001fc80                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001fcaa       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001fcaa       0x23 hw/diskphys/satapi.32
                0x00000000c001fcaa                SATAPI::~SATAPI()
                0x00000000c001fcaa                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001fcce       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001fcce       0x2a hw/diskphys/satapi.32
                0x00000000c001fcce                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001fcf8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001fcf8       0x23 hw/intctrl/apic.32
                0x00000000c001fcf8                IOAPIC::~IOAPIC()
                0x00000000c001fcf8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001fd1c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001fd1c       0x2a hw/intctrl/apic.32
                0x00000000c001fd1c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001fd48       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001fd48       0x23 hw/timer/apictimer.32
                0x00000000c001fd48                APICTimer::~APICTimer()
                0x00000000c001fd48                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001fd6c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001fd6c       0x2a hw/timer/apictimer.32
                0x00000000c001fd6c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001fd98       0x23
 .text._ZN3PITD2Ev
                0x00000000c001fd98       0x23 hw/timer/pit.32
                0x00000000c001fd98                PIT::~PIT()
                0x00000000c001fd98                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001fdbc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001fdbc       0x2a hw/timer/pit.32
                0x00000000c001fdbc                PIT::~PIT()

.rodata         0x00000000c001fde6     0x3106
                0x00000000c001fde6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001fde6        0x2 
 .ctors         0x00000000c001fde8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001fdec        0x4 core/unixfile.32
 .ctors         0x00000000c001fdf0        0x4 thr/prcssthr.32
 .ctors         0x00000000c001fdf4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fdf8                end_ctors = .
                0x00000000c001fdf8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001fdf8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001fdfc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fdfc                __DTOR_END__
                0x00000000c001fe00                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001fe00        0x0 
 .rodata        0x00000000c001fe00      0x101 acpica/utclib.32
                0x00000000c001fe00                AcpiGbl_Ctypes
 *fill*         0x00000000c001ff01        0x3 
 .rodata        0x00000000c001ff04       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001ff1c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001ff66       0x1a 
 .rodata        0x00000000c001ff80       0xed fs/fat/ff.32
 *fill*         0x00000000c002006d       0x13 
 .rodata        0x00000000c0020080      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020480       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c00204ef      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020604       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c002066c       0x2c core/computer.32
                0x00000000c002066c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020698       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00206c8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00206d4       0x17 core/main.32
 *fill*         0x00000000c00206eb        0x1 
 .rodata.str1.4
                0x00000000c00206ec       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020791       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c00207e9       0x39 core/pipe.32
 *fill*         0x00000000c0020822        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020824       0x1c core/pipe.32
                0x00000000c0020824                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020840       0x2b core/terminal.32
 *fill*         0x00000000c002086b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c002086c       0x1c core/terminal.32
                0x00000000c002086c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020888       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00208aa       0x15 core/unixfile.32
 *fill*         0x00000000c00208bf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00208c0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002090b        0x8 core/unixfile.32
 *fill*         0x00000000c0020913        0x1 
 .rodata.str1.4
                0x00000000c0020914       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020934       0x1c core/unixfile.32
                0x00000000c0020934                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020950       0x1c core/unixfile.32
                0x00000000c0020950                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002096c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020c00      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020d26       0x33 coreobjs/c++.32
 *fill*         0x00000000c0020d59        0x3 
 .rodata        0x00000000c0020d5c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020eac      0x169 dbg/usban.32
 *fill*         0x00000000c0021015        0x3 
 .rodata.str1.4
                0x00000000c0021018      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002114f       0xe3 fs/symlink.32
 .rodata        0x00000000c0021232        0x9 fs/symlink.32
 .rodata.str1.1
                0x00000000c002123b       0xe3 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c002123b        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c002123c       0x6c fs/vfs.32
                0x00000000c002123c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00212a8       0x1c fs/vfs.32
                0x00000000c00212a8                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00212c4       0x1c fs/vfs.32
                0x00000000c00212c4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00212e0       0x2c hal/bus.32
                0x00000000c00212e0                vtable for Bus
 .rodata.str1.1
                0x00000000c002130c       0x1e hal/clock.32
 *fill*         0x00000000c002132a        0x2 
 .rodata._ZTV5Clock
                0x00000000c002132c       0x3c hal/clock.32
                0x00000000c002132c                vtable for Clock
 *fill*         0x00000000c0021368       0x18 
 .rodata        0x00000000c0021380       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00213b0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021408       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021408       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021408       0x2c hal/device.32
                0x00000000c0021408                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021434       0x2c hal/device.32
                0x00000000c0021434                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021460       0x2c hal/diskctrl.32
                0x00000000c0021460                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002148c       0x38 hal/diskphys.32
                0x00000000c002148c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00214c4       0x3e hal/intctrl.32
 *fill*         0x00000000c0021502        0x2 
 .rodata.str1.4
                0x00000000c0021504       0x5d hal/intctrl.32
 .rodata        0x00000000c0021561       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c00215b4       0x34 hal/keybrd.32
                0x00000000c00215b4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00215e8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002162c       0x2c hal/logidisk.32
                0x00000000c002162c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021658       0x2c hal/mouse.32
                0x00000000c0021658                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021684       0x34 hal/nic.32
                0x00000000c0021684                vtable for NIC
 .rodata.str1.1
                0x00000000c00216b8        0xb hal/partition.32
 *fill*         0x00000000c00216c3        0x1 
 .rodata._ZTV6Serial
                0x00000000c00216c4       0x44 hal/serial.32
                0x00000000c00216c4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021708       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021708        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021708       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021708       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021708       0x30 hal/timer.32
                0x00000000c0021708                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021738       0x10 hal/vcache.32
                0x00000000c0021738                vtable for VCache
 .rodata.str1.1
                0x00000000c0021748       0x93 hal/video.32
 *fill*         0x00000000c00217db        0x1 
 .rodata._ZTV5Video
                0x00000000c00217dc       0x4c hal/video.32
                0x00000000c00217dc                vtable for Video
 .rodata.str1.4
                0x00000000c0021828       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c00218c3      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021a19       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021a19        0x8 hw/acpi.32
 *fill*         0x00000000c0021a19        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021a1c       0x2c hw/acpi.32
                0x00000000c0021a1c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021a48      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0021bc3        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021bc4       0x2c hw/cpu.32
                0x00000000c0021bc4                vtable for CPU
 .rodata.str1.1
                0x00000000c0021bf0       0x19 krnl/atexit.32
 .rodata.str1.1
                0x00000000c0021c09       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021c45       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0021cd6       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0021d9f       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021de7       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0021e12       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0021e88       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021ecd        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0021ed7       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0021ef8       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0021f8e       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0021fe2       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c002200e      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00221da       0x57 thr/prcssthr.32
 *fill*         0x00000000c0022231        0x3 
 .rodata.str1.4
                0x00000000c0022234      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022344       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022344       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022344       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022344        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022344       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022406        0x2 
 .rodata        0x00000000c0022408       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022438      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c00225d7        0x1 
 .rodata.str1.4
                0x00000000c00225d8       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002264b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022660       0x3c arch/i386/rtc.32
                0x00000000c0022660                vtable for RTC
 .rodata.str1.1
                0x00000000c002269c       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00226dd        0x3 
 .rodata._ZTV3FAT
                0x00000000c00226e0       0x6c fs/fat/vfslink.32
                0x00000000c00226e0                vtable for FAT
 .rodata.str1.1
                0x00000000c002274c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c002274c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022884       0x6c fs/iso9660/vfslink.32
                0x00000000c0022884                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00228f0       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022934       0x34 hal/sound/sndcard.32
                0x00000000c0022934                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022968       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00229a7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00229df       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022a80       0x2c hw/bus/pci.32
                0x00000000c0022a80                vtable for PCI
 .rodata.str1.1
                0x00000000c0022aac       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022b33        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022b34       0x2c hw/diskctrl/ide.32
                0x00000000c0022b34                vtable for IDE
 .rodata.str1.4
                0x00000000c0022b60       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022b84       0x2c hw/diskctrl/satabus.32
                0x00000000c0022b84                vtable for SATABus
 .rodata.str1.1
                0x00000000c0022bb0       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0022bc2        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022bc4       0x38 hw/diskphys/ata.32
                0x00000000c0022bc4                vtable for ATA
 .rodata.str1.1
                0x00000000c0022bfc        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022c09        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0022c0c       0x38 hw/diskphys/atapi.32
                0x00000000c0022c0c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022c44       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0022cc0       0x38 hw/diskphys/sata.32
                0x00000000c0022cc0                vtable for SATA
 .rodata.str1.1
                0x00000000c0022cf8       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0022de2        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0022de4       0x38 hw/diskphys/satapi.32
                0x00000000c0022de4                vtable for SATAPI
 .rodata        0x00000000c0022e1c        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0022e24       0x2c hw/intctrl/apic.32
                0x00000000c0022e24                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0022e50       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0022e6b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0022e6c       0x30 hw/timer/apictimer.32
                0x00000000c0022e6c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0022e9c       0x1d hw/timer/pit.32
 *fill*         0x00000000c0022eb9        0x3 
 .rodata._ZTV3PIT
                0x00000000c0022ebc       0x30 hw/timer/pit.32
                0x00000000c0022ebc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0022eec      0x7b5
 *(.data)
 .data          0x00000000c0022eec        0x0 crti.32
 .data          0x00000000c0022eec        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0022eec                __dso_handle
 .data          0x00000000c0022ef0        0x0 acpica/utclib.32
 .data          0x00000000c0022ef0        0x0 core/malloc.32
 .data          0x00000000c0022ef0        0x0 libk/ctype.32
 .data          0x00000000c0022ef0        0x0 libk/string.32
 .data          0x00000000c0022ef0        0x0 fs/fat/diskio.32
 .data          0x00000000c0022ef0        0x0 fs/fat/ff.32
 .data          0x00000000c0022ef0        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0022ef0        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0022ef0        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0022ef0        0x0 core/computer.32
 .data          0x00000000c0022ef0        0x0 core/gdt.32
 .data          0x00000000c0022ef0        0x0 core/idle.32
 .data          0x00000000c0022ef0        0x0 core/idt.32
 .data          0x00000000c0022ef0        0x4 core/kheap.32
 .data          0x00000000c0022ef4        0x0 core/main.32
 .data          0x00000000c0022ef4        0x4 core/physmgr.32
                0x00000000c0022ef4                Phys::bitmap
 .data          0x00000000c0022ef8        0x0 core/pipe.32
 *fill*         0x00000000c0022ef8        0x8 
 .data          0x00000000c0022f00       0x60 core/terminal.32
                0x00000000c0022f00                VgaText::hiddenOut
                0x00000000c0022f20                ansiToVGAMappings
 .data          0x00000000c0022f60        0x0 core/tss.32
 .data          0x00000000c0022f60        0x4 core/unixfile.32
                0x00000000c0022f60                UnixFile::nextFd
 .data          0x00000000c0022f64       0x15 core/virtmgr.32
                0x00000000c0022f64                Virt::pageAllocPtr
                0x00000000c0022f68                Virt::bitmap
                0x00000000c0022f6c                Virt::swapfileSectorsPerPage
                0x00000000c0022f70                Virt::swapfileLength
                0x00000000c0022f74                Virt::swapfileSector
                0x00000000c0022f78                Virt::swapfileDrive
 *fill*         0x00000000c0022f79        0x3 
 .data          0x00000000c0022f7c        0x4 coreobjs/c++.32
                0x00000000c0022f7c                __stack_chk_guard
 .data          0x00000000c0022f80        0x0 dbg/kconsole.32
 .data          0x00000000c0022f80       0x28 dbg/usban.32
                0x00000000c0022f80                KiUsbanTypeMismatchTypes
 .data          0x00000000c0022fa8        0x0 fs/symlink.32
 .data          0x00000000c0022fa8        0x0 fs/vfs.32
 .data          0x00000000c0022fa8        0x0 hal/bus.32
 .data          0x00000000c0022fa8        0x0 hal/buzzer.32
 .data          0x00000000c0022fa8        0x0 hal/clock.32
 .data          0x00000000c0022fa8        0x0 hal/device.32
 .data          0x00000000c0022fa8        0x0 hal/diskctrl.32
 .data          0x00000000c0022fa8        0x0 hal/diskphys.32
 .data          0x00000000c0022fa8        0x0 hal/fpu.32
 .data          0x00000000c0022fa8        0x0 hal/intctrl.32
 .data          0x00000000c0022fa8        0x0 hal/keybrd.32
 .data          0x00000000c0022fa8        0x0 hal/logidisk.32
 .data          0x00000000c0022fa8        0x0 hal/mouse.32
 .data          0x00000000c0022fa8        0x0 hal/nic.32
 .data          0x00000000c0022fa8        0x0 hal/partition.32
 .data          0x00000000c0022fa8        0x0 hal/serial.32
 .data          0x00000000c0022fa8        0x0 hal/timer.32
 .data          0x00000000c0022fa8        0x0 hal/vcache.32
 .data          0x00000000c0022fa8        0x0 hal/video.32
 .data          0x00000000c0022fa8       0x10 hw/acpi.32
                0x00000000c0022fa8                legacyIRQRemaps
 .data          0x00000000c0022fb8        0x4 hw/cpu.32
                0x00000000c0022fb8                lastCode
 .data          0x00000000c0022fbc        0x0 krnl/atexit.32
 *fill*         0x00000000c0022fbc        0x4 
 .data          0x00000000c0022fc0      0x142 krnl/bootmsg.32
                0x00000000c0022fc0                KiSplashScreen
 .data          0x00000000c0023102        0x0 krnl/compat.32
 *fill*         0x00000000c0023102       0x1e 
 .data          0x00000000c0023120       0x4d krnl/env.32
                0x00000000c0023120                defaultSysEnv
 .data          0x00000000c002316d        0x0 krnl/inlines.32
 .data          0x00000000c002316d        0x0 krnl/panic.32
 .data          0x00000000c002316d        0x0 krnl/powctrl.32
 .data          0x00000000c002316d        0x0 krnl/random.32
 .data          0x00000000c002316d        0x0 krnl/resolve.32
 *fill*         0x00000000c002316d       0x13 
 .data          0x00000000c0023180       0x4c krnl/signal.32
                0x00000000c0023180                KiDefaultSignalHandlers
 *fill*         0x00000000c00231cc       0x14 
 .data          0x00000000c00231e0       0xf0 krnl/syscalls.32
                0x00000000c00231e0                systemCallHandlers
 .data          0x00000000c00232d0        0x0 net/ethernet.32
 *fill*         0x00000000c00232d0       0x10 
 .data          0x00000000c00232e0      0x100 reg/cm.32
                0x00000000c00232e0                CmComponents
 .data          0x00000000c00233e0        0x0 reg/registry.32
 .data          0x00000000c00233e0        0x0 sys/eject.32
 .data          0x00000000c00233e0        0x0 sys/exit.32
 .data          0x00000000c00233e0        0x0 sys/getcwd.32
 .data          0x00000000c00233e0        0x0 sys/getpid.32
 .data          0x00000000c00233e0        0x0 sys/getramdata.32
 .data          0x00000000c00233e0        0x0 sys/getvgaptr.32
 .data          0x00000000c00233e0        0x0 sys/kill.32
 .data          0x00000000c00233e0        0x0 sys/loaddll.32
 .data          0x00000000c00233e0        0x0 sys/read.32
 .data          0x00000000c00233e0        0x0 sys/registersignal.32
 .data          0x00000000c00233e0        0x0 sys/registry.32
 .data          0x00000000c00233e0        0x0 sys/sbrk.32
 .data          0x00000000c00233e0        0x0 sys/setcwd.32
 .data          0x00000000c00233e0        0x0 sys/settime.32
 .data          0x00000000c00233e0        0x0 sys/timezone.32
 .data          0x00000000c00233e0        0x0 sys/truncate.32
 .data          0x00000000c00233e0        0x0 sys/write.32
 .data          0x00000000c00233e0        0x0 sys/wsbe.32
 .data          0x00000000c00233e0        0x0 sys/yield.32
 .data          0x00000000c00233e0        0x0 thr/elf.32
 .data          0x00000000c00233e0        0x4 thr/prcssthr.32
                0x00000000c00233e0                Thr::nextPID
 .data          0x00000000c00233e4        0x0 vm86/vm8086.32
 *fill*         0x00000000c00233e4       0x1c 
 .data          0x00000000c0023400      0x2a0 arch/i386/hal.32
                0x00000000c0023400                exceptionNames
 .data          0x00000000c00236a0        0x0 arch/i386/pic.32
 .data          0x00000000c00236a0        0x0 arch/i386/rtc.32
 .data          0x00000000c00236a0        0x0 arch/i386/vga.32
 .data          0x00000000c00236a0        0x0 fs/fat/vfslink.32
 .data          0x00000000c00236a0        0x0 fs/iso9660/helper.32
 .data          0x00000000c00236a0        0x1 fs/iso9660/vfslink.32
                0x00000000c00236a0                recentDriveletter
 .data          0x00000000c00236a1        0x0 hal/sound/sndcard.32
 .data          0x00000000c00236a1        0x0 hal/sound/sndport.32
 .data          0x00000000c00236a1        0x0 hw/bus/isa.32
 .data          0x00000000c00236a1        0x0 hw/bus/pci.32
 .data          0x00000000c00236a1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00236a1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00236a1        0x0 hw/diskphys/ata.32
 .data          0x00000000c00236a1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00236a1        0x0 hw/diskphys/sata.32
 .data          0x00000000c00236a1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00236a1        0x0 hw/intctrl/apic.32
 .data          0x00000000c00236a1        0x0 hw/timer/apictimer.32
 .data          0x00000000c00236a1        0x0 hw/timer/pit.32
 .data          0x00000000c00236a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00236a1        0x0 crtn.32
 .data          0x00000000c00236a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00236a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00236a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00236a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00236a4        0x0
 .got           0x00000000c00236a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00236a4        0x0
 .got.plt       0x00000000c00236a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00236a4        0x0
 .igot.plt      0x00000000c00236a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00236a4        0x0
 .tm_clone_table
                0x00000000c00236a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00236a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00236a1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00236a1        0x3 
 .eh_frame      0x00000000c00236a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00236a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00236a4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00236fc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002373c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00237a8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x5ea7
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0025fb4        0xc 
 .bss           0x00000000c0025fc0     0x10a4 fs/symlink.32
                0x00000000c0025fc0                KiNumWaitingRoomSymlinks
                0x00000000c0025fe0                KiNewlyCreatedIDs
                0x00000000c0026060                KiNewlyCreatedSymlinks
                0x00000000c0027060                KiBaseSymlinkID
 .bss           0x00000000c0027064        0x4 fs/vfs.32
                0x00000000c0027064                installedFilesystems
 .bss           0x00000000c0027068        0x0 hal/bus.32
 .bss           0x00000000c0027068        0x0 hal/buzzer.32
 .bss           0x00000000c0027068        0x8 hal/clock.32
                0x00000000c0027068                User::dstOn
                0x00000000c0027069                User::timezoneHalfHourOffset
                0x00000000c002706c                User::timezoneHourOffset
 .bss           0x00000000c0027070        0x0 hal/device.32
 .bss           0x00000000c0027070        0x0 hal/diskctrl.32
 .bss           0x00000000c0027070        0x0 hal/diskphys.32
 .bss           0x00000000c0027070        0x0 hal/fpu.32
 *fill*         0x00000000c0027070       0x10 
 .bss           0x00000000c0027080     0x2000 hal/intctrl.32
                0x00000000c0027080                INT_contexts
                0x00000000c0028080                INT_handlers
 .bss           0x00000000c0029080      0x429 hal/keybrd.32
                0x00000000c0029080                keyboardWaitingTaskList
                0x00000000c0029084                keyboardSetupYet
                0x00000000c0029088                guiKeyboardHandler
                0x00000000c00290a0                keystates
 *fill*         0x00000000c00294a9       0x17 
 .bss           0x00000000c00294c0       0x88 hal/logidisk.32
                0x00000000c00294c0                diskAssignments
                0x00000000c00294e0                disks
 .bss           0x00000000c0029548        0x4 hal/mouse.32
                0x00000000c0029548                guiMouseHandler
 .bss           0x00000000c002954c        0x0 hal/nic.32
 .bss           0x00000000c002954c        0x0 hal/partition.32
 .bss           0x00000000c002954c        0x0 hal/serial.32
 .bss           0x00000000c002954c        0x4 hal/timer.32
                0x00000000c002954c                milliTenthsSinceBoot
 .bss           0x00000000c0029550        0x0 hal/vcache.32
 .bss           0x00000000c0029550        0x4 hal/video.32
                0x00000000c0029550                screen
 *fill*         0x00000000c0029554        0xc 
 .bss           0x00000000c0029560      0x480 hw/acpi.32
                0x00000000c0029560                systemSleepFunction
                0x00000000c0029564                systemResetFunction
                0x00000000c0029568                systemShutdownFunction
                0x00000000c002956c                nextACPITable
                0x00000000c0029580                acpiTables
                0x00000000c0029780                usingXSDT
                0x00000000c0029784                MADTpointer
                0x00000000c0029788                RSDTpointer
                0x00000000c002978c                RSDPpointer
                0x00000000c0029790                nextAPICNMI
                0x00000000c00297a0                apicNMIInfo
                0x00000000c0029820                legacyIRQFlags
                0x00000000c0029840                ioapicDiscoveryNumber
                0x00000000c0029860                ioapicFoundInMADT
                0x00000000c0029880                ioapicAddresses
                0x00000000c0029900                ioapicGSIBase
                0x00000000c0029980                processorDiscoveryNumber
                0x00000000c00299a0                matchingAPICID
                0x00000000c00299c0                processorID
 .bss           0x00000000c00299e0       0x10 hw/cpu.32
                0x00000000c00299e0                lastD
                0x00000000c00299e4                lastC
                0x00000000c00299e8                lastB
                0x00000000c00299ec                lastA
 *fill*         0x00000000c00299f0       0x10 
 .bss           0x00000000c0029a00      0x220 krnl/atexit.32
                0x00000000c0029a00                KiNextAtexitHandler
                0x00000000c0029a20                KiAtexitContexts
                0x00000000c0029b20                KiAtexitHandlers
 .bss           0x00000000c0029c20        0x0 krnl/bootmsg.32
 .bss           0x00000000c0029c20        0x0 krnl/compat.32
 .bss           0x00000000c0029c20        0x8 krnl/env.32
                0x00000000c0029c20                KeUserEnv
                0x00000000c0029c24                KeSystemEnv
 .bss           0x00000000c0029c28        0x0 krnl/inlines.32
 .bss           0x00000000c0029c28        0x1 krnl/panic.32
                0x00000000c0029c28                KeIsKernelInPanic
 *fill*         0x00000000c0029c29       0x17 
 .bss           0x00000000c0029c40       0x48 krnl/powctrl.32
                0x00000000c0029c40                powCtrlOnBattery
                0x00000000c0029c60                currentPowerSettings
                0x00000000c0029c84                secondsSinceLastUserIO
 .bss           0x00000000c0029c88        0x8 krnl/random.32
                0x00000000c0029c88                kiRandSeed
 .bss           0x00000000c0029c90        0x0 krnl/resolve.32
 .bss           0x00000000c0029c90        0x0 krnl/signal.32
 .bss           0x00000000c0029c90        0x0 krnl/syscalls.32
 .bss           0x00000000c0029c90        0x0 net/ethernet.32
 .bss           0x00000000c0029c90        0x4 reg/cm.32
 .bss           0x00000000c0029c94        0x0 reg/registry.32
 .bss           0x00000000c0029c94        0x0 sys/eject.32
 .bss           0x00000000c0029c94        0x0 sys/exit.32
 .bss           0x00000000c0029c94        0x0 sys/getcwd.32
 .bss           0x00000000c0029c94        0x0 sys/getpid.32
 .bss           0x00000000c0029c94        0x0 sys/getramdata.32
 .bss           0x00000000c0029c94        0x0 sys/getvgaptr.32
 .bss           0x00000000c0029c94        0x0 sys/kill.32
 .bss           0x00000000c0029c94        0x0 sys/loaddll.32
 .bss           0x00000000c0029c94        0x0 sys/read.32
 .bss           0x00000000c0029c94        0x0 sys/registersignal.32
 .bss           0x00000000c0029c94        0x0 sys/registry.32
 .bss           0x00000000c0029c94        0x0 sys/sbrk.32
 .bss           0x00000000c0029c94        0x0 sys/setcwd.32
 .bss           0x00000000c0029c94        0x0 sys/settime.32
 .bss           0x00000000c0029c94        0x0 sys/timezone.32
 .bss           0x00000000c0029c94        0x0 sys/truncate.32
 .bss           0x00000000c0029c94        0x0 sys/write.32
 .bss           0x00000000c0029c94        0x0 sys/wsbe.32
 .bss           0x00000000c0029c94        0x0 sys/yield.32
 *fill*         0x00000000c0029c94        0xc 
 .bss           0x00000000c0029ca0      0x7a4 thr/elf.32
                0x00000000c0029ca0                Thr::driverLookupNext
                0x00000000c0029cc0                Thr::driverLookupLen
                0x00000000c0029ec0                Thr::driverLookupAddr
                0x00000000c002a0c0                Thr::driverNameLookup
                0x00000000c002a2c0                Thr::kernelSymbols
                0x00000000c002a340                Thr::kernelStringTable
                0x00000000c002a3c0                Thr::kernelSymbolTable
                0x00000000c002a440                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002a444        0x4 
 .bss           0x00000000c002a448       0x68 thr/prcssthr.32
                0x00000000c002a448                cleanerThread
                0x00000000c002a44c                weNeedTheCleanerToNotBlock
                0x00000000c002a450                retValLockStuff
                0x00000000c002a454                retValSchedLock
                0x00000000c002a458                lockStuffLock
                0x00000000c002a45c                schedulerLock
                0x00000000c002a460                taskSwitchesPostponedFlag
                0x00000000c002a464                postponeTaskSwitchesCounter
                0x00000000c002a468                irqDisableCounter
                0x00000000c002a46c                terminatedTaskList
                0x00000000c002a478                sleepingTaskList
                0x00000000c002a484                taskList
                0x00000000c002a490                kernelProcess
 *fill*         0x00000000c002a4b0       0x10 
 .bss           0x00000000c002a4c0       0x40 vm86/vm8086.32
                0x00000000c002a4c0                Vm::vmRetV
                0x00000000c002a4c4                Vm::vmDone
                0x00000000c002a4c5                Vm::vmReady
                0x00000000c002a4c8                Vm::vm86Thread
                0x00000000c002a4cc                Vm::vmToHostCommsPtr
                0x00000000c002a4e0                Vm::vmToHostComms
 .bss           0x00000000c002a500       0x18 arch/i386/hal.32
                0x00000000c002a500                apic
                0x00000000c002a504                guiPanicHandler
                0x00000000c002a508                fpuOwner
                0x00000000c002a50c                coproLoadFunc
                0x00000000c002a510                coproSaveFunc
                0x00000000c002a514                gpFaultIntercept
 .bss           0x00000000c002a518        0x0 arch/i386/pic.32
 .bss           0x00000000c002a518        0x2 arch/i386/rtc.32
 .bss           0x00000000c002a51a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002a51a        0x6 
 .bss           0x00000000c002a520       0xf0 fs/fat/vfslink.32
                0x00000000c002a520                FAT::fats
                0x00000000c002a540                FAT::vfsToFatRemaps
                0x00000000c002a5c0                fatToVFSRemaps
 .bss           0x00000000c002a610        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002a610       0x10 
 .bss           0x00000000c002a620      0x820 fs/iso9660/vfslink.32
                0x00000000c002a620                iso9660Owner
                0x00000000c002a624                recentSector
                0x00000000c002a640                recentBuffer
 .bss           0x00000000c002ae40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002ae40        0x0 hal/sound/sndport.32
 .bss           0x00000000c002ae40        0x0 hw/bus/isa.32
 .bss           0x00000000c002ae40        0xd hw/bus/pci.32
                0x00000000c002ae40                thePCI
 .bss           0x00000000c002ae4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002ae4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002ae4d        0x3 
 .bss           0x00000000c002ae50        0x8 hw/diskphys/ata.32
                0x00000000c002ae50                ataSectorsWritten
                0x00000000c002ae54                ataSectorsRead
 .bss           0x00000000c002ae58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002ae58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002ae58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002ae58        0x8 
 .bss           0x00000000c002ae60       0x41 hw/intctrl/apic.32
                0x00000000c002ae60                noOfIOAPICs
                0x00000000c002ae80                ioapics
                0x00000000c002aea0                IOAPICsSetupYet
 .bss           0x00000000c002aea1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002aea1        0x3 
 .bss           0x00000000c002aea4        0x4 hw/timer/pit.32
                0x00000000c002aea4                pitFreq
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002aea8        0x0 crtn.32
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002aea8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0030d4f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
