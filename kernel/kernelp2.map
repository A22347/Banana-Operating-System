Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f8aa
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x819 fs/symlink.32
                0x00000000c000ae63                KiDeinitialiseSymlinks(void*)
                0x00000000c000aef4                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000af77                KiIsSymlinkRegistered(char const*)
                0x00000000c000b0ed                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b281                KeCreateSymlink(char const*, char const*)
                0x00000000c000b3bd                KeInitialiseSymlinks()
 *fill*         0x00000000c000b52d        0x1 
 .text          0x00000000c000b52e      0xd6c fs/vfs.32
                0x00000000c000b52e                File::read(unsigned long long, void*, int*)
                0x00000000c000b586                File::write(unsigned long long, void*, int*)
                0x00000000c000b5de                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b636                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b664                File::isAtty()
                0x00000000c000b668                Directory::isAtty()
                0x00000000c000b66c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b672                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b678                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b67e                File::~File()
                0x00000000c000b67e                File::~File()
                0x00000000c000b6a2                File::~File()
                0x00000000c000b6cc                Directory::~Directory()
                0x00000000c000b6cc                Directory::~Directory()
                0x00000000c000b6f0                Directory::~Directory()
                0x00000000c000b71a                Filesystem::Filesystem()
                0x00000000c000b71a                Filesystem::Filesystem()
                0x00000000c000b73e                Filesystem::~Filesystem()
                0x00000000c000b73e                Filesystem::~Filesystem()
                0x00000000c000b74c                Filesystem::~Filesystem()
                0x00000000c000b770                Fs::getcwd(Process*, char*, int)
                0x00000000c000b79a                Fs::initVFS()
                0x00000000c000b7c4                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000b9e2                File::File(char const*, Process*, bool)
                0x00000000c000b9e2                File::File(char const*, Process*, bool)
                0x00000000c000bac0                File::File(char const*, Process*)
                0x00000000c000bac0                File::File(char const*, Process*)
                0x00000000c000bade                File::open(FileOpenMode)
                0x00000000c000bb3c                File::close()
                0x00000000c000bb9c                File::seek(unsigned long long)
                0x00000000c000bbf2                File::truncate(unsigned long long)
                0x00000000c000bc48                File::tell(unsigned long long*)
                0x00000000c000bc98                File::rewind()
                0x00000000c000bcac                File::unlink()
                0x00000000c000bcf8                File::rename(char const*)
                0x00000000c000bd46                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bda2                File::exists()
                0x00000000c000bde0                File::stat(unsigned long long*, bool*)
                0x00000000c000be41                Fs::setcwd(Process*, char*)
                0x00000000c000bfa0                Directory::Directory(char const*, Process*)
                0x00000000c000bfa0                Directory::Directory(char const*, Process*)
                0x00000000c000c068                Directory::open()
                0x00000000c000c0c4                Directory::close()
                0x00000000c000c124                Directory::unlink()
                0x00000000c000c170                Directory::rename(char const*)
                0x00000000c000c1be                Directory::exists()
                0x00000000c000c1fc                Directory::read(dirent*)
                0x00000000c000c248                Directory::create()
                0x00000000c000c294                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c29a        0x2 
 .text          0x00000000c000c29c       0x86 hal/bus.32
                0x00000000c000c29c                Bus::Bus(char const*)
                0x00000000c000c29c                Bus::Bus(char const*)
                0x00000000c000c2d4                Bus::~Bus()
                0x00000000c000c2d4                Bus::~Bus()
                0x00000000c000c2f8                Bus::~Bus()
 .text          0x00000000c000c322       0x96 hal/buzzer.32
                0x00000000c000c322                beepThread(void*)
                0x00000000c000c35f                Krnl::beep(int, int, bool)
 .text          0x00000000c000c3b8      0x465 hal/clock.32
                0x00000000c000c3b8                User::loadClockSettings(int)
                0x00000000c000c40a                Clock::Clock(char const*)
                0x00000000c000c40a                Clock::Clock(char const*)
                0x00000000c000c440                Clock::~Clock()
                0x00000000c000c440                Clock::~Clock()
                0x00000000c000c464                Clock::~Clock()
                0x00000000c000c48e                Clock::timeInSecondsLocal()
                0x00000000c000c4d6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c52f                datetimeToSeconds(datetime_t)
                0x00000000c000c654                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c6b4                secondsToDatetime(unsigned long long)
                0x00000000c000c7f8                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c81d        0x1 
 .text          0x00000000c000c81e      0x464 hal/device.32
                0x00000000c000c81e                Device::hibernate()
                0x00000000c000c820                Device::wake()
                0x00000000c000c822                Device::detect()
                0x00000000c000c824                Device::disableLegacy()
                0x00000000c000c826                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c828                DriverlessDevice::close(int, int, void*)
                0x00000000c000c82c                DriverlessDevice::detect()
                0x00000000c000c82e                DriverlessDevice::open(int, int, void*)
                0x00000000c000c842                Device::~Device()
                0x00000000c000c842                Device::~Device()
                0x00000000c000c850                Device::~Device()
                0x00000000c000c878                Device::findAndLoadDriver()
                0x00000000c000c886                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c8ac                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c8ec                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c916                Device::getParent()
                0x00000000c000c922                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c940                Device::addChild(Device*)
                0x00000000c000c984                Device::removeAllChildren()
                0x00000000c000c9ca                Device::hibernateAll()
                0x00000000c000c9fa                Device::wakeAll()
                0x00000000c000ca2a                Device::detectAll()
                0x00000000c000ca5a                Device::disableLegacyAll()
                0x00000000c000ca5c                Device::loadDriversForAll()
                0x00000000c000ca5e                Device::closeAll()
                0x00000000c000ca94                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000caca                Device::setName(char const*)
                0x00000000c000cad8                Device::Device(char const*)
                0x00000000c000cad8                Device::Device(char const*)
                0x00000000c000cbd4                Device::getName()
                0x00000000c000cbde                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cbde                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc14                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cc58                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000cc82        0x2 
 .text          0x00000000c000cc84       0x86 hal/diskctrl.32
                0x00000000c000cc84                HardDiskController::HardDiskController(char const*)
                0x00000000c000cc84                HardDiskController::HardDiskController(char const*)
                0x00000000c000ccbc                HardDiskController::~HardDiskController()
                0x00000000c000ccbc                HardDiskController::~HardDiskController()
                0x00000000c000cce0                HardDiskController::~HardDiskController()
 .text          0x00000000c000cd0a       0xe2 hal/diskphys.32
                0x00000000c000cd0a                PhysicalDisk::eject()
                0x00000000c000cd0e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cd0e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cd76                PhysicalDisk::startCache()
                0x00000000c000cd9e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cd9e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cdc2                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cdec        0x0 hal/fpu.32
 .text          0x00000000c000cdec      0x360 hal/intctrl.32
                0x00000000c000cdec                int_handler
                0x00000000c000ce76                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cec0                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d003                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d037                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d0ad                setupINTS()
                0x00000000c000d10a                convertLegacyIRQNumber(int)
 .text          0x00000000c000d14c      0x8be hal/keybrd.32
                0x00000000c000d14c                startGUI(void*)
                0x00000000c000d1ba                startGUIVESA(void*)
                0x00000000c000d228                sendKeyToTerminal(unsigned char)
                0x00000000c000d303                sendKeyboardToken(KeyboardToken)
                0x00000000c000d7ed                clearInternalKeybuffer(VgaText*)
                0x00000000c000d822                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d980                Keyboard::Keyboard(char const*)
                0x00000000c000d980                Keyboard::Keyboard(char const*)
                0x00000000c000d9bc                Keyboard::~Keyboard()
                0x00000000c000d9bc                Keyboard::~Keyboard()
                0x00000000c000d9e0                Keyboard::~Keyboard()
 .text          0x00000000c000da0a      0x3f8 hal/logidisk.32
                0x00000000c000da0a                LogicalDisk::close(int, int, void*)
                0x00000000c000da0e                LogicalDisk::~LogicalDisk()
                0x00000000c000da0e                LogicalDisk::~LogicalDisk()
                0x00000000c000da32                LogicalDisk::~LogicalDisk()
                0x00000000c000da5c                LogicalDisk::open(int, int, void*)
                0x00000000c000da70                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000daa8                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000daee                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000daee                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dbae                LogicalDisk::assignDriveLetter()
                0x00000000c000dc68                LogicalDisk::mount()
                0x00000000c000dcb0                LogicalDisk::unmount()
                0x00000000c000dcc0                LogicalDisk::eject()
                0x00000000c000dcd4                LogicalDisk::unassignDriveLetter()
                0x00000000c000dd2a                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000dd96                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000de02        0x2 
 .text          0x00000000c000de04       0x86 hal/mouse.32
                0x00000000c000de04                Mouse::Mouse(char const*)
                0x00000000c000de04                Mouse::Mouse(char const*)
                0x00000000c000de3c                Mouse::~Mouse()
                0x00000000c000de3c                Mouse::~Mouse()
                0x00000000c000de60                Mouse::~Mouse()
 .text          0x00000000c000de8a       0x90 hal/nic.32
                0x00000000c000de8a                NIC::getMAC()
                0x00000000c000de90                NIC::write(int, unsigned char*, int*)
                0x00000000c000de96                NIC::NIC(char const*)
                0x00000000c000de96                NIC::NIC(char const*)
                0x00000000c000decc                NIC::~NIC()
                0x00000000c000decc                NIC::~NIC()
                0x00000000c000def0                NIC::~NIC()
 .text          0x00000000c000df1a      0x33b hal/partition.32
                0x00000000c000df1a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dfc2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e255        0x3 
 .text          0x00000000c000e258       0x86 hal/serial.32
                0x00000000c000e258                Serial::Serial(char const*)
                0x00000000c000e258                Serial::Serial(char const*)
                0x00000000c000e290                Serial::~Serial()
                0x00000000c000e290                Serial::~Serial()
                0x00000000c000e2b4                Serial::~Serial()
 *fill*         0x00000000c000e2de        0x2 
 .text          0x00000000c000e2e0      0x234 hal/timer.32
                0x00000000c000e2e0                Timer::Timer(char const*)
                0x00000000c000e2e0                Timer::Timer(char const*)
                0x00000000c000e318                Timer::~Timer()
                0x00000000c000e318                Timer::~Timer()
                0x00000000c000e33c                Timer::~Timer()
                0x00000000c000e366                Timer::read()
                0x00000000c000e371                setupTimer(int)
                0x00000000c000e3ac                timerHandler(unsigned int)
 .text          0x00000000c000e514      0x450 hal/vcache.32
                0x00000000c000e514                VCache::VCache(PhysicalDisk*)
                0x00000000c000e514                VCache::VCache(PhysicalDisk*)
                0x00000000c000e684                VCache::invalidateReadBuffer()
                0x00000000c000e694                VCache::writeWriteBuffer()
                0x00000000c000e6e0                VCache::~VCache()
                0x00000000c000e6e0                VCache::~VCache()
                0x00000000c000e738                VCache::~VCache()
                0x00000000c000e760                VCache::write(unsigned long long, int, void*)
                0x00000000c000e85a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e964      0x4d9 hal/video.32
                0x00000000c000e964                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e9b0                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ea20                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eab0                Video::clearScreen(unsigned int)
                0x00000000c000eae4                Video::putpixel(int, int, unsigned int)
                0x00000000c000eaf2                Video::readPixelApprox(int, int)
                0x00000000c000eb06                Video::Video(char const*)
                0x00000000c000eb06                Video::Video(char const*)
                0x00000000c000eb3c                Video::~Video()
                0x00000000c000eb3c                Video::~Video()
                0x00000000c000eb60                Video::~Video()
                0x00000000c000eb8a                Video::isMonochrome()
                0x00000000c000eb96                Video::getWidth()
                0x00000000c000eba2                Video::getHeight()
                0x00000000c000ebae                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ec6a                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000edd2                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ee3d        0x3 
 .text          0x00000000c000ee40     0x12d2 hw/acpi.32
                0x00000000c000ee40                ACPI::close(int, int, void*)
                0x00000000c000eef4                findRSDP()
                0x00000000c000ef8c                loadACPITables(unsigned char*)
                0x00000000c000f1f8                findRSDT(unsigned char*)
                0x00000000c000f350                findDataTable(unsigned char*, char*)
                0x00000000c000f3d0                scanMADT()
                0x00000000c000f888                ACPI::ACPI()
                0x00000000c000f888                ACPI::ACPI()
                0x00000000c000f8dc                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f9d8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000faa4                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000faac                ACPI::detectPCI()
                0x00000000c000fccc                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fd14                ACPI::sleep()
                0x00000000c000fd30                ACPI::open(int, int, void*)
 .text          0x00000000c0010112      0xbc5 hw/cpu.32
                0x00000000c0010112                CPU::close(int, int, void*)
                0x00000000c0010116                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0010132                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c001014a                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c00101be                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0010242                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010270                CPU::cpuidCheckECX(unsigned int)
                0x00000000c001029e                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00102cc                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00102fa                CPU::CPU()
                0x00000000c00102fa                CPU::CPU()
                0x00000000c0010388                CPU::displayFeatures()
                0x00000000c001038a                CPU::detectFeatures()
                0x00000000c0010a5e                CPU::setupSMEP()
                0x00000000c0010a6a                CPU::setupUMIP()
                0x00000000c0010a74                CPU::setupTSC()
                0x00000000c0010a7e                CPU::setupLargePages()
                0x00000000c0010a88                CPU::setupPAT()
                0x00000000c0010ac4                CPU::setupMTRR()
                0x00000000c0010ac6                CPU::setupGlobalPages()
                0x00000000c0010ad0                CPU::allowUsermodeDataAccess()
                0x00000000c0010ae2                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010af4                CPU::setupSMAP()
                0x00000000c0010b02                CPU::setupFeatures()
                0x00000000c0010bce                CPU::open(int, int, void*)
 .text          0x00000000c0010cd7       0xb6 krnl/atexit.32
                0x00000000c0010cd7                KeInitialiseAtexit()
                0x00000000c0010cf6                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010d2a                KeExecuteAtexit()
 .text          0x00000000c0010d8d       0xdf krnl/bootmsg.32
                0x00000000c0010d8d                KeDisplaySplashScreen()
                0x00000000c0010e09                KeSetBootMessage(char const*)
 .text          0x00000000c0010e6c       0x1d krnl/compat.32
                0x00000000c0010e6c                Krnl::handlePowerButton()
                0x00000000c0010e7c                Krnl::handleSleepButton()
 .text          0x00000000c0010e89       0x2b krnl/crc32.32
                0x00000000c0010e89                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010eb4      0x5bf krnl/env.32
                0x00000000c0010eb4                EnvVarContainer::getEnv(char const*)
                0x00000000c0010ef2                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010fb4                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010fb6                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00111da                EnvVarContainer::__loadSystem()
                0x00000000c00111f4                EnvVarContainer::__loadUser()
                0x00000000c00111f6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00111f6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011218                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011218                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011248                KeGetEnv(Process*, char const*)
                0x00000000c00112ad                KeSetEnvSystem(char const*, char const*)
                0x00000000c00112c7                KeSetEnvUser(char const*, char const*)
                0x00000000c00112e6                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00112f9                KeDeleteEnvSystem(char const*)
                0x00000000c00112fa                KeDeleteEnvUser(char const*)
                0x00000000c00112fb                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00112fc                KeNewProcessEnv(Process*)
                0x00000000c001131e                KeCopyProcessEnv(Process*, Process*)
                0x00000000c001136a                KeLoadSystemEnv()
                0x00000000c0011398                KeLoadUserEnv()
                0x00000000c00113be                KeFlushEnv()
                0x00000000c00113bf                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00113df                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011473       0x94 krnl/inlines.32
                0x00000000c0011473                CPU::current()
                0x00000000c001147f                operator new(unsigned long)
                0x00000000c0011484                operator delete(void*)
                0x00000000c0011489                disableIRQs()
                0x00000000c001148b                enableIRQs()
                0x00000000c001148d                lockScheduler()
                0x00000000c0011495                unlockScheduler()
                0x00000000c00114a4                lockStuff()
                0x00000000c00114b2                unlockStuff()
                0x00000000c00114ec                Virt::getAKernelVAS()
                0x00000000c00114f2                __not_memcpy
 .text          0x00000000c0011507        0xc krnl/panic.32
                0x00000000c0011507                KePanic(char const*)
 .text          0x00000000c0011513      0x142 krnl/powctrl.32
                0x00000000c0011513                KePowerThread(void*)
                0x00000000c0011541                KeChangePowerSettings(PowerSettings)
                0x00000000c0011557                KeUserIOReceived()
                0x00000000c0011562                KeHandlePowerButton()
                0x00000000c0011597                KeHandleSleepButton()
                0x00000000c00115cc                KeSetupPowerManager()
 .text          0x00000000c0011655       0x9b krnl/random.32
                0x00000000c0011655                KeRand()
                0x00000000c0011695                KeSeedRand(unsigned int)
                0x00000000c00116be                KeInitRand()
 .text          0x00000000c00116f0      0x1bc krnl/resolve.32
                0x00000000c00116f0                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00118ac      0x31f krnl/signal.32
                0x00000000c00118ac                KiSigKill(int)
                0x00000000c00118c0                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00118c1                KiDefaultSignalHandlerPause(int)
                0x00000000c00118ed                KiDefaultSignalHandlerResume(int)
                0x00000000c0011919                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001191e                KeInitSignals()
                0x00000000c001196d                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00119a3                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011a20                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011b17                KiCheckSignalZ
                0x00000000c0011b59                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011b94                KiFinishSignalZ
 .text          0x00000000c0011bcb      0xe15 krnl/syscalls.32
                0x00000000c0011bcb                SysSeekDir(regs*)
                0x00000000c0011bd0                SysTellDir(regs*)
                0x00000000c0011bd5                SysVerify(regs*)
                0x00000000c0011bdf                SysGetArgc(regs*)
                0x00000000c0011bf3                SysTTYName(regs*)
                0x00000000c0011bfb                SysFormatDisk(regs*)
                0x00000000c0011c62                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011cb6                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011d0f                SysShutdown(regs*)
                0x00000000c0011d9c                SysRealpath(regs*)
                0x00000000c0011dea                SysReadDir(regs*)
                0x00000000c0011e6a                SysIsATTY(regs*)
                0x00000000c0011ec4                SysSeek(regs*)
                0x00000000c0011f1e                SysTell(regs*)
                0x00000000c0011f8b                SysSize(regs*)
                0x00000000c0011ffe                SysSizeFromFilename(regs*)
                0x00000000c0012115                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0012249                SysClose(regs*)
                0x00000000c00122a9                SysOpenDir(regs*)
                0x00000000c0012326                SysMakeDir(regs*)
                0x00000000c0012394                SysCloseDir(regs*)
                0x00000000c00123e3                SysWait(regs*)
                0x00000000c0012404                SysNotImpl(regs*)
                0x00000000c001241f                SysPanic(regs*)
                0x00000000c001243a                SysRmdir(regs*)
                0x00000000c0012498                SysUnlink(regs*)
                0x00000000c00124f6                SysGetArgv(regs*)
                0x00000000c0012543                SysUSleep(regs*)
                0x00000000c001256c                SysSpawn(regs*)
                0x00000000c00125dd                SysGetEnv(regs*)
                0x00000000c0012692                SysSetFatAttrib(regs*)
                0x00000000c00126fb                SysPipe(regs*)
                0x00000000c0012740                SysGetUnixTime(regs*)
                0x00000000c0012754                string_ends_with(char const*, char const*)
                0x00000000c001279f                SysOpen(regs*)
                0x00000000c001299e                KeSystemCall(regs*, void*)
 .text          0x00000000c00129e0      0x159 net/ethernet.32
                0x00000000c00129e0                KeSwitchEndian16(unsigned short)
                0x00000000c0012a04                KeSwitchEndian32(unsigned int)
                0x00000000c0012a34                EthernetCRC32(unsigned char*, int)
                0x00000000c0012ad8                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012b39      0xd51 reg/cm.32
                0x00000000c0012b39                CmOpen(char const*)
                0x00000000c0012c57                CmClose(Reghive_Tag*)
                0x00000000c0012c6d                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012ca9                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012d20                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012d5f                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012d91                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012dcd                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012df5                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012e16                CmExpand(Reghive_Tag*, int)
                0x00000000c0012e91                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012f17                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c001300b                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0013143                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c00131a4                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c00131d4                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c001320b                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0013235                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013275                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013319                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0013347                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00134e4                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013531                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00135ab                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00135fe                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00136c2                zStrtok(char*, char const*)
                0x00000000c0013734                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00137b5                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013858                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c001388a      0x545 reg/registry.32
                0x00000000c001388a                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013a16                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013b6b                Reg::getLine(char*, char*, char*)
                0x00000000c0013ba2                Reg::readInt(char*, char*, int*)
                0x00000000c0013c90                Reg::readString(char*, char*, char*, int)
                0x00000000c0013d11                Reg::readBool(char*, char*, bool*)
                0x00000000c0013d36                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013d62                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013d8e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013dcf       0x36 sys/eject.32
                0x00000000c0013dcf                SysEject(regs*)
 .text          0x00000000c0013e05       0x18 sys/exit.32
                0x00000000c0013e05                SysExit(regs*)
 .text          0x00000000c0013e1d       0x1f sys/getcwd.32
                0x00000000c0013e1d                SysGetCwd(regs*)
 .text          0x00000000c0013e3c        0xc sys/getpid.32
                0x00000000c0013e3c                SysGetPID(regs*)
 .text          0x00000000c0013e48       0x1a sys/getramdata.32
                0x00000000c0013e48                SysGetRAMData(regs*)
 .text          0x00000000c0013e62       0x82 sys/getvgaptr.32
                0x00000000c0013e62                SysGetVGAPtr(regs*)
 .text          0x00000000c0013ee4       0xb9 sys/kill.32
                0x00000000c0013ee4                SysKill(regs*)
 .text          0x00000000c0013f9d       0xa8 sys/loaddll.32
                0x00000000c0013f9d                SysLoadDLL(regs*)
 .text          0x00000000c0014045       0x68 sys/read.32
                0x00000000c0014045                SysRead(regs*)
 .text          0x00000000c00140ad       0x29 sys/registersignal.32
                0x00000000c00140ad                SysRegisterSignal(regs*)
 .text          0x00000000c00140d6      0x19c sys/registry.32
                0x00000000c00140d6                SysRegistryGetTypeFromPath(regs*)
                0x00000000c001414d                SysRegistryReadExtent(regs*)
                0x00000000c0014195                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00141bd                SysRegistryEnterDirectory(regs*)
                0x00000000c00141e5                SysRegistryGetNext(regs*)
                0x00000000c001420d                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014247                SysRegistryOpen(regs*)
                0x00000000c001425b                SysRegistryClose(regs*)
 .text          0x00000000c0014272       0x55 sys/sbrk.32
                0x00000000c0014272                SysSbrk(regs*)
 .text          0x00000000c00142c7       0x1c sys/setcwd.32
                0x00000000c00142c7                SysSetCwd(regs*)
 .text          0x00000000c00142e3       0x96 sys/settime.32
                0x00000000c00142e3                SysSetTime(regs*)
 .text          0x00000000c0014379       0x2d sys/symlink.32
                0x00000000c0014379                SysSymlink(regs*)
 .text          0x00000000c00143a6       0x4a sys/timezone.32
                0x00000000c00143a6                SysTimezone(regs*)
 .text          0x00000000c00143f0       0xfc sys/truncate.32
                0x00000000c00143f0                SysTruncate(regs*)
 .text          0x00000000c00144ec       0x68 sys/write.32
                0x00000000c00144ec                SysWrite(regs*)
 .text          0x00000000c0014554       0x62 sys/wsbe.32
                0x00000000c0014554                SysWsbe(regs*)
 .text          0x00000000c00145b6       0x25 sys/yield.32
                0x00000000c00145b6                SysYield(regs*)
 .text          0x00000000c00145db     0x1203 thr/elf.32
                0x00000000c00145db                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014862                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014a81                Thr::runtimeReferenceHelper()
                0x00000000c0014a94                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014ae3                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014da1                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00154e2                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015514                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001554b                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015565                Thr::loadDLL(char const*, bool)
                0x00000000c00157a5                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00157de        0x2 
 .text          0x00000000c00157e0     0x13b5 thr/prcssthr.32
                0x00000000c00157e0                userModeEntryPoint(void*)
                0x00000000c0015808                changeTSS
                0x00000000c0015838                switchToThread(ThreadControlBlock*)
                0x00000000c00158e8                Process::addArgs(char**)
                0x00000000c0015954                Process::Process(char const*, Process*, char**)
                0x00000000c0015954                Process::Process(char const*, Process*, char**)
                0x00000000c0015b60                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015b60                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015d34                taskStartupFunction
                0x00000000c0015d40                Semaphore::Semaphore(int)
                0x00000000c0015d40                Semaphore::Semaphore(int)
                0x00000000c0015d70                Mutex::Mutex()
                0x00000000c0015d70                Mutex::Mutex()
                0x00000000c0015d84                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015e8c                Process::createUserThread()
                0x00000000c0015eac                setupMultitasking(void (*)())
                0x00000000c0015fd0                schedule()
                0x00000000c0016064                Semaphore::tryAcquire()
                0x00000000c0016124                Semaphore::assertLocked(char const*)
                0x00000000c00161a8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00161d0                blockTask(TaskState)
                0x00000000c0016208                waitTask(int, int*, int)
                0x00000000c001624c                milliTenthSleepUntil(unsigned int)
                0x00000000c00162ec                milliTenthSleep(unsigned int)
                0x00000000c0016300                sleep(unsigned int)
                0x00000000c0016310                Semaphore::acquire()
                0x00000000c00163d8                taskReturned
                0x00000000c001641c                Thr::processFromPID(int)
                0x00000000c00164c8                unblockTask(ThreadControlBlock*)
                0x00000000c0016574                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016848                cleanerTaskFunction(void*)
                0x00000000c0016950                terminateTask(int)
                0x00000000c0016a3c                Thr::terminateFromIRQ(int)
                0x00000000c0016a4c                Semaphore::release()
 .text          0x00000000c0016b95      0xc31 vm86/vm8086.32
                0x00000000c0016b95                Vm::inbv(unsigned short)
                0x00000000c0016ba8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016bde                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016bee                Vm::getSegment(unsigned int)
                0x00000000c0016bf6                Vm::getOffset(unsigned int)
                0x00000000c0016bfb                Vm::mainloop2()
                0x00000000c0016c35                Vm::mainVm8086Loop(void*)
                0x00000000c0016c45                Vm::mainloop3(unsigned long)
                0x00000000c0016c6b                Vm::initialise8086()
                0x00000000c0016cae                Vm::finish8086()
                0x00000000c0016d0f                Vm::getOutput8086(unsigned char*)
                0x00000000c0016d34                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016ded                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016f8b                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017028                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017039                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001704b                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001705c                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017071                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017087                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001709c                Vm::faultHandler(regs*)
 .text          0x00000000c00177c6      0xaf0 arch/i386/hal.32
                0x00000000c00177c6                noCopro(unsigned long)
                0x00000000c00177c7                nmiHandler(regs*, void*)
                0x00000000c00177e0                doubleFault(regs*, void*)
                0x00000000c00177f9                displayDebugInfo(regs*)
                0x00000000c0017b7e                HalSystemIdle()
                0x00000000c0017bfa                displayProgramFault(char const*)
                0x00000000c0017c46                gpFault(regs*, void*)
                0x00000000c0017cad                pgFault(regs*, void*)
                0x00000000c0017d36                otherISRHandler(regs*, void*)
                0x00000000c0017d6a                opcodeFault(regs*, void*)
                0x00000000c0017ded                i386SaveCoprocessor(void*)
                0x00000000c0017e01                i386LoadCoprocessor(void*)
                0x00000000c0017e15                x87EmulHandler(regs*, void*)
                0x00000000c0017eb2                HalInitialiseCoprocessor()
                0x00000000c0017f60                HalPanic(char const*)
                0x00000000c0018074                HalQueryPerformanceCounter()
                0x00000000c001808f                HalInitialise()
                0x00000000c0018245                HalMakeBeep(int)
                0x00000000c001827f                HalGetRand()
                0x00000000c0018282                HalEndOfInterrupt(int)
                0x00000000c00182b3                HalRestart()
                0x00000000c00182b4                HalShutdown()
                0x00000000c00182b5                HalSleep()
 *fill*         0x00000000c00182b6        0x2 
 .text          0x00000000c00182b8      0x2dc arch/i386/pic.32
                0x00000000c00182b8                picIoWait()
                0x00000000c00182c0                picDisable()
                0x00000000c00182f4                picGetIRQReg(int)
                0x00000000c0018370                picOpen()
                0x00000000c00184f4                picEOI(int)
 .text          0x00000000c0018594      0x66e arch/i386/rtc.32
                0x00000000c0018594                RTC::open(int, int, void*)
                0x00000000c0018598                RTC::close(int, int, void*)
                0x00000000c001859c                RTC::timeInSecondsUTC()
                0x00000000c00185ae                RTC::timeInDatetimeUTC()
                0x00000000c00185d4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018612                RTC::~RTC()
                0x00000000c0018612                RTC::~RTC()
                0x00000000c0018636                RTC::~RTC()
                0x00000000c0018660                RTC::get_update_in_progress_flag()
                0x00000000c001867a                RTC::completeRTCRefresh()
                0x00000000c0018954                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018b02                rtcIRQHandler(regs*, void*)
                0x00000000c0018b48                RTC::RTC()
                0x00000000c0018b48                RTC::RTC()
 *fill*         0x00000000c0018c02        0x2 
 .text          0x00000000c0018c04      0x1f4 arch/i386/vga.32
                0x00000000c0018c04                HalConsoleScroll(int, int)
                0x00000000c0018d0c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018d70                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018df8     0x14f3 fs/fat/vfslink.32
                0x00000000c0018df8                FAT::getName()
                0x00000000c0018e00                FAT::tell(void*, unsigned long long*)
                0x00000000c0018e3c                FAT::stat(void*, unsigned long long*)
                0x00000000c0018e78                FAT::~FAT()
                0x00000000c0018e78                FAT::~FAT()
                0x00000000c0018e9c                FAT::~FAT()
                0x00000000c0018ec4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018f68                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019048                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001922c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019448                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019608                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019778                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00197d8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019838                FAT::close(void*)
                0x00000000c001988c                FAT::closeDir(void*)
                0x00000000c00198e0                FAT::truncate(void*, unsigned long long)
                0x00000000c001994c                FAT::seek(void*, unsigned long long)
                0x00000000c00199a4                fatWrapperReadDisk
                0x00000000c00199e4                fatWrapperWriteDisk
                0x00000000c0019a24                fatWrapperIoctl
                0x00000000c0019b44                FAT::FAT()
                0x00000000c0019b44                FAT::FAT()
                0x00000000c0019b9c                FAT::fixFilepath(char*)
                0x00000000c0019bdc                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019d50                FAT::openDir(char const*, void**)
                0x00000000c0019e00                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019ef8                FAT::unlink(char const*)
                0x00000000c0019f78                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a130                FAT::rename(char const*, char const*)
                0x00000000c001a1fc                FAT::mkdir(char const*)
                0x00000000c001a27c                FAT::exists(char const*)
 *fill*         0x00000000c001a2eb        0x1 
 .text          0x00000000c001a2ec       0x94 fs/iso9660/helper.32
                0x00000000c001a2ec                isoReadDiscSectorHelper
                0x00000000c001a348                iso_kprintf
                0x00000000c001a364                iso_kprintfd
 .text          0x00000000c001a380      0x71a fs/iso9660/vfslink.32
                0x00000000c001a380                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a386                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a38c                ISO9660::getName()
                0x00000000c001a392                ISO9660::closeDir(void*)
                0x00000000c001a39c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a3a2                ISO9660::unlink(char const*)
                0x00000000c001a3a8                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a3ae                ISO9660::rename(char const*, char const*)
                0x00000000c001a3b4                ISO9660::mkdir(char const*)
                0x00000000c001a3ba                ISO9660::~ISO9660()
                0x00000000c001a3ba                ISO9660::~ISO9660()
                0x00000000c001a3de                ISO9660::~ISO9660()
                0x00000000c001a406                ISO9660::exists(char const*)
                0x00000000c001a41a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a500                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a548                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a58a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a5c8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a61a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a75c                ISO9660::close(void*)
                0x00000000c001a78c                ISO9660::openDir(char const*, void**)
                0x00000000c001a866                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a981                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001aa00                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001aa72                ISO9660::ISO9660()
                0x00000000c001aa72                ISO9660::ISO9660()
 .text          0x00000000c001aa9a      0x26c hal/sound/sndcard.32
                0x00000000c001aa9a                SoundCard::beginPlayback()
                0x00000000c001aaa8                SoundCard::stopPlayback()
                0x00000000c001aab6                SoundCard::SoundCard(char const*)
                0x00000000c001aab6                SoundCard::SoundCard(char const*)
                0x00000000c001ab54                SoundCard::~SoundCard()
                0x00000000c001ab54                SoundCard::~SoundCard()
                0x00000000c001ab78                SoundCard::~SoundCard()
                0x00000000c001aba2                SoundCard::configureRates(int, int, int)
                0x00000000c001abd2                SoundCard::getSamples16(int, short*)
                0x00000000c001ac2e                SoundCard::getSamples32(int, int*)
                0x00000000c001acb4                SoundCard::addChannel(SoundPort*)
                0x00000000c001acf2                SoundCard::removeChannel(int)
 *fill*         0x00000000c001ad06        0x2 
 .text          0x00000000c001ad08      0x393 hal/sound/sndport.32
                0x00000000c001ad08                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ad08                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ad94                SoundPort::~SoundPort()
                0x00000000c001ad94                SoundPort::~SoundPort()
                0x00000000c001adc8                SoundPort::unpause()
                0x00000000c001add4                SoundPort::pause()
                0x00000000c001ade0                SoundPort::getBufferUsed()
                0x00000000c001ade8                SoundPort::getBufferSize()
                0x00000000c001adf0                SoundPort::buffer16(short*, int)
                0x00000000c001ae7c                SoundPort::buffer32(int*, int)
                0x00000000c001af08                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001afd8                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b09b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b09b        0x1 
 .text          0x00000000c001b09c      0xbc5 hw/bus/pci.32
                0x00000000c001b09c                PCI::open(int, int, void*)
                0x00000000c001b0ba                PCI::close(int, int, void*)
                0x00000000c001b0be                PCI::PCI()
                0x00000000c001b0be                PCI::PCI()
                0x00000000c001b156                PCI::readBAR8(unsigned int, int)
                0x00000000c001b172                PCI::readBAR16(unsigned int, int)
                0x00000000c001b190                PCI::readBAR32(unsigned int, int)
                0x00000000c001b1ac                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b1cc                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b1ee                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b20e                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b284                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b32e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b352                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b37a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b3c4                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b3ec                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b410                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b434                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b45c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b4c0                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b5a6                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b870                PCI::checkBus(unsigned char)
                0x00000000c001b894                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001ba1a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bb96                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bc08                PCI::detect()
 *fill*         0x00000000c001bc61        0x1 
 .text          0x00000000c001bc62      0xb96 hw/diskctrl/ide.32
                0x00000000c001bc62                IDE::close(int, int, void*)
                0x00000000c001bc66                IDE::IDE()
                0x00000000c001bc66                IDE::IDE()
                0x00000000c001bc9a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bcac                selectDrive(unsigned char, unsigned char)
                0x00000000c001bcae                IDE::getBase(unsigned char)
                0x00000000c001bcc0                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bd80                IDE::read(unsigned char, unsigned char)
                0x00000000c001be34                IDE::waitInterrupt(unsigned char)
                0x00000000c001be96                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001beb2                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bece                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bf18                IDE::open(int, int, void*)
                0x00000000c001c352                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c422                IDE::detect()
                0x00000000c001c6ea                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c7a4                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c7f8      0x32c hw/diskctrl/satabus.32
                0x00000000c001c7f8                SATABus::close(int, int, void*)
                0x00000000c001c7fc                SATABus::detect()
                0x00000000c001c7fe                SATABus::SATABus()
                0x00000000c001c7fe                SATABus::SATABus()
                0x00000000c001c884                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c8b6                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c8fe                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c91e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c948                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001ca5a                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cb04                SATABus::open(int, int, void*)
 .text          0x00000000c001cb24      0x96d hw/diskphys/ata.32
                0x00000000c001cb24                ATA::close(int, int, void*)
                0x00000000c001cb48                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cb4a                ATA::ATA()
                0x00000000c001cb4a                ATA::ATA()
                0x00000000c001cb78                ATA::flush(bool)
                0x00000000c001cbc6                ATA::readyForCommand()
                0x00000000c001cc12                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cfd6                ATA::detectCHS()
                0x00000000c001d000                ATA::open(int, int, void*)
                0x00000000c001d0cc                combineCharAndColour(char, unsigned char)
                0x00000000c001d0dd                combineColours(unsigned char, unsigned char)
                0x00000000c001d0ea                ATA::read(unsigned long long, int, void*)
                0x00000000c001d2c0                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d491        0x1 
 .text          0x00000000c001d492      0x612 hw/diskphys/atapi.32
                0x00000000c001d492                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d498                ATAPI::close(int, int, void*)
                0x00000000c001d4bc                ATAPI::ATAPI()
                0x00000000c001d4bc                ATAPI::ATAPI()
                0x00000000c001d4ea                ATAPI::readyForCommand()
                0x00000000c001d53c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d7fc                ATAPI::diskRemoved()
                0x00000000c001d836                ATAPI::eject()
                0x00000000c001d87e                ATAPI::diskInserted()
                0x00000000c001d88a                ATAPI::detectMedia()
                0x00000000c001d94a                ATAPI::open(int, int, void*)
                0x00000000c001da2a                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001daa4      0x7ff hw/diskphys/sata.32
                0x00000000c001daa4                SATA::close(int, int, void*)
                0x00000000c001dac8                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001daca                SATA::open(int, int, void*)
                0x00000000c001db74                SATA::SATA()
                0x00000000c001db74                SATA::SATA()
                0x00000000c001dba2                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ddf4                SATA::read(unsigned long long, int, void*)
                0x00000000c001e044                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e2a3        0x1 
 .text          0x00000000c001e2a4      0x5d8 hw/diskphys/satapi.32
                0x00000000c001e2a4                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e2aa                SATAPI::close(int, int, void*)
                0x00000000c001e2ce                SATAPI::SATAPI()
                0x00000000c001e2ce                SATAPI::SATAPI()
                0x00000000c001e2fc                SATAPI::diskRemoved()
                0x00000000c001e2fe                SATAPI::diskInserted()
                0x00000000c001e31a                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e600                SATAPI::eject()
                0x00000000c001e63c                SATAPI::detectMedia()
                0x00000000c001e692                SATAPI::open(int, int, void*)
                0x00000000c001e792                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e87c      0x45b hw/intctrl/apic.32
                0x00000000c001e87c                IOAPIC::close(int, int, void*)
                0x00000000c001e882                apicGetBase()
                0x00000000c001e8c8                IOAPIC::IOAPIC()
                0x00000000c001e8c8                IOAPIC::IOAPIC()
                0x00000000c001e8f0                apicOpen()
                0x00000000c001ea6c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001ea9e                IOAPIC::read(int)
                0x00000000c001eac6                IOAPIC::open(int, int, void*)
                0x00000000c001ebac                IOAPIC::write(int, int)
                0x00000000c001ebd8                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ecd7        0x1 
 .text          0x00000000c001ecd8       0xf0 hw/timer/apictimer.32
                0x00000000c001ecd8                APICTimer::close(int, int, void*)
                0x00000000c001ece0                apicTimerHandler(regs*, void*)
                0x00000000c001ed08                APICTimer::open(int, int, void*)
                0x00000000c001ed78                APICTimer::write(int)
                0x00000000c001eda0                APICTimer::APICTimer()
                0x00000000c001eda0                APICTimer::APICTimer()
 .text          0x00000000c001edc8      0x1ad hw/timer/pit.32
                0x00000000c001edc8                PIT::write(int)
                0x00000000c001ee4c                pitHandler(regs*, void*)
                0x00000000c001ee74                PIT::open(int, int, void*)
                0x00000000c001eec4                PIT::close(int, int, void*)
                0x00000000c001eef4                PIT::PIT()
                0x00000000c001eef4                PIT::PIT()
 *fill*         0x00000000c001ef75        0xb 
 .text          0x00000000c001ef80       0x83 arch/i386/avx.32
                0x00000000c001ef80                avxDetect
                0x00000000c001efaa                avxSave
                0x00000000c001efbb                avxLoad
                0x00000000c001efcc                avxInit
                0x00000000c001efee                avxClose
                0x00000000c001efef                wouldSheSayYes
 *fill*         0x00000000c001f003        0xd 
 .text          0x00000000c001f010      0x2ec arch/i386/interrupt.32
                0x00000000c001f010                isr0
                0x00000000c001f020                isr1
                0x00000000c001f02a                isr2
                0x00000000c001f034                isr3
                0x00000000c001f03e                isr4
                0x00000000c001f048                isr5
                0x00000000c001f052                isr6
                0x00000000c001f05c                isr7
                0x00000000c001f066                isr8
                0x00000000c001f06e                isr9
                0x00000000c001f078                isr10
                0x00000000c001f080                isr11
                0x00000000c001f088                isr12
                0x00000000c001f090                isr13
                0x00000000c001f0aa                isr14
                0x00000000c001f0b2                isr15
                0x00000000c001f0bc                isr16
                0x00000000c001f0c6                isr17
                0x00000000c001f0d0                isr18
                0x00000000c001f0da                irq3
                0x00000000c001f0e4                irq4
                0x00000000c001f0ee                irq5
                0x00000000c001f0f8                irq6
                0x00000000c001f102                irq7
                0x00000000c001f10c                irq8
                0x00000000c001f116                irq9
                0x00000000c001f120                irq10
                0x00000000c001f12a                irq11
                0x00000000c001f134                irq12
                0x00000000c001f13e                irq13
                0x00000000c001f148                irq14
                0x00000000c001f152                irq15
                0x00000000c001f15c                irq1
                0x00000000c001f163                irq2
                0x00000000c001f16a                isr96
                0x00000000c001f171                irq0
                0x00000000c001f176                int_common_stub
                0x00000000c001f1a8                syscall_common_stub
                0x00000000c001f2ac                irq16
                0x00000000c001f2b6                irq17
                0x00000000c001f2c0                irq18
                0x00000000c001f2ca                irq19
                0x00000000c001f2d4                irq20
                0x00000000c001f2de                irq21
                0x00000000c001f2e8                irq22
                0x00000000c001f2f2                irq23
 *fill*         0x00000000c001f2fc        0x4 
 .text          0x00000000c001f300       0x10 arch/i386/rdrand.32
                0x00000000c001f300                i386GetRDRAND
 .text          0x00000000c001f310       0x39 arch/i386/sse.32
                0x00000000c001f310                absolutelyNoChanceInHell
                0x00000000c001f310                sseDetect
                0x00000000c001f328                sseSave
                0x00000000c001f330                sseLoad
                0x00000000c001f338                sseInit
                0x00000000c001f348                sseClose
 *fill*         0x00000000c001f349        0x7 
 .text          0x00000000c001f350       0x49 arch/i386/x87.32
                0x00000000c001f356                x87Detect
                0x00000000c001f371                x87Save
                0x00000000c001f378                x87Load
                0x00000000c001f37f                x87Init
                0x00000000c001f398                x87Close
 *fill*         0x00000000c001f399        0x3 
 .text          0x00000000c001f39c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f3c1        0x0 crtn.32
 *fill*         0x00000000c001f3c1        0x3 
 .text          0x00000000c001f3c4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f3c4                __divdi3
 *fill*         0x00000000c001f50f        0x1 
 .text          0x00000000c001f510      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f510                __moddi3
 *fill*         0x00000000c001f68e        0x2 
 .text          0x00000000c001f690       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f690                __udivdi3
 *fill*         0x00000000c001f78f        0x1 
 .text          0x00000000c001f790      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f790                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f8b0        0x0
 .iplt          0x00000000c001f8b0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f8aa        0xf
 .init          0x00000000c001f8aa        0x3 crti.32
                0x00000000c001f8aa                _init
 .init          0x00000000c001f8ad        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f8b2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f8b7        0x2 crtn.32

.fini           0x00000000c001f8b9        0xa
 .fini          0x00000000c001f8b9        0x3 crti.32
                0x00000000c001f8b9                _fini
 .fini          0x00000000c001f8bc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f8c1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f8c4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f8c4       0x23 core/computer.32
                0x00000000c001f8c4                Computer::~Computer()
                0x00000000c001f8c4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f8e8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f8e8       0x2a core/computer.32
                0x00000000c001f8e8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f912       0x21
 .text._Z10idleCommonv
                0x00000000c001f912       0x21 core/idle.32
                0x00000000c001f912                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f934        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f934        0x2 core/unixfile.32
                0x00000000c001f934                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f934                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f936       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f936       0x42 core/unixfile.32
                0x00000000c001f936                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f936                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f978       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f978       0xd3 core/unixfile.32
                0x00000000c001f978                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fa4c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fa4c        0x7 core/unixfile.32
                0x00000000c001fa4c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fa54       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fa54       0xa1 core/unixfile.32
                0x00000000c001fa54                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001faf6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001faf6        0x8 core/unixfile.32
                0x00000000c001faf6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fafe       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fafe       0x1a hal/device.32
                0x00000000c001fafe                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fafe                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb18       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb18       0x2a hal/device.32
                0x00000000c001fb18                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fb42       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fb42       0xdc hal/device.32
                0x00000000c001fb42                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fc1e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fc1e       0x42 hal/device.32
                0x00000000c001fc1e                LinkedList<Device>::LinkedList()
                0x00000000c001fc1e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fc60       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fc60       0x1c hal/timer.32
                0x00000000c001fc60                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fc7c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fc7c        0x7 hal/timer.32
                0x00000000c001fc7c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fc84       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fc84       0xbc hal/timer.32
                0x00000000c001fc84                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fd40       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fd40       0xda hal/timer.32
                0x00000000c001fd40                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fe1c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fe1c       0x23 hw/acpi.32
                0x00000000c001fe1c                ACPI::~ACPI()
                0x00000000c001fe1c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fe40       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fe40       0x2a hw/acpi.32
                0x00000000c001fe40                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fe6c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fe6c        0x2 hw/acpi.32
                0x00000000c001fe6c                LinkedList<Device>::~LinkedList()
                0x00000000c001fe6c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fe70       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fe70       0x1c hw/acpi.32
                0x00000000c001fe70                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fe8c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fe8c        0x7 hw/acpi.32
                0x00000000c001fe8c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fe94       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fe94       0xb8 hw/acpi.32
                0x00000000c001fe94                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ff4c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ff4c       0x23 hw/cpu.32
                0x00000000c001ff4c                CPU::~CPU()
                0x00000000c001ff4c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ff70       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ff70       0x2a hw/cpu.32
                0x00000000c001ff70                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ff9c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ff9c        0x8 sys/kill.32
                0x00000000c001ff9c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ffa4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ffa4        0x2 thr/prcssthr.32
                0x00000000c001ffa4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ffa4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ffa8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ffa8       0x49 thr/prcssthr.32
                0x00000000c001ffa8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ffa8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fff4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fff4       0x42 thr/prcssthr.32
                0x00000000c001fff4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fff4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c0020036       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020036       0x23 hw/bus/pci.32
                0x00000000c0020036                PCI::~PCI()
                0x00000000c0020036                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002005a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002005a       0x2a hw/bus/pci.32
                0x00000000c002005a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020084       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020084       0x23 hw/diskctrl/ide.32
                0x00000000c0020084                IDE::~IDE()
                0x00000000c0020084                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00200a8       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00200a8       0x2a hw/diskctrl/ide.32
                0x00000000c00200a8                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c00200d2       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c00200d2       0x23 hw/diskctrl/satabus.32
                0x00000000c00200d2                SATABus::~SATABus()
                0x00000000c00200d2                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c00200f6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c00200f6       0x2a hw/diskctrl/satabus.32
                0x00000000c00200f6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020120       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020120       0x23 hw/diskphys/ata.32
                0x00000000c0020120                ATA::~ATA()
                0x00000000c0020120                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020144       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020144       0x2a hw/diskphys/ata.32
                0x00000000c0020144                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c002016e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c002016e       0x23 hw/diskphys/atapi.32
                0x00000000c002016e                ATAPI::~ATAPI()
                0x00000000c002016e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020192       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020192       0x2a hw/diskphys/atapi.32
                0x00000000c0020192                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00201bc       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00201bc       0x23 hw/diskphys/sata.32
                0x00000000c00201bc                SATA::~SATA()
                0x00000000c00201bc                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c00201e0       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c00201e0       0x2a hw/diskphys/sata.32
                0x00000000c00201e0                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002020a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002020a       0x23 hw/diskphys/satapi.32
                0x00000000c002020a                SATAPI::~SATAPI()
                0x00000000c002020a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002022e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002022e       0x2a hw/diskphys/satapi.32
                0x00000000c002022e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020258       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020258       0x23 hw/intctrl/apic.32
                0x00000000c0020258                IOAPIC::~IOAPIC()
                0x00000000c0020258                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002027c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002027c       0x2a hw/intctrl/apic.32
                0x00000000c002027c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00202a8       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00202a8       0x23 hw/timer/apictimer.32
                0x00000000c00202a8                APICTimer::~APICTimer()
                0x00000000c00202a8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00202cc       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00202cc       0x2a hw/timer/apictimer.32
                0x00000000c00202cc                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00202f8       0x23
 .text._ZN3PITD2Ev
                0x00000000c00202f8       0x23 hw/timer/pit.32
                0x00000000c00202f8                PIT::~PIT()
                0x00000000c00202f8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002031c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002031c       0x2a hw/timer/pit.32
                0x00000000c002031c                PIT::~PIT()

.rodata         0x00000000c0020346     0x31ea
                0x00000000c0020346                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020346        0x2 
 .ctors         0x00000000c0020348        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c002034c        0x4 core/unixfile.32
 .ctors         0x00000000c0020350        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020354        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020358                end_ctors = .
                0x00000000c0020358                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020358        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002035c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002035c                __DTOR_END__
                0x00000000c0020360                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020360        0x0 
 .rodata        0x00000000c0020360      0x101 acpica/utclib.32
                0x00000000c0020360                AcpiGbl_Ctypes
 *fill*         0x00000000c0020461        0x3 
 .rodata        0x00000000c0020464       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002047c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c00204c6       0x1a 
 .rodata        0x00000000c00204e0       0xed fs/fat/ff.32
 *fill*         0x00000000c00205cd       0x13 
 .rodata        0x00000000c00205e0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00209e0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020a4f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020b64       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020bcc       0x2c core/computer.32
                0x00000000c0020bcc                vtable for Computer
 .rodata.str1.4
                0x00000000c0020bf8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020c28        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020c34       0x17 core/main.32
 *fill*         0x00000000c0020c4b        0x1 
 .rodata.str1.4
                0x00000000c0020c4c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020cf1       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020d49       0x39 core/pipe.32
 *fill*         0x00000000c0020d82        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020d84       0x1c core/pipe.32
                0x00000000c0020d84                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020da0       0x2b core/terminal.32
 *fill*         0x00000000c0020dcb        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020dcc       0x1c core/terminal.32
                0x00000000c0020dcc                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020de8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020e0a       0x15 core/unixfile.32
 *fill*         0x00000000c0020e1f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020e20       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020e6b        0x8 core/unixfile.32
 *fill*         0x00000000c0020e73        0x1 
 .rodata.str1.4
                0x00000000c0020e74       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020e94       0x1c core/unixfile.32
                0x00000000c0020e94                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020eb0       0x1c core/unixfile.32
                0x00000000c0020eb0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020ecc      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021160      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021286       0x33 coreobjs/c++.32
 *fill*         0x00000000c00212b9        0x3 
 .rodata        0x00000000c00212bc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002140c      0x169 dbg/usban.32
 *fill*         0x00000000c0021575        0x3 
 .rodata.str1.4
                0x00000000c0021578      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00216af      0x19e fs/symlink.32
 .rodata.str1.1
                0x00000000c002184d       0x26 fs/vfs.32
                                         0x28 (size before relaxing)
 *fill*         0x00000000c0021873        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021874       0x6c fs/vfs.32
                0x00000000c0021874                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00218e0       0x1c fs/vfs.32
                0x00000000c00218e0                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00218fc       0x1c fs/vfs.32
                0x00000000c00218fc                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021918       0x2c hal/bus.32
                0x00000000c0021918                vtable for Bus
 .rodata.str1.1
                0x00000000c0021944       0x1e hal/clock.32
 *fill*         0x00000000c0021962        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021964       0x3c hal/clock.32
                0x00000000c0021964                vtable for Clock
 .rodata        0x00000000c00219a0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00219d0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021a28       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021a28       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021a28       0x2c hal/device.32
                0x00000000c0021a28                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021a54       0x2c hal/device.32
                0x00000000c0021a54                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021a80       0x2c hal/diskctrl.32
                0x00000000c0021a80                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021aac       0x38 hal/diskphys.32
                0x00000000c0021aac                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021ae4       0x3e hal/intctrl.32
 *fill*         0x00000000c0021b22        0x2 
 .rodata.str1.4
                0x00000000c0021b24       0x5d hal/intctrl.32
 .rodata        0x00000000c0021b81       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021bd4       0x34 hal/keybrd.32
                0x00000000c0021bd4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021c08       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021c4c       0x2c hal/logidisk.32
                0x00000000c0021c4c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021c78       0x2c hal/mouse.32
                0x00000000c0021c78                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021ca4       0x34 hal/nic.32
                0x00000000c0021ca4                vtable for NIC
 .rodata.str1.1
                0x00000000c0021cd8        0xb hal/partition.32
 *fill*         0x00000000c0021ce3        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021ce4       0x44 hal/serial.32
                0x00000000c0021ce4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021d28       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021d28        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021d28       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021d28       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021d28       0x30 hal/timer.32
                0x00000000c0021d28                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021d58       0x10 hal/vcache.32
                0x00000000c0021d58                vtable for VCache
 .rodata.str1.1
                0x00000000c0021d68       0x93 hal/video.32
 *fill*         0x00000000c0021dfb        0x1 
 .rodata._ZTV5Video
                0x00000000c0021dfc       0x4c hal/video.32
                0x00000000c0021dfc                vtable for Video
 .rodata.str1.4
                0x00000000c0021e48       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021ee3      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0022039       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0022039        0x8 hw/acpi.32
 *fill*         0x00000000c0022039        0x3 
 .rodata._ZTV4ACPI
                0x00000000c002203c       0x2c hw/acpi.32
                0x00000000c002203c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0022068      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c00221e3        0x1 
 .rodata._ZTV3CPU
                0x00000000c00221e4       0x2c hw/cpu.32
                0x00000000c00221e4                vtable for CPU
 .rodata.str1.1
                0x00000000c0022210       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022250       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c002228c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c002231d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c00223e6       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002242e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0022459       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c00224cf       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022514        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002251e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002253f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c00225d5       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022629       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022655      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022821       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022878      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022988       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022988       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022988       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022988        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022988       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022a4a        0x2 
 .rodata        0x00000000c0022a4c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022a7c      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022c1b        0x1 
 .rodata.str1.4
                0x00000000c0022c1c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022c8f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022ca4       0x3c arch/i386/rtc.32
                0x00000000c0022ca4                vtable for RTC
 .rodata.str1.1
                0x00000000c0022ce0       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022d21        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022d24       0x6c fs/fat/vfslink.32
                0x00000000c0022d24                vtable for FAT
 .rodata.str1.1
                0x00000000c0022d90       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022d90      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022ec8       0x6c fs/iso9660/vfslink.32
                0x00000000c0022ec8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022f34       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022f78       0x34 hal/sound/sndcard.32
                0x00000000c0022f78                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022fac       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022feb       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023023       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00230c4       0x2c hw/bus/pci.32
                0x00000000c00230c4                vtable for PCI
 .rodata.str1.1
                0x00000000c00230f0       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0023177        0x1 
 .rodata._ZTV3IDE
                0x00000000c0023178       0x2c hw/diskctrl/ide.32
                0x00000000c0023178                vtable for IDE
 .rodata.str1.4
                0x00000000c00231a4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00231c8       0x2c hw/diskctrl/satabus.32
                0x00000000c00231c8                vtable for SATABus
 .rodata.str1.1
                0x00000000c00231f4       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023206        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023208       0x38 hw/diskphys/ata.32
                0x00000000c0023208                vtable for ATA
 .rodata.str1.1
                0x00000000c0023240        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c002324d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0023250       0x38 hw/diskphys/atapi.32
                0x00000000c0023250                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0023288       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023304       0x38 hw/diskphys/sata.32
                0x00000000c0023304                vtable for SATA
 .rodata.str1.1
                0x00000000c002333c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0023426        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0023428       0x38 hw/diskphys/satapi.32
                0x00000000c0023428                vtable for SATAPI
 .rodata        0x00000000c0023460        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0023468       0x2c hw/intctrl/apic.32
                0x00000000c0023468                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023494       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00234af        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00234b0       0x30 hw/timer/apictimer.32
                0x00000000c00234b0                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00234e0       0x1d hw/timer/pit.32
 *fill*         0x00000000c00234fd        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023500       0x30 hw/timer/pit.32
                0x00000000c0023500                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023530      0xbb1
 *(.data)
 .data          0x00000000c0023530        0x0 crti.32
 .data          0x00000000c0023530        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023530                __dso_handle
 .data          0x00000000c0023534        0x0 acpica/utclib.32
 .data          0x00000000c0023534        0x0 core/malloc.32
 .data          0x00000000c0023534        0x0 libk/ctype.32
 .data          0x00000000c0023534        0x0 libk/string.32
 .data          0x00000000c0023534        0x0 fs/fat/diskio.32
 .data          0x00000000c0023534        0x0 fs/fat/ff.32
 .data          0x00000000c0023534        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023534        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023534        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023534        0x0 core/computer.32
 .data          0x00000000c0023534        0x0 core/gdt.32
 .data          0x00000000c0023534        0x0 core/idle.32
 .data          0x00000000c0023534        0x0 core/idt.32
 .data          0x00000000c0023534        0x4 core/kheap.32
 .data          0x00000000c0023538        0x0 core/main.32
 .data          0x00000000c0023538        0x4 core/physmgr.32
                0x00000000c0023538                Phys::bitmap
 .data          0x00000000c002353c        0x0 core/pipe.32
 *fill*         0x00000000c002353c        0x4 
 .data          0x00000000c0023540       0x60 core/terminal.32
                0x00000000c0023540                VgaText::hiddenOut
                0x00000000c0023560                ansiToVGAMappings
 .data          0x00000000c00235a0        0x0 core/tss.32
 .data          0x00000000c00235a0        0x4 core/unixfile.32
                0x00000000c00235a0                UnixFile::nextFd
 .data          0x00000000c00235a4       0x15 core/virtmgr.32
                0x00000000c00235a4                Virt::pageAllocPtr
                0x00000000c00235a8                Virt::bitmap
                0x00000000c00235ac                Virt::swapfileSectorsPerPage
                0x00000000c00235b0                Virt::swapfileLength
                0x00000000c00235b4                Virt::swapfileSector
                0x00000000c00235b8                Virt::swapfileDrive
 *fill*         0x00000000c00235b9        0x3 
 .data          0x00000000c00235bc        0x4 coreobjs/c++.32
                0x00000000c00235bc                __stack_chk_guard
 .data          0x00000000c00235c0        0x0 dbg/kconsole.32
 .data          0x00000000c00235c0       0x28 dbg/usban.32
                0x00000000c00235c0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00235e8        0x0 fs/symlink.32
 .data          0x00000000c00235e8        0x0 fs/vfs.32
 .data          0x00000000c00235e8        0x0 hal/bus.32
 .data          0x00000000c00235e8        0x0 hal/buzzer.32
 .data          0x00000000c00235e8        0x0 hal/clock.32
 .data          0x00000000c00235e8        0x0 hal/device.32
 .data          0x00000000c00235e8        0x0 hal/diskctrl.32
 .data          0x00000000c00235e8        0x0 hal/diskphys.32
 .data          0x00000000c00235e8        0x0 hal/fpu.32
 .data          0x00000000c00235e8        0x0 hal/intctrl.32
 .data          0x00000000c00235e8        0x0 hal/keybrd.32
 .data          0x00000000c00235e8        0x0 hal/logidisk.32
 .data          0x00000000c00235e8        0x0 hal/mouse.32
 .data          0x00000000c00235e8        0x0 hal/nic.32
 .data          0x00000000c00235e8        0x0 hal/partition.32
 .data          0x00000000c00235e8        0x0 hal/serial.32
 .data          0x00000000c00235e8        0x0 hal/timer.32
 .data          0x00000000c00235e8        0x0 hal/vcache.32
 .data          0x00000000c00235e8        0x0 hal/video.32
 .data          0x00000000c00235e8       0x10 hw/acpi.32
                0x00000000c00235e8                legacyIRQRemaps
 .data          0x00000000c00235f8        0x4 hw/cpu.32
                0x00000000c00235f8                lastCode
 .data          0x00000000c00235fc        0x0 krnl/atexit.32
 *fill*         0x00000000c00235fc        0x4 
 .data          0x00000000c0023600      0x142 krnl/bootmsg.32
                0x00000000c0023600                KiSplashScreen
 .data          0x00000000c0023742        0x0 krnl/compat.32
 *fill*         0x00000000c0023742       0x1e 
 .data          0x00000000c0023760      0x400 krnl/crc32.32
                0x00000000c0023760                KiPolyLookupCRC32
 .data          0x00000000c0023b60       0x4d krnl/env.32
                0x00000000c0023b60                defaultSysEnv
 .data          0x00000000c0023bad        0x0 krnl/inlines.32
 .data          0x00000000c0023bad        0x0 krnl/panic.32
 .data          0x00000000c0023bad        0x0 krnl/powctrl.32
 .data          0x00000000c0023bad        0x0 krnl/random.32
 .data          0x00000000c0023bad        0x0 krnl/resolve.32
 *fill*         0x00000000c0023bad       0x13 
 .data          0x00000000c0023bc0       0x4c krnl/signal.32
                0x00000000c0023bc0                KiDefaultSignalHandlers
 *fill*         0x00000000c0023c0c       0x14 
 .data          0x00000000c0023c20       0xfc krnl/syscalls.32
                0x00000000c0023c20                systemCallHandlers
 .data          0x00000000c0023d1c        0x0 net/ethernet.32
 *fill*         0x00000000c0023d1c        0x4 
 .data          0x00000000c0023d20      0x100 reg/cm.32
                0x00000000c0023d20                CmComponents
 .data          0x00000000c0023e20        0x0 reg/registry.32
 .data          0x00000000c0023e20        0x0 sys/eject.32
 .data          0x00000000c0023e20        0x0 sys/exit.32
 .data          0x00000000c0023e20        0x0 sys/getcwd.32
 .data          0x00000000c0023e20        0x0 sys/getpid.32
 .data          0x00000000c0023e20        0x0 sys/getramdata.32
 .data          0x00000000c0023e20        0x0 sys/getvgaptr.32
 .data          0x00000000c0023e20        0x0 sys/kill.32
 .data          0x00000000c0023e20        0x0 sys/loaddll.32
 .data          0x00000000c0023e20        0x0 sys/read.32
 .data          0x00000000c0023e20        0x0 sys/registersignal.32
 .data          0x00000000c0023e20        0x0 sys/registry.32
 .data          0x00000000c0023e20        0x0 sys/sbrk.32
 .data          0x00000000c0023e20        0x0 sys/setcwd.32
 .data          0x00000000c0023e20        0x0 sys/settime.32
 .data          0x00000000c0023e20        0x0 sys/symlink.32
 .data          0x00000000c0023e20        0x0 sys/timezone.32
 .data          0x00000000c0023e20        0x0 sys/truncate.32
 .data          0x00000000c0023e20        0x0 sys/write.32
 .data          0x00000000c0023e20        0x0 sys/wsbe.32
 .data          0x00000000c0023e20        0x0 sys/yield.32
 .data          0x00000000c0023e20        0x0 thr/elf.32
 .data          0x00000000c0023e20        0x4 thr/prcssthr.32
                0x00000000c0023e20                Thr::nextPID
 .data          0x00000000c0023e24        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023e24       0x1c 
 .data          0x00000000c0023e40      0x2a0 arch/i386/hal.32
                0x00000000c0023e40                exceptionNames
 .data          0x00000000c00240e0        0x0 arch/i386/pic.32
 .data          0x00000000c00240e0        0x0 arch/i386/rtc.32
 .data          0x00000000c00240e0        0x0 arch/i386/vga.32
 .data          0x00000000c00240e0        0x0 fs/fat/vfslink.32
 .data          0x00000000c00240e0        0x0 fs/iso9660/helper.32
 .data          0x00000000c00240e0        0x1 fs/iso9660/vfslink.32
                0x00000000c00240e0                recentDriveletter
 .data          0x00000000c00240e1        0x0 hal/sound/sndcard.32
 .data          0x00000000c00240e1        0x0 hal/sound/sndport.32
 .data          0x00000000c00240e1        0x0 hw/bus/isa.32
 .data          0x00000000c00240e1        0x0 hw/bus/pci.32
 .data          0x00000000c00240e1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00240e1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00240e1        0x0 hw/diskphys/ata.32
 .data          0x00000000c00240e1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00240e1        0x0 hw/diskphys/sata.32
 .data          0x00000000c00240e1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00240e1        0x0 hw/intctrl/apic.32
 .data          0x00000000c00240e1        0x0 hw/timer/apictimer.32
 .data          0x00000000c00240e1        0x0 hw/timer/pit.32
 .data          0x00000000c00240e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00240e1        0x0 crtn.32
 .data          0x00000000c00240e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00240e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00240e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00240e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00240e4        0x0
 .got           0x00000000c00240e4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00240e4        0x0
 .got.plt       0x00000000c00240e4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00240e4        0x0
 .igot.plt      0x00000000c00240e4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00240e4        0x0
 .tm_clone_table
                0x00000000c00240e4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00240e4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00240e1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00240e1        0x3 
 .eh_frame      0x00000000c00240e4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00240e4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00240e4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002413c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002417c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00241e8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
