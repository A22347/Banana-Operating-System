Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f43a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6c3 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006ca8                Krnl::firstTask()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006e96                Computer::setBootMessage(char const*)
                0x00000000c0006e98                Computer::detectFeatures()
                0x00000000c00070be                Computer::displayFeatures()
                0x00000000c00070c0                Computer::rdmsr(unsigned int)
                0x00000000c00070ec                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007128                Computer::shutdown()
                0x00000000c0007140                Computer::restart()
                0x00000000c0007158                Computer::sleep()
                0x00000000c000716c                Computer::nmiEnabled()
                0x00000000c0007178                Computer::readCMOS(unsigned char)
                0x00000000c0007196                Computer::enableNMI(bool)
                0x00000000c00071ae                Computer::open(int, int, void*)
                0x00000000c0007282                Computer::disableNMI()
                0x00000000c0007292                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072b6                Computer::handleNMI()
 *fill*         0x00000000c0007321        0x1 
 .text          0x00000000c0007322      0x1db core/gdt.32
                0x00000000c0007322                GDTEntry::setBase(unsigned int)
                0x00000000c000733e                GDTEntry::setLimit(unsigned int)
                0x00000000c000735c                GDT::GDT()
                0x00000000c000735c                GDT::GDT()
                0x00000000c0007372                GDT::addEntry(GDTEntry)
                0x00000000c0007394                GDT::getNumberOfEntries()
                0x00000000c000739c                GDT::flush()
                0x00000000c00073be                GDT::setup()
 .text          0x00000000c00074fd       0x1d core/idle.32
                0x00000000c00074fd                idleFunction(void*)
 *fill*         0x00000000c000751a        0x2 
 .text          0x00000000c000751c      0x46c core/idt.32
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c0007596                IDTEntry::setOffset(unsigned int)
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ae                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075b6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075d0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007608                IDT::flush()
                0x00000000c0007622                IDT::setup()
 .text          0x00000000c0007988      0x188 core/kheap.32
                0x00000000c0007988                sbrk
                0x00000000c0007a1f                mmap
                0x00000000c0007a35                munmap
                0x00000000c0007a4b                liballoc_lock()
                0x00000000c0007a59                liballoc_unlock()
                0x00000000c0007a6f                liballoc_alloc(int)
                0x00000000c0007a87                liballoc_free(void*, int)
                0x00000000c0007aa2                realloc
                0x00000000c0007ab6                malloc
                0x00000000c0007ac6                free
                0x00000000c0007ad6                rfree
                0x00000000c0007ae6                calloc
 .text          0x00000000c0007b10       0xc7 core/main.32
                0x00000000c0007b10                KeEntryPoint
 .text          0x00000000c0007bd7      0x644 core/physmgr.32
                0x00000000c0007bd7                Phys::allocateDMA(unsigned long)
                0x00000000c0007cbf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cfa                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d3a                Phys::getPageState(unsigned long)
                0x00000000c0007d56                Phys::freePage(unsigned long)
                0x00000000c0007dbf                Phys::allocatePage()
                0x00000000c0007e8e                Phys::allocateContiguousPages(int)
                0x00000000c0007ef5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f2d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000821b        0x1 
 .text          0x00000000c000821c      0x273 core/pipe.32
                0x00000000c000821c                Pipe::isAtty()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008244                Pipe::~Pipe()
                0x00000000c000826c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000832c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xab3 core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a60                VgaText::putx(unsigned int)
                0x00000000c0008aa6                VgaText::puts(char const*)
                0x00000000c0008acc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b18                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008db6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f42                VgaText::doUpdate()
 *fill*         0x00000000c0008f43        0x1 
 .text          0x00000000c0008f44      0x1a1 core/tss.32
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f54                TSS::setESP(unsigned long)
                0x00000000c0008f68                TSS::flush()
                0x00000000c0008f88                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090e5        0x1 
 .text          0x00000000c00090e6      0x4ca core/unixfile.32
                0x00000000c00090e6                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000913c                ReservedFilename::isAtty()
                0x00000000c0009158                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091b6                UnixFile::getFileDescriptor()
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c0009440                UnixFile::~UnixFile()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c000948c                ReservedFilename::~ReservedFilename()
                0x00000000c00094b3                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095b0     0x1218 core/virtmgr.32
                0x00000000c00095b0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095ea                Virt::getPageState(unsigned long)
                0x00000000c000960d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009732                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009755                Virt::swapIDToSector(unsigned long)
                0x00000000c000976b                Virt::allocateSwapfilePage()
                0x00000000c00097eb                Virt::virtualMemorySetup()
                0x00000000c000983c                Virt::setupPageSwapping(int)
                0x00000000c00098ae                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098de                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000990c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000992b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a68                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a8c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009aa6                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009b52                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b86                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009d20                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e24                VAS::allocatePages(int, int)
                0x00000000c0009f1a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f72                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a2b2                VAS::evict(unsigned long)
                0x00000000c000a390                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a52a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a59e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ca                VAS::scanForEviction()
                0x00000000c000a6cd                mapVASFirstTime
 .text          0x00000000c000a7c8       0x5f coreobjs/c++.32
                0x00000000c000a7c8                __cxa_atexit
                0x00000000c000a7cb                __cxa_finalize
                0x00000000c000a7cc                __stack_chk_fail
                0x00000000c000a802                __cxa_pure_virtual
                0x00000000c000a813                operator new[](unsigned long)
                0x00000000c000a818                operator delete(void*, unsigned long)
                0x00000000c000a81d                operator delete[](void*)
                0x00000000c000a822                operator delete[](void*, unsigned long)
 .text          0x00000000c000a827      0x254 dbg/kconsole.32
                0x00000000c000a827                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8c7                Dbg::logc(char)
                0x00000000c000a8e7                Dbg::logs(char*)
                0x00000000c000a906                Dbg::logWriteInt(unsigned int)
                0x00000000c000a924                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a945                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa7b        0x1 
 .text          0x00000000c000aa7c      0x2d4 dbg/usban.32
                0x00000000c000aa7c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aae8                __ubsan_handle_type_mismatch_v1
                0x00000000c000abc4                __ubsan_handle_pointer_overflow
                0x00000000c000abf0                __ubsan_handle_out_of_bounds
                0x00000000c000ac1c                __ubsan_handle_add_overflow
                0x00000000c000ac48                __ubsan_handle_load_invalid_value
                0x00000000c000ac74                __ubsan_handle_divrem_overflow
                0x00000000c000aca0                __ubsan_handle_mul_overflow
                0x00000000c000accc                __ubsan_handle_sub_overflow
                0x00000000c000acf8                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad24                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad50      0x603 fs/symlink.32
                0x00000000c000ad50                KiCreateSymlinkID()
                0x00000000c000adbd                KiFlushSymlinkChanges()
                0x00000000c000ae90                KiDeinitialiseSymlinks(void*)
                0x00000000c000ae95                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000af04                KiIsSymlinkRegistered(char const*)
                0x00000000c000af4b                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b160                KeCreateSymlink(char const*, char const*)
                0x00000000c000b29d                KeInitialiseSymlinks()
 *fill*         0x00000000c000b353        0x1 
 .text          0x00000000c000b354      0xcce fs/vfs.32
                0x00000000c000b354                File::read(unsigned long long, void*, int*)
                0x00000000c000b3ac                File::write(unsigned long long, void*, int*)
                0x00000000c000b404                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b45c                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b48a                File::isAtty()
                0x00000000c000b48e                Directory::isAtty()
                0x00000000c000b492                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b498                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b49e                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b4a4                File::~File()
                0x00000000c000b4a4                File::~File()
                0x00000000c000b4c8                File::~File()
                0x00000000c000b4f2                Directory::~Directory()
                0x00000000c000b4f2                Directory::~Directory()
                0x00000000c000b516                Directory::~Directory()
                0x00000000c000b540                Filesystem::Filesystem()
                0x00000000c000b540                Filesystem::Filesystem()
                0x00000000c000b564                Filesystem::~Filesystem()
                0x00000000c000b564                Filesystem::~Filesystem()
                0x00000000c000b572                Filesystem::~Filesystem()
                0x00000000c000b596                Fs::getcwd(Process*, char*, int)
                0x00000000c000b5c0                Fs::initVFS()
                0x00000000c000b5ea                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b7b8                File::File(char const*, Process*)
                0x00000000c000b7b8                File::File(char const*, Process*)
                0x00000000c000b874                File::open(FileOpenMode)
                0x00000000c000b8d2                File::close()
                0x00000000c000b932                File::seek(unsigned long long)
                0x00000000c000b988                File::truncate(unsigned long long)
                0x00000000c000b9de                File::tell(unsigned long long*)
                0x00000000c000ba2e                File::rewind()
                0x00000000c000ba42                File::unlink()
                0x00000000c000ba8e                File::rename(char const*)
                0x00000000c000badc                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bb38                File::exists()
                0x00000000c000bb76                File::stat(unsigned long long*, bool*)
                0x00000000c000bbd7                Fs::setcwd(Process*, char*)
                0x00000000c000bd34                Directory::Directory(char const*, Process*)
                0x00000000c000bd34                Directory::Directory(char const*, Process*)
                0x00000000c000bdf0                Directory::open()
                0x00000000c000be4c                Directory::close()
                0x00000000c000beac                Directory::unlink()
                0x00000000c000bef8                Directory::rename(char const*)
                0x00000000c000bf46                Directory::exists()
                0x00000000c000bf84                Directory::read(dirent*)
                0x00000000c000bfd0                Directory::create()
                0x00000000c000c01c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c022        0x2 
 .text          0x00000000c000c024       0x86 hal/bus.32
                0x00000000c000c024                Bus::Bus(char const*)
                0x00000000c000c024                Bus::Bus(char const*)
                0x00000000c000c05c                Bus::~Bus()
                0x00000000c000c05c                Bus::~Bus()
                0x00000000c000c080                Bus::~Bus()
 .text          0x00000000c000c0aa       0x96 hal/buzzer.32
                0x00000000c000c0aa                beepThread(void*)
                0x00000000c000c0e7                Krnl::beep(int, int, bool)
 .text          0x00000000c000c140      0x45f hal/clock.32
                0x00000000c000c140                User::loadClockSettings(int)
                0x00000000c000c192                Clock::Clock(char const*)
                0x00000000c000c192                Clock::Clock(char const*)
                0x00000000c000c1c8                Clock::~Clock()
                0x00000000c000c1c8                Clock::~Clock()
                0x00000000c000c1ec                Clock::~Clock()
                0x00000000c000c216                Clock::timeInSecondsLocal()
                0x00000000c000c25e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c2b7                datetimeToSeconds(datetime_t)
                0x00000000c000c3d6                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c436                secondsToDatetime(unsigned long long)
                0x00000000c000c57a                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c59f        0x1 
 .text          0x00000000c000c5a0      0x464 hal/device.32
                0x00000000c000c5a0                Device::hibernate()
                0x00000000c000c5a2                Device::wake()
                0x00000000c000c5a4                Device::detect()
                0x00000000c000c5a6                Device::disableLegacy()
                0x00000000c000c5a8                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c5aa                DriverlessDevice::close(int, int, void*)
                0x00000000c000c5ae                DriverlessDevice::detect()
                0x00000000c000c5b0                DriverlessDevice::open(int, int, void*)
                0x00000000c000c5c4                Device::~Device()
                0x00000000c000c5c4                Device::~Device()
                0x00000000c000c5d2                Device::~Device()
                0x00000000c000c5fa                Device::findAndLoadDriver()
                0x00000000c000c608                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c62e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c66e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c698                Device::getParent()
                0x00000000c000c6a4                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c6c2                Device::addChild(Device*)
                0x00000000c000c706                Device::removeAllChildren()
                0x00000000c000c74c                Device::hibernateAll()
                0x00000000c000c77c                Device::wakeAll()
                0x00000000c000c7ac                Device::detectAll()
                0x00000000c000c7dc                Device::disableLegacyAll()
                0x00000000c000c7de                Device::loadDriversForAll()
                0x00000000c000c7e0                Device::closeAll()
                0x00000000c000c816                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c84c                Device::setName(char const*)
                0x00000000c000c85a                Device::Device(char const*)
                0x00000000c000c85a                Device::Device(char const*)
                0x00000000c000c956                Device::getName()
                0x00000000c000c960                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c960                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c996                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c9da                getDevicesOfType(DeviceType)
 .text          0x00000000c000ca04       0x86 hal/diskctrl.32
                0x00000000c000ca04                HardDiskController::HardDiskController(char const*)
                0x00000000c000ca04                HardDiskController::HardDiskController(char const*)
                0x00000000c000ca3c                HardDiskController::~HardDiskController()
                0x00000000c000ca3c                HardDiskController::~HardDiskController()
                0x00000000c000ca60                HardDiskController::~HardDiskController()
 .text          0x00000000c000ca8a       0xe2 hal/diskphys.32
                0x00000000c000ca8a                PhysicalDisk::eject()
                0x00000000c000ca8e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ca8e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000caf6                PhysicalDisk::startCache()
                0x00000000c000cb1e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cb1e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cb42                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cb6c        0x0 hal/fpu.32
 .text          0x00000000c000cb6c      0x359 hal/intctrl.32
                0x00000000c000cb6c                int_handler
                0x00000000c000cbf6                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cc40                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000cd74                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000cda8                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ce26                setupINTS()
                0x00000000c000ce83                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000cec5        0x1 
 .text          0x00000000c000cec6      0x8be hal/keybrd.32
                0x00000000c000cec6                startGUI(void*)
                0x00000000c000cf34                startGUIVESA(void*)
                0x00000000c000cfa2                sendKeyToTerminal(unsigned char)
                0x00000000c000d07d                sendKeyboardToken(KeyboardToken)
                0x00000000c000d567                clearInternalKeybuffer(VgaText*)
                0x00000000c000d59c                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d6fa                Keyboard::Keyboard(char const*)
                0x00000000c000d6fa                Keyboard::Keyboard(char const*)
                0x00000000c000d736                Keyboard::~Keyboard()
                0x00000000c000d736                Keyboard::~Keyboard()
                0x00000000c000d75a                Keyboard::~Keyboard()
 .text          0x00000000c000d784      0x3f8 hal/logidisk.32
                0x00000000c000d784                LogicalDisk::close(int, int, void*)
                0x00000000c000d788                LogicalDisk::~LogicalDisk()
                0x00000000c000d788                LogicalDisk::~LogicalDisk()
                0x00000000c000d7ac                LogicalDisk::~LogicalDisk()
                0x00000000c000d7d6                LogicalDisk::open(int, int, void*)
                0x00000000c000d7ea                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d822                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d868                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d868                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d928                LogicalDisk::assignDriveLetter()
                0x00000000c000d9e2                LogicalDisk::mount()
                0x00000000c000da2a                LogicalDisk::unmount()
                0x00000000c000da3a                LogicalDisk::eject()
                0x00000000c000da4e                LogicalDisk::unassignDriveLetter()
                0x00000000c000daa4                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000db10                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000db7c       0x86 hal/mouse.32
                0x00000000c000db7c                Mouse::Mouse(char const*)
                0x00000000c000db7c                Mouse::Mouse(char const*)
                0x00000000c000dbb4                Mouse::~Mouse()
                0x00000000c000dbb4                Mouse::~Mouse()
                0x00000000c000dbd8                Mouse::~Mouse()
 .text          0x00000000c000dc02       0x90 hal/nic.32
                0x00000000c000dc02                NIC::getMAC()
                0x00000000c000dc08                NIC::write(int, unsigned char*, int*)
                0x00000000c000dc0e                NIC::NIC(char const*)
                0x00000000c000dc0e                NIC::NIC(char const*)
                0x00000000c000dc44                NIC::~NIC()
                0x00000000c000dc44                NIC::~NIC()
                0x00000000c000dc68                NIC::~NIC()
 .text          0x00000000c000dc92      0x33b hal/partition.32
                0x00000000c000dc92                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dd3a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000dfcd        0x3 
 .text          0x00000000c000dfd0       0x86 hal/serial.32
                0x00000000c000dfd0                Serial::Serial(char const*)
                0x00000000c000dfd0                Serial::Serial(char const*)
                0x00000000c000e008                Serial::~Serial()
                0x00000000c000e008                Serial::~Serial()
                0x00000000c000e02c                Serial::~Serial()
 *fill*         0x00000000c000e056        0x2 
 .text          0x00000000c000e058      0x234 hal/timer.32
                0x00000000c000e058                Timer::Timer(char const*)
                0x00000000c000e058                Timer::Timer(char const*)
                0x00000000c000e090                Timer::~Timer()
                0x00000000c000e090                Timer::~Timer()
                0x00000000c000e0b4                Timer::~Timer()
                0x00000000c000e0de                Timer::read()
                0x00000000c000e0e9                setupTimer(int)
                0x00000000c000e124                timerHandler(unsigned int)
 .text          0x00000000c000e28c      0x444 hal/vcache.32
                0x00000000c000e28c                VCache::VCache(PhysicalDisk*)
                0x00000000c000e28c                VCache::VCache(PhysicalDisk*)
                0x00000000c000e3fc                VCache::invalidateReadBuffer()
                0x00000000c000e40c                VCache::writeWriteBuffer()
                0x00000000c000e458                VCache::~VCache()
                0x00000000c000e458                VCache::~VCache()
                0x00000000c000e4b0                VCache::~VCache()
                0x00000000c000e4d8                VCache::write(unsigned long long, int, void*)
                0x00000000c000e5c6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e6d0      0x4c7 hal/video.32
                0x00000000c000e6d0                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e71c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e78c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e80a                Video::clearScreen(unsigned int)
                0x00000000c000e83e                Video::putpixel(int, int, unsigned int)
                0x00000000c000e84c                Video::readPixelApprox(int, int)
                0x00000000c000e860                Video::Video(char const*)
                0x00000000c000e860                Video::Video(char const*)
                0x00000000c000e896                Video::~Video()
                0x00000000c000e896                Video::~Video()
                0x00000000c000e8ba                Video::~Video()
                0x00000000c000e8e4                Video::isMonochrome()
                0x00000000c000e8f0                Video::getWidth()
                0x00000000c000e8fc                Video::getHeight()
                0x00000000c000e908                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e9c4                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000eb2c                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eb97        0x1 
 .text          0x00000000c000eb98     0x138b hw/acpi.32
                0x00000000c000eb98                ACPI::close(int, int, void*)
                0x00000000c000ec4c                findRSDP()
                0x00000000c000ece4                loadACPITables(unsigned char*)
                0x00000000c000ef50                findRSDT(unsigned char*)
                0x00000000c000f0a8                findDataTable(unsigned char*, char*)
                0x00000000c000f128                scanMADT()
                0x00000000c000f5e0                ACPI::ACPI()
                0x00000000c000f5e0                ACPI::ACPI()
                0x00000000c000f634                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f730                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f7fc                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f804                ACPI::detectPCI()
                0x00000000c000fa24                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fa6c                ACPI::sleep()
                0x00000000c000fa88                ACPI::open(int, int, void*)
 *fill*         0x00000000c000ff23        0x1 
 .text          0x00000000c000ff24      0xbc5 hw/cpu.32
                0x00000000c000ff24                CPU::close(int, int, void*)
                0x00000000c000ff28                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000ff44                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000ff5c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ffd0                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0010054                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010082                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00100b0                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00100de                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c001010c                CPU::CPU()
                0x00000000c001010c                CPU::CPU()
                0x00000000c001019a                CPU::displayFeatures()
                0x00000000c001019c                CPU::detectFeatures()
                0x00000000c0010870                CPU::setupSMEP()
                0x00000000c001087c                CPU::setupUMIP()
                0x00000000c0010886                CPU::setupTSC()
                0x00000000c0010890                CPU::setupLargePages()
                0x00000000c001089a                CPU::setupPAT()
                0x00000000c00108d6                CPU::setupMTRR()
                0x00000000c00108d8                CPU::setupGlobalPages()
                0x00000000c00108e2                CPU::allowUsermodeDataAccess()
                0x00000000c00108f4                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010906                CPU::setupSMAP()
                0x00000000c0010914                CPU::setupFeatures()
                0x00000000c00109e0                CPU::open(int, int, void*)
 .text          0x00000000c0010ae9       0xb6 krnl/atexit.32
                0x00000000c0010ae9                KeInitialiseAtexit()
                0x00000000c0010b08                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010b3c                KeExecuteAtexit()
 .text          0x00000000c0010b9f       0xdf krnl/bootmsg.32
                0x00000000c0010b9f                KeDisplaySplashScreen()
                0x00000000c0010c1b                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010c7e        0x2 
 .text          0x00000000c0010c80       0x1d krnl/compat.32
                0x00000000c0010c80                Krnl::handlePowerButton()
                0x00000000c0010c90                Krnl::handleSleepButton()
 *fill*         0x00000000c0010c9d        0x1 
 .text          0x00000000c0010c9e      0x5bf krnl/env.32
                0x00000000c0010c9e                EnvVarContainer::getEnv(char const*)
                0x00000000c0010cdc                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010d9e                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010da0                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010fc4                EnvVarContainer::__loadSystem()
                0x00000000c0010fde                EnvVarContainer::__loadUser()
                0x00000000c0010fe0                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010fe0                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011002                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011002                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011032                KeGetEnv(Process*, char const*)
                0x00000000c0011097                KeSetEnvSystem(char const*, char const*)
                0x00000000c00110b1                KeSetEnvUser(char const*, char const*)
                0x00000000c00110d0                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00110e3                KeDeleteEnvSystem(char const*)
                0x00000000c00110e4                KeDeleteEnvUser(char const*)
                0x00000000c00110e5                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00110e6                KeNewProcessEnv(Process*)
                0x00000000c0011108                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0011154                KeLoadSystemEnv()
                0x00000000c0011182                KeLoadUserEnv()
                0x00000000c00111a8                KeFlushEnv()
                0x00000000c00111a9                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00111c9                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c001125d       0x94 krnl/inlines.32
                0x00000000c001125d                CPU::current()
                0x00000000c0011269                operator new(unsigned long)
                0x00000000c001126e                operator delete(void*)
                0x00000000c0011273                disableIRQs()
                0x00000000c0011275                enableIRQs()
                0x00000000c0011277                lockScheduler()
                0x00000000c001127f                unlockScheduler()
                0x00000000c001128e                lockStuff()
                0x00000000c001129c                unlockStuff()
                0x00000000c00112d6                Virt::getAKernelVAS()
                0x00000000c00112dc                __not_memcpy
 .text          0x00000000c00112f1        0xc krnl/panic.32
                0x00000000c00112f1                KePanic(char const*)
 .text          0x00000000c00112fd      0x142 krnl/powctrl.32
                0x00000000c00112fd                KePowerThread(void*)
                0x00000000c001132b                KeChangePowerSettings(PowerSettings)
                0x00000000c0011341                KeUserIOReceived()
                0x00000000c001134c                KeHandlePowerButton()
                0x00000000c0011381                KeHandleSleepButton()
                0x00000000c00113b6                KeSetupPowerManager()
 .text          0x00000000c001143f       0x9d krnl/random.32
                0x00000000c001143f                KeRand()
                0x00000000c0011481                KeSeedRand(unsigned int)
                0x00000000c00114aa                KeInitRand()
 .text          0x00000000c00114dc      0x1bc krnl/resolve.32
                0x00000000c00114dc                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011698      0x322 krnl/signal.32
                0x00000000c0011698                KiSigKill(int)
                0x00000000c00116ac                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00116ad                KiDefaultSignalHandlerPause(int)
                0x00000000c00116d9                KiDefaultSignalHandlerResume(int)
                0x00000000c0011705                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001170a                KeInitSignals()
                0x00000000c001175c                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011792                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001180f                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011906                KiCheckSignalZ
                0x00000000c0011948                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011983                KiFinishSignalZ
 .text          0x00000000c00119ba      0xc61 krnl/syscalls.32
                0x00000000c00119ba                SysSeekDir(regs*)
                0x00000000c00119bf                SysTellDir(regs*)
                0x00000000c00119c4                SysVerify(regs*)
                0x00000000c00119ce                SysGetArgc(regs*)
                0x00000000c00119e2                SysTTYName(regs*)
                0x00000000c00119ea                SysFormatDisk(regs*)
                0x00000000c0011a61                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011ab5                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011b0e                SysShutdown(regs*)
                0x00000000c0011b6c                SysRealpath(regs*)
                0x00000000c0011bb1                SysReadDir(regs*)
                0x00000000c0011c31                SysIsATTY(regs*)
                0x00000000c0011c8b                SysSeek(regs*)
                0x00000000c0011ce2                SysTell(regs*)
                0x00000000c0011d4f                SysSize(regs*)
                0x00000000c0011dc2                SysSizeFromFilename(regs*)
                0x00000000c0011e73                SysClose(regs*)
                0x00000000c0011ed3                SysOpenDir(regs*)
                0x00000000c0011f50                SysMakeDir(regs*)
                0x00000000c0011fbe                SysCloseDir(regs*)
                0x00000000c0012012                SysWait(regs*)
                0x00000000c0012033                SysNotImpl(regs*)
                0x00000000c001204e                SysPanic(regs*)
                0x00000000c0012069                SysRmdir(regs*)
                0x00000000c00120ce                SysUnlink(regs*)
                0x00000000c0012133                SysGetArgv(regs*)
                0x00000000c0012180                SysUSleep(regs*)
                0x00000000c00121a9                SysSpawn(regs*)
                0x00000000c001221c                SysGetEnv(regs*)
                0x00000000c00122cd                SysSetFatAttrib(regs*)
                0x00000000c0012340                SysPipe(regs*)
                0x00000000c0012385                SysGetUnixTime(regs*)
                0x00000000c0012399                string_ends_with(char const*, char const*)
                0x00000000c00123e1                SysOpen(regs*)
                0x00000000c00125d9                KeSystemCall(regs*, void*)
 *fill*         0x00000000c001261b        0x1 
 .text          0x00000000c001261c      0x159 net/ethernet.32
                0x00000000c001261c                KeSwitchEndian16(unsigned short)
                0x00000000c0012640                KeSwitchEndian32(unsigned int)
                0x00000000c0012670                EthernetCRC32(unsigned char*, int)
                0x00000000c0012714                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012775      0xd56 reg/cm.32
                0x00000000c0012775                CmOpen(char const*)
                0x00000000c0012893                CmClose(Reghive_Tag*)
                0x00000000c00128a9                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c00128e5                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c001295c                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c001299b                CmGetNext(Reghive_Tag*, int)
                0x00000000c00129cd                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012a09                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012a31                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012a52                CmExpand(Reghive_Tag*, int)
                0x00000000c0012acd                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012b53                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012c47                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012d83                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012de4                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012e14                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012e4b                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012e75                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012eb5                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012f59                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012f87                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013125                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013172                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00131ec                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001323f                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013303                zStrtok(char*, char const*)
                0x00000000c0013375                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00133f6                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013499                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00134cb      0x52a reg/registry.32
                0x00000000c00134cb                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c001363c                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013791                Reg::getLine(char*, char*, char*)
                0x00000000c00137c8                Reg::readInt(char*, char*, int*)
                0x00000000c00138b6                Reg::readString(char*, char*, char*, int)
                0x00000000c0013937                Reg::readBool(char*, char*, bool*)
                0x00000000c001395c                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013988                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00139b4                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00139f5       0x36 sys/eject.32
                0x00000000c00139f5                SysEject(regs*)
 .text          0x00000000c0013a2b       0x18 sys/exit.32
                0x00000000c0013a2b                SysExit(regs*)
 .text          0x00000000c0013a43       0x1f sys/getcwd.32
                0x00000000c0013a43                SysGetCwd(regs*)
 .text          0x00000000c0013a62        0xc sys/getpid.32
                0x00000000c0013a62                SysGetPID(regs*)
 .text          0x00000000c0013a6e       0x1a sys/getramdata.32
                0x00000000c0013a6e                SysGetRAMData(regs*)
 .text          0x00000000c0013a88       0x82 sys/getvgaptr.32
                0x00000000c0013a88                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013b0a        0x2 
 .text          0x00000000c0013b0c       0xb9 sys/kill.32
                0x00000000c0013b0c                SysKill(regs*)
 .text          0x00000000c0013bc5       0xa8 sys/loaddll.32
                0x00000000c0013bc5                SysLoadDLL(regs*)
 .text          0x00000000c0013c6d       0x68 sys/read.32
                0x00000000c0013c6d                SysRead(regs*)
 .text          0x00000000c0013cd5       0x29 sys/registersignal.32
                0x00000000c0013cd5                SysRegisterSignal(regs*)
 .text          0x00000000c0013cfe      0x19c sys/registry.32
                0x00000000c0013cfe                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013d75                SysRegistryReadExtent(regs*)
                0x00000000c0013dbd                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013de5                SysRegistryEnterDirectory(regs*)
                0x00000000c0013e0d                SysRegistryGetNext(regs*)
                0x00000000c0013e35                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013e6f                SysRegistryOpen(regs*)
                0x00000000c0013e83                SysRegistryClose(regs*)
 .text          0x00000000c0013e9a       0x55 sys/sbrk.32
                0x00000000c0013e9a                SysSbrk(regs*)
 .text          0x00000000c0013eef       0x1c sys/setcwd.32
                0x00000000c0013eef                SysSetCwd(regs*)
 .text          0x00000000c0013f0b       0x96 sys/settime.32
                0x00000000c0013f0b                SysSetTime(regs*)
 .text          0x00000000c0013fa1       0x4a sys/timezone.32
                0x00000000c0013fa1                SysTimezone(regs*)
 .text          0x00000000c0013feb       0xfc sys/truncate.32
                0x00000000c0013feb                SysTruncate(regs*)
 .text          0x00000000c00140e7       0x68 sys/write.32
                0x00000000c00140e7                SysWrite(regs*)
 .text          0x00000000c001414f       0x62 sys/wsbe.32
                0x00000000c001414f                SysWsbe(regs*)
 .text          0x00000000c00141b1       0x25 sys/yield.32
                0x00000000c00141b1                SysYield(regs*)
 .text          0x00000000c00141d6     0x11e6 thr/elf.32
                0x00000000c00141d6                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014464                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014676                Thr::runtimeReferenceHelper()
                0x00000000c0014689                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00146d8                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014996                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00150cf                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015101                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015138                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015152                Thr::loadDLL(char const*, bool)
                0x00000000c0015383                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00153bc     0x13d9 thr/prcssthr.32
                0x00000000c00153bc                userModeEntryPoint(void*)
                0x00000000c00153e4                changeTSS
                0x00000000c0015414                switchToThread(ThreadControlBlock*)
                0x00000000c00154c4                Process::addArgs(char**)
                0x00000000c0015530                Process::Process(char const*, Process*, char**)
                0x00000000c0015530                Process::Process(char const*, Process*, char**)
                0x00000000c001573c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001573c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015910                taskStartupFunction
                0x00000000c001591c                Semaphore::Semaphore(int)
                0x00000000c001591c                Semaphore::Semaphore(int)
                0x00000000c001594c                Mutex::Mutex()
                0x00000000c001594c                Mutex::Mutex()
                0x00000000c0015960                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015a6c                Process::createUserThread()
                0x00000000c0015a8c                setupMultitasking(void (*)())
                0x00000000c0015bb0                schedule()
                0x00000000c0015c44                Semaphore::tryAcquire()
                0x00000000c0015d18                Semaphore::assertLocked(char const*)
                0x00000000c0015d9c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015dc4                blockTask(TaskState)
                0x00000000c0015dfc                waitTask(int, int*, int)
                0x00000000c0015e40                milliTenthSleepUntil(unsigned int)
                0x00000000c0015ee0                milliTenthSleep(unsigned int)
                0x00000000c0015ef4                sleep(unsigned int)
                0x00000000c0015f10                Semaphore::acquire()
                0x00000000c0015fd8                taskReturned
                0x00000000c001601c                Thr::processFromPID(int)
                0x00000000c00160c8                unblockTask(ThreadControlBlock*)
                0x00000000c0016174                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016448                cleanerTaskFunction(void*)
                0x00000000c0016550                terminateTask(int)
                0x00000000c001663c                Thr::terminateFromIRQ(int)
                0x00000000c001664c                Semaphore::release()
 .text          0x00000000c0016795      0xc27 vm86/vm8086.32
                0x00000000c0016795                Vm::inbv(unsigned short)
                0x00000000c00167a8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00167de                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00167ee                Vm::getSegment(unsigned int)
                0x00000000c00167f6                Vm::getOffset(unsigned int)
                0x00000000c00167fb                Vm::mainloop2()
                0x00000000c0016835                Vm::mainVm8086Loop(void*)
                0x00000000c0016845                Vm::mainloop3(unsigned long)
                0x00000000c001686b                Vm::initialise8086()
                0x00000000c00168ae                Vm::finish8086()
                0x00000000c001690f                Vm::getOutput8086(unsigned char*)
                0x00000000c0016934                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00169ed                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016b8b                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016c24                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016c35                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016c47                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016c58                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016c6d                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016c83                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016c98                Vm::faultHandler(regs*)
 .text          0x00000000c00173bc      0xaf0 arch/i386/hal.32
                0x00000000c00173bc                noCopro(unsigned long)
                0x00000000c00173bd                nmiHandler(regs*, void*)
                0x00000000c00173d6                doubleFault(regs*, void*)
                0x00000000c00173ef                displayDebugInfo(regs*)
                0x00000000c0017774                HalSystemIdle()
                0x00000000c00177f0                displayProgramFault(char const*)
                0x00000000c001783c                gpFault(regs*, void*)
                0x00000000c00178a3                pgFault(regs*, void*)
                0x00000000c001792c                otherISRHandler(regs*, void*)
                0x00000000c0017960                opcodeFault(regs*, void*)
                0x00000000c00179e3                i386SaveCoprocessor(void*)
                0x00000000c00179f7                i386LoadCoprocessor(void*)
                0x00000000c0017a0b                x87EmulHandler(regs*, void*)
                0x00000000c0017aa8                HalInitialiseCoprocessor()
                0x00000000c0017b56                HalPanic(char const*)
                0x00000000c0017c6a                HalQueryPerformanceCounter()
                0x00000000c0017c85                HalInitialise()
                0x00000000c0017e3b                HalMakeBeep(int)
                0x00000000c0017e75                HalGetRand()
                0x00000000c0017e78                HalEndOfInterrupt(int)
                0x00000000c0017ea9                HalRestart()
                0x00000000c0017eaa                HalShutdown()
                0x00000000c0017eab                HalSleep()
 .text          0x00000000c0017eac      0x2dc arch/i386/pic.32
                0x00000000c0017eac                picIoWait()
                0x00000000c0017eb4                picDisable()
                0x00000000c0017ee8                picGetIRQReg(int)
                0x00000000c0017f64                picOpen()
                0x00000000c00180e8                picEOI(int)
 .text          0x00000000c0018188      0x674 arch/i386/rtc.32
                0x00000000c0018188                RTC::open(int, int, void*)
                0x00000000c001818c                RTC::close(int, int, void*)
                0x00000000c0018190                RTC::timeInSecondsUTC()
                0x00000000c00181a2                RTC::timeInDatetimeUTC()
                0x00000000c00181c8                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018206                RTC::~RTC()
                0x00000000c0018206                RTC::~RTC()
                0x00000000c001822a                RTC::~RTC()
                0x00000000c0018254                RTC::get_update_in_progress_flag()
                0x00000000c001826e                RTC::completeRTCRefresh()
                0x00000000c001854e                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00186fc                rtcIRQHandler(regs*, void*)
                0x00000000c0018742                RTC::RTC()
                0x00000000c0018742                RTC::RTC()
 .text          0x00000000c00187fc      0x1f4 arch/i386/vga.32
                0x00000000c00187fc                HalConsoleScroll(int, int)
                0x00000000c0018904                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018968                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c00189f0     0x14cf fs/fat/vfslink.32
                0x00000000c00189f0                FAT::getName()
                0x00000000c00189f8                FAT::tell(void*, unsigned long long*)
                0x00000000c0018a34                FAT::stat(void*, unsigned long long*)
                0x00000000c0018a70                FAT::~FAT()
                0x00000000c0018a70                FAT::~FAT()
                0x00000000c0018a94                FAT::~FAT()
                0x00000000c0018abc                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018b60                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018c24                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018e08                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019024                FAT::allocateSwapfile(char const*, int)
                0x00000000c00191e4                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019354                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00193b4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019414                FAT::close(void*)
                0x00000000c0019468                FAT::closeDir(void*)
                0x00000000c00194bc                FAT::truncate(void*, unsigned long long)
                0x00000000c0019528                FAT::seek(void*, unsigned long long)
                0x00000000c0019580                fatWrapperReadDisk
                0x00000000c00195c0                fatWrapperWriteDisk
                0x00000000c0019600                fatWrapperIoctl
                0x00000000c001971c                FAT::FAT()
                0x00000000c001971c                FAT::FAT()
                0x00000000c0019774                FAT::fixFilepath(char*)
                0x00000000c00197b4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019928                FAT::openDir(char const*, void**)
                0x00000000c00199d8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019ad0                FAT::unlink(char const*)
                0x00000000c0019b50                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019d04                FAT::rename(char const*, char const*)
                0x00000000c0019dd0                FAT::mkdir(char const*)
                0x00000000c0019e50                FAT::exists(char const*)
 *fill*         0x00000000c0019ebf        0x1 
 .text          0x00000000c0019ec0       0x94 fs/iso9660/helper.32
                0x00000000c0019ec0                isoReadDiscSectorHelper
                0x00000000c0019f1c                iso_kprintf
                0x00000000c0019f38                iso_kprintfd
 .text          0x00000000c0019f54      0x71c fs/iso9660/vfslink.32
                0x00000000c0019f54                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019f5a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c0019f60                ISO9660::getName()
                0x00000000c0019f66                ISO9660::closeDir(void*)
                0x00000000c0019f70                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019f76                ISO9660::unlink(char const*)
                0x00000000c0019f7c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019f82                ISO9660::rename(char const*, char const*)
                0x00000000c0019f88                ISO9660::mkdir(char const*)
                0x00000000c0019f8e                ISO9660::~ISO9660()
                0x00000000c0019f8e                ISO9660::~ISO9660()
                0x00000000c0019fb2                ISO9660::~ISO9660()
                0x00000000c0019fda                ISO9660::exists(char const*)
                0x00000000c0019fee                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a0d4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a11c                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a15e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a19c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a1ee                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a330                ISO9660::close(void*)
                0x00000000c001a360                ISO9660::openDir(char const*, void**)
                0x00000000c001a43a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a557                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a5d6                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a648                ISO9660::ISO9660()
                0x00000000c001a648                ISO9660::ISO9660()
 .text          0x00000000c001a670      0x26c hal/sound/sndcard.32
                0x00000000c001a670                SoundCard::beginPlayback()
                0x00000000c001a67e                SoundCard::stopPlayback()
                0x00000000c001a68c                SoundCard::SoundCard(char const*)
                0x00000000c001a68c                SoundCard::SoundCard(char const*)
                0x00000000c001a72a                SoundCard::~SoundCard()
                0x00000000c001a72a                SoundCard::~SoundCard()
                0x00000000c001a74e                SoundCard::~SoundCard()
                0x00000000c001a778                SoundCard::configureRates(int, int, int)
                0x00000000c001a7a8                SoundCard::getSamples16(int, short*)
                0x00000000c001a804                SoundCard::getSamples32(int, int*)
                0x00000000c001a88a                SoundCard::addChannel(SoundPort*)
                0x00000000c001a8c8                SoundCard::removeChannel(int)
 .text          0x00000000c001a8dc      0x38a hal/sound/sndport.32
                0x00000000c001a8dc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a8dc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a968                SoundPort::~SoundPort()
                0x00000000c001a968                SoundPort::~SoundPort()
                0x00000000c001a99c                SoundPort::unpause()
                0x00000000c001a9a8                SoundPort::pause()
                0x00000000c001a9b4                SoundPort::getBufferUsed()
                0x00000000c001a9bc                SoundPort::getBufferSize()
                0x00000000c001a9c4                SoundPort::buffer16(short*, int)
                0x00000000c001aa50                SoundPort::buffer32(int*, int)
                0x00000000c001aadc                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001aba8                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001ac66        0x0 hw/bus/isa.32
 .text          0x00000000c001ac66      0xbb7 hw/bus/pci.32
                0x00000000c001ac66                PCI::open(int, int, void*)
                0x00000000c001ac84                PCI::close(int, int, void*)
                0x00000000c001ac88                PCI::PCI()
                0x00000000c001ac88                PCI::PCI()
                0x00000000c001ad20                PCI::readBAR8(unsigned int, int)
                0x00000000c001ad3c                PCI::readBAR16(unsigned int, int)
                0x00000000c001ad5a                PCI::readBAR32(unsigned int, int)
                0x00000000c001ad76                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001ad96                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001adb8                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001add8                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ae4e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001aef8                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001af1c                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001af44                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001af8e                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001afb6                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001afda                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001affe                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b026                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b08a                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b172                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b438                PCI::checkBus(unsigned char)
                0x00000000c001b45c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b5d6                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b752                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b7c4                PCI::detect()
 *fill*         0x00000000c001b81d        0x1 
 .text          0x00000000c001b81e      0xb9a hw/diskctrl/ide.32
                0x00000000c001b81e                IDE::close(int, int, void*)
                0x00000000c001b822                IDE::IDE()
                0x00000000c001b822                IDE::IDE()
                0x00000000c001b856                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b868                selectDrive(unsigned char, unsigned char)
                0x00000000c001b86a                IDE::getBase(unsigned char)
                0x00000000c001b87c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b93c                IDE::read(unsigned char, unsigned char)
                0x00000000c001b9ea                IDE::waitInterrupt(unsigned char)
                0x00000000c001ba4c                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ba68                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ba84                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bace                IDE::open(int, int, void*)
                0x00000000c001bf0c                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001bfdc                IDE::detect()
                0x00000000c001c2aa                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c364                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c3b8      0x32a hw/diskctrl/satabus.32
                0x00000000c001c3b8                SATABus::close(int, int, void*)
                0x00000000c001c3bc                SATABus::detect()
                0x00000000c001c3be                SATABus::SATABus()
                0x00000000c001c3be                SATABus::SATABus()
                0x00000000c001c444                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c476                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c4be                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c4de                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c508                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c618                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c6c2                SATABus::open(int, int, void*)
 .text          0x00000000c001c6e2      0x93f hw/diskphys/ata.32
                0x00000000c001c6e2                ATA::close(int, int, void*)
                0x00000000c001c706                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c708                ATA::ATA()
                0x00000000c001c708                ATA::ATA()
                0x00000000c001c736                ATA::flush(bool)
                0x00000000c001c784                ATA::readyForCommand()
                0x00000000c001c7d0                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cb66                ATA::detectCHS()
                0x00000000c001cb90                ATA::open(int, int, void*)
                0x00000000c001cc5c                combineCharAndColour(char, unsigned char)
                0x00000000c001cc6d                combineColours(unsigned char, unsigned char)
                0x00000000c001cc7a                ATA::read(unsigned long long, int, void*)
                0x00000000c001ce50                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d021        0x1 
 .text          0x00000000c001d022      0x618 hw/diskphys/atapi.32
                0x00000000c001d022                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d028                ATAPI::close(int, int, void*)
                0x00000000c001d04c                ATAPI::ATAPI()
                0x00000000c001d04c                ATAPI::ATAPI()
                0x00000000c001d07a                ATAPI::readyForCommand()
                0x00000000c001d0cc                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d394                ATAPI::diskRemoved()
                0x00000000c001d3ce                ATAPI::eject()
                0x00000000c001d416                ATAPI::diskInserted()
                0x00000000c001d422                ATAPI::detectMedia()
                0x00000000c001d4e0                ATAPI::open(int, int, void*)
                0x00000000c001d5c0                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d63a      0x807 hw/diskphys/sata.32
                0x00000000c001d63a                SATA::close(int, int, void*)
                0x00000000c001d65e                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d660                SATA::open(int, int, void*)
                0x00000000c001d70a                SATA::SATA()
                0x00000000c001d70a                SATA::SATA()
                0x00000000c001d738                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d98c                SATA::read(unsigned long long, int, void*)
                0x00000000c001dbdc                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001de41        0x1 
 .text          0x00000000c001de42      0x5d0 hw/diskphys/satapi.32
                0x00000000c001de42                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001de48                SATAPI::close(int, int, void*)
                0x00000000c001de6c                SATAPI::SATAPI()
                0x00000000c001de6c                SATAPI::SATAPI()
                0x00000000c001de9a                SATAPI::diskRemoved()
                0x00000000c001de9c                SATAPI::diskInserted()
                0x00000000c001deb8                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e196                SATAPI::eject()
                0x00000000c001e1d2                SATAPI::detectMedia()
                0x00000000c001e228                SATAPI::open(int, int, void*)
                0x00000000c001e328                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e412      0x45b hw/intctrl/apic.32
                0x00000000c001e412                IOAPIC::close(int, int, void*)
                0x00000000c001e418                apicGetBase()
                0x00000000c001e45e                IOAPIC::IOAPIC()
                0x00000000c001e45e                IOAPIC::IOAPIC()
                0x00000000c001e486                apicOpen()
                0x00000000c001e602                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e634                IOAPIC::read(int)
                0x00000000c001e65c                IOAPIC::open(int, int, void*)
                0x00000000c001e742                IOAPIC::write(int, int)
                0x00000000c001e76e                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e86d        0x3 
 .text          0x00000000c001e870       0xf0 hw/timer/apictimer.32
                0x00000000c001e870                APICTimer::close(int, int, void*)
                0x00000000c001e878                apicTimerHandler(regs*, void*)
                0x00000000c001e8a0                APICTimer::open(int, int, void*)
                0x00000000c001e910                APICTimer::write(int)
                0x00000000c001e938                APICTimer::APICTimer()
                0x00000000c001e938                APICTimer::APICTimer()
 .text          0x00000000c001e960      0x1ad hw/timer/pit.32
                0x00000000c001e960                PIT::write(int)
                0x00000000c001e9e4                pitHandler(regs*, void*)
                0x00000000c001ea0c                PIT::open(int, int, void*)
                0x00000000c001ea5c                PIT::close(int, int, void*)
                0x00000000c001ea8c                PIT::PIT()
                0x00000000c001ea8c                PIT::PIT()
 *fill*         0x00000000c001eb0d        0x3 
 .text          0x00000000c001eb10       0x83 arch/i386/avx.32
                0x00000000c001eb10                avxDetect
                0x00000000c001eb3a                avxSave
                0x00000000c001eb4b                avxLoad
                0x00000000c001eb5c                avxInit
                0x00000000c001eb7e                avxClose
                0x00000000c001eb7f                wouldSheSayYes
 *fill*         0x00000000c001eb93        0xd 
 .text          0x00000000c001eba0      0x2ec arch/i386/interrupt.32
                0x00000000c001eba0                isr0
                0x00000000c001ebb0                isr1
                0x00000000c001ebba                isr2
                0x00000000c001ebc4                isr3
                0x00000000c001ebce                isr4
                0x00000000c001ebd8                isr5
                0x00000000c001ebe2                isr6
                0x00000000c001ebec                isr7
                0x00000000c001ebf6                isr8
                0x00000000c001ebfe                isr9
                0x00000000c001ec08                isr10
                0x00000000c001ec10                isr11
                0x00000000c001ec18                isr12
                0x00000000c001ec20                isr13
                0x00000000c001ec3a                isr14
                0x00000000c001ec42                isr15
                0x00000000c001ec4c                isr16
                0x00000000c001ec56                isr17
                0x00000000c001ec60                isr18
                0x00000000c001ec6a                irq3
                0x00000000c001ec74                irq4
                0x00000000c001ec7e                irq5
                0x00000000c001ec88                irq6
                0x00000000c001ec92                irq7
                0x00000000c001ec9c                irq8
                0x00000000c001eca6                irq9
                0x00000000c001ecb0                irq10
                0x00000000c001ecba                irq11
                0x00000000c001ecc4                irq12
                0x00000000c001ecce                irq13
                0x00000000c001ecd8                irq14
                0x00000000c001ece2                irq15
                0x00000000c001ecec                irq1
                0x00000000c001ecf3                irq2
                0x00000000c001ecfa                isr96
                0x00000000c001ed01                irq0
                0x00000000c001ed06                int_common_stub
                0x00000000c001ed38                syscall_common_stub
                0x00000000c001ee3c                irq16
                0x00000000c001ee46                irq17
                0x00000000c001ee50                irq18
                0x00000000c001ee5a                irq19
                0x00000000c001ee64                irq20
                0x00000000c001ee6e                irq21
                0x00000000c001ee78                irq22
                0x00000000c001ee82                irq23
 *fill*         0x00000000c001ee8c        0x4 
 .text          0x00000000c001ee90       0x10 arch/i386/rdrand.32
                0x00000000c001ee90                i386GetRDRAND
 .text          0x00000000c001eea0       0x39 arch/i386/sse.32
                0x00000000c001eea0                absolutelyNoChanceInHell
                0x00000000c001eea0                sseDetect
                0x00000000c001eeb8                sseSave
                0x00000000c001eec0                sseLoad
                0x00000000c001eec8                sseInit
                0x00000000c001eed8                sseClose
 *fill*         0x00000000c001eed9        0x7 
 .text          0x00000000c001eee0       0x49 arch/i386/x87.32
                0x00000000c001eee6                x87Detect
                0x00000000c001ef01                x87Save
                0x00000000c001ef08                x87Load
                0x00000000c001ef0f                x87Init
                0x00000000c001ef28                x87Close
 *fill*         0x00000000c001ef29        0x3 
 .text          0x00000000c001ef2c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001ef51        0x0 crtn.32
 *fill*         0x00000000c001ef51        0x3 
 .text          0x00000000c001ef54      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001ef54                __divdi3
 *fill*         0x00000000c001f09f        0x1 
 .text          0x00000000c001f0a0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f0a0                __moddi3
 *fill*         0x00000000c001f21e        0x2 
 .text          0x00000000c001f220       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f220                __udivdi3
 *fill*         0x00000000c001f31f        0x1 
 .text          0x00000000c001f320      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f320                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f440        0x0
 .iplt          0x00000000c001f440        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f43a        0xf
 .init          0x00000000c001f43a        0x3 crti.32
                0x00000000c001f43a                _init
 .init          0x00000000c001f43d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f442        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f447        0x2 crtn.32

.fini           0x00000000c001f449        0xa
 .fini          0x00000000c001f449        0x3 crti.32
                0x00000000c001f449                _fini
 .fini          0x00000000c001f44c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f451        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f454       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f454       0x23 core/computer.32
                0x00000000c001f454                Computer::~Computer()
                0x00000000c001f454                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f478       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f478       0x2a core/computer.32
                0x00000000c001f478                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f4a2       0x21
 .text._Z10idleCommonv
                0x00000000c001f4a2       0x21 core/idle.32
                0x00000000c001f4a2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f4c4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f4c4        0x2 core/unixfile.32
                0x00000000c001f4c4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f4c4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f4c6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f4c6       0x42 core/unixfile.32
                0x00000000c001f4c6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f4c6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f508       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f508       0xd3 core/unixfile.32
                0x00000000c001f508                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f5dc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f5dc        0x7 core/unixfile.32
                0x00000000c001f5dc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f5e4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f5e4       0xa1 core/unixfile.32
                0x00000000c001f5e4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f686        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f686        0x8 core/unixfile.32
                0x00000000c001f686                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f68e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f68e       0x1a hal/device.32
                0x00000000c001f68e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f68e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f6a8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f6a8       0x2a hal/device.32
                0x00000000c001f6a8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f6d2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f6d2       0xdc hal/device.32
                0x00000000c001f6d2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f7ae       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f7ae       0x42 hal/device.32
                0x00000000c001f7ae                LinkedList<Device>::LinkedList()
                0x00000000c001f7ae                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f7f0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f7f0       0x1c hal/timer.32
                0x00000000c001f7f0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f80c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f80c        0x7 hal/timer.32
                0x00000000c001f80c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f814       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f814       0xbc hal/timer.32
                0x00000000c001f814                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f8d0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f8d0       0xda hal/timer.32
                0x00000000c001f8d0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f9ac       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f9ac       0x23 hw/acpi.32
                0x00000000c001f9ac                ACPI::~ACPI()
                0x00000000c001f9ac                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f9d0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f9d0       0x2a hw/acpi.32
                0x00000000c001f9d0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f9fc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f9fc        0x2 hw/acpi.32
                0x00000000c001f9fc                LinkedList<Device>::~LinkedList()
                0x00000000c001f9fc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fa00       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fa00       0x1c hw/acpi.32
                0x00000000c001fa00                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fa1c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fa1c        0x7 hw/acpi.32
                0x00000000c001fa1c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fa24       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fa24       0xb8 hw/acpi.32
                0x00000000c001fa24                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001fadc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fadc       0x23 hw/cpu.32
                0x00000000c001fadc                CPU::~CPU()
                0x00000000c001fadc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fb00       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fb00       0x2a hw/cpu.32
                0x00000000c001fb00                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fb2c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fb2c        0x8 sys/kill.32
                0x00000000c001fb2c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fb34        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fb34        0x2 thr/prcssthr.32
                0x00000000c001fb34                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fb34                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fb38       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fb38       0x49 thr/prcssthr.32
                0x00000000c001fb38                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fb38                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fb84       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fb84       0x42 thr/prcssthr.32
                0x00000000c001fb84                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fb84                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fbc6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fbc6       0x23 hw/bus/pci.32
                0x00000000c001fbc6                PCI::~PCI()
                0x00000000c001fbc6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fbea       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fbea       0x2a hw/bus/pci.32
                0x00000000c001fbea                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fc14       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fc14       0x23 hw/diskctrl/ide.32
                0x00000000c001fc14                IDE::~IDE()
                0x00000000c001fc14                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fc38       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fc38       0x2a hw/diskctrl/ide.32
                0x00000000c001fc38                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001fc62       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001fc62       0x23 hw/diskctrl/satabus.32
                0x00000000c001fc62                SATABus::~SATABus()
                0x00000000c001fc62                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001fc86       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001fc86       0x2a hw/diskctrl/satabus.32
                0x00000000c001fc86                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001fcb0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fcb0       0x23 hw/diskphys/ata.32
                0x00000000c001fcb0                ATA::~ATA()
                0x00000000c001fcb0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fcd4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fcd4       0x2a hw/diskphys/ata.32
                0x00000000c001fcd4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fcfe       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fcfe       0x23 hw/diskphys/atapi.32
                0x00000000c001fcfe                ATAPI::~ATAPI()
                0x00000000c001fcfe                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fd22       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fd22       0x2a hw/diskphys/atapi.32
                0x00000000c001fd22                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001fd4c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001fd4c       0x23 hw/diskphys/sata.32
                0x00000000c001fd4c                SATA::~SATA()
                0x00000000c001fd4c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001fd70       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001fd70       0x2a hw/diskphys/sata.32
                0x00000000c001fd70                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001fd9a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001fd9a       0x23 hw/diskphys/satapi.32
                0x00000000c001fd9a                SATAPI::~SATAPI()
                0x00000000c001fd9a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001fdbe       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001fdbe       0x2a hw/diskphys/satapi.32
                0x00000000c001fdbe                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001fde8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001fde8       0x23 hw/intctrl/apic.32
                0x00000000c001fde8                IOAPIC::~IOAPIC()
                0x00000000c001fde8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001fe0c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001fe0c       0x2a hw/intctrl/apic.32
                0x00000000c001fe0c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001fe38       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001fe38       0x23 hw/timer/apictimer.32
                0x00000000c001fe38                APICTimer::~APICTimer()
                0x00000000c001fe38                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001fe5c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001fe5c       0x2a hw/timer/apictimer.32
                0x00000000c001fe5c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001fe88       0x23
 .text._ZN3PITD2Ev
                0x00000000c001fe88       0x23 hw/timer/pit.32
                0x00000000c001fe88                PIT::~PIT()
                0x00000000c001fe88                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001feac       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001feac       0x2a hw/timer/pit.32
                0x00000000c001feac                PIT::~PIT()

.rodata         0x00000000c001fed6     0x315a
                0x00000000c001fed6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001fed6        0x2 
 .ctors         0x00000000c001fed8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001fedc        0x4 core/unixfile.32
 .ctors         0x00000000c001fee0        0x4 thr/prcssthr.32
 .ctors         0x00000000c001fee4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fee8                end_ctors = .
                0x00000000c001fee8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001fee8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001feec        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001feec                __DTOR_END__
                0x00000000c001fef0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001fef0       0x10 
 .rodata        0x00000000c001ff00      0x101 acpica/utclib.32
                0x00000000c001ff00                AcpiGbl_Ctypes
 *fill*         0x00000000c0020001        0x3 
 .rodata        0x00000000c0020004       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002001c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020066       0x1a 
 .rodata        0x00000000c0020080       0xed fs/fat/ff.32
 *fill*         0x00000000c002016d       0x13 
 .rodata        0x00000000c0020180      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020580       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c00205ef      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020704       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c002076c       0x2c core/computer.32
                0x00000000c002076c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020798       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00207c8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00207d4       0x17 core/main.32
 *fill*         0x00000000c00207eb        0x1 
 .rodata.str1.4
                0x00000000c00207ec       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020891       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c00208e9       0x39 core/pipe.32
 *fill*         0x00000000c0020922        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020924       0x1c core/pipe.32
                0x00000000c0020924                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020940       0x2b core/terminal.32
 *fill*         0x00000000c002096b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c002096c       0x1c core/terminal.32
                0x00000000c002096c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020988       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00209aa       0x15 core/unixfile.32
 *fill*         0x00000000c00209bf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00209c0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020a0b        0x8 core/unixfile.32
 *fill*         0x00000000c0020a13        0x1 
 .rodata.str1.4
                0x00000000c0020a14       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020a34       0x1c core/unixfile.32
                0x00000000c0020a34                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020a50       0x1c core/unixfile.32
                0x00000000c0020a50                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020a6c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020d00      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020e26       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0020e59       0x11 dbg/kconsole.32
 *fill*         0x00000000c0020e59        0x3 
 .rodata        0x00000000c0020e5c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020fac      0x169 dbg/usban.32
 *fill*         0x00000000c0021115        0x3 
 .rodata.str1.4
                0x00000000c0021118      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002124f      0x120 fs/symlink.32
                                        0x12c (size before relaxing)
 .rodata.str1.1
                0x00000000c002136f      0x120 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c002136f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021370       0x6c fs/vfs.32
                0x00000000c0021370                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00213dc       0x1c fs/vfs.32
                0x00000000c00213dc                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00213f8       0x1c fs/vfs.32
                0x00000000c00213f8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021414       0x2c hal/bus.32
                0x00000000c0021414                vtable for Bus
 .rodata.str1.1
                0x00000000c0021440       0x1e hal/clock.32
 *fill*         0x00000000c002145e        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021460       0x3c hal/clock.32
                0x00000000c0021460                vtable for Clock
 *fill*         0x00000000c002149c        0x4 
 .rodata        0x00000000c00214a0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00214d0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021528       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021528       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021528       0x2c hal/device.32
                0x00000000c0021528                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021554       0x2c hal/device.32
                0x00000000c0021554                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021580       0x2c hal/diskctrl.32
                0x00000000c0021580                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00215ac       0x38 hal/diskphys.32
                0x00000000c00215ac                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00215e4       0x3e hal/intctrl.32
 *fill*         0x00000000c0021622        0x2 
 .rodata.str1.4
                0x00000000c0021624       0x5d hal/intctrl.32
 .rodata        0x00000000c0021681       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c00216d4       0x34 hal/keybrd.32
                0x00000000c00216d4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021708       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002174c       0x2c hal/logidisk.32
                0x00000000c002174c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021778       0x2c hal/mouse.32
                0x00000000c0021778                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c00217a4       0x34 hal/nic.32
                0x00000000c00217a4                vtable for NIC
 .rodata.str1.1
                0x00000000c00217d8        0xb hal/partition.32
 *fill*         0x00000000c00217e3        0x1 
 .rodata._ZTV6Serial
                0x00000000c00217e4       0x44 hal/serial.32
                0x00000000c00217e4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021828       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021828        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021828       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021828       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021828       0x30 hal/timer.32
                0x00000000c0021828                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021858       0x10 hal/vcache.32
                0x00000000c0021858                vtable for VCache
 .rodata.str1.1
                0x00000000c0021868       0x93 hal/video.32
 *fill*         0x00000000c00218fb        0x1 
 .rodata._ZTV5Video
                0x00000000c00218fc       0x4c hal/video.32
                0x00000000c00218fc                vtable for Video
 .rodata.str1.4
                0x00000000c0021948       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c00219e3      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021b39       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021b39        0x8 hw/acpi.32
 *fill*         0x00000000c0021b39        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021b3c       0x2c hw/acpi.32
                0x00000000c0021b3c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021b68      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0021ce3        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021ce4       0x2c hw/cpu.32
                0x00000000c0021ce4                vtable for CPU
 .rodata.str1.1
                0x00000000c0021d10       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021d50       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021d8c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0021e1d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0021ee6       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021f2e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0021f59       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0021fcf       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022014        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002201e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002203f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c00220d5       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022129       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022155      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022321       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022378      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022488       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022488       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022488       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022488        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022488       0xc2 vm86/vm8086.32
 *fill*         0x00000000c002254a        0x2 
 .rodata        0x00000000c002254c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002257c      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c002271b        0x1 
 .rodata.str1.4
                0x00000000c002271c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002278f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c00227a4       0x3c arch/i386/rtc.32
                0x00000000c00227a4                vtable for RTC
 .rodata.str1.1
                0x00000000c00227e0       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022821        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022824       0x6c fs/fat/vfslink.32
                0x00000000c0022824                vtable for FAT
 .rodata.str1.1
                0x00000000c0022890       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022890      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00229c8       0x6c fs/iso9660/vfslink.32
                0x00000000c00229c8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022a34       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022a78       0x34 hal/sound/sndcard.32
                0x00000000c0022a78                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022aac       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022aeb       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022b23       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022bc4       0x2c hw/bus/pci.32
                0x00000000c0022bc4                vtable for PCI
 .rodata.str1.1
                0x00000000c0022bf0       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022c77        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022c78       0x2c hw/diskctrl/ide.32
                0x00000000c0022c78                vtable for IDE
 .rodata.str1.4
                0x00000000c0022ca4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022cc8       0x2c hw/diskctrl/satabus.32
                0x00000000c0022cc8                vtable for SATABus
 .rodata.str1.1
                0x00000000c0022cf4       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0022d06        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022d08       0x38 hw/diskphys/ata.32
                0x00000000c0022d08                vtable for ATA
 .rodata.str1.1
                0x00000000c0022d40        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022d4d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0022d50       0x38 hw/diskphys/atapi.32
                0x00000000c0022d50                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022d88       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0022e04       0x38 hw/diskphys/sata.32
                0x00000000c0022e04                vtable for SATA
 .rodata.str1.1
                0x00000000c0022e3c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0022f26        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0022f28       0x38 hw/diskphys/satapi.32
                0x00000000c0022f28                vtable for SATAPI
 .rodata        0x00000000c0022f60        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0022f68       0x2c hw/intctrl/apic.32
                0x00000000c0022f68                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0022f94       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0022faf        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0022fb0       0x30 hw/timer/apictimer.32
                0x00000000c0022fb0                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0022fe0       0x1d hw/timer/pit.32
 *fill*         0x00000000c0022ffd        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023000       0x30 hw/timer/pit.32
                0x00000000c0023000                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023030      0x7b1
 *(.data)
 .data          0x00000000c0023030        0x0 crti.32
 .data          0x00000000c0023030        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023030                __dso_handle
 .data          0x00000000c0023034        0x0 acpica/utclib.32
 .data          0x00000000c0023034        0x0 core/malloc.32
 .data          0x00000000c0023034        0x0 libk/ctype.32
 .data          0x00000000c0023034        0x0 libk/string.32
 .data          0x00000000c0023034        0x0 fs/fat/diskio.32
 .data          0x00000000c0023034        0x0 fs/fat/ff.32
 .data          0x00000000c0023034        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023034        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023034        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023034        0x0 core/computer.32
 .data          0x00000000c0023034        0x0 core/gdt.32
 .data          0x00000000c0023034        0x0 core/idle.32
 .data          0x00000000c0023034        0x0 core/idt.32
 .data          0x00000000c0023034        0x4 core/kheap.32
 .data          0x00000000c0023038        0x0 core/main.32
 .data          0x00000000c0023038        0x4 core/physmgr.32
                0x00000000c0023038                Phys::bitmap
 .data          0x00000000c002303c        0x0 core/pipe.32
 *fill*         0x00000000c002303c        0x4 
 .data          0x00000000c0023040       0x60 core/terminal.32
                0x00000000c0023040                VgaText::hiddenOut
                0x00000000c0023060                ansiToVGAMappings
 .data          0x00000000c00230a0        0x0 core/tss.32
 .data          0x00000000c00230a0        0x4 core/unixfile.32
                0x00000000c00230a0                UnixFile::nextFd
 .data          0x00000000c00230a4       0x15 core/virtmgr.32
                0x00000000c00230a4                Virt::pageAllocPtr
                0x00000000c00230a8                Virt::bitmap
                0x00000000c00230ac                Virt::swapfileSectorsPerPage
                0x00000000c00230b0                Virt::swapfileLength
                0x00000000c00230b4                Virt::swapfileSector
                0x00000000c00230b8                Virt::swapfileDrive
 *fill*         0x00000000c00230b9        0x3 
 .data          0x00000000c00230bc        0x4 coreobjs/c++.32
                0x00000000c00230bc                __stack_chk_guard
 .data          0x00000000c00230c0        0x0 dbg/kconsole.32
 .data          0x00000000c00230c0       0x28 dbg/usban.32
                0x00000000c00230c0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00230e8        0x0 fs/symlink.32
 .data          0x00000000c00230e8        0x0 fs/vfs.32
 .data          0x00000000c00230e8        0x0 hal/bus.32
 .data          0x00000000c00230e8        0x0 hal/buzzer.32
 .data          0x00000000c00230e8        0x0 hal/clock.32
 .data          0x00000000c00230e8        0x0 hal/device.32
 .data          0x00000000c00230e8        0x0 hal/diskctrl.32
 .data          0x00000000c00230e8        0x0 hal/diskphys.32
 .data          0x00000000c00230e8        0x0 hal/fpu.32
 .data          0x00000000c00230e8        0x0 hal/intctrl.32
 .data          0x00000000c00230e8        0x0 hal/keybrd.32
 .data          0x00000000c00230e8        0x0 hal/logidisk.32
 .data          0x00000000c00230e8        0x0 hal/mouse.32
 .data          0x00000000c00230e8        0x0 hal/nic.32
 .data          0x00000000c00230e8        0x0 hal/partition.32
 .data          0x00000000c00230e8        0x0 hal/serial.32
 .data          0x00000000c00230e8        0x0 hal/timer.32
 .data          0x00000000c00230e8        0x0 hal/vcache.32
 .data          0x00000000c00230e8        0x0 hal/video.32
 .data          0x00000000c00230e8       0x10 hw/acpi.32
                0x00000000c00230e8                legacyIRQRemaps
 .data          0x00000000c00230f8        0x4 hw/cpu.32
                0x00000000c00230f8                lastCode
 .data          0x00000000c00230fc        0x0 krnl/atexit.32
 *fill*         0x00000000c00230fc        0x4 
 .data          0x00000000c0023100      0x142 krnl/bootmsg.32
                0x00000000c0023100                KiSplashScreen
 .data          0x00000000c0023242        0x0 krnl/compat.32
 *fill*         0x00000000c0023242       0x1e 
 .data          0x00000000c0023260       0x4d krnl/env.32
                0x00000000c0023260                defaultSysEnv
 .data          0x00000000c00232ad        0x0 krnl/inlines.32
 .data          0x00000000c00232ad        0x0 krnl/panic.32
 .data          0x00000000c00232ad        0x0 krnl/powctrl.32
 .data          0x00000000c00232ad        0x0 krnl/random.32
 .data          0x00000000c00232ad        0x0 krnl/resolve.32
 *fill*         0x00000000c00232ad       0x13 
 .data          0x00000000c00232c0       0x4c krnl/signal.32
                0x00000000c00232c0                KiDefaultSignalHandlers
 *fill*         0x00000000c002330c       0x14 
 .data          0x00000000c0023320       0xf0 krnl/syscalls.32
                0x00000000c0023320                systemCallHandlers
 .data          0x00000000c0023410        0x0 net/ethernet.32
 *fill*         0x00000000c0023410       0x10 
 .data          0x00000000c0023420      0x100 reg/cm.32
                0x00000000c0023420                CmComponents
 .data          0x00000000c0023520        0x0 reg/registry.32
 .data          0x00000000c0023520        0x0 sys/eject.32
 .data          0x00000000c0023520        0x0 sys/exit.32
 .data          0x00000000c0023520        0x0 sys/getcwd.32
 .data          0x00000000c0023520        0x0 sys/getpid.32
 .data          0x00000000c0023520        0x0 sys/getramdata.32
 .data          0x00000000c0023520        0x0 sys/getvgaptr.32
 .data          0x00000000c0023520        0x0 sys/kill.32
 .data          0x00000000c0023520        0x0 sys/loaddll.32
 .data          0x00000000c0023520        0x0 sys/read.32
 .data          0x00000000c0023520        0x0 sys/registersignal.32
 .data          0x00000000c0023520        0x0 sys/registry.32
 .data          0x00000000c0023520        0x0 sys/sbrk.32
 .data          0x00000000c0023520        0x0 sys/setcwd.32
 .data          0x00000000c0023520        0x0 sys/settime.32
 .data          0x00000000c0023520        0x0 sys/timezone.32
 .data          0x00000000c0023520        0x0 sys/truncate.32
 .data          0x00000000c0023520        0x0 sys/write.32
 .data          0x00000000c0023520        0x0 sys/wsbe.32
 .data          0x00000000c0023520        0x0 sys/yield.32
 .data          0x00000000c0023520        0x0 thr/elf.32
 .data          0x00000000c0023520        0x4 thr/prcssthr.32
                0x00000000c0023520                Thr::nextPID
 .data          0x00000000c0023524        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023524       0x1c 
 .data          0x00000000c0023540      0x2a0 arch/i386/hal.32
                0x00000000c0023540                exceptionNames
 .data          0x00000000c00237e0        0x0 arch/i386/pic.32
 .data          0x00000000c00237e0        0x0 arch/i386/rtc.32
 .data          0x00000000c00237e0        0x0 arch/i386/vga.32
 .data          0x00000000c00237e0        0x0 fs/fat/vfslink.32
 .data          0x00000000c00237e0        0x0 fs/iso9660/helper.32
 .data          0x00000000c00237e0        0x1 fs/iso9660/vfslink.32
                0x00000000c00237e0                recentDriveletter
 .data          0x00000000c00237e1        0x0 hal/sound/sndcard.32
 .data          0x00000000c00237e1        0x0 hal/sound/sndport.32
 .data          0x00000000c00237e1        0x0 hw/bus/isa.32
 .data          0x00000000c00237e1        0x0 hw/bus/pci.32
 .data          0x00000000c00237e1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00237e1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00237e1        0x0 hw/diskphys/ata.32
 .data          0x00000000c00237e1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00237e1        0x0 hw/diskphys/sata.32
 .data          0x00000000c00237e1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00237e1        0x0 hw/intctrl/apic.32
 .data          0x00000000c00237e1        0x0 hw/timer/apictimer.32
 .data          0x00000000c00237e1        0x0 hw/timer/pit.32
 .data          0x00000000c00237e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00237e1        0x0 crtn.32
 .data          0x00000000c00237e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00237e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00237e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00237e1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00237e4        0x0
 .got           0x00000000c00237e4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00237e4        0x0
 .got.plt       0x00000000c00237e4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00237e4        0x0
 .igot.plt      0x00000000c00237e4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00237e4        0x0
 .tm_clone_table
                0x00000000c00237e4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00237e4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00237e1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00237e1        0x3 
 .eh_frame      0x00000000c00237e4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00237e4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00237e4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002383c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002387c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00238e8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x5107
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0025fb4        0xc 
 .bss           0x00000000c0025fc0      0x444 fs/symlink.32
                0x00000000c0025fc0                KiNumWaitingRoomSymlinks
                0x00000000c0025fe0                KiNewlyCreatedIDs
                0x00000000c0026000                KiNewlyCreatedSymlinks
                0x00000000c0026400                KiBaseSymlinkID
 .bss           0x00000000c0026404        0x4 fs/vfs.32
                0x00000000c0026404                installedFilesystems
 .bss           0x00000000c0026408        0x0 hal/bus.32
 .bss           0x00000000c0026408        0x0 hal/buzzer.32
 .bss           0x00000000c0026408        0x8 hal/clock.32
                0x00000000c0026408                User::dstOn
                0x00000000c0026409                User::timezoneHalfHourOffset
                0x00000000c002640c                User::timezoneHourOffset
 .bss           0x00000000c0026410        0x0 hal/device.32
 .bss           0x00000000c0026410        0x0 hal/diskctrl.32
 .bss           0x00000000c0026410        0x0 hal/diskphys.32
 .bss           0x00000000c0026410        0x0 hal/fpu.32
 *fill*         0x00000000c0026410       0x10 
 .bss           0x00000000c0026420     0x2000 hal/intctrl.32
                0x00000000c0026420                INT_contexts
                0x00000000c0027420                INT_handlers
 .bss           0x00000000c0028420      0x429 hal/keybrd.32
                0x00000000c0028420                keyboardWaitingTaskList
                0x00000000c0028424                keyboardSetupYet
                0x00000000c0028428                guiKeyboardHandler
                0x00000000c0028440                keystates
 *fill*         0x00000000c0028849       0x17 
 .bss           0x00000000c0028860       0x88 hal/logidisk.32
                0x00000000c0028860                diskAssignments
                0x00000000c0028880                disks
 .bss           0x00000000c00288e8        0x4 hal/mouse.32
                0x00000000c00288e8                guiMouseHandler
 .bss           0x00000000c00288ec        0x0 hal/nic.32
 .bss           0x00000000c00288ec        0x0 hal/partition.32
 .bss           0x00000000c00288ec        0x0 hal/serial.32
 .bss           0x00000000c00288ec        0x4 hal/timer.32
                0x00000000c00288ec                milliTenthsSinceBoot
 .bss           0x00000000c00288f0        0x0 hal/vcache.32
 .bss           0x00000000c00288f0        0x4 hal/video.32
                0x00000000c00288f0                screen
 *fill*         0x00000000c00288f4        0xc 
 .bss           0x00000000c0028900      0x480 hw/acpi.32
                0x00000000c0028900                systemSleepFunction
                0x00000000c0028904                systemResetFunction
                0x00000000c0028908                systemShutdownFunction
                0x00000000c002890c                nextACPITable
                0x00000000c0028920                acpiTables
                0x00000000c0028b20                usingXSDT
                0x00000000c0028b24                MADTpointer
                0x00000000c0028b28                RSDTpointer
                0x00000000c0028b2c                RSDPpointer
                0x00000000c0028b30                nextAPICNMI
                0x00000000c0028b40                apicNMIInfo
                0x00000000c0028bc0                legacyIRQFlags
                0x00000000c0028be0                ioapicDiscoveryNumber
                0x00000000c0028c00                ioapicFoundInMADT
                0x00000000c0028c20                ioapicAddresses
                0x00000000c0028ca0                ioapicGSIBase
                0x00000000c0028d20                processorDiscoveryNumber
                0x00000000c0028d40                matchingAPICID
                0x00000000c0028d60                processorID
 .bss           0x00000000c0028d80       0x10 hw/cpu.32
                0x00000000c0028d80                lastD
                0x00000000c0028d84                lastC
                0x00000000c0028d88                lastB
                0x00000000c0028d8c                lastA
 *fill*         0x00000000c0028d90       0x10 
 .bss           0x00000000c0028da0       0xe0 krnl/atexit.32
                0x00000000c0028da0                KiNextAtexitHandler
                0x00000000c0028dc0                KiAtexitContexts
                0x00000000c0028e20                KiAtexitHandlers
 .bss           0x00000000c0028e80        0x0 krnl/bootmsg.32
 .bss           0x00000000c0028e80        0x0 krnl/compat.32
 .bss           0x00000000c0028e80        0x8 krnl/env.32
                0x00000000c0028e80                KeUserEnv
                0x00000000c0028e84                KeSystemEnv
 .bss           0x00000000c0028e88        0x0 krnl/inlines.32
 .bss           0x00000000c0028e88        0x1 krnl/panic.32
                0x00000000c0028e88                KeIsKernelInPanic
 *fill*         0x00000000c0028e89       0x17 
 .bss           0x00000000c0028ea0       0x48 krnl/powctrl.32
                0x00000000c0028ea0                powCtrlOnBattery
                0x00000000c0028ec0                currentPowerSettings
                0x00000000c0028ee4                secondsSinceLastUserIO
 .bss           0x00000000c0028ee8        0x8 krnl/random.32
                0x00000000c0028ee8                kiRandSeed
 .bss           0x00000000c0028ef0        0x0 krnl/resolve.32
 .bss           0x00000000c0028ef0        0x0 krnl/signal.32
 .bss           0x00000000c0028ef0        0x0 krnl/syscalls.32
 .bss           0x00000000c0028ef0        0x0 net/ethernet.32
 .bss           0x00000000c0028ef0        0x4 reg/cm.32
 .bss           0x00000000c0028ef4        0x0 reg/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/eject.32
 .bss           0x00000000c0028ef4        0x0 sys/exit.32
 .bss           0x00000000c0028ef4        0x0 sys/getcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/getpid.32
 .bss           0x00000000c0028ef4        0x0 sys/getramdata.32
 .bss           0x00000000c0028ef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c0028ef4        0x0 sys/kill.32
 .bss           0x00000000c0028ef4        0x0 sys/loaddll.32
 .bss           0x00000000c0028ef4        0x0 sys/read.32
 .bss           0x00000000c0028ef4        0x0 sys/registersignal.32
 .bss           0x00000000c0028ef4        0x0 sys/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/sbrk.32
 .bss           0x00000000c0028ef4        0x0 sys/setcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/settime.32
 .bss           0x00000000c0028ef4        0x0 sys/timezone.32
 .bss           0x00000000c0028ef4        0x0 sys/truncate.32
 .bss           0x00000000c0028ef4        0x0 sys/write.32
 .bss           0x00000000c0028ef4        0x0 sys/wsbe.32
 .bss           0x00000000c0028ef4        0x0 sys/yield.32
 *fill*         0x00000000c0028ef4        0xc 
 .bss           0x00000000c0028f00      0x7a4 thr/elf.32
                0x00000000c0028f00                Thr::driverLookupNext
                0x00000000c0028f20                Thr::driverLookupLen
                0x00000000c0029120                Thr::driverLookupAddr
                0x00000000c0029320                Thr::driverNameLookup
                0x00000000c0029520                Thr::kernelSymbols
                0x00000000c00295a0                Thr::kernelStringTable
                0x00000000c0029620                Thr::kernelSymbolTable
                0x00000000c00296a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00296a4        0x4 
 .bss           0x00000000c00296a8       0x68 thr/prcssthr.32
                0x00000000c00296a8                cleanerThread
                0x00000000c00296ac                weNeedTheCleanerToNotBlock
                0x00000000c00296b0                retValLockStuff
                0x00000000c00296b4                retValSchedLock
                0x00000000c00296b8                lockStuffLock
                0x00000000c00296bc                schedulerLock
                0x00000000c00296c0                taskSwitchesPostponedFlag
                0x00000000c00296c4                postponeTaskSwitchesCounter
                0x00000000c00296c8                irqDisableCounter
                0x00000000c00296cc                terminatedTaskList
                0x00000000c00296d8                sleepingTaskList
                0x00000000c00296e4                taskList
                0x00000000c00296f0                kernelProcess
 *fill*         0x00000000c0029710       0x10 
 .bss           0x00000000c0029720       0x40 vm86/vm8086.32
                0x00000000c0029720                Vm::vmRetV
                0x00000000c0029724                Vm::vmDone
                0x00000000c0029725                Vm::vmReady
                0x00000000c0029728                Vm::vm86Thread
                0x00000000c002972c                Vm::vmToHostCommsPtr
                0x00000000c0029740                Vm::vmToHostComms
 .bss           0x00000000c0029760       0x18 arch/i386/hal.32
                0x00000000c0029760                apic
                0x00000000c0029764                guiPanicHandler
                0x00000000c0029768                fpuOwner
                0x00000000c002976c                coproLoadFunc
                0x00000000c0029770                coproSaveFunc
                0x00000000c0029774                gpFaultIntercept
 .bss           0x00000000c0029778        0x0 arch/i386/pic.32
 .bss           0x00000000c0029778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002977a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002977a        0x6 
 .bss           0x00000000c0029780       0xf0 fs/fat/vfslink.32
                0x00000000c0029780                FAT::fats
                0x00000000c00297a0                FAT::vfsToFatRemaps
                0x00000000c0029820                fatToVFSRemaps
 .bss           0x00000000c0029870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0029870       0x10 
 .bss           0x00000000c0029880      0x820 fs/iso9660/vfslink.32
                0x00000000c0029880                iso9660Owner
                0x00000000c0029884                recentSector
                0x00000000c00298a0                recentBuffer
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002a0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002a0a0        0xd hw/bus/pci.32
                0x00000000c002a0a0                thePCI
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002a0ad        0x3 
 .bss           0x00000000c002a0b0        0x8 hw/diskphys/ata.32
                0x00000000c002a0b0                ataSectorsWritten
                0x00000000c002a0b4                ataSectorsRead
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002a0b8        0x8 
 .bss           0x00000000c002a0c0       0x41 hw/intctrl/apic.32
                0x00000000c002a0c0                noOfIOAPICs
                0x00000000c002a0e0                ioapics
                0x00000000c002a100                IOAPICsSetupYet
 .bss           0x00000000c002a101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002a101        0x3 
 .bss           0x00000000c002a104        0x4 hw/timer/pit.32
                0x00000000c002a104                pitFreq
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002a108        0x0 crtn.32
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002a108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002f20f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
