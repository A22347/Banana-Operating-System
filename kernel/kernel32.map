Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

cdDriveLetter       0x1               fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1bdba
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 *fill*         0x00000000c0001afb        0x1 
 .text          0x00000000c0001afc      0x1f2 libk/ctype.32
                0x00000000c0001afc                isblank
                0x00000000c0001b1c                iscntrl
                0x00000000c0001b3c                isdigit
                0x00000000c0001b58                islower
                0x00000000c0001b74                isspace
                0x00000000c0001b9c                isupper
                0x00000000c0001bb8                isalpha
                0x00000000c0001be8                isalnum
                0x00000000c0001c18                ispunct
                0x00000000c0001c58                isgraph
                0x00000000c0001c88                isprint
                0x00000000c0001cb0                isxdigit
 .text          0x00000000c0001cee        0x0 libk/string.32
 .text          0x00000000c0001cee       0x51 fs/fat/diskio.32
                0x00000000c0001cee                disk_status
                0x00000000c0001cf1                disk_initialize
                0x00000000c0001cf4                disk_read
                0x00000000c0001d0a                disk_write
                0x00000000c0001d20                disk_ioctl
 .text          0x00000000c0001d3f     0x3d4b fs/fat/ff.32
                0x00000000c0003adb                f_mount
                0x00000000c0003b3d                f_open
                0x00000000c0003e08                f_read
                0x00000000c0004007                f_write
                0x00000000c000423b                f_sync
                0x00000000c00042f0                f_close
                0x00000000c000431f                f_lseek
                0x00000000c00044c6                f_opendir
                0x00000000c0004591                f_closedir
                0x00000000c00045b3                f_readdir
                0x00000000c0004645                f_stat
                0x00000000c00046c4                f_getfree
                0x00000000c00047c6                f_truncate
                0x00000000c00048aa                f_unlink
                0x00000000c00049cc                f_mkdir
                0x00000000c0004b67                f_rename
                0x00000000c0004d1d                f_chmod
                0x00000000c0004dc6                f_utime
                0x00000000c0004e74                f_getlabel
                0x00000000c0004fc5                f_setlabel
                0x00000000c0005155                f_expand
                0x00000000c00052b5                f_mkfs
 *fill*         0x00000000c0005a8a        0x2 
 .text          0x00000000c0005a8c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a8c                ff_memalloc
                0x00000000c0005aa4                ff_memfree
 *fill*         0x00000000c0005abb        0x1 
 .text          0x00000000c0005abc      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005abc                ff_uni2oem
                0x00000000c0005b5c                ff_oem2uni
                0x00000000c0005bd4                ff_wtoupper
 .text          0x00000000c0005d64      0xc88 fs/iso9660/iso9660.32
                0x00000000c0005f81                isoReadDiscSector
                0x00000000c000601c                strnicmp
                0x00000000c00062cf                stricmp
                0x00000000c000631b                iso_open
                0x00000000c000639d                iso_close
                0x00000000c00063b7                iso_read
                0x00000000c00064cd                iso_seek
                0x00000000c0006551                iso_tell
                0x00000000c0006582                iso_total
                0x00000000c00065ad                fn_postprocess
                0x00000000c00065ea                iso_readdir
                0x00000000c00067db                iso_reset
                0x00000000c00067e8                init_percd
                0x00000000c00068e2                iso_ioctl
                0x00000000c00068ea                fs_iso9660_init
                0x00000000c000697c                fs_iso9660_shutdown
 .text          0x00000000c00069ec       0x94 compat/inlines.32
                0x00000000c00069ec                CPU::current()
                0x00000000c00069f8                operator new(unsigned long)
                0x00000000c00069fd                operator delete(void*)
                0x00000000c0006a02                disableIRQs()
                0x00000000c0006a04                enableIRQs()
                0x00000000c0006a06                lockScheduler()
                0x00000000c0006a0e                unlockScheduler()
                0x00000000c0006a1d                lockStuff()
                0x00000000c0006a2b                unlockStuff()
                0x00000000c0006a65                Virt::getAKernelVAS()
                0x00000000c0006a6b                __not_memcpy
 .text          0x00000000c0006a80      0x118 compat/resolve.32
                0x00000000c0006a80                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0006b98      0x68b core/computer.32
                0x00000000c0006b98                Computer::close(int, int, void*)
                0x00000000c0006bdd                Krnl::firstTask()
                0x00000000c0006d16                Computer::Computer()
                0x00000000c0006d16                Computer::Computer()
                0x00000000c0006dc8                Computer::setBootMessage(char const*)
                0x00000000c0006dca                Computer::detectFeatures()
                0x00000000c0006fd4                Computer::displayFeatures()
                0x00000000c0006fd6                Computer::rdmsr(unsigned int)
                0x00000000c0007002                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000703a                Computer::shutdown()
                0x00000000c0007052                Computer::restart()
                0x00000000c000706a                Computer::sleep()
                0x00000000c000707e                Computer::nmiEnabled()
                0x00000000c000708a                Computer::readCMOS(unsigned char)
                0x00000000c00070a4                Computer::enableNMI(bool)
                0x00000000c00070bc                Computer::open(int, int, void*)
                0x00000000c0007190                Computer::disableNMI()
                0x00000000c00071a0                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00071be                Computer::handleNMI()
 *fill*         0x00000000c0007223        0x1 
 .text          0x00000000c0007224      0x1cf core/gdt.32
                0x00000000c0007224                GDTEntry::setBase(unsigned int)
                0x00000000c0007240                GDTEntry::setLimit(unsigned int)
                0x00000000c000725e                GDT::GDT()
                0x00000000c000725e                GDT::GDT()
                0x00000000c0007274                GDT::addEntry(GDTEntry)
                0x00000000c0007296                GDT::getNumberOfEntries()
                0x00000000c000729e                GDT::flush()
                0x00000000c00072c0                GDT::setup()
 .text          0x00000000c00073f3       0x19 core/idle.32
                0x00000000c00073f3                idleFunction(void*)
 .text          0x00000000c000740c      0x464 core/idt.32
                0x00000000c000740c                IDTEntry::IDTEntry(bool)
                0x00000000c000740c                IDTEntry::IDTEntry(bool)
                0x00000000c000747e                IDTEntry::setOffset(unsigned int)
                0x00000000c0007494                IDT::IDT()
                0x00000000c0007494                IDT::IDT()
                0x00000000c0007496                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000749e                IDT::addEntry(IDTEntry, int)
                0x00000000c00074b8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00074f0                IDT::flush()
                0x00000000c000750a                IDT::setup()
 .text          0x00000000c0007870      0x183 core/kheap.32
                0x00000000c0007870                sbrk
                0x00000000c0007905                mmap
                0x00000000c000791b                munmap
                0x00000000c0007931                liballoc_lock()
                0x00000000c000793e                liballoc_unlock()
                0x00000000c0007952                liballoc_alloc(int)
                0x00000000c000796a                liballoc_free(void*, int)
                0x00000000c0007985                realloc
                0x00000000c0007999                malloc
                0x00000000c00079a9                free
                0x00000000c00079b9                rfree
                0x00000000c00079c9                calloc
 .text          0x00000000c00079f3      0x1b4 core/main.32
                0x00000000c00079f3                Krnl::setBootMessage(char const*)
                0x00000000c0007a5f                kernel_main
 .text          0x00000000c0007ba7      0x5dc core/physmgr.32
                0x00000000c0007ba7                Phys::allocateDMA(unsigned long)
                0x00000000c0007c7e                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cb1                Phys::setPageState(unsigned long, bool)
                0x00000000c0007ce3                Phys::getPageState(unsigned long)
                0x00000000c0007d04                Phys::freePage(unsigned long)
                0x00000000c0007d66                Phys::allocatePage()
                0x00000000c0007e24                Phys::allocateContiguousPages(int)
                0x00000000c0007e80                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007eb8                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008183        0x1 
 .text          0x00000000c0008184      0x273 core/pipe.32
                0x00000000c0008184                Pipe::isAtty()
                0x00000000c0008188                Pipe::~Pipe()
                0x00000000c0008188                Pipe::~Pipe()
                0x00000000c00081ac                Pipe::~Pipe()
                0x00000000c00081d4                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008294                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008390                Pipe::Pipe(int)
                0x00000000c0008390                Pipe::Pipe(int)
 *fill*         0x00000000c00083f7        0x1 
 .text          0x00000000c00083f8      0xa1e core/terminal.32
                0x00000000c00083f8                VgaText::isAtty()
                0x00000000c00083fc                VgaText::~VgaText()
                0x00000000c00083fc                VgaText::~VgaText()
                0x00000000c0008420                VgaText::~VgaText()
                0x00000000c000844a                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000846a                setTerminalScrollLock(bool)
                0x00000000c000846b                doTerminalCycle()
                0x00000000c000846c                addToTerminalCycle(VgaText*)
                0x00000000c000846d                scrollTerminalScrollLock(int)
                0x00000000c000846e                VgaText::updateTitle()
                0x00000000c0008470                VgaText::load()
                0x00000000c0008472                VgaText::updateCursor()
                0x00000000c0008488                VgaText::doANSI_SGR(int)
                0x00000000c00084fc                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000850c                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000851c                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000853c                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008548                VgaText::setTitleColour(VgaColour)
                0x00000000c0008554                VgaText::setTitle(char*)
                0x00000000c0008556                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008568                VgaText::scrollScreen()
                0x00000000c0008600                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008612                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00086a2                VgaText::getCursorX()
                0x00000000c00086aa                VgaText::getCursorY()
                0x00000000c00086b2                VgaText::setCursor(int, int)
                0x00000000c00086c9                setActiveTerminal(VgaText*)
                0x00000000c0008714                VgaText::clearScreen()
                0x00000000c0008762                VgaText::setCursorX(int)
                0x00000000c000877a                VgaText::setCursorY(int)
                0x00000000c0008792                VgaText::incrementCursor(bool)
                0x00000000c00087e6                VgaText::decrementCursor(bool)
                0x00000000c0008808                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00088d6                VgaText::putchar(char)
                0x00000000c00089c2                VgaText::putx(unsigned int)
                0x00000000c0008a08                VgaText::puts(char const*)
                0x00000000c0008a2e                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008a7a                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008bcc                VgaText::VgaText(char const*)
                0x00000000c0008bcc                VgaText::VgaText(char const*)
                0x00000000c0008d18                VgaText::receiveKey(unsigned char)
                0x00000000c0008df0                VgaText::doUpdate()
                0x00000000c0008df1                newTerminal(char*)
 *fill*         0x00000000c0008e16        0x2 
 .text          0x00000000c0008e18      0x1a1 core/tss.32
                0x00000000c0008e18                TSS::TSS()
                0x00000000c0008e18                TSS::TSS()
                0x00000000c0008e28                TSS::setESP(unsigned long)
                0x00000000c0008e3c                TSS::flush()
                0x00000000c0008e5c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008fb9        0x1 
 .text          0x00000000c0008fba      0x4c2 core/unixfile.32
                0x00000000c0008fba                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009010                ReservedFilename::isAtty()
                0x00000000c000902c                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000908a                UnixFile::getFileDescriptor()
                0x00000000c0009092                UnixFile::UnixFile(int)
                0x00000000c0009092                UnixFile::UnixFile(int)
                0x00000000c0009242                ReservedFilename::ReservedFilename(int)
                0x00000000c0009242                ReservedFilename::ReservedFilename(int)
                0x00000000c0009274                UnixFile::~UnixFile()
                0x00000000c0009274                UnixFile::~UnixFile()
                0x00000000c000930c                UnixFile::~UnixFile()
                0x00000000c0009334                ReservedFilename::~ReservedFilename()
                0x00000000c0009334                ReservedFilename::~ReservedFilename()
                0x00000000c0009358                ReservedFilename::~ReservedFilename()
                0x00000000c000937f                getFromFileDescriptor(int)
 .text          0x00000000c000947c     0x1166 core/virtmgr.32
                0x00000000c000947c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00094b1                Virt::getPageState(unsigned long)
                0x00000000c00094d5                Virt::allocateKernelVirtualPages(int)
                0x00000000c00095e6                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009604                Virt::swapIDToSector(unsigned long)
                0x00000000c0009616                Virt::allocateSwapfilePage()
                0x00000000c0009694                Virt::virtualMemorySetup()
                0x00000000c00096df                Virt::setupPageSwapping(int)
                0x00000000c0009750                VAS::VAS()
                0x00000000c0009750                VAS::VAS()
                0x00000000c000978c                VAS::VAS(VAS*)
                0x00000000c000978c                VAS::VAS(VAS*)
                0x00000000c00097ba                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00097e6                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009805                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000992a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000994e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009968                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c00099a8                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00099dc                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009a06                VAS::~VAS()
                0x00000000c0009a06                VAS::~VAS()
                0x00000000c0009b6a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009c6e                VAS::allocatePages(int, int)
                0x00000000c0009e46                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009e64                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f2a                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a018                VAS::VAS(bool)
                0x00000000c000a018                VAS::VAS(bool)
                0x00000000c000a298                VAS::evict(unsigned long)
                0x00000000c000a35a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a448                VAS::scanForEviction()
                0x00000000c000a528                mapVASFirstTime
 .text          0x00000000c000a5e2       0x5f coreobjs/c++.32
                0x00000000c000a5e2                __cxa_atexit
                0x00000000c000a5e5                __cxa_finalize
                0x00000000c000a5e6                __stack_chk_fail
                0x00000000c000a61c                __cxa_pure_virtual
                0x00000000c000a62d                operator new[](unsigned long)
                0x00000000c000a632                operator delete(void*, unsigned long)
                0x00000000c000a637                operator delete[](void*)
                0x00000000c000a63c                operator delete[](void*, unsigned long)
 .text          0x00000000c000a641      0x21c dbg/kconsole.32
                0x00000000c000a641                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a6ac                Dbg::logc(char)
                0x00000000c000a6cc                Dbg::logs(char*)
                0x00000000c000a6e9                Dbg::logWriteInt(unsigned int)
                0x00000000c000a707                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a728                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a85d        0x1 
 .text          0x00000000c000a85e      0xc5c fs/vfs.32
                0x00000000c000a85e                File::read(unsigned long long, void*, int*)
                0x00000000c000a8b6                File::write(unsigned long long, void*, int*)
                0x00000000c000a90e                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a966                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a994                File::isAtty()
                0x00000000c000a998                Directory::isAtty()
                0x00000000c000a99c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a9a2                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a9a8                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a9ae                File::~File()
                0x00000000c000a9ae                File::~File()
                0x00000000c000a9d2                File::~File()
                0x00000000c000a9fc                Directory::~Directory()
                0x00000000c000a9fc                Directory::~Directory()
                0x00000000c000aa20                Directory::~Directory()
                0x00000000c000aa4a                Filesystem::Filesystem()
                0x00000000c000aa4a                Filesystem::Filesystem()
                0x00000000c000aa6e                Filesystem::~Filesystem()
                0x00000000c000aa6e                Filesystem::~Filesystem()
                0x00000000c000aa7c                Filesystem::~Filesystem()
                0x00000000c000aaa0                Fs::getcwd(Process*, char*, int)
                0x00000000c000aaca                Fs::initVFS()
                0x00000000c000aaf4                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000ac9e                File::File(char const*, Process*)
                0x00000000c000ac9e                File::File(char const*, Process*)
                0x00000000c000ad5e                File::open(FileOpenMode)
                0x00000000c000adbc                File::close()
                0x00000000c000ae1c                File::seek(unsigned long long)
                0x00000000c000ae72                File::tell(unsigned long long*)
                0x00000000c000aec2                File::rewind()
                0x00000000c000aed6                File::unlink()
                0x00000000c000af22                File::rename(char const*)
                0x00000000c000af70                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000afcc                File::exists()
                0x00000000c000b00a                File::stat(unsigned long long*, bool*)
                0x00000000c000b06b                Fs::setcwd(Process*, char*)
                0x00000000c000b1c8                Directory::Directory(char const*, Process*)
                0x00000000c000b1c8                Directory::Directory(char const*, Process*)
                0x00000000c000b288                Directory::open()
                0x00000000c000b2e4                Directory::close()
                0x00000000c000b344                Directory::unlink()
                0x00000000c000b390                Directory::rename(char const*)
                0x00000000c000b3de                Directory::exists()
                0x00000000c000b41c                Directory::read(dirent*)
                0x00000000c000b468                Directory::create()
                0x00000000c000b4b4                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b4ba        0x2 
 .text          0x00000000c000b4bc       0x86 hal/bus.32
                0x00000000c000b4bc                Bus::Bus(char const*)
                0x00000000c000b4bc                Bus::Bus(char const*)
                0x00000000c000b4f4                Bus::~Bus()
                0x00000000c000b4f4                Bus::~Bus()
                0x00000000c000b518                Bus::~Bus()
 .text          0x00000000c000b542       0x96 hal/buzzer.32
                0x00000000c000b542                beepThread(void*)
                0x00000000c000b57f                Krnl::beep(int, int, bool)
 .text          0x00000000c000b5d8      0x46d hal/clock.32
                0x00000000c000b5d8                User::loadClockSettings(int)
                0x00000000c000b62a                Clock::Clock(char const*)
                0x00000000c000b62a                Clock::Clock(char const*)
                0x00000000c000b660                Clock::~Clock()
                0x00000000c000b660                Clock::~Clock()
                0x00000000c000b684                Clock::~Clock()
                0x00000000c000b6ae                Clock::timeInSecondsLocal()
                0x00000000c000b6f6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b74f                datetimeToSeconds(datetime_t)
                0x00000000c000b87c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b8dc                secondsToDatetime(unsigned long long)
                0x00000000c000ba20                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000ba45        0x1 
 .text          0x00000000c000ba46      0x464 hal/device.32
                0x00000000c000ba46                Device::hibernate()
                0x00000000c000ba48                Device::wake()
                0x00000000c000ba4a                Device::detect()
                0x00000000c000ba4c                Device::disableLegacy()
                0x00000000c000ba4e                Device::powerSaving(PowerSavingLevel)
                0x00000000c000ba50                DriverlessDevice::close(int, int, void*)
                0x00000000c000ba54                DriverlessDevice::detect()
                0x00000000c000ba56                DriverlessDevice::open(int, int, void*)
                0x00000000c000ba6a                Device::~Device()
                0x00000000c000ba6a                Device::~Device()
                0x00000000c000ba78                Device::~Device()
                0x00000000c000baa0                Device::findAndLoadDriver()
                0x00000000c000baae                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bad4                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bb14                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bb3e                Device::getParent()
                0x00000000c000bb4a                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000bb68                Device::addChild(Device*)
                0x00000000c000bbac                Device::removeAllChildren()
                0x00000000c000bbf2                Device::hibernateAll()
                0x00000000c000bc22                Device::wakeAll()
                0x00000000c000bc52                Device::detectAll()
                0x00000000c000bc82                Device::disableLegacyAll()
                0x00000000c000bc84                Device::loadDriversForAll()
                0x00000000c000bc86                Device::closeAll()
                0x00000000c000bcbc                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bcf2                Device::setName(char const*)
                0x00000000c000bd00                Device::Device(char const*)
                0x00000000c000bd00                Device::Device(char const*)
                0x00000000c000bdfc                Device::getName()
                0x00000000c000be06                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000be06                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000be3c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000be80                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000beaa        0x2 
 .text          0x00000000c000beac       0x86 hal/diskctrl.32
                0x00000000c000beac                HardDiskController::HardDiskController(char const*)
                0x00000000c000beac                HardDiskController::HardDiskController(char const*)
                0x00000000c000bee4                HardDiskController::~HardDiskController()
                0x00000000c000bee4                HardDiskController::~HardDiskController()
                0x00000000c000bf08                HardDiskController::~HardDiskController()
 .text          0x00000000c000bf32       0xe2 hal/diskphys.32
                0x00000000c000bf32                PhysicalDisk::eject()
                0x00000000c000bf36                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bf36                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bf9e                PhysicalDisk::startCache()
                0x00000000c000bfc6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bfc6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bfea                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c014        0x0 hal/fpu.32
 .text          0x00000000c000c014      0x35d hal/intctrl.32
                0x00000000c000c014                int_handler
                0x00000000c000c09c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c0e4                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c21c                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c250                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c2cf                setupINTS()
                0x00000000c000c32c                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c371        0x1 
 .text          0x00000000c000c372      0x78c hal/keybrd.32
                0x00000000c000c372                startGUI(void*)
                0x00000000c000c3de                startGUIVESA(void*)
                0x00000000c000c44a                sendKeyToTerminal(unsigned char)
                0x00000000c000c50d                sendKeyboardToken(KeyboardToken)
                0x00000000c000c94d                clearInternalKeybuffer(VgaText*)
                0x00000000c000c982                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000ca74                Keyboard::Keyboard(char const*)
                0x00000000c000ca74                Keyboard::Keyboard(char const*)
                0x00000000c000cab0                Keyboard::~Keyboard()
                0x00000000c000cab0                Keyboard::~Keyboard()
                0x00000000c000cad4                Keyboard::~Keyboard()
 .text          0x00000000c000cafe      0x3ea hal/logidisk.32
                0x00000000c000cafe                LogicalDisk::close(int, int, void*)
                0x00000000c000cb02                LogicalDisk::~LogicalDisk()
                0x00000000c000cb02                LogicalDisk::~LogicalDisk()
                0x00000000c000cb26                LogicalDisk::~LogicalDisk()
                0x00000000c000cb50                LogicalDisk::open(int, int, void*)
                0x00000000c000cb64                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cb9c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cbe2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cbe2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cc98                LogicalDisk::assignDriveLetter()
                0x00000000c000cd4e                LogicalDisk::mount()
                0x00000000c000cd96                LogicalDisk::unmount()
                0x00000000c000cda6                LogicalDisk::eject()
                0x00000000c000cdba                LogicalDisk::unassignDriveLetter()
                0x00000000c000ce10                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ce7c                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000cee8       0x86 hal/mouse.32
                0x00000000c000cee8                Mouse::Mouse(char const*)
                0x00000000c000cee8                Mouse::Mouse(char const*)
                0x00000000c000cf20                Mouse::~Mouse()
                0x00000000c000cf20                Mouse::~Mouse()
                0x00000000c000cf44                Mouse::~Mouse()
 .text          0x00000000c000cf6e      0x339 hal/partition.32
                0x00000000c000cf6e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d016                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d2a7        0x1 
 .text          0x00000000c000d2a8       0x86 hal/serial.32
                0x00000000c000d2a8                Serial::Serial(char const*)
                0x00000000c000d2a8                Serial::Serial(char const*)
                0x00000000c000d2e0                Serial::~Serial()
                0x00000000c000d2e0                Serial::~Serial()
                0x00000000c000d304                Serial::~Serial()
 *fill*         0x00000000c000d32e        0x2 
 .text          0x00000000c000d330      0x234 hal/timer.32
                0x00000000c000d330                Timer::Timer(char const*)
                0x00000000c000d330                Timer::Timer(char const*)
                0x00000000c000d368                Timer::~Timer()
                0x00000000c000d368                Timer::~Timer()
                0x00000000c000d38c                Timer::~Timer()
                0x00000000c000d3b6                Timer::read()
                0x00000000c000d3c1                setupTimer(int)
                0x00000000c000d3fc                timerHandler(unsigned int)
 .text          0x00000000c000d564      0x43e hal/vcache.32
                0x00000000c000d564                VCache::VCache(PhysicalDisk*)
                0x00000000c000d564                VCache::VCache(PhysicalDisk*)
                0x00000000c000d6cc                VCache::invalidateReadBuffer()
                0x00000000c000d6dc                VCache::writeWriteBuffer()
                0x00000000c000d728                VCache::~VCache()
                0x00000000c000d728                VCache::~VCache()
                0x00000000c000d77c                VCache::~VCache()
                0x00000000c000d7a4                VCache::write(unsigned long long, int, void*)
                0x00000000c000d89e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d9a2      0x4b3 hal/video.32
                0x00000000c000d9a2                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d9ee                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000da5e                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000dadc                Video::clearScreen(unsigned int)
                0x00000000c000db10                Video::putpixel(int, int, unsigned int)
                0x00000000c000db1e                Video::Video(char const*)
                0x00000000c000db1e                Video::Video(char const*)
                0x00000000c000db54                Video::~Video()
                0x00000000c000db54                Video::~Video()
                0x00000000c000db78                Video::~Video()
                0x00000000c000dba2                Video::isMonochrome()
                0x00000000c000dbae                Video::getWidth()
                0x00000000c000dbba                Video::getHeight()
                0x00000000c000dbc6                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000dc82                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ddea                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000de55        0x3 
 .text          0x00000000c000de58     0x1307 hw/acpi.32
                0x00000000c000de58                ACPI::close(int, int, void*)
                0x00000000c000df10                findRSDP()
                0x00000000c000dfa0                loadACPITables(unsigned char*)
                0x00000000c000e204                findRSDT(unsigned char*)
                0x00000000c000e354                findDataTable(unsigned char*, char*)
                0x00000000c000e3cc                scanMADT()
                0x00000000c000e8a0                ACPI::ACPI()
                0x00000000c000e8a0                ACPI::ACPI()
                0x00000000c000e8f4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e9dc                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000eaa4                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000eaac                ACPI::detectPCI()
                0x00000000c000ecb4                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ed08                ACPI::sleep()
                0x00000000c000ed24                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f15f        0x1 
 .text          0x00000000c000f160      0xb95 hw/cpu.32
                0x00000000c000f160                CPU::close(int, int, void*)
                0x00000000c000f164                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f180                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f198                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f20c                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f290                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f2be                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f2ec                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f31a                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f348                CPU::CPU()
                0x00000000c000f348                CPU::CPU()
                0x00000000c000f3d6                CPU::displayFeatures()
                0x00000000c000f3d8                CPU::detectFeatures()
                0x00000000c000fa9c                CPU::setupSMEP()
                0x00000000c000faa8                CPU::setupUMIP()
                0x00000000c000fab2                CPU::setupTSC()
                0x00000000c000fabc                CPU::setupLargePages()
                0x00000000c000fac6                CPU::setupPAT()
                0x00000000c000fb02                CPU::setupMTRR()
                0x00000000c000fb04                CPU::setupGlobalPages()
                0x00000000c000fb0e                CPU::allowUsermodeDataAccess()
                0x00000000c000fb20                CPU::prohibitUsermodeDataAccess()
                0x00000000c000fb32                CPU::setupSMAP()
                0x00000000c000fb40                CPU::setupFeatures()
                0x00000000c000fc0c                CPU::open(int, int, void*)
 *fill*         0x00000000c000fcf5        0x1 
 .text          0x00000000c000fcf6      0x581 krnl/env.32
                0x00000000c000fcf6                EnvVarContainer::getEnv(char const*)
                0x00000000c000fd34                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000fdf6                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000fdf8                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000ffde                EnvVarContainer::__loadSystem()
                0x00000000c000fff8                EnvVarContainer::__loadUser()
                0x00000000c000fffa                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fffa                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001001c                EnvVarContainer::~EnvVarContainer()
                0x00000000c001001c                EnvVarContainer::~EnvVarContainer()
                0x00000000c001004c                Krnl::getEnv(Process*, char const*)
                0x00000000c00100b1                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00100cb                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00100ea                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00100fd                Krnl::deleteEnvSystem(char const*)
                0x00000000c00100fe                Krnl::deleteEnvUser(char const*)
                0x00000000c00100ff                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0010100                Krnl::newProcessEnv(Process*)
                0x00000000c0010122                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c001016e                Krnl::loadSystemEnv()
                0x00000000c001019c                Krnl::loadUserEnv()
                0x00000000c00101c2                Krnl::flushEnv()
                0x00000000c00101c3                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00101e3                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0010277      0x108 krnl/panic.32
                0x00000000c0010277                Krnl::panic(char const*)
 .text          0x00000000c001037f      0x142 krnl/powctrl.32
                0x00000000c001037f                Krnl::powerThread(void*)
                0x00000000c00103ad                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c00103c3                Krnl::userIOReceived()
                0x00000000c00103ce                Krnl::handlePowerButton()
                0x00000000c0010403                Krnl::handleSleepButton()
                0x00000000c0010438                Krnl::setupPowerManager()
 .text          0x00000000c00104c1      0x50e reg/registry.32
                0x00000000c00104c1                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0010619                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001076e                Reg::getLine(char*, char*, char*)
                0x00000000c00107a5                Reg::readInt(char*, char*, int*)
                0x00000000c0010890                Reg::readString(char*, char*, char*, int)
                0x00000000c0010911                Reg::readBool(char*, char*, bool*)
                0x00000000c0010936                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0010962                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001098e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00109cf       0x36 sys/sc_eject.32
                0x00000000c00109cf                Sys::eject(regs*)
 .text          0x00000000c0010a05       0x18 sys/sc_exit.32
                0x00000000c0010a05                Sys::exit(regs*)
 .text          0x00000000c0010a1d       0x1f sys/sc_getcwd.32
                0x00000000c0010a1d                Sys::getCwd(regs*)
 .text          0x00000000c0010a3c        0xc sys/sc_getpid.32
                0x00000000c0010a3c                Sys::getPID(regs*)
 .text          0x00000000c0010a48       0x1a sys/sc_getramdata.32
                0x00000000c0010a48                Sys::getRAMData(regs*)
 .text          0x00000000c0010a62       0x82 sys/sc_getvgaptr.32
                0x00000000c0010a62                Sys::getVGAPtr(regs*)
 .text          0x00000000c0010ae4       0xa8 sys/sc_loaddll.32
                0x00000000c0010ae4                Sys::loadDLL(regs*)
 .text          0x00000000c0010b8c       0x68 sys/sc_read.32
                0x00000000c0010b8c                Sys::read(regs*)
 .text          0x00000000c0010bf4       0x55 sys/sc_sbrk.32
                0x00000000c0010bf4                Sys::sbrk(regs*)
 .text          0x00000000c0010c49       0x1c sys/sc_setcwd.32
                0x00000000c0010c49                Sys::setCwd(regs*)
 .text          0x00000000c0010c65       0x95 sys/sc_settime.32
                0x00000000c0010c65                Sys::setTime(regs*)
 .text          0x00000000c0010cfa       0x4a sys/sc_timezone.32
                0x00000000c0010cfa                Sys::timezone(regs*)
 .text          0x00000000c0010d44       0x68 sys/sc_write.32
                0x00000000c0010d44                Sys::write(regs*)
 .text          0x00000000c0010dac       0x62 sys/sc_wsbe.32
                0x00000000c0010dac                Sys::wsbe(regs*)
 .text          0x00000000c0010e0e       0x25 sys/sc_yield.32
                0x00000000c0010e0e                Sys::yield(regs*)
 .text          0x00000000c0010e33      0xe2c sys/syscalls.32
                0x00000000c0010e33                sysCallSeekDir(regs*)
                0x00000000c0010e38                sysCallTellDir(regs*)
                0x00000000c0010e3d                sysCallVerify(regs*)
                0x00000000c0010e47                sysCallGetArgc(regs*)
                0x00000000c0010e57                sysCallTTYName(regs*)
                0x00000000c0010e5f                sysFormatDisk(regs*)
                0x00000000c0010ecc                sysSetDiskVolumeLabel(regs*)
                0x00000000c0010f16                sysGetDiskVolumeLabel(regs*)
                0x00000000c0010f6b                sysShutdown(regs*)
                0x00000000c0010fc9                sysCallRealpath(regs*)
                0x00000000c001100c                sysCallReadDir(regs*)
                0x00000000c001108c                sysCallIsATTY(regs*)
                0x00000000c00110e8                sysCallSeek(regs*)
                0x00000000c0011141                sysCallTell(regs*)
                0x00000000c00111b0                sysCallSize(regs*)
                0x00000000c0011225                sysCallSizeFromFilename(regs*)
                0x00000000c00112d8                sysCallClose(regs*)
                0x00000000c0011338                sysCallOpenDir(regs*)
                0x00000000c00113af                sysCallCloseDir(regs*)
                0x00000000c0011403                sysCallMakeDir(regs*)
                0x00000000c0011475                sysCallWait(regs*)
                0x00000000c0011492                sysCallNotImpl(regs*)
                0x00000000c00114ad                sysPanic(regs*)
                0x00000000c00114c8                sysCallRmdir(regs*)
                0x00000000c001152f                sysCallUnlink(regs*)
                0x00000000c0011596                sysCallGetArgv(regs*)
                0x00000000c00115e3                sysCallUSleep(regs*)
                0x00000000c001160c                sysCallSpawn(regs*)
                0x00000000c0011675                sysCallGetEnv(regs*)
                0x00000000c0011724                sysSetFatAttrib(regs*)
                0x00000000c001179b                sysPipe(regs*)
                0x00000000c00117e0                sysGetUnixTime(regs*)
                0x00000000c00117f4                string_ends_with(char const*, char const*)
                0x00000000c001183e                sysCallOpen(regs*)
                0x00000000c0011a32                Sys::loadSyscalls()
                0x00000000c0011c1d                Sys::systemCall(regs*, void*)
 .text          0x00000000c0011c5f     0x11e5 thr/elf.32
                0x00000000c0011c5f                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0011eeb                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0012101                Thr::runtimeReferenceHelper()
                0x00000000c0012114                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0012163                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0012421                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012b57                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012b89                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012bc0                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012bda                Thr::loadDLL(char const*, bool)
                0x00000000c0012e0b                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0012e44     0x12c5 thr/prcssthr.32
                0x00000000c0012e44                userModeEntryPoint(void*)
                0x00000000c0012e6c                changeTSS
                0x00000000c0012e9c                switchToThread(ThreadControlBlock*)
                0x00000000c0012f50                Process::addArgs(char**)
                0x00000000c0012fb0                Process::Process(char const*, Process*, char**)
                0x00000000c0012fb0                Process::Process(char const*, Process*, char**)
                0x00000000c00131a0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00131a0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001335c                taskStartupFunction
                0x00000000c0013368                Semaphore::Semaphore(int)
                0x00000000c0013368                Semaphore::Semaphore(int)
                0x00000000c0013398                Mutex::Mutex()
                0x00000000c0013398                Mutex::Mutex()
                0x00000000c00133ac                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00134a4                Process::createUserThread()
                0x00000000c00134c4                setupMultitasking(void (*)())
                0x00000000c00135cc                schedule()
                0x00000000c001365c                Semaphore::tryAcquire()
                0x00000000c0013728                Semaphore::assertLocked(char const*)
                0x00000000c00137a0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00137c8                blockTask(TaskState)
                0x00000000c00137f8                waitTask(int, int*, int)
                0x00000000c001383c                milliTenthSleepUntil(unsigned int)
                0x00000000c00138cc                milliTenthSleep(unsigned int)
                0x00000000c00138dc                sleep(unsigned int)
                0x00000000c00138f8                Semaphore::acquire()
                0x00000000c00139b4                taskReturned
                0x00000000c00139f0                Thr::processFromPID(int)
                0x00000000c0013a90                unblockTask(ThreadControlBlock*)
                0x00000000c0013b34                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0013e00                cleanerTaskFunction(void*)
                0x00000000c0013ef0                terminateTask(int)
                0x00000000c0013fbc                Thr::terminateFromIRQ(int)
                0x00000000c0013fcc                Semaphore::release()
 .text          0x00000000c0014109      0xb93 vm86/vm8086.32
                0x00000000c0014109                Vm::inbv(unsigned short)
                0x00000000c001411c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0014152                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0014162                Vm::getSegment(unsigned int)
                0x00000000c001416a                Vm::getOffset(unsigned int)
                0x00000000c001416f                Vm::mainloop2()
                0x00000000c00141a9                Vm::mainVm8086Loop(void*)
                0x00000000c00141b9                Vm::mainloop3(unsigned long)
                0x00000000c00141df                Vm::initialise8086()
                0x00000000c0014222                Vm::finish8086()
                0x00000000c0014283                Vm::getOutput8086(unsigned char*)
                0x00000000c00142a8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014361                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00144c9                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0014553                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0014564                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0014576                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0014587                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001459c                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00145b2                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00145c7                Vm::faultHandler(regs*)
 .text          0x00000000c0014c9c      0x8e9 arch/i386/hal.32
                0x00000000c0014c9c                noCopro(unsigned long)
                0x00000000c0014c9d                nmiHandler(regs*, void*)
                0x00000000c0014cb6                doubleFault(regs*, void*)
                0x00000000c0014ccf                displayDebugInfo(regs*)
                0x00000000c0014ff0                displayProgramFault(char const*)
                0x00000000c001503c                gpFault(regs*, void*)
                0x00000000c00150a1                pgFault(regs*, void*)
                0x00000000c0015127                otherISRHandler(regs*, void*)
                0x00000000c001515b                opcodeFault(regs*, void*)
                0x00000000c00151db                i386SaveCoprocessor(void*)
                0x00000000c00151ef                i386LoadCoprocessor(void*)
                0x00000000c0015203                x87EmulHandler(regs*, void*)
                0x00000000c00152a0                HalInitialiseCoprocessor()
                0x00000000c001534e                HalPanic(char const*)
                0x00000000c0015353                HalQueryPerformanceCounter()
                0x00000000c001536e                HalInitialise()
                0x00000000c0015514                HalMakeBeep(int)
                0x00000000c001554e                HalGetRand()
                0x00000000c0015551                HalEndOfInterrupt(int)
                0x00000000c0015582                HalRestart()
                0x00000000c0015583                HalShutdown()
                0x00000000c0015584                HalSleep()
 *fill*         0x00000000c0015585        0x3 
 .text          0x00000000c0015588      0x2f4 arch/i386/pic.32
                0x00000000c0015588                picIoWait()
                0x00000000c0015590                picDisable()
                0x00000000c00155c4                picGetIRQReg(int)
                0x00000000c0015648                picOpen()
                0x00000000c00157d8                picEOI(int)
 .text          0x00000000c001587c      0x64d arch/i386/rtc.32
                0x00000000c001587c                RTC::open(int, int, void*)
                0x00000000c0015880                RTC::close(int, int, void*)
                0x00000000c0015884                RTC::timeInSecondsUTC()
                0x00000000c0015896                RTC::timeInDatetimeUTC()
                0x00000000c00158bc                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00158fa                RTC::~RTC()
                0x00000000c00158fa                RTC::~RTC()
                0x00000000c001591e                RTC::~RTC()
                0x00000000c0015948                RTC::get_update_in_progress_flag()
                0x00000000c0015960                RTC::completeRTCRefresh()
                0x00000000c0015c18                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0015dcb                rtcIRQHandler(regs*, void*)
                0x00000000c0015e10                RTC::RTC()
                0x00000000c0015e10                RTC::RTC()
 *fill*         0x00000000c0015ec9        0x3 
 .text          0x00000000c0015ecc      0x203 arch/i386/vga.32
                0x00000000c0015ecc                HalConsoleScroll(int, int)
                0x00000000c0015fd4                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0016040                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00160cf        0x1 
 .text          0x00000000c00160d0     0x13e7 fs/fat/vfslink.32
                0x00000000c00160d0                FAT::getName()
                0x00000000c00160d8                FAT::tell(void*, unsigned long long*)
                0x00000000c0016114                FAT::stat(void*, unsigned long long*)
                0x00000000c0016150                FAT::~FAT()
                0x00000000c0016150                FAT::~FAT()
                0x00000000c0016174                FAT::~FAT()
                0x00000000c001619c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0016240                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0016304                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00164d8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00166f0                FAT::allocateSwapfile(char const*, int)
                0x00000000c00168b0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016a1c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016a7c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016adc                FAT::close(void*)
                0x00000000c0016b30                FAT::closeDir(void*)
                0x00000000c0016b84                FAT::seek(void*, unsigned long long)
                0x00000000c0016bdc                fatWrapperReadDisk
                0x00000000c0016c20                fatWrapperWriteDisk
                0x00000000c0016c64                fatWrapperIoctl
                0x00000000c0016d80                FAT::FAT()
                0x00000000c0016d80                FAT::FAT()
                0x00000000c0016dd4                FAT::fixFilepath(char*)
                0x00000000c0016e10                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0016f48                FAT::openDir(char const*, void**)
                0x00000000c0016ff8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00170f0                FAT::unlink(char const*)
                0x00000000c0017170                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00172fc                FAT::rename(char const*, char const*)
                0x00000000c00173c8                FAT::mkdir(char const*)
                0x00000000c0017448                FAT::exists(char const*)
 *fill*         0x00000000c00174b7        0x1 
 .text          0x00000000c00174b8       0x5c fs/iso9660/helper.32
                0x00000000c00174b8                isoReadDiscSectorHelper
 .text          0x00000000c0017514      0x419 fs/iso9660/vfslink.32
                0x00000000c0017514                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001751a                ISO9660::getName()
                0x00000000c0017520                ISO9660::closeDir(void*)
                0x00000000c001752a                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017530                ISO9660::unlink(char const*)
                0x00000000c0017536                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001753c                ISO9660::rename(char const*, char const*)
                0x00000000c0017542                ISO9660::mkdir(char const*)
                0x00000000c0017548                ISO9660::~ISO9660()
                0x00000000c0017548                ISO9660::~ISO9660()
                0x00000000c001756c                ISO9660::~ISO9660()
                0x00000000c0017594                ISO9660::exists(char const*)
                0x00000000c00175a8                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c00175fa                ISO9660::openDir(char const*, void**)
                0x00000000c0017628                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017656                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00176f4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017734                ISO9660::seek(void*, unsigned long long)
                0x00000000c001776c                ISO9660::tell(void*, unsigned long long*)
                0x00000000c00177a2                ISO9660::stat(void*, unsigned long long*)
                0x00000000c00177dc                ISO9660::close(void*)
                0x00000000c0017801                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001788c                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001790a                ISO9660::ISO9660()
                0x00000000c001790a                ISO9660::ISO9660()
 *fill*         0x00000000c001792d        0x1 
 .text          0x00000000c001792e      0x26c hal/sound/sndcard.32
                0x00000000c001792e                SoundCard::beginPlayback()
                0x00000000c001793c                SoundCard::stopPlayback()
                0x00000000c001794a                SoundCard::SoundCard(char const*)
                0x00000000c001794a                SoundCard::SoundCard(char const*)
                0x00000000c00179e8                SoundCard::~SoundCard()
                0x00000000c00179e8                SoundCard::~SoundCard()
                0x00000000c0017a0c                SoundCard::~SoundCard()
                0x00000000c0017a36                SoundCard::configureRates(int, int, int)
                0x00000000c0017a66                SoundCard::getSamples16(int, short*)
                0x00000000c0017ac2                SoundCard::getSamples32(int, int*)
                0x00000000c0017b48                SoundCard::addChannel(SoundPort*)
                0x00000000c0017b86                SoundCard::removeChannel(int)
 *fill*         0x00000000c0017b9a        0x2 
 .text          0x00000000c0017b9c      0x377 hal/sound/sndport.32
                0x00000000c0017b9c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017b9c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017c28                SoundPort::~SoundPort()
                0x00000000c0017c28                SoundPort::~SoundPort()
                0x00000000c0017c5c                SoundPort::unpause()
                0x00000000c0017c68                SoundPort::pause()
                0x00000000c0017c74                SoundPort::getBufferUsed()
                0x00000000c0017c7c                SoundPort::getBufferSize()
                0x00000000c0017c84                SoundPort::buffer16(short*, int)
                0x00000000c0017d10                SoundPort::buffer32(int*, int)
                0x00000000c0017d98                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0017e5c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0017f13        0x0 hw/bus/isa.32
 *fill*         0x00000000c0017f13        0x1 
 .text          0x00000000c0017f14      0xb49 hw/bus/pci.32
                0x00000000c0017f14                PCI::open(int, int, void*)
                0x00000000c0017f32                PCI::close(int, int, void*)
                0x00000000c0017f36                PCI::PCI()
                0x00000000c0017f36                PCI::PCI()
                0x00000000c0017fd0                PCI::readBAR8(unsigned int, int)
                0x00000000c0017fec                PCI::readBAR16(unsigned int, int)
                0x00000000c001800a                PCI::readBAR32(unsigned int, int)
                0x00000000c0018026                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0018046                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0018068                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0018088                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00180f6                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001819e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c00181c2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c00181ea                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018234                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001825c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018280                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c00182a4                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c00182cc                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018330                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018418                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018692                PCI::checkBus(unsigned char)
                0x00000000c00186b8                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001882a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001899e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018a0a                PCI::detect()
 *fill*         0x00000000c0018a5d        0x1 
 .text          0x00000000c0018a5e      0xb5a hw/diskctrl/ide.32
                0x00000000c0018a5e                IDE::close(int, int, void*)
                0x00000000c0018a62                IDE::IDE()
                0x00000000c0018a62                IDE::IDE()
                0x00000000c0018a96                IDE::prepareInterrupt(unsigned char)
                0x00000000c0018aa8                selectDrive(unsigned char, unsigned char)
                0x00000000c0018aaa                IDE::getBase(unsigned char)
                0x00000000c0018abc                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0018b7c                IDE::read(unsigned char, unsigned char)
                0x00000000c0018c2a                IDE::waitInterrupt(unsigned char)
                0x00000000c0018c92                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0018cae                ideChannel1IRQHandler(regs*, void*)
                0x00000000c0018cca                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0018d10                IDE::open(int, int, void*)
                0x00000000c001911e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c00191ea                IDE::detect()
                0x00000000c00194aa                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001955a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c00195b8      0x32a hw/diskctrl/satabus.32
                0x00000000c00195b8                SATABus::close(int, int, void*)
                0x00000000c00195bc                SATABus::detect()
                0x00000000c00195be                SATABus::SATABus()
                0x00000000c00195be                SATABus::SATABus()
                0x00000000c0019644                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019676                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c00196be                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c00196de                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019708                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019818                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c00198c2                SATABus::open(int, int, void*)
 .text          0x00000000c00198e2      0x5f4 hw/diskphys/ata.32
                0x00000000c00198e2                ATA::close(int, int, void*)
                0x00000000c0019906                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019908                ATA::ATA()
                0x00000000c0019908                ATA::ATA()
                0x00000000c0019936                ATA::flush(bool)
                0x00000000c0019980                ATA::readyForCommand()
                0x00000000c00199cc                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c0019d48                ATA::read(unsigned long long, int, void*)
                0x00000000c0019d94                ATA::write(unsigned long long, int, void*)
                0x00000000c0019de0                ATA::detectCHS()
                0x00000000c0019e0a                ATA::open(int, int, void*)
 .text          0x00000000c0019ed6      0x60e hw/diskphys/atapi.32
                0x00000000c0019ed6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c0019edc                ATAPI::close(int, int, void*)
                0x00000000c0019f00                ATAPI::ATAPI()
                0x00000000c0019f00                ATAPI::ATAPI()
                0x00000000c0019f2e                ATAPI::readyForCommand()
                0x00000000c0019f80                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a240                ATAPI::diskRemoved()
                0x00000000c001a27a                ATAPI::eject()
                0x00000000c001a2c2                ATAPI::diskInserted()
                0x00000000c001a2ce                ATAPI::detectMedia()
                0x00000000c001a38a                ATAPI::open(int, int, void*)
                0x00000000c001a46a                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001a4e4      0x402 hw/diskphys/sata.32
                0x00000000c001a4e4                SATA::close(int, int, void*)
                0x00000000c001a508                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001a50a                SATA::open(int, int, void*)
                0x00000000c001a5b4                SATA::SATA()
                0x00000000c001a5b4                SATA::SATA()
                0x00000000c001a5e2                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a82e                SATA::read(unsigned long long, int, void*)
                0x00000000c001a87a                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001a8e6      0x5b9 hw/diskphys/satapi.32
                0x00000000c001a8e6                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001a8ec                SATAPI::close(int, int, void*)
                0x00000000c001a910                SATAPI::open(int, int, void*)
                0x00000000c001aa08                SATAPI::SATAPI()
                0x00000000c001aa08                SATAPI::SATAPI()
                0x00000000c001aa36                SATAPI::diskRemoved()
                0x00000000c001aa38                SATAPI::diskInserted()
                0x00000000c001aa54                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001ad30                SATAPI::eject()
                0x00000000c001ad6c                SATAPI::read(unsigned long long, int, void*)
                0x00000000c001ae9e                SATAPI::detectMedia()
 *fill*         0x00000000c001ae9f        0x1 
 .text          0x00000000c001aea0      0x455 hw/intctrl/apic.32
                0x00000000c001aea0                IOAPIC::close(int, int, void*)
                0x00000000c001aea6                apicGetBase()
                0x00000000c001aee8                IOAPIC::IOAPIC()
                0x00000000c001aee8                IOAPIC::IOAPIC()
                0x00000000c001af10                apicOpen()
                0x00000000c001b076                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b0a8                IOAPIC::read(int)
                0x00000000c001b0d0                IOAPIC::open(int, int, void*)
                0x00000000c001b1c4                IOAPIC::write(int, int)
                0x00000000c001b1f0                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b2f5        0x3 
 .text          0x00000000c001b2f8       0xf0 hw/timer/apictimer.32
                0x00000000c001b2f8                APICTimer::close(int, int, void*)
                0x00000000c001b300                apicTimerHandler(regs*, void*)
                0x00000000c001b328                APICTimer::open(int, int, void*)
                0x00000000c001b398                APICTimer::write(int)
                0x00000000c001b3c0                APICTimer::APICTimer()
                0x00000000c001b3c0                APICTimer::APICTimer()
 .text          0x00000000c001b3e8      0x1aa hw/timer/pit.32
                0x00000000c001b3e8                PIT::write(int)
                0x00000000c001b46c                pitHandler(regs*, void*)
                0x00000000c001b490                PIT::open(int, int, void*)
                0x00000000c001b4e0                PIT::close(int, int, void*)
                0x00000000c001b510                PIT::PIT()
                0x00000000c001b510                PIT::PIT()
 *fill*         0x00000000c001b592        0xe 
 .text          0x00000000c001b5a0       0x83 arch/i386/avx.32
                0x00000000c001b5a0                avxDetect
                0x00000000c001b5ca                avxSave
                0x00000000c001b5db                avxLoad
                0x00000000c001b5ec                avxInit
                0x00000000c001b60e                avxClose
                0x00000000c001b60f                wouldSheSayYes
 *fill*         0x00000000c001b623        0xd 
 .text          0x00000000c001b630      0x1d6 arch/i386/interrupt.32
                0x00000000c001b630                isr0
                0x00000000c001b640                isr1
                0x00000000c001b64a                isr2
                0x00000000c001b654                isr3
                0x00000000c001b65e                isr4
                0x00000000c001b668                isr5
                0x00000000c001b672                isr6
                0x00000000c001b67c                isr7
                0x00000000c001b686                isr8
                0x00000000c001b68e                isr9
                0x00000000c001b698                isr10
                0x00000000c001b6a0                isr11
                0x00000000c001b6a8                isr12
                0x00000000c001b6b0                isr13
                0x00000000c001b6b8                isr14
                0x00000000c001b6c0                isr15
                0x00000000c001b6ca                isr16
                0x00000000c001b6d4                isr17
                0x00000000c001b6de                isr18
                0x00000000c001b6e8                irq3
                0x00000000c001b6f2                irq4
                0x00000000c001b6fc                irq5
                0x00000000c001b706                irq6
                0x00000000c001b710                irq7
                0x00000000c001b71a                irq8
                0x00000000c001b724                irq9
                0x00000000c001b72e                irq10
                0x00000000c001b738                irq11
                0x00000000c001b742                irq12
                0x00000000c001b74c                irq13
                0x00000000c001b756                irq14
                0x00000000c001b760                irq15
                0x00000000c001b76a                irq1
                0x00000000c001b771                irq2
                0x00000000c001b778                isr96
                0x00000000c001b77f                irq0
                0x00000000c001b784                int_common_stub
                0x00000000c001b784                syscall_common_stub
                0x00000000c001b7b6                irq16
                0x00000000c001b7c0                irq17
                0x00000000c001b7ca                irq18
                0x00000000c001b7d4                irq19
                0x00000000c001b7de                irq20
                0x00000000c001b7e8                irq21
                0x00000000c001b7f2                irq22
                0x00000000c001b7fc                irq23
 *fill*         0x00000000c001b806        0xa 
 .text          0x00000000c001b810       0x10 arch/i386/rdrand.32
                0x00000000c001b810                i386GetRDRAND
 .text          0x00000000c001b820       0x39 arch/i386/sse.32
                0x00000000c001b820                absolutelyNoChanceInHell
                0x00000000c001b820                sseDetect
                0x00000000c001b838                sseSave
                0x00000000c001b840                sseLoad
                0x00000000c001b848                sseInit
                0x00000000c001b858                sseClose
 *fill*         0x00000000c001b859        0x7 
 .text          0x00000000c001b860       0x49 arch/i386/x87.32
                0x00000000c001b866                x87Detect
                0x00000000c001b881                x87Save
                0x00000000c001b888                x87Load
                0x00000000c001b88f                x87Init
                0x00000000c001b8a8                x87Close
 *fill*         0x00000000c001b8a9        0x3 
 .text          0x00000000c001b8ac       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001b8d1        0x0 crtn.32
 *fill*         0x00000000c001b8d1        0x3 
 .text          0x00000000c001b8d4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001b8d4                __divdi3
 *fill*         0x00000000c001ba1f        0x1 
 .text          0x00000000c001ba20      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001ba20                __moddi3
 *fill*         0x00000000c001bb9e        0x2 
 .text          0x00000000c001bba0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001bba0                __udivdi3
 *fill*         0x00000000c001bc9f        0x1 
 .text          0x00000000c001bca0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001bca0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001bdc0        0x0
 .iplt          0x00000000c001bdc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001bdba        0xf
 .init          0x00000000c001bdba        0x3 crti.32
                0x00000000c001bdba                _init
 .init          0x00000000c001bdbd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001bdc2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001bdc7        0x2 crtn.32

.fini           0x00000000c001bdc9        0xa
 .fini          0x00000000c001bdc9        0x3 crti.32
                0x00000000c001bdc9                _fini
 .fini          0x00000000c001bdcc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001bdd1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001bdd4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001bdd4       0x23 core/computer.32
                0x00000000c001bdd4                Computer::~Computer()
                0x00000000c001bdd4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001bdf8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001bdf8       0x2a core/computer.32
                0x00000000c001bdf8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001be22       0x21
 .text._Z10idleCommonv
                0x00000000c001be22       0x21 core/idle.32
                0x00000000c001be22                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001be44        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001be44        0x2 core/unixfile.32
                0x00000000c001be44                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001be44                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001be46       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001be46       0x42 core/unixfile.32
                0x00000000c001be46                LinkedList<UnixFile>::LinkedList()
                0x00000000c001be46                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001be88       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001be88       0xd3 core/unixfile.32
                0x00000000c001be88                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001bf5c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001bf5c        0x7 core/unixfile.32
                0x00000000c001bf5c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001bf64       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001bf64       0xa1 core/unixfile.32
                0x00000000c001bf64                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c006        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c006        0x8 core/unixfile.32
                0x00000000c001c006                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c00e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c00e       0x1a hal/device.32
                0x00000000c001c00e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c00e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c028       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c028       0x2a hal/device.32
                0x00000000c001c028                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c052       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c052       0xdc hal/device.32
                0x00000000c001c052                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c12e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c12e       0x42 hal/device.32
                0x00000000c001c12e                LinkedList<Device>::LinkedList()
                0x00000000c001c12e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c170       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c170       0x1c hal/timer.32
                0x00000000c001c170                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c18c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c18c        0x7 hal/timer.32
                0x00000000c001c18c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c194       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c194       0xb8 hal/timer.32
                0x00000000c001c194                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c24c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c24c       0xda hal/timer.32
                0x00000000c001c24c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c328       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c328       0x23 hw/acpi.32
                0x00000000c001c328                ACPI::~ACPI()
                0x00000000c001c328                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c34c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c34c       0x2a hw/acpi.32
                0x00000000c001c34c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c378        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c378        0x2 hw/acpi.32
                0x00000000c001c378                LinkedList<Device>::~LinkedList()
                0x00000000c001c378                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c37c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c37c       0x1c hw/acpi.32
                0x00000000c001c37c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c398        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c398        0x7 hw/acpi.32
                0x00000000c001c398                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c3a0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c3a0       0xb8 hw/acpi.32
                0x00000000c001c3a0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001c458       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001c458       0x23 hw/cpu.32
                0x00000000c001c458                CPU::~CPU()
                0x00000000c001c458                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001c47c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001c47c       0x2a hw/cpu.32
                0x00000000c001c47c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c4a8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c4a8        0x2 thr/prcssthr.32
                0x00000000c001c4a8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001c4a8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c4ac       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c4ac       0x49 thr/prcssthr.32
                0x00000000c001c4ac                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001c4ac                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c4f8       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c4f8       0x42 thr/prcssthr.32
                0x00000000c001c4f8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001c4f8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c53c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c53c        0x8 thr/prcssthr.32
                0x00000000c001c53c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001c544       0x23
 .text._ZN3PCID2Ev
                0x00000000c001c544       0x23 hw/bus/pci.32
                0x00000000c001c544                PCI::~PCI()
                0x00000000c001c544                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001c568       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001c568       0x2a hw/bus/pci.32
                0x00000000c001c568                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001c592       0x23
 .text._ZN3IDED2Ev
                0x00000000c001c592       0x23 hw/diskctrl/ide.32
                0x00000000c001c592                IDE::~IDE()
                0x00000000c001c592                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001c5b6       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001c5b6       0x2a hw/diskctrl/ide.32
                0x00000000c001c5b6                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001c5e0       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001c5e0       0x23 hw/diskctrl/satabus.32
                0x00000000c001c5e0                SATABus::~SATABus()
                0x00000000c001c5e0                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001c604       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001c604       0x2a hw/diskctrl/satabus.32
                0x00000000c001c604                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001c62e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001c62e       0x23 hw/diskphys/ata.32
                0x00000000c001c62e                ATA::~ATA()
                0x00000000c001c62e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001c652       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001c652       0x2a hw/diskphys/ata.32
                0x00000000c001c652                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001c67c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001c67c       0x23 hw/diskphys/atapi.32
                0x00000000c001c67c                ATAPI::~ATAPI()
                0x00000000c001c67c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001c6a0       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001c6a0       0x2a hw/diskphys/atapi.32
                0x00000000c001c6a0                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001c6ca       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001c6ca       0x23 hw/diskphys/sata.32
                0x00000000c001c6ca                SATA::~SATA()
                0x00000000c001c6ca                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001c6ee       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001c6ee       0x2a hw/diskphys/sata.32
                0x00000000c001c6ee                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001c718       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001c718       0x23 hw/diskphys/satapi.32
                0x00000000c001c718                SATAPI::~SATAPI()
                0x00000000c001c718                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001c73c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001c73c       0x2a hw/diskphys/satapi.32
                0x00000000c001c73c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001c766       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001c766       0x23 hw/intctrl/apic.32
                0x00000000c001c766                IOAPIC::~IOAPIC()
                0x00000000c001c766                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001c78a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001c78a       0x2a hw/intctrl/apic.32
                0x00000000c001c78a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001c7b4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001c7b4       0x23 hw/timer/apictimer.32
                0x00000000c001c7b4                APICTimer::~APICTimer()
                0x00000000c001c7b4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001c7d8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001c7d8       0x2a hw/timer/apictimer.32
                0x00000000c001c7d8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001c804       0x23
 .text._ZN3PITD2Ev
                0x00000000c001c804       0x23 hw/timer/pit.32
                0x00000000c001c804                PIT::~PIT()
                0x00000000c001c804                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001c828       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001c828       0x2a hw/timer/pit.32
                0x00000000c001c828                PIT::~PIT()

.rodata         0x00000000c001c852     0x28b2
                0x00000000c001c852                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001c852        0x2 
 .ctors         0x00000000c001c854        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001c858        0x4 core/unixfile.32
 .ctors         0x00000000c001c85c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001c860        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c864                end_ctors = .
                0x00000000c001c864                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001c864        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001c868        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c868                __DTOR_END__
                0x00000000c001c86c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001c86c       0x14 
 .rodata        0x00000000c001c880      0x101 acpica/utclib.32
                0x00000000c001c880                AcpiGbl_Ctypes
 *fill*         0x00000000c001c981        0x3 
 .rodata        0x00000000c001c984       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001c99c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001c9e6       0x1a 
 .rodata        0x00000000c001ca00       0xed fs/fat/ff.32
 *fill*         0x00000000c001caed       0x13 
 .rodata        0x00000000c001cb00      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001cf00       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001cf11       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001cf5a      0x115 core/computer.32
 *fill*         0x00000000c001d06f        0x1 
 .rodata.str1.4
                0x00000000c001d070       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d0d8       0x2c core/computer.32
                0x00000000c001d0d8                vtable for Computer
 .rodata.str1.4
                0x00000000c001d104       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d134        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d140       0x17 core/main.32
 *fill*         0x00000000c001d157        0x1 
 .rodata.str1.4
                0x00000000c001d158       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d1fd       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d255       0x39 core/pipe.32
 *fill*         0x00000000c001d28e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d290       0x1c core/pipe.32
                0x00000000c001d290                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d2ac       0x69 core/terminal.32
 *fill*         0x00000000c001d315        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d318       0x1c core/terminal.32
                0x00000000c001d318                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d334       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d356       0x15 core/unixfile.32
 *fill*         0x00000000c001d36b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d36c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d3b7        0x8 core/unixfile.32
 *fill*         0x00000000c001d3bf        0x1 
 .rodata.str1.4
                0x00000000c001d3c0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d3e0       0x1c core/unixfile.32
                0x00000000c001d3e0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001d3fc       0x1c core/unixfile.32
                0x00000000c001d3fc                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001d418      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d57f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d686       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001d6b9       0x11 dbg/kconsole.32
 *fill*         0x00000000c001d6b9        0x3 
 .rodata        0x00000000c001d6bc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001d80c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001d80c       0x68 fs/vfs.32
                0x00000000c001d80c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001d874       0x1c fs/vfs.32
                0x00000000c001d874                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001d890       0x1c fs/vfs.32
                0x00000000c001d890                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001d8ac       0x2c hal/bus.32
                0x00000000c001d8ac                vtable for Bus
 .rodata.str1.1
                0x00000000c001d8d8       0x1e hal/clock.32
 *fill*         0x00000000c001d8f6        0x2 
 .rodata._ZTV5Clock
                0x00000000c001d8f8       0x3c hal/clock.32
                0x00000000c001d8f8                vtable for Clock
 *fill*         0x00000000c001d934        0xc 
 .rodata        0x00000000c001d940       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001d970       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001d9c8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001d9c8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001d9c8       0x2c hal/device.32
                0x00000000c001d9c8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001d9f4       0x2c hal/device.32
                0x00000000c001d9f4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001da20       0x2c hal/diskctrl.32
                0x00000000c001da20                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001da4c       0x38 hal/diskphys.32
                0x00000000c001da4c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001da84       0x3e hal/intctrl.32
 *fill*         0x00000000c001dac2        0x2 
 .rodata.str1.4
                0x00000000c001dac4       0x5d hal/intctrl.32
 .rodata        0x00000000c001db21       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001db74       0x34 hal/keybrd.32
                0x00000000c001db74                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001dba8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001dbec       0x2c hal/logidisk.32
                0x00000000c001dbec                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001dc18       0x2c hal/mouse.32
                0x00000000c001dc18                vtable for Mouse
 .rodata.str1.1
                0x00000000c001dc44        0xb hal/partition.32
 *fill*         0x00000000c001dc4f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001dc50       0x44 hal/serial.32
                0x00000000c001dc50                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001dc94       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001dc94        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001dc94       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001dc94       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001dc94       0x30 hal/timer.32
                0x00000000c001dc94                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001dcc4       0x10 hal/vcache.32
                0x00000000c001dcc4                vtable for VCache
 .rodata.str1.1
                0x00000000c001dcd4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001dd3c       0x48 hal/video.32
                0x00000000c001dd3c                vtable for Video
 .rodata.str1.4
                0x00000000c001dd84       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001de1f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001df5b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001df5b        0x8 hw/acpi.32
 *fill*         0x00000000c001df5b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001df5c       0x2c hw/acpi.32
                0x00000000c001df5c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001df88      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e0f5        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e0f8       0x2c hw/cpu.32
                0x00000000c001e0f8                vtable for CPU
 .rodata.str1.1
                0x00000000c001e124       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e160       0x3d krnl/panic.32
                                         0x3e (size before relaxing)
 *fill*         0x00000000c001e19d        0x3 
 .rodata.str1.4
                0x00000000c001e1a0       0x3a krnl/panic.32
 .rodata.str1.1
                0x00000000c001e1da       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e21f        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001e229       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001e27d       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001e2a9       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e2f1      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001e4bd       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001e514      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e620       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e620       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e620       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e620        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001e620       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001e6c0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001e6f0      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001e7fe        0x2 
 .rodata.str1.4
                0x00000000c001e800       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001e873       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001e888       0x3c arch/i386/rtc.32
                0x00000000c001e888                vtable for RTC
 .rodata.str1.1
                0x00000000c001e8c4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001e905        0x3 
 .rodata._ZTV3FAT
                0x00000000c001e908       0x68 fs/fat/vfslink.32
                0x00000000c001e908                vtable for FAT
 .rodata.str1.1
                0x00000000c001e970       0xc2 fs/iso9660/vfslink.32
 *fill*         0x00000000c001ea32        0x2 
 .rodata._ZTV7ISO9660
                0x00000000c001ea34       0x68 fs/iso9660/vfslink.32
                0x00000000c001ea34                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001ea9c       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001eae0       0x34 hal/sound/sndcard.32
                0x00000000c001eae0                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001eb14       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001eb53       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001eb8b       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001ec2c       0x2c hw/bus/pci.32
                0x00000000c001ec2c                vtable for PCI
 .rodata.str1.1
                0x00000000c001ec58       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001ecdf        0x1 
 .rodata._ZTV3IDE
                0x00000000c001ece0       0x2c hw/diskctrl/ide.32
                0x00000000c001ece0                vtable for IDE
 .rodata.str1.4
                0x00000000c001ed0c       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001ed30       0x2c hw/diskctrl/satabus.32
                0x00000000c001ed30                vtable for SATABus
 .rodata.str1.1
                0x00000000c001ed5c       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001ed6e        0x2 
 .rodata._ZTV3ATA
                0x00000000c001ed70       0x38 hw/diskphys/ata.32
                0x00000000c001ed70                vtable for ATA
 .rodata.str1.1
                0x00000000c001eda8        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001edb5        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001edb8       0x38 hw/diskphys/atapi.32
                0x00000000c001edb8                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001edf0       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001ee6c       0x38 hw/diskphys/sata.32
                0x00000000c001ee6c                vtable for SATA
 .rodata.str1.1
                0x00000000c001eea4      0x158 hw/diskphys/satapi.32
                                        0x165 (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001effc       0x38 hw/diskphys/satapi.32
                0x00000000c001effc                vtable for SATAPI
 .rodata        0x00000000c001f034        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f03c       0x2c hw/intctrl/apic.32
                0x00000000c001f03c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f068       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f083        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f084       0x30 hw/timer/apictimer.32
                0x00000000c001f084                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f0b4       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f0d1        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f0d4       0x30 hw/timer/pit.32
                0x00000000c001f0d4                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f104      0x271
 *(.data)
 .data          0x00000000c001f104        0x0 crti.32
 .data          0x00000000c001f104        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f104                __dso_handle
 .data          0x00000000c001f108        0x0 acpica/utclib.32
 .data          0x00000000c001f108        0x0 core/malloc.32
 .data          0x00000000c001f108        0x0 libk/ctype.32
 .data          0x00000000c001f108        0x0 libk/string.32
 .data          0x00000000c001f108        0x0 fs/fat/diskio.32
 .data          0x00000000c001f108        0x0 fs/fat/ff.32
 .data          0x00000000c001f108        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f108        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f108        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f108        0x0 compat/inlines.32
 .data          0x00000000c001f108        0x0 compat/resolve.32
 .data          0x00000000c001f108        0x0 core/computer.32
 .data          0x00000000c001f108        0x0 core/gdt.32
 .data          0x00000000c001f108        0x0 core/idle.32
 .data          0x00000000c001f108        0x0 core/idt.32
 .data          0x00000000c001f108        0x4 core/kheap.32
 *fill*         0x00000000c001f10c       0x14 
 .data          0x00000000c001f120      0x142 core/main.32
                0x00000000c001f120                titleScreen
 *fill*         0x00000000c001f262        0x2 
 .data          0x00000000c001f264        0x4 core/physmgr.32
                0x00000000c001f264                Phys::bitmap
 .data          0x00000000c001f268        0x0 core/pipe.32
 *fill*         0x00000000c001f268       0x18 
 .data          0x00000000c001f280       0x60 core/terminal.32
                0x00000000c001f280                VgaText::hiddenOut
                0x00000000c001f2a0                ansiToVGAMappings
 .data          0x00000000c001f2e0        0x0 core/tss.32
 .data          0x00000000c001f2e0        0x4 core/unixfile.32
                0x00000000c001f2e0                UnixFile::nextFd
 .data          0x00000000c001f2e4       0x15 core/virtmgr.32
                0x00000000c001f2e4                Virt::pageAllocPtr
                0x00000000c001f2e8                Virt::bitmap
                0x00000000c001f2ec                Virt::swapfileSectorsPerPage
                0x00000000c001f2f0                Virt::swapfileLength
                0x00000000c001f2f4                Virt::swapfileSector
                0x00000000c001f2f8                Virt::swapfileDrive
 *fill*         0x00000000c001f2f9        0x3 
 .data          0x00000000c001f2fc        0x4 coreobjs/c++.32
                0x00000000c001f2fc                __stack_chk_guard
 .data          0x00000000c001f300        0x0 dbg/kconsole.32
 .data          0x00000000c001f300        0x0 fs/vfs.32
 .data          0x00000000c001f300        0x0 hal/bus.32
 .data          0x00000000c001f300        0x0 hal/buzzer.32
 .data          0x00000000c001f300        0x0 hal/clock.32
 .data          0x00000000c001f300        0x0 hal/device.32
 .data          0x00000000c001f300        0x0 hal/diskctrl.32
 .data          0x00000000c001f300        0x0 hal/diskphys.32
 .data          0x00000000c001f300        0x0 hal/fpu.32
 .data          0x00000000c001f300        0x0 hal/intctrl.32
 .data          0x00000000c001f300        0x0 hal/keybrd.32
 .data          0x00000000c001f300        0x0 hal/logidisk.32
 .data          0x00000000c001f300        0x0 hal/mouse.32
 .data          0x00000000c001f300        0x0 hal/partition.32
 .data          0x00000000c001f300        0x0 hal/serial.32
 .data          0x00000000c001f300        0x0 hal/timer.32
 .data          0x00000000c001f300        0x0 hal/vcache.32
 .data          0x00000000c001f300        0x0 hal/video.32
 .data          0x00000000c001f300       0x10 hw/acpi.32
                0x00000000c001f300                legacyIRQRemaps
 .data          0x00000000c001f310        0x4 hw/cpu.32
                0x00000000c001f310                lastCode
 *fill*         0x00000000c001f314        0xc 
 .data          0x00000000c001f320       0x4d krnl/env.32
                0x00000000c001f320                defaultSysEnv
 .data          0x00000000c001f36d        0x0 krnl/panic.32
 .data          0x00000000c001f36d        0x0 krnl/powctrl.32
 .data          0x00000000c001f36d        0x0 reg/registry.32
 .data          0x00000000c001f36d        0x0 sys/sc_eject.32
 .data          0x00000000c001f36d        0x0 sys/sc_exit.32
 .data          0x00000000c001f36d        0x0 sys/sc_getcwd.32
 .data          0x00000000c001f36d        0x0 sys/sc_getpid.32
 .data          0x00000000c001f36d        0x0 sys/sc_getramdata.32
 .data          0x00000000c001f36d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001f36d        0x0 sys/sc_loaddll.32
 .data          0x00000000c001f36d        0x0 sys/sc_read.32
 .data          0x00000000c001f36d        0x0 sys/sc_sbrk.32
 .data          0x00000000c001f36d        0x0 sys/sc_setcwd.32
 .data          0x00000000c001f36d        0x0 sys/sc_settime.32
 .data          0x00000000c001f36d        0x0 sys/sc_timezone.32
 .data          0x00000000c001f36d        0x0 sys/sc_write.32
 .data          0x00000000c001f36d        0x0 sys/sc_wsbe.32
 .data          0x00000000c001f36d        0x0 sys/sc_yield.32
 .data          0x00000000c001f36d        0x0 sys/syscalls.32
 .data          0x00000000c001f36d        0x0 thr/elf.32
 *fill*         0x00000000c001f36d        0x3 
 .data          0x00000000c001f370        0x4 thr/prcssthr.32
                0x00000000c001f370                Thr::nextPID
 .data          0x00000000c001f374        0x0 vm86/vm8086.32
 .data          0x00000000c001f374        0x0 arch/i386/hal.32
 .data          0x00000000c001f374        0x0 arch/i386/pic.32
 .data          0x00000000c001f374        0x0 arch/i386/rtc.32
 .data          0x00000000c001f374        0x0 arch/i386/vga.32
 .data          0x00000000c001f374        0x0 fs/fat/vfslink.32
 .data          0x00000000c001f374        0x0 fs/iso9660/helper.32
 .data          0x00000000c001f374        0x1 fs/iso9660/vfslink.32
                0x00000000c001f374                recentDriveletter
 .data          0x00000000c001f375        0x0 hal/sound/sndcard.32
 .data          0x00000000c001f375        0x0 hal/sound/sndport.32
 .data          0x00000000c001f375        0x0 hw/bus/isa.32
 .data          0x00000000c001f375        0x0 hw/bus/pci.32
 .data          0x00000000c001f375        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001f375        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001f375        0x0 hw/diskphys/ata.32
 .data          0x00000000c001f375        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001f375        0x0 hw/diskphys/sata.32
 .data          0x00000000c001f375        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001f375        0x0 hw/intctrl/apic.32
 .data          0x00000000c001f375        0x0 hw/timer/apictimer.32
 .data          0x00000000c001f375        0x0 hw/timer/pit.32
 .data          0x00000000c001f375        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001f375        0x0 crtn.32
 .data          0x00000000c001f375        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001f375        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001f375        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001f375        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001f378        0x0
 .got           0x00000000c001f378        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001f378        0x0
 .got.plt       0x00000000c001f378        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001f378        0x0
 .igot.plt      0x00000000c001f378        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001f378        0x0
 .tm_clone_table
                0x00000000c001f378        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001f378        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001f375      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001f375        0x3 
 .eh_frame      0x00000000c001f378        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001f378        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001f378       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001f3d0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001f410       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001f47c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001f500        0x0
 .rel.got       0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001f500        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001f500     0x4d88
                0x00000000c001f500                sbss = .
 *(COMMON)
 COMMON         0x00000000c001f500        0x1 fs/iso9660/iso9660.32
                0x00000000c001f500                cdDriveLetter
 *(.bss)
 .bss           0x00000000c001f501        0x0 crti.32
 *fill*         0x00000000c001f501        0x3 
 .bss           0x00000000c001f504       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001f524        0x4 acpica/utclib.32
 *fill*         0x00000000c001f528       0x18 
 .bss           0x00000000c001f540      0x378 core/malloc.32
 .bss           0x00000000c001f8b8        0x0 libk/ctype.32
 .bss           0x00000000c001f8b8        0x0 libk/string.32
 .bss           0x00000000c001f8b8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001f8b8        0x8 
 .bss           0x00000000c001f8c0       0x88 fs/fat/ff.32
 .bss           0x00000000c001f948        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001f948        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c001f948       0x18 
 .bss           0x00000000c001f960      0xa24 fs/iso9660/iso9660.32
 .bss           0x00000000c0020384        0x0 compat/inlines.32
 .bss           0x00000000c0020384        0x0 compat/resolve.32
 .bss           0x00000000c0020384        0x6 core/computer.32
                0x00000000c0020384                Krnl::computer
                0x00000000c0020388                Krnl::preemptionOn
                0x00000000c0020389                Krnl::schedulingOn
 *fill*         0x00000000c002038a        0x2 
 .bss           0x00000000c002038c        0x6 core/gdt.32
                0x00000000c002038c                gdtDescr
 .bss           0x00000000c0020392        0x0 core/idle.32
 *fill*         0x00000000c0020392        0x2 
 .bss           0x00000000c0020394        0x6 core/idt.32
                0x00000000c0020394                idtDescr
 .bss           0x00000000c002039a        0x0 core/kheap.32
 *fill*         0x00000000c002039a        0x2 
 .bss           0x00000000c002039c        0x4 core/main.32
                0x00000000c002039c                sysBootSettings
 .bss           0x00000000c00203a0       0x29 core/physmgr.32
                0x00000000c00203a0                Phys::forbidEvictions
                0x00000000c00203a4                Phys::currentPagePointer
                0x00000000c00203a8                Phys::highestMem
                0x00000000c00203ac                Phys::oldPercent
                0x00000000c00203b0                Phys::usedPages
                0x00000000c00203b4                Phys::usablePages
                0x00000000c00203b8                Phys::dmaUsage
 .bss           0x00000000c00203c9        0x0 core/pipe.32
 *fill*         0x00000000c00203c9        0x3 
 .bss           0x00000000c00203cc        0x9 core/terminal.32
                0x00000000c00203cc                terminalCycle
                0x00000000c00203d0                activeTerminal
                0x00000000c00203d4                VgaText::graphicMode
 *fill*         0x00000000c00203d5        0x1 
 .bss           0x00000000c00203d6        0x2 core/tss.32
                0x00000000c00203d6                doubleFaultSelector
 *fill*         0x00000000c00203d8        0x8 
 .bss           0x00000000c00203e0       0x84 core/unixfile.32
                0x00000000c00203e0                sfileLpt
                0x00000000c0020420                sfileCom
                0x00000000c0020444                sfileNul
                0x00000000c0020448                sfilePnt
                0x00000000c002044c                sfileAux
                0x00000000c0020450                sfileCon
                0x00000000c0020454                initialFilesAdded
                0x00000000c0020458                unixFileLinkedList
 .bss           0x00000000c0020464       0x10 core/virtmgr.32
                0x00000000c0020464                twswaps
                0x00000000c0020468                swapBalance
                0x00000000c002046c                Virt::swapfileBitmap
                0x00000000c0020470                firstVAS
 .bss           0x00000000c0020474        0x0 coreobjs/c++.32
 .bss           0x00000000c0020474        0x0 dbg/kconsole.32
 .bss           0x00000000c0020474        0x4 fs/vfs.32
                0x00000000c0020474                installedFilesystems
 .bss           0x00000000c0020478        0x0 hal/bus.32
 .bss           0x00000000c0020478        0x0 hal/buzzer.32
 .bss           0x00000000c0020478        0x8 hal/clock.32
                0x00000000c0020478                User::dstOn
                0x00000000c0020479                User::timezoneHalfHourOffset
                0x00000000c002047c                User::timezoneHourOffset
 .bss           0x00000000c0020480        0x0 hal/device.32
 .bss           0x00000000c0020480        0x0 hal/diskctrl.32
 .bss           0x00000000c0020480        0x0 hal/diskphys.32
 .bss           0x00000000c0020480        0x0 hal/fpu.32
 .bss           0x00000000c0020480     0x2000 hal/intctrl.32
                0x00000000c0020480                INT_contexts
                0x00000000c0021480                INT_handlers
 .bss           0x00000000c0022480      0x429 hal/keybrd.32
                0x00000000c0022480                keyboardWaitingTaskList
                0x00000000c0022484                keyboardSetupYet
                0x00000000c0022488                guiKeyboardHandler
                0x00000000c00224a0                keystates
 *fill*         0x00000000c00228a9       0x17 
 .bss           0x00000000c00228c0       0x88 hal/logidisk.32
                0x00000000c00228c0                diskAssignments
                0x00000000c00228e0                disks
 .bss           0x00000000c0022948        0x4 hal/mouse.32
                0x00000000c0022948                guiMouseHandler
 .bss           0x00000000c002294c        0x0 hal/partition.32
 .bss           0x00000000c002294c        0x0 hal/serial.32
 .bss           0x00000000c002294c        0x4 hal/timer.32
                0x00000000c002294c                milliTenthsSinceBoot
 .bss           0x00000000c0022950        0x0 hal/vcache.32
 .bss           0x00000000c0022950        0x4 hal/video.32
                0x00000000c0022950                screen
 *fill*         0x00000000c0022954        0xc 
 .bss           0x00000000c0022960      0x480 hw/acpi.32
                0x00000000c0022960                systemSleepFunction
                0x00000000c0022964                systemResetFunction
                0x00000000c0022968                systemShutdownFunction
                0x00000000c002296c                nextACPITable
                0x00000000c0022980                acpiTables
                0x00000000c0022b80                usingXSDT
                0x00000000c0022b84                MADTpointer
                0x00000000c0022b88                RSDTpointer
                0x00000000c0022b8c                RSDPpointer
                0x00000000c0022b90                nextAPICNMI
                0x00000000c0022ba0                apicNMIInfo
                0x00000000c0022c20                legacyIRQFlags
                0x00000000c0022c40                ioapicDiscoveryNumber
                0x00000000c0022c60                ioapicFoundInMADT
                0x00000000c0022c80                ioapicAddresses
                0x00000000c0022d00                ioapicGSIBase
                0x00000000c0022d80                processorDiscoveryNumber
                0x00000000c0022da0                matchingAPICID
                0x00000000c0022dc0                processorID
 .bss           0x00000000c0022de0       0x10 hw/cpu.32
                0x00000000c0022de0                lastD
                0x00000000c0022de4                lastC
                0x00000000c0022de8                lastB
                0x00000000c0022dec                lastA
 .bss           0x00000000c0022df0        0x8 krnl/env.32
                0x00000000c0022df0                Krnl::userEnv
                0x00000000c0022df4                Krnl::systemEnv
 .bss           0x00000000c0022df8        0x9 krnl/panic.32
                0x00000000c0022df8                Krnl::guiProgramFaultHandler
                0x00000000c0022dfc                Krnl::guiPanicHandler
                0x00000000c0022e00                Krnl::kernelInPanic
 *fill*         0x00000000c0022e01       0x1f 
 .bss           0x00000000c0022e20       0x48 krnl/powctrl.32
                0x00000000c0022e20                Krnl::powCtrlOnBattery
                0x00000000c0022e40                Krnl::currentPowerSettings
                0x00000000c0022e64                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0022e68        0x0 reg/registry.32
 .bss           0x00000000c0022e68        0x0 sys/sc_eject.32
 .bss           0x00000000c0022e68        0x0 sys/sc_exit.32
 .bss           0x00000000c0022e68        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0022e68        0x0 sys/sc_getpid.32
 .bss           0x00000000c0022e68        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0022e68        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0022e68        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0022e68        0x0 sys/sc_read.32
 .bss           0x00000000c0022e68        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0022e68        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0022e68        0x0 sys/sc_settime.32
 .bss           0x00000000c0022e68        0x0 sys/sc_timezone.32
 .bss           0x00000000c0022e68        0x0 sys/sc_write.32
 .bss           0x00000000c0022e68        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0022e68        0x0 sys/sc_yield.32
 *fill*         0x00000000c0022e68       0x18 
 .bss           0x00000000c0022e80      0x200 sys/syscalls.32
                0x00000000c0022e80                systemCallHandlers
 .bss           0x00000000c0023080      0x7a4 thr/elf.32
                0x00000000c0023080                Thr::driverLookupNext
                0x00000000c00230a0                Thr::driverLookupLen
                0x00000000c00232a0                Thr::driverLookupAddr
                0x00000000c00234a0                Thr::driverNameLookup
                0x00000000c00236a0                Thr::kernelSymbols
                0x00000000c0023720                Thr::kernelStringTable
                0x00000000c00237a0                Thr::kernelSymbolTable
                0x00000000c0023820                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023824        0x4 
 .bss           0x00000000c0023828       0x68 thr/prcssthr.32
                0x00000000c0023828                cleanerThread
                0x00000000c002382c                weNeedTheCleanerToNotBlock
                0x00000000c0023830                retValLockStuff
                0x00000000c0023834                retValSchedLock
                0x00000000c0023838                lockStuffLock
                0x00000000c002383c                schedulerLock
                0x00000000c0023840                taskSwitchesPostponedFlag
                0x00000000c0023844                postponeTaskSwitchesCounter
                0x00000000c0023848                irqDisableCounter
                0x00000000c002384c                terminatedTaskList
                0x00000000c0023858                sleepingTaskList
                0x00000000c0023864                taskList
                0x00000000c0023870                kernelProcess
 *fill*         0x00000000c0023890       0x10 
 .bss           0x00000000c00238a0       0x40 vm86/vm8086.32
                0x00000000c00238a0                Vm::vmRetV
                0x00000000c00238a4                Vm::vmDone
                0x00000000c00238a5                Vm::vmReady
                0x00000000c00238a8                Vm::vm86Thread
                0x00000000c00238ac                Vm::vmToHostCommsPtr
                0x00000000c00238c0                Vm::vmToHostComms
 .bss           0x00000000c00238e0       0x14 arch/i386/hal.32
                0x00000000c00238e0                apic
                0x00000000c00238e4                fpuOwner
                0x00000000c00238e8                coproLoadFunc
                0x00000000c00238ec                coproSaveFunc
                0x00000000c00238f0                gpFaultIntercept
 .bss           0x00000000c00238f4        0x0 arch/i386/pic.32
 .bss           0x00000000c00238f4        0x2 arch/i386/rtc.32
 .bss           0x00000000c00238f6        0x0 arch/i386/vga.32
 *fill*         0x00000000c00238f6        0xa 
 .bss           0x00000000c0023900       0xf0 fs/fat/vfslink.32
                0x00000000c0023900                FAT::fats
                0x00000000c0023920                FAT::vfsToFatRemaps
                0x00000000c00239a0                fatToVFSRemaps
 .bss           0x00000000c00239f0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c00239f0       0x10 
 .bss           0x00000000c0023a00      0x820 fs/iso9660/vfslink.32
                0x00000000c0023a00                iso9660Owner
                0x00000000c0023a04                recentSector
                0x00000000c0023a20                recentBuffer
 .bss           0x00000000c0024220        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0024220        0x0 hal/sound/sndport.32
 .bss           0x00000000c0024220        0x0 hw/bus/isa.32
 .bss           0x00000000c0024220        0xd hw/bus/pci.32
                0x00000000c0024220                thePCI
 .bss           0x00000000c002422d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002422d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002422d        0x3 
 .bss           0x00000000c0024230        0x8 hw/diskphys/ata.32
                0x00000000c0024230                ataSectorsWritten
                0x00000000c0024234                ataSectorsRead
 .bss           0x00000000c0024238        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024238        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0024238        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0024238        0x8 
 .bss           0x00000000c0024240       0x41 hw/intctrl/apic.32
                0x00000000c0024240                noOfIOAPICs
                0x00000000c0024260                ioapics
                0x00000000c0024280                IOAPICsSetupYet
 .bss           0x00000000c0024281        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024281        0x3 
 .bss           0x00000000c0024284        0x4 hw/timer/pit.32
                0x00000000c0024284                pitFreq
 .bss           0x00000000c0024288        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024288        0x0 crtn.32
 .bss           0x00000000c0024288        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0024288        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0024288        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0024288        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024288                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0029010                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
