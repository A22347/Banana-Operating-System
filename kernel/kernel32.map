Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1b9ba
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 .text          0x00000000c0001afb        0x0 libk/string.32
 .text          0x00000000c0001afb       0x51 fs/fat/diskio.32
                0x00000000c0001afb                disk_status
                0x00000000c0001afe                disk_initialize
                0x00000000c0001b01                disk_read
                0x00000000c0001b17                disk_write
                0x00000000c0001b2d                disk_ioctl
 .text          0x00000000c0001b4c     0x3d4b fs/fat/ff.32
                0x00000000c00038e8                f_mount
                0x00000000c000394a                f_open
                0x00000000c0003c15                f_read
                0x00000000c0003e14                f_write
                0x00000000c0004048                f_sync
                0x00000000c00040fd                f_close
                0x00000000c000412c                f_lseek
                0x00000000c00042d3                f_opendir
                0x00000000c000439e                f_closedir
                0x00000000c00043c0                f_readdir
                0x00000000c0004452                f_stat
                0x00000000c00044d1                f_getfree
                0x00000000c00045d3                f_truncate
                0x00000000c00046b7                f_unlink
                0x00000000c00047d9                f_mkdir
                0x00000000c0004974                f_rename
                0x00000000c0004b2a                f_chmod
                0x00000000c0004bd3                f_utime
                0x00000000c0004c81                f_getlabel
                0x00000000c0004dd2                f_setlabel
                0x00000000c0004f62                f_expand
                0x00000000c00050c2                f_mkfs
 *fill*         0x00000000c0005897        0x1 
 .text          0x00000000c0005898       0x2f fs/fat/ffsystem.32
                0x00000000c0005898                ff_memalloc
                0x00000000c00058b0                ff_memfree
 *fill*         0x00000000c00058c7        0x1 
 .text          0x00000000c00058c8      0x2a8 fs/fat/ffunicode.32
                0x00000000c00058c8                ff_uni2oem
                0x00000000c0005968                ff_oem2uni
                0x00000000c00059e0                ff_wtoupper
 .text          0x00000000c0005b70       0x94 compat/inlines.32
                0x00000000c0005b70                CPU::current()
                0x00000000c0005b7c                operator new(unsigned long)
                0x00000000c0005b81                operator delete(void*)
                0x00000000c0005b86                disableIRQs()
                0x00000000c0005b88                enableIRQs()
                0x00000000c0005b8a                lockScheduler()
                0x00000000c0005b92                unlockScheduler()
                0x00000000c0005ba1                lockStuff()
                0x00000000c0005baf                unlockStuff()
                0x00000000c0005be9                Virt::getAKernelVAS()
                0x00000000c0005bef                __not_memcpy
 .text          0x00000000c0005c04      0x118 compat/resolve.32
                0x00000000c0005c04                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0005d1c      0x77b core/computer.32
                0x00000000c0005d1c                Computer::close(int, int, void*)
                0x00000000c0005d61                Krnl::firstTask()
                0x00000000c0005eaa                Computer::Computer()
                0x00000000c0005eaa                Computer::Computer()
                0x00000000c0006010                Computer::setBootMessage(char const*)
                0x00000000c0006012                Computer::detectFeatures()
                0x00000000c000621c                Computer::displayFeatures()
                0x00000000c000621e                Computer::rdmsr(unsigned int)
                0x00000000c000624a                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006282                Computer::shutdown()
                0x00000000c000629a                Computer::restart()
                0x00000000c00062b2                Computer::sleep()
                0x00000000c00062c6                Computer::nmiEnabled()
                0x00000000c00062d2                Computer::readCMOS(unsigned char)
                0x00000000c00062ec                Computer::enableNMI(bool)
                0x00000000c0006304                Computer::open(int, int, void*)
                0x00000000c00063d8                Computer::disableNMI()
                0x00000000c00063e8                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006406                Computer::handleNMI()
                0x00000000c000646c                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c0006497        0x1 
 .text          0x00000000c0006498      0x211 core/gdt.32
                0x00000000c0006498                GDTEntry::setBase(unsigned int)
                0x00000000c00064b4                GDTEntry::setLimit(unsigned int)
                0x00000000c00064d2                GDT::GDT()
                0x00000000c00064d2                GDT::GDT()
                0x00000000c00064e8                GDT::addEntry(GDTEntry)
                0x00000000c000650a                GDT::getNumberOfEntries()
                0x00000000c0006512                GDT::flush()
                0x00000000c0006534                GDT::setup()
 .text          0x00000000c00066a9       0x19 core/idle.32
                0x00000000c00066a9                idleFunction(void*)
 *fill*         0x00000000c00066c2        0x2 
 .text          0x00000000c00066c4      0x464 core/idt.32
                0x00000000c00066c4                IDTEntry::IDTEntry(bool)
                0x00000000c00066c4                IDTEntry::IDTEntry(bool)
                0x00000000c0006736                IDTEntry::setOffset(unsigned int)
                0x00000000c000674c                IDT::IDT()
                0x00000000c000674c                IDT::IDT()
                0x00000000c000674e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0006756                IDT::addEntry(IDTEntry, int)
                0x00000000c0006770                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00067a8                IDT::flush()
                0x00000000c00067c2                IDT::setup()
 .text          0x00000000c0006b28      0x183 core/kheap.32
                0x00000000c0006b28                sbrk
                0x00000000c0006bbd                mmap
                0x00000000c0006bd3                munmap
                0x00000000c0006be9                liballoc_lock()
                0x00000000c0006bf6                liballoc_unlock()
                0x00000000c0006c0a                liballoc_alloc(int)
                0x00000000c0006c22                liballoc_free(void*, int)
                0x00000000c0006c3d                realloc
                0x00000000c0006c51                malloc
                0x00000000c0006c61                free
                0x00000000c0006c71                rfree
                0x00000000c0006c81                calloc
 .text          0x00000000c0006cab      0x1b4 core/main.32
                0x00000000c0006cab                Krnl::setBootMessage(char const*)
                0x00000000c0006d17                kernel_main
 .text          0x00000000c0006e5f      0x5dc core/physmgr.32
                0x00000000c0006e5f                Phys::allocateDMA(unsigned long)
                0x00000000c0006f36                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0006f69                Phys::setPageState(unsigned long, bool)
                0x00000000c0006f9b                Phys::getPageState(unsigned long)
                0x00000000c0006fbc                Phys::freePage(unsigned long)
                0x00000000c000701e                Phys::allocatePage()
                0x00000000c00070dc                Phys::allocateContiguousPages(int)
                0x00000000c0007138                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007170                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000743b        0x1 
 .text          0x00000000c000743c      0x273 core/pipe.32
                0x00000000c000743c                Pipe::isAtty()
                0x00000000c0007440                Pipe::~Pipe()
                0x00000000c0007440                Pipe::~Pipe()
                0x00000000c0007464                Pipe::~Pipe()
                0x00000000c000748c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000754c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0007648                Pipe::Pipe(int)
                0x00000000c0007648                Pipe::Pipe(int)
 *fill*         0x00000000c00076af        0x1 
 .text          0x00000000c00076b0      0xa1e core/terminal.32
                0x00000000c00076b0                VgaText::isAtty()
                0x00000000c00076b4                VgaText::~VgaText()
                0x00000000c00076b4                VgaText::~VgaText()
                0x00000000c00076d8                VgaText::~VgaText()
                0x00000000c0007702                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0007722                setTerminalScrollLock(bool)
                0x00000000c0007723                doTerminalCycle()
                0x00000000c0007724                addToTerminalCycle(VgaText*)
                0x00000000c0007725                scrollTerminalScrollLock(int)
                0x00000000c0007726                VgaText::updateTitle()
                0x00000000c0007728                VgaText::load()
                0x00000000c000772a                VgaText::updateCursor()
                0x00000000c0007740                VgaText::doANSI_SGR(int)
                0x00000000c00077b4                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00077c4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00077d4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00077f4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0007800                VgaText::setTitleColour(VgaColour)
                0x00000000c000780c                VgaText::setTitle(char*)
                0x00000000c000780e                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0007820                VgaText::scrollScreen()
                0x00000000c00078b8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00078ca                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000795a                VgaText::getCursorX()
                0x00000000c0007962                VgaText::getCursorY()
                0x00000000c000796a                VgaText::setCursor(int, int)
                0x00000000c0007981                setActiveTerminal(VgaText*)
                0x00000000c00079cc                VgaText::clearScreen()
                0x00000000c0007a1a                VgaText::setCursorX(int)
                0x00000000c0007a32                VgaText::setCursorY(int)
                0x00000000c0007a4a                VgaText::incrementCursor(bool)
                0x00000000c0007a9e                VgaText::decrementCursor(bool)
                0x00000000c0007ac0                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0007b8e                VgaText::putchar(char)
                0x00000000c0007c7a                VgaText::putx(unsigned int)
                0x00000000c0007cc0                VgaText::puts(char const*)
                0x00000000c0007ce6                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0007d32                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0007e84                VgaText::VgaText(char const*)
                0x00000000c0007e84                VgaText::VgaText(char const*)
                0x00000000c0007fd0                VgaText::receiveKey(unsigned char)
                0x00000000c00080a8                VgaText::doUpdate()
                0x00000000c00080a9                newTerminal(char*)
 *fill*         0x00000000c00080ce        0x2 
 .text          0x00000000c00080d0      0x1a1 core/tss.32
                0x00000000c00080d0                TSS::TSS()
                0x00000000c00080d0                TSS::TSS()
                0x00000000c00080e0                TSS::setESP(unsigned long)
                0x00000000c00080f4                TSS::flush()
                0x00000000c0008114                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008271        0x1 
 .text          0x00000000c0008272      0x4c2 core/unixfile.32
                0x00000000c0008272                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00082c8                ReservedFilename::isAtty()
                0x00000000c00082e4                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008342                UnixFile::getFileDescriptor()
                0x00000000c000834a                UnixFile::UnixFile(int)
                0x00000000c000834a                UnixFile::UnixFile(int)
                0x00000000c00084fa                ReservedFilename::ReservedFilename(int)
                0x00000000c00084fa                ReservedFilename::ReservedFilename(int)
                0x00000000c000852c                UnixFile::~UnixFile()
                0x00000000c000852c                UnixFile::~UnixFile()
                0x00000000c00085c4                UnixFile::~UnixFile()
                0x00000000c00085ec                ReservedFilename::~ReservedFilename()
                0x00000000c00085ec                ReservedFilename::~ReservedFilename()
                0x00000000c0008610                ReservedFilename::~ReservedFilename()
                0x00000000c0008637                getFromFileDescriptor(int)
 .text          0x00000000c0008734     0x119a core/virtmgr.32
                0x00000000c0008734                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0008769                Virt::getPageState(unsigned long)
                0x00000000c000878d                Virt::allocateKernelVirtualPages(int)
                0x00000000c000889e                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00088bc                Virt::swapIDToSector(unsigned long)
                0x00000000c00088ce                Virt::allocateSwapfilePage()
                0x00000000c000894c                Virt::virtualMemorySetup()
                0x00000000c0008997                Virt::setupPageSwapping(int)
                0x00000000c0008a08                VAS::VAS(VAS*)
                0x00000000c0008a08                VAS::VAS(VAS*)
                0x00000000c0008a36                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0008a62                VAS::getPageTableEntry(unsigned long)
                0x00000000c0008a81                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0008ba6                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0008bca                VAS::virtualToPhysical(unsigned long)
                0x00000000c0008be4                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0008c24                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0008c58                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0008c82                VAS::~VAS()
                0x00000000c0008c82                VAS::~VAS()
                0x00000000c0008de6                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0008eea                VAS::allocatePages(int, int)
                0x00000000c00090c2                VAS::setCPUSpecific(unsigned long)
                0x00000000c00090e0                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c00091a6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009294                VAS::VAS(bool)
                0x00000000c0009294                VAS::VAS(bool)
                0x00000000c0009514                VAS::VAS()
                0x00000000c0009514                VAS::VAS()
                0x00000000c0009584                VAS::evict(unsigned long)
                0x00000000c0009646                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0009734                VAS::scanForEviction()
                0x00000000c0009814                mapVASFirstTime
 .text          0x00000000c00098ce       0x5f coreobjs/c++.32
                0x00000000c00098ce                __cxa_atexit
                0x00000000c00098d1                __cxa_finalize
                0x00000000c00098d2                __stack_chk_fail
                0x00000000c0009908                __cxa_pure_virtual
                0x00000000c0009919                operator new[](unsigned long)
                0x00000000c000991e                operator delete(void*, unsigned long)
                0x00000000c0009923                operator delete[](void*)
                0x00000000c0009928                operator delete[](void*, unsigned long)
 .text          0x00000000c000992d      0x21c dbg/kconsole.32
                0x00000000c000992d                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0009998                Dbg::logc(char)
                0x00000000c00099b8                Dbg::logs(char*)
                0x00000000c00099d5                Dbg::logWriteInt(unsigned int)
                0x00000000c00099f3                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0009a14                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c0009b49        0x1 
 .text          0x00000000c0009b4a      0xc5c fs/vfs.32
                0x00000000c0009b4a                File::read(unsigned long long, void*, int*)
                0x00000000c0009ba2                File::write(unsigned long long, void*, int*)
                0x00000000c0009bfa                Directory::read(unsigned long long, void*, int*)
                0x00000000c0009c52                Directory::write(unsigned long long, void*, int*)
                0x00000000c0009c80                File::isAtty()
                0x00000000c0009c84                Directory::isAtty()
                0x00000000c0009c88                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0009c8e                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0009c94                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0009c9a                File::~File()
                0x00000000c0009c9a                File::~File()
                0x00000000c0009cbe                File::~File()
                0x00000000c0009ce8                Directory::~Directory()
                0x00000000c0009ce8                Directory::~Directory()
                0x00000000c0009d0c                Directory::~Directory()
                0x00000000c0009d36                Filesystem::Filesystem()
                0x00000000c0009d36                Filesystem::Filesystem()
                0x00000000c0009d5a                Filesystem::~Filesystem()
                0x00000000c0009d5a                Filesystem::~Filesystem()
                0x00000000c0009d68                Filesystem::~Filesystem()
                0x00000000c0009d8c                Fs::getcwd(Process*, char*, int)
                0x00000000c0009db6                Fs::initVFS()
                0x00000000c0009de0                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c0009f8a                File::File(char const*, Process*)
                0x00000000c0009f8a                File::File(char const*, Process*)
                0x00000000c000a04a                File::open(FileOpenMode)
                0x00000000c000a0a8                File::close()
                0x00000000c000a108                File::seek(unsigned long long)
                0x00000000c000a15e                File::tell(unsigned long long*)
                0x00000000c000a1ae                File::rewind()
                0x00000000c000a1c2                File::unlink()
                0x00000000c000a20e                File::rename(char const*)
                0x00000000c000a25c                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000a2b8                File::exists()
                0x00000000c000a2f6                File::stat(unsigned long long*, bool*)
                0x00000000c000a357                Fs::setcwd(Process*, char*)
                0x00000000c000a4b4                Directory::Directory(char const*, Process*)
                0x00000000c000a4b4                Directory::Directory(char const*, Process*)
                0x00000000c000a574                Directory::open()
                0x00000000c000a5d0                Directory::close()
                0x00000000c000a630                Directory::unlink()
                0x00000000c000a67c                Directory::rename(char const*)
                0x00000000c000a6ca                Directory::exists()
                0x00000000c000a708                Directory::read(dirent*)
                0x00000000c000a754                Directory::create()
                0x00000000c000a7a0                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000a7a6        0x2 
 .text          0x00000000c000a7a8       0x86 hal/bus.32
                0x00000000c000a7a8                Bus::Bus(char const*)
                0x00000000c000a7a8                Bus::Bus(char const*)
                0x00000000c000a7e0                Bus::~Bus()
                0x00000000c000a7e0                Bus::~Bus()
                0x00000000c000a804                Bus::~Bus()
 .text          0x00000000c000a82e       0x96 hal/buzzer.32
                0x00000000c000a82e                beepThread(void*)
                0x00000000c000a86b                Krnl::beep(int, int, bool)
 .text          0x00000000c000a8c4      0x46d hal/clock.32
                0x00000000c000a8c4                User::loadClockSettings(int)
                0x00000000c000a916                Clock::Clock(char const*)
                0x00000000c000a916                Clock::Clock(char const*)
                0x00000000c000a94c                Clock::~Clock()
                0x00000000c000a94c                Clock::~Clock()
                0x00000000c000a970                Clock::~Clock()
                0x00000000c000a99a                Clock::timeInSecondsLocal()
                0x00000000c000a9e2                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000aa3b                datetimeToSeconds(datetime_t)
                0x00000000c000ab68                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000abc8                secondsToDatetime(unsigned long long)
                0x00000000c000ad0c                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000ad31        0x1 
 .text          0x00000000c000ad32      0x464 hal/device.32
                0x00000000c000ad32                Device::hibernate()
                0x00000000c000ad34                Device::wake()
                0x00000000c000ad36                Device::detect()
                0x00000000c000ad38                Device::disableLegacy()
                0x00000000c000ad3a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000ad3c                DriverlessDevice::close(int, int, void*)
                0x00000000c000ad40                DriverlessDevice::detect()
                0x00000000c000ad42                DriverlessDevice::open(int, int, void*)
                0x00000000c000ad56                Device::~Device()
                0x00000000c000ad56                Device::~Device()
                0x00000000c000ad64                Device::~Device()
                0x00000000c000ad8c                Device::findAndLoadDriver()
                0x00000000c000ad9a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000adc0                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000ae00                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ae2a                Device::getParent()
                0x00000000c000ae36                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ae54                Device::addChild(Device*)
                0x00000000c000ae98                Device::removeAllChildren()
                0x00000000c000aede                Device::hibernateAll()
                0x00000000c000af0e                Device::wakeAll()
                0x00000000c000af3e                Device::detectAll()
                0x00000000c000af6e                Device::disableLegacyAll()
                0x00000000c000af70                Device::loadDriversForAll()
                0x00000000c000af72                Device::closeAll()
                0x00000000c000afa8                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000afde                Device::setName(char const*)
                0x00000000c000afec                Device::Device(char const*)
                0x00000000c000afec                Device::Device(char const*)
                0x00000000c000b0e8                Device::getName()
                0x00000000c000b0f2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000b0f2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000b128                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000b16c                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000b196        0x2 
 .text          0x00000000c000b198       0x86 hal/diskctrl.32
                0x00000000c000b198                HardDiskController::HardDiskController(char const*)
                0x00000000c000b198                HardDiskController::HardDiskController(char const*)
                0x00000000c000b1d0                HardDiskController::~HardDiskController()
                0x00000000c000b1d0                HardDiskController::~HardDiskController()
                0x00000000c000b1f4                HardDiskController::~HardDiskController()
 .text          0x00000000c000b21e       0xe2 hal/diskphys.32
                0x00000000c000b21e                PhysicalDisk::eject()
                0x00000000c000b222                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b222                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b28a                PhysicalDisk::startCache()
                0x00000000c000b2b2                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b2b2                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b2d6                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000b300        0x0 hal/fpu.32
 .text          0x00000000c000b300      0x35d hal/intctrl.32
                0x00000000c000b300                int_handler
                0x00000000c000b388                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000b3d0                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b508                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000b53c                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b5bb                setupINTS()
                0x00000000c000b618                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000b65d        0x1 
 .text          0x00000000c000b65e      0x78c hal/keybrd.32
                0x00000000c000b65e                startGUI(void*)
                0x00000000c000b6ca                startGUIVESA(void*)
                0x00000000c000b736                sendKeyToTerminal(unsigned char)
                0x00000000c000b7f9                sendKeyboardToken(KeyboardToken)
                0x00000000c000bc39                clearInternalKeybuffer(VgaText*)
                0x00000000c000bc6e                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000bd60                Keyboard::Keyboard(char const*)
                0x00000000c000bd60                Keyboard::Keyboard(char const*)
                0x00000000c000bd9c                Keyboard::~Keyboard()
                0x00000000c000bd9c                Keyboard::~Keyboard()
                0x00000000c000bdc0                Keyboard::~Keyboard()
 .text          0x00000000c000bdea      0x3ea hal/logidisk.32
                0x00000000c000bdea                LogicalDisk::close(int, int, void*)
                0x00000000c000bdee                LogicalDisk::~LogicalDisk()
                0x00000000c000bdee                LogicalDisk::~LogicalDisk()
                0x00000000c000be12                LogicalDisk::~LogicalDisk()
                0x00000000c000be3c                LogicalDisk::open(int, int, void*)
                0x00000000c000be50                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000be88                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000bece                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bece                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bf84                LogicalDisk::assignDriveLetter()
                0x00000000c000c03a                LogicalDisk::mount()
                0x00000000c000c082                LogicalDisk::unmount()
                0x00000000c000c092                LogicalDisk::eject()
                0x00000000c000c0a6                LogicalDisk::unassignDriveLetter()
                0x00000000c000c0fc                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000c168                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000c1d4       0x86 hal/mouse.32
                0x00000000c000c1d4                Mouse::Mouse(char const*)
                0x00000000c000c1d4                Mouse::Mouse(char const*)
                0x00000000c000c20c                Mouse::~Mouse()
                0x00000000c000c20c                Mouse::~Mouse()
                0x00000000c000c230                Mouse::~Mouse()
 .text          0x00000000c000c25a      0x339 hal/partition.32
                0x00000000c000c25a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c302                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000c593        0x1 
 .text          0x00000000c000c594       0x86 hal/serial.32
                0x00000000c000c594                Serial::Serial(char const*)
                0x00000000c000c594                Serial::Serial(char const*)
                0x00000000c000c5cc                Serial::~Serial()
                0x00000000c000c5cc                Serial::~Serial()
                0x00000000c000c5f0                Serial::~Serial()
 *fill*         0x00000000c000c61a        0x2 
 .text          0x00000000c000c61c      0x234 hal/timer.32
                0x00000000c000c61c                Timer::Timer(char const*)
                0x00000000c000c61c                Timer::Timer(char const*)
                0x00000000c000c654                Timer::~Timer()
                0x00000000c000c654                Timer::~Timer()
                0x00000000c000c678                Timer::~Timer()
                0x00000000c000c6a2                Timer::read()
                0x00000000c000c6ad                setupTimer(int)
                0x00000000c000c6e8                timerHandler(unsigned int)
 .text          0x00000000c000c850      0x43e hal/vcache.32
                0x00000000c000c850                VCache::VCache(PhysicalDisk*)
                0x00000000c000c850                VCache::VCache(PhysicalDisk*)
                0x00000000c000c9b8                VCache::invalidateReadBuffer()
                0x00000000c000c9c8                VCache::writeWriteBuffer()
                0x00000000c000ca14                VCache::~VCache()
                0x00000000c000ca14                VCache::~VCache()
                0x00000000c000ca68                VCache::~VCache()
                0x00000000c000ca90                VCache::write(unsigned long long, int, void*)
                0x00000000c000cb8a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000cc8e      0x4b3 hal/video.32
                0x00000000c000cc8e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ccda                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000cd4a                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000cdc8                Video::clearScreen(unsigned int)
                0x00000000c000cdfc                Video::putpixel(int, int, unsigned int)
                0x00000000c000ce0a                Video::Video(char const*)
                0x00000000c000ce0a                Video::Video(char const*)
                0x00000000c000ce40                Video::~Video()
                0x00000000c000ce40                Video::~Video()
                0x00000000c000ce64                Video::~Video()
                0x00000000c000ce8e                Video::isMonochrome()
                0x00000000c000ce9a                Video::getWidth()
                0x00000000c000cea6                Video::getHeight()
                0x00000000c000ceb2                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000cf6e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000d0d6                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000d141        0x3 
 .text          0x00000000c000d144     0x1307 hw/acpi.32
                0x00000000c000d144                ACPI::close(int, int, void*)
                0x00000000c000d1fc                findRSDP()
                0x00000000c000d28c                loadACPITables(unsigned char*)
                0x00000000c000d4f0                findRSDT(unsigned char*)
                0x00000000c000d640                findDataTable(unsigned char*, char*)
                0x00000000c000d6b8                scanMADT()
                0x00000000c000db8c                ACPI::ACPI()
                0x00000000c000db8c                ACPI::ACPI()
                0x00000000c000dbe0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000dcc8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000dd90                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000dd98                ACPI::detectPCI()
                0x00000000c000dfa0                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000dff4                ACPI::sleep()
                0x00000000c000e010                ACPI::open(int, int, void*)
 *fill*         0x00000000c000e44b        0x1 
 .text          0x00000000c000e44c      0xb95 hw/cpu.32
                0x00000000c000e44c                CPU::close(int, int, void*)
                0x00000000c000e450                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000e46c                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000e484                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000e4f8                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000e57c                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000e5aa                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000e5d8                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000e606                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000e634                CPU::CPU()
                0x00000000c000e634                CPU::CPU()
                0x00000000c000e6c2                CPU::displayFeatures()
                0x00000000c000e6c4                CPU::detectFeatures()
                0x00000000c000ed88                CPU::setupSMEP()
                0x00000000c000ed94                CPU::setupUMIP()
                0x00000000c000ed9e                CPU::setupTSC()
                0x00000000c000eda8                CPU::setupLargePages()
                0x00000000c000edb2                CPU::setupPAT()
                0x00000000c000edee                CPU::setupMTRR()
                0x00000000c000edf0                CPU::setupGlobalPages()
                0x00000000c000edfa                CPU::allowUsermodeDataAccess()
                0x00000000c000ee0c                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ee1e                CPU::setupSMAP()
                0x00000000c000ee2c                CPU::setupFeatures()
                0x00000000c000eef8                CPU::open(int, int, void*)
 .text          0x00000000c000efe1        0x4 hw/smp.32
                0x00000000c000efe1                Krnl::smpEntry()
                0x00000000c000efe3                Krnl::startCPU(int)
                0x00000000c000efe4                Krnl::startCPUs()
 *fill*         0x00000000c000efe5        0x1 
 .text          0x00000000c000efe6      0x581 krnl/env.32
                0x00000000c000efe6                EnvVarContainer::getEnv(char const*)
                0x00000000c000f024                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000f0e6                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000f0e8                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000f2ce                EnvVarContainer::__loadSystem()
                0x00000000c000f2e8                EnvVarContainer::__loadUser()
                0x00000000c000f2ea                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f2ea                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f30c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f30c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f33c                Krnl::getEnv(Process*, char const*)
                0x00000000c000f3a1                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000f3bb                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000f3da                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000f3ed                Krnl::deleteEnvSystem(char const*)
                0x00000000c000f3ee                Krnl::deleteEnvUser(char const*)
                0x00000000c000f3ef                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000f3f0                Krnl::newProcessEnv(Process*)
                0x00000000c000f412                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000f45e                Krnl::loadSystemEnv()
                0x00000000c000f48c                Krnl::loadUserEnv()
                0x00000000c000f4b2                Krnl::flushEnv()
                0x00000000c000f4b3                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c000f4d3                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c000f567      0x26c krnl/panic.32
                0x00000000c000f567                Krnl::panic(char const*)
 .text          0x00000000c000f7d3      0x168 krnl/powctrl.32
                0x00000000c000f7d3                Krnl::powerThread(void*)
                0x00000000c000f827                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c000f83d                Krnl::userIOReceived()
                0x00000000c000f848                Krnl::handlePowerButton()
                0x00000000c000f87d                Krnl::handleSleepButton()
                0x00000000c000f8b2                Krnl::setupPowerManager()
 .text          0x00000000c000f93b      0x50e reg/registry.32
                0x00000000c000f93b                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c000fa93                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c000fbe8                Reg::getLine(char*, char*, char*)
                0x00000000c000fc1f                Reg::readInt(char*, char*, int*)
                0x00000000c000fd0a                Reg::readString(char*, char*, char*, int)
                0x00000000c000fd8b                Reg::readBool(char*, char*, bool*)
                0x00000000c000fdb0                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c000fddc                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c000fe08                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c000fe49       0x36 sys/sc_eject.32
                0x00000000c000fe49                Sys::eject(regs*)
 .text          0x00000000c000fe7f       0x18 sys/sc_exit.32
                0x00000000c000fe7f                Sys::exit(regs*)
 .text          0x00000000c000fe97       0x1f sys/sc_getcwd.32
                0x00000000c000fe97                Sys::getCwd(regs*)
 .text          0x00000000c000feb6        0xc sys/sc_getpid.32
                0x00000000c000feb6                Sys::getPID(regs*)
 .text          0x00000000c000fec2       0x1a sys/sc_getramdata.32
                0x00000000c000fec2                Sys::getRAMData(regs*)
 .text          0x00000000c000fedc       0x82 sys/sc_getvgaptr.32
                0x00000000c000fedc                Sys::getVGAPtr(regs*)
 .text          0x00000000c000ff5e       0xa8 sys/sc_loaddll.32
                0x00000000c000ff5e                Sys::loadDLL(regs*)
 .text          0x00000000c0010006       0x68 sys/sc_read.32
                0x00000000c0010006                Sys::read(regs*)
 .text          0x00000000c001006e       0x55 sys/sc_sbrk.32
                0x00000000c001006e                Sys::sbrk(regs*)
 .text          0x00000000c00100c3       0x1c sys/sc_setcwd.32
                0x00000000c00100c3                Sys::setCwd(regs*)
 .text          0x00000000c00100df       0x95 sys/sc_settime.32
                0x00000000c00100df                Sys::setTime(regs*)
 .text          0x00000000c0010174       0x4a sys/sc_timezone.32
                0x00000000c0010174                Sys::timezone(regs*)
 .text          0x00000000c00101be       0x68 sys/sc_write.32
                0x00000000c00101be                Sys::write(regs*)
 .text          0x00000000c0010226       0x62 sys/sc_wsbe.32
                0x00000000c0010226                Sys::wsbe(regs*)
 .text          0x00000000c0010288       0x25 sys/sc_yield.32
                0x00000000c0010288                Sys::yield(regs*)
 .text          0x00000000c00102ad      0xe2c sys/syscalls.32
                0x00000000c00102ad                sysCallSeekDir(regs*)
                0x00000000c00102b2                sysCallTellDir(regs*)
                0x00000000c00102b7                sysCallVerify(regs*)
                0x00000000c00102c1                sysCallGetArgc(regs*)
                0x00000000c00102d1                sysCallTTYName(regs*)
                0x00000000c00102d9                sysFormatDisk(regs*)
                0x00000000c0010346                sysSetDiskVolumeLabel(regs*)
                0x00000000c0010390                sysGetDiskVolumeLabel(regs*)
                0x00000000c00103e5                sysShutdown(regs*)
                0x00000000c0010443                sysCallRealpath(regs*)
                0x00000000c0010486                sysCallReadDir(regs*)
                0x00000000c0010506                sysCallIsATTY(regs*)
                0x00000000c0010562                sysCallSeek(regs*)
                0x00000000c00105bb                sysCallTell(regs*)
                0x00000000c001062a                sysCallSize(regs*)
                0x00000000c001069f                sysCallSizeFromFilename(regs*)
                0x00000000c0010752                sysCallClose(regs*)
                0x00000000c00107b2                sysCallOpenDir(regs*)
                0x00000000c0010829                sysCallCloseDir(regs*)
                0x00000000c001087d                sysCallMakeDir(regs*)
                0x00000000c00108ef                sysCallWait(regs*)
                0x00000000c001090c                sysCallNotImpl(regs*)
                0x00000000c0010927                sysPanic(regs*)
                0x00000000c0010942                sysCallRmdir(regs*)
                0x00000000c00109a9                sysCallUnlink(regs*)
                0x00000000c0010a10                sysCallGetArgv(regs*)
                0x00000000c0010a5d                sysCallUSleep(regs*)
                0x00000000c0010a86                sysCallSpawn(regs*)
                0x00000000c0010aef                sysCallGetEnv(regs*)
                0x00000000c0010b9e                sysSetFatAttrib(regs*)
                0x00000000c0010c15                sysPipe(regs*)
                0x00000000c0010c5a                sysGetUnixTime(regs*)
                0x00000000c0010c6e                string_ends_with(char const*, char const*)
                0x00000000c0010cb8                sysCallOpen(regs*)
                0x00000000c0010eac                Sys::loadSyscalls()
                0x00000000c0011097                Sys::systemCall(regs*, void*)
 .text          0x00000000c00110d9     0x11e5 thr/elf.32
                0x00000000c00110d9                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0011365                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001157b                Thr::runtimeReferenceHelper()
                0x00000000c001158e                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00115dd                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001189b                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0011fd1                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012003                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001203a                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012054                Thr::loadDLL(char const*, bool)
                0x00000000c0012285                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00122be        0x2 
 .text          0x00000000c00122c0     0x12c5 thr/prcssthr.32
                0x00000000c00122c0                userModeEntryPoint(void*)
                0x00000000c00122e8                changeTSS
                0x00000000c0012318                switchToThread(ThreadControlBlock*)
                0x00000000c00123cc                Process::addArgs(char**)
                0x00000000c001242c                Process::Process(char const*, Process*, char**)
                0x00000000c001242c                Process::Process(char const*, Process*, char**)
                0x00000000c001261c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001261c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00127d8                taskStartupFunction
                0x00000000c00127e4                Semaphore::Semaphore(int)
                0x00000000c00127e4                Semaphore::Semaphore(int)
                0x00000000c0012814                Mutex::Mutex()
                0x00000000c0012814                Mutex::Mutex()
                0x00000000c0012828                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0012920                Process::createUserThread()
                0x00000000c0012940                setupMultitasking(void (*)())
                0x00000000c0012a48                schedule()
                0x00000000c0012ad8                Semaphore::tryAcquire()
                0x00000000c0012ba4                Semaphore::assertLocked(char const*)
                0x00000000c0012c1c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0012c44                blockTask(TaskState)
                0x00000000c0012c74                waitTask(int, int*, int)
                0x00000000c0012cb8                milliTenthSleepUntil(unsigned int)
                0x00000000c0012d48                milliTenthSleep(unsigned int)
                0x00000000c0012d58                sleep(unsigned int)
                0x00000000c0012d74                Semaphore::acquire()
                0x00000000c0012e30                taskReturned
                0x00000000c0012e6c                Thr::processFromPID(int)
                0x00000000c0012f0c                unblockTask(ThreadControlBlock*)
                0x00000000c0012fb0                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001327c                cleanerTaskFunction(void*)
                0x00000000c001336c                terminateTask(int)
                0x00000000c0013438                Thr::terminateFromIRQ(int)
                0x00000000c0013448                Semaphore::release()
 .text          0x00000000c0013585      0xb93 vm86/vm8086.32
                0x00000000c0013585                Vm::inbv(unsigned short)
                0x00000000c0013598                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00135ce                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00135de                Vm::getSegment(unsigned int)
                0x00000000c00135e6                Vm::getOffset(unsigned int)
                0x00000000c00135eb                Vm::mainloop2()
                0x00000000c0013625                Vm::mainVm8086Loop(void*)
                0x00000000c0013635                Vm::mainloop3(unsigned long)
                0x00000000c001365b                Vm::initialise8086()
                0x00000000c001369e                Vm::finish8086()
                0x00000000c00136ff                Vm::getOutput8086(unsigned char*)
                0x00000000c0013724                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00137dd                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0013945                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00139cf                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00139e0                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00139f2                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0013a03                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0013a18                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0013a2e                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0013a43                Vm::faultHandler(regs*)
 .text          0x00000000c0014118      0x8c5 arch/i386/hal.32
                0x00000000c0014118                noCopro(unsigned long)
                0x00000000c0014119                nmiHandler(regs*, void*)
                0x00000000c0014132                doubleFault(regs*, void*)
                0x00000000c001414b                displayDebugInfo(regs*)
                0x00000000c001446c                displayProgramFault(char const*)
                0x00000000c00144b8                gpFault(regs*, void*)
                0x00000000c001451d                pgFault(regs*, void*)
                0x00000000c001457f                otherISRHandler(regs*, void*)
                0x00000000c00145b3                opcodeFault(regs*, void*)
                0x00000000c0014633                i386SaveCoprocessor(void*)
                0x00000000c0014647                i386LoadCoprocessor(void*)
                0x00000000c001465b                x87EmulHandler(regs*, void*)
                0x00000000c00146f8                HalInitialiseCoprocessor()
                0x00000000c00147a6                HalPanic(char const*)
                0x00000000c00147ab                HalQueryPerformanceCounter()
                0x00000000c00147c6                HalInitialise()
                0x00000000c001496c                HalMakeBeep(int)
                0x00000000c00149a6                HalGetRand()
                0x00000000c00149a9                HalEndOfInterrupt(int)
                0x00000000c00149da                HalRestart()
                0x00000000c00149db                HalShutdown()
                0x00000000c00149dc                HalSleep()
 *fill*         0x00000000c00149dd        0x3 
 .text          0x00000000c00149e0      0x2f4 arch/i386/pic.32
                0x00000000c00149e0                picIoWait()
                0x00000000c00149e8                picDisable()
                0x00000000c0014a1c                picGetIRQReg(int)
                0x00000000c0014aa0                picOpen()
                0x00000000c0014c30                picEOI(int)
 .text          0x00000000c0014cd4      0x64d arch/i386/rtc.32
                0x00000000c0014cd4                RTC::open(int, int, void*)
                0x00000000c0014cd8                RTC::close(int, int, void*)
                0x00000000c0014cdc                RTC::timeInSecondsUTC()
                0x00000000c0014cee                RTC::timeInDatetimeUTC()
                0x00000000c0014d14                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0014d52                RTC::~RTC()
                0x00000000c0014d52                RTC::~RTC()
                0x00000000c0014d76                RTC::~RTC()
                0x00000000c0014da0                RTC::get_update_in_progress_flag()
                0x00000000c0014db8                RTC::completeRTCRefresh()
                0x00000000c0015070                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0015223                rtcIRQHandler(regs*, void*)
                0x00000000c0015268                RTC::RTC()
                0x00000000c0015268                RTC::RTC()
 *fill*         0x00000000c0015321        0x3 
 .text          0x00000000c0015324      0x203 arch/i386/vga.32
                0x00000000c0015324                HalConsoleScroll(int, int)
                0x00000000c001542c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0015498                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0015527        0x1 
 .text          0x00000000c0015528     0x13e7 fs/fat/vfslink.32
                0x00000000c0015528                FAT::getName()
                0x00000000c0015530                FAT::tell(void*, unsigned long long*)
                0x00000000c001556c                FAT::stat(void*, unsigned long long*)
                0x00000000c00155a8                FAT::~FAT()
                0x00000000c00155a8                FAT::~FAT()
                0x00000000c00155cc                FAT::~FAT()
                0x00000000c00155f4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0015698                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001575c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0015930                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0015b48                FAT::allocateSwapfile(char const*, int)
                0x00000000c0015d08                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0015e74                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0015ed4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0015f34                FAT::close(void*)
                0x00000000c0015f88                FAT::closeDir(void*)
                0x00000000c0015fdc                FAT::seek(void*, unsigned long long)
                0x00000000c0016034                fatWrapperReadDisk
                0x00000000c0016078                fatWrapperWriteDisk
                0x00000000c00160bc                fatWrapperIoctl
                0x00000000c00161d8                FAT::FAT()
                0x00000000c00161d8                FAT::FAT()
                0x00000000c001622c                FAT::fixFilepath(char*)
                0x00000000c0016268                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00163a0                FAT::openDir(char const*, void**)
                0x00000000c0016450                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0016548                FAT::unlink(char const*)
                0x00000000c00165c8                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0016754                FAT::rename(char const*, char const*)
                0x00000000c0016820                FAT::mkdir(char const*)
                0x00000000c00168a0                FAT::exists(char const*)
 *fill*         0x00000000c001690f        0x1 
 .text          0x00000000c0016910      0xba5 fs/iso9660/vfslink.32
                0x00000000c0016910                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016916                ISO9660::seek(void*, unsigned long long)
                0x00000000c0016946                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001696a                ISO9660::getName()
                0x00000000c0016970                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0016994                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001699a                ISO9660::unlink(char const*)
                0x00000000c00169a0                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00169a6                ISO9660::rename(char const*, char const*)
                0x00000000c00169ac                ISO9660::mkdir(char const*)
                0x00000000c00169b2                ISO9660::close(void*)
                0x00000000c00169d4                ISO9660::closeDir(void*)
                0x00000000c00169f6                ISO9660::~ISO9660()
                0x00000000c00169f6                ISO9660::~ISO9660()
                0x00000000c0016a1a                ISO9660::~ISO9660()
                0x00000000c0016a41                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0016a83                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0016afe                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0016b5e                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0016d62                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016fda                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001702e                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c0017204                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c0017292                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017340                ISO9660::exists(char const*)
                0x00000000c0017364                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c00173f8                ISO9660::openDir(char const*, void**)
                0x00000000c0017492                ISO9660::ISO9660()
                0x00000000c0017492                ISO9660::ISO9660()
 *fill*         0x00000000c00174b5        0x1 
 .text          0x00000000c00174b6      0x26c hal/sound/sndcard.32
                0x00000000c00174b6                SoundCard::beginPlayback()
                0x00000000c00174c4                SoundCard::stopPlayback()
                0x00000000c00174d2                SoundCard::SoundCard(char const*)
                0x00000000c00174d2                SoundCard::SoundCard(char const*)
                0x00000000c0017570                SoundCard::~SoundCard()
                0x00000000c0017570                SoundCard::~SoundCard()
                0x00000000c0017594                SoundCard::~SoundCard()
                0x00000000c00175be                SoundCard::configureRates(int, int, int)
                0x00000000c00175ee                SoundCard::getSamples16(int, short*)
                0x00000000c001764a                SoundCard::getSamples32(int, int*)
                0x00000000c00176d0                SoundCard::addChannel(SoundPort*)
                0x00000000c001770e                SoundCard::removeChannel(int)
 *fill*         0x00000000c0017722        0x2 
 .text          0x00000000c0017724      0x377 hal/sound/sndport.32
                0x00000000c0017724                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017724                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00177b0                SoundPort::~SoundPort()
                0x00000000c00177b0                SoundPort::~SoundPort()
                0x00000000c00177e4                SoundPort::unpause()
                0x00000000c00177f0                SoundPort::pause()
                0x00000000c00177fc                SoundPort::getBufferUsed()
                0x00000000c0017804                SoundPort::getBufferSize()
                0x00000000c001780c                SoundPort::buffer16(short*, int)
                0x00000000c0017898                SoundPort::buffer32(int*, int)
                0x00000000c0017920                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00179e4                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0017a9b        0x0 hw/bus/isa.32
 *fill*         0x00000000c0017a9b        0x1 
 .text          0x00000000c0017a9c      0xb49 hw/bus/pci.32
                0x00000000c0017a9c                PCI::open(int, int, void*)
                0x00000000c0017aba                PCI::close(int, int, void*)
                0x00000000c0017abe                PCI::PCI()
                0x00000000c0017abe                PCI::PCI()
                0x00000000c0017b58                PCI::readBAR8(unsigned int, int)
                0x00000000c0017b74                PCI::readBAR16(unsigned int, int)
                0x00000000c0017b92                PCI::readBAR32(unsigned int, int)
                0x00000000c0017bae                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0017bce                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0017bf0                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0017c10                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017c7e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017d26                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0017d4a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0017d72                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0017dbc                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0017de4                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0017e08                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0017e2c                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0017e54                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017eb8                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0017fa0                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001821a                PCI::checkBus(unsigned char)
                0x00000000c0018240                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c00183b2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018526                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018592                PCI::detect()
 *fill*         0x00000000c00185e5        0x1 
 .text          0x00000000c00185e6      0xb5a hw/diskctrl/ide.32
                0x00000000c00185e6                IDE::close(int, int, void*)
                0x00000000c00185ea                IDE::IDE()
                0x00000000c00185ea                IDE::IDE()
                0x00000000c001861e                IDE::prepareInterrupt(unsigned char)
                0x00000000c0018630                selectDrive(unsigned char, unsigned char)
                0x00000000c0018632                IDE::getBase(unsigned char)
                0x00000000c0018644                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0018704                IDE::read(unsigned char, unsigned char)
                0x00000000c00187b2                IDE::waitInterrupt(unsigned char)
                0x00000000c001881a                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0018836                ideChannel1IRQHandler(regs*, void*)
                0x00000000c0018852                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0018898                IDE::open(int, int, void*)
                0x00000000c0018ca6                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0018d72                IDE::detect()
                0x00000000c0019032                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c00190e2                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019140      0x320 hw/diskctrl/satabus.32
                0x00000000c0019140                SATABus::close(int, int, void*)
                0x00000000c0019144                SATABus::detect()
                0x00000000c0019146                SATABus::SATABus()
                0x00000000c0019146                SATABus::SATABus()
                0x00000000c00191cc                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c00191fe                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019246                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019266                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019290                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019396                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019440                SATABus::open(int, int, void*)
 .text          0x00000000c0019460      0x5f4 hw/diskphys/ata.32
                0x00000000c0019460                ATA::close(int, int, void*)
                0x00000000c0019484                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019486                ATA::ATA()
                0x00000000c0019486                ATA::ATA()
                0x00000000c00194b4                ATA::flush(bool)
                0x00000000c00194fe                ATA::readyForCommand()
                0x00000000c001954a                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c00198c6                ATA::read(unsigned long long, int, void*)
                0x00000000c0019912                ATA::write(unsigned long long, int, void*)
                0x00000000c001995e                ATA::detectCHS()
                0x00000000c0019988                ATA::open(int, int, void*)
 .text          0x00000000c0019a54      0x60e hw/diskphys/atapi.32
                0x00000000c0019a54                ATAPI::write(unsigned long long, int, void*)
                0x00000000c0019a5a                ATAPI::close(int, int, void*)
                0x00000000c0019a7e                ATAPI::ATAPI()
                0x00000000c0019a7e                ATAPI::ATAPI()
                0x00000000c0019aac                ATAPI::readyForCommand()
                0x00000000c0019afe                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0019dbe                ATAPI::diskRemoved()
                0x00000000c0019df8                ATAPI::eject()
                0x00000000c0019e40                ATAPI::diskInserted()
                0x00000000c0019e4c                ATAPI::detectMedia()
                0x00000000c0019f08                ATAPI::open(int, int, void*)
                0x00000000c0019fe8                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001a062      0x402 hw/diskphys/sata.32
                0x00000000c001a062                SATA::close(int, int, void*)
                0x00000000c001a086                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001a088                SATA::open(int, int, void*)
                0x00000000c001a132                SATA::SATA()
                0x00000000c001a132                SATA::SATA()
                0x00000000c001a160                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a3ac                SATA::read(unsigned long long, int, void*)
                0x00000000c001a3f8                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001a464      0x63d hw/diskphys/satapi.32
                0x00000000c001a464                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001a46a                SATAPI::close(int, int, void*)
                0x00000000c001a48e                SATAPI::SATAPI()
                0x00000000c001a48e                SATAPI::SATAPI()
                0x00000000c001a4bc                SATAPI::diskRemoved()
                0x00000000c001a4be                SATAPI::diskInserted()
                0x00000000c001a4da                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001a768                SATAPI::eject()
                0x00000000c001a7a4                SATAPI::detectMedia()
                0x00000000c001a8ce                SATAPI::open(int, int, void*)
                0x00000000c001a9ce                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001aaa1        0x1 
 .text          0x00000000c001aaa2      0x455 hw/intctrl/apic.32
                0x00000000c001aaa2                IOAPIC::close(int, int, void*)
                0x00000000c001aaa8                apicGetBase()
                0x00000000c001aaea                IOAPIC::IOAPIC()
                0x00000000c001aaea                IOAPIC::IOAPIC()
                0x00000000c001ab12                apicOpen()
                0x00000000c001ac78                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001acaa                IOAPIC::read(int)
                0x00000000c001acd2                IOAPIC::open(int, int, void*)
                0x00000000c001adc6                IOAPIC::write(int, int)
                0x00000000c001adf2                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001aef7        0x1 
 .text          0x00000000c001aef8       0xf0 hw/timer/apictimer.32
                0x00000000c001aef8                APICTimer::close(int, int, void*)
                0x00000000c001af00                apicTimerHandler(regs*, void*)
                0x00000000c001af28                APICTimer::open(int, int, void*)
                0x00000000c001af98                APICTimer::write(int)
                0x00000000c001afc0                APICTimer::APICTimer()
                0x00000000c001afc0                APICTimer::APICTimer()
 .text          0x00000000c001afe8      0x1aa hw/timer/pit.32
                0x00000000c001afe8                PIT::write(int)
                0x00000000c001b06c                pitHandler(regs*, void*)
                0x00000000c001b090                PIT::open(int, int, void*)
                0x00000000c001b0e0                PIT::close(int, int, void*)
                0x00000000c001b110                PIT::PIT()
                0x00000000c001b110                PIT::PIT()
 *fill*         0x00000000c001b192        0xe 
 .text          0x00000000c001b1a0       0x83 arch/i386/avx.32
                0x00000000c001b1a0                avxDetect
                0x00000000c001b1ca                avxSave
                0x00000000c001b1db                avxLoad
                0x00000000c001b1ec                avxInit
                0x00000000c001b20e                avxClose
                0x00000000c001b20f                wouldSheSayYes
 *fill*         0x00000000c001b223        0xd 
 .text          0x00000000c001b230      0x1d6 arch/i386/interrupt.32
                0x00000000c001b230                isr0
                0x00000000c001b240                isr1
                0x00000000c001b24a                isr2
                0x00000000c001b254                isr3
                0x00000000c001b25e                isr4
                0x00000000c001b268                isr5
                0x00000000c001b272                isr6
                0x00000000c001b27c                isr7
                0x00000000c001b286                isr8
                0x00000000c001b28e                isr9
                0x00000000c001b298                isr10
                0x00000000c001b2a0                isr11
                0x00000000c001b2a8                isr12
                0x00000000c001b2b0                isr13
                0x00000000c001b2b8                isr14
                0x00000000c001b2c0                isr15
                0x00000000c001b2ca                isr16
                0x00000000c001b2d4                isr17
                0x00000000c001b2de                isr18
                0x00000000c001b2e8                irq3
                0x00000000c001b2f2                irq4
                0x00000000c001b2fc                irq5
                0x00000000c001b306                irq6
                0x00000000c001b310                irq7
                0x00000000c001b31a                irq8
                0x00000000c001b324                irq9
                0x00000000c001b32e                irq10
                0x00000000c001b338                irq11
                0x00000000c001b342                irq12
                0x00000000c001b34c                irq13
                0x00000000c001b356                irq14
                0x00000000c001b360                irq15
                0x00000000c001b36a                irq1
                0x00000000c001b371                irq2
                0x00000000c001b378                isr96
                0x00000000c001b37f                irq0
                0x00000000c001b384                int_common_stub
                0x00000000c001b384                syscall_common_stub
                0x00000000c001b3b6                irq16
                0x00000000c001b3c0                irq17
                0x00000000c001b3ca                irq18
                0x00000000c001b3d4                irq19
                0x00000000c001b3de                irq20
                0x00000000c001b3e8                irq21
                0x00000000c001b3f2                irq22
                0x00000000c001b3fc                irq23
 *fill*         0x00000000c001b406        0xa 
 .text          0x00000000c001b410       0x10 arch/i386/rdrand.32
                0x00000000c001b410                i386GetRDRAND
 .text          0x00000000c001b420       0x39 arch/i386/sse.32
                0x00000000c001b420                absolutelyNoChanceInHell
                0x00000000c001b420                sseDetect
                0x00000000c001b438                sseSave
                0x00000000c001b440                sseLoad
                0x00000000c001b448                sseInit
                0x00000000c001b458                sseClose
 *fill*         0x00000000c001b459        0x7 
 .text          0x00000000c001b460       0x49 arch/i386/x87.32
                0x00000000c001b466                x87Detect
                0x00000000c001b481                x87Save
                0x00000000c001b488                x87Load
                0x00000000c001b48f                x87Init
                0x00000000c001b4a8                x87Close
 *fill*         0x00000000c001b4a9        0x3 
 .text          0x00000000c001b4ac       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001b4d1        0x0 crtn.32
 *fill*         0x00000000c001b4d1        0x3 
 .text          0x00000000c001b4d4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001b4d4                __divdi3
 *fill*         0x00000000c001b61f        0x1 
 .text          0x00000000c001b620      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001b620                __moddi3
 *fill*         0x00000000c001b79e        0x2 
 .text          0x00000000c001b7a0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001b7a0                __udivdi3
 *fill*         0x00000000c001b89f        0x1 
 .text          0x00000000c001b8a0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001b8a0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001b9c0        0x0
 .iplt          0x00000000c001b9c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001b9ba        0xf
 .init          0x00000000c001b9ba        0x3 crti.32
                0x00000000c001b9ba                _init
 .init          0x00000000c001b9bd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001b9c2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001b9c7        0x2 crtn.32

.fini           0x00000000c001b9c9        0xa
 .fini          0x00000000c001b9c9        0x3 crti.32
                0x00000000c001b9c9                _fini
 .fini          0x00000000c001b9cc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001b9d1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001b9d4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001b9d4       0x23 core/computer.32
                0x00000000c001b9d4                Computer::~Computer()
                0x00000000c001b9d4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001b9f8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001b9f8       0x2a core/computer.32
                0x00000000c001b9f8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001ba22       0x21
 .text._Z10idleCommonv
                0x00000000c001ba22       0x21 core/idle.32
                0x00000000c001ba22                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ba44        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ba44        0x2 core/unixfile.32
                0x00000000c001ba44                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001ba44                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ba46       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ba46       0x42 core/unixfile.32
                0x00000000c001ba46                LinkedList<UnixFile>::LinkedList()
                0x00000000c001ba46                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ba88       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ba88       0xd3 core/unixfile.32
                0x00000000c001ba88                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001bb5c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001bb5c        0x7 core/unixfile.32
                0x00000000c001bb5c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001bb64       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001bb64       0xa1 core/unixfile.32
                0x00000000c001bb64                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001bc06        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001bc06        0x8 core/unixfile.32
                0x00000000c001bc06                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001bc0e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001bc0e       0x1a hal/device.32
                0x00000000c001bc0e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001bc0e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001bc28       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001bc28       0x2a hal/device.32
                0x00000000c001bc28                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001bc52       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001bc52       0xdc hal/device.32
                0x00000000c001bc52                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001bd2e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001bd2e       0x42 hal/device.32
                0x00000000c001bd2e                LinkedList<Device>::LinkedList()
                0x00000000c001bd2e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001bd70       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001bd70       0x1c hal/timer.32
                0x00000000c001bd70                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001bd8c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001bd8c        0x7 hal/timer.32
                0x00000000c001bd8c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001bd94       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001bd94       0xb8 hal/timer.32
                0x00000000c001bd94                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001be4c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001be4c       0xda hal/timer.32
                0x00000000c001be4c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001bf28       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001bf28       0x23 hw/acpi.32
                0x00000000c001bf28                ACPI::~ACPI()
                0x00000000c001bf28                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001bf4c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001bf4c       0x2a hw/acpi.32
                0x00000000c001bf4c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001bf78        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001bf78        0x2 hw/acpi.32
                0x00000000c001bf78                LinkedList<Device>::~LinkedList()
                0x00000000c001bf78                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001bf7c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001bf7c       0x1c hw/acpi.32
                0x00000000c001bf7c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001bf98        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001bf98        0x7 hw/acpi.32
                0x00000000c001bf98                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001bfa0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001bfa0       0xb8 hw/acpi.32
                0x00000000c001bfa0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001c058       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001c058       0x23 hw/cpu.32
                0x00000000c001c058                CPU::~CPU()
                0x00000000c001c058                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001c07c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001c07c       0x2a hw/cpu.32
                0x00000000c001c07c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c0a8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c0a8        0x2 thr/prcssthr.32
                0x00000000c001c0a8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001c0a8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c0ac       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c0ac       0x49 thr/prcssthr.32
                0x00000000c001c0ac                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001c0ac                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c0f8       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c0f8       0x42 thr/prcssthr.32
                0x00000000c001c0f8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001c0f8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c13c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c13c        0x8 thr/prcssthr.32
                0x00000000c001c13c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001c144       0x23
 .text._ZN3PCID2Ev
                0x00000000c001c144       0x23 hw/bus/pci.32
                0x00000000c001c144                PCI::~PCI()
                0x00000000c001c144                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001c168       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001c168       0x2a hw/bus/pci.32
                0x00000000c001c168                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001c192       0x23
 .text._ZN3IDED2Ev
                0x00000000c001c192       0x23 hw/diskctrl/ide.32
                0x00000000c001c192                IDE::~IDE()
                0x00000000c001c192                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001c1b6       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001c1b6       0x2a hw/diskctrl/ide.32
                0x00000000c001c1b6                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001c1e0       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001c1e0       0x23 hw/diskctrl/satabus.32
                0x00000000c001c1e0                SATABus::~SATABus()
                0x00000000c001c1e0                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001c204       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001c204       0x2a hw/diskctrl/satabus.32
                0x00000000c001c204                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001c22e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001c22e       0x23 hw/diskphys/ata.32
                0x00000000c001c22e                ATA::~ATA()
                0x00000000c001c22e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001c252       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001c252       0x2a hw/diskphys/ata.32
                0x00000000c001c252                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001c27c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001c27c       0x23 hw/diskphys/atapi.32
                0x00000000c001c27c                ATAPI::~ATAPI()
                0x00000000c001c27c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001c2a0       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001c2a0       0x2a hw/diskphys/atapi.32
                0x00000000c001c2a0                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001c2ca       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001c2ca       0x23 hw/diskphys/sata.32
                0x00000000c001c2ca                SATA::~SATA()
                0x00000000c001c2ca                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001c2ee       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001c2ee       0x2a hw/diskphys/sata.32
                0x00000000c001c2ee                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001c318       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001c318       0x23 hw/diskphys/satapi.32
                0x00000000c001c318                SATAPI::~SATAPI()
                0x00000000c001c318                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001c33c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001c33c       0x2a hw/diskphys/satapi.32
                0x00000000c001c33c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001c366       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001c366       0x23 hw/intctrl/apic.32
                0x00000000c001c366                IOAPIC::~IOAPIC()
                0x00000000c001c366                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001c38a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001c38a       0x2a hw/intctrl/apic.32
                0x00000000c001c38a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001c3b4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001c3b4       0x23 hw/timer/apictimer.32
                0x00000000c001c3b4                APICTimer::~APICTimer()
                0x00000000c001c3b4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001c3d8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001c3d8       0x2a hw/timer/apictimer.32
                0x00000000c001c3d8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001c404       0x23
 .text._ZN3PITD2Ev
                0x00000000c001c404       0x23 hw/timer/pit.32
                0x00000000c001c404                PIT::~PIT()
                0x00000000c001c404                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001c428       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001c428       0x2a hw/timer/pit.32
                0x00000000c001c428                PIT::~PIT()

.rodata         0x00000000c001c452     0x2922
                0x00000000c001c452                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001c452        0x2 
 .ctors         0x00000000c001c454        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001c458        0x4 core/unixfile.32
 .ctors         0x00000000c001c45c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001c460        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c464                end_ctors = .
                0x00000000c001c464                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001c464        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001c468        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c468                __DTOR_END__
                0x00000000c001c46c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001c46c       0x14 
 .rodata        0x00000000c001c480      0x101 acpica/utclib.32
                0x00000000c001c480                AcpiGbl_Ctypes
 *fill*         0x00000000c001c581        0x3 
 .rodata        0x00000000c001c584       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001c59c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001c5e6       0x1a 
 .rodata        0x00000000c001c600       0xed fs/fat/ff.32
 *fill*         0x00000000c001c6ed       0x13 
 .rodata        0x00000000c001c700      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001cb00       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001cb49      0x115 core/computer.32
 *fill*         0x00000000c001cc5e        0x2 
 .rodata.str1.4
                0x00000000c001cc60       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001ccc8       0x2c core/computer.32
                0x00000000c001ccc8                vtable for Computer
 .rodata.str1.4
                0x00000000c001ccf4       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001cd24        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001cd30       0x17 core/main.32
 *fill*         0x00000000c001cd47        0x1 
 .rodata.str1.4
                0x00000000c001cd48       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001cded       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001ce45       0x39 core/pipe.32
 *fill*         0x00000000c001ce7e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001ce80       0x1c core/pipe.32
                0x00000000c001ce80                vtable for Pipe
 .rodata.str1.1
                0x00000000c001ce9c       0x69 core/terminal.32
 *fill*         0x00000000c001cf05        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001cf08       0x1c core/terminal.32
                0x00000000c001cf08                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001cf24       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001cf46       0x15 core/unixfile.32
 *fill*         0x00000000c001cf5b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001cf5c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001cfa7        0x8 core/unixfile.32
 *fill*         0x00000000c001cfaf        0x1 
 .rodata.str1.4
                0x00000000c001cfb0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001cfd0       0x1c core/unixfile.32
                0x00000000c001cfd0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001cfec       0x1c core/unixfile.32
                0x00000000c001cfec                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001d008      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d16f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d276       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001d2a9       0x11 dbg/kconsole.32
 *fill*         0x00000000c001d2a9        0x3 
 .rodata        0x00000000c001d2ac      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001d3fc       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001d3fc       0x68 fs/vfs.32
                0x00000000c001d3fc                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001d464       0x1c fs/vfs.32
                0x00000000c001d464                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001d480       0x1c fs/vfs.32
                0x00000000c001d480                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001d49c       0x2c hal/bus.32
                0x00000000c001d49c                vtable for Bus
 .rodata.str1.1
                0x00000000c001d4c8       0x1e hal/clock.32
 *fill*         0x00000000c001d4e6        0x2 
 .rodata._ZTV5Clock
                0x00000000c001d4e8       0x3c hal/clock.32
                0x00000000c001d4e8                vtable for Clock
 *fill*         0x00000000c001d524       0x1c 
 .rodata        0x00000000c001d540       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001d570       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001d5c8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001d5c8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001d5c8       0x2c hal/device.32
                0x00000000c001d5c8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001d5f4       0x2c hal/device.32
                0x00000000c001d5f4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001d620       0x2c hal/diskctrl.32
                0x00000000c001d620                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001d64c       0x38 hal/diskphys.32
                0x00000000c001d64c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001d684       0x3e hal/intctrl.32
 *fill*         0x00000000c001d6c2        0x2 
 .rodata.str1.4
                0x00000000c001d6c4       0x5d hal/intctrl.32
 .rodata        0x00000000c001d721       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001d774       0x34 hal/keybrd.32
                0x00000000c001d774                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001d7a8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001d7ec       0x2c hal/logidisk.32
                0x00000000c001d7ec                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001d818       0x2c hal/mouse.32
                0x00000000c001d818                vtable for Mouse
 .rodata.str1.1
                0x00000000c001d844        0xb hal/partition.32
 *fill*         0x00000000c001d84f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001d850       0x44 hal/serial.32
                0x00000000c001d850                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001d894       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001d894        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001d894       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001d894       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001d894       0x30 hal/timer.32
                0x00000000c001d894                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001d8c4       0x10 hal/vcache.32
                0x00000000c001d8c4                vtable for VCache
 .rodata.str1.1
                0x00000000c001d8d4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001d93c       0x48 hal/video.32
                0x00000000c001d93c                vtable for Video
 .rodata.str1.4
                0x00000000c001d984       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001da1f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001db5b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001db5b        0x8 hw/acpi.32
 *fill*         0x00000000c001db5b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001db5c       0x2c hw/acpi.32
                0x00000000c001db5c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001db88      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001dcf5        0x3 
 .rodata._ZTV3CPU
                0x00000000c001dcf8       0x2c hw/cpu.32
                0x00000000c001dcf8                vtable for CPU
 .rodata.str1.1
                0x00000000c001dd24       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001dd60       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 .rodata.str1.4
                0x00000000c001de00      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c001df3e       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001df83        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001df8d       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001dfe1       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001e00d       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e055      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001e221       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001e278      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e384       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e384       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e384       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e384        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001e384       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001e424       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001e454      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001e562        0x2 
 .rodata.str1.4
                0x00000000c001e564       0x4b arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001e5af       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001e5c4       0x3c arch/i386/rtc.32
                0x00000000c001e5c4                vtable for RTC
 .rodata.str1.1
                0x00000000c001e600       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001e641        0x3 
 .rodata._ZTV3FAT
                0x00000000c001e644       0x68 fs/fat/vfslink.32
                0x00000000c001e644                vtable for FAT
 .rodata.str1.1
                0x00000000c001e6ac       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c001e6c7        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c001e6c8       0x68 fs/iso9660/vfslink.32
                0x00000000c001e6c8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001e730       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001e774       0x34 hal/sound/sndcard.32
                0x00000000c001e774                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001e7a8       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001e7e7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001e81f       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001e8c0       0x2c hw/bus/pci.32
                0x00000000c001e8c0                vtable for PCI
 .rodata.str1.1
                0x00000000c001e8ec       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001e973        0x1 
 .rodata._ZTV3IDE
                0x00000000c001e974       0x2c hw/diskctrl/ide.32
                0x00000000c001e974                vtable for IDE
 .rodata.str1.4
                0x00000000c001e9a0       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001e9c4       0x2c hw/diskctrl/satabus.32
                0x00000000c001e9c4                vtable for SATABus
 .rodata.str1.1
                0x00000000c001e9f0       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001ea02        0x2 
 .rodata._ZTV3ATA
                0x00000000c001ea04       0x38 hw/diskphys/ata.32
                0x00000000c001ea04                vtable for ATA
 .rodata.str1.1
                0x00000000c001ea3c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001ea49        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001ea4c       0x38 hw/diskphys/atapi.32
                0x00000000c001ea4c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001ea84       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001eb00       0x38 hw/diskphys/sata.32
                0x00000000c001eb00                vtable for SATA
 .rodata.str1.1
                0x00000000c001eb38      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c001ec6a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c001ec6c       0x38 hw/diskphys/satapi.32
                0x00000000c001ec6c                vtable for SATAPI
 .rodata        0x00000000c001eca4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001ecac       0x2c hw/intctrl/apic.32
                0x00000000c001ecac                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001ecd8       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001ecf3        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001ecf4       0x30 hw/timer/apictimer.32
                0x00000000c001ecf4                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001ed24       0x1d hw/timer/pit.32
 *fill*         0x00000000c001ed41        0x3 
 .rodata._ZTV3PIT
                0x00000000c001ed44       0x30 hw/timer/pit.32
                0x00000000c001ed44                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001ed74      0x261
 *(.data)
 .data          0x00000000c001ed74        0x0 crti.32
 .data          0x00000000c001ed74        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001ed74                __dso_handle
 .data          0x00000000c001ed78        0x0 acpica/utclib.32
 .data          0x00000000c001ed78        0x0 core/malloc.32
 .data          0x00000000c001ed78        0x0 libk/string.32
 .data          0x00000000c001ed78        0x0 fs/fat/diskio.32
 .data          0x00000000c001ed78        0x0 fs/fat/ff.32
 .data          0x00000000c001ed78        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001ed78        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001ed78        0x0 compat/inlines.32
 .data          0x00000000c001ed78        0x0 compat/resolve.32
 .data          0x00000000c001ed78        0x0 core/computer.32
 .data          0x00000000c001ed78        0x0 core/gdt.32
 .data          0x00000000c001ed78        0x0 core/idle.32
 .data          0x00000000c001ed78        0x0 core/idt.32
 .data          0x00000000c001ed78        0x4 core/kheap.32
 *fill*         0x00000000c001ed7c        0x4 
 .data          0x00000000c001ed80      0x142 core/main.32
                0x00000000c001ed80                titleScreen
 *fill*         0x00000000c001eec2        0x2 
 .data          0x00000000c001eec4        0x4 core/physmgr.32
                0x00000000c001eec4                Phys::bitmap
 .data          0x00000000c001eec8        0x0 core/pipe.32
 *fill*         0x00000000c001eec8       0x18 
 .data          0x00000000c001eee0       0x60 core/terminal.32
                0x00000000c001eee0                VgaText::hiddenOut
                0x00000000c001ef00                ansiToVGAMappings
 .data          0x00000000c001ef40        0x0 core/tss.32
 .data          0x00000000c001ef40        0x4 core/unixfile.32
                0x00000000c001ef40                UnixFile::nextFd
 .data          0x00000000c001ef44       0x15 core/virtmgr.32
                0x00000000c001ef44                Virt::pageAllocPtr
                0x00000000c001ef48                Virt::bitmap
                0x00000000c001ef4c                Virt::swapfileSectorsPerPage
                0x00000000c001ef50                Virt::swapfileLength
                0x00000000c001ef54                Virt::swapfileSector
                0x00000000c001ef58                Virt::swapfileDrive
 *fill*         0x00000000c001ef59        0x3 
 .data          0x00000000c001ef5c        0x4 coreobjs/c++.32
                0x00000000c001ef5c                __stack_chk_guard
 .data          0x00000000c001ef60        0x0 dbg/kconsole.32
 .data          0x00000000c001ef60        0x0 fs/vfs.32
 .data          0x00000000c001ef60        0x0 hal/bus.32
 .data          0x00000000c001ef60        0x0 hal/buzzer.32
 .data          0x00000000c001ef60        0x0 hal/clock.32
 .data          0x00000000c001ef60        0x0 hal/device.32
 .data          0x00000000c001ef60        0x0 hal/diskctrl.32
 .data          0x00000000c001ef60        0x0 hal/diskphys.32
 .data          0x00000000c001ef60        0x0 hal/fpu.32
 .data          0x00000000c001ef60        0x0 hal/intctrl.32
 .data          0x00000000c001ef60        0x0 hal/keybrd.32
 .data          0x00000000c001ef60        0x0 hal/logidisk.32
 .data          0x00000000c001ef60        0x0 hal/mouse.32
 .data          0x00000000c001ef60        0x0 hal/partition.32
 .data          0x00000000c001ef60        0x0 hal/serial.32
 .data          0x00000000c001ef60        0x0 hal/timer.32
 .data          0x00000000c001ef60        0x0 hal/vcache.32
 .data          0x00000000c001ef60        0x0 hal/video.32
 .data          0x00000000c001ef60       0x10 hw/acpi.32
                0x00000000c001ef60                legacyIRQRemaps
 .data          0x00000000c001ef70        0x4 hw/cpu.32
                0x00000000c001ef70                lastCode
 .data          0x00000000c001ef74        0x0 hw/smp.32
 *fill*         0x00000000c001ef74        0xc 
 .data          0x00000000c001ef80       0x4d krnl/env.32
                0x00000000c001ef80                defaultSysEnv
 .data          0x00000000c001efcd        0x0 krnl/panic.32
 .data          0x00000000c001efcd        0x0 krnl/powctrl.32
 .data          0x00000000c001efcd        0x0 reg/registry.32
 .data          0x00000000c001efcd        0x0 sys/sc_eject.32
 .data          0x00000000c001efcd        0x0 sys/sc_exit.32
 .data          0x00000000c001efcd        0x0 sys/sc_getcwd.32
 .data          0x00000000c001efcd        0x0 sys/sc_getpid.32
 .data          0x00000000c001efcd        0x0 sys/sc_getramdata.32
 .data          0x00000000c001efcd        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001efcd        0x0 sys/sc_loaddll.32
 .data          0x00000000c001efcd        0x0 sys/sc_read.32
 .data          0x00000000c001efcd        0x0 sys/sc_sbrk.32
 .data          0x00000000c001efcd        0x0 sys/sc_setcwd.32
 .data          0x00000000c001efcd        0x0 sys/sc_settime.32
 .data          0x00000000c001efcd        0x0 sys/sc_timezone.32
 .data          0x00000000c001efcd        0x0 sys/sc_write.32
 .data          0x00000000c001efcd        0x0 sys/sc_wsbe.32
 .data          0x00000000c001efcd        0x0 sys/sc_yield.32
 .data          0x00000000c001efcd        0x0 sys/syscalls.32
 .data          0x00000000c001efcd        0x0 thr/elf.32
 *fill*         0x00000000c001efcd        0x3 
 .data          0x00000000c001efd0        0x4 thr/prcssthr.32
                0x00000000c001efd0                Thr::nextPID
 .data          0x00000000c001efd4        0x0 vm86/vm8086.32
 .data          0x00000000c001efd4        0x0 arch/i386/hal.32
 .data          0x00000000c001efd4        0x0 arch/i386/pic.32
 .data          0x00000000c001efd4        0x0 arch/i386/rtc.32
 .data          0x00000000c001efd4        0x0 arch/i386/vga.32
 .data          0x00000000c001efd4        0x0 fs/fat/vfslink.32
 .data          0x00000000c001efd4        0x1 fs/iso9660/vfslink.32
                0x00000000c001efd4                recentDriveletter
 .data          0x00000000c001efd5        0x0 hal/sound/sndcard.32
 .data          0x00000000c001efd5        0x0 hal/sound/sndport.32
 .data          0x00000000c001efd5        0x0 hw/bus/isa.32
 .data          0x00000000c001efd5        0x0 hw/bus/pci.32
 .data          0x00000000c001efd5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001efd5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001efd5        0x0 hw/diskphys/ata.32
 .data          0x00000000c001efd5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001efd5        0x0 hw/diskphys/sata.32
 .data          0x00000000c001efd5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001efd5        0x0 hw/intctrl/apic.32
 .data          0x00000000c001efd5        0x0 hw/timer/apictimer.32
 .data          0x00000000c001efd5        0x0 hw/timer/pit.32
 .data          0x00000000c001efd5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001efd5        0x0 crtn.32
 .data          0x00000000c001efd5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001efd5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001efd5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001efd5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001efd8        0x0
 .got           0x00000000c001efd8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001efd8        0x0
 .got.plt       0x00000000c001efd8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001efd8        0x0
 .igot.plt      0x00000000c001efd8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001efd8        0x0
 .tm_clone_table
                0x00000000c001efd8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001efd8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001efd5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001efd5        0x3 
 .eh_frame      0x00000000c001efd8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001efd8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001efd8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001f030       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001f070       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001f0dc       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001f160        0x0
 .rel.got       0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001f160        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001f160     0x4368
                0x00000000c001f160                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c001f160        0x0 crti.32
 .bss           0x00000000c001f160       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001f180        0x4 acpica/utclib.32
 *fill*         0x00000000c001f184       0x1c 
 .bss           0x00000000c001f1a0      0x378 core/malloc.32
 .bss           0x00000000c001f518        0x0 libk/string.32
 .bss           0x00000000c001f518        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001f518        0x8 
 .bss           0x00000000c001f520       0x88 fs/fat/ff.32
 .bss           0x00000000c001f5a8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001f5a8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c001f5a8        0x0 compat/inlines.32
 .bss           0x00000000c001f5a8        0x0 compat/resolve.32
 .bss           0x00000000c001f5a8        0x6 core/computer.32
                0x00000000c001f5a8                Krnl::computer
                0x00000000c001f5ac                Krnl::preemptionOn
                0x00000000c001f5ad                Krnl::schedulingOn
 *fill*         0x00000000c001f5ae        0x2 
 .bss           0x00000000c001f5b0        0x6 core/gdt.32
                0x00000000c001f5b0                gdtDescr
 .bss           0x00000000c001f5b6        0x0 core/idle.32
 *fill*         0x00000000c001f5b6        0x2 
 .bss           0x00000000c001f5b8        0x6 core/idt.32
                0x00000000c001f5b8                idtDescr
 .bss           0x00000000c001f5be        0x0 core/kheap.32
 *fill*         0x00000000c001f5be        0x2 
 .bss           0x00000000c001f5c0        0x4 core/main.32
                0x00000000c001f5c0                sysBootSettings
 .bss           0x00000000c001f5c4       0x29 core/physmgr.32
                0x00000000c001f5c4                Phys::forbidEvictions
                0x00000000c001f5c8                Phys::currentPagePointer
                0x00000000c001f5cc                Phys::highestMem
                0x00000000c001f5d0                Phys::oldPercent
                0x00000000c001f5d4                Phys::usedPages
                0x00000000c001f5d8                Phys::usablePages
                0x00000000c001f5dc                Phys::dmaUsage
 .bss           0x00000000c001f5ed        0x0 core/pipe.32
 *fill*         0x00000000c001f5ed        0x3 
 .bss           0x00000000c001f5f0        0x9 core/terminal.32
                0x00000000c001f5f0                terminalCycle
                0x00000000c001f5f4                activeTerminal
                0x00000000c001f5f8                VgaText::graphicMode
 *fill*         0x00000000c001f5f9        0x1 
 .bss           0x00000000c001f5fa        0x2 core/tss.32
                0x00000000c001f5fa                doubleFaultSelector
 *fill*         0x00000000c001f5fc        0x4 
 .bss           0x00000000c001f600       0x84 core/unixfile.32
                0x00000000c001f600                sfileLpt
                0x00000000c001f640                sfileCom
                0x00000000c001f664                sfileNul
                0x00000000c001f668                sfilePnt
                0x00000000c001f66c                sfileAux
                0x00000000c001f670                sfileCon
                0x00000000c001f674                initialFilesAdded
                0x00000000c001f678                unixFileLinkedList
 .bss           0x00000000c001f684       0x14 core/virtmgr.32
                0x00000000c001f684                twswaps
                0x00000000c001f688                swapBalance
                0x00000000c001f68c                panicVAS
                0x00000000c001f690                Virt::swapfileBitmap
                0x00000000c001f694                firstVAS
 .bss           0x00000000c001f698        0x0 coreobjs/c++.32
 .bss           0x00000000c001f698        0x0 dbg/kconsole.32
 .bss           0x00000000c001f698        0x4 fs/vfs.32
                0x00000000c001f698                installedFilesystems
 .bss           0x00000000c001f69c        0x0 hal/bus.32
 .bss           0x00000000c001f69c        0x0 hal/buzzer.32
 .bss           0x00000000c001f69c        0x8 hal/clock.32
                0x00000000c001f69c                User::dstOn
                0x00000000c001f69d                User::timezoneHalfHourOffset
                0x00000000c001f6a0                User::timezoneHourOffset
 .bss           0x00000000c001f6a4        0x0 hal/device.32
 .bss           0x00000000c001f6a4        0x0 hal/diskctrl.32
 .bss           0x00000000c001f6a4        0x0 hal/diskphys.32
 .bss           0x00000000c001f6a4        0x0 hal/fpu.32
 *fill*         0x00000000c001f6a4       0x1c 
 .bss           0x00000000c001f6c0     0x2000 hal/intctrl.32
                0x00000000c001f6c0                INT_contexts
                0x00000000c00206c0                INT_handlers
 .bss           0x00000000c00216c0      0x429 hal/keybrd.32
                0x00000000c00216c0                keyboardWaitingTaskList
                0x00000000c00216c4                keyboardSetupYet
                0x00000000c00216c8                guiKeyboardHandler
                0x00000000c00216e0                keystates
 *fill*         0x00000000c0021ae9       0x17 
 .bss           0x00000000c0021b00       0x88 hal/logidisk.32
                0x00000000c0021b00                diskAssignments
                0x00000000c0021b20                disks
 .bss           0x00000000c0021b88        0x4 hal/mouse.32
                0x00000000c0021b88                guiMouseHandler
 .bss           0x00000000c0021b8c        0x0 hal/partition.32
 .bss           0x00000000c0021b8c        0x0 hal/serial.32
 .bss           0x00000000c0021b8c        0x4 hal/timer.32
                0x00000000c0021b8c                milliTenthsSinceBoot
 .bss           0x00000000c0021b90        0x0 hal/vcache.32
 .bss           0x00000000c0021b90        0x4 hal/video.32
                0x00000000c0021b90                screen
 *fill*         0x00000000c0021b94        0xc 
 .bss           0x00000000c0021ba0      0x480 hw/acpi.32
                0x00000000c0021ba0                systemSleepFunction
                0x00000000c0021ba4                systemResetFunction
                0x00000000c0021ba8                systemShutdownFunction
                0x00000000c0021bac                nextACPITable
                0x00000000c0021bc0                acpiTables
                0x00000000c0021dc0                usingXSDT
                0x00000000c0021dc4                MADTpointer
                0x00000000c0021dc8                RSDTpointer
                0x00000000c0021dcc                RSDPpointer
                0x00000000c0021dd0                nextAPICNMI
                0x00000000c0021de0                apicNMIInfo
                0x00000000c0021e60                legacyIRQFlags
                0x00000000c0021e80                ioapicDiscoveryNumber
                0x00000000c0021ea0                ioapicFoundInMADT
                0x00000000c0021ec0                ioapicAddresses
                0x00000000c0021f40                ioapicGSIBase
                0x00000000c0021fc0                processorDiscoveryNumber
                0x00000000c0021fe0                matchingAPICID
                0x00000000c0022000                processorID
 .bss           0x00000000c0022020       0x10 hw/cpu.32
                0x00000000c0022020                lastD
                0x00000000c0022024                lastC
                0x00000000c0022028                lastB
                0x00000000c002202c                lastA
 .bss           0x00000000c0022030        0x1 hw/smp.32
                0x00000000c0022030                Krnl::bspID
 *fill*         0x00000000c0022031        0x3 
 .bss           0x00000000c0022034        0x8 krnl/env.32
                0x00000000c0022034                Krnl::userEnv
                0x00000000c0022038                Krnl::systemEnv
 .bss           0x00000000c002203c        0x9 krnl/panic.32
                0x00000000c002203c                Krnl::guiProgramFaultHandler
                0x00000000c0022040                Krnl::guiPanicHandler
                0x00000000c0022044                Krnl::kernelInPanic
 *fill*         0x00000000c0022045       0x1b 
 .bss           0x00000000c0022060       0x48 krnl/powctrl.32
                0x00000000c0022060                Krnl::powCtrlOnBattery
                0x00000000c0022080                Krnl::currentPowerSettings
                0x00000000c00220a4                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c00220a8        0x0 reg/registry.32
 .bss           0x00000000c00220a8        0x0 sys/sc_eject.32
 .bss           0x00000000c00220a8        0x0 sys/sc_exit.32
 .bss           0x00000000c00220a8        0x0 sys/sc_getcwd.32
 .bss           0x00000000c00220a8        0x0 sys/sc_getpid.32
 .bss           0x00000000c00220a8        0x0 sys/sc_getramdata.32
 .bss           0x00000000c00220a8        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c00220a8        0x0 sys/sc_loaddll.32
 .bss           0x00000000c00220a8        0x0 sys/sc_read.32
 .bss           0x00000000c00220a8        0x0 sys/sc_sbrk.32
 .bss           0x00000000c00220a8        0x0 sys/sc_setcwd.32
 .bss           0x00000000c00220a8        0x0 sys/sc_settime.32
 .bss           0x00000000c00220a8        0x0 sys/sc_timezone.32
 .bss           0x00000000c00220a8        0x0 sys/sc_write.32
 .bss           0x00000000c00220a8        0x0 sys/sc_wsbe.32
 .bss           0x00000000c00220a8        0x0 sys/sc_yield.32
 *fill*         0x00000000c00220a8       0x18 
 .bss           0x00000000c00220c0      0x200 sys/syscalls.32
                0x00000000c00220c0                systemCallHandlers
 .bss           0x00000000c00222c0      0x7a4 thr/elf.32
                0x00000000c00222c0                Thr::driverLookupNext
                0x00000000c00222e0                Thr::driverLookupLen
                0x00000000c00224e0                Thr::driverLookupAddr
                0x00000000c00226e0                Thr::driverNameLookup
                0x00000000c00228e0                Thr::kernelSymbols
                0x00000000c0022960                Thr::kernelStringTable
                0x00000000c00229e0                Thr::kernelSymbolTable
                0x00000000c0022a60                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0022a64        0x4 
 .bss           0x00000000c0022a68       0x68 thr/prcssthr.32
                0x00000000c0022a68                cleanerThread
                0x00000000c0022a6c                weNeedTheCleanerToNotBlock
                0x00000000c0022a70                retValLockStuff
                0x00000000c0022a74                retValSchedLock
                0x00000000c0022a78                lockStuffLock
                0x00000000c0022a7c                schedulerLock
                0x00000000c0022a80                taskSwitchesPostponedFlag
                0x00000000c0022a84                postponeTaskSwitchesCounter
                0x00000000c0022a88                irqDisableCounter
                0x00000000c0022a8c                terminatedTaskList
                0x00000000c0022a98                sleepingTaskList
                0x00000000c0022aa4                taskList
                0x00000000c0022ab0                kernelProcess
 *fill*         0x00000000c0022ad0       0x10 
 .bss           0x00000000c0022ae0       0x40 vm86/vm8086.32
                0x00000000c0022ae0                Vm::vmRetV
                0x00000000c0022ae4                Vm::vmDone
                0x00000000c0022ae5                Vm::vmReady
                0x00000000c0022ae8                Vm::vm86Thread
                0x00000000c0022aec                Vm::vmToHostCommsPtr
                0x00000000c0022b00                Vm::vmToHostComms
 .bss           0x00000000c0022b20       0x14 arch/i386/hal.32
                0x00000000c0022b20                apic
                0x00000000c0022b24                fpuOwner
                0x00000000c0022b28                coproLoadFunc
                0x00000000c0022b2c                coproSaveFunc
                0x00000000c0022b30                gpFaultIntercept
 .bss           0x00000000c0022b34        0x0 arch/i386/pic.32
 .bss           0x00000000c0022b34        0x2 arch/i386/rtc.32
 .bss           0x00000000c0022b36        0x0 arch/i386/vga.32
 *fill*         0x00000000c0022b36        0xa 
 .bss           0x00000000c0022b40       0xf0 fs/fat/vfslink.32
                0x00000000c0022b40                FAT::fats
                0x00000000c0022b60                FAT::vfsToFatRemaps
                0x00000000c0022be0                fatToVFSRemaps
 *fill*         0x00000000c0022c30       0x10 
 .bss           0x00000000c0022c40      0x820 fs/iso9660/vfslink.32
                0x00000000c0022c40                recentSector
                0x00000000c0022c60                recentBuffer
 .bss           0x00000000c0023460        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0023460        0x0 hal/sound/sndport.32
 .bss           0x00000000c0023460        0x0 hw/bus/isa.32
 .bss           0x00000000c0023460        0xd hw/bus/pci.32
                0x00000000c0023460                thePCI
 .bss           0x00000000c002346d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002346d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002346d        0x3 
 .bss           0x00000000c0023470        0x8 hw/diskphys/ata.32
                0x00000000c0023470                ataSectorsWritten
                0x00000000c0023474                ataSectorsRead
 .bss           0x00000000c0023478        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0023478        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0023478        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0023478        0x8 
 .bss           0x00000000c0023480       0x41 hw/intctrl/apic.32
                0x00000000c0023480                noOfIOAPICs
                0x00000000c00234a0                ioapics
                0x00000000c00234c0                IOAPICsSetupYet
 .bss           0x00000000c00234c1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00234c1        0x3 
 .bss           0x00000000c00234c4        0x4 hw/timer/pit.32
                0x00000000c00234c4                pitFreq
 .bss           0x00000000c00234c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00234c8        0x0 crtn.32
 .bss           0x00000000c00234c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00234c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00234c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00234c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00234c8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0027830                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
