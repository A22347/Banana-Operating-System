Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c33a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002ff                asmQuickAcquireLock
                0x00000000c000031d                asmQuickReleaseLock
                0x00000000c0000329                asmAcquireLock
                0x00000000c000034a                asmReleaseLock
                0x00000000c000035d                loadGDT
                0x00000000c000037d                memcpy
 *fill*         0x00000000c0000382        0xe 
 .text          0x00000000c0000390      0x79e acpica/utclib.32
                0x00000000c0000390                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004d0                memset
                0x00000000c0000540                strlen
                0x00000000c0000570                strpbrk
                0x00000000c00005b0                strtok
                0x00000000c0000600                strcpy
                0x00000000c0000630                strncpy
                0x00000000c00006e0                strcmp
                0x00000000c0000730                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b2e      0xfad core/malloc.32
                0x00000000c0000c99                dlfree
                0x00000000c0000ff4                dlmalloc
                0x00000000c0001531                dlrealloc
                0x00000000c00016d4                dlmemalign
                0x00000000c00017f7                dlcalloc
                0x00000000c0001891                dlcfree
                0x00000000c0001896                dlindependent_calloc
                0x00000000c00018bb                dlindependent_comalloc
                0x00000000c00018d2                dlvalloc
                0x00000000c00018fd                dlpvalloc
                0x00000000c0001933                dlmalloc_trim
                0x00000000c0001940                dlmalloc_usable_size
                0x00000000c0001971                dlmallinfo
                0x00000000c0001a40                dlmalloc_stats
                0x00000000c0001a51                dlmallopt
 *fill*         0x00000000c0001adb        0x1 
 .text          0x00000000c0001adc      0x1f2 libk/ctype.32
                0x00000000c0001adc                isblank
                0x00000000c0001afc                iscntrl
                0x00000000c0001b1c                isdigit
                0x00000000c0001b38                islower
                0x00000000c0001b54                isspace
                0x00000000c0001b7c                isupper
                0x00000000c0001b98                isalpha
                0x00000000c0001bc8                isalnum
                0x00000000c0001bf8                ispunct
                0x00000000c0001c38                isgraph
                0x00000000c0001c68                isprint
                0x00000000c0001c90                isxdigit
 .text          0x00000000c0001cce        0x0 libk/string.32
 .text          0x00000000c0001cce       0x51 fs/fat/diskio.32
                0x00000000c0001cce                disk_status
                0x00000000c0001cd1                disk_initialize
                0x00000000c0001cd4                disk_read
                0x00000000c0001cea                disk_write
                0x00000000c0001d00                disk_ioctl
 .text          0x00000000c0001d1f     0x3d4b fs/fat/ff.32
                0x00000000c0003abb                f_mount
                0x00000000c0003b1d                f_open
                0x00000000c0003de8                f_read
                0x00000000c0003fe7                f_write
                0x00000000c000421b                f_sync
                0x00000000c00042d0                f_close
                0x00000000c00042ff                f_lseek
                0x00000000c00044a6                f_opendir
                0x00000000c0004571                f_closedir
                0x00000000c0004593                f_readdir
                0x00000000c0004625                f_stat
                0x00000000c00046a4                f_getfree
                0x00000000c00047a6                f_truncate
                0x00000000c000488a                f_unlink
                0x00000000c00049ac                f_mkdir
                0x00000000c0004b47                f_rename
                0x00000000c0004cfd                f_chmod
                0x00000000c0004da6                f_utime
                0x00000000c0004e54                f_getlabel
                0x00000000c0004fa5                f_setlabel
                0x00000000c0005135                f_expand
                0x00000000c0005295                f_mkfs
 *fill*         0x00000000c0005a6a        0x2 
 .text          0x00000000c0005a6c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a6c                ff_memalloc
                0x00000000c0005a84                ff_memfree
 *fill*         0x00000000c0005a9b        0x1 
 .text          0x00000000c0005a9c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a9c                ff_uni2oem
                0x00000000c0005b3c                ff_oem2uni
                0x00000000c0005bb4                ff_wtoupper
 .text          0x00000000c0005d44      0xc76 fs/iso9660/iso9660.32
                0x00000000c0005f63                isoReadDiscSector
                0x00000000c0005ffe                strnicmp
                0x00000000c00062b1                stricmp
                0x00000000c00062fd                iso_open
                0x00000000c0006387                iso_close
                0x00000000c00063a5                iso_read
                0x00000000c00064bb                iso_seek
                0x00000000c000653f                iso_tell
                0x00000000c0006570                iso_total
                0x00000000c000659b                fn_postprocess
                0x00000000c00065c1                iso_readdir
                0x00000000c00067b2                iso_reset
                0x00000000c00067bf                init_percd
                0x00000000c00068b9                iso_ioctl
                0x00000000c00068c1                fs_iso9660_init
                0x00000000c000694a                fs_iso9660_shutdown
 .text          0x00000000c00069ba      0x685 core/computer.32
                0x00000000c00069ba                Computer::close(int, int, void*)
                0x00000000c00069ff                Krnl::firstTask()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006be4                Computer::setBootMessage(char const*)
                0x00000000c0006be6                Computer::detectFeatures()
                0x00000000c0006df0                Computer::displayFeatures()
                0x00000000c0006df2                Computer::rdmsr(unsigned int)
                0x00000000c0006e1e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006e56                Computer::shutdown()
                0x00000000c0006e6e                Computer::restart()
                0x00000000c0006e86                Computer::sleep()
                0x00000000c0006e9a                Computer::nmiEnabled()
                0x00000000c0006ea6                Computer::readCMOS(unsigned char)
                0x00000000c0006ec0                Computer::enableNMI(bool)
                0x00000000c0006ed8                Computer::open(int, int, void*)
                0x00000000c0006fac                Computer::disableNMI()
                0x00000000c0006fbc                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006fda                Computer::handleNMI()
 *fill*         0x00000000c000703f        0x1 
 .text          0x00000000c0007040      0x1cf core/gdt.32
                0x00000000c0007040                GDTEntry::setBase(unsigned int)
                0x00000000c000705c                GDTEntry::setLimit(unsigned int)
                0x00000000c000707a                GDT::GDT()
                0x00000000c000707a                GDT::GDT()
                0x00000000c0007090                GDT::addEntry(GDTEntry)
                0x00000000c00070b2                GDT::getNumberOfEntries()
                0x00000000c00070ba                GDT::flush()
                0x00000000c00070dc                GDT::setup()
 .text          0x00000000c000720f       0x1d core/idle.32
                0x00000000c000720f                idleFunction(void*)
 .text          0x00000000c000722c      0x464 core/idt.32
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000729e                IDTEntry::setOffset(unsigned int)
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00072be                IDT::addEntry(IDTEntry, int)
                0x00000000c00072d8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007310                IDT::flush()
                0x00000000c000732a                IDT::setup()
 .text          0x00000000c0007690      0x183 core/kheap.32
                0x00000000c0007690                sbrk
                0x00000000c0007725                mmap
                0x00000000c000773b                munmap
                0x00000000c0007751                liballoc_lock()
                0x00000000c000775e                liballoc_unlock()
                0x00000000c0007772                liballoc_alloc(int)
                0x00000000c000778a                liballoc_free(void*, int)
                0x00000000c00077a5                realloc
                0x00000000c00077b9                malloc
                0x00000000c00077c9                free
                0x00000000c00077d9                rfree
                0x00000000c00077e9                calloc
 .text          0x00000000c0007813       0xc3 core/main.32
                0x00000000c0007813                KeEntryPoint
 .text          0x00000000c00078d6      0x5dc core/physmgr.32
                0x00000000c00078d6                Phys::allocateDMA(unsigned long)
                0x00000000c00079ad                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c00079e0                Phys::setPageState(unsigned long, bool)
                0x00000000c0007a12                Phys::getPageState(unsigned long)
                0x00000000c0007a33                Phys::freePage(unsigned long)
                0x00000000c0007a95                Phys::allocatePage()
                0x00000000c0007b53                Phys::allocateContiguousPages(int)
                0x00000000c0007baf                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007be7                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007eb2      0x273 core/pipe.32
                0x00000000c0007eb2                Pipe::isAtty()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eda                Pipe::~Pipe()
                0x00000000c0007f02                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007fc2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00080be                Pipe::Pipe(int)
                0x00000000c00080be                Pipe::Pipe(int)
 *fill*         0x00000000c0008125        0x1 
 .text          0x00000000c0008126      0xaa0 core/terminal.32
                0x00000000c0008126                VgaText::isAtty()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000814e                VgaText::~VgaText()
                0x00000000c0008178                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008198                setTerminalScrollLock(bool)
                0x00000000c0008199                doTerminalCycle()
                0x00000000c000819a                addToTerminalCycle(VgaText*)
                0x00000000c000819b                scrollTerminalScrollLock(int)
                0x00000000c000819c                VgaText::updateTitle()
                0x00000000c000819e                VgaText::load()
                0x00000000c00081a0                VgaText::updateCursor()
                0x00000000c00081b6                VgaText::doANSI_SGR(int)
                0x00000000c000822a                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000823a                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000824a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000826a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008276                VgaText::setTitleColour(VgaColour)
                0x00000000c0008282                VgaText::setTitle(char*)
                0x00000000c0008284                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008296                VgaText::scrollScreen()
                0x00000000c000832e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008340                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00083d0                VgaText::getCursorX()
                0x00000000c00083d8                VgaText::getCursorY()
                0x00000000c00083e0                VgaText::setCursor(int, int)
                0x00000000c00083f7                setActiveTerminal(VgaText*)
                0x00000000c0008442                VgaText::clearScreen()
                0x00000000c0008490                VgaText::setCursorX(int)
                0x00000000c00084a8                VgaText::setCursorY(int)
                0x00000000c00084c0                VgaText::incrementCursor(bool)
                0x00000000c0008514                VgaText::decrementCursor(bool)
                0x00000000c0008536                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008604                VgaText::putchar(char)
                0x00000000c00086f0                VgaText::putx(unsigned int)
                0x00000000c0008736                VgaText::puts(char const*)
                0x00000000c000875c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00087a8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c0008a46                VgaText::receiveKey(unsigned char)
                0x00000000c0008ba0                VgaText::doUpdate()
                0x00000000c0008ba1                newTerminal(char*)
 *fill*         0x00000000c0008bc6        0x2 
 .text          0x00000000c0008bc8      0x1a1 core/tss.32
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bd8                TSS::setESP(unsigned long)
                0x00000000c0008bec                TSS::flush()
                0x00000000c0008c0c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008d69        0x1 
 .text          0x00000000c0008d6a      0x4c2 core/unixfile.32
                0x00000000c0008d6a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008dc0                ReservedFilename::isAtty()
                0x00000000c0008ddc                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008e3a                UnixFile::getFileDescriptor()
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c00090bc                UnixFile::~UnixFile()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c0009108                ReservedFilename::~ReservedFilename()
                0x00000000c000912f                getFromFileDescriptor(int)
 .text          0x00000000c000922c     0x1166 core/virtmgr.32
                0x00000000c000922c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009261                Virt::getPageState(unsigned long)
                0x00000000c0009285                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009396                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00093b4                Virt::swapIDToSector(unsigned long)
                0x00000000c00093c6                Virt::allocateSwapfilePage()
                0x00000000c0009444                Virt::virtualMemorySetup()
                0x00000000c000948f                Virt::setupPageSwapping(int)
                0x00000000c0009500                VAS::VAS()
                0x00000000c0009500                VAS::VAS()
                0x00000000c000953c                VAS::VAS(VAS*)
                0x00000000c000953c                VAS::VAS(VAS*)
                0x00000000c000956a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009596                VAS::getPageTableEntry(unsigned long)
                0x00000000c00095b5                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00096da                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00096fe                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009718                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009758                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000978c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00097b6                VAS::~VAS()
                0x00000000c00097b6                VAS::~VAS()
                0x00000000c000991a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009a1e                VAS::allocatePages(int, int)
                0x00000000c0009bf6                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009c14                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009cda                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009dc8                VAS::VAS(bool)
                0x00000000c0009dc8                VAS::VAS(bool)
                0x00000000c000a048                VAS::evict(unsigned long)
                0x00000000c000a10a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a1f8                VAS::scanForEviction()
                0x00000000c000a2d8                mapVASFirstTime
 .text          0x00000000c000a392       0x5f coreobjs/c++.32
                0x00000000c000a392                __cxa_atexit
                0x00000000c000a395                __cxa_finalize
                0x00000000c000a396                __stack_chk_fail
                0x00000000c000a3cc                __cxa_pure_virtual
                0x00000000c000a3dd                operator new[](unsigned long)
                0x00000000c000a3e2                operator delete(void*, unsigned long)
                0x00000000c000a3e7                operator delete[](void*)
                0x00000000c000a3ec                operator delete[](void*, unsigned long)
 .text          0x00000000c000a3f1      0x21c dbg/kconsole.32
                0x00000000c000a3f1                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a45c                Dbg::logc(char)
                0x00000000c000a47c                Dbg::logs(char*)
                0x00000000c000a499                Dbg::logWriteInt(unsigned int)
                0x00000000c000a4b7                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a4d8                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a60d        0x1 
 .text          0x00000000c000a60e      0xc5c fs/vfs.32
                0x00000000c000a60e                File::read(unsigned long long, void*, int*)
                0x00000000c000a666                File::write(unsigned long long, void*, int*)
                0x00000000c000a6be                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a716                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a744                File::isAtty()
                0x00000000c000a748                Directory::isAtty()
                0x00000000c000a74c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a752                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a758                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a75e                File::~File()
                0x00000000c000a75e                File::~File()
                0x00000000c000a782                File::~File()
                0x00000000c000a7ac                Directory::~Directory()
                0x00000000c000a7ac                Directory::~Directory()
                0x00000000c000a7d0                Directory::~Directory()
                0x00000000c000a7fa                Filesystem::Filesystem()
                0x00000000c000a7fa                Filesystem::Filesystem()
                0x00000000c000a81e                Filesystem::~Filesystem()
                0x00000000c000a81e                Filesystem::~Filesystem()
                0x00000000c000a82c                Filesystem::~Filesystem()
                0x00000000c000a850                Fs::getcwd(Process*, char*, int)
                0x00000000c000a87a                Fs::initVFS()
                0x00000000c000a8a4                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aa4e                File::File(char const*, Process*)
                0x00000000c000aa4e                File::File(char const*, Process*)
                0x00000000c000ab0e                File::open(FileOpenMode)
                0x00000000c000ab6c                File::close()
                0x00000000c000abcc                File::seek(unsigned long long)
                0x00000000c000ac22                File::tell(unsigned long long*)
                0x00000000c000ac72                File::rewind()
                0x00000000c000ac86                File::unlink()
                0x00000000c000acd2                File::rename(char const*)
                0x00000000c000ad20                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ad7c                File::exists()
                0x00000000c000adba                File::stat(unsigned long long*, bool*)
                0x00000000c000ae1b                Fs::setcwd(Process*, char*)
                0x00000000c000af78                Directory::Directory(char const*, Process*)
                0x00000000c000af78                Directory::Directory(char const*, Process*)
                0x00000000c000b038                Directory::open()
                0x00000000c000b094                Directory::close()
                0x00000000c000b0f4                Directory::unlink()
                0x00000000c000b140                Directory::rename(char const*)
                0x00000000c000b18e                Directory::exists()
                0x00000000c000b1cc                Directory::read(dirent*)
                0x00000000c000b218                Directory::create()
                0x00000000c000b264                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b26a        0x2 
 .text          0x00000000c000b26c       0x86 hal/bus.32
                0x00000000c000b26c                Bus::Bus(char const*)
                0x00000000c000b26c                Bus::Bus(char const*)
                0x00000000c000b2a4                Bus::~Bus()
                0x00000000c000b2a4                Bus::~Bus()
                0x00000000c000b2c8                Bus::~Bus()
 .text          0x00000000c000b2f2       0x96 hal/buzzer.32
                0x00000000c000b2f2                beepThread(void*)
                0x00000000c000b32f                Krnl::beep(int, int, bool)
 .text          0x00000000c000b388      0x46d hal/clock.32
                0x00000000c000b388                User::loadClockSettings(int)
                0x00000000c000b3da                Clock::Clock(char const*)
                0x00000000c000b3da                Clock::Clock(char const*)
                0x00000000c000b410                Clock::~Clock()
                0x00000000c000b410                Clock::~Clock()
                0x00000000c000b434                Clock::~Clock()
                0x00000000c000b45e                Clock::timeInSecondsLocal()
                0x00000000c000b4a6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b4ff                datetimeToSeconds(datetime_t)
                0x00000000c000b62c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b68c                secondsToDatetime(unsigned long long)
                0x00000000c000b7d0                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b7f5        0x1 
 .text          0x00000000c000b7f6      0x464 hal/device.32
                0x00000000c000b7f6                Device::hibernate()
                0x00000000c000b7f8                Device::wake()
                0x00000000c000b7fa                Device::detect()
                0x00000000c000b7fc                Device::disableLegacy()
                0x00000000c000b7fe                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b800                DriverlessDevice::close(int, int, void*)
                0x00000000c000b804                DriverlessDevice::detect()
                0x00000000c000b806                DriverlessDevice::open(int, int, void*)
                0x00000000c000b81a                Device::~Device()
                0x00000000c000b81a                Device::~Device()
                0x00000000c000b828                Device::~Device()
                0x00000000c000b850                Device::findAndLoadDriver()
                0x00000000c000b85e                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000b884                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000b8c4                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b8ee                Device::getParent()
                0x00000000c000b8fa                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b918                Device::addChild(Device*)
                0x00000000c000b95c                Device::removeAllChildren()
                0x00000000c000b9a2                Device::hibernateAll()
                0x00000000c000b9d2                Device::wakeAll()
                0x00000000c000ba02                Device::detectAll()
                0x00000000c000ba32                Device::disableLegacyAll()
                0x00000000c000ba34                Device::loadDriversForAll()
                0x00000000c000ba36                Device::closeAll()
                0x00000000c000ba6c                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000baa2                Device::setName(char const*)
                0x00000000c000bab0                Device::Device(char const*)
                0x00000000c000bab0                Device::Device(char const*)
                0x00000000c000bbac                Device::getName()
                0x00000000c000bbb6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbb6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbec                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bc30                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bc5a        0x2 
 .text          0x00000000c000bc5c       0x86 hal/diskctrl.32
                0x00000000c000bc5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bc5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bc94                HardDiskController::~HardDiskController()
                0x00000000c000bc94                HardDiskController::~HardDiskController()
                0x00000000c000bcb8                HardDiskController::~HardDiskController()
 .text          0x00000000c000bce2       0xe2 hal/diskphys.32
                0x00000000c000bce2                PhysicalDisk::eject()
                0x00000000c000bce6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bce6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bd4e                PhysicalDisk::startCache()
                0x00000000c000bd76                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bd76                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bd9a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000bdc4        0x0 hal/fpu.32
 .text          0x00000000c000bdc4      0x35d hal/intctrl.32
                0x00000000c000bdc4                int_handler
                0x00000000c000be4c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000be94                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bfcc                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c000                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c07f                setupINTS()
                0x00000000c000c0dc                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c121        0x1 
 .text          0x00000000c000c122      0x792 hal/keybrd.32
                0x00000000c000c122                startGUI(void*)
                0x00000000c000c18e                startGUIVESA(void*)
                0x00000000c000c1fa                sendKeyToTerminal(unsigned char)
                0x00000000c000c2c3                sendKeyboardToken(KeyboardToken)
                0x00000000c000c703                clearInternalKeybuffer(VgaText*)
                0x00000000c000c738                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000c82a                Keyboard::Keyboard(char const*)
                0x00000000c000c82a                Keyboard::Keyboard(char const*)
                0x00000000c000c866                Keyboard::~Keyboard()
                0x00000000c000c866                Keyboard::~Keyboard()
                0x00000000c000c88a                Keyboard::~Keyboard()
 .text          0x00000000c000c8b4      0x3ea hal/logidisk.32
                0x00000000c000c8b4                LogicalDisk::close(int, int, void*)
                0x00000000c000c8b8                LogicalDisk::~LogicalDisk()
                0x00000000c000c8b8                LogicalDisk::~LogicalDisk()
                0x00000000c000c8dc                LogicalDisk::~LogicalDisk()
                0x00000000c000c906                LogicalDisk::open(int, int, void*)
                0x00000000c000c91a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000c952                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000c998                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c998                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ca4e                LogicalDisk::assignDriveLetter()
                0x00000000c000cb04                LogicalDisk::mount()
                0x00000000c000cb4c                LogicalDisk::unmount()
                0x00000000c000cb5c                LogicalDisk::eject()
                0x00000000c000cb70                LogicalDisk::unassignDriveLetter()
                0x00000000c000cbc6                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000cc32                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000cc9e        0x2 
 .text          0x00000000c000cca0       0x86 hal/mouse.32
                0x00000000c000cca0                Mouse::Mouse(char const*)
                0x00000000c000cca0                Mouse::Mouse(char const*)
                0x00000000c000ccd8                Mouse::~Mouse()
                0x00000000c000ccd8                Mouse::~Mouse()
                0x00000000c000ccfc                Mouse::~Mouse()
 .text          0x00000000c000cd26      0x339 hal/partition.32
                0x00000000c000cd26                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cdce                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d05f        0x1 
 .text          0x00000000c000d060       0x86 hal/serial.32
                0x00000000c000d060                Serial::Serial(char const*)
                0x00000000c000d060                Serial::Serial(char const*)
                0x00000000c000d098                Serial::~Serial()
                0x00000000c000d098                Serial::~Serial()
                0x00000000c000d0bc                Serial::~Serial()
 *fill*         0x00000000c000d0e6        0x2 
 .text          0x00000000c000d0e8      0x234 hal/timer.32
                0x00000000c000d0e8                Timer::Timer(char const*)
                0x00000000c000d0e8                Timer::Timer(char const*)
                0x00000000c000d120                Timer::~Timer()
                0x00000000c000d120                Timer::~Timer()
                0x00000000c000d144                Timer::~Timer()
                0x00000000c000d16e                Timer::read()
                0x00000000c000d179                setupTimer(int)
                0x00000000c000d1b4                timerHandler(unsigned int)
 .text          0x00000000c000d31c      0x3ce hal/vcache.32
                0x00000000c000d31c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d31c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d484                VCache::invalidateReadBuffer()
                0x00000000c000d494                VCache::writeWriteBuffer()
                0x00000000c000d4e0                VCache::~VCache()
                0x00000000c000d4e0                VCache::~VCache()
                0x00000000c000d534                VCache::~VCache()
                0x00000000c000d55c                VCache::write(unsigned long long, int, void*)
                0x00000000c000d672                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d6ea      0x4b3 hal/video.32
                0x00000000c000d6ea                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d736                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000d7a6                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000d824                Video::clearScreen(unsigned int)
                0x00000000c000d858                Video::putpixel(int, int, unsigned int)
                0x00000000c000d866                Video::Video(char const*)
                0x00000000c000d866                Video::Video(char const*)
                0x00000000c000d89c                Video::~Video()
                0x00000000c000d89c                Video::~Video()
                0x00000000c000d8c0                Video::~Video()
                0x00000000c000d8ea                Video::isMonochrome()
                0x00000000c000d8f6                Video::getWidth()
                0x00000000c000d902                Video::getHeight()
                0x00000000c000d90e                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000d9ca                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000db32                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000db9d        0x3 
 .text          0x00000000c000dba0     0x1307 hw/acpi.32
                0x00000000c000dba0                ACPI::close(int, int, void*)
                0x00000000c000dc58                findRSDP()
                0x00000000c000dce8                loadACPITables(unsigned char*)
                0x00000000c000df4c                findRSDT(unsigned char*)
                0x00000000c000e09c                findDataTable(unsigned char*, char*)
                0x00000000c000e114                scanMADT()
                0x00000000c000e5e8                ACPI::ACPI()
                0x00000000c000e5e8                ACPI::ACPI()
                0x00000000c000e63c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e724                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000e7ec                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000e7f4                ACPI::detectPCI()
                0x00000000c000e9fc                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ea50                ACPI::sleep()
                0x00000000c000ea6c                ACPI::open(int, int, void*)
 *fill*         0x00000000c000eea7        0x1 
 .text          0x00000000c000eea8      0xb95 hw/cpu.32
                0x00000000c000eea8                CPU::close(int, int, void*)
                0x00000000c000eeac                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000eec8                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000eee0                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ef54                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000efd8                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f006                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f034                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f062                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f090                CPU::CPU()
                0x00000000c000f090                CPU::CPU()
                0x00000000c000f11e                CPU::displayFeatures()
                0x00000000c000f120                CPU::detectFeatures()
                0x00000000c000f7e4                CPU::setupSMEP()
                0x00000000c000f7f0                CPU::setupUMIP()
                0x00000000c000f7fa                CPU::setupTSC()
                0x00000000c000f804                CPU::setupLargePages()
                0x00000000c000f80e                CPU::setupPAT()
                0x00000000c000f84a                CPU::setupMTRR()
                0x00000000c000f84c                CPU::setupGlobalPages()
                0x00000000c000f856                CPU::allowUsermodeDataAccess()
                0x00000000c000f868                CPU::prohibitUsermodeDataAccess()
                0x00000000c000f87a                CPU::setupSMAP()
                0x00000000c000f888                CPU::setupFeatures()
                0x00000000c000f954                CPU::open(int, int, void*)
 .text          0x00000000c000fa3d       0xd1 krnl/bootmsg.32
                0x00000000c000fa3d                KeDisplaySplashScreen()
                0x00000000c000faab                KeSetBootMessage(char const*)
 .text          0x00000000c000fb0e      0x581 krnl/env.32
                0x00000000c000fb0e                EnvVarContainer::getEnv(char const*)
                0x00000000c000fb4c                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000fc0e                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000fc10                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000fdf6                EnvVarContainer::__loadSystem()
                0x00000000c000fe10                EnvVarContainer::__loadUser()
                0x00000000c000fe12                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe12                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe34                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe34                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe64                Krnl::getEnv(Process*, char const*)
                0x00000000c000fec9                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000fee3                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000ff02                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000ff15                Krnl::deleteEnvSystem(char const*)
                0x00000000c000ff16                Krnl::deleteEnvUser(char const*)
                0x00000000c000ff17                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000ff18                Krnl::newProcessEnv(Process*)
                0x00000000c000ff3a                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000ff86                Krnl::loadSystemEnv()
                0x00000000c000ffb4                Krnl::loadUserEnv()
                0x00000000c000ffda                Krnl::flushEnv()
                0x00000000c000ffdb                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c000fffb                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001008f       0x94 krnl/inlines.32
                0x00000000c001008f                CPU::current()
                0x00000000c001009b                operator new(unsigned long)
                0x00000000c00100a0                operator delete(void*)
                0x00000000c00100a5                disableIRQs()
                0x00000000c00100a7                enableIRQs()
                0x00000000c00100a9                lockScheduler()
                0x00000000c00100b1                unlockScheduler()
                0x00000000c00100c0                lockStuff()
                0x00000000c00100ce                unlockStuff()
                0x00000000c0010108                Virt::getAKernelVAS()
                0x00000000c001010e                __not_memcpy
 .text          0x00000000c0010123        0xc krnl/panic.32
                0x00000000c0010123                KePanic(char const*)
 .text          0x00000000c001012f      0x142 krnl/powctrl.32
                0x00000000c001012f                Krnl::powerThread(void*)
                0x00000000c001015d                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010173                Krnl::userIOReceived()
                0x00000000c001017e                Krnl::handlePowerButton()
                0x00000000c00101b3                Krnl::handleSleepButton()
                0x00000000c00101e8                Krnl::setupPowerManager()
 *fill*         0x00000000c0010271        0x3 
 .text          0x00000000c0010274      0x190 krnl/resolve.32
                0x00000000c0010274                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010404      0x33f krnl/signal.32
                0x00000000c0010404                KiDefaultSignalHandlerAbort(int)
                0x00000000c0010411                KiDefaultSignalHandlerTerminate(int)
                0x00000000c001041e                KiSigKill(int)
                0x00000000c001042b                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001042c                KiDefaultSignalHandlerPause(int)
                0x00000000c0010439                KiDefaultSignalHandlerResume(int)
                0x00000000c0010446                KeInitSignals()
                0x00000000c00104a1                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010506                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010582                KeCheckSignal(SigHandlerBlock*)
                0x00000000c0010708                KeCompleteSignal(SigHandlerBlock*, int)
 .text          0x00000000c0010743      0xcfe krnl/syscalls.32
                0x00000000c0010743                SysSeekDir(regs*)
                0x00000000c0010748                SysTellDir(regs*)
                0x00000000c001074d                SysVerify(regs*)
                0x00000000c0010757                SysGetArgc(regs*)
                0x00000000c0010767                SysTTYName(regs*)
                0x00000000c001076f                SysFormatDisk(regs*)
                0x00000000c00107dc                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010826                SysGetDiskVolumeLabel(regs*)
                0x00000000c001087b                SysShutdown(regs*)
                0x00000000c00108d9                SysRealpath(regs*)
                0x00000000c001091c                SysReadDir(regs*)
                0x00000000c001099c                SysIsATTY(regs*)
                0x00000000c00109f8                SysSeek(regs*)
                0x00000000c0010a51                SysTell(regs*)
                0x00000000c0010ac0                SysSize(regs*)
                0x00000000c0010b35                SysSizeFromFilename(regs*)
                0x00000000c0010be8                SysClose(regs*)
                0x00000000c0010c48                SysOpenDir(regs*)
                0x00000000c0010d59                SysCloseDir(regs*)
                0x00000000c0010dad                SysMakeDir(regs*)
                0x00000000c0010e1f                SysWait(regs*)
                0x00000000c0010e3c                SysNotImpl(regs*)
                0x00000000c0010e57                SysPanic(regs*)
                0x00000000c0010e72                SysRmdir(regs*)
                0x00000000c0010ed9                SysUnlink(regs*)
                0x00000000c0010f40                SysGetArgv(regs*)
                0x00000000c0010f8d                SysUSleep(regs*)
                0x00000000c0010fb6                SysSpawn(regs*)
                0x00000000c001101f                SysGetEnv(regs*)
                0x00000000c00110ce                SysSetFatAttrib(regs*)
                0x00000000c0011145                SysPipe(regs*)
                0x00000000c001118a                SysGetUnixTime(regs*)
                0x00000000c001119e                string_ends_with(char const*, char const*)
                0x00000000c00111e8                SysOpen(regs*)
                0x00000000c00113ef                KeSystemCall(regs*, void*)
 .text          0x00000000c0011441      0x50e reg/registry.32
                0x00000000c0011441                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0011599                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00116ee                Reg::getLine(char*, char*, char*)
                0x00000000c0011725                Reg::readInt(char*, char*, int*)
                0x00000000c0011810                Reg::readString(char*, char*, char*, int)
                0x00000000c0011891                Reg::readBool(char*, char*, bool*)
                0x00000000c00118b6                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00118e2                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001190e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001194f       0x36 sys/eject.32
                0x00000000c001194f                SysEject(regs*)
 .text          0x00000000c0011985       0x18 sys/exit.32
                0x00000000c0011985                SysExit(regs*)
 .text          0x00000000c001199d       0x1f sys/getcwd.32
                0x00000000c001199d                SysGetCwd(regs*)
 .text          0x00000000c00119bc        0xc sys/getpid.32
                0x00000000c00119bc                SysGetPID(regs*)
 .text          0x00000000c00119c8       0x1a sys/getramdata.32
                0x00000000c00119c8                SysGetRAMData(regs*)
 .text          0x00000000c00119e2       0x82 sys/getvgaptr.32
                0x00000000c00119e2                SysGetVGAPtr(regs*)
 .text          0x00000000c0011a64       0xa8 sys/loaddll.32
                0x00000000c0011a64                SysLoadDLL(regs*)
 .text          0x00000000c0011b0c       0x68 sys/read.32
                0x00000000c0011b0c                SysRead(regs*)
 .text          0x00000000c0011b74       0x29 sys/registersignal.32
                0x00000000c0011b74                SysRegisterSignal(regs*)
 .text          0x00000000c0011b9d       0x67 sys/sbrk.32
                0x00000000c0011b9d                SysSbrk(regs*)
 .text          0x00000000c0011c04       0x1c sys/setcwd.32
                0x00000000c0011c04                SysSetCwd(regs*)
 .text          0x00000000c0011c20       0x95 sys/settime.32
                0x00000000c0011c20                SysSetTime(regs*)
 .text          0x00000000c0011cb5       0x4a sys/timezone.32
                0x00000000c0011cb5                SysTimezone(regs*)
 .text          0x00000000c0011cff       0x68 sys/write.32
                0x00000000c0011cff                SysWrite(regs*)
 .text          0x00000000c0011d67       0x62 sys/wsbe.32
                0x00000000c0011d67                SysWsbe(regs*)
 .text          0x00000000c0011dc9       0x25 sys/yield.32
                0x00000000c0011dc9                SysYield(regs*)
 .text          0x00000000c0011dee     0x11e5 thr/elf.32
                0x00000000c0011dee                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001207a                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0012290                Thr::runtimeReferenceHelper()
                0x00000000c00122a3                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00122f2                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00125b0                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012ce6                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012d18                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012d4f                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012d69                Thr::loadDLL(char const*, bool)
                0x00000000c0012f9a                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0012fd3        0x1 
 .text          0x00000000c0012fd4     0x138d thr/prcssthr.32
                0x00000000c0012fd4                userModeEntryPoint(void*)
                0x00000000c0012ffc                changeTSS
                0x00000000c001302c                switchToThread(ThreadControlBlock*)
                0x00000000c00130e0                Process::addArgs(char**)
                0x00000000c0013140                Process::Process(char const*, Process*, char**)
                0x00000000c0013140                Process::Process(char const*, Process*, char**)
                0x00000000c001333c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001333c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00135b4                taskStartupFunction
                0x00000000c00135c0                Semaphore::Semaphore(int)
                0x00000000c00135c0                Semaphore::Semaphore(int)
                0x00000000c00135f0                Mutex::Mutex()
                0x00000000c00135f0                Mutex::Mutex()
                0x00000000c0013604                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00136fc                Process::createUserThread()
                0x00000000c001371c                setupMultitasking(void (*)())
                0x00000000c0013824                schedule()
                0x00000000c00138b4                Semaphore::tryAcquire()
                0x00000000c0013980                Semaphore::assertLocked(char const*)
                0x00000000c00139f8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013a20                blockTask(TaskState)
                0x00000000c0013a50                waitTask(int, int*, int)
                0x00000000c0013a94                milliTenthSleepUntil(unsigned int)
                0x00000000c0013b24                milliTenthSleep(unsigned int)
                0x00000000c0013b34                sleep(unsigned int)
                0x00000000c0013b50                Semaphore::acquire()
                0x00000000c0013c0c                taskReturned
                0x00000000c0013c48                Thr::processFromPID(int)
                0x00000000c0013ce8                unblockTask(ThreadControlBlock*)
                0x00000000c0013d8c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0014058                cleanerTaskFunction(void*)
                0x00000000c0014148                terminateTask(int)
                0x00000000c0014214                Thr::terminateFromIRQ(int)
                0x00000000c0014224                Semaphore::release()
 .text          0x00000000c0014361      0xb93 vm86/vm8086.32
                0x00000000c0014361                Vm::inbv(unsigned short)
                0x00000000c0014374                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00143aa                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00143ba                Vm::getSegment(unsigned int)
                0x00000000c00143c2                Vm::getOffset(unsigned int)
                0x00000000c00143c7                Vm::mainloop2()
                0x00000000c0014401                Vm::mainVm8086Loop(void*)
                0x00000000c0014411                Vm::mainloop3(unsigned long)
                0x00000000c0014437                Vm::initialise8086()
                0x00000000c001447a                Vm::finish8086()
                0x00000000c00144db                Vm::getOutput8086(unsigned char*)
                0x00000000c0014500                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00145b9                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014721                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00147ab                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00147bc                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00147ce                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00147df                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00147f4                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001480a                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001481f                Vm::faultHandler(regs*)
 .text          0x00000000c0014ef4      0xa53 arch/i386/hal.32
                0x00000000c0014ef4                noCopro(unsigned long)
                0x00000000c0014ef5                nmiHandler(regs*, void*)
                0x00000000c0014f0e                doubleFault(regs*, void*)
                0x00000000c0014f27                displayDebugInfo(regs*)
                0x00000000c0015248                HalSystemIdle()
                0x00000000c00152be                displayProgramFault(char const*)
                0x00000000c001530a                gpFault(regs*, void*)
                0x00000000c001536f                pgFault(regs*, void*)
                0x00000000c00153f5                otherISRHandler(regs*, void*)
                0x00000000c0015429                opcodeFault(regs*, void*)
                0x00000000c00154a9                i386SaveCoprocessor(void*)
                0x00000000c00154bd                i386LoadCoprocessor(void*)
                0x00000000c00154d1                x87EmulHandler(regs*, void*)
                0x00000000c001556e                HalInitialiseCoprocessor()
                0x00000000c001561c                HalPanic(char const*)
                0x00000000c0015715                HalQueryPerformanceCounter()
                0x00000000c0015730                HalInitialise()
                0x00000000c00158d6                HalMakeBeep(int)
                0x00000000c0015910                HalGetRand()
                0x00000000c0015913                HalEndOfInterrupt(int)
                0x00000000c0015944                HalRestart()
                0x00000000c0015945                HalShutdown()
                0x00000000c0015946                HalSleep()
 *fill*         0x00000000c0015947        0x1 
 .text          0x00000000c0015948      0x2f4 arch/i386/pic.32
                0x00000000c0015948                picIoWait()
                0x00000000c0015950                picDisable()
                0x00000000c0015984                picGetIRQReg(int)
                0x00000000c0015a08                picOpen()
                0x00000000c0015b98                picEOI(int)
 .text          0x00000000c0015c3c      0x64d arch/i386/rtc.32
                0x00000000c0015c3c                RTC::open(int, int, void*)
                0x00000000c0015c40                RTC::close(int, int, void*)
                0x00000000c0015c44                RTC::timeInSecondsUTC()
                0x00000000c0015c56                RTC::timeInDatetimeUTC()
                0x00000000c0015c7c                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015cba                RTC::~RTC()
                0x00000000c0015cba                RTC::~RTC()
                0x00000000c0015cde                RTC::~RTC()
                0x00000000c0015d08                RTC::get_update_in_progress_flag()
                0x00000000c0015d20                RTC::completeRTCRefresh()
                0x00000000c0015fd8                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001618b                rtcIRQHandler(regs*, void*)
                0x00000000c00161d0                RTC::RTC()
                0x00000000c00161d0                RTC::RTC()
 *fill*         0x00000000c0016289        0x3 
 .text          0x00000000c001628c      0x203 arch/i386/vga.32
                0x00000000c001628c                HalConsoleScroll(int, int)
                0x00000000c0016394                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0016400                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c001648f        0x1 
 .text          0x00000000c0016490     0x13e7 fs/fat/vfslink.32
                0x00000000c0016490                FAT::getName()
                0x00000000c0016498                FAT::tell(void*, unsigned long long*)
                0x00000000c00164d4                FAT::stat(void*, unsigned long long*)
                0x00000000c0016510                FAT::~FAT()
                0x00000000c0016510                FAT::~FAT()
                0x00000000c0016534                FAT::~FAT()
                0x00000000c001655c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0016600                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00166c4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016898                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016ab0                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016c70                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016ddc                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016e3c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016e9c                FAT::close(void*)
                0x00000000c0016ef0                FAT::closeDir(void*)
                0x00000000c0016f44                FAT::seek(void*, unsigned long long)
                0x00000000c0016f9c                fatWrapperReadDisk
                0x00000000c0016fe0                fatWrapperWriteDisk
                0x00000000c0017024                fatWrapperIoctl
                0x00000000c0017140                FAT::FAT()
                0x00000000c0017140                FAT::FAT()
                0x00000000c0017194                FAT::fixFilepath(char*)
                0x00000000c00171d0                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0017308                FAT::openDir(char const*, void**)
                0x00000000c00173b8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00174b0                FAT::unlink(char const*)
                0x00000000c0017530                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00176bc                FAT::rename(char const*, char const*)
                0x00000000c0017788                FAT::mkdir(char const*)
                0x00000000c0017808                FAT::exists(char const*)
 *fill*         0x00000000c0017877        0x1 
 .text          0x00000000c0017878       0xc6 fs/iso9660/helper.32
                0x00000000c0017878                isoReadDiscSectorHelper
                0x00000000c00178d4                iso_kprintf
                0x00000000c00178f4                iso_kprintfd
 .text          0x00000000c001793e      0x586 fs/iso9660/vfslink.32
                0x00000000c001793e                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017944                ISO9660::getName()
                0x00000000c001794a                ISO9660::closeDir(void*)
                0x00000000c0017954                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001795a                ISO9660::unlink(char const*)
                0x00000000c0017960                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017966                ISO9660::rename(char const*, char const*)
                0x00000000c001796c                ISO9660::mkdir(char const*)
                0x00000000c0017972                ISO9660::~ISO9660()
                0x00000000c0017972                ISO9660::~ISO9660()
                0x00000000c0017996                ISO9660::~ISO9660()
                0x00000000c00179be                ISO9660::exists(char const*)
                0x00000000c00179d2                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017a72                ISO9660::openDir(char const*, void**)
                0x00000000c0017b02                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017b42                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017b7a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017bb0                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017bea                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017cbc                ISO9660::close(void*)
                0x00000000c0017ce2                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017daf                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017e2a                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017e9c                ISO9660::ISO9660()
                0x00000000c0017e9c                ISO9660::ISO9660()
 .text          0x00000000c0017ec4      0x26c hal/sound/sndcard.32
                0x00000000c0017ec4                SoundCard::beginPlayback()
                0x00000000c0017ed2                SoundCard::stopPlayback()
                0x00000000c0017ee0                SoundCard::SoundCard(char const*)
                0x00000000c0017ee0                SoundCard::SoundCard(char const*)
                0x00000000c0017f7e                SoundCard::~SoundCard()
                0x00000000c0017f7e                SoundCard::~SoundCard()
                0x00000000c0017fa2                SoundCard::~SoundCard()
                0x00000000c0017fcc                SoundCard::configureRates(int, int, int)
                0x00000000c0017ffc                SoundCard::getSamples16(int, short*)
                0x00000000c0018058                SoundCard::getSamples32(int, int*)
                0x00000000c00180de                SoundCard::addChannel(SoundPort*)
                0x00000000c001811c                SoundCard::removeChannel(int)
 .text          0x00000000c0018130      0x377 hal/sound/sndport.32
                0x00000000c0018130                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018130                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00181bc                SoundPort::~SoundPort()
                0x00000000c00181bc                SoundPort::~SoundPort()
                0x00000000c00181f0                SoundPort::unpause()
                0x00000000c00181fc                SoundPort::pause()
                0x00000000c0018208                SoundPort::getBufferUsed()
                0x00000000c0018210                SoundPort::getBufferSize()
                0x00000000c0018218                SoundPort::buffer16(short*, int)
                0x00000000c00182a4                SoundPort::buffer32(int*, int)
                0x00000000c001832c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00183f0                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c00184a7        0x0 hw/bus/isa.32
 *fill*         0x00000000c00184a7        0x1 
 .text          0x00000000c00184a8      0xb49 hw/bus/pci.32
                0x00000000c00184a8                PCI::open(int, int, void*)
                0x00000000c00184c6                PCI::close(int, int, void*)
                0x00000000c00184ca                PCI::PCI()
                0x00000000c00184ca                PCI::PCI()
                0x00000000c0018564                PCI::readBAR8(unsigned int, int)
                0x00000000c0018580                PCI::readBAR16(unsigned int, int)
                0x00000000c001859e                PCI::readBAR32(unsigned int, int)
                0x00000000c00185ba                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c00185da                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c00185fc                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001861c                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001868a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018732                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018756                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001877e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c00187c8                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c00187f0                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018814                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0018838                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018860                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00188c4                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c00189ac                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018c26                PCI::checkBus(unsigned char)
                0x00000000c0018c4c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018dbe                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018f32                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018f9e                PCI::detect()
 *fill*         0x00000000c0018ff1        0x1 
 .text          0x00000000c0018ff2      0xb5a hw/diskctrl/ide.32
                0x00000000c0018ff2                IDE::close(int, int, void*)
                0x00000000c0018ff6                IDE::IDE()
                0x00000000c0018ff6                IDE::IDE()
                0x00000000c001902a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001903c                selectDrive(unsigned char, unsigned char)
                0x00000000c001903e                IDE::getBase(unsigned char)
                0x00000000c0019050                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0019110                IDE::read(unsigned char, unsigned char)
                0x00000000c00191be                IDE::waitInterrupt(unsigned char)
                0x00000000c0019226                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0019242                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001925e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c00192a4                IDE::open(int, int, void*)
                0x00000000c00196b2                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001977e                IDE::detect()
                0x00000000c0019a3e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019aee                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019b4c      0x32a hw/diskctrl/satabus.32
                0x00000000c0019b4c                SATABus::close(int, int, void*)
                0x00000000c0019b50                SATABus::detect()
                0x00000000c0019b52                SATABus::SATABus()
                0x00000000c0019b52                SATABus::SATABus()
                0x00000000c0019bd8                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c0a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c52                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c72                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c9c                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019dac                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019e56                SATABus::open(int, int, void*)
 .text          0x00000000c0019e76      0x5f4 hw/diskphys/ata.32
                0x00000000c0019e76                ATA::close(int, int, void*)
                0x00000000c0019e9a                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019e9c                ATA::ATA()
                0x00000000c0019e9c                ATA::ATA()
                0x00000000c0019eca                ATA::flush(bool)
                0x00000000c0019f14                ATA::readyForCommand()
                0x00000000c0019f60                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a2dc                ATA::read(unsigned long long, int, void*)
                0x00000000c001a328                ATA::write(unsigned long long, int, void*)
                0x00000000c001a374                ATA::detectCHS()
                0x00000000c001a39e                ATA::open(int, int, void*)
 .text          0x00000000c001a46a      0x60e hw/diskphys/atapi.32
                0x00000000c001a46a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a470                ATAPI::close(int, int, void*)
                0x00000000c001a494                ATAPI::ATAPI()
                0x00000000c001a494                ATAPI::ATAPI()
                0x00000000c001a4c2                ATAPI::readyForCommand()
                0x00000000c001a514                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a7d4                ATAPI::diskRemoved()
                0x00000000c001a80e                ATAPI::eject()
                0x00000000c001a856                ATAPI::diskInserted()
                0x00000000c001a862                ATAPI::detectMedia()
                0x00000000c001a91e                ATAPI::open(int, int, void*)
                0x00000000c001a9fe                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001aa78      0x402 hw/diskphys/sata.32
                0x00000000c001aa78                SATA::close(int, int, void*)
                0x00000000c001aa9c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001aa9e                SATA::open(int, int, void*)
                0x00000000c001ab48                SATA::SATA()
                0x00000000c001ab48                SATA::SATA()
                0x00000000c001ab76                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001adc2                SATA::read(unsigned long long, int, void*)
                0x00000000c001ae0e                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001ae7a      0x5af hw/diskphys/satapi.32
                0x00000000c001ae7a                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ae80                SATAPI::close(int, int, void*)
                0x00000000c001aea4                SATAPI::SATAPI()
                0x00000000c001aea4                SATAPI::SATAPI()
                0x00000000c001aed2                SATAPI::diskRemoved()
                0x00000000c001aed4                SATAPI::diskInserted()
                0x00000000c001aef0                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b1d0                SATAPI::eject()
                0x00000000c001b20c                SATAPI::detectMedia()
                0x00000000c001b232                SATAPI::open(int, int, void*)
                0x00000000c001b332                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b429        0x1 
 .text          0x00000000c001b42a      0x455 hw/intctrl/apic.32
                0x00000000c001b42a                IOAPIC::close(int, int, void*)
                0x00000000c001b430                apicGetBase()
                0x00000000c001b472                IOAPIC::IOAPIC()
                0x00000000c001b472                IOAPIC::IOAPIC()
                0x00000000c001b49a                apicOpen()
                0x00000000c001b600                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b632                IOAPIC::read(int)
                0x00000000c001b65a                IOAPIC::open(int, int, void*)
                0x00000000c001b74e                IOAPIC::write(int, int)
                0x00000000c001b77a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b87f        0x1 
 .text          0x00000000c001b880       0xf0 hw/timer/apictimer.32
                0x00000000c001b880                APICTimer::close(int, int, void*)
                0x00000000c001b888                apicTimerHandler(regs*, void*)
                0x00000000c001b8b0                APICTimer::open(int, int, void*)
                0x00000000c001b920                APICTimer::write(int)
                0x00000000c001b948                APICTimer::APICTimer()
                0x00000000c001b948                APICTimer::APICTimer()
 .text          0x00000000c001b970      0x1aa hw/timer/pit.32
                0x00000000c001b970                PIT::write(int)
                0x00000000c001b9f4                pitHandler(regs*, void*)
                0x00000000c001ba18                PIT::open(int, int, void*)
                0x00000000c001ba68                PIT::close(int, int, void*)
                0x00000000c001ba98                PIT::PIT()
                0x00000000c001ba98                PIT::PIT()
 *fill*         0x00000000c001bb1a        0x6 
 .text          0x00000000c001bb20       0x83 arch/i386/avx.32
                0x00000000c001bb20                avxDetect
                0x00000000c001bb4a                avxSave
                0x00000000c001bb5b                avxLoad
                0x00000000c001bb6c                avxInit
                0x00000000c001bb8e                avxClose
                0x00000000c001bb8f                wouldSheSayYes
 *fill*         0x00000000c001bba3        0xd 
 .text          0x00000000c001bbb0      0x1d6 arch/i386/interrupt.32
                0x00000000c001bbb0                isr0
                0x00000000c001bbc0                isr1
                0x00000000c001bbca                isr2
                0x00000000c001bbd4                isr3
                0x00000000c001bbde                isr4
                0x00000000c001bbe8                isr5
                0x00000000c001bbf2                isr6
                0x00000000c001bbfc                isr7
                0x00000000c001bc06                isr8
                0x00000000c001bc0e                isr9
                0x00000000c001bc18                isr10
                0x00000000c001bc20                isr11
                0x00000000c001bc28                isr12
                0x00000000c001bc30                isr13
                0x00000000c001bc38                isr14
                0x00000000c001bc40                isr15
                0x00000000c001bc4a                isr16
                0x00000000c001bc54                isr17
                0x00000000c001bc5e                isr18
                0x00000000c001bc68                irq3
                0x00000000c001bc72                irq4
                0x00000000c001bc7c                irq5
                0x00000000c001bc86                irq6
                0x00000000c001bc90                irq7
                0x00000000c001bc9a                irq8
                0x00000000c001bca4                irq9
                0x00000000c001bcae                irq10
                0x00000000c001bcb8                irq11
                0x00000000c001bcc2                irq12
                0x00000000c001bccc                irq13
                0x00000000c001bcd6                irq14
                0x00000000c001bce0                irq15
                0x00000000c001bcea                irq1
                0x00000000c001bcf1                irq2
                0x00000000c001bcf8                isr96
                0x00000000c001bcff                irq0
                0x00000000c001bd04                int_common_stub
                0x00000000c001bd04                syscall_common_stub
                0x00000000c001bd36                irq16
                0x00000000c001bd40                irq17
                0x00000000c001bd4a                irq18
                0x00000000c001bd54                irq19
                0x00000000c001bd5e                irq20
                0x00000000c001bd68                irq21
                0x00000000c001bd72                irq22
                0x00000000c001bd7c                irq23
 *fill*         0x00000000c001bd86        0xa 
 .text          0x00000000c001bd90       0x10 arch/i386/rdrand.32
                0x00000000c001bd90                i386GetRDRAND
 .text          0x00000000c001bda0       0x39 arch/i386/sse.32
                0x00000000c001bda0                absolutelyNoChanceInHell
                0x00000000c001bda0                sseDetect
                0x00000000c001bdb8                sseSave
                0x00000000c001bdc0                sseLoad
                0x00000000c001bdc8                sseInit
                0x00000000c001bdd8                sseClose
 *fill*         0x00000000c001bdd9        0x7 
 .text          0x00000000c001bde0       0x49 arch/i386/x87.32
                0x00000000c001bde6                x87Detect
                0x00000000c001be01                x87Save
                0x00000000c001be08                x87Load
                0x00000000c001be0f                x87Init
                0x00000000c001be28                x87Close
 *fill*         0x00000000c001be29        0x3 
 .text          0x00000000c001be2c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001be51        0x0 crtn.32
 *fill*         0x00000000c001be51        0x3 
 .text          0x00000000c001be54      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001be54                __divdi3
 *fill*         0x00000000c001bf9f        0x1 
 .text          0x00000000c001bfa0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001bfa0                __moddi3
 *fill*         0x00000000c001c11e        0x2 
 .text          0x00000000c001c120       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c120                __udivdi3
 *fill*         0x00000000c001c21f        0x1 
 .text          0x00000000c001c220      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c220                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c340        0x0
 .iplt          0x00000000c001c340        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c33a        0xf
 .init          0x00000000c001c33a        0x3 crti.32
                0x00000000c001c33a                _init
 .init          0x00000000c001c33d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c342        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c347        0x2 crtn.32

.fini           0x00000000c001c349        0xa
 .fini          0x00000000c001c349        0x3 crti.32
                0x00000000c001c349                _fini
 .fini          0x00000000c001c34c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c351        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c354       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c354       0x23 core/computer.32
                0x00000000c001c354                Computer::~Computer()
                0x00000000c001c354                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c378       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c378       0x2a core/computer.32
                0x00000000c001c378                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c3a2       0x21
 .text._Z10idleCommonv
                0x00000000c001c3a2       0x21 core/idle.32
                0x00000000c001c3a2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c3c4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c3c4        0x2 core/unixfile.32
                0x00000000c001c3c4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c3c4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c3c6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c3c6       0x42 core/unixfile.32
                0x00000000c001c3c6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c3c6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c408       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c408       0xd3 core/unixfile.32
                0x00000000c001c408                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c4dc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c4dc        0x7 core/unixfile.32
                0x00000000c001c4dc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c4e4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c4e4       0xa1 core/unixfile.32
                0x00000000c001c4e4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c586        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c586        0x8 core/unixfile.32
                0x00000000c001c586                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c58e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c58e       0x1a hal/device.32
                0x00000000c001c58e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c58e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c5a8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c5a8       0x2a hal/device.32
                0x00000000c001c5a8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c5d2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c5d2       0xdc hal/device.32
                0x00000000c001c5d2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c6ae       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c6ae       0x42 hal/device.32
                0x00000000c001c6ae                LinkedList<Device>::LinkedList()
                0x00000000c001c6ae                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c6f0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c6f0       0x1c hal/timer.32
                0x00000000c001c6f0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c70c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c70c        0x7 hal/timer.32
                0x00000000c001c70c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c714       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c714       0xb8 hal/timer.32
                0x00000000c001c714                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c7cc       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c7cc       0xda hal/timer.32
                0x00000000c001c7cc                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c8a8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c8a8       0x23 hw/acpi.32
                0x00000000c001c8a8                ACPI::~ACPI()
                0x00000000c001c8a8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c8cc       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c8cc       0x2a hw/acpi.32
                0x00000000c001c8cc                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c8f8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c8f8        0x2 hw/acpi.32
                0x00000000c001c8f8                LinkedList<Device>::~LinkedList()
                0x00000000c001c8f8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c8fc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c8fc       0x1c hw/acpi.32
                0x00000000c001c8fc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c918        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c918        0x7 hw/acpi.32
                0x00000000c001c918                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c920       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c920       0xb8 hw/acpi.32
                0x00000000c001c920                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001c9d8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001c9d8       0x23 hw/cpu.32
                0x00000000c001c9d8                CPU::~CPU()
                0x00000000c001c9d8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001c9fc       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001c9fc       0x2a hw/cpu.32
                0x00000000c001c9fc                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ca28        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ca28        0x2 thr/prcssthr.32
                0x00000000c001ca28                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ca28                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ca2c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ca2c       0x49 thr/prcssthr.32
                0x00000000c001ca2c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ca2c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ca78       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ca78       0x42 thr/prcssthr.32
                0x00000000c001ca78                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ca78                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cabc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cabc        0x8 thr/prcssthr.32
                0x00000000c001cabc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001cac4       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cac4       0x23 hw/bus/pci.32
                0x00000000c001cac4                PCI::~PCI()
                0x00000000c001cac4                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cae8       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cae8       0x2a hw/bus/pci.32
                0x00000000c001cae8                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cb12       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cb12       0x23 hw/diskctrl/ide.32
                0x00000000c001cb12                IDE::~IDE()
                0x00000000c001cb12                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cb36       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cb36       0x2a hw/diskctrl/ide.32
                0x00000000c001cb36                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cb60       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cb60       0x23 hw/diskctrl/satabus.32
                0x00000000c001cb60                SATABus::~SATABus()
                0x00000000c001cb60                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cb84       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cb84       0x2a hw/diskctrl/satabus.32
                0x00000000c001cb84                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cbae       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cbae       0x23 hw/diskphys/ata.32
                0x00000000c001cbae                ATA::~ATA()
                0x00000000c001cbae                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001cbd2       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001cbd2       0x2a hw/diskphys/ata.32
                0x00000000c001cbd2                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cbfc       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cbfc       0x23 hw/diskphys/atapi.32
                0x00000000c001cbfc                ATAPI::~ATAPI()
                0x00000000c001cbfc                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001cc20       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001cc20       0x2a hw/diskphys/atapi.32
                0x00000000c001cc20                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cc4a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cc4a       0x23 hw/diskphys/sata.32
                0x00000000c001cc4a                SATA::~SATA()
                0x00000000c001cc4a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cc6e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cc6e       0x2a hw/diskphys/sata.32
                0x00000000c001cc6e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cc98       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cc98       0x23 hw/diskphys/satapi.32
                0x00000000c001cc98                SATAPI::~SATAPI()
                0x00000000c001cc98                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001ccbc       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001ccbc       0x2a hw/diskphys/satapi.32
                0x00000000c001ccbc                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cce6       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cce6       0x23 hw/intctrl/apic.32
                0x00000000c001cce6                IOAPIC::~IOAPIC()
                0x00000000c001cce6                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cd0a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cd0a       0x2a hw/intctrl/apic.32
                0x00000000c001cd0a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001cd34       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001cd34       0x23 hw/timer/apictimer.32
                0x00000000c001cd34                APICTimer::~APICTimer()
                0x00000000c001cd34                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001cd58       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001cd58       0x2a hw/timer/apictimer.32
                0x00000000c001cd58                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001cd84       0x23
 .text._ZN3PITD2Ev
                0x00000000c001cd84       0x23 hw/timer/pit.32
                0x00000000c001cd84                PIT::~PIT()
                0x00000000c001cd84                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001cda8       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001cda8       0x2a hw/timer/pit.32
                0x00000000c001cda8                PIT::~PIT()

.rodata         0x00000000c001cdd2     0x2aa2
                0x00000000c001cdd2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001cdd2        0x2 
 .ctors         0x00000000c001cdd4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001cdd8        0x4 core/unixfile.32
 .ctors         0x00000000c001cddc        0x4 thr/prcssthr.32
 .ctors         0x00000000c001cde0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cde4                end_ctors = .
                0x00000000c001cde4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001cde4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001cde8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cde8                __DTOR_END__
                0x00000000c001cdec                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cdec       0x14 
 .rodata        0x00000000c001ce00      0x101 acpica/utclib.32
                0x00000000c001ce00                AcpiGbl_Ctypes
 *fill*         0x00000000c001cf01        0x3 
 .rodata        0x00000000c001cf04       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001cf1c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001cf66       0x1a 
 .rodata        0x00000000c001cf80       0xed fs/fat/ff.32
 *fill*         0x00000000c001d06d       0x13 
 .rodata        0x00000000c001d080      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d480       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d491      0x115 core/computer.32
 *fill*         0x00000000c001d5a6        0x2 
 .rodata.str1.4
                0x00000000c001d5a8       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d610       0x2c core/computer.32
                0x00000000c001d610                vtable for Computer
 .rodata.str1.4
                0x00000000c001d63c       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d66c        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d678       0x17 core/main.32
 *fill*         0x00000000c001d68f        0x1 
 .rodata.str1.4
                0x00000000c001d690       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d735       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d78d       0x39 core/pipe.32
 *fill*         0x00000000c001d7c6        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d7c8       0x1c core/pipe.32
                0x00000000c001d7c8                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d7e4       0x75 core/terminal.32
 *fill*         0x00000000c001d859        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d85c       0x1c core/terminal.32
                0x00000000c001d85c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d878       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d89a       0x15 core/unixfile.32
 *fill*         0x00000000c001d8af        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d8b0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d8fb        0x8 core/unixfile.32
 *fill*         0x00000000c001d903        0x1 
 .rodata.str1.4
                0x00000000c001d904       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d924       0x1c core/unixfile.32
                0x00000000c001d924                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001d940       0x1c core/unixfile.32
                0x00000000c001d940                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001d95c      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dac3      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dbca       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dbfd       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dbfd        0x3 
 .rodata        0x00000000c001dc00      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001dd50       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001dd50       0x68 fs/vfs.32
                0x00000000c001dd50                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001ddb8       0x1c fs/vfs.32
                0x00000000c001ddb8                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001ddd4       0x1c fs/vfs.32
                0x00000000c001ddd4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001ddf0       0x2c hal/bus.32
                0x00000000c001ddf0                vtable for Bus
 .rodata.str1.1
                0x00000000c001de1c       0x1e hal/clock.32
 *fill*         0x00000000c001de3a        0x2 
 .rodata._ZTV5Clock
                0x00000000c001de3c       0x3c hal/clock.32
                0x00000000c001de3c                vtable for Clock
 *fill*         0x00000000c001de78        0x8 
 .rodata        0x00000000c001de80       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001deb0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001df08       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001df08       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001df08       0x2c hal/device.32
                0x00000000c001df08                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001df34       0x2c hal/device.32
                0x00000000c001df34                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001df60       0x2c hal/diskctrl.32
                0x00000000c001df60                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001df8c       0x38 hal/diskphys.32
                0x00000000c001df8c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001dfc4       0x3e hal/intctrl.32
 *fill*         0x00000000c001e002        0x2 
 .rodata.str1.4
                0x00000000c001e004       0x5d hal/intctrl.32
 .rodata        0x00000000c001e061       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e0b4       0x34 hal/keybrd.32
                0x00000000c001e0b4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e0e8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e12c       0x2c hal/logidisk.32
                0x00000000c001e12c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e158       0x2c hal/mouse.32
                0x00000000c001e158                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e184        0xb hal/partition.32
 *fill*         0x00000000c001e18f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e190       0x44 hal/serial.32
                0x00000000c001e190                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e1d4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e1d4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e1d4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e1d4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e1d4       0x30 hal/timer.32
                0x00000000c001e1d4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e204       0x10 hal/vcache.32
                0x00000000c001e204                vtable for VCache
 .rodata.str1.1
                0x00000000c001e214       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e27c       0x48 hal/video.32
                0x00000000c001e27c                vtable for Video
 .rodata.str1.4
                0x00000000c001e2c4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e35f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e49b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e49b        0x8 hw/acpi.32
 *fill*         0x00000000c001e49b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e49c       0x2c hw/acpi.32
                0x00000000c001e49c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e4c8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e635        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e638       0x2c hw/cpu.32
                0x00000000c001e638                vtable for CPU
 .rodata.str1.1
                0x00000000c001e664       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e6a0       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c001e731      0x1f1 krnl/signal.32
 *fill*         0x00000000c001e922        0x2 
 .rodata.str1.4
                0x00000000c001e924       0x26 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c001e94a       0x97 krnl/syscalls.32
                                         0xa7 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e9e1       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001ea26        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001ea30        0xc sys/sbrk.32
 .rodata.str1.1
                0x00000000c001ea3c       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001ea90       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001eabc      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001ec88       0x57 thr/prcssthr.32
 *fill*         0x00000000c001ecdf        0x1 
 .rodata.str1.4
                0x00000000c001ece0      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001edec       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001edec       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001edec       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001edec        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001edec       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001ee8c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001eebc      0x182 arch/i386/hal.32
                                        0x191 (size before relaxing)
 *fill*         0x00000000c001f03e        0x2 
 .rodata.str1.4
                0x00000000c001f040       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001f0b3       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001f0c8       0x3c arch/i386/rtc.32
                0x00000000c001f0c8                vtable for RTC
 .rodata.str1.1
                0x00000000c001f104       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f145        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f148       0x68 fs/fat/vfslink.32
                0x00000000c001f148                vtable for FAT
 .rodata.str1.1
                0x00000000c001f1b0        0x3 fs/iso9660/helper.32
                                          0x5 (size before relaxing)
 .rodata.str1.1
                0x00000000c001f1b3       0x49 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c001f1fc       0x68 fs/iso9660/vfslink.32
                0x00000000c001f1fc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f264       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f2a8       0x34 hal/sound/sndcard.32
                0x00000000c001f2a8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f2dc       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f31b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f353       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f3f4       0x2c hw/bus/pci.32
                0x00000000c001f3f4                vtable for PCI
 .rodata.str1.1
                0x00000000c001f420       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f4a7        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f4a8       0x2c hw/diskctrl/ide.32
                0x00000000c001f4a8                vtable for IDE
 .rodata.str1.4
                0x00000000c001f4d4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f4f8       0x2c hw/diskctrl/satabus.32
                0x00000000c001f4f8                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f524       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f536        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f538       0x38 hw/diskphys/ata.32
                0x00000000c001f538                vtable for ATA
 .rodata.str1.1
                0x00000000c001f570        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f57d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f580       0x38 hw/diskphys/atapi.32
                0x00000000c001f580                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f5b8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f634       0x38 hw/diskphys/sata.32
                0x00000000c001f634                vtable for SATA
 .rodata.str1.1
                0x00000000c001f66c      0x100 hw/diskphys/satapi.32
                                        0x10d (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f76c       0x38 hw/diskphys/satapi.32
                0x00000000c001f76c                vtable for SATAPI
 .rodata        0x00000000c001f7a4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f7ac       0x2c hw/intctrl/apic.32
                0x00000000c001f7ac                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f7d8       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f7f3        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f7f4       0x30 hw/timer/apictimer.32
                0x00000000c001f7f4                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f824       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f841        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f844       0x30 hw/timer/pit.32
                0x00000000c001f844                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f874      0x39d
 *(.data)
 .data          0x00000000c001f874        0x0 crti.32
 .data          0x00000000c001f874        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f874                __dso_handle
 .data          0x00000000c001f878        0x0 acpica/utclib.32
 .data          0x00000000c001f878        0x0 core/malloc.32
 .data          0x00000000c001f878        0x0 libk/ctype.32
 .data          0x00000000c001f878        0x0 libk/string.32
 .data          0x00000000c001f878        0x0 fs/fat/diskio.32
 .data          0x00000000c001f878        0x0 fs/fat/ff.32
 .data          0x00000000c001f878        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f878        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f878        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f878        0x0 core/computer.32
 .data          0x00000000c001f878        0x0 core/gdt.32
 .data          0x00000000c001f878        0x0 core/idle.32
 .data          0x00000000c001f878        0x0 core/idt.32
 .data          0x00000000c001f878        0x4 core/kheap.32
 .data          0x00000000c001f87c        0x0 core/main.32
 .data          0x00000000c001f87c        0x4 core/physmgr.32
                0x00000000c001f87c                Phys::bitmap
 .data          0x00000000c001f880        0x0 core/pipe.32
 .data          0x00000000c001f880       0x60 core/terminal.32
                0x00000000c001f880                VgaText::hiddenOut
                0x00000000c001f8a0                ansiToVGAMappings
 .data          0x00000000c001f8e0        0x0 core/tss.32
 .data          0x00000000c001f8e0        0x4 core/unixfile.32
                0x00000000c001f8e0                UnixFile::nextFd
 .data          0x00000000c001f8e4       0x15 core/virtmgr.32
                0x00000000c001f8e4                Virt::pageAllocPtr
                0x00000000c001f8e8                Virt::bitmap
                0x00000000c001f8ec                Virt::swapfileSectorsPerPage
                0x00000000c001f8f0                Virt::swapfileLength
                0x00000000c001f8f4                Virt::swapfileSector
                0x00000000c001f8f8                Virt::swapfileDrive
 *fill*         0x00000000c001f8f9        0x3 
 .data          0x00000000c001f8fc        0x4 coreobjs/c++.32
                0x00000000c001f8fc                __stack_chk_guard
 .data          0x00000000c001f900        0x0 dbg/kconsole.32
 .data          0x00000000c001f900        0x0 fs/vfs.32
 .data          0x00000000c001f900        0x0 hal/bus.32
 .data          0x00000000c001f900        0x0 hal/buzzer.32
 .data          0x00000000c001f900        0x0 hal/clock.32
 .data          0x00000000c001f900        0x0 hal/device.32
 .data          0x00000000c001f900        0x0 hal/diskctrl.32
 .data          0x00000000c001f900        0x0 hal/diskphys.32
 .data          0x00000000c001f900        0x0 hal/fpu.32
 .data          0x00000000c001f900        0x0 hal/intctrl.32
 .data          0x00000000c001f900        0x0 hal/keybrd.32
 .data          0x00000000c001f900        0x0 hal/logidisk.32
 .data          0x00000000c001f900        0x0 hal/mouse.32
 .data          0x00000000c001f900        0x0 hal/partition.32
 .data          0x00000000c001f900        0x0 hal/serial.32
 .data          0x00000000c001f900        0x0 hal/timer.32
 .data          0x00000000c001f900        0x0 hal/vcache.32
 .data          0x00000000c001f900        0x0 hal/video.32
 .data          0x00000000c001f900       0x10 hw/acpi.32
                0x00000000c001f900                legacyIRQRemaps
 .data          0x00000000c001f910        0x4 hw/cpu.32
                0x00000000c001f910                lastCode
 *fill*         0x00000000c001f914        0xc 
 .data          0x00000000c001f920      0x142 krnl/bootmsg.32
                0x00000000c001f920                KiSplashScreen
 *fill*         0x00000000c001fa62       0x1e 
 .data          0x00000000c001fa80       0x4d krnl/env.32
                0x00000000c001fa80                defaultSysEnv
 .data          0x00000000c001facd        0x0 krnl/inlines.32
 .data          0x00000000c001facd        0x0 krnl/panic.32
 .data          0x00000000c001facd        0x0 krnl/powctrl.32
 .data          0x00000000c001facd        0x0 krnl/resolve.32
 *fill*         0x00000000c001facd       0x13 
 .data          0x00000000c001fae0       0x4c krnl/signal.32
                0x00000000c001fae0                KiDefaultSignalHandlers
 *fill*         0x00000000c001fb2c       0x14 
 .data          0x00000000c001fb40       0xcc krnl/syscalls.32
                0x00000000c001fb40                systemCallHandlers
 .data          0x00000000c001fc0c        0x0 reg/registry.32
 .data          0x00000000c001fc0c        0x0 sys/eject.32
 .data          0x00000000c001fc0c        0x0 sys/exit.32
 .data          0x00000000c001fc0c        0x0 sys/getcwd.32
 .data          0x00000000c001fc0c        0x0 sys/getpid.32
 .data          0x00000000c001fc0c        0x0 sys/getramdata.32
 .data          0x00000000c001fc0c        0x0 sys/getvgaptr.32
 .data          0x00000000c001fc0c        0x0 sys/loaddll.32
 .data          0x00000000c001fc0c        0x0 sys/read.32
 .data          0x00000000c001fc0c        0x0 sys/registersignal.32
 .data          0x00000000c001fc0c        0x0 sys/sbrk.32
 .data          0x00000000c001fc0c        0x0 sys/setcwd.32
 .data          0x00000000c001fc0c        0x0 sys/settime.32
 .data          0x00000000c001fc0c        0x0 sys/timezone.32
 .data          0x00000000c001fc0c        0x0 sys/write.32
 .data          0x00000000c001fc0c        0x0 sys/wsbe.32
 .data          0x00000000c001fc0c        0x0 sys/yield.32
 .data          0x00000000c001fc0c        0x0 thr/elf.32
 .data          0x00000000c001fc0c        0x4 thr/prcssthr.32
                0x00000000c001fc0c                Thr::nextPID
 .data          0x00000000c001fc10        0x0 vm86/vm8086.32
 .data          0x00000000c001fc10        0x0 arch/i386/hal.32
 .data          0x00000000c001fc10        0x0 arch/i386/pic.32
 .data          0x00000000c001fc10        0x0 arch/i386/rtc.32
 .data          0x00000000c001fc10        0x0 arch/i386/vga.32
 .data          0x00000000c001fc10        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fc10        0x0 fs/iso9660/helper.32
 .data          0x00000000c001fc10        0x1 fs/iso9660/vfslink.32
                0x00000000c001fc10                recentDriveletter
 .data          0x00000000c001fc11        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fc11        0x0 hal/sound/sndport.32
 .data          0x00000000c001fc11        0x0 hw/bus/isa.32
 .data          0x00000000c001fc11        0x0 hw/bus/pci.32
 .data          0x00000000c001fc11        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fc11        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fc11        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fc11        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fc11        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fc11        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fc11        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fc11        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fc11        0x0 hw/timer/pit.32
 .data          0x00000000c001fc11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fc11        0x0 crtn.32
 .data          0x00000000c001fc11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fc11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fc11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fc11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fc14        0x0
 .got           0x00000000c001fc14        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fc14        0x0
 .got.plt       0x00000000c001fc14        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fc14        0x0
 .igot.plt      0x00000000c001fc14        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fc14        0x0
 .tm_clone_table
                0x00000000c001fc14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fc14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fc11      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fc11        0x3 
 .eh_frame      0x00000000c001fc14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fc14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fc14       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fc6c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fcac       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fd18       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001fd9c        0x0
 .rel.got       0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001fd9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001fd9c     0x4b8c
                0x00000000c001fd9c                sbss = .
 *(COMMON)
 *fill*         0x00000000c001fd9c        0x4 
 COMMON         0x00000000c001fda0       0xa0 fs/iso9660/iso9660.32
                0x00000000c001fda0                dcache
                0x00000000c001fde0                cdDriveLetter
                0x00000000c001fe00                icache
 *(.bss)
 .bss           0x00000000c001fe40        0x0 crti.32
 .bss           0x00000000c001fe40       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001fe60        0x4 acpica/utclib.32
 *fill*         0x00000000c001fe64       0x1c 
 .bss           0x00000000c001fe80      0x378 core/malloc.32
 .bss           0x00000000c00201f8        0x0 libk/ctype.32
 .bss           0x00000000c00201f8        0x0 libk/string.32
 .bss           0x00000000c00201f8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c00201f8        0x8 
 .bss           0x00000000c0020200       0x88 fs/fat/ff.32
 .bss           0x00000000c0020288        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0020288        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0020288       0x18 
 .bss           0x00000000c00202a0      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0020c38        0x6 core/computer.32
                0x00000000c0020c38                Krnl::computer
                0x00000000c0020c3c                KeIsPreemptionOn
                0x00000000c0020c3d                KeIsSchedulingOn
 *fill*         0x00000000c0020c3e        0x2 
 .bss           0x00000000c0020c40        0x6 core/gdt.32
                0x00000000c0020c40                gdtDescr
 .bss           0x00000000c0020c46        0x0 core/idle.32
 *fill*         0x00000000c0020c46        0x2 
 .bss           0x00000000c0020c48        0x6 core/idt.32
                0x00000000c0020c48                idtDescr
 .bss           0x00000000c0020c4e        0x0 core/kheap.32
 *fill*         0x00000000c0020c4e        0x2 
 .bss           0x00000000c0020c50        0x4 core/main.32
                0x00000000c0020c50                sysBootSettings
 .bss           0x00000000c0020c54       0x29 core/physmgr.32
                0x00000000c0020c54                Phys::forbidEvictions
                0x00000000c0020c58                Phys::currentPagePointer
                0x00000000c0020c5c                Phys::highestMem
                0x00000000c0020c60                Phys::oldPercent
                0x00000000c0020c64                Phys::usedPages
                0x00000000c0020c68                Phys::usablePages
                0x00000000c0020c6c                Phys::dmaUsage
 .bss           0x00000000c0020c7d        0x0 core/pipe.32
 *fill*         0x00000000c0020c7d        0x3 
 .bss           0x00000000c0020c80        0x9 core/terminal.32
                0x00000000c0020c80                terminalCycle
                0x00000000c0020c84                activeTerminal
                0x00000000c0020c88                VgaText::graphicMode
 *fill*         0x00000000c0020c89        0x1 
 .bss           0x00000000c0020c8a        0x2 core/tss.32
                0x00000000c0020c8a                doubleFaultSelector
 *fill*         0x00000000c0020c8c       0x14 
 .bss           0x00000000c0020ca0       0x84 core/unixfile.32
                0x00000000c0020ca0                sfileLpt
                0x00000000c0020ce0                sfileCom
                0x00000000c0020d04                sfileNul
                0x00000000c0020d08                sfilePnt
                0x00000000c0020d0c                sfileAux
                0x00000000c0020d10                sfileCon
                0x00000000c0020d14                initialFilesAdded
                0x00000000c0020d18                unixFileLinkedList
 .bss           0x00000000c0020d24       0x10 core/virtmgr.32
                0x00000000c0020d24                twswaps
                0x00000000c0020d28                swapBalance
                0x00000000c0020d2c                Virt::swapfileBitmap
                0x00000000c0020d30                firstVAS
 .bss           0x00000000c0020d34        0x0 coreobjs/c++.32
 .bss           0x00000000c0020d34        0x0 dbg/kconsole.32
 .bss           0x00000000c0020d34        0x4 fs/vfs.32
                0x00000000c0020d34                installedFilesystems
 .bss           0x00000000c0020d38        0x0 hal/bus.32
 .bss           0x00000000c0020d38        0x0 hal/buzzer.32
 .bss           0x00000000c0020d38        0x8 hal/clock.32
                0x00000000c0020d38                User::dstOn
                0x00000000c0020d39                User::timezoneHalfHourOffset
                0x00000000c0020d3c                User::timezoneHourOffset
 .bss           0x00000000c0020d40        0x0 hal/device.32
 .bss           0x00000000c0020d40        0x0 hal/diskctrl.32
 .bss           0x00000000c0020d40        0x0 hal/diskphys.32
 .bss           0x00000000c0020d40        0x0 hal/fpu.32
 .bss           0x00000000c0020d40     0x2000 hal/intctrl.32
                0x00000000c0020d40                INT_contexts
                0x00000000c0021d40                INT_handlers
 .bss           0x00000000c0022d40      0x429 hal/keybrd.32
                0x00000000c0022d40                keyboardWaitingTaskList
                0x00000000c0022d44                keyboardSetupYet
                0x00000000c0022d48                guiKeyboardHandler
                0x00000000c0022d60                keystates
 *fill*         0x00000000c0023169       0x17 
 .bss           0x00000000c0023180       0x88 hal/logidisk.32
                0x00000000c0023180                diskAssignments
                0x00000000c00231a0                disks
 .bss           0x00000000c0023208        0x4 hal/mouse.32
                0x00000000c0023208                guiMouseHandler
 .bss           0x00000000c002320c        0x0 hal/partition.32
 .bss           0x00000000c002320c        0x0 hal/serial.32
 .bss           0x00000000c002320c        0x4 hal/timer.32
                0x00000000c002320c                milliTenthsSinceBoot
 .bss           0x00000000c0023210        0x0 hal/vcache.32
 .bss           0x00000000c0023210        0x4 hal/video.32
                0x00000000c0023210                screen
 *fill*         0x00000000c0023214        0xc 
 .bss           0x00000000c0023220      0x480 hw/acpi.32
                0x00000000c0023220                systemSleepFunction
                0x00000000c0023224                systemResetFunction
                0x00000000c0023228                systemShutdownFunction
                0x00000000c002322c                nextACPITable
                0x00000000c0023240                acpiTables
                0x00000000c0023440                usingXSDT
                0x00000000c0023444                MADTpointer
                0x00000000c0023448                RSDTpointer
                0x00000000c002344c                RSDPpointer
                0x00000000c0023450                nextAPICNMI
                0x00000000c0023460                apicNMIInfo
                0x00000000c00234e0                legacyIRQFlags
                0x00000000c0023500                ioapicDiscoveryNumber
                0x00000000c0023520                ioapicFoundInMADT
                0x00000000c0023540                ioapicAddresses
                0x00000000c00235c0                ioapicGSIBase
                0x00000000c0023640                processorDiscoveryNumber
                0x00000000c0023660                matchingAPICID
                0x00000000c0023680                processorID
 .bss           0x00000000c00236a0       0x10 hw/cpu.32
                0x00000000c00236a0                lastD
                0x00000000c00236a4                lastC
                0x00000000c00236a8                lastB
                0x00000000c00236ac                lastA
 .bss           0x00000000c00236b0        0x0 krnl/bootmsg.32
 .bss           0x00000000c00236b0        0x8 krnl/env.32
                0x00000000c00236b0                Krnl::userEnv
                0x00000000c00236b4                Krnl::systemEnv
 .bss           0x00000000c00236b8        0x0 krnl/inlines.32
 .bss           0x00000000c00236b8        0x1 krnl/panic.32
                0x00000000c00236b8                KeIsKernelInPanic
 *fill*         0x00000000c00236b9        0x7 
 .bss           0x00000000c00236c0       0x48 krnl/powctrl.32
                0x00000000c00236c0                Krnl::powCtrlOnBattery
                0x00000000c00236e0                Krnl::currentPowerSettings
                0x00000000c0023704                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0023708        0x0 krnl/resolve.32
 .bss           0x00000000c0023708        0x0 krnl/signal.32
 .bss           0x00000000c0023708        0x0 krnl/syscalls.32
 .bss           0x00000000c0023708        0x0 reg/registry.32
 .bss           0x00000000c0023708        0x0 sys/eject.32
 .bss           0x00000000c0023708        0x0 sys/exit.32
 .bss           0x00000000c0023708        0x0 sys/getcwd.32
 .bss           0x00000000c0023708        0x0 sys/getpid.32
 .bss           0x00000000c0023708        0x0 sys/getramdata.32
 .bss           0x00000000c0023708        0x0 sys/getvgaptr.32
 .bss           0x00000000c0023708        0x0 sys/loaddll.32
 .bss           0x00000000c0023708        0x0 sys/read.32
 .bss           0x00000000c0023708        0x0 sys/registersignal.32
 .bss           0x00000000c0023708        0x0 sys/sbrk.32
 .bss           0x00000000c0023708        0x0 sys/setcwd.32
 .bss           0x00000000c0023708        0x0 sys/settime.32
 .bss           0x00000000c0023708        0x0 sys/timezone.32
 .bss           0x00000000c0023708        0x0 sys/write.32
 .bss           0x00000000c0023708        0x0 sys/wsbe.32
 .bss           0x00000000c0023708        0x0 sys/yield.32
 *fill*         0x00000000c0023708       0x18 
 .bss           0x00000000c0023720      0x7a4 thr/elf.32
                0x00000000c0023720                Thr::driverLookupNext
                0x00000000c0023740                Thr::driverLookupLen
                0x00000000c0023940                Thr::driverLookupAddr
                0x00000000c0023b40                Thr::driverNameLookup
                0x00000000c0023d40                Thr::kernelSymbols
                0x00000000c0023dc0                Thr::kernelStringTable
                0x00000000c0023e40                Thr::kernelSymbolTable
                0x00000000c0023ec0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023ec4        0x4 
 .bss           0x00000000c0023ec8       0x68 thr/prcssthr.32
                0x00000000c0023ec8                cleanerThread
                0x00000000c0023ecc                weNeedTheCleanerToNotBlock
                0x00000000c0023ed0                retValLockStuff
                0x00000000c0023ed4                retValSchedLock
                0x00000000c0023ed8                lockStuffLock
                0x00000000c0023edc                schedulerLock
                0x00000000c0023ee0                taskSwitchesPostponedFlag
                0x00000000c0023ee4                postponeTaskSwitchesCounter
                0x00000000c0023ee8                irqDisableCounter
                0x00000000c0023eec                terminatedTaskList
                0x00000000c0023ef8                sleepingTaskList
                0x00000000c0023f04                taskList
                0x00000000c0023f10                kernelProcess
 *fill*         0x00000000c0023f30       0x10 
 .bss           0x00000000c0023f40       0x40 vm86/vm8086.32
                0x00000000c0023f40                Vm::vmRetV
                0x00000000c0023f44                Vm::vmDone
                0x00000000c0023f45                Vm::vmReady
                0x00000000c0023f48                Vm::vm86Thread
                0x00000000c0023f4c                Vm::vmToHostCommsPtr
                0x00000000c0023f60                Vm::vmToHostComms
 .bss           0x00000000c0023f80       0x14 arch/i386/hal.32
                0x00000000c0023f80                apic
                0x00000000c0023f84                fpuOwner
                0x00000000c0023f88                coproLoadFunc
                0x00000000c0023f8c                coproSaveFunc
                0x00000000c0023f90                gpFaultIntercept
 .bss           0x00000000c0023f94        0x0 arch/i386/pic.32
 .bss           0x00000000c0023f94        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023f96        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023f96        0xa 
 .bss           0x00000000c0023fa0       0xf0 fs/fat/vfslink.32
                0x00000000c0023fa0                FAT::fats
                0x00000000c0023fc0                FAT::vfsToFatRemaps
                0x00000000c0024040                fatToVFSRemaps
 .bss           0x00000000c0024090        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0024090       0x10 
 .bss           0x00000000c00240a0      0x820 fs/iso9660/vfslink.32
                0x00000000c00240a0                iso9660Owner
                0x00000000c00240a4                recentSector
                0x00000000c00240c0                recentBuffer
 .bss           0x00000000c00248c0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00248c0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00248c0        0x0 hw/bus/isa.32
 .bss           0x00000000c00248c0        0xd hw/bus/pci.32
                0x00000000c00248c0                thePCI
 .bss           0x00000000c00248cd        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00248cd        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00248cd        0x3 
 .bss           0x00000000c00248d0        0x8 hw/diskphys/ata.32
                0x00000000c00248d0                ataSectorsWritten
                0x00000000c00248d4                ataSectorsRead
 .bss           0x00000000c00248d8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00248d8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00248d8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c00248d8        0x8 
 .bss           0x00000000c00248e0       0x41 hw/intctrl/apic.32
                0x00000000c00248e0                noOfIOAPICs
                0x00000000c0024900                ioapics
                0x00000000c0024920                IOAPICsSetupYet
 .bss           0x00000000c0024921        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024921        0x3 
 .bss           0x00000000c0024924        0x4 hw/timer/pit.32
                0x00000000c0024924                pitFreq
 .bss           0x00000000c0024928        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024928        0x0 crtn.32
 .bss           0x00000000c0024928        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0024928        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0024928        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0024928        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024928                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00294b4                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
