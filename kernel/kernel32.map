Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x217ca
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0x2 
 .text          0x00000000c00003a4      0x5dd acpica/utclib.32
                0x00000000c00003a4                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004a8                memset
                0x00000000c00004c4                strlen
                0x00000000c00004dc                strpbrk
                0x00000000c0000518                strtok
                0x00000000c0000564                strcpy
                0x00000000c0000588                strncpy
                0x00000000c00005f0                strcmp
                0x00000000c0000630                strchr
                0x00000000c0000654                strncmp
                0x00000000c00006a4                strcat
                0x00000000c00006d4                strncat
                0x00000000c0000710                strstr
                0x00000000c0000758                toupper
                0x00000000c000076c                tolower
                0x00000000c0000780                simple_strtoul
 .text          0x00000000c0000981      0xfad core/malloc.32
                0x00000000c0000aec                dlfree
                0x00000000c0000e47                dlmalloc
                0x00000000c0001384                dlrealloc
                0x00000000c0001527                dlmemalign
                0x00000000c000164a                dlcalloc
                0x00000000c00016e4                dlcfree
                0x00000000c00016e9                dlindependent_calloc
                0x00000000c000170e                dlindependent_comalloc
                0x00000000c0001725                dlvalloc
                0x00000000c0001750                dlpvalloc
                0x00000000c0001786                dlmalloc_trim
                0x00000000c0001793                dlmalloc_usable_size
                0x00000000c00017c4                dlmallinfo
                0x00000000c0001893                dlmalloc_stats
                0x00000000c00018a4                dlmallopt
 .text          0x00000000c000192e        0x0 libk/string.32
 .text          0x00000000c000192e       0x51 fs/fat/diskio.32
                0x00000000c000192e                disk_status
                0x00000000c0001931                disk_initialize
                0x00000000c0001934                disk_read
                0x00000000c000194a                disk_write
                0x00000000c0001960                disk_ioctl
 .text          0x00000000c000197f     0x6a69 fs/fat/ff.32
                0x00000000c0004c4d                f_mount
                0x00000000c0004caf                f_open
                0x00000000c00050eb                f_read
                0x00000000c000536b                f_write
                0x00000000c0005625                f_sync
                0x00000000c0005801                f_close
                0x00000000c0005830                f_lseek
                0x00000000c0005ce7                f_opendir
                0x00000000c0005de9                f_closedir
                0x00000000c0005e0b                f_readdir
                0x00000000c0005ea6                f_stat
                0x00000000c0005f35                f_getfree
                0x00000000c0006100                f_truncate
                0x00000000c00061f8                f_unlink
                0x00000000c000637b                f_mkdir
                0x00000000c00065a7                f_rename
                0x00000000c000689a                f_chmod
                0x00000000c0006978                f_utime
                0x00000000c0006a56                f_getlabel
                0x00000000c0006c44                f_setlabel
                0x00000000c0006eb1                f_expand
                0x00000000c00070e7                f_forward
                0x00000000c00072c5                f_mkfs
 .text          0x00000000c00083e8       0x2f fs/fat/ffsystem.32
                0x00000000c00083e8                ff_memalloc
                0x00000000c0008400                ff_memfree
 *fill*         0x00000000c0008417        0x1 
 .text          0x00000000c0008418      0x274 fs/fat/ffunicode.32
                0x00000000c0008418                ff_uni2oem
                0x00000000c00084b0                ff_oem2uni
                0x00000000c0008524                ff_wtoupper
 .text          0x00000000c000868c       0xa7 compat/inlines.32
                0x00000000c000868c                CPU::current()
                0x00000000c0008698                operator new(unsigned long)
                0x00000000c000869d                operator delete(void*)
                0x00000000c00086a2                disableIRQs()
                0x00000000c00086aa                enableIRQs()
                0x00000000c00086b9                lockScheduler()
                0x00000000c00086c1                unlockScheduler()
                0x00000000c00086d0                lockStuff()
                0x00000000c00086de                unlockStuff()
                0x00000000c0008718                Virt::getAKernelVAS()
                0x00000000c000871e                __not_memcpy
 *fill*         0x00000000c0008733        0x1 
 .text          0x00000000c0008734      0x118 compat/resolve.32
                0x00000000c0008734                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c000884c      0x783 core/computer.32
                0x00000000c000884c                Computer::close(int, int, void*)
                0x00000000c0008890                Krnl::firstTask()
                0x00000000c00089e4                Computer::Computer()
                0x00000000c00089e4                Computer::Computer()
                0x00000000c0008b40                Computer::setBootMessage(char const*)
                0x00000000c0008b42                Computer::detectFeatures()
                0x00000000c0008d4c                Computer::displayFeatures()
                0x00000000c0008d4e                Computer::rdmsr(unsigned int)
                0x00000000c0008d7a                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0008db2                Computer::shutdown()
                0x00000000c0008dca                Computer::restart()
                0x00000000c0008de2                Computer::sleep()
                0x00000000c0008df6                Computer::nmiEnabled()
                0x00000000c0008e02                Computer::readCMOS(unsigned char)
                0x00000000c0008e1c                Computer::enableNMI(bool)
                0x00000000c0008e34                Computer::open(int, int, void*)
                0x00000000c0008f12                Computer::disableNMI()
                0x00000000c0008f20                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0008f3e                Computer::handleNMI()
                0x00000000c0008fa4                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c0008fcf        0x1 
 .text          0x00000000c0008fd0      0x211 core/gdt.32
                0x00000000c0008fd0                GDTEntry::setBase(unsigned int)
                0x00000000c0008fec                GDTEntry::setLimit(unsigned int)
                0x00000000c000900a                GDT::GDT()
                0x00000000c000900a                GDT::GDT()
                0x00000000c0009020                GDT::addEntry(GDTEntry)
                0x00000000c0009042                GDT::getNumberOfEntries()
                0x00000000c000904a                GDT::flush()
                0x00000000c000906c                GDT::setup()
 .text          0x00000000c00091e1       0x19 core/idle.32
                0x00000000c00091e1                idleFunction(void*)
 *fill*         0x00000000c00091fa        0x2 
 .text          0x00000000c00091fc      0x464 core/idt.32
                0x00000000c00091fc                IDTEntry::IDTEntry(bool)
                0x00000000c00091fc                IDTEntry::IDTEntry(bool)
                0x00000000c000926e                IDTEntry::setOffset(unsigned int)
                0x00000000c0009284                IDT::IDT()
                0x00000000c0009284                IDT::IDT()
                0x00000000c0009286                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000928e                IDT::addEntry(IDTEntry, int)
                0x00000000c00092a8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00092e0                IDT::flush()
                0x00000000c00092fa                IDT::setup()
 .text          0x00000000c0009660      0x191 core/kheap.32
                0x00000000c0009660                sbrk
                0x00000000c0009703                mmap
                0x00000000c0009719                munmap
                0x00000000c000972f                liballoc_lock()
                0x00000000c000973c                liballoc_unlock()
                0x00000000c0009750                liballoc_alloc(int)
                0x00000000c0009768                liballoc_free(void*, int)
                0x00000000c0009783                realloc
                0x00000000c0009797                malloc
                0x00000000c00097a7                free
                0x00000000c00097b7                rfree
                0x00000000c00097c7                calloc
 .text          0x00000000c00097f1      0x1b1 core/main.32
                0x00000000c00097f1                Krnl::setBootMessage(char const*)
                0x00000000c000985d                kernel_main
 .text          0x00000000c00099a2      0x668 core/physmgr.32
                0x00000000c00099a2                Phys::allocateDMA(unsigned long)
                0x00000000c0009ab1                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0009af7                Phys::setPageState(unsigned long, bool)
                0x00000000c0009b29                Phys::getPageState(unsigned long)
                0x00000000c0009b45                Phys::freePage(unsigned long)
                0x00000000c0009bc8                Phys::allocatePage()
                0x00000000c0009cb3                Phys::allocateContiguousPages(int)
                0x00000000c0009d0f                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0009d47                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000a00a      0x273 core/pipe.32
                0x00000000c000a00a                Pipe::isAtty()
                0x00000000c000a00e                Pipe::~Pipe()
                0x00000000c000a00e                Pipe::~Pipe()
                0x00000000c000a032                Pipe::~Pipe()
                0x00000000c000a05a                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000a11a                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000a216                Pipe::Pipe(int)
                0x00000000c000a216                Pipe::Pipe(int)
 *fill*         0x00000000c000a27d        0x1 
 .text          0x00000000c000a27e      0xa8a core/terminal.32
                0x00000000c000a27e                VgaText::isAtty()
                0x00000000c000a282                VgaText::~VgaText()
                0x00000000c000a282                VgaText::~VgaText()
                0x00000000c000a2a6                VgaText::~VgaText()
                0x00000000c000a2d0                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000a2f0                setTerminalScrollLock(bool)
                0x00000000c000a2f1                addToTerminalCycle(VgaText*)
                0x00000000c000a312                scrollTerminalScrollLock(int)
                0x00000000c000a314                VgaText::updateTitle()
                0x00000000c000a316                VgaText::load()
                0x00000000c000a318                VgaText::updateCursor()
                0x00000000c000a32e                VgaText::doANSI_SGR(int)
                0x00000000c000a3a2                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000a3b2                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000a3c2                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000a3e2                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000a3ee                VgaText::setTitleColour(VgaColour)
                0x00000000c000a3fa                VgaText::setTitle(char*)
                0x00000000c000a408                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000a41a                VgaText::scrollScreen()
                0x00000000c000a4b2                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000a4c4                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000a554                VgaText::getCursorX()
                0x00000000c000a55c                VgaText::getCursorY()
                0x00000000c000a564                VgaText::setCursor(int, int)
                0x00000000c000a57b                setActiveTerminal(VgaText*)
                0x00000000c000a5d5                doTerminalCycle()
                0x00000000c000a5f0                VgaText::clearScreen()
                0x00000000c000a63e                VgaText::setCursorX(int)
                0x00000000c000a656                VgaText::setCursorY(int)
                0x00000000c000a66e                VgaText::incrementCursor(bool)
                0x00000000c000a6c2                VgaText::decrementCursor(bool)
                0x00000000c000a6e4                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000a7b2                VgaText::putchar(char)
                0x00000000c000a89e                VgaText::putx(unsigned int)
                0x00000000c000a8e4                VgaText::puts(char const*)
                0x00000000c000a90a                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000a956                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000aaa4                VgaText::VgaText(char const*)
                0x00000000c000aaa4                VgaText::VgaText(char const*)
                0x00000000c000ac0a                VgaText::receiveKey(unsigned char)
                0x00000000c000ace2                VgaText::doUpdate()
                0x00000000c000ace3                newTerminal(char*)
 .text          0x00000000c000ad08      0x1a1 core/tss.32
                0x00000000c000ad08                TSS::TSS()
                0x00000000c000ad08                TSS::TSS()
                0x00000000c000ad18                TSS::setESP(unsigned long)
                0x00000000c000ad2c                TSS::flush()
                0x00000000c000ad4c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000aea9        0x1 
 .text          0x00000000c000aeaa      0x4c2 core/unixfile.32
                0x00000000c000aeaa                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000af00                ReservedFilename::isAtty()
                0x00000000c000af1c                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000af7a                UnixFile::getFileDescriptor()
                0x00000000c000af82                UnixFile::UnixFile(int)
                0x00000000c000af82                UnixFile::UnixFile(int)
                0x00000000c000b132                ReservedFilename::ReservedFilename(int)
                0x00000000c000b132                ReservedFilename::ReservedFilename(int)
                0x00000000c000b164                UnixFile::~UnixFile()
                0x00000000c000b164                UnixFile::~UnixFile()
                0x00000000c000b1fc                UnixFile::~UnixFile()
                0x00000000c000b224                ReservedFilename::~ReservedFilename()
                0x00000000c000b224                ReservedFilename::~ReservedFilename()
                0x00000000c000b248                ReservedFilename::~ReservedFilename()
                0x00000000c000b26f                getFromFileDescriptor(int)
 .text          0x00000000c000b36c     0x124e core/virtmgr.32
                0x00000000c000b36c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000b3a1                Virt::getPageState(unsigned long)
                0x00000000c000b3c5                Virt::allocateKernelVirtualPages(int)
                0x00000000c000b4d6                Virt::freeSwapfilePage(unsigned long)
                0x00000000c000b4f4                Virt::swapIDToSector(unsigned long)
                0x00000000c000b506                Virt::allocateSwapfilePage()
                0x00000000c000b584                Virt::virtualMemorySetup()
                0x00000000c000b5cf                Virt::setupPageSwapping(int)
                0x00000000c000b640                VAS::VAS(VAS*)
                0x00000000c000b640                VAS::VAS(VAS*)
                0x00000000c000b66e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000b69a                VAS::getPageTableEntry(unsigned long)
                0x00000000c000b6b9                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000b7dc                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000b800                VAS::virtualToPhysical(unsigned long)
                0x00000000c000b818                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000b858                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000b88a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000b8b4                VAS::~VAS()
                0x00000000c000b8b4                VAS::~VAS()
                0x00000000c000ba30                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000bb34                VAS::allocatePages(int, int)
                0x00000000c000bd0c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000bd28                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000bdee                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000bedc                VAS::VAS(bool)
                0x00000000c000bedc                VAS::VAS(bool)
                0x00000000c000c15c                VAS::VAS()
                0x00000000c000c15c                VAS::VAS()
                0x00000000c000c1cc                VAS::evict(unsigned long)
                0x00000000c000c29c                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000c3b0                VAS::scanForEviction()
                0x00000000c000c48e                mapVASFirstTime
 .text          0x00000000c000c5ba       0x95 coreobjs/c++.32
                0x00000000c000c5ba                __cxa_atexit
                0x00000000c000c5bd                __cxa_finalize
                0x00000000c000c5be                __stack_chk_fail
                0x00000000c000c62a                __cxa_pure_virtual
                0x00000000c000c63b                operator new[](unsigned long)
                0x00000000c000c640                operator delete(void*, unsigned long)
                0x00000000c000c645                operator delete[](void*)
                0x00000000c000c64a                operator delete[](void*, unsigned long)
 .text          0x00000000c000c64f      0x1fc dbg/kconsole.32
                0x00000000c000c64f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000c6a8                Dbg::logc(char)
                0x00000000c000c6c8                Dbg::logs(char*)
                0x00000000c000c6e5                Dbg::logWriteInt(unsigned int)
                0x00000000c000c702                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000c721                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000c84b        0x1 
 .text          0x00000000c000c84c      0xcac fs/vfs.32
                0x00000000c000c84c                File::read(unsigned long long, void*, int*)
                0x00000000c000c8a4                File::write(unsigned long long, void*, int*)
                0x00000000c000c8fc                Directory::read(unsigned long long, void*, int*)
                0x00000000c000c954                Directory::write(unsigned long long, void*, int*)
                0x00000000c000c982                File::isAtty()
                0x00000000c000c986                Directory::isAtty()
                0x00000000c000c98a                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000c990                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000c996                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000c99c                File::~File()
                0x00000000c000c99c                File::~File()
                0x00000000c000c9c0                File::~File()
                0x00000000c000c9ea                Directory::~Directory()
                0x00000000c000c9ea                Directory::~Directory()
                0x00000000c000ca0e                Directory::~Directory()
                0x00000000c000ca38                Filesystem::Filesystem()
                0x00000000c000ca38                Filesystem::Filesystem()
                0x00000000c000ca5c                Filesystem::~Filesystem()
                0x00000000c000ca5c                Filesystem::~Filesystem()
                0x00000000c000ca6a                Filesystem::~Filesystem()
                0x00000000c000ca8e                Fs::getcwd(Process*, char*, int)
                0x00000000c000cab8                Fs::initVFS()
                0x00000000c000cae2                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000cc8c                File::File(char const*, Process*)
                0x00000000c000cc8c                File::File(char const*, Process*)
                0x00000000c000cd66                File::open(FileOpenMode)
                0x00000000c000cdc4                File::close()
                0x00000000c000ce24                File::seek(unsigned long long)
                0x00000000c000ce7a                File::tell(unsigned long long*)
                0x00000000c000ceca                File::rewind()
                0x00000000c000cede                File::unlink()
                0x00000000c000cf2a                File::rename(char const*)
                0x00000000c000cf78                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000cfd4                File::exists()
                0x00000000c000d012                File::stat(unsigned long long*, bool*)
                0x00000000c000d073                Fs::setcwd(Process*, char*)
                0x00000000c000d1ec                Directory::Directory(char const*, Process*)
                0x00000000c000d1ec                Directory::Directory(char const*, Process*)
                0x00000000c000d2c6                Directory::open()
                0x00000000c000d322                Directory::close()
                0x00000000c000d382                Directory::unlink()
                0x00000000c000d3ce                Directory::rename(char const*)
                0x00000000c000d41c                Directory::exists()
                0x00000000c000d45a                Directory::read(dirent*)
                0x00000000c000d4a6                Directory::create()
                0x00000000c000d4f2                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000d4f8       0x86 hal/bus.32
                0x00000000c000d4f8                Bus::Bus(char const*)
                0x00000000c000d4f8                Bus::Bus(char const*)
                0x00000000c000d530                Bus::~Bus()
                0x00000000c000d530                Bus::~Bus()
                0x00000000c000d554                Bus::~Bus()
 .text          0x00000000c000d57e       0x96 hal/buzzer.32
                0x00000000c000d57e                beepThread(void*)
                0x00000000c000d5bb                Krnl::beep(int, int, bool)
 .text          0x00000000c000d614      0x467 hal/clock.32
                0x00000000c000d614                User::loadClockSettings(int)
                0x00000000c000d666                Clock::Clock(char const*)
                0x00000000c000d666                Clock::Clock(char const*)
                0x00000000c000d69c                Clock::~Clock()
                0x00000000c000d69c                Clock::~Clock()
                0x00000000c000d6c0                Clock::~Clock()
                0x00000000c000d6ea                Clock::timeInSecondsLocal()
                0x00000000c000d732                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000d78b                datetimeToSeconds(datetime_t)
                0x00000000c000d8b2                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000d912                secondsToDatetime(unsigned long long)
                0x00000000c000da56                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000da7b        0x1 
 .text          0x00000000c000da7c      0x4d0 hal/device.32
                0x00000000c000da7c                Device::hibernate()
                0x00000000c000da7e                Device::wake()
                0x00000000c000da80                Device::detect()
                0x00000000c000da82                Device::disableLegacy()
                0x00000000c000da84                Device::powerSaving(PowerSavingLevel)
                0x00000000c000da86                DriverlessDevice::close(int, int, void*)
                0x00000000c000da8a                DriverlessDevice::detect()
                0x00000000c000da8c                DriverlessDevice::open(int, int, void*)
                0x00000000c000daa0                Device::~Device()
                0x00000000c000daa0                Device::~Device()
                0x00000000c000daae                Device::~Device()
                0x00000000c000dad6                Device::findAndLoadDriver()
                0x00000000c000dae4                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000db0a                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000db4a                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000db74                Device::getParent()
                0x00000000c000db80                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000db9e                Device::addChild(Device*)
                0x00000000c000dbe2                Device::removeAllChildren()
                0x00000000c000dc28                Device::hibernateAll()
                0x00000000c000dc58                Device::wakeAll()
                0x00000000c000dc88                Device::detectAll()
                0x00000000c000dcb8                Device::disableLegacyAll()
                0x00000000c000dce8                Device::loadDriversForAll()
                0x00000000c000dd28                Device::closeAll()
                0x00000000c000dd5e                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000dd94                Device::setName(char const*)
                0x00000000c000dda2                Device::Device(char const*)
                0x00000000c000dda2                Device::Device(char const*)
                0x00000000c000de9e                Device::getName()
                0x00000000c000dea8                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000dea8                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000dede                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000df22                getDevicesOfType(DeviceType)
 .text          0x00000000c000df4c       0x86 hal/diskctrl.32
                0x00000000c000df4c                HardDiskController::HardDiskController(char const*)
                0x00000000c000df4c                HardDiskController::HardDiskController(char const*)
                0x00000000c000df84                HardDiskController::~HardDiskController()
                0x00000000c000df84                HardDiskController::~HardDiskController()
                0x00000000c000dfa8                HardDiskController::~HardDiskController()
 .text          0x00000000c000dfd2       0xe2 hal/diskphys.32
                0x00000000c000dfd2                PhysicalDisk::eject()
                0x00000000c000dfd6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000dfd6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000e03e                PhysicalDisk::startCache()
                0x00000000c000e066                PhysicalDisk::~PhysicalDisk()
                0x00000000c000e066                PhysicalDisk::~PhysicalDisk()
                0x00000000c000e08a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000e0b4        0x0 hal/fpu.32
 .text          0x00000000c000e0b4      0x34c hal/intctrl.32
                0x00000000c000e0b4                int_handler
                0x00000000c000e13c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000e184                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000e2af                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000e2e3                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000e361                setupINTS()
                0x00000000c000e3be                convertLegacyIRQNumber(int)
 .text          0x00000000c000e400      0x778 hal/keybrd.32
                0x00000000c000e400                startGUI(void*)
                0x00000000c000e46c                startGUIVESA(void*)
                0x00000000c000e4d8                sendKeyToTerminal(unsigned char)
                0x00000000c000e596                sendKeyboardToken(KeyboardToken)
                0x00000000c000e9c8                clearInternalKeybuffer(VgaText*)
                0x00000000c000e9fd                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000eaee                Keyboard::Keyboard(char const*)
                0x00000000c000eaee                Keyboard::Keyboard(char const*)
                0x00000000c000eb2a                Keyboard::~Keyboard()
                0x00000000c000eb2a                Keyboard::~Keyboard()
                0x00000000c000eb4e                Keyboard::~Keyboard()
 .text          0x00000000c000eb78      0x42a hal/logidisk.32
                0x00000000c000eb78                LogicalDisk::close(int, int, void*)
                0x00000000c000eb7c                LogicalDisk::~LogicalDisk()
                0x00000000c000eb7c                LogicalDisk::~LogicalDisk()
                0x00000000c000eba0                LogicalDisk::~LogicalDisk()
                0x00000000c000ebca                LogicalDisk::open(int, int, void*)
                0x00000000c000ebde                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000ec16                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000ec5c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ec5c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ed12                LogicalDisk::assignDriveLetter()
                0x00000000c000edc8                LogicalDisk::mount()
                0x00000000c000ee50                LogicalDisk::unmount()
                0x00000000c000ee60                LogicalDisk::eject()
                0x00000000c000ee74                LogicalDisk::unassignDriveLetter()
                0x00000000c000eeca                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ef36                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000efa2        0x2 
 .text          0x00000000c000efa4       0x86 hal/mouse.32
                0x00000000c000efa4                Mouse::Mouse(char const*)
                0x00000000c000efa4                Mouse::Mouse(char const*)
                0x00000000c000efdc                Mouse::~Mouse()
                0x00000000c000efdc                Mouse::~Mouse()
                0x00000000c000f000                Mouse::~Mouse()
 .text          0x00000000c000f02a      0x339 hal/partition.32
                0x00000000c000f02a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000f0d2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000f363        0x1 
 .text          0x00000000c000f364       0x86 hal/serial.32
                0x00000000c000f364                Serial::Serial(char const*)
                0x00000000c000f364                Serial::Serial(char const*)
                0x00000000c000f39c                Serial::~Serial()
                0x00000000c000f39c                Serial::~Serial()
                0x00000000c000f3c0                Serial::~Serial()
 *fill*         0x00000000c000f3ea        0x2 
 .text          0x00000000c000f3ec      0x234 hal/timer.32
                0x00000000c000f3ec                Timer::Timer(char const*)
                0x00000000c000f3ec                Timer::Timer(char const*)
                0x00000000c000f424                Timer::~Timer()
                0x00000000c000f424                Timer::~Timer()
                0x00000000c000f448                Timer::~Timer()
                0x00000000c000f472                Timer::read()
                0x00000000c000f47d                setupTimer(int)
                0x00000000c000f4b8                timerHandler(unsigned int)
 .text          0x00000000c000f620      0x43e hal/vcache.32
                0x00000000c000f620                VCache::VCache(PhysicalDisk*)
                0x00000000c000f620                VCache::VCache(PhysicalDisk*)
                0x00000000c000f788                VCache::invalidateReadBuffer()
                0x00000000c000f798                VCache::writeWriteBuffer()
                0x00000000c000f7e4                VCache::~VCache()
                0x00000000c000f7e4                VCache::~VCache()
                0x00000000c000f838                VCache::~VCache()
                0x00000000c000f860                VCache::write(unsigned long long, int, void*)
                0x00000000c000f95a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000fa5e      0x4b3 hal/video.32
                0x00000000c000fa5e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000faaa                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000fb1a                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000fb98                Video::clearScreen(unsigned int)
                0x00000000c000fbcc                Video::putpixel(int, int, unsigned int)
                0x00000000c000fbda                Video::Video(char const*)
                0x00000000c000fbda                Video::Video(char const*)
                0x00000000c000fc10                Video::~Video()
                0x00000000c000fc10                Video::~Video()
                0x00000000c000fc34                Video::~Video()
                0x00000000c000fc5e                Video::isMonochrome()
                0x00000000c000fc6a                Video::getWidth()
                0x00000000c000fc76                Video::getHeight()
                0x00000000c000fc82                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000fd3e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000fea6                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ff11        0x3 
 .text          0x00000000c000ff14     0x16bf hw/acpi.32
                0x00000000c000ff14                ACPI::close(int, int, void*)
                0x00000000c000ffc8                findRSDP()
                0x00000000c001009c                loadACPITables(unsigned char*)
                0x00000000c0010300                findRSDT(unsigned char*)
                0x00000000c00104c0                findDataTable(unsigned char*, char*)
                0x00000000c0010538                scanMADT()
                0x00000000c0010a14                ACPI::ACPI()
                0x00000000c0010a14                ACPI::ACPI()
                0x00000000c0010a78                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0010b60                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0010c28                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0010c30                ACPI::detectPCI()
                0x00000000c0011114                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c001115c                ACPI::sleep()
                0x00000000c0011198                ACPI::open(int, int, void*)
 *fill*         0x00000000c00115d3        0x1 
 .text          0x00000000c00115d4      0xdcb hw/cpu.32
                0x00000000c00115d4                CPU::close(int, int, void*)
                0x00000000c00115d8                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c00115f4                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c001160c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0011680                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0011704                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0011732                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0011760                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001178e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00117bc                CPU::CPU()
                0x00000000c00117bc                CPU::CPU()
                0x00000000c001184a                CPU::displayFeatures()
                0x00000000c001184c                CPU::detectFeatures()
                0x00000000c0011f22                CPU::setupSMEP()
                0x00000000c0011f2e                CPU::setupUMIP()
                0x00000000c0011f38                CPU::setupTSC()
                0x00000000c0011f42                CPU::setupLargePages()
                0x00000000c0011f4c                CPU::setupPAT()
                0x00000000c0011f88                CPU::setupMTRR()
                0x00000000c0011f8a                CPU::setupGlobalPages()
                0x00000000c0011f94                CPU::allowUsermodeDataAccess()
                0x00000000c0011fa6                CPU::prohibitUsermodeDataAccess()
                0x00000000c0011fb8                CPU::setupSMAP()
                0x00000000c0011fc6                CPU::setupFeatures()
                0x00000000c0012092                CPU::open(int, int, void*)
                0x00000000c00121a4                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c001239f      0x16a hw/smp.32
                0x00000000c001239f                Krnl::smpEntry()
                0x00000000c00123a1                Krnl::startCPU(int)
                0x00000000c00124ea                Krnl::startCPUs()
 *fill*         0x00000000c0012509        0x1 
 .text          0x00000000c001250a      0x581 krnl/env.32
                0x00000000c001250a                EnvVarContainer::getEnv(char const*)
                0x00000000c0012548                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001260a                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001260c                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00127f2                EnvVarContainer::__loadSystem()
                0x00000000c001280c                EnvVarContainer::__loadUser()
                0x00000000c001280e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001280e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0012830                EnvVarContainer::~EnvVarContainer()
                0x00000000c0012830                EnvVarContainer::~EnvVarContainer()
                0x00000000c0012860                Krnl::getEnv(Process*, char const*)
                0x00000000c00128c5                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00128df                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00128fe                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0012911                Krnl::deleteEnvSystem(char const*)
                0x00000000c0012912                Krnl::deleteEnvUser(char const*)
                0x00000000c0012913                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0012914                Krnl::newProcessEnv(Process*)
                0x00000000c0012936                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0012982                Krnl::loadSystemEnv()
                0x00000000c00129b0                Krnl::loadUserEnv()
                0x00000000c00129d6                Krnl::flushEnv()
                0x00000000c00129d7                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00129f7                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0012a8b      0x243 krnl/panic.32
                0x00000000c0012a8b                Krnl::panic(char const*)
 .text          0x00000000c0012cce      0x194 krnl/powctrl.32
                0x00000000c0012cce                Krnl::powerThread(void*)
                0x00000000c0012d4e                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0012d64                Krnl::userIOReceived()
                0x00000000c0012d6f                Krnl::handlePowerButton()
                0x00000000c0012da4                Krnl::handleSleepButton()
                0x00000000c0012dd9                Krnl::setupPowerManager()
 .text          0x00000000c0012e62      0x50e reg/registry.32
                0x00000000c0012e62                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012fba                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001310f                Reg::getLine(char*, char*, char*)
                0x00000000c0013146                Reg::readInt(char*, char*, int*)
                0x00000000c0013231                Reg::readString(char*, char*, char*, int)
                0x00000000c00132b2                Reg::readBool(char*, char*, bool*)
                0x00000000c00132d7                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013303                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001332f                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013370       0x36 sys/sc_eject.32
                0x00000000c0013370                Sys::eject(regs*)
 .text          0x00000000c00133a6       0x18 sys/sc_exit.32
                0x00000000c00133a6                Sys::exit(regs*)
 .text          0x00000000c00133be       0x1f sys/sc_getcwd.32
                0x00000000c00133be                Sys::getCwd(regs*)
 .text          0x00000000c00133dd        0xc sys/sc_getpid.32
                0x00000000c00133dd                Sys::getPID(regs*)
 .text          0x00000000c00133e9       0x1a sys/sc_getramdata.32
                0x00000000c00133e9                Sys::getRAMData(regs*)
 .text          0x00000000c0013403       0x84 sys/sc_getvgaptr.32
                0x00000000c0013403                Sys::getVGAPtr(regs*)
 .text          0x00000000c0013487       0xa8 sys/sc_loaddll.32
                0x00000000c0013487                Sys::loadDLL(regs*)
 .text          0x00000000c001352f       0x68 sys/sc_read.32
                0x00000000c001352f                Sys::read(regs*)
 .text          0x00000000c0013597       0x55 sys/sc_sbrk.32
                0x00000000c0013597                Sys::sbrk(regs*)
 .text          0x00000000c00135ec       0x1c sys/sc_setcwd.32
                0x00000000c00135ec                Sys::setCwd(regs*)
 .text          0x00000000c0013608       0x95 sys/sc_settime.32
                0x00000000c0013608                Sys::setTime(regs*)
 .text          0x00000000c001369d       0x4a sys/sc_timezone.32
                0x00000000c001369d                Sys::timezone(regs*)
 .text          0x00000000c00136e7       0x68 sys/sc_write.32
                0x00000000c00136e7                Sys::write(regs*)
 .text          0x00000000c001374f       0x62 sys/sc_wsbe.32
                0x00000000c001374f                Sys::wsbe(regs*)
 .text          0x00000000c00137b1       0x38 sys/sc_yield.32
                0x00000000c00137b1                Sys::yield(regs*)
 .text          0x00000000c00137e9      0xf8e sys/syscalls.32
                0x00000000c00137e9                sysCallSeekDir(regs*)
                0x00000000c00137ee                sysCallTellDir(regs*)
                0x00000000c00137f3                sysCallVerify(regs*)
                0x00000000c00137fd                sysCallGetArgc(regs*)
                0x00000000c001380d                sysFormatDisk(regs*)
                0x00000000c0013877                sysSetDiskVolumeLabel(regs*)
                0x00000000c00138c1                sysGetDiskVolumeLabel(regs*)
                0x00000000c0013916                sysShutdown(regs*)
                0x00000000c0013974                sysCallRealpath(regs*)
                0x00000000c00139b7                sysCallReadDir(regs*)
                0x00000000c0013a36                sysCallIsATTY(regs*)
                0x00000000c0013a90                sysCallSeek(regs*)
                0x00000000c0013ae7                sysCallTell(regs*)
                0x00000000c0013b53                sysCallSize(regs*)
                0x00000000c0013bc5                sysCallSizeFromFilename(regs*)
                0x00000000c0013c74                sysCallClose(regs*)
                0x00000000c0013cd4                sysCallOpenDir(regs*)
                0x00000000c0013d49                sysCallCloseDir(regs*)
                0x00000000c0013d9d                sysCallMakeDir(regs*)
                0x00000000c0013e0d                sysCallWait(regs*)
                0x00000000c0013e27                sysCallNotImpl(regs*)
                0x00000000c0013e42                sysPanic(regs*)
                0x00000000c0013e5c                sysCallRmdir(regs*)
                0x00000000c0013ec0                sysCallUnlink(regs*)
                0x00000000c0013f24                sysCallGetArgv(regs*)
                0x00000000c0013f70                sysCallTTYName(regs*)
                0x00000000c0013ff3                sysCallUSleep(regs*)
                0x00000000c001401c                sysCallSpawn(regs*)
                0x00000000c0014084                sysCallGetEnv(regs*)
                0x00000000c0014131                sysAppSettings(regs*)
                0x00000000c0014245                sysSetFatAttrib(regs*)
                0x00000000c00142b7                sysPipe(regs*)
                0x00000000c00142fc                sysGetUnixTime(regs*)
                0x00000000c0014310                string_ends_with(char const*, char const*)
                0x00000000c0014358                sysCallOpen(regs*)
                0x00000000c0014540                Sys::loadSyscalls()
                0x00000000c0014735                Sys::systemCall(regs*, void*)
 .text          0x00000000c0014777     0x1203 thr/elf.32
                0x00000000c0014777                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014a21                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014c37                Thr::runtimeReferenceHelper()
                0x00000000c0014c4a                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014c99                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014f57                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001568d                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00156bf                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00156f6                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015710                Thr::loadDLL(char const*, bool)
                0x00000000c0015941                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001597a        0x2 
 .text          0x00000000c001597c     0x12a1 thr/prcssthr.32
                0x00000000c001597c                userModeEntryPoint(void*)
                0x00000000c00159a4                changeTSS
                0x00000000c00159d4                switchToThread(ThreadControlBlock*)
                0x00000000c0015a80                Process::addArgs(char**)
                0x00000000c0015ae0                Process::Process(char const*, Process*, char**)
                0x00000000c0015ae0                Process::Process(char const*, Process*, char**)
                0x00000000c0015ccc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015ccc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015e84                taskStartupFunction
                0x00000000c0015e90                Semaphore::Semaphore(int)
                0x00000000c0015e90                Semaphore::Semaphore(int)
                0x00000000c0015ec0                Mutex::Mutex()
                0x00000000c0015ec0                Mutex::Mutex()
                0x00000000c0015ed4                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015fcc                Process::createUserThread()
                0x00000000c0015fe8                setupMultitasking(void (*)())
                0x00000000c00160f0                schedule()
                0x00000000c001617c                Semaphore::tryAcquire()
                0x00000000c0016248                Semaphore::assertLocked(char const*)
                0x00000000c00162c0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00162e8                blockTask(TaskState)
                0x00000000c0016318                waitTask(int, int*, int)
                0x00000000c001635c                milliTenthSleepUntil(unsigned int)
                0x00000000c00163e8                milliTenthSleep(unsigned int)
                0x00000000c00163f8                sleep(unsigned int)
                0x00000000c0016414                Semaphore::acquire()
                0x00000000c00164d0                taskReturned
                0x00000000c001650c                Thr::processFromPID(int)
                0x00000000c00165ac                unblockTask(ThreadControlBlock*)
                0x00000000c0016650                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016918                cleanerTaskFunction(void*)
                0x00000000c0016a08                terminateTask(int)
                0x00000000c0016ad4                Thr::terminateFromIRQ(int)
                0x00000000c0016ae0                Semaphore::release()
 .text          0x00000000c0016c1d      0xb93 vm86/vm8086.32
                0x00000000c0016c1d                Vm::inbv(unsigned short)
                0x00000000c0016c30                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016c66                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016c76                Vm::getSegment(unsigned int)
                0x00000000c0016c7e                Vm::getOffset(unsigned int)
                0x00000000c0016c83                Vm::mainloop2()
                0x00000000c0016cbd                Vm::mainVm8086Loop(void*)
                0x00000000c0016ccd                Vm::mainloop3(unsigned long)
                0x00000000c0016cf3                Vm::initialise8086()
                0x00000000c0016d36                Vm::finish8086()
                0x00000000c0016d97                Vm::getOutput8086(unsigned char*)
                0x00000000c0016dbc                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016e75                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016fdd                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017067                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017078                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001708a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001709b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00170b0                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00170c6                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00170db                Vm::faultHandler(regs*)
 .text          0x00000000c00177b0      0xfcd vm86/x87em.32
                0x00000000c00177b0                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c001780e                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c0017817                Vm::fpu32ToInternal(unsigned int)
                0x00000000c001785c                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c0017865                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c00178c4                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c0017900                Vm::fpuLongToFloat(long long)
                0x00000000c001795f                Vm::fpuGet0()
                0x00000000c0017964                Vm::fpuGet1()
                0x00000000c001796c                Vm::fpuGetPi()
                0x00000000c0017974                Vm::fpuGetLog2E()
                0x00000000c001798c                Vm::fpuGetLogE2()
                0x00000000c00179a4                Vm::fpuGetLog210()
                0x00000000c00179bc                Vm::fpuGetLog102()
                0x00000000c00179d4                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c00179e8                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c00179fe                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c0017a54                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c0017a65                Vm::fpuAbs(unsigned long long)
                0x00000000c0017a6e                Vm::fpuChs(unsigned long long)
                0x00000000c0017a7e                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c0017a8d                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c0017aac                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c0017ac8                Vm::fpuSquare(unsigned long long)
                0x00000000c0017ade                Vm::fpuGetReg(int)
                0x00000000c0017b21                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c0017b6d                Vm::fpuPush(unsigned long long)
                0x00000000c0017bcb                Vm::fpuPop()
                0x00000000c0017c1e                Vm::x87Handler(regs*)
 .text          0x00000000c001877d     0x1096 arch/i386/hal.32
                0x00000000c001877d                Hal::noCopro(unsigned long)
                0x00000000c001877e                Hal::noTSC()
                0x00000000c0018783                Hal::readTSC()
                0x00000000c0018786                nmiHandler(regs*, void*)
                0x00000000c001879f                doubleFault(regs*, void*)
                0x00000000c00187b8                displayDebugInfo(regs*)
                0x00000000c0018e0c                displayProgramFault(char const*)
                0x00000000c0018e49                gpFault(regs*, void*)
                0x00000000c0018ebe                pgFault(regs*, void*)
                0x00000000c0018f48                otherISRHandler(regs*, void*)
                0x00000000c0018f9c                opcodeFault(regs*, void*)
                0x00000000c0019396                i386SaveCoprocessor(void*)
                0x00000000c00193aa                i386LoadCoprocessor(void*)
                0x00000000c00193be                x87EmulHandler(regs*, void*)
                0x00000000c001947e                Hal::initialiseCoprocessor()
                0x00000000c0019560                Hal::panic(char const*)
                0x00000000c0019565                Hal::initialise()
                0x00000000c00197a5                Hal::makeBeep(int)
                0x00000000c00197df                Hal::getRand()
                0x00000000c00197e2                Hal::endOfInterrupt(int)
 *fill*         0x00000000c0019813        0x1 
 .text          0x00000000c0019814      0x2dc arch/i386/pic.32
                0x00000000c0019814                picIoWait()
                0x00000000c001981c                picDisable()
                0x00000000c0019850                picGetIRQReg(int)
                0x00000000c00198cc                picOpen()
                0x00000000c0019a50                picEOI(int)
 .text          0x00000000c0019af0      0x724 arch/i386/rtc.32
                0x00000000c0019af0                RTC::open(int, int, void*)
                0x00000000c0019af4                RTC::close(int, int, void*)
                0x00000000c0019af8                RTC::timeInSecondsUTC()
                0x00000000c0019b0a                RTC::timeInDatetimeUTC()
                0x00000000c0019b30                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0019b6e                RTC::~RTC()
                0x00000000c0019b6e                RTC::~RTC()
                0x00000000c0019b92                RTC::~RTC()
                0x00000000c0019bbc                RTC::get_update_in_progress_flag()
                0x00000000c0019bd4                RTC::completeRTCRefresh()
                0x00000000c0019e9e                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001a118                rtcIRQHandler(regs*, void*)
                0x00000000c001a15e                RTC::RTC()
                0x00000000c001a15e                RTC::RTC()
 .text          0x00000000c001a214      0x1fc arch/i386/vga.32
                0x00000000c001a214                Hal::consoleScroll(int, int)
                0x00000000c001a31c                Hal::consoleWriteCharacter(char, int, int, int, int)
                0x00000000c001a384                Hal::consoleCursorUpdate(int, int)
 .text          0x00000000c001a410     0x13b7 fs/fat/vfslink.32
                0x00000000c001a410                FAT::getName()
                0x00000000c001a418                FAT::tell(void*, unsigned long long*)
                0x00000000c001a454                FAT::stat(void*, unsigned long long*)
                0x00000000c001a490                FAT::~FAT()
                0x00000000c001a490                FAT::~FAT()
                0x00000000c001a4b4                FAT::~FAT()
                0x00000000c001a4dc                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001a580                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001a644                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a818                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001aa30                FAT::allocateSwapfile(char const*, int)
                0x00000000c001abec                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001ad58                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001adb8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001ae18                FAT::close(void*)
                0x00000000c001ae6c                FAT::closeDir(void*)
                0x00000000c001aec0                FAT::seek(void*, unsigned long long)
                0x00000000c001af1c                fatWrapperReadDisk
                0x00000000c001af64                fatWrapperWriteDisk
                0x00000000c001afac                fatWrapperIoctl
                0x00000000c001b0bc                FAT::FAT()
                0x00000000c001b0bc                FAT::FAT()
                0x00000000c001b110                FAT::fixFilepath(char*)
                0x00000000c001b14c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001b280                FAT::openDir(char const*, void**)
                0x00000000c001b330                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b424                FAT::unlink(char const*)
                0x00000000c001b4a4                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b60c                FAT::rename(char const*, char const*)
                0x00000000c001b6d8                FAT::mkdir(char const*)
                0x00000000c001b758                FAT::exists(char const*)
 *fill*         0x00000000c001b7c7        0x1 
 .text          0x00000000c001b7c8      0xba7 fs/iso9660/vfslink.32
                0x00000000c001b7c8                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b7ce                ISO9660::seek(void*, unsigned long long)
                0x00000000c001b7fe                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001b822                ISO9660::getName()
                0x00000000c001b828                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001b84c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b852                ISO9660::unlink(char const*)
                0x00000000c001b858                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001b85e                ISO9660::rename(char const*, char const*)
                0x00000000c001b864                ISO9660::mkdir(char const*)
                0x00000000c001b86a                ISO9660::close(void*)
                0x00000000c001b88c                ISO9660::closeDir(void*)
                0x00000000c001b8ae                ISO9660::~ISO9660()
                0x00000000c001b8ae                ISO9660::~ISO9660()
                0x00000000c001b8d2                ISO9660::~ISO9660()
                0x00000000c001b8f9                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001b93b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b9b6                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001ba16                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001bc1a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001be94                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001bee8                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001c0be                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001c14c                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001c1fa                ISO9660::exists(char const*)
                0x00000000c001c21e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c2b2                ISO9660::openDir(char const*, void**)
                0x00000000c001c34c                ISO9660::ISO9660()
                0x00000000c001c34c                ISO9660::ISO9660()
 *fill*         0x00000000c001c36f        0x1 
 .text          0x00000000c001c370      0x298 hal/sound/sndcard.32
                0x00000000c001c370                SoundCard::beginPlayback()
                0x00000000c001c37e                SoundCard::stopPlayback()
                0x00000000c001c38c                SoundCard::SoundCard(char const*)
                0x00000000c001c38c                SoundCard::SoundCard(char const*)
                0x00000000c001c42a                SoundCard::~SoundCard()
                0x00000000c001c42a                SoundCard::~SoundCard()
                0x00000000c001c44e                SoundCard::~SoundCard()
                0x00000000c001c478                SoundCard::configureRates(int, int, int)
                0x00000000c001c4a8                SoundCard::getSamples16(int, short*)
                0x00000000c001c512                SoundCard::getSamples32(int, int*)
                0x00000000c001c598                SoundCard::addChannel(SoundPort*)
                0x00000000c001c5f4                SoundCard::removeChannel(int)
 .text          0x00000000c001c608      0x3fb hal/sound/sndport.32
                0x00000000c001c608                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c608                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c694                SoundPort::~SoundPort()
                0x00000000c001c694                SoundPort::~SoundPort()
                0x00000000c001c6c8                SoundPort::unpause()
                0x00000000c001c6d4                SoundPort::pause()
                0x00000000c001c6e0                SoundPort::getBufferUsed()
                0x00000000c001c6e8                SoundPort::getBufferSize()
                0x00000000c001c6f0                SoundPort::buffer16(short*, int)
                0x00000000c001c7a4                SoundPort::buffer32(int*, int)
                0x00000000c001c850                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001c94c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001ca03        0x0 hw/bus/isa.32
 *fill*         0x00000000c001ca03        0x1 
 .text          0x00000000c001ca04     0x1187 hw/bus/pci.32
                0x00000000c001ca04                PCI::open(int, int, void*)
                0x00000000c001ca22                PCI::close(int, int, void*)
                0x00000000c001ca26                PCI::PCI()
                0x00000000c001ca26                PCI::PCI()
                0x00000000c001cabc                PCI::readBAR8(unsigned int, int)
                0x00000000c001cad8                PCI::readBAR16(unsigned int, int)
                0x00000000c001caf6                PCI::readBAR32(unsigned int, int)
                0x00000000c001cb12                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001cb32                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001cb54                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001cb74                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cbe2                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cc8a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ccae                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001ccd6                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd20                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd48                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd6c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd90                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001cdb8                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ce1c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001cf04                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001d2f6                PCI::checkBus(unsigned char)
                0x00000000c001d31a                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001d75a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001dacc                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001db38                PCI::detect()
 *fill*         0x00000000c001db8b        0x1 
 .text          0x00000000c001db8c      0xb66 hw/diskctrl/ide.32
                0x00000000c001db8c                IDE::close(int, int, void*)
                0x00000000c001db90                IDE::IDE()
                0x00000000c001db90                IDE::IDE()
                0x00000000c001dbc4                IDE::prepareInterrupt(unsigned char)
                0x00000000c001dbd6                selectDrive(unsigned char, unsigned char)
                0x00000000c001dbd8                IDE::getBase(unsigned char)
                0x00000000c001dbea                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001dcaa                IDE::read(unsigned char, unsigned char)
                0x00000000c001dd58                IDE::waitInterrupt(unsigned char)
                0x00000000c001ddba                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ddd6                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ddf2                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001de38                IDE::open(int, int, void*)
                0x00000000c001e262                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001e32e                IDE::detect()
                0x00000000c001e5ee                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001e69e                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001e6f2      0x46c hw/diskctrl/satabus.32
                0x00000000c001e6f2                SATABus::close(int, int, void*)
                0x00000000c001e6f6                SATABus::detect()
                0x00000000c001e6f8                SATABus::SATABus()
                0x00000000c001e6f8                SATABus::SATABus()
                0x00000000c001e77e                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e7b0                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e7f8                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e818                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e842                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001e948                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001eb2a                SATABus::open(int, int, void*)
 .text          0x00000000c001eb5e      0x684 hw/diskphys/ata.32
                0x00000000c001eb5e                ATA::close(int, int, void*)
                0x00000000c001eb82                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001eb84                ATA::ATA()
                0x00000000c001eb84                ATA::ATA()
                0x00000000c001ebb2                ATA::flush(bool)
                0x00000000c001ebfc                ATA::readyForCommand()
                0x00000000c001ec48                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f03e                ATA::read(unsigned long long, int, void*)
                0x00000000c001f08a                ATA::write(unsigned long long, int, void*)
                0x00000000c001f0ec                ATA::detectCHS()
                0x00000000c001f116                ATA::open(int, int, void*)
 .text          0x00000000c001f1e2      0x645 hw/diskphys/atapi.32
                0x00000000c001f1e2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001f1e8                ATAPI::close(int, int, void*)
                0x00000000c001f20c                ATAPI::ATAPI()
                0x00000000c001f20c                ATAPI::ATAPI()
                0x00000000c001f23a                ATAPI::readyForCommand()
                0x00000000c001f28c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001f54c                ATAPI::diskRemoved()
                0x00000000c001f5a8                ATAPI::eject()
                0x00000000c001f5f0                ATAPI::diskInserted()
                0x00000000c001f60c                ATAPI::detectMedia()
                0x00000000c001f6c8                ATAPI::open(int, int, void*)
                0x00000000c001f7a8                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001f827        0x1 
 .text          0x00000000c001f828      0xa68 hw/diskphys/sata.32
                0x00000000c001f828                SATA::close(int, int, void*)
                0x00000000c001f84c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001f84e                SATA::open(int, int, void*)
                0x00000000c001fa44                SATA::SATA()
                0x00000000c001fa44                SATA::SATA()
                0x00000000c001fa72                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c002006a                SATA::read(unsigned long long, int, void*)
                0x00000000c002016a                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020290      0x642 hw/diskphys/satapi.32
                0x00000000c0020290                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020296                SATAPI::close(int, int, void*)
                0x00000000c00202ba                SATAPI::SATAPI()
                0x00000000c00202ba                SATAPI::SATAPI()
                0x00000000c00202e8                SATAPI::diskRemoved()
                0x00000000c00202ea                SATAPI::diskInserted()
                0x00000000c0020306                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020594                SATAPI::eject()
                0x00000000c00205d0                SATAPI::detectMedia()
                0x00000000c00206fa                SATAPI::open(int, int, void*)
                0x00000000c00207fa                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c00208d2      0x43f hw/intctrl/apic.32
                0x00000000c00208d2                IOAPIC::close(int, int, void*)
                0x00000000c00208d8                apicGetBase()
                0x00000000c002091a                IOAPIC::IOAPIC()
                0x00000000c002091a                IOAPIC::IOAPIC()
                0x00000000c0020942                apicOpen()
                0x00000000c0020a9c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0020ace                IOAPIC::read(int)
                0x00000000c0020af6                IOAPIC::open(int, int, void*)
                0x00000000c0020bec                IOAPIC::write(int, int)
                0x00000000c0020c18                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0020d11        0x3 
 .text          0x00000000c0020d14       0xf0 hw/timer/apictimer.32
                0x00000000c0020d14                APICTimer::close(int, int, void*)
                0x00000000c0020d1c                apicTimerHandler(regs*, void*)
                0x00000000c0020d44                APICTimer::open(int, int, void*)
                0x00000000c0020db4                APICTimer::write(int)
                0x00000000c0020ddc                APICTimer::APICTimer()
                0x00000000c0020ddc                APICTimer::APICTimer()
 .text          0x00000000c0020e04      0x1a3 hw/timer/pit.32
                0x00000000c0020e04                PIT::write(int)
                0x00000000c0020e84                pitHandler(regs*, void*)
                0x00000000c0020ea8                PIT::open(int, int, void*)
                0x00000000c0020ef8                PIT::close(int, int, void*)
                0x00000000c0020f28                PIT::PIT()
                0x00000000c0020f28                PIT::PIT()
 *fill*         0x00000000c0020fa7        0x9 
 .text          0x00000000c0020fb0       0x83 arch/i386/avx.32
                0x00000000c0020fb0                avxDetect
                0x00000000c0020fda                avxSave
                0x00000000c0020feb                avxLoad
                0x00000000c0020ffc                avxInit
                0x00000000c002101e                avxClose
                0x00000000c002101f                wouldSheSayYes
 *fill*         0x00000000c0021033        0xd 
 .text          0x00000000c0021040      0x1d6 arch/i386/interrupt.32
                0x00000000c0021040                isr0
                0x00000000c0021050                isr1
                0x00000000c002105a                isr2
                0x00000000c0021064                isr3
                0x00000000c002106e                isr4
                0x00000000c0021078                isr5
                0x00000000c0021082                isr6
                0x00000000c002108c                isr7
                0x00000000c0021096                isr8
                0x00000000c002109e                isr9
                0x00000000c00210a8                isr10
                0x00000000c00210b0                isr11
                0x00000000c00210b8                isr12
                0x00000000c00210c0                isr13
                0x00000000c00210c8                isr14
                0x00000000c00210d0                isr15
                0x00000000c00210da                isr16
                0x00000000c00210e4                isr17
                0x00000000c00210ee                isr18
                0x00000000c00210f8                irq3
                0x00000000c0021102                irq4
                0x00000000c002110c                irq5
                0x00000000c0021116                irq6
                0x00000000c0021120                irq7
                0x00000000c002112a                irq8
                0x00000000c0021134                irq9
                0x00000000c002113e                irq10
                0x00000000c0021148                irq11
                0x00000000c0021152                irq12
                0x00000000c002115c                irq13
                0x00000000c0021166                irq14
                0x00000000c0021170                irq15
                0x00000000c002117a                irq1
                0x00000000c0021181                irq2
                0x00000000c0021188                isr96
                0x00000000c002118f                irq0
                0x00000000c0021194                int_common_stub
                0x00000000c0021194                syscall_common_stub
                0x00000000c00211c6                irq16
                0x00000000c00211d0                irq17
                0x00000000c00211da                irq18
                0x00000000c00211e4                irq19
                0x00000000c00211ee                irq20
                0x00000000c00211f8                irq21
                0x00000000c0021202                irq22
                0x00000000c002120c                irq23
 *fill*         0x00000000c0021216        0xa 
 .text          0x00000000c0021220       0x10 arch/i386/rdrand.32
                0x00000000c0021220                i386GetRDRAND
 .text          0x00000000c0021230       0x39 arch/i386/sse.32
                0x00000000c0021230                absolutelyNoChanceInHell
                0x00000000c0021230                sseDetect
                0x00000000c0021248                sseSave
                0x00000000c0021250                sseLoad
                0x00000000c0021258                sseInit
                0x00000000c0021268                sseClose
 *fill*         0x00000000c0021269        0x7 
 .text          0x00000000c0021270       0x49 arch/i386/x87.32
                0x00000000c0021276                x87Detect
                0x00000000c0021291                x87Save
                0x00000000c0021298                x87Load
                0x00000000c002129f                x87Init
                0x00000000c00212b8                x87Close
 *fill*         0x00000000c00212b9        0x3 
 .text          0x00000000c00212bc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00212e1        0x0 crtn.32
 *fill*         0x00000000c00212e1        0x3 
 .text          0x00000000c00212e4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00212e4                __divdi3
 *fill*         0x00000000c002142f        0x1 
 .text          0x00000000c0021430      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021430                __moddi3
 *fill*         0x00000000c00215ae        0x2 
 .text          0x00000000c00215b0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c00215b0                __udivdi3
 *fill*         0x00000000c00216af        0x1 
 .text          0x00000000c00216b0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c00216b0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c00217d0        0x0
 .iplt          0x00000000c00217d0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c00217ca        0xf
 .init          0x00000000c00217ca        0x3 crti.32
                0x00000000c00217ca                _init
 .init          0x00000000c00217cd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c00217d2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c00217d7        0x2 crtn.32

.fini           0x00000000c00217d9        0xa
 .fini          0x00000000c00217d9        0x3 crti.32
                0x00000000c00217d9                _fini
 .fini          0x00000000c00217dc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c00217e1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c00217e4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c00217e4       0x23 core/computer.32
                0x00000000c00217e4                Computer::~Computer()
                0x00000000c00217e4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0021808       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0021808       0x2a core/computer.32
                0x00000000c0021808                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021832       0x21
 .text._Z10idleCommonv
                0x00000000c0021832       0x21 core/idle.32
                0x00000000c0021832                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021854        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021854        0x2 core/unixfile.32
                0x00000000c0021854                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0021854                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021856       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021856       0x42 core/unixfile.32
                0x00000000c0021856                LinkedList<UnixFile>::LinkedList()
                0x00000000c0021856                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021898       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021898       0xd3 core/unixfile.32
                0x00000000c0021898                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c002196c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c002196c        0x7 core/unixfile.32
                0x00000000c002196c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021974       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021974       0xa1 core/unixfile.32
                0x00000000c0021974                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021a16        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021a16        0x8 core/unixfile.32
                0x00000000c0021a16                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021a1e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021a1e       0x1a hal/device.32
                0x00000000c0021a1e                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021a1e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021a38       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021a38       0x2a hal/device.32
                0x00000000c0021a38                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021a62       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021a62       0xdc hal/device.32
                0x00000000c0021a62                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021b3e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021b3e       0x42 hal/device.32
                0x00000000c0021b3e                LinkedList<Device>::LinkedList()
                0x00000000c0021b3e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021b80       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021b80       0x1c hal/timer.32
                0x00000000c0021b80                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021b9c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021b9c        0x7 hal/timer.32
                0x00000000c0021b9c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021ba4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021ba4       0xb8 hal/timer.32
                0x00000000c0021ba4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021c5c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021c5c       0xda hal/timer.32
                0x00000000c0021c5c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021d38       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021d38       0x23 hw/acpi.32
                0x00000000c0021d38                ACPI::~ACPI()
                0x00000000c0021d38                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0021d5c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0021d5c       0x2a hw/acpi.32
                0x00000000c0021d5c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021d88        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021d88        0x2 hw/acpi.32
                0x00000000c0021d88                LinkedList<Device>::~LinkedList()
                0x00000000c0021d88                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021d8c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021d8c       0x1c hw/acpi.32
                0x00000000c0021d8c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021da8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021da8        0x7 hw/acpi.32
                0x00000000c0021da8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021db0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021db0       0xb8 hw/acpi.32
                0x00000000c0021db0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c0021e68       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0021e68       0x23 hw/cpu.32
                0x00000000c0021e68                CPU::~CPU()
                0x00000000c0021e68                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0021e8c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0021e8c       0x2a hw/cpu.32
                0x00000000c0021e8c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021eb8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021eb8        0x2 thr/prcssthr.32
                0x00000000c0021eb8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0021eb8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021ebc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021ebc       0x49 thr/prcssthr.32
                0x00000000c0021ebc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0021ebc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021f08       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021f08       0x42 thr/prcssthr.32
                0x00000000c0021f08                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0021f08                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021f4c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021f4c        0x8 thr/prcssthr.32
                0x00000000c0021f4c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0021f54        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0021f54        0xd vm86/x87em.32
                0x00000000c0021f54                Vm::_FPUState::_FPUState()
                0x00000000c0021f54                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c0021f62       0x23
 .text._ZN3PCID2Ev
                0x00000000c0021f62       0x23 hw/bus/pci.32
                0x00000000c0021f62                PCI::~PCI()
                0x00000000c0021f62                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0021f86       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0021f86       0x2a hw/bus/pci.32
                0x00000000c0021f86                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0021fb0       0x23
 .text._ZN3IDED2Ev
                0x00000000c0021fb0       0x23 hw/diskctrl/ide.32
                0x00000000c0021fb0                IDE::~IDE()
                0x00000000c0021fb0                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0021fd4       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0021fd4       0x2a hw/diskctrl/ide.32
                0x00000000c0021fd4                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0021ffe       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0021ffe       0x23 hw/diskctrl/satabus.32
                0x00000000c0021ffe                SATABus::~SATABus()
                0x00000000c0021ffe                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0022022       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0022022       0x2a hw/diskctrl/satabus.32
                0x00000000c0022022                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c002204c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c002204c       0x23 hw/diskphys/ata.32
                0x00000000c002204c                ATA::~ATA()
                0x00000000c002204c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0022070       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0022070       0x2a hw/diskphys/ata.32
                0x00000000c0022070                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c002209a       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c002209a       0x23 hw/diskphys/atapi.32
                0x00000000c002209a                ATAPI::~ATAPI()
                0x00000000c002209a                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00220be       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00220be       0x2a hw/diskphys/atapi.32
                0x00000000c00220be                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00220e8       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00220e8       0x23 hw/diskphys/sata.32
                0x00000000c00220e8                SATA::~SATA()
                0x00000000c00220e8                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c002210c       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c002210c       0x2a hw/diskphys/sata.32
                0x00000000c002210c                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0022136       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0022136       0x23 hw/diskphys/satapi.32
                0x00000000c0022136                SATAPI::~SATAPI()
                0x00000000c0022136                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002215a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002215a       0x2a hw/diskphys/satapi.32
                0x00000000c002215a                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0022184       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0022184       0x23 hw/intctrl/apic.32
                0x00000000c0022184                IOAPIC::~IOAPIC()
                0x00000000c0022184                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00221a8       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00221a8       0x2a hw/intctrl/apic.32
                0x00000000c00221a8                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00221d4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00221d4       0x23 hw/timer/apictimer.32
                0x00000000c00221d4                APICTimer::~APICTimer()
                0x00000000c00221d4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00221f8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00221f8       0x2a hw/timer/apictimer.32
                0x00000000c00221f8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0022224       0x23
 .text._ZN3PITD2Ev
                0x00000000c0022224       0x23 hw/timer/pit.32
                0x00000000c0022224                PIT::~PIT()
                0x00000000c0022224                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022248       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022248       0x2a hw/timer/pit.32
                0x00000000c0022248                PIT::~PIT()

.rodata         0x00000000c0022272     0x36ea
                0x00000000c0022272                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0022272        0x2 
 .ctors         0x00000000c0022274        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022278        0x4 core/unixfile.32
 .ctors         0x00000000c002227c        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022280        0x4 vm86/x87em.32
 .ctors         0x00000000c0022284        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022288                end_ctors = .
                0x00000000c0022288                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0022288        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002228c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002228c                __DTOR_END__
                0x00000000c0022290                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022290       0x10 
 .rodata        0x00000000c00222a0      0x101 acpica/utclib.32
                0x00000000c00222a0                AcpiGbl_Ctypes
 *fill*         0x00000000c00223a1        0x3 
 .rodata        0x00000000c00223a4       0x18 core/malloc.32
 *fill*         0x00000000c00223bc        0x4 
 .rodata        0x00000000c00223c0      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c00224e0       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c0022536        0xa 
 .rodata        0x00000000c0022540      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022940       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c0022989      0x12c core/computer.32
 *fill*         0x00000000c0022ab5        0x3 
 .rodata.str1.4
                0x00000000c0022ab8       0x8c core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0022b44       0x2c core/computer.32
                0x00000000c0022b44                vtable for Computer
 .rodata.str1.1
                0x00000000c0022b70       0x2a core/kheap.32
 *fill*         0x00000000c0022b9a        0x2 
 .rodata.str1.4
                0x00000000c0022b9c       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0022bcc       0x17 core/main.32
 *fill*         0x00000000c0022be3        0x1 
 .rodata.str1.4
                0x00000000c0022be4       0x1f core/main.32
 .rodata.str1.1
                0x00000000c0022c03       0xea core/physmgr.32
                                         0xee (size before relaxing)
 *fill*         0x00000000c0022ced        0x3 
 .rodata.str1.4
                0x00000000c0022cf0       0xc9 core/physmgr.32
 .rodata.str1.1
                0x00000000c0022db9       0x39 core/pipe.32
 *fill*         0x00000000c0022df2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0022df4       0x1c core/pipe.32
                0x00000000c0022df4                vtable for Pipe
 .rodata.str1.1
                0x00000000c0022e10       0x69 core/terminal.32
 *fill*         0x00000000c0022e79        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0022e7c       0x1c core/terminal.32
                0x00000000c0022e7c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0022e98       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0022eba       0x15 core/unixfile.32
 *fill*         0x00000000c0022ecf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0022ed0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0022f1b        0x8 core/unixfile.32
 *fill*         0x00000000c0022f23        0x1 
 .rodata.str1.4
                0x00000000c0022f24       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0022f44       0x1c core/unixfile.32
                0x00000000c0022f44                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0022f60       0x1c core/unixfile.32
                0x00000000c0022f60                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0022f7c      0x1b8 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0023134      0x194 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00232c8       0x83 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c002334b       0x11 dbg/kconsole.32
 *fill*         0x00000000c002334b        0x1 
 .rodata        0x00000000c002334c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002349c       0x25 fs/vfs.32
                                         0x33 (size before relaxing)
 *fill*         0x00000000c00234c1        0x3 
 .rodata.str1.4
                0x00000000c00234c4       0x54 fs/vfs.32
 .rodata._ZTV10Filesystem
                0x00000000c0023518       0x68 fs/vfs.32
                0x00000000c0023518                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0023580       0x1c fs/vfs.32
                0x00000000c0023580                vtable for File
 .rodata._ZTV9Directory
                0x00000000c002359c       0x1c fs/vfs.32
                0x00000000c002359c                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00235b8       0x2c hal/bus.32
                0x00000000c00235b8                vtable for Bus
 .rodata.str1.1
                0x00000000c00235e4       0x1e hal/clock.32
 *fill*         0x00000000c0023602        0x2 
 .rodata._ZTV5Clock
                0x00000000c0023604       0x3c hal/clock.32
                0x00000000c0023604                vtable for Clock
 .rodata        0x00000000c0023640       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0023670       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00236c8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00236c8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c00236c8       0x2c hal/device.32
                0x00000000c00236c8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00236f4       0x2c hal/device.32
                0x00000000c00236f4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023720       0x2c hal/diskctrl.32
                0x00000000c0023720                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002374c       0x38 hal/diskphys.32
                0x00000000c002374c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0023784       0x3e hal/intctrl.32
 *fill*         0x00000000c00237c2        0x2 
 .rodata.str1.4
                0x00000000c00237c4       0x5d hal/intctrl.32
 .rodata        0x00000000c0023821       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0023874       0x34 hal/keybrd.32
                0x00000000c0023874                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00238a8       0x9a hal/logidisk.32
 *fill*         0x00000000c0023942        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0023944       0x2c hal/logidisk.32
                0x00000000c0023944                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0023970       0x2c hal/mouse.32
                0x00000000c0023970                vtable for Mouse
 .rodata.str1.1
                0x00000000c002399c        0xb hal/partition.32
 *fill*         0x00000000c00239a7        0x1 
 .rodata._ZTV6Serial
                0x00000000c00239a8       0x44 hal/serial.32
                0x00000000c00239a8                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00239ec       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00239ec        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00239ec       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00239ec       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c00239ec       0x30 hal/timer.32
                0x00000000c00239ec                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0023a1c       0x10 hal/vcache.32
                0x00000000c0023a1c                vtable for VCache
 .rodata.str1.1
                0x00000000c0023a2c       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c0023a94       0x48 hal/video.32
                0x00000000c0023a94                vtable for Video
 .rodata.str1.4
                0x00000000c0023adc      0x123 hw/acpi.32
 .rodata.str1.1
                0x00000000c0023bff      0x268 hw/acpi.32
                                        0x282 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023e67       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023e67        0x8 hw/acpi.32
 *fill*         0x00000000c0023e67        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023e68       0x2c hw/acpi.32
                0x00000000c0023e68                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023e94      0x1be hw/cpu.32
                                        0x1c2 (size before relaxing)
 *fill*         0x00000000c0024052        0x2 
 .rodata._ZTV3CPU
                0x00000000c0024054       0x2c hw/cpu.32
                0x00000000c0024054                vtable for CPU
 .rodata.str1.1
                0x00000000c0024080       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c0024091       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00240cd       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 *fill*         0x00000000c002416d        0x3 
 .rodata.str1.4
                0x00000000c0024170      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c00242ae       0x2f krnl/powctrl.32
 .rodata.str1.1
                0x00000000c00242dd       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024322       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c0024376       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c00243a2       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00243ea      0x247 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024631       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0024688      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0024794       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0024794       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0024794       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0024794        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0024794       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0024834       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0024864       0x58 vm86/x87em.32
 .rodata        0x00000000c00248bc       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c00248f8      0x27f arch/i386/hal.32
                                        0x28a (size before relaxing)
 *fill*         0x00000000c0024b77        0x1 
 .rodata.str1.4
                0x00000000c0024b78       0x99 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0024c11       0xc5 arch/i386/rtc.32
 *fill*         0x00000000c0024cd6        0x2 
 .rodata._ZTV3RTC
                0x00000000c0024cd8       0x3c arch/i386/rtc.32
                0x00000000c0024cd8                vtable for RTC
 .rodata.str1.1
                0x00000000c0024d14       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0024d55        0x3 
 .rodata._ZTV3FAT
                0x00000000c0024d58       0x68 fs/fat/vfslink.32
                0x00000000c0024d58                vtable for FAT
 .rodata.str1.1
                0x00000000c0024dc0       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c0024ddb        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c0024ddc       0x68 fs/iso9660/vfslink.32
                0x00000000c0024ddc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0024e44       0xc3 hal/sound/sndcard.32
                                         0xdb (size before relaxing)
 *fill*         0x00000000c0024f07        0x1 
 .rodata._ZTV9SoundCard
                0x00000000c0024f08       0x34 hal/sound/sndcard.32
                0x00000000c0024f08                vtable for SoundCard
 .rodata.str1.1
                0x00000000c0024f3c       0x6e hal/sound/sndport.32
 *fill*         0x00000000c0024faa        0x2 
 .rodata.str1.4
                0x00000000c0024fac       0x93 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002503f      0x1cd hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c002520c       0x2c hw/bus/pci.32
                0x00000000c002520c                vtable for PCI
 .rodata.str1.1
                0x00000000c0025238       0xa3 hw/diskctrl/ide.32
 *fill*         0x00000000c00252db        0x1 
 .rodata._ZTV3IDE
                0x00000000c00252dc       0x2c hw/diskctrl/ide.32
                0x00000000c00252dc                vtable for IDE
 .rodata.str1.4
                0x00000000c0025308       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata.str1.1
                0x00000000c002532c       0x7b hw/diskctrl/satabus.32
 *fill*         0x00000000c00253a7        0x1 
 .rodata._ZTV7SATABus
                0x00000000c00253a8       0x2c hw/diskctrl/satabus.32
                0x00000000c00253a8                vtable for SATABus
 .rodata.str1.1
                0x00000000c00253d4       0x4b hw/diskphys/ata.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c002541f        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025420       0x38 hw/diskphys/ata.32
                0x00000000c0025420                vtable for ATA
 .rodata.str1.1
                0x00000000c0025458       0x40 hw/diskphys/atapi.32
                                         0x6f (size before relaxing)
 .rodata._ZTV5ATAPI
                0x00000000c0025498       0x38 hw/diskphys/atapi.32
                0x00000000c0025498                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00254d0      0x202 hw/diskphys/sata.32
 *fill*         0x00000000c00256d2        0x2 
 .rodata._ZTV4SATA
                0x00000000c00256d4       0x38 hw/diskphys/sata.32
                0x00000000c00256d4                vtable for SATA
 .rodata.str1.1
                0x00000000c002570c      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c002583e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0025840       0x38 hw/diskphys/satapi.32
                0x00000000c0025840                vtable for SATAPI
 .rodata        0x00000000c0025878       0x19 hw/intctrl/apic.32
 *fill*         0x00000000c0025891        0x3 
 .rodata._ZTV6IOAPIC
                0x00000000c0025894       0x2c hw/intctrl/apic.32
                0x00000000c0025894                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00258c0       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00258db        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00258dc       0x30 hw/timer/apictimer.32
                0x00000000c00258dc                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002590c       0x1d hw/timer/pit.32
 *fill*         0x00000000c0025929        0x3 
 .rodata._ZTV3PIT
                0x00000000c002592c       0x30 hw/timer/pit.32
                0x00000000c002592c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002595c      0x525
 *(.data)
 .data          0x00000000c002595c        0x0 crti.32
 .data          0x00000000c002595c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002595c                __dso_handle
 .data          0x00000000c0025960        0x0 acpica/utclib.32
 .data          0x00000000c0025960        0x0 core/malloc.32
 .data          0x00000000c0025960        0x0 libk/string.32
 .data          0x00000000c0025960        0x0 fs/fat/diskio.32
 .data          0x00000000c0025960        0x0 fs/fat/ff.32
 .data          0x00000000c0025960        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0025960        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0025960        0x0 compat/inlines.32
 .data          0x00000000c0025960        0x0 compat/resolve.32
 .data          0x00000000c0025960        0x0 core/computer.32
 .data          0x00000000c0025960        0x0 core/gdt.32
 .data          0x00000000c0025960        0x0 core/idle.32
 .data          0x00000000c0025960        0x0 core/idt.32
 .data          0x00000000c0025960        0x4 core/kheap.32
 *fill*         0x00000000c0025964       0x1c 
 .data          0x00000000c0025980      0x142 core/main.32
                0x00000000c0025980                titleScreen
 *fill*         0x00000000c0025ac2        0x2 
 .data          0x00000000c0025ac4        0x4 core/physmgr.32
                0x00000000c0025ac4                Phys::bitmap
 .data          0x00000000c0025ac8        0x0 core/pipe.32
 *fill*         0x00000000c0025ac8       0x18 
 .data          0x00000000c0025ae0       0x60 core/terminal.32
                0x00000000c0025ae0                VgaText::hiddenOut
                0x00000000c0025b00                ansiToVGAMappings
 .data          0x00000000c0025b40        0x0 core/tss.32
 .data          0x00000000c0025b40        0x4 core/unixfile.32
                0x00000000c0025b40                UnixFile::nextFd
 .data          0x00000000c0025b44       0x15 core/virtmgr.32
                0x00000000c0025b44                Virt::pageAllocPtr
                0x00000000c0025b48                Virt::bitmap
                0x00000000c0025b4c                Virt::swapfileSectorsPerPage
                0x00000000c0025b50                Virt::swapfileLength
                0x00000000c0025b54                Virt::swapfileSector
                0x00000000c0025b58                Virt::swapfileDrive
 *fill*         0x00000000c0025b59        0x3 
 .data          0x00000000c0025b5c        0x4 coreobjs/c++.32
                0x00000000c0025b5c                __stack_chk_guard
 .data          0x00000000c0025b60        0x0 dbg/kconsole.32
 .data          0x00000000c0025b60        0x0 fs/vfs.32
 .data          0x00000000c0025b60        0x0 hal/bus.32
 .data          0x00000000c0025b60        0x0 hal/buzzer.32
 .data          0x00000000c0025b60        0x0 hal/clock.32
 .data          0x00000000c0025b60        0x0 hal/device.32
 .data          0x00000000c0025b60        0x0 hal/diskctrl.32
 .data          0x00000000c0025b60        0x0 hal/diskphys.32
 .data          0x00000000c0025b60        0x0 hal/fpu.32
 .data          0x00000000c0025b60        0x0 hal/intctrl.32
 .data          0x00000000c0025b60        0x0 hal/keybrd.32
 .data          0x00000000c0025b60        0x0 hal/logidisk.32
 .data          0x00000000c0025b60        0x0 hal/mouse.32
 .data          0x00000000c0025b60        0x0 hal/partition.32
 .data          0x00000000c0025b60        0x0 hal/serial.32
 .data          0x00000000c0025b60        0x0 hal/timer.32
 .data          0x00000000c0025b60        0x0 hal/vcache.32
 .data          0x00000000c0025b60        0x0 hal/video.32
 .data          0x00000000c0025b60       0x10 hw/acpi.32
                0x00000000c0025b60                legacyIRQRemaps
 .data          0x00000000c0025b70        0x4 hw/cpu.32
                0x00000000c0025b70                lastCode
 .data          0x00000000c0025b74        0x0 hw/smp.32
 *fill*         0x00000000c0025b74        0xc 
 .data          0x00000000c0025b80       0x4d krnl/env.32
                0x00000000c0025b80                defaultSysEnv
 .data          0x00000000c0025bcd        0x0 krnl/panic.32
 .data          0x00000000c0025bcd        0x0 krnl/powctrl.32
 .data          0x00000000c0025bcd        0x0 reg/registry.32
 .data          0x00000000c0025bcd        0x0 sys/sc_eject.32
 .data          0x00000000c0025bcd        0x0 sys/sc_exit.32
 .data          0x00000000c0025bcd        0x0 sys/sc_getcwd.32
 .data          0x00000000c0025bcd        0x0 sys/sc_getpid.32
 .data          0x00000000c0025bcd        0x0 sys/sc_getramdata.32
 .data          0x00000000c0025bcd        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c0025bcd        0x0 sys/sc_loaddll.32
 .data          0x00000000c0025bcd        0x0 sys/sc_read.32
 .data          0x00000000c0025bcd        0x0 sys/sc_sbrk.32
 .data          0x00000000c0025bcd        0x0 sys/sc_setcwd.32
 .data          0x00000000c0025bcd        0x0 sys/sc_settime.32
 .data          0x00000000c0025bcd        0x0 sys/sc_timezone.32
 .data          0x00000000c0025bcd        0x0 sys/sc_write.32
 .data          0x00000000c0025bcd        0x0 sys/sc_wsbe.32
 .data          0x00000000c0025bcd        0x0 sys/sc_yield.32
 .data          0x00000000c0025bcd        0x0 sys/syscalls.32
 .data          0x00000000c0025bcd        0x0 thr/elf.32
 *fill*         0x00000000c0025bcd        0x3 
 .data          0x00000000c0025bd0        0x4 thr/prcssthr.32
                0x00000000c0025bd0                Thr::nextPID
 .data          0x00000000c0025bd4        0x0 vm86/vm8086.32
 .data          0x00000000c0025bd4        0x0 vm86/x87em.32
 *fill*         0x00000000c0025bd4        0xc 
 .data          0x00000000c0025be0      0x2a0 arch/i386/hal.32
                0x00000000c0025be0                Krnl::exceptionNames
 .data          0x00000000c0025e80        0x0 arch/i386/pic.32
 .data          0x00000000c0025e80        0x0 arch/i386/rtc.32
 .data          0x00000000c0025e80        0x0 arch/i386/vga.32
 .data          0x00000000c0025e80        0x0 fs/fat/vfslink.32
 .data          0x00000000c0025e80        0x1 fs/iso9660/vfslink.32
                0x00000000c0025e80                recentDriveletter
 .data          0x00000000c0025e81        0x0 hal/sound/sndcard.32
 .data          0x00000000c0025e81        0x0 hal/sound/sndport.32
 .data          0x00000000c0025e81        0x0 hw/bus/isa.32
 .data          0x00000000c0025e81        0x0 hw/bus/pci.32
 .data          0x00000000c0025e81        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0025e81        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0025e81        0x0 hw/diskphys/ata.32
 .data          0x00000000c0025e81        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0025e81        0x0 hw/diskphys/sata.32
 .data          0x00000000c0025e81        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0025e81        0x0 hw/intctrl/apic.32
 .data          0x00000000c0025e81        0x0 hw/timer/apictimer.32
 .data          0x00000000c0025e81        0x0 hw/timer/pit.32
 .data          0x00000000c0025e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0025e81        0x0 crtn.32
 .data          0x00000000c0025e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0025e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0025e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0025e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0025e84        0x0
 .got           0x00000000c0025e84        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0025e84        0x0
 .got.plt       0x00000000c0025e84        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0025e84        0x0
 .igot.plt      0x00000000c0025e84        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0025e84        0x0
 .tm_clone_table
                0x00000000c0025e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0025e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0025e81      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0025e81        0x3 
 .eh_frame      0x00000000c0025e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0025e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0025e84       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0025edc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0025f1c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0025f88       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c002600c        0x0
 .rel.got       0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c002600c     0x43bc
                0x00000000c002600c                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c002600c        0x0 crti.32
 .bss           0x00000000c002600c       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c002602c        0x4 acpica/utclib.32
 *fill*         0x00000000c0026030       0x10 
 .bss           0x00000000c0026040      0x378 core/malloc.32
 .bss           0x00000000c00263b8        0x0 libk/string.32
 .bss           0x00000000c00263b8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c00263b8        0x8 
 .bss           0x00000000c00263c0       0x88 fs/fat/ff.32
 .bss           0x00000000c0026448        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026448        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0026448        0x0 compat/inlines.32
 .bss           0x00000000c0026448        0x0 compat/resolve.32
 .bss           0x00000000c0026448        0x6 core/computer.32
                0x00000000c0026448                Krnl::computer
                0x00000000c002644c                Krnl::preemptionOn
                0x00000000c002644d                Krnl::schedulingOn
 *fill*         0x00000000c002644e        0x2 
 .bss           0x00000000c0026450        0x6 core/gdt.32
                0x00000000c0026450                gdtDescr
 .bss           0x00000000c0026456        0x0 core/idle.32
 *fill*         0x00000000c0026456        0x2 
 .bss           0x00000000c0026458        0x6 core/idt.32
                0x00000000c0026458                idtDescr
 .bss           0x00000000c002645e        0x0 core/kheap.32
 *fill*         0x00000000c002645e        0x2 
 .bss           0x00000000c0026460        0x4 core/main.32
                0x00000000c0026460                sysBootSettings
 .bss           0x00000000c0026464       0x29 core/physmgr.32
                0x00000000c0026464                Phys::forbidEvictions
                0x00000000c0026468                Phys::currentPagePointer
                0x00000000c002646c                Phys::highestMem
                0x00000000c0026470                Phys::oldPercent
                0x00000000c0026474                Phys::usedPages
                0x00000000c0026478                Phys::usablePages
                0x00000000c002647c                Phys::dmaUsage
 .bss           0x00000000c002648d        0x0 core/pipe.32
 *fill*         0x00000000c002648d        0x3 
 .bss           0x00000000c0026490        0x9 core/terminal.32
                0x00000000c0026490                terminalCycle
                0x00000000c0026494                activeTerminal
                0x00000000c0026498                VgaText::graphicMode
 *fill*         0x00000000c0026499        0x1 
 .bss           0x00000000c002649a        0x2 core/tss.32
                0x00000000c002649a                doubleFaultSelector
 *fill*         0x00000000c002649c        0x4 
 .bss           0x00000000c00264a0       0x84 core/unixfile.32
                0x00000000c00264a0                sfileLpt
                0x00000000c00264e0                sfileCom
                0x00000000c0026504                sfileNul
                0x00000000c0026508                sfilePnt
                0x00000000c002650c                sfileAux
                0x00000000c0026510                sfileCon
                0x00000000c0026514                initialFilesAdded
                0x00000000c0026518                unixFileLinkedList
 .bss           0x00000000c0026524       0x14 core/virtmgr.32
                0x00000000c0026524                twswaps
                0x00000000c0026528                swapBalance
                0x00000000c002652c                panicVAS
                0x00000000c0026530                Virt::swapfileBitmap
                0x00000000c0026534                firstVAS
 .bss           0x00000000c0026538        0x0 coreobjs/c++.32
 .bss           0x00000000c0026538        0x0 dbg/kconsole.32
 .bss           0x00000000c0026538        0x4 fs/vfs.32
                0x00000000c0026538                installedFilesystems
 .bss           0x00000000c002653c        0x0 hal/bus.32
 .bss           0x00000000c002653c        0x0 hal/buzzer.32
 .bss           0x00000000c002653c        0x8 hal/clock.32
                0x00000000c002653c                User::dstOn
                0x00000000c002653d                User::timezoneHalfHourOffset
                0x00000000c0026540                User::timezoneHourOffset
 .bss           0x00000000c0026544        0x0 hal/device.32
 .bss           0x00000000c0026544        0x0 hal/diskctrl.32
 .bss           0x00000000c0026544        0x0 hal/diskphys.32
 .bss           0x00000000c0026544        0x0 hal/fpu.32
 *fill*         0x00000000c0026544       0x1c 
 .bss           0x00000000c0026560     0x2000 hal/intctrl.32
                0x00000000c0026560                INT_contexts
                0x00000000c0027560                INT_handlers
 .bss           0x00000000c0028560      0x429 hal/keybrd.32
                0x00000000c0028560                keyboardWaitingTaskList
                0x00000000c0028564                keyboardSetupYet
                0x00000000c0028568                guiKeyboardHandler
                0x00000000c0028580                keystates
 *fill*         0x00000000c0028989       0x17 
 .bss           0x00000000c00289a0       0x88 hal/logidisk.32
                0x00000000c00289a0                diskAssignments
                0x00000000c00289c0                disks
 .bss           0x00000000c0028a28        0x4 hal/mouse.32
                0x00000000c0028a28                guiMouseHandler
 .bss           0x00000000c0028a2c        0x0 hal/partition.32
 .bss           0x00000000c0028a2c        0x0 hal/serial.32
 .bss           0x00000000c0028a2c        0x4 hal/timer.32
                0x00000000c0028a2c                milliTenthsSinceBoot
 .bss           0x00000000c0028a30        0x0 hal/vcache.32
 .bss           0x00000000c0028a30        0x4 hal/video.32
                0x00000000c0028a30                screen
 *fill*         0x00000000c0028a34        0xc 
 .bss           0x00000000c0028a40      0x480 hw/acpi.32
                0x00000000c0028a40                systemSleepFunction
                0x00000000c0028a44                systemResetFunction
                0x00000000c0028a48                systemShutdownFunction
                0x00000000c0028a4c                nextACPITable
                0x00000000c0028a60                acpiTables
                0x00000000c0028c60                usingXSDT
                0x00000000c0028c64                MADTpointer
                0x00000000c0028c68                RSDTpointer
                0x00000000c0028c6c                RSDPpointer
                0x00000000c0028c70                nextAPICNMI
                0x00000000c0028c80                apicNMIInfo
                0x00000000c0028d00                legacyIRQFlags
                0x00000000c0028d20                ioapicDiscoveryNumber
                0x00000000c0028d40                ioapicFoundInMADT
                0x00000000c0028d60                ioapicAddresses
                0x00000000c0028de0                ioapicGSIBase
                0x00000000c0028e60                processorDiscoveryNumber
                0x00000000c0028e80                matchingAPICID
                0x00000000c0028ea0                processorID
 .bss           0x00000000c0028ec0       0x10 hw/cpu.32
                0x00000000c0028ec0                lastD
                0x00000000c0028ec4                lastC
                0x00000000c0028ec8                lastB
                0x00000000c0028ecc                lastA
 .bss           0x00000000c0028ed0        0x1 hw/smp.32
                0x00000000c0028ed0                Krnl::bspID
 *fill*         0x00000000c0028ed1        0x3 
 .bss           0x00000000c0028ed4        0x8 krnl/env.32
                0x00000000c0028ed4                Krnl::userEnv
                0x00000000c0028ed8                Krnl::systemEnv
 .bss           0x00000000c0028edc        0x9 krnl/panic.32
                0x00000000c0028edc                Krnl::guiProgramFaultHandler
                0x00000000c0028ee0                Krnl::guiPanicHandler
                0x00000000c0028ee4                Krnl::kernelInPanic
 *fill*         0x00000000c0028ee5       0x1b 
 .bss           0x00000000c0028f00       0x48 krnl/powctrl.32
                0x00000000c0028f00                Krnl::powCtrlOnBattery
                0x00000000c0028f20                Krnl::currentPowerSettings
                0x00000000c0028f44                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0028f48        0x0 reg/registry.32
 .bss           0x00000000c0028f48        0x0 sys/sc_eject.32
 .bss           0x00000000c0028f48        0x0 sys/sc_exit.32
 .bss           0x00000000c0028f48        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0028f48        0x0 sys/sc_getpid.32
 .bss           0x00000000c0028f48        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0028f48        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0028f48        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0028f48        0x0 sys/sc_read.32
 .bss           0x00000000c0028f48        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0028f48        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0028f48        0x0 sys/sc_settime.32
 .bss           0x00000000c0028f48        0x0 sys/sc_timezone.32
 .bss           0x00000000c0028f48        0x0 sys/sc_write.32
 .bss           0x00000000c0028f48        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0028f48        0x0 sys/sc_yield.32
 *fill*         0x00000000c0028f48       0x18 
 .bss           0x00000000c0028f60      0x200 sys/syscalls.32
                0x00000000c0028f60                systemCallHandlers
 .bss           0x00000000c0029160      0x7a4 thr/elf.32
                0x00000000c0029160                Thr::driverLookupNext
                0x00000000c0029180                Thr::driverLookupLen
                0x00000000c0029380                Thr::driverLookupAddr
                0x00000000c0029580                Thr::driverNameLookup
                0x00000000c0029780                Thr::kernelSymbols
                0x00000000c0029800                Thr::kernelStringTable
                0x00000000c0029880                Thr::kernelSymbolTable
                0x00000000c0029900                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0029904        0x4 
 .bss           0x00000000c0029908       0x68 thr/prcssthr.32
                0x00000000c0029908                cleanerThread
                0x00000000c002990c                weNeedTheCleanerToNotBlock
                0x00000000c0029910                retValLockStuff
                0x00000000c0029914                retValSchedLock
                0x00000000c0029918                lockStuffLock
                0x00000000c002991c                schedulerLock
                0x00000000c0029920                taskSwitchesPostponedFlag
                0x00000000c0029924                postponeTaskSwitchesCounter
                0x00000000c0029928                irqDisableCounter
                0x00000000c002992c                terminatedTaskList
                0x00000000c0029938                sleepingTaskList
                0x00000000c0029944                taskList
                0x00000000c0029950                kernelProcess
 *fill*         0x00000000c0029970       0x10 
 .bss           0x00000000c0029980       0x40 vm86/vm8086.32
                0x00000000c0029980                Vm::vmRetV
                0x00000000c0029984                Vm::vmDone
                0x00000000c0029985                Vm::vmReady
                0x00000000c0029988                Vm::vm86Thread
                0x00000000c002998c                Vm::vmToHostCommsPtr
                0x00000000c00299a0                Vm::vmToHostComms
 .bss           0x00000000c00299c0       0x48 vm86/x87em.32
                0x00000000c00299c0                Vm::fpuState
 .bss           0x00000000c0029a08       0x18 arch/i386/hal.32
                0x00000000c0029a08                Hal::apic
                0x00000000c0029a0c                fpuOwner
                0x00000000c0029a10                coproLoadFunc
                0x00000000c0029a14                coproSaveFunc
                0x00000000c0029a18                _i386_HAL_tscFunction
                0x00000000c0029a1c                gpFaultIntercept
 .bss           0x00000000c0029a20        0x0 arch/i386/pic.32
 .bss           0x00000000c0029a20        0x2 arch/i386/rtc.32
 .bss           0x00000000c0029a22        0x0 arch/i386/vga.32
 *fill*         0x00000000c0029a22       0x1e 
 .bss           0x00000000c0029a40       0xf0 fs/fat/vfslink.32
                0x00000000c0029a40                FAT::fats
                0x00000000c0029a60                FAT::vfsToFatRemaps
                0x00000000c0029ae0                fatToVFSRemaps
 *fill*         0x00000000c0029b30       0x10 
 .bss           0x00000000c0029b40      0x820 fs/iso9660/vfslink.32
                0x00000000c0029b40                recentSector
                0x00000000c0029b60                recentBuffer
 .bss           0x00000000c002a360        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002a360        0x0 hal/sound/sndport.32
 .bss           0x00000000c002a360        0x0 hw/bus/isa.32
 .bss           0x00000000c002a360        0xd hw/bus/pci.32
                0x00000000c002a360                thePCI
 .bss           0x00000000c002a36d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002a36d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002a36d        0x3 
 .bss           0x00000000c002a370        0x8 hw/diskphys/ata.32
                0x00000000c002a370                ataSectorsWritten
                0x00000000c002a374                ataSectorsRead
 .bss           0x00000000c002a378        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002a378        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002a378        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002a378        0x8 
 .bss           0x00000000c002a380       0x41 hw/intctrl/apic.32
                0x00000000c002a380                noOfIOAPICs
                0x00000000c002a3a0                ioapics
                0x00000000c002a3c0                IOAPICsSetupYet
 .bss           0x00000000c002a3c1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002a3c1        0x3 
 .bss           0x00000000c002a3c4        0x4 hw/timer/pit.32
                0x00000000c002a3c4                pitFreq
 .bss           0x00000000c002a3c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002a3c8        0x0 crtn.32
 .bss           0x00000000c002a3c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002a3c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002a3c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002a3c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002a3c8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002e784                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
