Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1b7aa
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 .text          0x00000000c0001afb        0x0 libk/string.32
 .text          0x00000000c0001afb       0x51 fs/fat/diskio.32
                0x00000000c0001afb                disk_status
                0x00000000c0001afe                disk_initialize
                0x00000000c0001b01                disk_read
                0x00000000c0001b17                disk_write
                0x00000000c0001b2d                disk_ioctl
 .text          0x00000000c0001b4c     0x3d4b fs/fat/ff.32
                0x00000000c00038e8                f_mount
                0x00000000c000394a                f_open
                0x00000000c0003c15                f_read
                0x00000000c0003e14                f_write
                0x00000000c0004048                f_sync
                0x00000000c00040fd                f_close
                0x00000000c000412c                f_lseek
                0x00000000c00042d3                f_opendir
                0x00000000c000439e                f_closedir
                0x00000000c00043c0                f_readdir
                0x00000000c0004452                f_stat
                0x00000000c00044d1                f_getfree
                0x00000000c00045d3                f_truncate
                0x00000000c00046b7                f_unlink
                0x00000000c00047d9                f_mkdir
                0x00000000c0004974                f_rename
                0x00000000c0004b2a                f_chmod
                0x00000000c0004bd3                f_utime
                0x00000000c0004c81                f_getlabel
                0x00000000c0004dd2                f_setlabel
                0x00000000c0004f62                f_expand
                0x00000000c00050c2                f_mkfs
 *fill*         0x00000000c0005897        0x1 
 .text          0x00000000c0005898       0x2f fs/fat/ffsystem.32
                0x00000000c0005898                ff_memalloc
                0x00000000c00058b0                ff_memfree
 *fill*         0x00000000c00058c7        0x1 
 .text          0x00000000c00058c8      0x2a8 fs/fat/ffunicode.32
                0x00000000c00058c8                ff_uni2oem
                0x00000000c0005968                ff_oem2uni
                0x00000000c00059e0                ff_wtoupper
 .text          0x00000000c0005b70       0x94 compat/inlines.32
                0x00000000c0005b70                CPU::current()
                0x00000000c0005b7c                operator new(unsigned long)
                0x00000000c0005b81                operator delete(void*)
                0x00000000c0005b86                disableIRQs()
                0x00000000c0005b88                enableIRQs()
                0x00000000c0005b8a                lockScheduler()
                0x00000000c0005b92                unlockScheduler()
                0x00000000c0005ba1                lockStuff()
                0x00000000c0005baf                unlockStuff()
                0x00000000c0005be9                Virt::getAKernelVAS()
                0x00000000c0005bef                __not_memcpy
 .text          0x00000000c0005c04      0x118 compat/resolve.32
                0x00000000c0005c04                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0005d1c      0x68b core/computer.32
                0x00000000c0005d1c                Computer::close(int, int, void*)
                0x00000000c0005d61                Krnl::firstTask()
                0x00000000c0005e9a                Computer::Computer()
                0x00000000c0005e9a                Computer::Computer()
                0x00000000c0005f4c                Computer::setBootMessage(char const*)
                0x00000000c0005f4e                Computer::detectFeatures()
                0x00000000c0006158                Computer::displayFeatures()
                0x00000000c000615a                Computer::rdmsr(unsigned int)
                0x00000000c0006186                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00061be                Computer::shutdown()
                0x00000000c00061d6                Computer::restart()
                0x00000000c00061ee                Computer::sleep()
                0x00000000c0006202                Computer::nmiEnabled()
                0x00000000c000620e                Computer::readCMOS(unsigned char)
                0x00000000c0006228                Computer::enableNMI(bool)
                0x00000000c0006240                Computer::open(int, int, void*)
                0x00000000c0006314                Computer::disableNMI()
                0x00000000c0006324                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006342                Computer::handleNMI()
 *fill*         0x00000000c00063a7        0x1 
 .text          0x00000000c00063a8      0x211 core/gdt.32
                0x00000000c00063a8                GDTEntry::setBase(unsigned int)
                0x00000000c00063c4                GDTEntry::setLimit(unsigned int)
                0x00000000c00063e2                GDT::GDT()
                0x00000000c00063e2                GDT::GDT()
                0x00000000c00063f8                GDT::addEntry(GDTEntry)
                0x00000000c000641a                GDT::getNumberOfEntries()
                0x00000000c0006422                GDT::flush()
                0x00000000c0006444                GDT::setup()
 .text          0x00000000c00065b9       0x19 core/idle.32
                0x00000000c00065b9                idleFunction(void*)
 *fill*         0x00000000c00065d2        0x2 
 .text          0x00000000c00065d4      0x464 core/idt.32
                0x00000000c00065d4                IDTEntry::IDTEntry(bool)
                0x00000000c00065d4                IDTEntry::IDTEntry(bool)
                0x00000000c0006646                IDTEntry::setOffset(unsigned int)
                0x00000000c000665c                IDT::IDT()
                0x00000000c000665c                IDT::IDT()
                0x00000000c000665e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0006666                IDT::addEntry(IDTEntry, int)
                0x00000000c0006680                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00066b8                IDT::flush()
                0x00000000c00066d2                IDT::setup()
 .text          0x00000000c0006a38      0x183 core/kheap.32
                0x00000000c0006a38                sbrk
                0x00000000c0006acd                mmap
                0x00000000c0006ae3                munmap
                0x00000000c0006af9                liballoc_lock()
                0x00000000c0006b06                liballoc_unlock()
                0x00000000c0006b1a                liballoc_alloc(int)
                0x00000000c0006b32                liballoc_free(void*, int)
                0x00000000c0006b4d                realloc
                0x00000000c0006b61                malloc
                0x00000000c0006b71                free
                0x00000000c0006b81                rfree
                0x00000000c0006b91                calloc
 .text          0x00000000c0006bbb      0x1b4 core/main.32
                0x00000000c0006bbb                Krnl::setBootMessage(char const*)
                0x00000000c0006c27                kernel_main
 .text          0x00000000c0006d6f      0x5dc core/physmgr.32
                0x00000000c0006d6f                Phys::allocateDMA(unsigned long)
                0x00000000c0006e46                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0006e79                Phys::setPageState(unsigned long, bool)
                0x00000000c0006eab                Phys::getPageState(unsigned long)
                0x00000000c0006ecc                Phys::freePage(unsigned long)
                0x00000000c0006f2e                Phys::allocatePage()
                0x00000000c0006fec                Phys::allocateContiguousPages(int)
                0x00000000c0007048                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007080                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000734b        0x1 
 .text          0x00000000c000734c      0x273 core/pipe.32
                0x00000000c000734c                Pipe::isAtty()
                0x00000000c0007350                Pipe::~Pipe()
                0x00000000c0007350                Pipe::~Pipe()
                0x00000000c0007374                Pipe::~Pipe()
                0x00000000c000739c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000745c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0007558                Pipe::Pipe(int)
                0x00000000c0007558                Pipe::Pipe(int)
 *fill*         0x00000000c00075bf        0x1 
 .text          0x00000000c00075c0      0xa1e core/terminal.32
                0x00000000c00075c0                VgaText::isAtty()
                0x00000000c00075c4                VgaText::~VgaText()
                0x00000000c00075c4                VgaText::~VgaText()
                0x00000000c00075e8                VgaText::~VgaText()
                0x00000000c0007612                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0007632                setTerminalScrollLock(bool)
                0x00000000c0007633                doTerminalCycle()
                0x00000000c0007634                addToTerminalCycle(VgaText*)
                0x00000000c0007635                scrollTerminalScrollLock(int)
                0x00000000c0007636                VgaText::updateTitle()
                0x00000000c0007638                VgaText::load()
                0x00000000c000763a                VgaText::updateCursor()
                0x00000000c0007650                VgaText::doANSI_SGR(int)
                0x00000000c00076c4                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00076d4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00076e4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0007704                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0007710                VgaText::setTitleColour(VgaColour)
                0x00000000c000771c                VgaText::setTitle(char*)
                0x00000000c000771e                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0007730                VgaText::scrollScreen()
                0x00000000c00077c8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00077da                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000786a                VgaText::getCursorX()
                0x00000000c0007872                VgaText::getCursorY()
                0x00000000c000787a                VgaText::setCursor(int, int)
                0x00000000c0007891                setActiveTerminal(VgaText*)
                0x00000000c00078dc                VgaText::clearScreen()
                0x00000000c000792a                VgaText::setCursorX(int)
                0x00000000c0007942                VgaText::setCursorY(int)
                0x00000000c000795a                VgaText::incrementCursor(bool)
                0x00000000c00079ae                VgaText::decrementCursor(bool)
                0x00000000c00079d0                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0007a9e                VgaText::putchar(char)
                0x00000000c0007b8a                VgaText::putx(unsigned int)
                0x00000000c0007bd0                VgaText::puts(char const*)
                0x00000000c0007bf6                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0007c42                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0007d94                VgaText::VgaText(char const*)
                0x00000000c0007d94                VgaText::VgaText(char const*)
                0x00000000c0007ee0                VgaText::receiveKey(unsigned char)
                0x00000000c0007fb8                VgaText::doUpdate()
                0x00000000c0007fb9                newTerminal(char*)
 *fill*         0x00000000c0007fde        0x2 
 .text          0x00000000c0007fe0      0x1a1 core/tss.32
                0x00000000c0007fe0                TSS::TSS()
                0x00000000c0007fe0                TSS::TSS()
                0x00000000c0007ff0                TSS::setESP(unsigned long)
                0x00000000c0008004                TSS::flush()
                0x00000000c0008024                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008181        0x1 
 .text          0x00000000c0008182      0x4c2 core/unixfile.32
                0x00000000c0008182                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00081d8                ReservedFilename::isAtty()
                0x00000000c00081f4                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008252                UnixFile::getFileDescriptor()
                0x00000000c000825a                UnixFile::UnixFile(int)
                0x00000000c000825a                UnixFile::UnixFile(int)
                0x00000000c000840a                ReservedFilename::ReservedFilename(int)
                0x00000000c000840a                ReservedFilename::ReservedFilename(int)
                0x00000000c000843c                UnixFile::~UnixFile()
                0x00000000c000843c                UnixFile::~UnixFile()
                0x00000000c00084d4                UnixFile::~UnixFile()
                0x00000000c00084fc                ReservedFilename::~ReservedFilename()
                0x00000000c00084fc                ReservedFilename::~ReservedFilename()
                0x00000000c0008520                ReservedFilename::~ReservedFilename()
                0x00000000c0008547                getFromFileDescriptor(int)
 .text          0x00000000c0008644     0x1166 core/virtmgr.32
                0x00000000c0008644                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0008679                Virt::getPageState(unsigned long)
                0x00000000c000869d                Virt::allocateKernelVirtualPages(int)
                0x00000000c00087ae                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00087cc                Virt::swapIDToSector(unsigned long)
                0x00000000c00087de                Virt::allocateSwapfilePage()
                0x00000000c000885c                Virt::virtualMemorySetup()
                0x00000000c00088a7                Virt::setupPageSwapping(int)
                0x00000000c0008918                VAS::VAS()
                0x00000000c0008918                VAS::VAS()
                0x00000000c0008954                VAS::VAS(VAS*)
                0x00000000c0008954                VAS::VAS(VAS*)
                0x00000000c0008982                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00089ae                VAS::getPageTableEntry(unsigned long)
                0x00000000c00089cd                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0008af2                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0008b16                VAS::virtualToPhysical(unsigned long)
                0x00000000c0008b30                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0008b70                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0008ba4                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0008bce                VAS::~VAS()
                0x00000000c0008bce                VAS::~VAS()
                0x00000000c0008d32                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0008e36                VAS::allocatePages(int, int)
                0x00000000c000900e                VAS::setCPUSpecific(unsigned long)
                0x00000000c000902c                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c00090f2                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c00091e0                VAS::VAS(bool)
                0x00000000c00091e0                VAS::VAS(bool)
                0x00000000c0009460                VAS::evict(unsigned long)
                0x00000000c0009522                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0009610                VAS::scanForEviction()
                0x00000000c00096f0                mapVASFirstTime
 .text          0x00000000c00097aa       0x5f coreobjs/c++.32
                0x00000000c00097aa                __cxa_atexit
                0x00000000c00097ad                __cxa_finalize
                0x00000000c00097ae                __stack_chk_fail
                0x00000000c00097e4                __cxa_pure_virtual
                0x00000000c00097f5                operator new[](unsigned long)
                0x00000000c00097fa                operator delete(void*, unsigned long)
                0x00000000c00097ff                operator delete[](void*)
                0x00000000c0009804                operator delete[](void*, unsigned long)
 .text          0x00000000c0009809      0x21c dbg/kconsole.32
                0x00000000c0009809                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0009874                Dbg::logc(char)
                0x00000000c0009894                Dbg::logs(char*)
                0x00000000c00098b1                Dbg::logWriteInt(unsigned int)
                0x00000000c00098cf                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c00098f0                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c0009a25        0x1 
 .text          0x00000000c0009a26      0xc5c fs/vfs.32
                0x00000000c0009a26                File::read(unsigned long long, void*, int*)
                0x00000000c0009a7e                File::write(unsigned long long, void*, int*)
                0x00000000c0009ad6                Directory::read(unsigned long long, void*, int*)
                0x00000000c0009b2e                Directory::write(unsigned long long, void*, int*)
                0x00000000c0009b5c                File::isAtty()
                0x00000000c0009b60                Directory::isAtty()
                0x00000000c0009b64                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0009b6a                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0009b70                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0009b76                File::~File()
                0x00000000c0009b76                File::~File()
                0x00000000c0009b9a                File::~File()
                0x00000000c0009bc4                Directory::~Directory()
                0x00000000c0009bc4                Directory::~Directory()
                0x00000000c0009be8                Directory::~Directory()
                0x00000000c0009c12                Filesystem::Filesystem()
                0x00000000c0009c12                Filesystem::Filesystem()
                0x00000000c0009c36                Filesystem::~Filesystem()
                0x00000000c0009c36                Filesystem::~Filesystem()
                0x00000000c0009c44                Filesystem::~Filesystem()
                0x00000000c0009c68                Fs::getcwd(Process*, char*, int)
                0x00000000c0009c92                Fs::initVFS()
                0x00000000c0009cbc                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c0009e66                File::File(char const*, Process*)
                0x00000000c0009e66                File::File(char const*, Process*)
                0x00000000c0009f26                File::open(FileOpenMode)
                0x00000000c0009f84                File::close()
                0x00000000c0009fe4                File::seek(unsigned long long)
                0x00000000c000a03a                File::tell(unsigned long long*)
                0x00000000c000a08a                File::rewind()
                0x00000000c000a09e                File::unlink()
                0x00000000c000a0ea                File::rename(char const*)
                0x00000000c000a138                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000a194                File::exists()
                0x00000000c000a1d2                File::stat(unsigned long long*, bool*)
                0x00000000c000a233                Fs::setcwd(Process*, char*)
                0x00000000c000a390                Directory::Directory(char const*, Process*)
                0x00000000c000a390                Directory::Directory(char const*, Process*)
                0x00000000c000a450                Directory::open()
                0x00000000c000a4ac                Directory::close()
                0x00000000c000a50c                Directory::unlink()
                0x00000000c000a558                Directory::rename(char const*)
                0x00000000c000a5a6                Directory::exists()
                0x00000000c000a5e4                Directory::read(dirent*)
                0x00000000c000a630                Directory::create()
                0x00000000c000a67c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000a682        0x2 
 .text          0x00000000c000a684       0x86 hal/bus.32
                0x00000000c000a684                Bus::Bus(char const*)
                0x00000000c000a684                Bus::Bus(char const*)
                0x00000000c000a6bc                Bus::~Bus()
                0x00000000c000a6bc                Bus::~Bus()
                0x00000000c000a6e0                Bus::~Bus()
 .text          0x00000000c000a70a       0x96 hal/buzzer.32
                0x00000000c000a70a                beepThread(void*)
                0x00000000c000a747                Krnl::beep(int, int, bool)
 .text          0x00000000c000a7a0      0x46d hal/clock.32
                0x00000000c000a7a0                User::loadClockSettings(int)
                0x00000000c000a7f2                Clock::Clock(char const*)
                0x00000000c000a7f2                Clock::Clock(char const*)
                0x00000000c000a828                Clock::~Clock()
                0x00000000c000a828                Clock::~Clock()
                0x00000000c000a84c                Clock::~Clock()
                0x00000000c000a876                Clock::timeInSecondsLocal()
                0x00000000c000a8be                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000a917                datetimeToSeconds(datetime_t)
                0x00000000c000aa44                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000aaa4                secondsToDatetime(unsigned long long)
                0x00000000c000abe8                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000ac0d        0x1 
 .text          0x00000000c000ac0e      0x464 hal/device.32
                0x00000000c000ac0e                Device::hibernate()
                0x00000000c000ac10                Device::wake()
                0x00000000c000ac12                Device::detect()
                0x00000000c000ac14                Device::disableLegacy()
                0x00000000c000ac16                Device::powerSaving(PowerSavingLevel)
                0x00000000c000ac18                DriverlessDevice::close(int, int, void*)
                0x00000000c000ac1c                DriverlessDevice::detect()
                0x00000000c000ac1e                DriverlessDevice::open(int, int, void*)
                0x00000000c000ac32                Device::~Device()
                0x00000000c000ac32                Device::~Device()
                0x00000000c000ac40                Device::~Device()
                0x00000000c000ac68                Device::findAndLoadDriver()
                0x00000000c000ac76                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000ac9c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000acdc                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ad06                Device::getParent()
                0x00000000c000ad12                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ad30                Device::addChild(Device*)
                0x00000000c000ad74                Device::removeAllChildren()
                0x00000000c000adba                Device::hibernateAll()
                0x00000000c000adea                Device::wakeAll()
                0x00000000c000ae1a                Device::detectAll()
                0x00000000c000ae4a                Device::disableLegacyAll()
                0x00000000c000ae4c                Device::loadDriversForAll()
                0x00000000c000ae4e                Device::closeAll()
                0x00000000c000ae84                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000aeba                Device::setName(char const*)
                0x00000000c000aec8                Device::Device(char const*)
                0x00000000c000aec8                Device::Device(char const*)
                0x00000000c000afc4                Device::getName()
                0x00000000c000afce                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000afce                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000b004                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000b048                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000b072        0x2 
 .text          0x00000000c000b074       0x86 hal/diskctrl.32
                0x00000000c000b074                HardDiskController::HardDiskController(char const*)
                0x00000000c000b074                HardDiskController::HardDiskController(char const*)
                0x00000000c000b0ac                HardDiskController::~HardDiskController()
                0x00000000c000b0ac                HardDiskController::~HardDiskController()
                0x00000000c000b0d0                HardDiskController::~HardDiskController()
 .text          0x00000000c000b0fa       0xe2 hal/diskphys.32
                0x00000000c000b0fa                PhysicalDisk::eject()
                0x00000000c000b0fe                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b0fe                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b166                PhysicalDisk::startCache()
                0x00000000c000b18e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b18e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b1b2                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000b1dc        0x0 hal/fpu.32
 .text          0x00000000c000b1dc      0x35d hal/intctrl.32
                0x00000000c000b1dc                int_handler
                0x00000000c000b264                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000b2ac                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b3e4                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000b418                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b497                setupINTS()
                0x00000000c000b4f4                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000b539        0x1 
 .text          0x00000000c000b53a      0x78c hal/keybrd.32
                0x00000000c000b53a                startGUI(void*)
                0x00000000c000b5a6                startGUIVESA(void*)
                0x00000000c000b612                sendKeyToTerminal(unsigned char)
                0x00000000c000b6d5                sendKeyboardToken(KeyboardToken)
                0x00000000c000bb15                clearInternalKeybuffer(VgaText*)
                0x00000000c000bb4a                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000bc3c                Keyboard::Keyboard(char const*)
                0x00000000c000bc3c                Keyboard::Keyboard(char const*)
                0x00000000c000bc78                Keyboard::~Keyboard()
                0x00000000c000bc78                Keyboard::~Keyboard()
                0x00000000c000bc9c                Keyboard::~Keyboard()
 .text          0x00000000c000bcc6      0x3ea hal/logidisk.32
                0x00000000c000bcc6                LogicalDisk::close(int, int, void*)
                0x00000000c000bcca                LogicalDisk::~LogicalDisk()
                0x00000000c000bcca                LogicalDisk::~LogicalDisk()
                0x00000000c000bcee                LogicalDisk::~LogicalDisk()
                0x00000000c000bd18                LogicalDisk::open(int, int, void*)
                0x00000000c000bd2c                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000bd64                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000bdaa                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bdaa                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000be60                LogicalDisk::assignDriveLetter()
                0x00000000c000bf16                LogicalDisk::mount()
                0x00000000c000bf5e                LogicalDisk::unmount()
                0x00000000c000bf6e                LogicalDisk::eject()
                0x00000000c000bf82                LogicalDisk::unassignDriveLetter()
                0x00000000c000bfd8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000c044                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000c0b0       0x86 hal/mouse.32
                0x00000000c000c0b0                Mouse::Mouse(char const*)
                0x00000000c000c0b0                Mouse::Mouse(char const*)
                0x00000000c000c0e8                Mouse::~Mouse()
                0x00000000c000c0e8                Mouse::~Mouse()
                0x00000000c000c10c                Mouse::~Mouse()
 .text          0x00000000c000c136      0x339 hal/partition.32
                0x00000000c000c136                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c1de                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000c46f        0x1 
 .text          0x00000000c000c470       0x86 hal/serial.32
                0x00000000c000c470                Serial::Serial(char const*)
                0x00000000c000c470                Serial::Serial(char const*)
                0x00000000c000c4a8                Serial::~Serial()
                0x00000000c000c4a8                Serial::~Serial()
                0x00000000c000c4cc                Serial::~Serial()
 *fill*         0x00000000c000c4f6        0x2 
 .text          0x00000000c000c4f8      0x234 hal/timer.32
                0x00000000c000c4f8                Timer::Timer(char const*)
                0x00000000c000c4f8                Timer::Timer(char const*)
                0x00000000c000c530                Timer::~Timer()
                0x00000000c000c530                Timer::~Timer()
                0x00000000c000c554                Timer::~Timer()
                0x00000000c000c57e                Timer::read()
                0x00000000c000c589                setupTimer(int)
                0x00000000c000c5c4                timerHandler(unsigned int)
 .text          0x00000000c000c72c      0x43e hal/vcache.32
                0x00000000c000c72c                VCache::VCache(PhysicalDisk*)
                0x00000000c000c72c                VCache::VCache(PhysicalDisk*)
                0x00000000c000c894                VCache::invalidateReadBuffer()
                0x00000000c000c8a4                VCache::writeWriteBuffer()
                0x00000000c000c8f0                VCache::~VCache()
                0x00000000c000c8f0                VCache::~VCache()
                0x00000000c000c944                VCache::~VCache()
                0x00000000c000c96c                VCache::write(unsigned long long, int, void*)
                0x00000000c000ca66                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000cb6a      0x4b3 hal/video.32
                0x00000000c000cb6a                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000cbb6                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000cc26                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000cca4                Video::clearScreen(unsigned int)
                0x00000000c000ccd8                Video::putpixel(int, int, unsigned int)
                0x00000000c000cce6                Video::Video(char const*)
                0x00000000c000cce6                Video::Video(char const*)
                0x00000000c000cd1c                Video::~Video()
                0x00000000c000cd1c                Video::~Video()
                0x00000000c000cd40                Video::~Video()
                0x00000000c000cd6a                Video::isMonochrome()
                0x00000000c000cd76                Video::getWidth()
                0x00000000c000cd82                Video::getHeight()
                0x00000000c000cd8e                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000ce4a                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000cfb2                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000d01d        0x3 
 .text          0x00000000c000d020     0x1307 hw/acpi.32
                0x00000000c000d020                ACPI::close(int, int, void*)
                0x00000000c000d0d8                findRSDP()
                0x00000000c000d168                loadACPITables(unsigned char*)
                0x00000000c000d3cc                findRSDT(unsigned char*)
                0x00000000c000d51c                findDataTable(unsigned char*, char*)
                0x00000000c000d594                scanMADT()
                0x00000000c000da68                ACPI::ACPI()
                0x00000000c000da68                ACPI::ACPI()
                0x00000000c000dabc                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000dba4                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000dc6c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000dc74                ACPI::detectPCI()
                0x00000000c000de7c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ded0                ACPI::sleep()
                0x00000000c000deec                ACPI::open(int, int, void*)
 *fill*         0x00000000c000e327        0x1 
 .text          0x00000000c000e328      0xb95 hw/cpu.32
                0x00000000c000e328                CPU::close(int, int, void*)
                0x00000000c000e32c                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000e348                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000e360                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000e3d4                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000e458                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000e486                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000e4b4                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000e4e2                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000e510                CPU::CPU()
                0x00000000c000e510                CPU::CPU()
                0x00000000c000e59e                CPU::displayFeatures()
                0x00000000c000e5a0                CPU::detectFeatures()
                0x00000000c000ec64                CPU::setupSMEP()
                0x00000000c000ec70                CPU::setupUMIP()
                0x00000000c000ec7a                CPU::setupTSC()
                0x00000000c000ec84                CPU::setupLargePages()
                0x00000000c000ec8e                CPU::setupPAT()
                0x00000000c000ecca                CPU::setupMTRR()
                0x00000000c000eccc                CPU::setupGlobalPages()
                0x00000000c000ecd6                CPU::allowUsermodeDataAccess()
                0x00000000c000ece8                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ecfa                CPU::setupSMAP()
                0x00000000c000ed08                CPU::setupFeatures()
                0x00000000c000edd4                CPU::open(int, int, void*)
 *fill*         0x00000000c000eebd        0x1 
 .text          0x00000000c000eebe      0x581 krnl/env.32
                0x00000000c000eebe                EnvVarContainer::getEnv(char const*)
                0x00000000c000eefc                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000efbe                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000efc0                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000f1a6                EnvVarContainer::__loadSystem()
                0x00000000c000f1c0                EnvVarContainer::__loadUser()
                0x00000000c000f1c2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f1c2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f1e4                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f1e4                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f214                Krnl::getEnv(Process*, char const*)
                0x00000000c000f279                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000f293                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000f2b2                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000f2c5                Krnl::deleteEnvSystem(char const*)
                0x00000000c000f2c6                Krnl::deleteEnvUser(char const*)
                0x00000000c000f2c7                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000f2c8                Krnl::newProcessEnv(Process*)
                0x00000000c000f2ea                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000f336                Krnl::loadSystemEnv()
                0x00000000c000f364                Krnl::loadUserEnv()
                0x00000000c000f38a                Krnl::flushEnv()
                0x00000000c000f38b                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c000f3ab                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c000f43f      0x1ff krnl/panic.32
                0x00000000c000f43f                Krnl::panic(char const*)
 .text          0x00000000c000f63e      0x142 krnl/powctrl.32
                0x00000000c000f63e                Krnl::powerThread(void*)
                0x00000000c000f66c                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c000f682                Krnl::userIOReceived()
                0x00000000c000f68d                Krnl::handlePowerButton()
                0x00000000c000f6c2                Krnl::handleSleepButton()
                0x00000000c000f6f7                Krnl::setupPowerManager()
 .text          0x00000000c000f780      0x50e reg/registry.32
                0x00000000c000f780                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c000f8d8                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c000fa2d                Reg::getLine(char*, char*, char*)
                0x00000000c000fa64                Reg::readInt(char*, char*, int*)
                0x00000000c000fb4f                Reg::readString(char*, char*, char*, int)
                0x00000000c000fbd0                Reg::readBool(char*, char*, bool*)
                0x00000000c000fbf5                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c000fc21                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c000fc4d                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c000fc8e       0x36 sys/sc_eject.32
                0x00000000c000fc8e                Sys::eject(regs*)
 .text          0x00000000c000fcc4       0x18 sys/sc_exit.32
                0x00000000c000fcc4                Sys::exit(regs*)
 .text          0x00000000c000fcdc       0x1f sys/sc_getcwd.32
                0x00000000c000fcdc                Sys::getCwd(regs*)
 .text          0x00000000c000fcfb        0xc sys/sc_getpid.32
                0x00000000c000fcfb                Sys::getPID(regs*)
 .text          0x00000000c000fd07       0x1a sys/sc_getramdata.32
                0x00000000c000fd07                Sys::getRAMData(regs*)
 .text          0x00000000c000fd21       0x82 sys/sc_getvgaptr.32
                0x00000000c000fd21                Sys::getVGAPtr(regs*)
 .text          0x00000000c000fda3       0xa8 sys/sc_loaddll.32
                0x00000000c000fda3                Sys::loadDLL(regs*)
 .text          0x00000000c000fe4b       0x68 sys/sc_read.32
                0x00000000c000fe4b                Sys::read(regs*)
 .text          0x00000000c000feb3       0x55 sys/sc_sbrk.32
                0x00000000c000feb3                Sys::sbrk(regs*)
 .text          0x00000000c000ff08       0x1c sys/sc_setcwd.32
                0x00000000c000ff08                Sys::setCwd(regs*)
 .text          0x00000000c000ff24       0x95 sys/sc_settime.32
                0x00000000c000ff24                Sys::setTime(regs*)
 .text          0x00000000c000ffb9       0x4a sys/sc_timezone.32
                0x00000000c000ffb9                Sys::timezone(regs*)
 .text          0x00000000c0010003       0x68 sys/sc_write.32
                0x00000000c0010003                Sys::write(regs*)
 .text          0x00000000c001006b       0x62 sys/sc_wsbe.32
                0x00000000c001006b                Sys::wsbe(regs*)
 .text          0x00000000c00100cd       0x25 sys/sc_yield.32
                0x00000000c00100cd                Sys::yield(regs*)
 .text          0x00000000c00100f2      0xe2c sys/syscalls.32
                0x00000000c00100f2                sysCallSeekDir(regs*)
                0x00000000c00100f7                sysCallTellDir(regs*)
                0x00000000c00100fc                sysCallVerify(regs*)
                0x00000000c0010106                sysCallGetArgc(regs*)
                0x00000000c0010116                sysCallTTYName(regs*)
                0x00000000c001011e                sysFormatDisk(regs*)
                0x00000000c001018b                sysSetDiskVolumeLabel(regs*)
                0x00000000c00101d5                sysGetDiskVolumeLabel(regs*)
                0x00000000c001022a                sysShutdown(regs*)
                0x00000000c0010288                sysCallRealpath(regs*)
                0x00000000c00102cb                sysCallReadDir(regs*)
                0x00000000c001034b                sysCallIsATTY(regs*)
                0x00000000c00103a7                sysCallSeek(regs*)
                0x00000000c0010400                sysCallTell(regs*)
                0x00000000c001046f                sysCallSize(regs*)
                0x00000000c00104e4                sysCallSizeFromFilename(regs*)
                0x00000000c0010597                sysCallClose(regs*)
                0x00000000c00105f7                sysCallOpenDir(regs*)
                0x00000000c001066e                sysCallCloseDir(regs*)
                0x00000000c00106c2                sysCallMakeDir(regs*)
                0x00000000c0010734                sysCallWait(regs*)
                0x00000000c0010751                sysCallNotImpl(regs*)
                0x00000000c001076c                sysPanic(regs*)
                0x00000000c0010787                sysCallRmdir(regs*)
                0x00000000c00107ee                sysCallUnlink(regs*)
                0x00000000c0010855                sysCallGetArgv(regs*)
                0x00000000c00108a2                sysCallUSleep(regs*)
                0x00000000c00108cb                sysCallSpawn(regs*)
                0x00000000c0010934                sysCallGetEnv(regs*)
                0x00000000c00109e3                sysSetFatAttrib(regs*)
                0x00000000c0010a5a                sysPipe(regs*)
                0x00000000c0010a9f                sysGetUnixTime(regs*)
                0x00000000c0010ab3                string_ends_with(char const*, char const*)
                0x00000000c0010afd                sysCallOpen(regs*)
                0x00000000c0010cf1                Sys::loadSyscalls()
                0x00000000c0010edc                Sys::systemCall(regs*, void*)
 .text          0x00000000c0010f1e     0x11e5 thr/elf.32
                0x00000000c0010f1e                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00111aa                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00113c0                Thr::runtimeReferenceHelper()
                0x00000000c00113d3                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0011422                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00116e0                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0011e16                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0011e48                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0011e7f                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0011e99                Thr::loadDLL(char const*, bool)
                0x00000000c00120ca                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0012103        0x1 
 .text          0x00000000c0012104     0x12c5 thr/prcssthr.32
                0x00000000c0012104                userModeEntryPoint(void*)
                0x00000000c001212c                changeTSS
                0x00000000c001215c                switchToThread(ThreadControlBlock*)
                0x00000000c0012210                Process::addArgs(char**)
                0x00000000c0012270                Process::Process(char const*, Process*, char**)
                0x00000000c0012270                Process::Process(char const*, Process*, char**)
                0x00000000c0012460                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0012460                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001261c                taskStartupFunction
                0x00000000c0012628                Semaphore::Semaphore(int)
                0x00000000c0012628                Semaphore::Semaphore(int)
                0x00000000c0012658                Mutex::Mutex()
                0x00000000c0012658                Mutex::Mutex()
                0x00000000c001266c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0012764                Process::createUserThread()
                0x00000000c0012784                setupMultitasking(void (*)())
                0x00000000c001288c                schedule()
                0x00000000c001291c                Semaphore::tryAcquire()
                0x00000000c00129e8                Semaphore::assertLocked(char const*)
                0x00000000c0012a60                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0012a88                blockTask(TaskState)
                0x00000000c0012ab8                waitTask(int, int*, int)
                0x00000000c0012afc                milliTenthSleepUntil(unsigned int)
                0x00000000c0012b8c                milliTenthSleep(unsigned int)
                0x00000000c0012b9c                sleep(unsigned int)
                0x00000000c0012bb8                Semaphore::acquire()
                0x00000000c0012c74                taskReturned
                0x00000000c0012cb0                Thr::processFromPID(int)
                0x00000000c0012d50                unblockTask(ThreadControlBlock*)
                0x00000000c0012df4                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00130c0                cleanerTaskFunction(void*)
                0x00000000c00131b0                terminateTask(int)
                0x00000000c001327c                Thr::terminateFromIRQ(int)
                0x00000000c001328c                Semaphore::release()
 .text          0x00000000c00133c9      0xb93 vm86/vm8086.32
                0x00000000c00133c9                Vm::inbv(unsigned short)
                0x00000000c00133dc                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0013412                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0013422                Vm::getSegment(unsigned int)
                0x00000000c001342a                Vm::getOffset(unsigned int)
                0x00000000c001342f                Vm::mainloop2()
                0x00000000c0013469                Vm::mainVm8086Loop(void*)
                0x00000000c0013479                Vm::mainloop3(unsigned long)
                0x00000000c001349f                Vm::initialise8086()
                0x00000000c00134e2                Vm::finish8086()
                0x00000000c0013543                Vm::getOutput8086(unsigned char*)
                0x00000000c0013568                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0013621                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0013789                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0013813                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0013824                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0013836                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0013847                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001385c                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0013872                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0013887                Vm::faultHandler(regs*)
 .text          0x00000000c0013f5c      0x8e9 arch/i386/hal.32
                0x00000000c0013f5c                noCopro(unsigned long)
                0x00000000c0013f5d                nmiHandler(regs*, void*)
                0x00000000c0013f76                doubleFault(regs*, void*)
                0x00000000c0013f8f                displayDebugInfo(regs*)
                0x00000000c00142b0                displayProgramFault(char const*)
                0x00000000c00142fc                gpFault(regs*, void*)
                0x00000000c0014361                pgFault(regs*, void*)
                0x00000000c00143e7                otherISRHandler(regs*, void*)
                0x00000000c001441b                opcodeFault(regs*, void*)
                0x00000000c001449b                i386SaveCoprocessor(void*)
                0x00000000c00144af                i386LoadCoprocessor(void*)
                0x00000000c00144c3                x87EmulHandler(regs*, void*)
                0x00000000c0014560                HalInitialiseCoprocessor()
                0x00000000c001460e                HalPanic(char const*)
                0x00000000c0014613                HalQueryPerformanceCounter()
                0x00000000c001462e                HalInitialise()
                0x00000000c00147d4                HalMakeBeep(int)
                0x00000000c001480e                HalGetRand()
                0x00000000c0014811                HalEndOfInterrupt(int)
                0x00000000c0014842                HalRestart()
                0x00000000c0014843                HalShutdown()
                0x00000000c0014844                HalSleep()
 *fill*         0x00000000c0014845        0x3 
 .text          0x00000000c0014848      0x2f4 arch/i386/pic.32
                0x00000000c0014848                picIoWait()
                0x00000000c0014850                picDisable()
                0x00000000c0014884                picGetIRQReg(int)
                0x00000000c0014908                picOpen()
                0x00000000c0014a98                picEOI(int)
 .text          0x00000000c0014b3c      0x64d arch/i386/rtc.32
                0x00000000c0014b3c                RTC::open(int, int, void*)
                0x00000000c0014b40                RTC::close(int, int, void*)
                0x00000000c0014b44                RTC::timeInSecondsUTC()
                0x00000000c0014b56                RTC::timeInDatetimeUTC()
                0x00000000c0014b7c                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0014bba                RTC::~RTC()
                0x00000000c0014bba                RTC::~RTC()
                0x00000000c0014bde                RTC::~RTC()
                0x00000000c0014c08                RTC::get_update_in_progress_flag()
                0x00000000c0014c20                RTC::completeRTCRefresh()
                0x00000000c0014ed8                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001508b                rtcIRQHandler(regs*, void*)
                0x00000000c00150d0                RTC::RTC()
                0x00000000c00150d0                RTC::RTC()
 *fill*         0x00000000c0015189        0x3 
 .text          0x00000000c001518c      0x203 arch/i386/vga.32
                0x00000000c001518c                HalConsoleScroll(int, int)
                0x00000000c0015294                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0015300                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c001538f        0x1 
 .text          0x00000000c0015390     0x13e7 fs/fat/vfslink.32
                0x00000000c0015390                FAT::getName()
                0x00000000c0015398                FAT::tell(void*, unsigned long long*)
                0x00000000c00153d4                FAT::stat(void*, unsigned long long*)
                0x00000000c0015410                FAT::~FAT()
                0x00000000c0015410                FAT::~FAT()
                0x00000000c0015434                FAT::~FAT()
                0x00000000c001545c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0015500                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00155c4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0015798                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00159b0                FAT::allocateSwapfile(char const*, int)
                0x00000000c0015b70                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0015cdc                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0015d3c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0015d9c                FAT::close(void*)
                0x00000000c0015df0                FAT::closeDir(void*)
                0x00000000c0015e44                FAT::seek(void*, unsigned long long)
                0x00000000c0015e9c                fatWrapperReadDisk
                0x00000000c0015ee0                fatWrapperWriteDisk
                0x00000000c0015f24                fatWrapperIoctl
                0x00000000c0016040                FAT::FAT()
                0x00000000c0016040                FAT::FAT()
                0x00000000c0016094                FAT::fixFilepath(char*)
                0x00000000c00160d0                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0016208                FAT::openDir(char const*, void**)
                0x00000000c00162b8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00163b0                FAT::unlink(char const*)
                0x00000000c0016430                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00165bc                FAT::rename(char const*, char const*)
                0x00000000c0016688                FAT::mkdir(char const*)
                0x00000000c0016708                FAT::exists(char const*)
 *fill*         0x00000000c0016777        0x1 
 .text          0x00000000c0016778      0xba5 fs/iso9660/vfslink.32
                0x00000000c0016778                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001677e                ISO9660::seek(void*, unsigned long long)
                0x00000000c00167ae                ISO9660::tell(void*, unsigned long long*)
                0x00000000c00167d2                ISO9660::getName()
                0x00000000c00167d8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c00167fc                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0016802                ISO9660::unlink(char const*)
                0x00000000c0016808                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001680e                ISO9660::rename(char const*, char const*)
                0x00000000c0016814                ISO9660::mkdir(char const*)
                0x00000000c001681a                ISO9660::close(void*)
                0x00000000c001683c                ISO9660::closeDir(void*)
                0x00000000c001685e                ISO9660::~ISO9660()
                0x00000000c001685e                ISO9660::~ISO9660()
                0x00000000c0016882                ISO9660::~ISO9660()
                0x00000000c00168a9                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c00168eb                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0016966                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c00169c6                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0016bca                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016e42                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0016e96                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001706c                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c00170fa                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00171a8                ISO9660::exists(char const*)
                0x00000000c00171cc                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017260                ISO9660::openDir(char const*, void**)
                0x00000000c00172fa                ISO9660::ISO9660()
                0x00000000c00172fa                ISO9660::ISO9660()
 *fill*         0x00000000c001731d        0x1 
 .text          0x00000000c001731e      0x26c hal/sound/sndcard.32
                0x00000000c001731e                SoundCard::beginPlayback()
                0x00000000c001732c                SoundCard::stopPlayback()
                0x00000000c001733a                SoundCard::SoundCard(char const*)
                0x00000000c001733a                SoundCard::SoundCard(char const*)
                0x00000000c00173d8                SoundCard::~SoundCard()
                0x00000000c00173d8                SoundCard::~SoundCard()
                0x00000000c00173fc                SoundCard::~SoundCard()
                0x00000000c0017426                SoundCard::configureRates(int, int, int)
                0x00000000c0017456                SoundCard::getSamples16(int, short*)
                0x00000000c00174b2                SoundCard::getSamples32(int, int*)
                0x00000000c0017538                SoundCard::addChannel(SoundPort*)
                0x00000000c0017576                SoundCard::removeChannel(int)
 *fill*         0x00000000c001758a        0x2 
 .text          0x00000000c001758c      0x377 hal/sound/sndport.32
                0x00000000c001758c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001758c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017618                SoundPort::~SoundPort()
                0x00000000c0017618                SoundPort::~SoundPort()
                0x00000000c001764c                SoundPort::unpause()
                0x00000000c0017658                SoundPort::pause()
                0x00000000c0017664                SoundPort::getBufferUsed()
                0x00000000c001766c                SoundPort::getBufferSize()
                0x00000000c0017674                SoundPort::buffer16(short*, int)
                0x00000000c0017700                SoundPort::buffer32(int*, int)
                0x00000000c0017788                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001784c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0017903        0x0 hw/bus/isa.32
 *fill*         0x00000000c0017903        0x1 
 .text          0x00000000c0017904      0xb49 hw/bus/pci.32
                0x00000000c0017904                PCI::open(int, int, void*)
                0x00000000c0017922                PCI::close(int, int, void*)
                0x00000000c0017926                PCI::PCI()
                0x00000000c0017926                PCI::PCI()
                0x00000000c00179c0                PCI::readBAR8(unsigned int, int)
                0x00000000c00179dc                PCI::readBAR16(unsigned int, int)
                0x00000000c00179fa                PCI::readBAR32(unsigned int, int)
                0x00000000c0017a16                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0017a36                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0017a58                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0017a78                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017ae6                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017b8e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0017bb2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0017bda                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0017c24                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0017c4c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0017c70                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0017c94                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0017cbc                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017d20                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0017e08                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018082                PCI::checkBus(unsigned char)
                0x00000000c00180a8                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001821a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001838e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c00183fa                PCI::detect()
 *fill*         0x00000000c001844d        0x1 
 .text          0x00000000c001844e      0xb5a hw/diskctrl/ide.32
                0x00000000c001844e                IDE::close(int, int, void*)
                0x00000000c0018452                IDE::IDE()
                0x00000000c0018452                IDE::IDE()
                0x00000000c0018486                IDE::prepareInterrupt(unsigned char)
                0x00000000c0018498                selectDrive(unsigned char, unsigned char)
                0x00000000c001849a                IDE::getBase(unsigned char)
                0x00000000c00184ac                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001856c                IDE::read(unsigned char, unsigned char)
                0x00000000c001861a                IDE::waitInterrupt(unsigned char)
                0x00000000c0018682                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001869e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00186ba                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0018700                IDE::open(int, int, void*)
                0x00000000c0018b0e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0018bda                IDE::detect()
                0x00000000c0018e9a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0018f4a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0018fa8      0x32a hw/diskctrl/satabus.32
                0x00000000c0018fa8                SATABus::close(int, int, void*)
                0x00000000c0018fac                SATABus::detect()
                0x00000000c0018fae                SATABus::SATABus()
                0x00000000c0018fae                SATABus::SATABus()
                0x00000000c0019034                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019066                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c00190ae                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c00190ce                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c00190f8                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019208                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c00192b2                SATABus::open(int, int, void*)
 .text          0x00000000c00192d2      0x5f4 hw/diskphys/ata.32
                0x00000000c00192d2                ATA::close(int, int, void*)
                0x00000000c00192f6                ATA::powerSaving(PowerSavingLevel)
                0x00000000c00192f8                ATA::ATA()
                0x00000000c00192f8                ATA::ATA()
                0x00000000c0019326                ATA::flush(bool)
                0x00000000c0019370                ATA::readyForCommand()
                0x00000000c00193bc                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c0019738                ATA::read(unsigned long long, int, void*)
                0x00000000c0019784                ATA::write(unsigned long long, int, void*)
                0x00000000c00197d0                ATA::detectCHS()
                0x00000000c00197fa                ATA::open(int, int, void*)
 .text          0x00000000c00198c6      0x60e hw/diskphys/atapi.32
                0x00000000c00198c6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c00198cc                ATAPI::close(int, int, void*)
                0x00000000c00198f0                ATAPI::ATAPI()
                0x00000000c00198f0                ATAPI::ATAPI()
                0x00000000c001991e                ATAPI::readyForCommand()
                0x00000000c0019970                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0019c30                ATAPI::diskRemoved()
                0x00000000c0019c6a                ATAPI::eject()
                0x00000000c0019cb2                ATAPI::diskInserted()
                0x00000000c0019cbe                ATAPI::detectMedia()
                0x00000000c0019d7a                ATAPI::open(int, int, void*)
                0x00000000c0019e5a                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0019ed4      0x402 hw/diskphys/sata.32
                0x00000000c0019ed4                SATA::close(int, int, void*)
                0x00000000c0019ef8                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0019efa                SATA::open(int, int, void*)
                0x00000000c0019fa4                SATA::SATA()
                0x00000000c0019fa4                SATA::SATA()
                0x00000000c0019fd2                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a21e                SATA::read(unsigned long long, int, void*)
                0x00000000c001a26a                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001a2d6      0x5b9 hw/diskphys/satapi.32
                0x00000000c001a2d6                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001a2dc                SATAPI::close(int, int, void*)
                0x00000000c001a300                SATAPI::open(int, int, void*)
                0x00000000c001a3f8                SATAPI::SATAPI()
                0x00000000c001a3f8                SATAPI::SATAPI()
                0x00000000c001a426                SATAPI::diskRemoved()
                0x00000000c001a428                SATAPI::diskInserted()
                0x00000000c001a444                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001a720                SATAPI::eject()
                0x00000000c001a75c                SATAPI::read(unsigned long long, int, void*)
                0x00000000c001a88e                SATAPI::detectMedia()
 *fill*         0x00000000c001a88f        0x1 
 .text          0x00000000c001a890      0x455 hw/intctrl/apic.32
                0x00000000c001a890                IOAPIC::close(int, int, void*)
                0x00000000c001a896                apicGetBase()
                0x00000000c001a8d8                IOAPIC::IOAPIC()
                0x00000000c001a8d8                IOAPIC::IOAPIC()
                0x00000000c001a900                apicOpen()
                0x00000000c001aa66                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001aa98                IOAPIC::read(int)
                0x00000000c001aac0                IOAPIC::open(int, int, void*)
                0x00000000c001abb4                IOAPIC::write(int, int)
                0x00000000c001abe0                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ace5        0x3 
 .text          0x00000000c001ace8       0xf0 hw/timer/apictimer.32
                0x00000000c001ace8                APICTimer::close(int, int, void*)
                0x00000000c001acf0                apicTimerHandler(regs*, void*)
                0x00000000c001ad18                APICTimer::open(int, int, void*)
                0x00000000c001ad88                APICTimer::write(int)
                0x00000000c001adb0                APICTimer::APICTimer()
                0x00000000c001adb0                APICTimer::APICTimer()
 .text          0x00000000c001add8      0x1aa hw/timer/pit.32
                0x00000000c001add8                PIT::write(int)
                0x00000000c001ae5c                pitHandler(regs*, void*)
                0x00000000c001ae80                PIT::open(int, int, void*)
                0x00000000c001aed0                PIT::close(int, int, void*)
                0x00000000c001af00                PIT::PIT()
                0x00000000c001af00                PIT::PIT()
 *fill*         0x00000000c001af82        0xe 
 .text          0x00000000c001af90       0x83 arch/i386/avx.32
                0x00000000c001af90                avxDetect
                0x00000000c001afba                avxSave
                0x00000000c001afcb                avxLoad
                0x00000000c001afdc                avxInit
                0x00000000c001affe                avxClose
                0x00000000c001afff                wouldSheSayYes
 *fill*         0x00000000c001b013        0xd 
 .text          0x00000000c001b020      0x1d6 arch/i386/interrupt.32
                0x00000000c001b020                isr0
                0x00000000c001b030                isr1
                0x00000000c001b03a                isr2
                0x00000000c001b044                isr3
                0x00000000c001b04e                isr4
                0x00000000c001b058                isr5
                0x00000000c001b062                isr6
                0x00000000c001b06c                isr7
                0x00000000c001b076                isr8
                0x00000000c001b07e                isr9
                0x00000000c001b088                isr10
                0x00000000c001b090                isr11
                0x00000000c001b098                isr12
                0x00000000c001b0a0                isr13
                0x00000000c001b0a8                isr14
                0x00000000c001b0b0                isr15
                0x00000000c001b0ba                isr16
                0x00000000c001b0c4                isr17
                0x00000000c001b0ce                isr18
                0x00000000c001b0d8                irq3
                0x00000000c001b0e2                irq4
                0x00000000c001b0ec                irq5
                0x00000000c001b0f6                irq6
                0x00000000c001b100                irq7
                0x00000000c001b10a                irq8
                0x00000000c001b114                irq9
                0x00000000c001b11e                irq10
                0x00000000c001b128                irq11
                0x00000000c001b132                irq12
                0x00000000c001b13c                irq13
                0x00000000c001b146                irq14
                0x00000000c001b150                irq15
                0x00000000c001b15a                irq1
                0x00000000c001b161                irq2
                0x00000000c001b168                isr96
                0x00000000c001b16f                irq0
                0x00000000c001b174                int_common_stub
                0x00000000c001b174                syscall_common_stub
                0x00000000c001b1a6                irq16
                0x00000000c001b1b0                irq17
                0x00000000c001b1ba                irq18
                0x00000000c001b1c4                irq19
                0x00000000c001b1ce                irq20
                0x00000000c001b1d8                irq21
                0x00000000c001b1e2                irq22
                0x00000000c001b1ec                irq23
 *fill*         0x00000000c001b1f6        0xa 
 .text          0x00000000c001b200       0x10 arch/i386/rdrand.32
                0x00000000c001b200                i386GetRDRAND
 .text          0x00000000c001b210       0x39 arch/i386/sse.32
                0x00000000c001b210                absolutelyNoChanceInHell
                0x00000000c001b210                sseDetect
                0x00000000c001b228                sseSave
                0x00000000c001b230                sseLoad
                0x00000000c001b238                sseInit
                0x00000000c001b248                sseClose
 *fill*         0x00000000c001b249        0x7 
 .text          0x00000000c001b250       0x49 arch/i386/x87.32
                0x00000000c001b256                x87Detect
                0x00000000c001b271                x87Save
                0x00000000c001b278                x87Load
                0x00000000c001b27f                x87Init
                0x00000000c001b298                x87Close
 *fill*         0x00000000c001b299        0x3 
 .text          0x00000000c001b29c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001b2c1        0x0 crtn.32
 *fill*         0x00000000c001b2c1        0x3 
 .text          0x00000000c001b2c4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001b2c4                __divdi3
 *fill*         0x00000000c001b40f        0x1 
 .text          0x00000000c001b410      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001b410                __moddi3
 *fill*         0x00000000c001b58e        0x2 
 .text          0x00000000c001b590       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001b590                __udivdi3
 *fill*         0x00000000c001b68f        0x1 
 .text          0x00000000c001b690      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001b690                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001b7b0        0x0
 .iplt          0x00000000c001b7b0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001b7aa        0xf
 .init          0x00000000c001b7aa        0x3 crti.32
                0x00000000c001b7aa                _init
 .init          0x00000000c001b7ad        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001b7b2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001b7b7        0x2 crtn.32

.fini           0x00000000c001b7b9        0xa
 .fini          0x00000000c001b7b9        0x3 crti.32
                0x00000000c001b7b9                _fini
 .fini          0x00000000c001b7bc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001b7c1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001b7c4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001b7c4       0x23 core/computer.32
                0x00000000c001b7c4                Computer::~Computer()
                0x00000000c001b7c4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001b7e8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001b7e8       0x2a core/computer.32
                0x00000000c001b7e8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001b812       0x21
 .text._Z10idleCommonv
                0x00000000c001b812       0x21 core/idle.32
                0x00000000c001b812                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001b834        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001b834        0x2 core/unixfile.32
                0x00000000c001b834                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001b834                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001b836       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001b836       0x42 core/unixfile.32
                0x00000000c001b836                LinkedList<UnixFile>::LinkedList()
                0x00000000c001b836                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001b878       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001b878       0xd3 core/unixfile.32
                0x00000000c001b878                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001b94c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001b94c        0x7 core/unixfile.32
                0x00000000c001b94c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001b954       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001b954       0xa1 core/unixfile.32
                0x00000000c001b954                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001b9f6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001b9f6        0x8 core/unixfile.32
                0x00000000c001b9f6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001b9fe       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001b9fe       0x1a hal/device.32
                0x00000000c001b9fe                DriverlessDevice::~DriverlessDevice()
                0x00000000c001b9fe                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ba18       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ba18       0x2a hal/device.32
                0x00000000c001ba18                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ba42       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ba42       0xdc hal/device.32
                0x00000000c001ba42                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001bb1e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001bb1e       0x42 hal/device.32
                0x00000000c001bb1e                LinkedList<Device>::LinkedList()
                0x00000000c001bb1e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001bb60       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001bb60       0x1c hal/timer.32
                0x00000000c001bb60                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001bb7c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001bb7c        0x7 hal/timer.32
                0x00000000c001bb7c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001bb84       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001bb84       0xb8 hal/timer.32
                0x00000000c001bb84                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001bc3c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001bc3c       0xda hal/timer.32
                0x00000000c001bc3c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001bd18       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001bd18       0x23 hw/acpi.32
                0x00000000c001bd18                ACPI::~ACPI()
                0x00000000c001bd18                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001bd3c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001bd3c       0x2a hw/acpi.32
                0x00000000c001bd3c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001bd68        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001bd68        0x2 hw/acpi.32
                0x00000000c001bd68                LinkedList<Device>::~LinkedList()
                0x00000000c001bd68                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001bd6c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001bd6c       0x1c hw/acpi.32
                0x00000000c001bd6c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001bd88        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001bd88        0x7 hw/acpi.32
                0x00000000c001bd88                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001bd90       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001bd90       0xb8 hw/acpi.32
                0x00000000c001bd90                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001be48       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001be48       0x23 hw/cpu.32
                0x00000000c001be48                CPU::~CPU()
                0x00000000c001be48                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001be6c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001be6c       0x2a hw/cpu.32
                0x00000000c001be6c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001be98        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001be98        0x2 thr/prcssthr.32
                0x00000000c001be98                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001be98                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001be9c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001be9c       0x49 thr/prcssthr.32
                0x00000000c001be9c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001be9c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001bee8       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001bee8       0x42 thr/prcssthr.32
                0x00000000c001bee8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001bee8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001bf2c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001bf2c        0x8 thr/prcssthr.32
                0x00000000c001bf2c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001bf34       0x23
 .text._ZN3PCID2Ev
                0x00000000c001bf34       0x23 hw/bus/pci.32
                0x00000000c001bf34                PCI::~PCI()
                0x00000000c001bf34                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001bf58       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001bf58       0x2a hw/bus/pci.32
                0x00000000c001bf58                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001bf82       0x23
 .text._ZN3IDED2Ev
                0x00000000c001bf82       0x23 hw/diskctrl/ide.32
                0x00000000c001bf82                IDE::~IDE()
                0x00000000c001bf82                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001bfa6       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001bfa6       0x2a hw/diskctrl/ide.32
                0x00000000c001bfa6                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001bfd0       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001bfd0       0x23 hw/diskctrl/satabus.32
                0x00000000c001bfd0                SATABus::~SATABus()
                0x00000000c001bfd0                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001bff4       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001bff4       0x2a hw/diskctrl/satabus.32
                0x00000000c001bff4                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001c01e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001c01e       0x23 hw/diskphys/ata.32
                0x00000000c001c01e                ATA::~ATA()
                0x00000000c001c01e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001c042       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001c042       0x2a hw/diskphys/ata.32
                0x00000000c001c042                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001c06c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001c06c       0x23 hw/diskphys/atapi.32
                0x00000000c001c06c                ATAPI::~ATAPI()
                0x00000000c001c06c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001c090       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001c090       0x2a hw/diskphys/atapi.32
                0x00000000c001c090                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001c0ba       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001c0ba       0x23 hw/diskphys/sata.32
                0x00000000c001c0ba                SATA::~SATA()
                0x00000000c001c0ba                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001c0de       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001c0de       0x2a hw/diskphys/sata.32
                0x00000000c001c0de                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001c108       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001c108       0x23 hw/diskphys/satapi.32
                0x00000000c001c108                SATAPI::~SATAPI()
                0x00000000c001c108                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001c12c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001c12c       0x2a hw/diskphys/satapi.32
                0x00000000c001c12c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001c156       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001c156       0x23 hw/intctrl/apic.32
                0x00000000c001c156                IOAPIC::~IOAPIC()
                0x00000000c001c156                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001c17a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001c17a       0x2a hw/intctrl/apic.32
                0x00000000c001c17a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001c1a4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001c1a4       0x23 hw/timer/apictimer.32
                0x00000000c001c1a4                APICTimer::~APICTimer()
                0x00000000c001c1a4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001c1c8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001c1c8       0x2a hw/timer/apictimer.32
                0x00000000c001c1c8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001c1f4       0x23
 .text._ZN3PITD2Ev
                0x00000000c001c1f4       0x23 hw/timer/pit.32
                0x00000000c001c1f4                PIT::~PIT()
                0x00000000c001c1f4                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001c218       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001c218       0x2a hw/timer/pit.32
                0x00000000c001c218                PIT::~PIT()

.rodata         0x00000000c001c242     0x28ee
                0x00000000c001c242                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001c242        0x2 
 .ctors         0x00000000c001c244        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001c248        0x4 core/unixfile.32
 .ctors         0x00000000c001c24c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001c250        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c254                end_ctors = .
                0x00000000c001c254                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001c254        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001c258        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c258                __DTOR_END__
                0x00000000c001c25c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001c25c        0x4 
 .rodata        0x00000000c001c260      0x101 acpica/utclib.32
                0x00000000c001c260                AcpiGbl_Ctypes
 *fill*         0x00000000c001c361        0x3 
 .rodata        0x00000000c001c364       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001c37c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001c3c6       0x1a 
 .rodata        0x00000000c001c3e0       0xed fs/fat/ff.32
 *fill*         0x00000000c001c4cd       0x13 
 .rodata        0x00000000c001c4e0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001c8e0       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001c929      0x115 core/computer.32
 *fill*         0x00000000c001ca3e        0x2 
 .rodata.str1.4
                0x00000000c001ca40       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001caa8       0x2c core/computer.32
                0x00000000c001caa8                vtable for Computer
 .rodata.str1.4
                0x00000000c001cad4       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001cb04        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001cb10       0x17 core/main.32
 *fill*         0x00000000c001cb27        0x1 
 .rodata.str1.4
                0x00000000c001cb28       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001cbcd       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001cc25       0x39 core/pipe.32
 *fill*         0x00000000c001cc5e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001cc60       0x1c core/pipe.32
                0x00000000c001cc60                vtable for Pipe
 .rodata.str1.1
                0x00000000c001cc7c       0x69 core/terminal.32
 *fill*         0x00000000c001cce5        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001cce8       0x1c core/terminal.32
                0x00000000c001cce8                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001cd04       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001cd26       0x15 core/unixfile.32
 *fill*         0x00000000c001cd3b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001cd3c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001cd87        0x8 core/unixfile.32
 *fill*         0x00000000c001cd8f        0x1 
 .rodata.str1.4
                0x00000000c001cd90       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001cdb0       0x1c core/unixfile.32
                0x00000000c001cdb0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001cdcc       0x1c core/unixfile.32
                0x00000000c001cdcc                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001cde8      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001cf4f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d056       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001d089       0x11 dbg/kconsole.32
 *fill*         0x00000000c001d089        0x3 
 .rodata        0x00000000c001d08c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001d1dc       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001d1dc       0x68 fs/vfs.32
                0x00000000c001d1dc                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001d244       0x1c fs/vfs.32
                0x00000000c001d244                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001d260       0x1c fs/vfs.32
                0x00000000c001d260                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001d27c       0x2c hal/bus.32
                0x00000000c001d27c                vtable for Bus
 .rodata.str1.1
                0x00000000c001d2a8       0x1e hal/clock.32
 *fill*         0x00000000c001d2c6        0x2 
 .rodata._ZTV5Clock
                0x00000000c001d2c8       0x3c hal/clock.32
                0x00000000c001d2c8                vtable for Clock
 *fill*         0x00000000c001d304       0x1c 
 .rodata        0x00000000c001d320       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001d350       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001d3a8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001d3a8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001d3a8       0x2c hal/device.32
                0x00000000c001d3a8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001d3d4       0x2c hal/device.32
                0x00000000c001d3d4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001d400       0x2c hal/diskctrl.32
                0x00000000c001d400                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001d42c       0x38 hal/diskphys.32
                0x00000000c001d42c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001d464       0x3e hal/intctrl.32
 *fill*         0x00000000c001d4a2        0x2 
 .rodata.str1.4
                0x00000000c001d4a4       0x5d hal/intctrl.32
 .rodata        0x00000000c001d501       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001d554       0x34 hal/keybrd.32
                0x00000000c001d554                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001d588       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001d5cc       0x2c hal/logidisk.32
                0x00000000c001d5cc                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001d5f8       0x2c hal/mouse.32
                0x00000000c001d5f8                vtable for Mouse
 .rodata.str1.1
                0x00000000c001d624        0xb hal/partition.32
 *fill*         0x00000000c001d62f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001d630       0x44 hal/serial.32
                0x00000000c001d630                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001d674       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001d674        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001d674       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001d674       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001d674       0x30 hal/timer.32
                0x00000000c001d674                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001d6a4       0x10 hal/vcache.32
                0x00000000c001d6a4                vtable for VCache
 .rodata.str1.1
                0x00000000c001d6b4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001d71c       0x48 hal/video.32
                0x00000000c001d71c                vtable for Video
 .rodata.str1.4
                0x00000000c001d764       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001d7ff      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001d93b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001d93b        0x8 hw/acpi.32
 *fill*         0x00000000c001d93b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001d93c       0x2c hw/acpi.32
                0x00000000c001d93c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001d968      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001dad5        0x3 
 .rodata._ZTV3CPU
                0x00000000c001dad8       0x2c hw/cpu.32
                0x00000000c001dad8                vtable for CPU
 .rodata.str1.1
                0x00000000c001db04       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001db40       0x52 krnl/panic.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001db92        0x2 
 .rodata.str1.4
                0x00000000c001db94      0x117 krnl/panic.32
 .rodata.str1.1
                0x00000000c001dcab       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001dcf0        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001dcfa       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001dd4e       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001dd7a       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001ddc2      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001df8e       0x57 thr/prcssthr.32
 *fill*         0x00000000c001dfe5        0x3 
 .rodata.str1.4
                0x00000000c001dfe8      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e0f4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e0f4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e0f4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e0f4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001e0f4       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001e194       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001e1c4      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001e2d2        0x2 
 .rodata.str1.4
                0x00000000c001e2d4       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001e347       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001e35c       0x3c arch/i386/rtc.32
                0x00000000c001e35c                vtable for RTC
 .rodata.str1.1
                0x00000000c001e398       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001e3d9        0x3 
 .rodata._ZTV3FAT
                0x00000000c001e3dc       0x68 fs/fat/vfslink.32
                0x00000000c001e3dc                vtable for FAT
 .rodata.str1.1
                0x00000000c001e444       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c001e45f        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c001e460       0x68 fs/iso9660/vfslink.32
                0x00000000c001e460                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001e4c8       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001e50c       0x34 hal/sound/sndcard.32
                0x00000000c001e50c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001e540       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001e57f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001e5b7       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001e658       0x2c hw/bus/pci.32
                0x00000000c001e658                vtable for PCI
 .rodata.str1.1
                0x00000000c001e684       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001e70b        0x1 
 .rodata._ZTV3IDE
                0x00000000c001e70c       0x2c hw/diskctrl/ide.32
                0x00000000c001e70c                vtable for IDE
 .rodata.str1.4
                0x00000000c001e738       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001e75c       0x2c hw/diskctrl/satabus.32
                0x00000000c001e75c                vtable for SATABus
 .rodata.str1.1
                0x00000000c001e788       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001e79a        0x2 
 .rodata._ZTV3ATA
                0x00000000c001e79c       0x38 hw/diskphys/ata.32
                0x00000000c001e79c                vtable for ATA
 .rodata.str1.1
                0x00000000c001e7d4        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001e7e1        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001e7e4       0x38 hw/diskphys/atapi.32
                0x00000000c001e7e4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001e81c       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001e898       0x38 hw/diskphys/sata.32
                0x00000000c001e898                vtable for SATA
 .rodata.str1.1
                0x00000000c001e8d0      0x158 hw/diskphys/satapi.32
                                        0x165 (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001ea28       0x38 hw/diskphys/satapi.32
                0x00000000c001ea28                vtable for SATAPI
 .rodata        0x00000000c001ea60        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001ea68       0x2c hw/intctrl/apic.32
                0x00000000c001ea68                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001ea94       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001eaaf        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001eab0       0x30 hw/timer/apictimer.32
                0x00000000c001eab0                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001eae0       0x1d hw/timer/pit.32
 *fill*         0x00000000c001eafd        0x3 
 .rodata._ZTV3PIT
                0x00000000c001eb00       0x30 hw/timer/pit.32
                0x00000000c001eb00                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001eb30      0x265
 *(.data)
 .data          0x00000000c001eb30        0x0 crti.32
 .data          0x00000000c001eb30        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001eb30                __dso_handle
 .data          0x00000000c001eb34        0x0 acpica/utclib.32
 .data          0x00000000c001eb34        0x0 core/malloc.32
 .data          0x00000000c001eb34        0x0 libk/string.32
 .data          0x00000000c001eb34        0x0 fs/fat/diskio.32
 .data          0x00000000c001eb34        0x0 fs/fat/ff.32
 .data          0x00000000c001eb34        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001eb34        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001eb34        0x0 compat/inlines.32
 .data          0x00000000c001eb34        0x0 compat/resolve.32
 .data          0x00000000c001eb34        0x0 core/computer.32
 .data          0x00000000c001eb34        0x0 core/gdt.32
 .data          0x00000000c001eb34        0x0 core/idle.32
 .data          0x00000000c001eb34        0x0 core/idt.32
 .data          0x00000000c001eb34        0x4 core/kheap.32
 *fill*         0x00000000c001eb38        0x8 
 .data          0x00000000c001eb40      0x142 core/main.32
                0x00000000c001eb40                titleScreen
 *fill*         0x00000000c001ec82        0x2 
 .data          0x00000000c001ec84        0x4 core/physmgr.32
                0x00000000c001ec84                Phys::bitmap
 .data          0x00000000c001ec88        0x0 core/pipe.32
 *fill*         0x00000000c001ec88       0x18 
 .data          0x00000000c001eca0       0x60 core/terminal.32
                0x00000000c001eca0                VgaText::hiddenOut
                0x00000000c001ecc0                ansiToVGAMappings
 .data          0x00000000c001ed00        0x0 core/tss.32
 .data          0x00000000c001ed00        0x4 core/unixfile.32
                0x00000000c001ed00                UnixFile::nextFd
 .data          0x00000000c001ed04       0x15 core/virtmgr.32
                0x00000000c001ed04                Virt::pageAllocPtr
                0x00000000c001ed08                Virt::bitmap
                0x00000000c001ed0c                Virt::swapfileSectorsPerPage
                0x00000000c001ed10                Virt::swapfileLength
                0x00000000c001ed14                Virt::swapfileSector
                0x00000000c001ed18                Virt::swapfileDrive
 *fill*         0x00000000c001ed19        0x3 
 .data          0x00000000c001ed1c        0x4 coreobjs/c++.32
                0x00000000c001ed1c                __stack_chk_guard
 .data          0x00000000c001ed20        0x0 dbg/kconsole.32
 .data          0x00000000c001ed20        0x0 fs/vfs.32
 .data          0x00000000c001ed20        0x0 hal/bus.32
 .data          0x00000000c001ed20        0x0 hal/buzzer.32
 .data          0x00000000c001ed20        0x0 hal/clock.32
 .data          0x00000000c001ed20        0x0 hal/device.32
 .data          0x00000000c001ed20        0x0 hal/diskctrl.32
 .data          0x00000000c001ed20        0x0 hal/diskphys.32
 .data          0x00000000c001ed20        0x0 hal/fpu.32
 .data          0x00000000c001ed20        0x0 hal/intctrl.32
 .data          0x00000000c001ed20        0x0 hal/keybrd.32
 .data          0x00000000c001ed20        0x0 hal/logidisk.32
 .data          0x00000000c001ed20        0x0 hal/mouse.32
 .data          0x00000000c001ed20        0x0 hal/partition.32
 .data          0x00000000c001ed20        0x0 hal/serial.32
 .data          0x00000000c001ed20        0x0 hal/timer.32
 .data          0x00000000c001ed20        0x0 hal/vcache.32
 .data          0x00000000c001ed20        0x0 hal/video.32
 .data          0x00000000c001ed20       0x10 hw/acpi.32
                0x00000000c001ed20                legacyIRQRemaps
 .data          0x00000000c001ed30        0x4 hw/cpu.32
                0x00000000c001ed30                lastCode
 *fill*         0x00000000c001ed34        0xc 
 .data          0x00000000c001ed40       0x4d krnl/env.32
                0x00000000c001ed40                defaultSysEnv
 .data          0x00000000c001ed8d        0x0 krnl/panic.32
 .data          0x00000000c001ed8d        0x0 krnl/powctrl.32
 .data          0x00000000c001ed8d        0x0 reg/registry.32
 .data          0x00000000c001ed8d        0x0 sys/sc_eject.32
 .data          0x00000000c001ed8d        0x0 sys/sc_exit.32
 .data          0x00000000c001ed8d        0x0 sys/sc_getcwd.32
 .data          0x00000000c001ed8d        0x0 sys/sc_getpid.32
 .data          0x00000000c001ed8d        0x0 sys/sc_getramdata.32
 .data          0x00000000c001ed8d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001ed8d        0x0 sys/sc_loaddll.32
 .data          0x00000000c001ed8d        0x0 sys/sc_read.32
 .data          0x00000000c001ed8d        0x0 sys/sc_sbrk.32
 .data          0x00000000c001ed8d        0x0 sys/sc_setcwd.32
 .data          0x00000000c001ed8d        0x0 sys/sc_settime.32
 .data          0x00000000c001ed8d        0x0 sys/sc_timezone.32
 .data          0x00000000c001ed8d        0x0 sys/sc_write.32
 .data          0x00000000c001ed8d        0x0 sys/sc_wsbe.32
 .data          0x00000000c001ed8d        0x0 sys/sc_yield.32
 .data          0x00000000c001ed8d        0x0 sys/syscalls.32
 .data          0x00000000c001ed8d        0x0 thr/elf.32
 *fill*         0x00000000c001ed8d        0x3 
 .data          0x00000000c001ed90        0x4 thr/prcssthr.32
                0x00000000c001ed90                Thr::nextPID
 .data          0x00000000c001ed94        0x0 vm86/vm8086.32
 .data          0x00000000c001ed94        0x0 arch/i386/hal.32
 .data          0x00000000c001ed94        0x0 arch/i386/pic.32
 .data          0x00000000c001ed94        0x0 arch/i386/rtc.32
 .data          0x00000000c001ed94        0x0 arch/i386/vga.32
 .data          0x00000000c001ed94        0x0 fs/fat/vfslink.32
 .data          0x00000000c001ed94        0x1 fs/iso9660/vfslink.32
                0x00000000c001ed94                recentDriveletter
 .data          0x00000000c001ed95        0x0 hal/sound/sndcard.32
 .data          0x00000000c001ed95        0x0 hal/sound/sndport.32
 .data          0x00000000c001ed95        0x0 hw/bus/isa.32
 .data          0x00000000c001ed95        0x0 hw/bus/pci.32
 .data          0x00000000c001ed95        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001ed95        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001ed95        0x0 hw/diskphys/ata.32
 .data          0x00000000c001ed95        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001ed95        0x0 hw/diskphys/sata.32
 .data          0x00000000c001ed95        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001ed95        0x0 hw/intctrl/apic.32
 .data          0x00000000c001ed95        0x0 hw/timer/apictimer.32
 .data          0x00000000c001ed95        0x0 hw/timer/pit.32
 .data          0x00000000c001ed95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001ed95        0x0 crtn.32
 .data          0x00000000c001ed95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001ed95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001ed95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001ed95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001ed98        0x0
 .got           0x00000000c001ed98        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001ed98        0x0
 .got.plt       0x00000000c001ed98        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001ed98        0x0
 .igot.plt      0x00000000c001ed98        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001ed98        0x0
 .tm_clone_table
                0x00000000c001ed98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001ed98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001ed95      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001ed95        0x3 
 .eh_frame      0x00000000c001ed98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001ed98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001ed98       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001edf0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001ee30       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001ee9c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001ef20        0x0
 .rel.got       0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001ef20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001ef20     0x4348
                0x00000000c001ef20                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c001ef20        0x0 crti.32
 .bss           0x00000000c001ef20       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001ef40        0x4 acpica/utclib.32
 *fill*         0x00000000c001ef44       0x1c 
 .bss           0x00000000c001ef60      0x378 core/malloc.32
 .bss           0x00000000c001f2d8        0x0 libk/string.32
 .bss           0x00000000c001f2d8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001f2d8        0x8 
 .bss           0x00000000c001f2e0       0x88 fs/fat/ff.32
 .bss           0x00000000c001f368        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001f368        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c001f368        0x0 compat/inlines.32
 .bss           0x00000000c001f368        0x0 compat/resolve.32
 .bss           0x00000000c001f368        0x6 core/computer.32
                0x00000000c001f368                Krnl::computer
                0x00000000c001f36c                Krnl::preemptionOn
                0x00000000c001f36d                Krnl::schedulingOn
 *fill*         0x00000000c001f36e        0x2 
 .bss           0x00000000c001f370        0x6 core/gdt.32
                0x00000000c001f370                gdtDescr
 .bss           0x00000000c001f376        0x0 core/idle.32
 *fill*         0x00000000c001f376        0x2 
 .bss           0x00000000c001f378        0x6 core/idt.32
                0x00000000c001f378                idtDescr
 .bss           0x00000000c001f37e        0x0 core/kheap.32
 *fill*         0x00000000c001f37e        0x2 
 .bss           0x00000000c001f380        0x4 core/main.32
                0x00000000c001f380                sysBootSettings
 .bss           0x00000000c001f384       0x29 core/physmgr.32
                0x00000000c001f384                Phys::forbidEvictions
                0x00000000c001f388                Phys::currentPagePointer
                0x00000000c001f38c                Phys::highestMem
                0x00000000c001f390                Phys::oldPercent
                0x00000000c001f394                Phys::usedPages
                0x00000000c001f398                Phys::usablePages
                0x00000000c001f39c                Phys::dmaUsage
 .bss           0x00000000c001f3ad        0x0 core/pipe.32
 *fill*         0x00000000c001f3ad        0x3 
 .bss           0x00000000c001f3b0        0x9 core/terminal.32
                0x00000000c001f3b0                terminalCycle
                0x00000000c001f3b4                activeTerminal
                0x00000000c001f3b8                VgaText::graphicMode
 *fill*         0x00000000c001f3b9        0x1 
 .bss           0x00000000c001f3ba        0x2 core/tss.32
                0x00000000c001f3ba                doubleFaultSelector
 *fill*         0x00000000c001f3bc        0x4 
 .bss           0x00000000c001f3c0       0x84 core/unixfile.32
                0x00000000c001f3c0                sfileLpt
                0x00000000c001f400                sfileCom
                0x00000000c001f424                sfileNul
                0x00000000c001f428                sfilePnt
                0x00000000c001f42c                sfileAux
                0x00000000c001f430                sfileCon
                0x00000000c001f434                initialFilesAdded
                0x00000000c001f438                unixFileLinkedList
 .bss           0x00000000c001f444       0x10 core/virtmgr.32
                0x00000000c001f444                twswaps
                0x00000000c001f448                swapBalance
                0x00000000c001f44c                Virt::swapfileBitmap
                0x00000000c001f450                firstVAS
 .bss           0x00000000c001f454        0x0 coreobjs/c++.32
 .bss           0x00000000c001f454        0x0 dbg/kconsole.32
 .bss           0x00000000c001f454        0x4 fs/vfs.32
                0x00000000c001f454                installedFilesystems
 .bss           0x00000000c001f458        0x0 hal/bus.32
 .bss           0x00000000c001f458        0x0 hal/buzzer.32
 .bss           0x00000000c001f458        0x8 hal/clock.32
                0x00000000c001f458                User::dstOn
                0x00000000c001f459                User::timezoneHalfHourOffset
                0x00000000c001f45c                User::timezoneHourOffset
 .bss           0x00000000c001f460        0x0 hal/device.32
 .bss           0x00000000c001f460        0x0 hal/diskctrl.32
 .bss           0x00000000c001f460        0x0 hal/diskphys.32
 .bss           0x00000000c001f460        0x0 hal/fpu.32
 .bss           0x00000000c001f460     0x2000 hal/intctrl.32
                0x00000000c001f460                INT_contexts
                0x00000000c0020460                INT_handlers
 .bss           0x00000000c0021460      0x429 hal/keybrd.32
                0x00000000c0021460                keyboardWaitingTaskList
                0x00000000c0021464                keyboardSetupYet
                0x00000000c0021468                guiKeyboardHandler
                0x00000000c0021480                keystates
 *fill*         0x00000000c0021889       0x17 
 .bss           0x00000000c00218a0       0x88 hal/logidisk.32
                0x00000000c00218a0                diskAssignments
                0x00000000c00218c0                disks
 .bss           0x00000000c0021928        0x4 hal/mouse.32
                0x00000000c0021928                guiMouseHandler
 .bss           0x00000000c002192c        0x0 hal/partition.32
 .bss           0x00000000c002192c        0x0 hal/serial.32
 .bss           0x00000000c002192c        0x4 hal/timer.32
                0x00000000c002192c                milliTenthsSinceBoot
 .bss           0x00000000c0021930        0x0 hal/vcache.32
 .bss           0x00000000c0021930        0x4 hal/video.32
                0x00000000c0021930                screen
 *fill*         0x00000000c0021934        0xc 
 .bss           0x00000000c0021940      0x480 hw/acpi.32
                0x00000000c0021940                systemSleepFunction
                0x00000000c0021944                systemResetFunction
                0x00000000c0021948                systemShutdownFunction
                0x00000000c002194c                nextACPITable
                0x00000000c0021960                acpiTables
                0x00000000c0021b60                usingXSDT
                0x00000000c0021b64                MADTpointer
                0x00000000c0021b68                RSDTpointer
                0x00000000c0021b6c                RSDPpointer
                0x00000000c0021b70                nextAPICNMI
                0x00000000c0021b80                apicNMIInfo
                0x00000000c0021c00                legacyIRQFlags
                0x00000000c0021c20                ioapicDiscoveryNumber
                0x00000000c0021c40                ioapicFoundInMADT
                0x00000000c0021c60                ioapicAddresses
                0x00000000c0021ce0                ioapicGSIBase
                0x00000000c0021d60                processorDiscoveryNumber
                0x00000000c0021d80                matchingAPICID
                0x00000000c0021da0                processorID
 .bss           0x00000000c0021dc0       0x10 hw/cpu.32
                0x00000000c0021dc0                lastD
                0x00000000c0021dc4                lastC
                0x00000000c0021dc8                lastB
                0x00000000c0021dcc                lastA
 .bss           0x00000000c0021dd0        0x8 krnl/env.32
                0x00000000c0021dd0                Krnl::userEnv
                0x00000000c0021dd4                Krnl::systemEnv
 .bss           0x00000000c0021dd8        0x9 krnl/panic.32
                0x00000000c0021dd8                Krnl::guiProgramFaultHandler
                0x00000000c0021ddc                Krnl::guiPanicHandler
                0x00000000c0021de0                Krnl::kernelInPanic
 *fill*         0x00000000c0021de1       0x1f 
 .bss           0x00000000c0021e00       0x48 krnl/powctrl.32
                0x00000000c0021e00                Krnl::powCtrlOnBattery
                0x00000000c0021e20                Krnl::currentPowerSettings
                0x00000000c0021e44                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0021e48        0x0 reg/registry.32
 .bss           0x00000000c0021e48        0x0 sys/sc_eject.32
 .bss           0x00000000c0021e48        0x0 sys/sc_exit.32
 .bss           0x00000000c0021e48        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0021e48        0x0 sys/sc_getpid.32
 .bss           0x00000000c0021e48        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0021e48        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0021e48        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0021e48        0x0 sys/sc_read.32
 .bss           0x00000000c0021e48        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0021e48        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0021e48        0x0 sys/sc_settime.32
 .bss           0x00000000c0021e48        0x0 sys/sc_timezone.32
 .bss           0x00000000c0021e48        0x0 sys/sc_write.32
 .bss           0x00000000c0021e48        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0021e48        0x0 sys/sc_yield.32
 *fill*         0x00000000c0021e48       0x18 
 .bss           0x00000000c0021e60      0x200 sys/syscalls.32
                0x00000000c0021e60                systemCallHandlers
 .bss           0x00000000c0022060      0x7a4 thr/elf.32
                0x00000000c0022060                Thr::driverLookupNext
                0x00000000c0022080                Thr::driverLookupLen
                0x00000000c0022280                Thr::driverLookupAddr
                0x00000000c0022480                Thr::driverNameLookup
                0x00000000c0022680                Thr::kernelSymbols
                0x00000000c0022700                Thr::kernelStringTable
                0x00000000c0022780                Thr::kernelSymbolTable
                0x00000000c0022800                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0022804        0x4 
 .bss           0x00000000c0022808       0x68 thr/prcssthr.32
                0x00000000c0022808                cleanerThread
                0x00000000c002280c                weNeedTheCleanerToNotBlock
                0x00000000c0022810                retValLockStuff
                0x00000000c0022814                retValSchedLock
                0x00000000c0022818                lockStuffLock
                0x00000000c002281c                schedulerLock
                0x00000000c0022820                taskSwitchesPostponedFlag
                0x00000000c0022824                postponeTaskSwitchesCounter
                0x00000000c0022828                irqDisableCounter
                0x00000000c002282c                terminatedTaskList
                0x00000000c0022838                sleepingTaskList
                0x00000000c0022844                taskList
                0x00000000c0022850                kernelProcess
 *fill*         0x00000000c0022870       0x10 
 .bss           0x00000000c0022880       0x40 vm86/vm8086.32
                0x00000000c0022880                Vm::vmRetV
                0x00000000c0022884                Vm::vmDone
                0x00000000c0022885                Vm::vmReady
                0x00000000c0022888                Vm::vm86Thread
                0x00000000c002288c                Vm::vmToHostCommsPtr
                0x00000000c00228a0                Vm::vmToHostComms
 .bss           0x00000000c00228c0       0x14 arch/i386/hal.32
                0x00000000c00228c0                apic
                0x00000000c00228c4                fpuOwner
                0x00000000c00228c8                coproLoadFunc
                0x00000000c00228cc                coproSaveFunc
                0x00000000c00228d0                gpFaultIntercept
 .bss           0x00000000c00228d4        0x0 arch/i386/pic.32
 .bss           0x00000000c00228d4        0x2 arch/i386/rtc.32
 .bss           0x00000000c00228d6        0x0 arch/i386/vga.32
 *fill*         0x00000000c00228d6        0xa 
 .bss           0x00000000c00228e0       0xf0 fs/fat/vfslink.32
                0x00000000c00228e0                FAT::fats
                0x00000000c0022900                FAT::vfsToFatRemaps
                0x00000000c0022980                fatToVFSRemaps
 *fill*         0x00000000c00229d0       0x10 
 .bss           0x00000000c00229e0      0x820 fs/iso9660/vfslink.32
                0x00000000c00229e0                recentSector
                0x00000000c0022a00                recentBuffer
 .bss           0x00000000c0023200        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0023200        0x0 hal/sound/sndport.32
 .bss           0x00000000c0023200        0x0 hw/bus/isa.32
 .bss           0x00000000c0023200        0xd hw/bus/pci.32
                0x00000000c0023200                thePCI
 .bss           0x00000000c002320d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002320d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002320d        0x3 
 .bss           0x00000000c0023210        0x8 hw/diskphys/ata.32
                0x00000000c0023210                ataSectorsWritten
                0x00000000c0023214                ataSectorsRead
 .bss           0x00000000c0023218        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0023218        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0023218        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0023218        0x8 
 .bss           0x00000000c0023220       0x41 hw/intctrl/apic.32
                0x00000000c0023220                noOfIOAPICs
                0x00000000c0023240                ioapics
                0x00000000c0023260                IOAPICsSetupYet
 .bss           0x00000000c0023261        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0023261        0x3 
 .bss           0x00000000c0023264        0x4 hw/timer/pit.32
                0x00000000c0023264                pitFreq
 .bss           0x00000000c0023268        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0023268        0x0 crtn.32
 .bss           0x00000000c0023268        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0023268        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0023268        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0023268        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0023268                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00275b0                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
