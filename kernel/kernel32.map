Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f5ca
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6c3 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006ca8                Krnl::firstTask()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006e96                Computer::setBootMessage(char const*)
                0x00000000c0006e98                Computer::detectFeatures()
                0x00000000c00070be                Computer::displayFeatures()
                0x00000000c00070c0                Computer::rdmsr(unsigned int)
                0x00000000c00070ec                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007128                Computer::shutdown()
                0x00000000c0007140                Computer::restart()
                0x00000000c0007158                Computer::sleep()
                0x00000000c000716c                Computer::nmiEnabled()
                0x00000000c0007178                Computer::readCMOS(unsigned char)
                0x00000000c0007196                Computer::enableNMI(bool)
                0x00000000c00071ae                Computer::open(int, int, void*)
                0x00000000c0007282                Computer::disableNMI()
                0x00000000c0007292                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072b6                Computer::handleNMI()
 *fill*         0x00000000c0007321        0x1 
 .text          0x00000000c0007322      0x1db core/gdt.32
                0x00000000c0007322                GDTEntry::setBase(unsigned int)
                0x00000000c000733e                GDTEntry::setLimit(unsigned int)
                0x00000000c000735c                GDT::GDT()
                0x00000000c000735c                GDT::GDT()
                0x00000000c0007372                GDT::addEntry(GDTEntry)
                0x00000000c0007394                GDT::getNumberOfEntries()
                0x00000000c000739c                GDT::flush()
                0x00000000c00073be                GDT::setup()
 .text          0x00000000c00074fd       0x1d core/idle.32
                0x00000000c00074fd                idleFunction(void*)
 *fill*         0x00000000c000751a        0x2 
 .text          0x00000000c000751c      0x46c core/idt.32
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c0007596                IDTEntry::setOffset(unsigned int)
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ae                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075b6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075d0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007608                IDT::flush()
                0x00000000c0007622                IDT::setup()
 .text          0x00000000c0007988      0x188 core/kheap.32
                0x00000000c0007988                sbrk
                0x00000000c0007a1f                mmap
                0x00000000c0007a35                munmap
                0x00000000c0007a4b                liballoc_lock()
                0x00000000c0007a59                liballoc_unlock()
                0x00000000c0007a6f                liballoc_alloc(int)
                0x00000000c0007a87                liballoc_free(void*, int)
                0x00000000c0007aa2                realloc
                0x00000000c0007ab6                malloc
                0x00000000c0007ac6                free
                0x00000000c0007ad6                rfree
                0x00000000c0007ae6                calloc
 .text          0x00000000c0007b10       0xc7 core/main.32
                0x00000000c0007b10                KeEntryPoint
 .text          0x00000000c0007bd7      0x644 core/physmgr.32
                0x00000000c0007bd7                Phys::allocateDMA(unsigned long)
                0x00000000c0007cbf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cfa                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d3a                Phys::getPageState(unsigned long)
                0x00000000c0007d56                Phys::freePage(unsigned long)
                0x00000000c0007dbf                Phys::allocatePage()
                0x00000000c0007e8e                Phys::allocateContiguousPages(int)
                0x00000000c0007ef5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f2d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000821b        0x1 
 .text          0x00000000c000821c      0x273 core/pipe.32
                0x00000000c000821c                Pipe::isAtty()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008244                Pipe::~Pipe()
                0x00000000c000826c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000832c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xab3 core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a60                VgaText::putx(unsigned int)
                0x00000000c0008aa6                VgaText::puts(char const*)
                0x00000000c0008acc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b18                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008db6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f42                VgaText::doUpdate()
 *fill*         0x00000000c0008f43        0x1 
 .text          0x00000000c0008f44      0x1a1 core/tss.32
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f54                TSS::setESP(unsigned long)
                0x00000000c0008f68                TSS::flush()
                0x00000000c0008f88                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090e5        0x1 
 .text          0x00000000c00090e6      0x4ca core/unixfile.32
                0x00000000c00090e6                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000913c                ReservedFilename::isAtty()
                0x00000000c0009158                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091b6                UnixFile::getFileDescriptor()
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c0009440                UnixFile::~UnixFile()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c000948c                ReservedFilename::~ReservedFilename()
                0x00000000c00094b3                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095b0     0x1218 core/virtmgr.32
                0x00000000c00095b0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095ea                Virt::getPageState(unsigned long)
                0x00000000c000960d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009732                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009755                Virt::swapIDToSector(unsigned long)
                0x00000000c000976b                Virt::allocateSwapfilePage()
                0x00000000c00097eb                Virt::virtualMemorySetup()
                0x00000000c000983c                Virt::setupPageSwapping(int)
                0x00000000c00098ae                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098de                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000990c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000992b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a68                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a8c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009aa6                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009b52                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b86                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009d20                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e24                VAS::allocatePages(int, int)
                0x00000000c0009f1a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f72                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a2b2                VAS::evict(unsigned long)
                0x00000000c000a390                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a52a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a59e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ca                VAS::scanForEviction()
                0x00000000c000a6cd                mapVASFirstTime
 .text          0x00000000c000a7c8       0x5f coreobjs/c++.32
                0x00000000c000a7c8                __cxa_atexit
                0x00000000c000a7cb                __cxa_finalize
                0x00000000c000a7cc                __stack_chk_fail
                0x00000000c000a802                __cxa_pure_virtual
                0x00000000c000a813                operator new[](unsigned long)
                0x00000000c000a818                operator delete(void*, unsigned long)
                0x00000000c000a81d                operator delete[](void*)
                0x00000000c000a822                operator delete[](void*, unsigned long)
 .text          0x00000000c000a827      0x254 dbg/kconsole.32
                0x00000000c000a827                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8c7                Dbg::logc(char)
                0x00000000c000a8e7                Dbg::logs(char*)
                0x00000000c000a906                Dbg::logWriteInt(unsigned int)
                0x00000000c000a924                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a945                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa7b        0x1 
 .text          0x00000000c000aa7c      0x2d4 dbg/usban.32
                0x00000000c000aa7c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aae8                __ubsan_handle_type_mismatch_v1
                0x00000000c000abc4                __ubsan_handle_pointer_overflow
                0x00000000c000abf0                __ubsan_handle_out_of_bounds
                0x00000000c000ac1c                __ubsan_handle_add_overflow
                0x00000000c000ac48                __ubsan_handle_load_invalid_value
                0x00000000c000ac74                __ubsan_handle_divrem_overflow
                0x00000000c000aca0                __ubsan_handle_mul_overflow
                0x00000000c000accc                __ubsan_handle_sub_overflow
                0x00000000c000acf8                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad24                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad50      0x602 fs/symlink.32
                0x00000000c000ad50                KiCreateSymlinkID()
                0x00000000c000adbd                KiFlushSymlinkChanges()
                0x00000000c000ae90                KiDeinitialiseSymlinks(void*)
                0x00000000c000ae95                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000af04                KiIsSymlinkRegistered(char const*)
                0x00000000c000af4b                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b160                KeCreateSymlink(char const*, char const*)
                0x00000000c000b29c                KeInitialiseSymlinks()
 .text          0x00000000c000b352      0xd58 fs/vfs.32
                0x00000000c000b352                File::read(unsigned long long, void*, int*)
                0x00000000c000b3aa                File::write(unsigned long long, void*, int*)
                0x00000000c000b402                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b45a                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b488                File::isAtty()
                0x00000000c000b48c                Directory::isAtty()
                0x00000000c000b490                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b496                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b49c                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b4a2                File::~File()
                0x00000000c000b4a2                File::~File()
                0x00000000c000b4c6                File::~File()
                0x00000000c000b4f0                Directory::~Directory()
                0x00000000c000b4f0                Directory::~Directory()
                0x00000000c000b514                Directory::~Directory()
                0x00000000c000b53e                Filesystem::Filesystem()
                0x00000000c000b53e                Filesystem::Filesystem()
                0x00000000c000b562                Filesystem::~Filesystem()
                0x00000000c000b562                Filesystem::~Filesystem()
                0x00000000c000b570                Filesystem::~Filesystem()
                0x00000000c000b594                Fs::getcwd(Process*, char*, int)
                0x00000000c000b5be                Fs::initVFS()
                0x00000000c000b5e8                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000b7f2                File::File(char const*, Process*, bool)
                0x00000000c000b7f2                File::File(char const*, Process*, bool)
                0x00000000c000b8d0                File::File(char const*, Process*)
                0x00000000c000b8d0                File::File(char const*, Process*)
                0x00000000c000b8ee                File::open(FileOpenMode)
                0x00000000c000b94c                File::close()
                0x00000000c000b9ac                File::seek(unsigned long long)
                0x00000000c000ba02                File::truncate(unsigned long long)
                0x00000000c000ba58                File::tell(unsigned long long*)
                0x00000000c000baa8                File::rewind()
                0x00000000c000babc                File::unlink()
                0x00000000c000bb08                File::rename(char const*)
                0x00000000c000bb56                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bbb2                File::exists()
                0x00000000c000bbf0                File::stat(unsigned long long*, bool*)
                0x00000000c000bc51                Fs::setcwd(Process*, char*)
                0x00000000c000bdb0                Directory::Directory(char const*, Process*)
                0x00000000c000bdb0                Directory::Directory(char const*, Process*)
                0x00000000c000be78                Directory::open()
                0x00000000c000bed4                Directory::close()
                0x00000000c000bf34                Directory::unlink()
                0x00000000c000bf80                Directory::rename(char const*)
                0x00000000c000bfce                Directory::exists()
                0x00000000c000c00c                Directory::read(dirent*)
                0x00000000c000c058                Directory::create()
                0x00000000c000c0a4                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c0aa        0x2 
 .text          0x00000000c000c0ac       0x86 hal/bus.32
                0x00000000c000c0ac                Bus::Bus(char const*)
                0x00000000c000c0ac                Bus::Bus(char const*)
                0x00000000c000c0e4                Bus::~Bus()
                0x00000000c000c0e4                Bus::~Bus()
                0x00000000c000c108                Bus::~Bus()
 .text          0x00000000c000c132       0x96 hal/buzzer.32
                0x00000000c000c132                beepThread(void*)
                0x00000000c000c16f                Krnl::beep(int, int, bool)
 .text          0x00000000c000c1c8      0x45f hal/clock.32
                0x00000000c000c1c8                User::loadClockSettings(int)
                0x00000000c000c21a                Clock::Clock(char const*)
                0x00000000c000c21a                Clock::Clock(char const*)
                0x00000000c000c250                Clock::~Clock()
                0x00000000c000c250                Clock::~Clock()
                0x00000000c000c274                Clock::~Clock()
                0x00000000c000c29e                Clock::timeInSecondsLocal()
                0x00000000c000c2e6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c33f                datetimeToSeconds(datetime_t)
                0x00000000c000c45e                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c4be                secondsToDatetime(unsigned long long)
                0x00000000c000c602                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c627        0x1 
 .text          0x00000000c000c628      0x464 hal/device.32
                0x00000000c000c628                Device::hibernate()
                0x00000000c000c62a                Device::wake()
                0x00000000c000c62c                Device::detect()
                0x00000000c000c62e                Device::disableLegacy()
                0x00000000c000c630                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c632                DriverlessDevice::close(int, int, void*)
                0x00000000c000c636                DriverlessDevice::detect()
                0x00000000c000c638                DriverlessDevice::open(int, int, void*)
                0x00000000c000c64c                Device::~Device()
                0x00000000c000c64c                Device::~Device()
                0x00000000c000c65a                Device::~Device()
                0x00000000c000c682                Device::findAndLoadDriver()
                0x00000000c000c690                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c6b6                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c6f6                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c720                Device::getParent()
                0x00000000c000c72c                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c74a                Device::addChild(Device*)
                0x00000000c000c78e                Device::removeAllChildren()
                0x00000000c000c7d4                Device::hibernateAll()
                0x00000000c000c804                Device::wakeAll()
                0x00000000c000c834                Device::detectAll()
                0x00000000c000c864                Device::disableLegacyAll()
                0x00000000c000c866                Device::loadDriversForAll()
                0x00000000c000c868                Device::closeAll()
                0x00000000c000c89e                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c8d4                Device::setName(char const*)
                0x00000000c000c8e2                Device::Device(char const*)
                0x00000000c000c8e2                Device::Device(char const*)
                0x00000000c000c9de                Device::getName()
                0x00000000c000c9e8                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c9e8                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000ca1e                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ca62                getDevicesOfType(DeviceType)
 .text          0x00000000c000ca8c       0x86 hal/diskctrl.32
                0x00000000c000ca8c                HardDiskController::HardDiskController(char const*)
                0x00000000c000ca8c                HardDiskController::HardDiskController(char const*)
                0x00000000c000cac4                HardDiskController::~HardDiskController()
                0x00000000c000cac4                HardDiskController::~HardDiskController()
                0x00000000c000cae8                HardDiskController::~HardDiskController()
 .text          0x00000000c000cb12       0xe2 hal/diskphys.32
                0x00000000c000cb12                PhysicalDisk::eject()
                0x00000000c000cb16                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cb16                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cb7e                PhysicalDisk::startCache()
                0x00000000c000cba6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cba6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cbca                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cbf4        0x0 hal/fpu.32
 .text          0x00000000c000cbf4      0x359 hal/intctrl.32
                0x00000000c000cbf4                int_handler
                0x00000000c000cc7e                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000ccc8                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000cdfc                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000ce30                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ceae                setupINTS()
                0x00000000c000cf0b                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000cf4d        0x1 
 .text          0x00000000c000cf4e      0x8be hal/keybrd.32
                0x00000000c000cf4e                startGUI(void*)
                0x00000000c000cfbc                startGUIVESA(void*)
                0x00000000c000d02a                sendKeyToTerminal(unsigned char)
                0x00000000c000d105                sendKeyboardToken(KeyboardToken)
                0x00000000c000d5ef                clearInternalKeybuffer(VgaText*)
                0x00000000c000d624                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d782                Keyboard::Keyboard(char const*)
                0x00000000c000d782                Keyboard::Keyboard(char const*)
                0x00000000c000d7be                Keyboard::~Keyboard()
                0x00000000c000d7be                Keyboard::~Keyboard()
                0x00000000c000d7e2                Keyboard::~Keyboard()
 .text          0x00000000c000d80c      0x3f8 hal/logidisk.32
                0x00000000c000d80c                LogicalDisk::close(int, int, void*)
                0x00000000c000d810                LogicalDisk::~LogicalDisk()
                0x00000000c000d810                LogicalDisk::~LogicalDisk()
                0x00000000c000d834                LogicalDisk::~LogicalDisk()
                0x00000000c000d85e                LogicalDisk::open(int, int, void*)
                0x00000000c000d872                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d8aa                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d8f0                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d8f0                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d9b0                LogicalDisk::assignDriveLetter()
                0x00000000c000da6a                LogicalDisk::mount()
                0x00000000c000dab2                LogicalDisk::unmount()
                0x00000000c000dac2                LogicalDisk::eject()
                0x00000000c000dad6                LogicalDisk::unassignDriveLetter()
                0x00000000c000db2c                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000db98                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000dc04       0x86 hal/mouse.32
                0x00000000c000dc04                Mouse::Mouse(char const*)
                0x00000000c000dc04                Mouse::Mouse(char const*)
                0x00000000c000dc3c                Mouse::~Mouse()
                0x00000000c000dc3c                Mouse::~Mouse()
                0x00000000c000dc60                Mouse::~Mouse()
 .text          0x00000000c000dc8a       0x90 hal/nic.32
                0x00000000c000dc8a                NIC::getMAC()
                0x00000000c000dc90                NIC::write(int, unsigned char*, int*)
                0x00000000c000dc96                NIC::NIC(char const*)
                0x00000000c000dc96                NIC::NIC(char const*)
                0x00000000c000dccc                NIC::~NIC()
                0x00000000c000dccc                NIC::~NIC()
                0x00000000c000dcf0                NIC::~NIC()
 .text          0x00000000c000dd1a      0x33b hal/partition.32
                0x00000000c000dd1a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ddc2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e055        0x3 
 .text          0x00000000c000e058       0x86 hal/serial.32
                0x00000000c000e058                Serial::Serial(char const*)
                0x00000000c000e058                Serial::Serial(char const*)
                0x00000000c000e090                Serial::~Serial()
                0x00000000c000e090                Serial::~Serial()
                0x00000000c000e0b4                Serial::~Serial()
 *fill*         0x00000000c000e0de        0x2 
 .text          0x00000000c000e0e0      0x234 hal/timer.32
                0x00000000c000e0e0                Timer::Timer(char const*)
                0x00000000c000e0e0                Timer::Timer(char const*)
                0x00000000c000e118                Timer::~Timer()
                0x00000000c000e118                Timer::~Timer()
                0x00000000c000e13c                Timer::~Timer()
                0x00000000c000e166                Timer::read()
                0x00000000c000e171                setupTimer(int)
                0x00000000c000e1ac                timerHandler(unsigned int)
 .text          0x00000000c000e314      0x444 hal/vcache.32
                0x00000000c000e314                VCache::VCache(PhysicalDisk*)
                0x00000000c000e314                VCache::VCache(PhysicalDisk*)
                0x00000000c000e484                VCache::invalidateReadBuffer()
                0x00000000c000e494                VCache::writeWriteBuffer()
                0x00000000c000e4e0                VCache::~VCache()
                0x00000000c000e4e0                VCache::~VCache()
                0x00000000c000e538                VCache::~VCache()
                0x00000000c000e560                VCache::write(unsigned long long, int, void*)
                0x00000000c000e64e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e758      0x4c7 hal/video.32
                0x00000000c000e758                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e7a4                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e814                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e892                Video::clearScreen(unsigned int)
                0x00000000c000e8c6                Video::putpixel(int, int, unsigned int)
                0x00000000c000e8d4                Video::readPixelApprox(int, int)
                0x00000000c000e8e8                Video::Video(char const*)
                0x00000000c000e8e8                Video::Video(char const*)
                0x00000000c000e91e                Video::~Video()
                0x00000000c000e91e                Video::~Video()
                0x00000000c000e942                Video::~Video()
                0x00000000c000e96c                Video::isMonochrome()
                0x00000000c000e978                Video::getWidth()
                0x00000000c000e984                Video::getHeight()
                0x00000000c000e990                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ea4c                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ebb4                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ec1f        0x1 
 .text          0x00000000c000ec20     0x138b hw/acpi.32
                0x00000000c000ec20                ACPI::close(int, int, void*)
                0x00000000c000ecd4                findRSDP()
                0x00000000c000ed6c                loadACPITables(unsigned char*)
                0x00000000c000efd8                findRSDT(unsigned char*)
                0x00000000c000f130                findDataTable(unsigned char*, char*)
                0x00000000c000f1b0                scanMADT()
                0x00000000c000f668                ACPI::ACPI()
                0x00000000c000f668                ACPI::ACPI()
                0x00000000c000f6bc                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f7b8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f884                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f88c                ACPI::detectPCI()
                0x00000000c000faac                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000faf4                ACPI::sleep()
                0x00000000c000fb10                ACPI::open(int, int, void*)
 *fill*         0x00000000c000ffab        0x1 
 .text          0x00000000c000ffac      0xbc5 hw/cpu.32
                0x00000000c000ffac                CPU::close(int, int, void*)
                0x00000000c000ffb0                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000ffcc                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000ffe4                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0010058                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00100dc                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c001010a                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0010138                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0010166                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0010194                CPU::CPU()
                0x00000000c0010194                CPU::CPU()
                0x00000000c0010222                CPU::displayFeatures()
                0x00000000c0010224                CPU::detectFeatures()
                0x00000000c00108f8                CPU::setupSMEP()
                0x00000000c0010904                CPU::setupUMIP()
                0x00000000c001090e                CPU::setupTSC()
                0x00000000c0010918                CPU::setupLargePages()
                0x00000000c0010922                CPU::setupPAT()
                0x00000000c001095e                CPU::setupMTRR()
                0x00000000c0010960                CPU::setupGlobalPages()
                0x00000000c001096a                CPU::allowUsermodeDataAccess()
                0x00000000c001097c                CPU::prohibitUsermodeDataAccess()
                0x00000000c001098e                CPU::setupSMAP()
                0x00000000c001099c                CPU::setupFeatures()
                0x00000000c0010a68                CPU::open(int, int, void*)
 .text          0x00000000c0010b71       0xb6 krnl/atexit.32
                0x00000000c0010b71                KeInitialiseAtexit()
                0x00000000c0010b90                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010bc4                KeExecuteAtexit()
 .text          0x00000000c0010c27       0xdf krnl/bootmsg.32
                0x00000000c0010c27                KeDisplaySplashScreen()
                0x00000000c0010ca3                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010d06        0x2 
 .text          0x00000000c0010d08       0x1d krnl/compat.32
                0x00000000c0010d08                Krnl::handlePowerButton()
                0x00000000c0010d18                Krnl::handleSleepButton()
 *fill*         0x00000000c0010d25        0x1 
 .text          0x00000000c0010d26      0x5bf krnl/env.32
                0x00000000c0010d26                EnvVarContainer::getEnv(char const*)
                0x00000000c0010d64                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010e26                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010e28                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001104c                EnvVarContainer::__loadSystem()
                0x00000000c0011066                EnvVarContainer::__loadUser()
                0x00000000c0011068                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011068                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001108a                EnvVarContainer::~EnvVarContainer()
                0x00000000c001108a                EnvVarContainer::~EnvVarContainer()
                0x00000000c00110ba                KeGetEnv(Process*, char const*)
                0x00000000c001111f                KeSetEnvSystem(char const*, char const*)
                0x00000000c0011139                KeSetEnvUser(char const*, char const*)
                0x00000000c0011158                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c001116b                KeDeleteEnvSystem(char const*)
                0x00000000c001116c                KeDeleteEnvUser(char const*)
                0x00000000c001116d                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c001116e                KeNewProcessEnv(Process*)
                0x00000000c0011190                KeCopyProcessEnv(Process*, Process*)
                0x00000000c00111dc                KeLoadSystemEnv()
                0x00000000c001120a                KeLoadUserEnv()
                0x00000000c0011230                KeFlushEnv()
                0x00000000c0011231                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0011251                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c00112e5       0x94 krnl/inlines.32
                0x00000000c00112e5                CPU::current()
                0x00000000c00112f1                operator new(unsigned long)
                0x00000000c00112f6                operator delete(void*)
                0x00000000c00112fb                disableIRQs()
                0x00000000c00112fd                enableIRQs()
                0x00000000c00112ff                lockScheduler()
                0x00000000c0011307                unlockScheduler()
                0x00000000c0011316                lockStuff()
                0x00000000c0011324                unlockStuff()
                0x00000000c001135e                Virt::getAKernelVAS()
                0x00000000c0011364                __not_memcpy
 .text          0x00000000c0011379        0xc krnl/panic.32
                0x00000000c0011379                KePanic(char const*)
 .text          0x00000000c0011385      0x142 krnl/powctrl.32
                0x00000000c0011385                KePowerThread(void*)
                0x00000000c00113b3                KeChangePowerSettings(PowerSettings)
                0x00000000c00113c9                KeUserIOReceived()
                0x00000000c00113d4                KeHandlePowerButton()
                0x00000000c0011409                KeHandleSleepButton()
                0x00000000c001143e                KeSetupPowerManager()
 .text          0x00000000c00114c7       0x9d krnl/random.32
                0x00000000c00114c7                KeRand()
                0x00000000c0011509                KeSeedRand(unsigned int)
                0x00000000c0011532                KeInitRand()
 .text          0x00000000c0011564      0x1bc krnl/resolve.32
                0x00000000c0011564                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011720      0x322 krnl/signal.32
                0x00000000c0011720                KiSigKill(int)
                0x00000000c0011734                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011735                KiDefaultSignalHandlerPause(int)
                0x00000000c0011761                KiDefaultSignalHandlerResume(int)
                0x00000000c001178d                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011792                KeInitSignals()
                0x00000000c00117e4                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c001181a                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011897                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c001198e                KiCheckSignalZ
                0x00000000c00119d0                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011a0b                KiFinishSignalZ
 .text          0x00000000c0011a42      0xd34 krnl/syscalls.32
                0x00000000c0011a42                SysSeekDir(regs*)
                0x00000000c0011a47                SysTellDir(regs*)
                0x00000000c0011a4c                SysVerify(regs*)
                0x00000000c0011a56                SysGetArgc(regs*)
                0x00000000c0011a6a                SysTTYName(regs*)
                0x00000000c0011a72                SysFormatDisk(regs*)
                0x00000000c0011ae9                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011b3d                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011b96                SysShutdown(regs*)
                0x00000000c0011bf4                SysRealpath(regs*)
                0x00000000c0011c38                SysReadDir(regs*)
                0x00000000c0011cb8                SysIsATTY(regs*)
                0x00000000c0011d12                SysSeek(regs*)
                0x00000000c0011d69                SysTell(regs*)
                0x00000000c0011dd6                SysSize(regs*)
                0x00000000c0011e49                SysSizeFromFilename(regs*)
                0x00000000c0011efa                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011fcf                SysClose(regs*)
                0x00000000c001202f                SysOpenDir(regs*)
                0x00000000c00120ac                SysMakeDir(regs*)
                0x00000000c001211a                SysCloseDir(regs*)
                0x00000000c001216e                SysWait(regs*)
                0x00000000c001218f                SysNotImpl(regs*)
                0x00000000c00121aa                SysPanic(regs*)
                0x00000000c00121c5                SysRmdir(regs*)
                0x00000000c001222a                SysUnlink(regs*)
                0x00000000c001228f                SysGetArgv(regs*)
                0x00000000c00122dc                SysUSleep(regs*)
                0x00000000c0012305                SysSpawn(regs*)
                0x00000000c0012378                SysGetEnv(regs*)
                0x00000000c0012429                SysSetFatAttrib(regs*)
                0x00000000c001249c                SysPipe(regs*)
                0x00000000c00124e1                SysGetUnixTime(regs*)
                0x00000000c00124f5                string_ends_with(char const*, char const*)
                0x00000000c001253d                SysOpen(regs*)
                0x00000000c0012734                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012776        0x2 
 .text          0x00000000c0012778      0x159 net/ethernet.32
                0x00000000c0012778                KeSwitchEndian16(unsigned short)
                0x00000000c001279c                KeSwitchEndian32(unsigned int)
                0x00000000c00127cc                EthernetCRC32(unsigned char*, int)
                0x00000000c0012870                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c00128d1      0xd56 reg/cm.32
                0x00000000c00128d1                CmOpen(char const*)
                0x00000000c00129ef                CmClose(Reghive_Tag*)
                0x00000000c0012a05                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012a41                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012ab8                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012af7                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012b29                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012b65                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012b8d                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012bae                CmExpand(Reghive_Tag*, int)
                0x00000000c0012c29                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012caf                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012da3                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012edf                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012f40                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012f70                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012fa7                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012fd1                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013011                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00130b5                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c00130e3                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013281                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00132ce                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013348                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001339b                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001345f                zStrtok(char*, char const*)
                0x00000000c00134d1                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013552                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00135f5                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0013627      0x52a reg/registry.32
                0x00000000c0013627                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013798                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00138ed                Reg::getLine(char*, char*, char*)
                0x00000000c0013924                Reg::readInt(char*, char*, int*)
                0x00000000c0013a12                Reg::readString(char*, char*, char*, int)
                0x00000000c0013a93                Reg::readBool(char*, char*, bool*)
                0x00000000c0013ab8                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013ae4                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013b10                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013b51       0x36 sys/eject.32
                0x00000000c0013b51                SysEject(regs*)
 .text          0x00000000c0013b87       0x18 sys/exit.32
                0x00000000c0013b87                SysExit(regs*)
 .text          0x00000000c0013b9f       0x1f sys/getcwd.32
                0x00000000c0013b9f                SysGetCwd(regs*)
 .text          0x00000000c0013bbe        0xc sys/getpid.32
                0x00000000c0013bbe                SysGetPID(regs*)
 .text          0x00000000c0013bca       0x1a sys/getramdata.32
                0x00000000c0013bca                SysGetRAMData(regs*)
 .text          0x00000000c0013be4       0x82 sys/getvgaptr.32
                0x00000000c0013be4                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013c66        0x2 
 .text          0x00000000c0013c68       0xb9 sys/kill.32
                0x00000000c0013c68                SysKill(regs*)
 .text          0x00000000c0013d21       0xa8 sys/loaddll.32
                0x00000000c0013d21                SysLoadDLL(regs*)
 .text          0x00000000c0013dc9       0x68 sys/read.32
                0x00000000c0013dc9                SysRead(regs*)
 .text          0x00000000c0013e31       0x29 sys/registersignal.32
                0x00000000c0013e31                SysRegisterSignal(regs*)
 .text          0x00000000c0013e5a      0x19c sys/registry.32
                0x00000000c0013e5a                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013ed1                SysRegistryReadExtent(regs*)
                0x00000000c0013f19                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013f41                SysRegistryEnterDirectory(regs*)
                0x00000000c0013f69                SysRegistryGetNext(regs*)
                0x00000000c0013f91                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013fcb                SysRegistryOpen(regs*)
                0x00000000c0013fdf                SysRegistryClose(regs*)
 .text          0x00000000c0013ff6       0x55 sys/sbrk.32
                0x00000000c0013ff6                SysSbrk(regs*)
 .text          0x00000000c001404b       0x1c sys/setcwd.32
                0x00000000c001404b                SysSetCwd(regs*)
 .text          0x00000000c0014067       0x96 sys/settime.32
                0x00000000c0014067                SysSetTime(regs*)
 .text          0x00000000c00140fd       0x2d sys/symlink.32
                0x00000000c00140fd                SysSymlink(regs*)
 .text          0x00000000c001412a       0x4a sys/timezone.32
                0x00000000c001412a                SysTimezone(regs*)
 .text          0x00000000c0014174       0xfc sys/truncate.32
                0x00000000c0014174                SysTruncate(regs*)
 .text          0x00000000c0014270       0x68 sys/write.32
                0x00000000c0014270                SysWrite(regs*)
 .text          0x00000000c00142d8       0x62 sys/wsbe.32
                0x00000000c00142d8                SysWsbe(regs*)
 .text          0x00000000c001433a       0x25 sys/yield.32
                0x00000000c001433a                SysYield(regs*)
 .text          0x00000000c001435f     0x11e6 thr/elf.32
                0x00000000c001435f                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00145ed                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00147ff                Thr::runtimeReferenceHelper()
                0x00000000c0014812                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014861                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014b1f                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015258                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001528a                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00152c1                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00152db                Thr::loadDLL(char const*, bool)
                0x00000000c001550c                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0015545        0x3 
 .text          0x00000000c0015548     0x13d9 thr/prcssthr.32
                0x00000000c0015548                userModeEntryPoint(void*)
                0x00000000c0015570                changeTSS
                0x00000000c00155a0                switchToThread(ThreadControlBlock*)
                0x00000000c0015650                Process::addArgs(char**)
                0x00000000c00156bc                Process::Process(char const*, Process*, char**)
                0x00000000c00156bc                Process::Process(char const*, Process*, char**)
                0x00000000c00158c8                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00158c8                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015a9c                taskStartupFunction
                0x00000000c0015aa8                Semaphore::Semaphore(int)
                0x00000000c0015aa8                Semaphore::Semaphore(int)
                0x00000000c0015ad8                Mutex::Mutex()
                0x00000000c0015ad8                Mutex::Mutex()
                0x00000000c0015aec                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015bf8                Process::createUserThread()
                0x00000000c0015c18                setupMultitasking(void (*)())
                0x00000000c0015d3c                schedule()
                0x00000000c0015dd0                Semaphore::tryAcquire()
                0x00000000c0015ea4                Semaphore::assertLocked(char const*)
                0x00000000c0015f28                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015f50                blockTask(TaskState)
                0x00000000c0015f88                waitTask(int, int*, int)
                0x00000000c0015fcc                milliTenthSleepUntil(unsigned int)
                0x00000000c001606c                milliTenthSleep(unsigned int)
                0x00000000c0016080                sleep(unsigned int)
                0x00000000c001609c                Semaphore::acquire()
                0x00000000c0016164                taskReturned
                0x00000000c00161a8                Thr::processFromPID(int)
                0x00000000c0016254                unblockTask(ThreadControlBlock*)
                0x00000000c0016300                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00165d4                cleanerTaskFunction(void*)
                0x00000000c00166dc                terminateTask(int)
                0x00000000c00167c8                Thr::terminateFromIRQ(int)
                0x00000000c00167d8                Semaphore::release()
 .text          0x00000000c0016921      0xc27 vm86/vm8086.32
                0x00000000c0016921                Vm::inbv(unsigned short)
                0x00000000c0016934                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001696a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001697a                Vm::getSegment(unsigned int)
                0x00000000c0016982                Vm::getOffset(unsigned int)
                0x00000000c0016987                Vm::mainloop2()
                0x00000000c00169c1                Vm::mainVm8086Loop(void*)
                0x00000000c00169d1                Vm::mainloop3(unsigned long)
                0x00000000c00169f7                Vm::initialise8086()
                0x00000000c0016a3a                Vm::finish8086()
                0x00000000c0016a9b                Vm::getOutput8086(unsigned char*)
                0x00000000c0016ac0                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016b79                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016d17                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016db0                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016dc1                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016dd3                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016de4                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016df9                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016e0f                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016e24                Vm::faultHandler(regs*)
 .text          0x00000000c0017548      0xaf0 arch/i386/hal.32
                0x00000000c0017548                noCopro(unsigned long)
                0x00000000c0017549                nmiHandler(regs*, void*)
                0x00000000c0017562                doubleFault(regs*, void*)
                0x00000000c001757b                displayDebugInfo(regs*)
                0x00000000c0017900                HalSystemIdle()
                0x00000000c001797c                displayProgramFault(char const*)
                0x00000000c00179c8                gpFault(regs*, void*)
                0x00000000c0017a2f                pgFault(regs*, void*)
                0x00000000c0017ab8                otherISRHandler(regs*, void*)
                0x00000000c0017aec                opcodeFault(regs*, void*)
                0x00000000c0017b6f                i386SaveCoprocessor(void*)
                0x00000000c0017b83                i386LoadCoprocessor(void*)
                0x00000000c0017b97                x87EmulHandler(regs*, void*)
                0x00000000c0017c34                HalInitialiseCoprocessor()
                0x00000000c0017ce2                HalPanic(char const*)
                0x00000000c0017df6                HalQueryPerformanceCounter()
                0x00000000c0017e11                HalInitialise()
                0x00000000c0017fc7                HalMakeBeep(int)
                0x00000000c0018001                HalGetRand()
                0x00000000c0018004                HalEndOfInterrupt(int)
                0x00000000c0018035                HalRestart()
                0x00000000c0018036                HalShutdown()
                0x00000000c0018037                HalSleep()
 .text          0x00000000c0018038      0x2dc arch/i386/pic.32
                0x00000000c0018038                picIoWait()
                0x00000000c0018040                picDisable()
                0x00000000c0018074                picGetIRQReg(int)
                0x00000000c00180f0                picOpen()
                0x00000000c0018274                picEOI(int)
 .text          0x00000000c0018314      0x674 arch/i386/rtc.32
                0x00000000c0018314                RTC::open(int, int, void*)
                0x00000000c0018318                RTC::close(int, int, void*)
                0x00000000c001831c                RTC::timeInSecondsUTC()
                0x00000000c001832e                RTC::timeInDatetimeUTC()
                0x00000000c0018354                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018392                RTC::~RTC()
                0x00000000c0018392                RTC::~RTC()
                0x00000000c00183b6                RTC::~RTC()
                0x00000000c00183e0                RTC::get_update_in_progress_flag()
                0x00000000c00183fa                RTC::completeRTCRefresh()
                0x00000000c00186da                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018888                rtcIRQHandler(regs*, void*)
                0x00000000c00188ce                RTC::RTC()
                0x00000000c00188ce                RTC::RTC()
 .text          0x00000000c0018988      0x1f4 arch/i386/vga.32
                0x00000000c0018988                HalConsoleScroll(int, int)
                0x00000000c0018a90                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018af4                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018b7c     0x14cf fs/fat/vfslink.32
                0x00000000c0018b7c                FAT::getName()
                0x00000000c0018b84                FAT::tell(void*, unsigned long long*)
                0x00000000c0018bc0                FAT::stat(void*, unsigned long long*)
                0x00000000c0018bfc                FAT::~FAT()
                0x00000000c0018bfc                FAT::~FAT()
                0x00000000c0018c20                FAT::~FAT()
                0x00000000c0018c48                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018cec                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018db0                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018f94                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00191b0                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019370                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00194e0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019540                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00195a0                FAT::close(void*)
                0x00000000c00195f4                FAT::closeDir(void*)
                0x00000000c0019648                FAT::truncate(void*, unsigned long long)
                0x00000000c00196b4                FAT::seek(void*, unsigned long long)
                0x00000000c001970c                fatWrapperReadDisk
                0x00000000c001974c                fatWrapperWriteDisk
                0x00000000c001978c                fatWrapperIoctl
                0x00000000c00198a8                FAT::FAT()
                0x00000000c00198a8                FAT::FAT()
                0x00000000c0019900                FAT::fixFilepath(char*)
                0x00000000c0019940                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019ab4                FAT::openDir(char const*, void**)
                0x00000000c0019b64                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019c5c                FAT::unlink(char const*)
                0x00000000c0019cdc                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019e90                FAT::rename(char const*, char const*)
                0x00000000c0019f5c                FAT::mkdir(char const*)
                0x00000000c0019fdc                FAT::exists(char const*)
 *fill*         0x00000000c001a04b        0x1 
 .text          0x00000000c001a04c       0x94 fs/iso9660/helper.32
                0x00000000c001a04c                isoReadDiscSectorHelper
                0x00000000c001a0a8                iso_kprintf
                0x00000000c001a0c4                iso_kprintfd
 .text          0x00000000c001a0e0      0x71c fs/iso9660/vfslink.32
                0x00000000c001a0e0                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a0e6                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a0ec                ISO9660::getName()
                0x00000000c001a0f2                ISO9660::closeDir(void*)
                0x00000000c001a0fc                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a102                ISO9660::unlink(char const*)
                0x00000000c001a108                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a10e                ISO9660::rename(char const*, char const*)
                0x00000000c001a114                ISO9660::mkdir(char const*)
                0x00000000c001a11a                ISO9660::~ISO9660()
                0x00000000c001a11a                ISO9660::~ISO9660()
                0x00000000c001a13e                ISO9660::~ISO9660()
                0x00000000c001a166                ISO9660::exists(char const*)
                0x00000000c001a17a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a260                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a2a8                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a2ea                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a328                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a37a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a4bc                ISO9660::close(void*)
                0x00000000c001a4ec                ISO9660::openDir(char const*, void**)
                0x00000000c001a5c6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a6e3                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a762                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a7d4                ISO9660::ISO9660()
                0x00000000c001a7d4                ISO9660::ISO9660()
 .text          0x00000000c001a7fc      0x26c hal/sound/sndcard.32
                0x00000000c001a7fc                SoundCard::beginPlayback()
                0x00000000c001a80a                SoundCard::stopPlayback()
                0x00000000c001a818                SoundCard::SoundCard(char const*)
                0x00000000c001a818                SoundCard::SoundCard(char const*)
                0x00000000c001a8b6                SoundCard::~SoundCard()
                0x00000000c001a8b6                SoundCard::~SoundCard()
                0x00000000c001a8da                SoundCard::~SoundCard()
                0x00000000c001a904                SoundCard::configureRates(int, int, int)
                0x00000000c001a934                SoundCard::getSamples16(int, short*)
                0x00000000c001a990                SoundCard::getSamples32(int, int*)
                0x00000000c001aa16                SoundCard::addChannel(SoundPort*)
                0x00000000c001aa54                SoundCard::removeChannel(int)
 .text          0x00000000c001aa68      0x38a hal/sound/sndport.32
                0x00000000c001aa68                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001aa68                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001aaf4                SoundPort::~SoundPort()
                0x00000000c001aaf4                SoundPort::~SoundPort()
                0x00000000c001ab28                SoundPort::unpause()
                0x00000000c001ab34                SoundPort::pause()
                0x00000000c001ab40                SoundPort::getBufferUsed()
                0x00000000c001ab48                SoundPort::getBufferSize()
                0x00000000c001ab50                SoundPort::buffer16(short*, int)
                0x00000000c001abdc                SoundPort::buffer32(int*, int)
                0x00000000c001ac68                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001ad34                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001adf2        0x0 hw/bus/isa.32
 .text          0x00000000c001adf2      0xbb7 hw/bus/pci.32
                0x00000000c001adf2                PCI::open(int, int, void*)
                0x00000000c001ae10                PCI::close(int, int, void*)
                0x00000000c001ae14                PCI::PCI()
                0x00000000c001ae14                PCI::PCI()
                0x00000000c001aeac                PCI::readBAR8(unsigned int, int)
                0x00000000c001aec8                PCI::readBAR16(unsigned int, int)
                0x00000000c001aee6                PCI::readBAR32(unsigned int, int)
                0x00000000c001af02                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001af22                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001af44                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001af64                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001afda                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b084                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0a8                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0d0                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b11a                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b142                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b166                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b18a                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b1b2                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b216                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b2fe                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b5c4                PCI::checkBus(unsigned char)
                0x00000000c001b5e8                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b762                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b8de                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b950                PCI::detect()
 *fill*         0x00000000c001b9a9        0x1 
 .text          0x00000000c001b9aa      0xb9a hw/diskctrl/ide.32
                0x00000000c001b9aa                IDE::close(int, int, void*)
                0x00000000c001b9ae                IDE::IDE()
                0x00000000c001b9ae                IDE::IDE()
                0x00000000c001b9e2                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b9f4                selectDrive(unsigned char, unsigned char)
                0x00000000c001b9f6                IDE::getBase(unsigned char)
                0x00000000c001ba08                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bac8                IDE::read(unsigned char, unsigned char)
                0x00000000c001bb76                IDE::waitInterrupt(unsigned char)
                0x00000000c001bbd8                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bbf4                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bc10                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bc5a                IDE::open(int, int, void*)
                0x00000000c001c098                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c168                IDE::detect()
                0x00000000c001c436                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c4f0                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c544      0x32a hw/diskctrl/satabus.32
                0x00000000c001c544                SATABus::close(int, int, void*)
                0x00000000c001c548                SATABus::detect()
                0x00000000c001c54a                SATABus::SATABus()
                0x00000000c001c54a                SATABus::SATABus()
                0x00000000c001c5d0                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c602                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c64a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c66a                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c694                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c7a4                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c84e                SATABus::open(int, int, void*)
 .text          0x00000000c001c86e      0x93f hw/diskphys/ata.32
                0x00000000c001c86e                ATA::close(int, int, void*)
                0x00000000c001c892                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c894                ATA::ATA()
                0x00000000c001c894                ATA::ATA()
                0x00000000c001c8c2                ATA::flush(bool)
                0x00000000c001c910                ATA::readyForCommand()
                0x00000000c001c95c                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ccf2                ATA::detectCHS()
                0x00000000c001cd1c                ATA::open(int, int, void*)
                0x00000000c001cde8                combineCharAndColour(char, unsigned char)
                0x00000000c001cdf9                combineColours(unsigned char, unsigned char)
                0x00000000c001ce06                ATA::read(unsigned long long, int, void*)
                0x00000000c001cfdc                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d1ad        0x1 
 .text          0x00000000c001d1ae      0x618 hw/diskphys/atapi.32
                0x00000000c001d1ae                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d1b4                ATAPI::close(int, int, void*)
                0x00000000c001d1d8                ATAPI::ATAPI()
                0x00000000c001d1d8                ATAPI::ATAPI()
                0x00000000c001d206                ATAPI::readyForCommand()
                0x00000000c001d258                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d520                ATAPI::diskRemoved()
                0x00000000c001d55a                ATAPI::eject()
                0x00000000c001d5a2                ATAPI::diskInserted()
                0x00000000c001d5ae                ATAPI::detectMedia()
                0x00000000c001d66c                ATAPI::open(int, int, void*)
                0x00000000c001d74c                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d7c6      0x807 hw/diskphys/sata.32
                0x00000000c001d7c6                SATA::close(int, int, void*)
                0x00000000c001d7ea                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d7ec                SATA::open(int, int, void*)
                0x00000000c001d896                SATA::SATA()
                0x00000000c001d896                SATA::SATA()
                0x00000000c001d8c4                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001db18                SATA::read(unsigned long long, int, void*)
                0x00000000c001dd68                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001dfcd        0x1 
 .text          0x00000000c001dfce      0x5d0 hw/diskphys/satapi.32
                0x00000000c001dfce                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001dfd4                SATAPI::close(int, int, void*)
                0x00000000c001dff8                SATAPI::SATAPI()
                0x00000000c001dff8                SATAPI::SATAPI()
                0x00000000c001e026                SATAPI::diskRemoved()
                0x00000000c001e028                SATAPI::diskInserted()
                0x00000000c001e044                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e322                SATAPI::eject()
                0x00000000c001e35e                SATAPI::detectMedia()
                0x00000000c001e3b4                SATAPI::open(int, int, void*)
                0x00000000c001e4b4                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e59e      0x45b hw/intctrl/apic.32
                0x00000000c001e59e                IOAPIC::close(int, int, void*)
                0x00000000c001e5a4                apicGetBase()
                0x00000000c001e5ea                IOAPIC::IOAPIC()
                0x00000000c001e5ea                IOAPIC::IOAPIC()
                0x00000000c001e612                apicOpen()
                0x00000000c001e78e                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e7c0                IOAPIC::read(int)
                0x00000000c001e7e8                IOAPIC::open(int, int, void*)
                0x00000000c001e8ce                IOAPIC::write(int, int)
                0x00000000c001e8fa                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e9f9        0x3 
 .text          0x00000000c001e9fc       0xf0 hw/timer/apictimer.32
                0x00000000c001e9fc                APICTimer::close(int, int, void*)
                0x00000000c001ea04                apicTimerHandler(regs*, void*)
                0x00000000c001ea2c                APICTimer::open(int, int, void*)
                0x00000000c001ea9c                APICTimer::write(int)
                0x00000000c001eac4                APICTimer::APICTimer()
                0x00000000c001eac4                APICTimer::APICTimer()
 .text          0x00000000c001eaec      0x1ad hw/timer/pit.32
                0x00000000c001eaec                PIT::write(int)
                0x00000000c001eb70                pitHandler(regs*, void*)
                0x00000000c001eb98                PIT::open(int, int, void*)
                0x00000000c001ebe8                PIT::close(int, int, void*)
                0x00000000c001ec18                PIT::PIT()
                0x00000000c001ec18                PIT::PIT()
 *fill*         0x00000000c001ec99        0x7 
 .text          0x00000000c001eca0       0x83 arch/i386/avx.32
                0x00000000c001eca0                avxDetect
                0x00000000c001ecca                avxSave
                0x00000000c001ecdb                avxLoad
                0x00000000c001ecec                avxInit
                0x00000000c001ed0e                avxClose
                0x00000000c001ed0f                wouldSheSayYes
 *fill*         0x00000000c001ed23        0xd 
 .text          0x00000000c001ed30      0x2ec arch/i386/interrupt.32
                0x00000000c001ed30                isr0
                0x00000000c001ed40                isr1
                0x00000000c001ed4a                isr2
                0x00000000c001ed54                isr3
                0x00000000c001ed5e                isr4
                0x00000000c001ed68                isr5
                0x00000000c001ed72                isr6
                0x00000000c001ed7c                isr7
                0x00000000c001ed86                isr8
                0x00000000c001ed8e                isr9
                0x00000000c001ed98                isr10
                0x00000000c001eda0                isr11
                0x00000000c001eda8                isr12
                0x00000000c001edb0                isr13
                0x00000000c001edca                isr14
                0x00000000c001edd2                isr15
                0x00000000c001eddc                isr16
                0x00000000c001ede6                isr17
                0x00000000c001edf0                isr18
                0x00000000c001edfa                irq3
                0x00000000c001ee04                irq4
                0x00000000c001ee0e                irq5
                0x00000000c001ee18                irq6
                0x00000000c001ee22                irq7
                0x00000000c001ee2c                irq8
                0x00000000c001ee36                irq9
                0x00000000c001ee40                irq10
                0x00000000c001ee4a                irq11
                0x00000000c001ee54                irq12
                0x00000000c001ee5e                irq13
                0x00000000c001ee68                irq14
                0x00000000c001ee72                irq15
                0x00000000c001ee7c                irq1
                0x00000000c001ee83                irq2
                0x00000000c001ee8a                isr96
                0x00000000c001ee91                irq0
                0x00000000c001ee96                int_common_stub
                0x00000000c001eec8                syscall_common_stub
                0x00000000c001efcc                irq16
                0x00000000c001efd6                irq17
                0x00000000c001efe0                irq18
                0x00000000c001efea                irq19
                0x00000000c001eff4                irq20
                0x00000000c001effe                irq21
                0x00000000c001f008                irq22
                0x00000000c001f012                irq23
 *fill*         0x00000000c001f01c        0x4 
 .text          0x00000000c001f020       0x10 arch/i386/rdrand.32
                0x00000000c001f020                i386GetRDRAND
 .text          0x00000000c001f030       0x39 arch/i386/sse.32
                0x00000000c001f030                absolutelyNoChanceInHell
                0x00000000c001f030                sseDetect
                0x00000000c001f048                sseSave
                0x00000000c001f050                sseLoad
                0x00000000c001f058                sseInit
                0x00000000c001f068                sseClose
 *fill*         0x00000000c001f069        0x7 
 .text          0x00000000c001f070       0x49 arch/i386/x87.32
                0x00000000c001f076                x87Detect
                0x00000000c001f091                x87Save
                0x00000000c001f098                x87Load
                0x00000000c001f09f                x87Init
                0x00000000c001f0b8                x87Close
 *fill*         0x00000000c001f0b9        0x3 
 .text          0x00000000c001f0bc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f0e1        0x0 crtn.32
 *fill*         0x00000000c001f0e1        0x3 
 .text          0x00000000c001f0e4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f0e4                __divdi3
 *fill*         0x00000000c001f22f        0x1 
 .text          0x00000000c001f230      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f230                __moddi3
 *fill*         0x00000000c001f3ae        0x2 
 .text          0x00000000c001f3b0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f3b0                __udivdi3
 *fill*         0x00000000c001f4af        0x1 
 .text          0x00000000c001f4b0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f4b0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f5d0        0x0
 .iplt          0x00000000c001f5d0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f5ca        0xf
 .init          0x00000000c001f5ca        0x3 crti.32
                0x00000000c001f5ca                _init
 .init          0x00000000c001f5cd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f5d2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f5d7        0x2 crtn.32

.fini           0x00000000c001f5d9        0xa
 .fini          0x00000000c001f5d9        0x3 crti.32
                0x00000000c001f5d9                _fini
 .fini          0x00000000c001f5dc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f5e1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f5e4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f5e4       0x23 core/computer.32
                0x00000000c001f5e4                Computer::~Computer()
                0x00000000c001f5e4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f608       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f608       0x2a core/computer.32
                0x00000000c001f608                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f632       0x21
 .text._Z10idleCommonv
                0x00000000c001f632       0x21 core/idle.32
                0x00000000c001f632                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f654        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f654        0x2 core/unixfile.32
                0x00000000c001f654                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f654                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f656       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f656       0x42 core/unixfile.32
                0x00000000c001f656                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f656                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f698       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f698       0xd3 core/unixfile.32
                0x00000000c001f698                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f76c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f76c        0x7 core/unixfile.32
                0x00000000c001f76c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f774       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f774       0xa1 core/unixfile.32
                0x00000000c001f774                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f816        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f816        0x8 core/unixfile.32
                0x00000000c001f816                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f81e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f81e       0x1a hal/device.32
                0x00000000c001f81e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f81e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f838       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f838       0x2a hal/device.32
                0x00000000c001f838                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f862       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f862       0xdc hal/device.32
                0x00000000c001f862                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f93e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f93e       0x42 hal/device.32
                0x00000000c001f93e                LinkedList<Device>::LinkedList()
                0x00000000c001f93e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f980       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f980       0x1c hal/timer.32
                0x00000000c001f980                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f99c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f99c        0x7 hal/timer.32
                0x00000000c001f99c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f9a4       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f9a4       0xbc hal/timer.32
                0x00000000c001f9a4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fa60       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fa60       0xda hal/timer.32
                0x00000000c001fa60                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fb3c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fb3c       0x23 hw/acpi.32
                0x00000000c001fb3c                ACPI::~ACPI()
                0x00000000c001fb3c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fb60       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fb60       0x2a hw/acpi.32
                0x00000000c001fb60                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fb8c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fb8c        0x2 hw/acpi.32
                0x00000000c001fb8c                LinkedList<Device>::~LinkedList()
                0x00000000c001fb8c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fb90       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fb90       0x1c hw/acpi.32
                0x00000000c001fb90                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fbac        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fbac        0x7 hw/acpi.32
                0x00000000c001fbac                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fbb4       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fbb4       0xb8 hw/acpi.32
                0x00000000c001fbb4                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001fc6c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fc6c       0x23 hw/cpu.32
                0x00000000c001fc6c                CPU::~CPU()
                0x00000000c001fc6c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fc90       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fc90       0x2a hw/cpu.32
                0x00000000c001fc90                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fcbc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fcbc        0x8 sys/kill.32
                0x00000000c001fcbc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fcc4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fcc4        0x2 thr/prcssthr.32
                0x00000000c001fcc4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fcc4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fcc8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fcc8       0x49 thr/prcssthr.32
                0x00000000c001fcc8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fcc8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fd14       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fd14       0x42 thr/prcssthr.32
                0x00000000c001fd14                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fd14                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fd56       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fd56       0x23 hw/bus/pci.32
                0x00000000c001fd56                PCI::~PCI()
                0x00000000c001fd56                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fd7a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fd7a       0x2a hw/bus/pci.32
                0x00000000c001fd7a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fda4       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fda4       0x23 hw/diskctrl/ide.32
                0x00000000c001fda4                IDE::~IDE()
                0x00000000c001fda4                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fdc8       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fdc8       0x2a hw/diskctrl/ide.32
                0x00000000c001fdc8                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001fdf2       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001fdf2       0x23 hw/diskctrl/satabus.32
                0x00000000c001fdf2                SATABus::~SATABus()
                0x00000000c001fdf2                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001fe16       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001fe16       0x2a hw/diskctrl/satabus.32
                0x00000000c001fe16                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001fe40       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fe40       0x23 hw/diskphys/ata.32
                0x00000000c001fe40                ATA::~ATA()
                0x00000000c001fe40                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fe64       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fe64       0x2a hw/diskphys/ata.32
                0x00000000c001fe64                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fe8e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fe8e       0x23 hw/diskphys/atapi.32
                0x00000000c001fe8e                ATAPI::~ATAPI()
                0x00000000c001fe8e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001feb2       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001feb2       0x2a hw/diskphys/atapi.32
                0x00000000c001feb2                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001fedc       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001fedc       0x23 hw/diskphys/sata.32
                0x00000000c001fedc                SATA::~SATA()
                0x00000000c001fedc                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001ff00       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001ff00       0x2a hw/diskphys/sata.32
                0x00000000c001ff00                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001ff2a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001ff2a       0x23 hw/diskphys/satapi.32
                0x00000000c001ff2a                SATAPI::~SATAPI()
                0x00000000c001ff2a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001ff4e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001ff4e       0x2a hw/diskphys/satapi.32
                0x00000000c001ff4e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001ff78       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001ff78       0x23 hw/intctrl/apic.32
                0x00000000c001ff78                IOAPIC::~IOAPIC()
                0x00000000c001ff78                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001ff9c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001ff9c       0x2a hw/intctrl/apic.32
                0x00000000c001ff9c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ffc8       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ffc8       0x23 hw/timer/apictimer.32
                0x00000000c001ffc8                APICTimer::~APICTimer()
                0x00000000c001ffc8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ffec       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ffec       0x2a hw/timer/apictimer.32
                0x00000000c001ffec                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020018       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020018       0x23 hw/timer/pit.32
                0x00000000c0020018                PIT::~PIT()
                0x00000000c0020018                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002003c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002003c       0x2a hw/timer/pit.32
                0x00000000c002003c                PIT::~PIT()

.rodata         0x00000000c0020066     0x318a
                0x00000000c0020066                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020066        0x2 
 .ctors         0x00000000c0020068        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c002006c        0x4 core/unixfile.32
 .ctors         0x00000000c0020070        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020074        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020078                end_ctors = .
                0x00000000c0020078                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020078        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002007c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002007c                __DTOR_END__
                0x00000000c0020080                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020080        0x0 
 .rodata        0x00000000c0020080      0x101 acpica/utclib.32
                0x00000000c0020080                AcpiGbl_Ctypes
 *fill*         0x00000000c0020181        0x3 
 .rodata        0x00000000c0020184       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002019c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c00201e6       0x1a 
 .rodata        0x00000000c0020200       0xed fs/fat/ff.32
 *fill*         0x00000000c00202ed       0x13 
 .rodata        0x00000000c0020300      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020700       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002076f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020884       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c00208ec       0x2c core/computer.32
                0x00000000c00208ec                vtable for Computer
 .rodata.str1.4
                0x00000000c0020918       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020948        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020954       0x17 core/main.32
 *fill*         0x00000000c002096b        0x1 
 .rodata.str1.4
                0x00000000c002096c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020a11       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020a69       0x39 core/pipe.32
 *fill*         0x00000000c0020aa2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020aa4       0x1c core/pipe.32
                0x00000000c0020aa4                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020ac0       0x2b core/terminal.32
 *fill*         0x00000000c0020aeb        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020aec       0x1c core/terminal.32
                0x00000000c0020aec                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020b08       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020b2a       0x15 core/unixfile.32
 *fill*         0x00000000c0020b3f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020b40       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020b8b        0x8 core/unixfile.32
 *fill*         0x00000000c0020b93        0x1 
 .rodata.str1.4
                0x00000000c0020b94       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020bb4       0x1c core/unixfile.32
                0x00000000c0020bb4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020bd0       0x1c core/unixfile.32
                0x00000000c0020bd0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020bec      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020e80      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020fa6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0020fd9       0x11 dbg/kconsole.32
 *fill*         0x00000000c0020fd9        0x3 
 .rodata        0x00000000c0020fdc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002112c      0x169 dbg/usban.32
 *fill*         0x00000000c0021295        0x3 
 .rodata.str1.4
                0x00000000c0021298      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00213cf      0x120 fs/symlink.32
                                        0x12c (size before relaxing)
 .rodata.str1.1
                0x00000000c00214ef       0x26 fs/vfs.32
                                         0x28 (size before relaxing)
 *fill*         0x00000000c0021515        0x3 
 .rodata._ZTV10Filesystem
                0x00000000c0021518       0x6c fs/vfs.32
                0x00000000c0021518                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021584       0x1c fs/vfs.32
                0x00000000c0021584                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00215a0       0x1c fs/vfs.32
                0x00000000c00215a0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00215bc       0x2c hal/bus.32
                0x00000000c00215bc                vtable for Bus
 .rodata.str1.1
                0x00000000c00215e8       0x1e hal/clock.32
 *fill*         0x00000000c0021606        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021608       0x3c hal/clock.32
                0x00000000c0021608                vtable for Clock
 *fill*         0x00000000c0021644       0x1c 
 .rodata        0x00000000c0021660       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021690       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00216e8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00216e8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c00216e8       0x2c hal/device.32
                0x00000000c00216e8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021714       0x2c hal/device.32
                0x00000000c0021714                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021740       0x2c hal/diskctrl.32
                0x00000000c0021740                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002176c       0x38 hal/diskphys.32
                0x00000000c002176c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00217a4       0x3e hal/intctrl.32
 *fill*         0x00000000c00217e2        0x2 
 .rodata.str1.4
                0x00000000c00217e4       0x5d hal/intctrl.32
 .rodata        0x00000000c0021841       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021894       0x34 hal/keybrd.32
                0x00000000c0021894                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00218c8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002190c       0x2c hal/logidisk.32
                0x00000000c002190c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021938       0x2c hal/mouse.32
                0x00000000c0021938                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021964       0x34 hal/nic.32
                0x00000000c0021964                vtable for NIC
 .rodata.str1.1
                0x00000000c0021998        0xb hal/partition.32
 *fill*         0x00000000c00219a3        0x1 
 .rodata._ZTV6Serial
                0x00000000c00219a4       0x44 hal/serial.32
                0x00000000c00219a4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00219e8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00219e8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00219e8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00219e8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c00219e8       0x30 hal/timer.32
                0x00000000c00219e8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021a18       0x10 hal/vcache.32
                0x00000000c0021a18                vtable for VCache
 .rodata.str1.1
                0x00000000c0021a28       0x93 hal/video.32
 *fill*         0x00000000c0021abb        0x1 
 .rodata._ZTV5Video
                0x00000000c0021abc       0x4c hal/video.32
                0x00000000c0021abc                vtable for Video
 .rodata.str1.4
                0x00000000c0021b08       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021ba3      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021cf9       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021cf9        0x8 hw/acpi.32
 *fill*         0x00000000c0021cf9        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021cfc       0x2c hw/acpi.32
                0x00000000c0021cfc                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021d28      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0021ea3        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021ea4       0x2c hw/cpu.32
                0x00000000c0021ea4                vtable for CPU
 .rodata.str1.1
                0x00000000c0021ed0       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021f10       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021f4c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0021fdd       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c00220a6       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00220ee       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0022119       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002218f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00221d4        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00221de       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00221ff       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022295       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00222e9       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022315      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00224e1       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022538      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022648       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022648       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022648       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022648        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022648       0xc2 vm86/vm8086.32
 *fill*         0x00000000c002270a        0x2 
 .rodata        0x00000000c002270c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002273c      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c00228db        0x1 
 .rodata.str1.4
                0x00000000c00228dc       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002294f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022964       0x3c arch/i386/rtc.32
                0x00000000c0022964                vtable for RTC
 .rodata.str1.1
                0x00000000c00229a0       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00229e1        0x3 
 .rodata._ZTV3FAT
                0x00000000c00229e4       0x6c fs/fat/vfslink.32
                0x00000000c00229e4                vtable for FAT
 .rodata.str1.1
                0x00000000c0022a50       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022a50      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022b88       0x6c fs/iso9660/vfslink.32
                0x00000000c0022b88                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022bf4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022c38       0x34 hal/sound/sndcard.32
                0x00000000c0022c38                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022c6c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022cab       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022ce3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022d84       0x2c hw/bus/pci.32
                0x00000000c0022d84                vtable for PCI
 .rodata.str1.1
                0x00000000c0022db0       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022e37        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022e38       0x2c hw/diskctrl/ide.32
                0x00000000c0022e38                vtable for IDE
 .rodata.str1.4
                0x00000000c0022e64       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022e88       0x2c hw/diskctrl/satabus.32
                0x00000000c0022e88                vtable for SATABus
 .rodata.str1.1
                0x00000000c0022eb4       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0022ec6        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022ec8       0x38 hw/diskphys/ata.32
                0x00000000c0022ec8                vtable for ATA
 .rodata.str1.1
                0x00000000c0022f00        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022f0d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0022f10       0x38 hw/diskphys/atapi.32
                0x00000000c0022f10                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022f48       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0022fc4       0x38 hw/diskphys/sata.32
                0x00000000c0022fc4                vtable for SATA
 .rodata.str1.1
                0x00000000c0022ffc       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00230e6        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00230e8       0x38 hw/diskphys/satapi.32
                0x00000000c00230e8                vtable for SATAPI
 .rodata        0x00000000c0023120        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0023128       0x2c hw/intctrl/apic.32
                0x00000000c0023128                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023154       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002316f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023170       0x30 hw/timer/apictimer.32
                0x00000000c0023170                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00231a0       0x1d hw/timer/pit.32
 *fill*         0x00000000c00231bd        0x3 
 .rodata._ZTV3PIT
                0x00000000c00231c0       0x30 hw/timer/pit.32
                0x00000000c00231c0                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00231f0      0x7b1
 *(.data)
 .data          0x00000000c00231f0        0x0 crti.32
 .data          0x00000000c00231f0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00231f0                __dso_handle
 .data          0x00000000c00231f4        0x0 acpica/utclib.32
 .data          0x00000000c00231f4        0x0 core/malloc.32
 .data          0x00000000c00231f4        0x0 libk/ctype.32
 .data          0x00000000c00231f4        0x0 libk/string.32
 .data          0x00000000c00231f4        0x0 fs/fat/diskio.32
 .data          0x00000000c00231f4        0x0 fs/fat/ff.32
 .data          0x00000000c00231f4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00231f4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00231f4        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00231f4        0x0 core/computer.32
 .data          0x00000000c00231f4        0x0 core/gdt.32
 .data          0x00000000c00231f4        0x0 core/idle.32
 .data          0x00000000c00231f4        0x0 core/idt.32
 .data          0x00000000c00231f4        0x4 core/kheap.32
 .data          0x00000000c00231f8        0x0 core/main.32
 .data          0x00000000c00231f8        0x4 core/physmgr.32
                0x00000000c00231f8                Phys::bitmap
 .data          0x00000000c00231fc        0x0 core/pipe.32
 *fill*         0x00000000c00231fc        0x4 
 .data          0x00000000c0023200       0x60 core/terminal.32
                0x00000000c0023200                VgaText::hiddenOut
                0x00000000c0023220                ansiToVGAMappings
 .data          0x00000000c0023260        0x0 core/tss.32
 .data          0x00000000c0023260        0x4 core/unixfile.32
                0x00000000c0023260                UnixFile::nextFd
 .data          0x00000000c0023264       0x15 core/virtmgr.32
                0x00000000c0023264                Virt::pageAllocPtr
                0x00000000c0023268                Virt::bitmap
                0x00000000c002326c                Virt::swapfileSectorsPerPage
                0x00000000c0023270                Virt::swapfileLength
                0x00000000c0023274                Virt::swapfileSector
                0x00000000c0023278                Virt::swapfileDrive
 *fill*         0x00000000c0023279        0x3 
 .data          0x00000000c002327c        0x4 coreobjs/c++.32
                0x00000000c002327c                __stack_chk_guard
 .data          0x00000000c0023280        0x0 dbg/kconsole.32
 .data          0x00000000c0023280       0x28 dbg/usban.32
                0x00000000c0023280                KiUsbanTypeMismatchTypes
 .data          0x00000000c00232a8        0x0 fs/symlink.32
 .data          0x00000000c00232a8        0x0 fs/vfs.32
 .data          0x00000000c00232a8        0x0 hal/bus.32
 .data          0x00000000c00232a8        0x0 hal/buzzer.32
 .data          0x00000000c00232a8        0x0 hal/clock.32
 .data          0x00000000c00232a8        0x0 hal/device.32
 .data          0x00000000c00232a8        0x0 hal/diskctrl.32
 .data          0x00000000c00232a8        0x0 hal/diskphys.32
 .data          0x00000000c00232a8        0x0 hal/fpu.32
 .data          0x00000000c00232a8        0x0 hal/intctrl.32
 .data          0x00000000c00232a8        0x0 hal/keybrd.32
 .data          0x00000000c00232a8        0x0 hal/logidisk.32
 .data          0x00000000c00232a8        0x0 hal/mouse.32
 .data          0x00000000c00232a8        0x0 hal/nic.32
 .data          0x00000000c00232a8        0x0 hal/partition.32
 .data          0x00000000c00232a8        0x0 hal/serial.32
 .data          0x00000000c00232a8        0x0 hal/timer.32
 .data          0x00000000c00232a8        0x0 hal/vcache.32
 .data          0x00000000c00232a8        0x0 hal/video.32
 .data          0x00000000c00232a8       0x10 hw/acpi.32
                0x00000000c00232a8                legacyIRQRemaps
 .data          0x00000000c00232b8        0x4 hw/cpu.32
                0x00000000c00232b8                lastCode
 .data          0x00000000c00232bc        0x0 krnl/atexit.32
 *fill*         0x00000000c00232bc        0x4 
 .data          0x00000000c00232c0      0x142 krnl/bootmsg.32
                0x00000000c00232c0                KiSplashScreen
 .data          0x00000000c0023402        0x0 krnl/compat.32
 *fill*         0x00000000c0023402       0x1e 
 .data          0x00000000c0023420       0x4d krnl/env.32
                0x00000000c0023420                defaultSysEnv
 .data          0x00000000c002346d        0x0 krnl/inlines.32
 .data          0x00000000c002346d        0x0 krnl/panic.32
 .data          0x00000000c002346d        0x0 krnl/powctrl.32
 .data          0x00000000c002346d        0x0 krnl/random.32
 .data          0x00000000c002346d        0x0 krnl/resolve.32
 *fill*         0x00000000c002346d       0x13 
 .data          0x00000000c0023480       0x4c krnl/signal.32
                0x00000000c0023480                KiDefaultSignalHandlers
 *fill*         0x00000000c00234cc       0x14 
 .data          0x00000000c00234e0       0xfc krnl/syscalls.32
                0x00000000c00234e0                systemCallHandlers
 .data          0x00000000c00235dc        0x0 net/ethernet.32
 *fill*         0x00000000c00235dc        0x4 
 .data          0x00000000c00235e0      0x100 reg/cm.32
                0x00000000c00235e0                CmComponents
 .data          0x00000000c00236e0        0x0 reg/registry.32
 .data          0x00000000c00236e0        0x0 sys/eject.32
 .data          0x00000000c00236e0        0x0 sys/exit.32
 .data          0x00000000c00236e0        0x0 sys/getcwd.32
 .data          0x00000000c00236e0        0x0 sys/getpid.32
 .data          0x00000000c00236e0        0x0 sys/getramdata.32
 .data          0x00000000c00236e0        0x0 sys/getvgaptr.32
 .data          0x00000000c00236e0        0x0 sys/kill.32
 .data          0x00000000c00236e0        0x0 sys/loaddll.32
 .data          0x00000000c00236e0        0x0 sys/read.32
 .data          0x00000000c00236e0        0x0 sys/registersignal.32
 .data          0x00000000c00236e0        0x0 sys/registry.32
 .data          0x00000000c00236e0        0x0 sys/sbrk.32
 .data          0x00000000c00236e0        0x0 sys/setcwd.32
 .data          0x00000000c00236e0        0x0 sys/settime.32
 .data          0x00000000c00236e0        0x0 sys/symlink.32
 .data          0x00000000c00236e0        0x0 sys/timezone.32
 .data          0x00000000c00236e0        0x0 sys/truncate.32
 .data          0x00000000c00236e0        0x0 sys/write.32
 .data          0x00000000c00236e0        0x0 sys/wsbe.32
 .data          0x00000000c00236e0        0x0 sys/yield.32
 .data          0x00000000c00236e0        0x0 thr/elf.32
 .data          0x00000000c00236e0        0x4 thr/prcssthr.32
                0x00000000c00236e0                Thr::nextPID
 .data          0x00000000c00236e4        0x0 vm86/vm8086.32
 *fill*         0x00000000c00236e4       0x1c 
 .data          0x00000000c0023700      0x2a0 arch/i386/hal.32
                0x00000000c0023700                exceptionNames
 .data          0x00000000c00239a0        0x0 arch/i386/pic.32
 .data          0x00000000c00239a0        0x0 arch/i386/rtc.32
 .data          0x00000000c00239a0        0x0 arch/i386/vga.32
 .data          0x00000000c00239a0        0x0 fs/fat/vfslink.32
 .data          0x00000000c00239a0        0x0 fs/iso9660/helper.32
 .data          0x00000000c00239a0        0x1 fs/iso9660/vfslink.32
                0x00000000c00239a0                recentDriveletter
 .data          0x00000000c00239a1        0x0 hal/sound/sndcard.32
 .data          0x00000000c00239a1        0x0 hal/sound/sndport.32
 .data          0x00000000c00239a1        0x0 hw/bus/isa.32
 .data          0x00000000c00239a1        0x0 hw/bus/pci.32
 .data          0x00000000c00239a1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00239a1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00239a1        0x0 hw/diskphys/ata.32
 .data          0x00000000c00239a1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00239a1        0x0 hw/diskphys/sata.32
 .data          0x00000000c00239a1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00239a1        0x0 hw/intctrl/apic.32
 .data          0x00000000c00239a1        0x0 hw/timer/apictimer.32
 .data          0x00000000c00239a1        0x0 hw/timer/pit.32
 .data          0x00000000c00239a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00239a1        0x0 crtn.32
 .data          0x00000000c00239a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00239a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00239a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00239a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00239a4        0x0
 .got           0x00000000c00239a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00239a4        0x0
 .got.plt       0x00000000c00239a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00239a4        0x0
 .igot.plt      0x00000000c00239a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00239a4        0x0
 .tm_clone_table
                0x00000000c00239a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00239a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00239a1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00239a1        0x3 
 .eh_frame      0x00000000c00239a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00239a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00239a4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00239fc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0023a3c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0023aa8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x5107
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0025fb4        0xc 
 .bss           0x00000000c0025fc0      0x444 fs/symlink.32
                0x00000000c0025fc0                KiNumWaitingRoomSymlinks
                0x00000000c0025fe0                KiNewlyCreatedIDs
                0x00000000c0026000                KiNewlyCreatedSymlinks
                0x00000000c0026400                KiBaseSymlinkID
 .bss           0x00000000c0026404        0x4 fs/vfs.32
                0x00000000c0026404                installedFilesystems
 .bss           0x00000000c0026408        0x0 hal/bus.32
 .bss           0x00000000c0026408        0x0 hal/buzzer.32
 .bss           0x00000000c0026408        0x8 hal/clock.32
                0x00000000c0026408                User::dstOn
                0x00000000c0026409                User::timezoneHalfHourOffset
                0x00000000c002640c                User::timezoneHourOffset
 .bss           0x00000000c0026410        0x0 hal/device.32
 .bss           0x00000000c0026410        0x0 hal/diskctrl.32
 .bss           0x00000000c0026410        0x0 hal/diskphys.32
 .bss           0x00000000c0026410        0x0 hal/fpu.32
 *fill*         0x00000000c0026410       0x10 
 .bss           0x00000000c0026420     0x2000 hal/intctrl.32
                0x00000000c0026420                INT_contexts
                0x00000000c0027420                INT_handlers
 .bss           0x00000000c0028420      0x429 hal/keybrd.32
                0x00000000c0028420                keyboardWaitingTaskList
                0x00000000c0028424                keyboardSetupYet
                0x00000000c0028428                guiKeyboardHandler
                0x00000000c0028440                keystates
 *fill*         0x00000000c0028849       0x17 
 .bss           0x00000000c0028860       0x88 hal/logidisk.32
                0x00000000c0028860                diskAssignments
                0x00000000c0028880                disks
 .bss           0x00000000c00288e8        0x4 hal/mouse.32
                0x00000000c00288e8                guiMouseHandler
 .bss           0x00000000c00288ec        0x0 hal/nic.32
 .bss           0x00000000c00288ec        0x0 hal/partition.32
 .bss           0x00000000c00288ec        0x0 hal/serial.32
 .bss           0x00000000c00288ec        0x4 hal/timer.32
                0x00000000c00288ec                milliTenthsSinceBoot
 .bss           0x00000000c00288f0        0x0 hal/vcache.32
 .bss           0x00000000c00288f0        0x4 hal/video.32
                0x00000000c00288f0                screen
 *fill*         0x00000000c00288f4        0xc 
 .bss           0x00000000c0028900      0x480 hw/acpi.32
                0x00000000c0028900                systemSleepFunction
                0x00000000c0028904                systemResetFunction
                0x00000000c0028908                systemShutdownFunction
                0x00000000c002890c                nextACPITable
                0x00000000c0028920                acpiTables
                0x00000000c0028b20                usingXSDT
                0x00000000c0028b24                MADTpointer
                0x00000000c0028b28                RSDTpointer
                0x00000000c0028b2c                RSDPpointer
                0x00000000c0028b30                nextAPICNMI
                0x00000000c0028b40                apicNMIInfo
                0x00000000c0028bc0                legacyIRQFlags
                0x00000000c0028be0                ioapicDiscoveryNumber
                0x00000000c0028c00                ioapicFoundInMADT
                0x00000000c0028c20                ioapicAddresses
                0x00000000c0028ca0                ioapicGSIBase
                0x00000000c0028d20                processorDiscoveryNumber
                0x00000000c0028d40                matchingAPICID
                0x00000000c0028d60                processorID
 .bss           0x00000000c0028d80       0x10 hw/cpu.32
                0x00000000c0028d80                lastD
                0x00000000c0028d84                lastC
                0x00000000c0028d88                lastB
                0x00000000c0028d8c                lastA
 *fill*         0x00000000c0028d90       0x10 
 .bss           0x00000000c0028da0       0xe0 krnl/atexit.32
                0x00000000c0028da0                KiNextAtexitHandler
                0x00000000c0028dc0                KiAtexitContexts
                0x00000000c0028e20                KiAtexitHandlers
 .bss           0x00000000c0028e80        0x0 krnl/bootmsg.32
 .bss           0x00000000c0028e80        0x0 krnl/compat.32
 .bss           0x00000000c0028e80        0x8 krnl/env.32
                0x00000000c0028e80                KeUserEnv
                0x00000000c0028e84                KeSystemEnv
 .bss           0x00000000c0028e88        0x0 krnl/inlines.32
 .bss           0x00000000c0028e88        0x1 krnl/panic.32
                0x00000000c0028e88                KeIsKernelInPanic
 *fill*         0x00000000c0028e89       0x17 
 .bss           0x00000000c0028ea0       0x48 krnl/powctrl.32
                0x00000000c0028ea0                powCtrlOnBattery
                0x00000000c0028ec0                currentPowerSettings
                0x00000000c0028ee4                secondsSinceLastUserIO
 .bss           0x00000000c0028ee8        0x8 krnl/random.32
                0x00000000c0028ee8                kiRandSeed
 .bss           0x00000000c0028ef0        0x0 krnl/resolve.32
 .bss           0x00000000c0028ef0        0x0 krnl/signal.32
 .bss           0x00000000c0028ef0        0x0 krnl/syscalls.32
 .bss           0x00000000c0028ef0        0x0 net/ethernet.32
 .bss           0x00000000c0028ef0        0x4 reg/cm.32
 .bss           0x00000000c0028ef4        0x0 reg/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/eject.32
 .bss           0x00000000c0028ef4        0x0 sys/exit.32
 .bss           0x00000000c0028ef4        0x0 sys/getcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/getpid.32
 .bss           0x00000000c0028ef4        0x0 sys/getramdata.32
 .bss           0x00000000c0028ef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c0028ef4        0x0 sys/kill.32
 .bss           0x00000000c0028ef4        0x0 sys/loaddll.32
 .bss           0x00000000c0028ef4        0x0 sys/read.32
 .bss           0x00000000c0028ef4        0x0 sys/registersignal.32
 .bss           0x00000000c0028ef4        0x0 sys/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/sbrk.32
 .bss           0x00000000c0028ef4        0x0 sys/setcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/settime.32
 .bss           0x00000000c0028ef4        0x0 sys/symlink.32
 .bss           0x00000000c0028ef4        0x0 sys/timezone.32
 .bss           0x00000000c0028ef4        0x0 sys/truncate.32
 .bss           0x00000000c0028ef4        0x0 sys/write.32
 .bss           0x00000000c0028ef4        0x0 sys/wsbe.32
 .bss           0x00000000c0028ef4        0x0 sys/yield.32
 *fill*         0x00000000c0028ef4        0xc 
 .bss           0x00000000c0028f00      0x7a4 thr/elf.32
                0x00000000c0028f00                Thr::driverLookupNext
                0x00000000c0028f20                Thr::driverLookupLen
                0x00000000c0029120                Thr::driverLookupAddr
                0x00000000c0029320                Thr::driverNameLookup
                0x00000000c0029520                Thr::kernelSymbols
                0x00000000c00295a0                Thr::kernelStringTable
                0x00000000c0029620                Thr::kernelSymbolTable
                0x00000000c00296a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00296a4        0x4 
 .bss           0x00000000c00296a8       0x68 thr/prcssthr.32
                0x00000000c00296a8                cleanerThread
                0x00000000c00296ac                weNeedTheCleanerToNotBlock
                0x00000000c00296b0                retValLockStuff
                0x00000000c00296b4                retValSchedLock
                0x00000000c00296b8                lockStuffLock
                0x00000000c00296bc                schedulerLock
                0x00000000c00296c0                taskSwitchesPostponedFlag
                0x00000000c00296c4                postponeTaskSwitchesCounter
                0x00000000c00296c8                irqDisableCounter
                0x00000000c00296cc                terminatedTaskList
                0x00000000c00296d8                sleepingTaskList
                0x00000000c00296e4                taskList
                0x00000000c00296f0                kernelProcess
 *fill*         0x00000000c0029710       0x10 
 .bss           0x00000000c0029720       0x40 vm86/vm8086.32
                0x00000000c0029720                Vm::vmRetV
                0x00000000c0029724                Vm::vmDone
                0x00000000c0029725                Vm::vmReady
                0x00000000c0029728                Vm::vm86Thread
                0x00000000c002972c                Vm::vmToHostCommsPtr
                0x00000000c0029740                Vm::vmToHostComms
 .bss           0x00000000c0029760       0x18 arch/i386/hal.32
                0x00000000c0029760                apic
                0x00000000c0029764                guiPanicHandler
                0x00000000c0029768                fpuOwner
                0x00000000c002976c                coproLoadFunc
                0x00000000c0029770                coproSaveFunc
                0x00000000c0029774                gpFaultIntercept
 .bss           0x00000000c0029778        0x0 arch/i386/pic.32
 .bss           0x00000000c0029778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002977a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002977a        0x6 
 .bss           0x00000000c0029780       0xf0 fs/fat/vfslink.32
                0x00000000c0029780                FAT::fats
                0x00000000c00297a0                FAT::vfsToFatRemaps
                0x00000000c0029820                fatToVFSRemaps
 .bss           0x00000000c0029870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0029870       0x10 
 .bss           0x00000000c0029880      0x820 fs/iso9660/vfslink.32
                0x00000000c0029880                iso9660Owner
                0x00000000c0029884                recentSector
                0x00000000c00298a0                recentBuffer
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002a0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002a0a0        0xd hw/bus/pci.32
                0x00000000c002a0a0                thePCI
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002a0ad        0x3 
 .bss           0x00000000c002a0b0        0x8 hw/diskphys/ata.32
                0x00000000c002a0b0                ataSectorsWritten
                0x00000000c002a0b4                ataSectorsRead
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002a0b8        0x8 
 .bss           0x00000000c002a0c0       0x41 hw/intctrl/apic.32
                0x00000000c002a0c0                noOfIOAPICs
                0x00000000c002a0e0                ioapics
                0x00000000c002a100                IOAPICsSetupYet
 .bss           0x00000000c002a101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002a101        0x3 
 .bss           0x00000000c002a104        0x4 hw/timer/pit.32
                0x00000000c002a104                pitFreq
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002a108        0x0 crtn.32
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002a108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002f20f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
