Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1df1a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x79e acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004c0                memset
                0x00000000c0000530                strlen
                0x00000000c0000560                strpbrk
                0x00000000c00005a0                strtok
                0x00000000c00005f0                strcpy
                0x00000000c0000620                strncpy
                0x00000000c00006d0                strcmp
                0x00000000c0000720                strchr
                0x00000000c0000750                strncmp
                0x00000000c00007b0                strcat
                0x00000000c00007e0                strncat
                0x00000000c0000840                strstr
                0x00000000c00008a0                toupper
                0x00000000c00008c0                tolower
                0x00000000c00008e0                simple_strtoul
 .text          0x00000000c0000b1e      0xfad core/malloc.32
                0x00000000c0000c89                dlfree
                0x00000000c0000fe4                dlmalloc
                0x00000000c0001521                dlrealloc
                0x00000000c00016c4                dlmemalign
                0x00000000c00017e7                dlcalloc
                0x00000000c0001881                dlcfree
                0x00000000c0001886                dlindependent_calloc
                0x00000000c00018ab                dlindependent_comalloc
                0x00000000c00018c2                dlvalloc
                0x00000000c00018ed                dlpvalloc
                0x00000000c0001923                dlmalloc_trim
                0x00000000c0001930                dlmalloc_usable_size
                0x00000000c0001961                dlmallinfo
                0x00000000c0001a30                dlmalloc_stats
                0x00000000c0001a41                dlmallopt
 *fill*         0x00000000c0001acb        0x1 
 .text          0x00000000c0001acc      0x1f2 libk/ctype.32
                0x00000000c0001acc                isblank
                0x00000000c0001aec                iscntrl
                0x00000000c0001b0c                isdigit
                0x00000000c0001b28                islower
                0x00000000c0001b44                isspace
                0x00000000c0001b6c                isupper
                0x00000000c0001b88                isalpha
                0x00000000c0001bb8                isalnum
                0x00000000c0001be8                ispunct
                0x00000000c0001c28                isgraph
                0x00000000c0001c58                isprint
                0x00000000c0001c80                isxdigit
 .text          0x00000000c0001cbe        0x0 libk/string.32
 .text          0x00000000c0001cbe       0x51 fs/fat/diskio.32
                0x00000000c0001cbe                disk_status
                0x00000000c0001cc1                disk_initialize
                0x00000000c0001cc4                disk_read
                0x00000000c0001cda                disk_write
                0x00000000c0001cf0                disk_ioctl
 .text          0x00000000c0001d0f     0x3d4b fs/fat/ff.32
                0x00000000c0003aab                f_mount
                0x00000000c0003b0d                f_open
                0x00000000c0003dd8                f_read
                0x00000000c0003fd7                f_write
                0x00000000c000420b                f_sync
                0x00000000c00042c0                f_close
                0x00000000c00042ef                f_lseek
                0x00000000c0004496                f_opendir
                0x00000000c0004561                f_closedir
                0x00000000c0004583                f_readdir
                0x00000000c0004615                f_stat
                0x00000000c0004694                f_getfree
                0x00000000c0004796                f_truncate
                0x00000000c000487a                f_unlink
                0x00000000c000499c                f_mkdir
                0x00000000c0004b37                f_rename
                0x00000000c0004ced                f_chmod
                0x00000000c0004d96                f_utime
                0x00000000c0004e44                f_getlabel
                0x00000000c0004f95                f_setlabel
                0x00000000c0005125                f_expand
                0x00000000c0005285                f_mkfs
 *fill*         0x00000000c0005a5a        0x2 
 .text          0x00000000c0005a5c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a5c                ff_memalloc
                0x00000000c0005a74                ff_memfree
 *fill*         0x00000000c0005a8b        0x1 
 .text          0x00000000c0005a8c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a8c                ff_uni2oem
                0x00000000c0005b2c                ff_oem2uni
                0x00000000c0005ba4                ff_wtoupper
 .text          0x00000000c0005d34      0xd2f fs/iso9660/iso9660.32
                0x00000000c0005f79                isoReadDiscSector
                0x00000000c0006014                strnicmp
                0x00000000c00062c7                stricmp
                0x00000000c0006313                iso_open
                0x00000000c000639d                iso_close
                0x00000000c00063bb                iso_read
                0x00000000c00064d1                iso_seek
                0x00000000c0006555                iso_tell
                0x00000000c0006586                iso_total
                0x00000000c00065b1                fn_postprocess
                0x00000000c00065d7                iso_readdir
                0x00000000c000682e                iso_reset
                0x00000000c000684b                init_percd
                0x00000000c0006945                iso_ioctl
                0x00000000c000695d                fs_iso9660_init
                0x00000000c00069f3                fs_iso9660_shutdown
 *fill*         0x00000000c0006a63        0x1 
 .text          0x00000000c0006a64      0x685 core/computer.32
                0x00000000c0006a64                Computer::close(int, int, void*)
                0x00000000c0006aa9                Krnl::firstTask()
                0x00000000c0006bdc                Computer::Computer()
                0x00000000c0006bdc                Computer::Computer()
                0x00000000c0006c8e                Computer::setBootMessage(char const*)
                0x00000000c0006c90                Computer::detectFeatures()
                0x00000000c0006e9a                Computer::displayFeatures()
                0x00000000c0006e9c                Computer::rdmsr(unsigned int)
                0x00000000c0006ec8                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006f00                Computer::shutdown()
                0x00000000c0006f18                Computer::restart()
                0x00000000c0006f30                Computer::sleep()
                0x00000000c0006f44                Computer::nmiEnabled()
                0x00000000c0006f50                Computer::readCMOS(unsigned char)
                0x00000000c0006f6a                Computer::enableNMI(bool)
                0x00000000c0006f82                Computer::open(int, int, void*)
                0x00000000c0007056                Computer::disableNMI()
                0x00000000c0007066                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0007084                Computer::handleNMI()
 *fill*         0x00000000c00070e9        0x1 
 .text          0x00000000c00070ea      0x1cf core/gdt.32
                0x00000000c00070ea                GDTEntry::setBase(unsigned int)
                0x00000000c0007106                GDTEntry::setLimit(unsigned int)
                0x00000000c0007124                GDT::GDT()
                0x00000000c0007124                GDT::GDT()
                0x00000000c000713a                GDT::addEntry(GDTEntry)
                0x00000000c000715c                GDT::getNumberOfEntries()
                0x00000000c0007164                GDT::flush()
                0x00000000c0007186                GDT::setup()
 .text          0x00000000c00072b9       0x1d core/idle.32
                0x00000000c00072b9                idleFunction(void*)
 *fill*         0x00000000c00072d6        0x2 
 .text          0x00000000c00072d8      0x464 core/idt.32
                0x00000000c00072d8                IDTEntry::IDTEntry(bool)
                0x00000000c00072d8                IDTEntry::IDTEntry(bool)
                0x00000000c000734a                IDTEntry::setOffset(unsigned int)
                0x00000000c0007360                IDT::IDT()
                0x00000000c0007360                IDT::IDT()
                0x00000000c0007362                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000736a                IDT::addEntry(IDTEntry, int)
                0x00000000c0007384                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00073bc                IDT::flush()
                0x00000000c00073d6                IDT::setup()
 .text          0x00000000c000773c      0x183 core/kheap.32
                0x00000000c000773c                sbrk
                0x00000000c00077d1                mmap
                0x00000000c00077e7                munmap
                0x00000000c00077fd                liballoc_lock()
                0x00000000c000780a                liballoc_unlock()
                0x00000000c000781e                liballoc_alloc(int)
                0x00000000c0007836                liballoc_free(void*, int)
                0x00000000c0007851                realloc
                0x00000000c0007865                malloc
                0x00000000c0007875                free
                0x00000000c0007885                rfree
                0x00000000c0007895                calloc
 .text          0x00000000c00078bf       0xc3 core/main.32
                0x00000000c00078bf                KeEntryPoint
 .text          0x00000000c0007982      0x5dc core/physmgr.32
                0x00000000c0007982                Phys::allocateDMA(unsigned long)
                0x00000000c0007a59                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007a8c                Phys::setPageState(unsigned long, bool)
                0x00000000c0007abe                Phys::getPageState(unsigned long)
                0x00000000c0007adf                Phys::freePage(unsigned long)
                0x00000000c0007b41                Phys::allocatePage()
                0x00000000c0007bff                Phys::allocateContiguousPages(int)
                0x00000000c0007c5b                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007c93                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007f5e      0x273 core/pipe.32
                0x00000000c0007f5e                Pipe::isAtty()
                0x00000000c0007f62                Pipe::~Pipe()
                0x00000000c0007f62                Pipe::~Pipe()
                0x00000000c0007f86                Pipe::~Pipe()
                0x00000000c0007fae                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000806e                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000816a                Pipe::Pipe(int)
                0x00000000c000816a                Pipe::Pipe(int)
 *fill*         0x00000000c00081d1        0x1 
 .text          0x00000000c00081d2      0xaba core/terminal.32
                0x00000000c00081d2                VgaText::isAtty()
                0x00000000c00081d6                VgaText::~VgaText()
                0x00000000c00081d6                VgaText::~VgaText()
                0x00000000c00081fa                VgaText::~VgaText()
                0x00000000c0008224                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008244                setTerminalScrollLock(bool)
                0x00000000c0008245                doTerminalCycle()
                0x00000000c0008246                addToTerminalCycle(VgaText*)
                0x00000000c0008247                scrollTerminalScrollLock(int)
                0x00000000c0008248                VgaText::updateTitle()
                0x00000000c000824a                VgaText::load()
                0x00000000c000824c                VgaText::updateCursor()
                0x00000000c0008262                VgaText::doANSI_SGR(int)
                0x00000000c00082d6                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00082e6                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00082f6                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0008316                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008322                VgaText::setTitleColour(VgaColour)
                0x00000000c000832e                VgaText::setTitle(char*)
                0x00000000c0008330                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008342                VgaText::scrollScreen()
                0x00000000c00083d4                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00083e6                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008476                VgaText::getCursorX()
                0x00000000c000847e                VgaText::getCursorY()
                0x00000000c0008486                VgaText::setCursor(int, int)
                0x00000000c000849d                setActiveTerminal(VgaText*)
                0x00000000c00084e8                VgaText::clearScreen()
                0x00000000c0008536                VgaText::setCursorX(int)
                0x00000000c000854e                VgaText::setCursorY(int)
                0x00000000c0008566                VgaText::incrementCursor(bool)
                0x00000000c00085ba                VgaText::decrementCursor(bool)
                0x00000000c00085dc                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00086aa                VgaText::putchar(char)
                0x00000000c0008796                VgaText::putx(unsigned int)
                0x00000000c00087dc                VgaText::puts(char const*)
                0x00000000c0008802                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000884e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00089a0                VgaText::VgaText(char const*)
                0x00000000c00089a0                VgaText::VgaText(char const*)
                0x00000000c0008af0                VgaText::receiveKey(unsigned char)
                0x00000000c0008c66                VgaText::doUpdate()
                0x00000000c0008c67                newTerminal(char*)
 .text          0x00000000c0008c8c      0x1a1 core/tss.32
                0x00000000c0008c8c                TSS::TSS()
                0x00000000c0008c8c                TSS::TSS()
                0x00000000c0008c9c                TSS::setESP(unsigned long)
                0x00000000c0008cb0                TSS::flush()
                0x00000000c0008cd0                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008e2d        0x1 
 .text          0x00000000c0008e2e      0x4c2 core/unixfile.32
                0x00000000c0008e2e                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008e84                ReservedFilename::isAtty()
                0x00000000c0008ea0                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008efe                UnixFile::getFileDescriptor()
                0x00000000c0008f06                UnixFile::UnixFile(int)
                0x00000000c0008f06                UnixFile::UnixFile(int)
                0x00000000c00090b6                ReservedFilename::ReservedFilename(int)
                0x00000000c00090b6                ReservedFilename::ReservedFilename(int)
                0x00000000c00090e8                UnixFile::~UnixFile()
                0x00000000c00090e8                UnixFile::~UnixFile()
                0x00000000c0009180                UnixFile::~UnixFile()
                0x00000000c00091a8                ReservedFilename::~ReservedFilename()
                0x00000000c00091a8                ReservedFilename::~ReservedFilename()
                0x00000000c00091cc                ReservedFilename::~ReservedFilename()
                0x00000000c00091f3                getFromFileDescriptor(int)
 .text          0x00000000c00092f0     0x11d0 core/virtmgr.32
                0x00000000c00092f0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009325                Virt::getPageState(unsigned long)
                0x00000000c0009349                Virt::allocateKernelVirtualPages(int)
                0x00000000c000945a                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009478                Virt::swapIDToSector(unsigned long)
                0x00000000c000948a                Virt::allocateSwapfilePage()
                0x00000000c0009508                Virt::virtualMemorySetup()
                0x00000000c0009553                Virt::setupPageSwapping(int)
                0x00000000c00095c4                VAS::VAS(VAS*)
                0x00000000c00095c4                VAS::VAS(VAS*)
                0x00000000c00095f2                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000961e                VAS::getPageTableEntry(unsigned long)
                0x00000000c000963d                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009762                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009786                VAS::virtualToPhysical(unsigned long)
                0x00000000c00097a0                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c00097e0                VAS::VAS()
                0x00000000c00097e0                VAS::VAS()
                0x00000000c000984a                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000987e                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00098a8                VAS::~VAS()
                0x00000000c00098a8                VAS::~VAS()
                0x00000000c0009a0c                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009b10                VAS::allocatePages(int, int)
                0x00000000c0009ce8                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009d06                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009dcc                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009eba                VAS::VAS(bool)
                0x00000000c0009eba                VAS::VAS(bool)
                0x00000000c000a13a                VAS::evict(unsigned long)
                0x00000000c000a1fc                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a2ea                VAS::scanForEviction()
                0x00000000c000a3ca                mapVASFirstTime
 .text          0x00000000c000a4c0       0x5f coreobjs/c++.32
                0x00000000c000a4c0                __cxa_atexit
                0x00000000c000a4c3                __cxa_finalize
                0x00000000c000a4c4                __stack_chk_fail
                0x00000000c000a4fa                __cxa_pure_virtual
                0x00000000c000a50b                operator new[](unsigned long)
                0x00000000c000a510                operator delete(void*, unsigned long)
                0x00000000c000a515                operator delete[](void*)
                0x00000000c000a51a                operator delete[](void*, unsigned long)
 .text          0x00000000c000a51f      0x21c dbg/kconsole.32
                0x00000000c000a51f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a58a                Dbg::logc(char)
                0x00000000c000a5aa                Dbg::logs(char*)
                0x00000000c000a5c7                Dbg::logWriteInt(unsigned int)
                0x00000000c000a5e5                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a606                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a73b        0x1 
 .text          0x00000000c000a73c      0xc5c fs/vfs.32
                0x00000000c000a73c                File::read(unsigned long long, void*, int*)
                0x00000000c000a794                File::write(unsigned long long, void*, int*)
                0x00000000c000a7ec                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a844                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a872                File::isAtty()
                0x00000000c000a876                Directory::isAtty()
                0x00000000c000a87a                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a880                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a886                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a88c                File::~File()
                0x00000000c000a88c                File::~File()
                0x00000000c000a8b0                File::~File()
                0x00000000c000a8da                Directory::~Directory()
                0x00000000c000a8da                Directory::~Directory()
                0x00000000c000a8fe                Directory::~Directory()
                0x00000000c000a928                Filesystem::Filesystem()
                0x00000000c000a928                Filesystem::Filesystem()
                0x00000000c000a94c                Filesystem::~Filesystem()
                0x00000000c000a94c                Filesystem::~Filesystem()
                0x00000000c000a95a                Filesystem::~Filesystem()
                0x00000000c000a97e                Fs::getcwd(Process*, char*, int)
                0x00000000c000a9a8                Fs::initVFS()
                0x00000000c000a9d2                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000ab7c                File::File(char const*, Process*)
                0x00000000c000ab7c                File::File(char const*, Process*)
                0x00000000c000ac3c                File::open(FileOpenMode)
                0x00000000c000ac9a                File::close()
                0x00000000c000acfa                File::seek(unsigned long long)
                0x00000000c000ad50                File::tell(unsigned long long*)
                0x00000000c000ada0                File::rewind()
                0x00000000c000adb4                File::unlink()
                0x00000000c000ae00                File::rename(char const*)
                0x00000000c000ae4e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000aeaa                File::exists()
                0x00000000c000aee8                File::stat(unsigned long long*, bool*)
                0x00000000c000af49                Fs::setcwd(Process*, char*)
                0x00000000c000b0a6                Directory::Directory(char const*, Process*)
                0x00000000c000b0a6                Directory::Directory(char const*, Process*)
                0x00000000c000b166                Directory::open()
                0x00000000c000b1c2                Directory::close()
                0x00000000c000b222                Directory::unlink()
                0x00000000c000b26e                Directory::rename(char const*)
                0x00000000c000b2bc                Directory::exists()
                0x00000000c000b2fa                Directory::read(dirent*)
                0x00000000c000b346                Directory::create()
                0x00000000c000b392                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000b398       0x86 hal/bus.32
                0x00000000c000b398                Bus::Bus(char const*)
                0x00000000c000b398                Bus::Bus(char const*)
                0x00000000c000b3d0                Bus::~Bus()
                0x00000000c000b3d0                Bus::~Bus()
                0x00000000c000b3f4                Bus::~Bus()
 .text          0x00000000c000b41e       0x96 hal/buzzer.32
                0x00000000c000b41e                beepThread(void*)
                0x00000000c000b45b                Krnl::beep(int, int, bool)
 .text          0x00000000c000b4b4      0x46d hal/clock.32
                0x00000000c000b4b4                User::loadClockSettings(int)
                0x00000000c000b506                Clock::Clock(char const*)
                0x00000000c000b506                Clock::Clock(char const*)
                0x00000000c000b53c                Clock::~Clock()
                0x00000000c000b53c                Clock::~Clock()
                0x00000000c000b560                Clock::~Clock()
                0x00000000c000b58a                Clock::timeInSecondsLocal()
                0x00000000c000b5d2                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b62b                datetimeToSeconds(datetime_t)
                0x00000000c000b758                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b7b8                secondsToDatetime(unsigned long long)
                0x00000000c000b8fc                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b921        0x1 
 .text          0x00000000c000b922      0x464 hal/device.32
                0x00000000c000b922                Device::hibernate()
                0x00000000c000b924                Device::wake()
                0x00000000c000b926                Device::detect()
                0x00000000c000b928                Device::disableLegacy()
                0x00000000c000b92a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b92c                DriverlessDevice::close(int, int, void*)
                0x00000000c000b930                DriverlessDevice::detect()
                0x00000000c000b932                DriverlessDevice::open(int, int, void*)
                0x00000000c000b946                Device::~Device()
                0x00000000c000b946                Device::~Device()
                0x00000000c000b954                Device::~Device()
                0x00000000c000b97c                Device::findAndLoadDriver()
                0x00000000c000b98a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000b9b0                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000b9f0                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ba1a                Device::getParent()
                0x00000000c000ba26                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ba44                Device::addChild(Device*)
                0x00000000c000ba88                Device::removeAllChildren()
                0x00000000c000bace                Device::hibernateAll()
                0x00000000c000bafe                Device::wakeAll()
                0x00000000c000bb2e                Device::detectAll()
                0x00000000c000bb5e                Device::disableLegacyAll()
                0x00000000c000bb60                Device::loadDriversForAll()
                0x00000000c000bb62                Device::closeAll()
                0x00000000c000bb98                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bbce                Device::setName(char const*)
                0x00000000c000bbdc                Device::Device(char const*)
                0x00000000c000bbdc                Device::Device(char const*)
                0x00000000c000bcd8                Device::getName()
                0x00000000c000bce2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bce2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bd18                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bd5c                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bd86        0x2 
 .text          0x00000000c000bd88       0x86 hal/diskctrl.32
                0x00000000c000bd88                HardDiskController::HardDiskController(char const*)
                0x00000000c000bd88                HardDiskController::HardDiskController(char const*)
                0x00000000c000bdc0                HardDiskController::~HardDiskController()
                0x00000000c000bdc0                HardDiskController::~HardDiskController()
                0x00000000c000bde4                HardDiskController::~HardDiskController()
 .text          0x00000000c000be0e       0xe2 hal/diskphys.32
                0x00000000c000be0e                PhysicalDisk::eject()
                0x00000000c000be12                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000be12                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000be7a                PhysicalDisk::startCache()
                0x00000000c000bea2                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bea2                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bec6                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000bef0        0x0 hal/fpu.32
 .text          0x00000000c000bef0      0x35d hal/intctrl.32
                0x00000000c000bef0                int_handler
                0x00000000c000bf78                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000bfc0                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c0f8                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c12c                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c1ab                setupINTS()
                0x00000000c000c208                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c24d        0x1 
 .text          0x00000000c000c24e      0x7ec hal/keybrd.32
                0x00000000c000c24e                startGUI(void*)
                0x00000000c000c2ba                startGUIVESA(void*)
                0x00000000c000c326                sendKeyToTerminal(unsigned char)
                0x00000000c000c3f5                sendKeyboardToken(KeyboardToken)
                0x00000000c000c835                clearInternalKeybuffer(VgaText*)
                0x00000000c000c86a                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000c9b0                Keyboard::Keyboard(char const*)
                0x00000000c000c9b0                Keyboard::Keyboard(char const*)
                0x00000000c000c9ec                Keyboard::~Keyboard()
                0x00000000c000c9ec                Keyboard::~Keyboard()
                0x00000000c000ca10                Keyboard::~Keyboard()
 .text          0x00000000c000ca3a      0x3f4 hal/logidisk.32
                0x00000000c000ca3a                LogicalDisk::close(int, int, void*)
                0x00000000c000ca3e                LogicalDisk::~LogicalDisk()
                0x00000000c000ca3e                LogicalDisk::~LogicalDisk()
                0x00000000c000ca62                LogicalDisk::~LogicalDisk()
                0x00000000c000ca8c                LogicalDisk::open(int, int, void*)
                0x00000000c000caa0                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cad8                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cb1e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cb1e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cbde                LogicalDisk::assignDriveLetter()
                0x00000000c000cc94                LogicalDisk::mount()
                0x00000000c000ccdc                LogicalDisk::unmount()
                0x00000000c000ccec                LogicalDisk::eject()
                0x00000000c000cd00                LogicalDisk::unassignDriveLetter()
                0x00000000c000cd56                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000cdc2                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000ce2e        0x2 
 .text          0x00000000c000ce30       0x86 hal/mouse.32
                0x00000000c000ce30                Mouse::Mouse(char const*)
                0x00000000c000ce30                Mouse::Mouse(char const*)
                0x00000000c000ce68                Mouse::~Mouse()
                0x00000000c000ce68                Mouse::~Mouse()
                0x00000000c000ce8c                Mouse::~Mouse()
 .text          0x00000000c000ceb6       0x90 hal/nic.32
                0x00000000c000ceb6                NIC::getMAC()
                0x00000000c000cebc                NIC::write(int, unsigned char*, int*)
                0x00000000c000cec2                NIC::NIC(char const*)
                0x00000000c000cec2                NIC::NIC(char const*)
                0x00000000c000cef8                NIC::~NIC()
                0x00000000c000cef8                NIC::~NIC()
                0x00000000c000cf1c                NIC::~NIC()
 .text          0x00000000c000cf46      0x339 hal/partition.32
                0x00000000c000cf46                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cfee                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d27f        0x1 
 .text          0x00000000c000d280       0x86 hal/serial.32
                0x00000000c000d280                Serial::Serial(char const*)
                0x00000000c000d280                Serial::Serial(char const*)
                0x00000000c000d2b8                Serial::~Serial()
                0x00000000c000d2b8                Serial::~Serial()
                0x00000000c000d2dc                Serial::~Serial()
 *fill*         0x00000000c000d306        0x2 
 .text          0x00000000c000d308      0x234 hal/timer.32
                0x00000000c000d308                Timer::Timer(char const*)
                0x00000000c000d308                Timer::Timer(char const*)
                0x00000000c000d340                Timer::~Timer()
                0x00000000c000d340                Timer::~Timer()
                0x00000000c000d364                Timer::~Timer()
                0x00000000c000d38e                Timer::read()
                0x00000000c000d399                setupTimer(int)
                0x00000000c000d3d4                timerHandler(unsigned int)
 .text          0x00000000c000d53c      0x440 hal/vcache.32
                0x00000000c000d53c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d53c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d6ac                VCache::invalidateReadBuffer()
                0x00000000c000d6bc                VCache::writeWriteBuffer()
                0x00000000c000d708                VCache::~VCache()
                0x00000000c000d708                VCache::~VCache()
                0x00000000c000d75c                VCache::~VCache()
                0x00000000c000d784                VCache::write(unsigned long long, int, void*)
                0x00000000c000d872                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d97c      0x4c7 hal/video.32
                0x00000000c000d97c                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d9c8                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000da38                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000dab6                Video::clearScreen(unsigned int)
                0x00000000c000daea                Video::putpixel(int, int, unsigned int)
                0x00000000c000daf8                Video::readPixelApprox(int, int)
                0x00000000c000db0c                Video::Video(char const*)
                0x00000000c000db0c                Video::Video(char const*)
                0x00000000c000db42                Video::~Video()
                0x00000000c000db42                Video::~Video()
                0x00000000c000db66                Video::~Video()
                0x00000000c000db90                Video::isMonochrome()
                0x00000000c000db9c                Video::getWidth()
                0x00000000c000dba8                Video::getHeight()
                0x00000000c000dbb4                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000dc70                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ddd8                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000de43        0x1 
 .text          0x00000000c000de44     0x1307 hw/acpi.32
                0x00000000c000de44                ACPI::close(int, int, void*)
                0x00000000c000defc                findRSDP()
                0x00000000c000df8c                loadACPITables(unsigned char*)
                0x00000000c000e1f0                findRSDT(unsigned char*)
                0x00000000c000e340                findDataTable(unsigned char*, char*)
                0x00000000c000e3b8                scanMADT()
                0x00000000c000e88c                ACPI::ACPI()
                0x00000000c000e88c                ACPI::ACPI()
                0x00000000c000e8e0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e9c8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ea90                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ea98                ACPI::detectPCI()
                0x00000000c000eca0                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ecf4                ACPI::sleep()
                0x00000000c000ed10                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f14b        0x1 
 .text          0x00000000c000f14c      0xb95 hw/cpu.32
                0x00000000c000f14c                CPU::close(int, int, void*)
                0x00000000c000f150                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f16c                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f184                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f1f8                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f27c                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f2aa                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f2d8                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f306                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f334                CPU::CPU()
                0x00000000c000f334                CPU::CPU()
                0x00000000c000f3c2                CPU::displayFeatures()
                0x00000000c000f3c4                CPU::detectFeatures()
                0x00000000c000fa88                CPU::setupSMEP()
                0x00000000c000fa94                CPU::setupUMIP()
                0x00000000c000fa9e                CPU::setupTSC()
                0x00000000c000faa8                CPU::setupLargePages()
                0x00000000c000fab2                CPU::setupPAT()
                0x00000000c000faee                CPU::setupMTRR()
                0x00000000c000faf0                CPU::setupGlobalPages()
                0x00000000c000fafa                CPU::allowUsermodeDataAccess()
                0x00000000c000fb0c                CPU::prohibitUsermodeDataAccess()
                0x00000000c000fb1e                CPU::setupSMAP()
                0x00000000c000fb2c                CPU::setupFeatures()
                0x00000000c000fbf8                CPU::open(int, int, void*)
 .text          0x00000000c000fce1       0xd1 krnl/bootmsg.32
                0x00000000c000fce1                KeDisplaySplashScreen()
                0x00000000c000fd4f                KeSetBootMessage(char const*)
 .text          0x00000000c000fdb2      0x581 krnl/env.32
                0x00000000c000fdb2                EnvVarContainer::getEnv(char const*)
                0x00000000c000fdf0                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000feb2                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000feb4                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001009a                EnvVarContainer::__loadSystem()
                0x00000000c00100b4                EnvVarContainer::__loadUser()
                0x00000000c00100b6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00100b6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00100d8                EnvVarContainer::~EnvVarContainer()
                0x00000000c00100d8                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010108                Krnl::getEnv(Process*, char const*)
                0x00000000c001016d                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c0010187                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00101a6                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00101b9                Krnl::deleteEnvSystem(char const*)
                0x00000000c00101ba                Krnl::deleteEnvUser(char const*)
                0x00000000c00101bb                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c00101bc                Krnl::newProcessEnv(Process*)
                0x00000000c00101de                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c001022a                Krnl::loadSystemEnv()
                0x00000000c0010258                Krnl::loadUserEnv()
                0x00000000c001027e                Krnl::flushEnv()
                0x00000000c001027f                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001029f                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0010333       0x94 krnl/inlines.32
                0x00000000c0010333                CPU::current()
                0x00000000c001033f                operator new(unsigned long)
                0x00000000c0010344                operator delete(void*)
                0x00000000c0010349                disableIRQs()
                0x00000000c001034b                enableIRQs()
                0x00000000c001034d                lockScheduler()
                0x00000000c0010355                unlockScheduler()
                0x00000000c0010364                lockStuff()
                0x00000000c0010372                unlockStuff()
                0x00000000c00103ac                Virt::getAKernelVAS()
                0x00000000c00103b2                __not_memcpy
 .text          0x00000000c00103c7        0xc krnl/panic.32
                0x00000000c00103c7                KePanic(char const*)
 .text          0x00000000c00103d3      0x142 krnl/powctrl.32
                0x00000000c00103d3                Krnl::powerThread(void*)
                0x00000000c0010401                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010417                Krnl::userIOReceived()
                0x00000000c0010422                Krnl::handlePowerButton()
                0x00000000c0010457                Krnl::handleSleepButton()
                0x00000000c001048c                Krnl::setupPowerManager()
 *fill*         0x00000000c0010515        0x3 
 .text          0x00000000c0010518      0x190 krnl/resolve.32
                0x00000000c0010518                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00106a8      0x313 krnl/signal.32
                0x00000000c00106a8                KiSigKill(int)
                0x00000000c00106bc                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00106bd                KiDefaultSignalHandlerPause(int)
                0x00000000c00106e9                KiDefaultSignalHandlerResume(int)
                0x00000000c0010715                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001071a                KeInitSignals()
                0x00000000c0010765                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c001079b                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010818                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010907                KiCheckSignalZ
                0x00000000c0010949                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010984                KiFinishSignalZ
 .text          0x00000000c00109bb      0xc39 krnl/syscalls.32
                0x00000000c00109bb                SysSeekDir(regs*)
                0x00000000c00109c0                SysTellDir(regs*)
                0x00000000c00109c5                SysVerify(regs*)
                0x00000000c00109cf                SysGetArgc(regs*)
                0x00000000c00109df                SysTTYName(regs*)
                0x00000000c00109e7                SysFormatDisk(regs*)
                0x00000000c0010a54                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010a9e                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010af3                SysShutdown(regs*)
                0x00000000c0010b51                SysRealpath(regs*)
                0x00000000c0010b94                SysReadDir(regs*)
                0x00000000c0010c14                SysIsATTY(regs*)
                0x00000000c0010c70                SysSeek(regs*)
                0x00000000c0010cc9                SysTell(regs*)
                0x00000000c0010d38                SysSize(regs*)
                0x00000000c0010dad                SysSizeFromFilename(regs*)
                0x00000000c0010e60                SysClose(regs*)
                0x00000000c0010ec0                SysOpenDir(regs*)
                0x00000000c0010f37                SysMakeDir(regs*)
                0x00000000c0010fa1                SysCloseDir(regs*)
                0x00000000c0010ff5                SysWait(regs*)
                0x00000000c0011012                SysNotImpl(regs*)
                0x00000000c001102d                SysPanic(regs*)
                0x00000000c0011048                SysRmdir(regs*)
                0x00000000c00110af                SysUnlink(regs*)
                0x00000000c0011116                SysGetArgv(regs*)
                0x00000000c0011163                SysUSleep(regs*)
                0x00000000c001118c                SysSpawn(regs*)
                0x00000000c00111f5                SysGetEnv(regs*)
                0x00000000c00112a4                SysSetFatAttrib(regs*)
                0x00000000c001131b                SysPipe(regs*)
                0x00000000c0011360                SysGetUnixTime(regs*)
                0x00000000c0011374                string_ends_with(char const*, char const*)
                0x00000000c00113be                SysOpen(regs*)
                0x00000000c00115b2                KeSystemCall(regs*, void*)
 .text          0x00000000c00115f4      0x110 net/ethernet.32
                0x00000000c00115f4                KeSwitchEndian16(unsigned short)
                0x00000000c0011620                KeSwitchEndian32(unsigned int)
                0x00000000c0011650                EthernetCRC32(unsigned char*, int)
                0x00000000c00116f4                EthernetReceivedPacket(unsigned char*, unsigned short)
 .text          0x00000000c0011704      0xd2d reg/cm.32
                0x00000000c0011704                CmOpen(char const*)
                0x00000000c0011822                CmClose(Reghive_Tag*)
                0x00000000c0011838                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011874                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c00118eb                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c001192a                CmGetNext(Reghive_Tag*, int)
                0x00000000c001195c                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011998                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c00119c0                CmUpdateHeader(Reghive_Tag*)
                0x00000000c00119e1                CmExpand(Reghive_Tag*, int)
                0x00000000c0011a5c                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0011ae2                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0011bd6                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0011d12                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0011d73                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0011da3                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0011dda                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0011e04                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0011e44                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0011ee8                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0011f16                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00120b4                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0012101                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001217b                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00121ce                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012272                zStrtok(char*, char const*)
                0x00000000c00122db                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c001235c                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00123ff                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0012431      0x50e reg/registry.32
                0x00000000c0012431                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012589                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00126de                Reg::getLine(char*, char*, char*)
                0x00000000c0012715                Reg::readInt(char*, char*, int*)
                0x00000000c0012800                Reg::readString(char*, char*, char*, int)
                0x00000000c0012881                Reg::readBool(char*, char*, bool*)
                0x00000000c00128a6                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00128d2                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00128fe                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001293f       0x36 sys/eject.32
                0x00000000c001293f                SysEject(regs*)
 .text          0x00000000c0012975       0x18 sys/exit.32
                0x00000000c0012975                SysExit(regs*)
 .text          0x00000000c001298d       0x1f sys/getcwd.32
                0x00000000c001298d                SysGetCwd(regs*)
 .text          0x00000000c00129ac        0xc sys/getpid.32
                0x00000000c00129ac                SysGetPID(regs*)
 .text          0x00000000c00129b8       0x1a sys/getramdata.32
                0x00000000c00129b8                SysGetRAMData(regs*)
 .text          0x00000000c00129d2       0x82 sys/getvgaptr.32
                0x00000000c00129d2                SysGetVGAPtr(regs*)
 .text          0x00000000c0012a54       0xb9 sys/kill.32
                0x00000000c0012a54                SysKill(regs*)
 .text          0x00000000c0012b0d       0xa8 sys/loaddll.32
                0x00000000c0012b0d                SysLoadDLL(regs*)
 .text          0x00000000c0012bb5       0x68 sys/read.32
                0x00000000c0012bb5                SysRead(regs*)
 .text          0x00000000c0012c1d       0x29 sys/registersignal.32
                0x00000000c0012c1d                SysRegisterSignal(regs*)
 .text          0x00000000c0012c46      0x1a9 sys/registry.32
                0x00000000c0012c46                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0012cbd                SysRegistryReadExtent(regs*)
                0x00000000c0012d12                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0012d3a                SysRegistryEnterDirectory(regs*)
                0x00000000c0012d62                SysRegistryGetNext(regs*)
                0x00000000c0012d8a                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0012dc4                SysRegistryOpen(regs*)
                0x00000000c0012dd8                SysRegistryClose(regs*)
 .text          0x00000000c0012def       0x55 sys/sbrk.32
                0x00000000c0012def                SysSbrk(regs*)
 .text          0x00000000c0012e44       0x1c sys/setcwd.32
                0x00000000c0012e44                SysSetCwd(regs*)
 .text          0x00000000c0012e60       0x95 sys/settime.32
                0x00000000c0012e60                SysSetTime(regs*)
 .text          0x00000000c0012ef5       0x4a sys/timezone.32
                0x00000000c0012ef5                SysTimezone(regs*)
 .text          0x00000000c0012f3f       0x68 sys/write.32
                0x00000000c0012f3f                SysWrite(regs*)
 .text          0x00000000c0012fa7       0x62 sys/wsbe.32
                0x00000000c0012fa7                SysWsbe(regs*)
 .text          0x00000000c0013009       0x25 sys/yield.32
                0x00000000c0013009                SysYield(regs*)
 .text          0x00000000c001302e     0x11e5 thr/elf.32
                0x00000000c001302e                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00132ba                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00134d0                Thr::runtimeReferenceHelper()
                0x00000000c00134e3                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013532                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00137f0                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0013f26                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0013f58                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0013f8f                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0013fa9                Thr::loadDLL(char const*, bool)
                0x00000000c00141da                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0014213        0x1 
 .text          0x00000000c0014214     0x1325 thr/prcssthr.32
                0x00000000c0014214                userModeEntryPoint(void*)
                0x00000000c001423c                changeTSS
                0x00000000c001426c                switchToThread(ThreadControlBlock*)
                0x00000000c0014320                Process::addArgs(char**)
                0x00000000c0014380                Process::Process(char const*, Process*, char**)
                0x00000000c0014380                Process::Process(char const*, Process*, char**)
                0x00000000c001458c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001458c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014764                taskStartupFunction
                0x00000000c0014770                Semaphore::Semaphore(int)
                0x00000000c0014770                Semaphore::Semaphore(int)
                0x00000000c00147a0                Mutex::Mutex()
                0x00000000c00147a0                Mutex::Mutex()
                0x00000000c00147b4                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00148c0                Process::createUserThread()
                0x00000000c00148e0                setupMultitasking(void (*)())
                0x00000000c00149fc                schedule()
                0x00000000c0014a8c                Semaphore::tryAcquire()
                0x00000000c0014b58                Semaphore::assertLocked(char const*)
                0x00000000c0014bd0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0014bf8                blockTask(TaskState)
                0x00000000c0014c28                waitTask(int, int*, int)
                0x00000000c0014c6c                milliTenthSleepUntil(unsigned int)
                0x00000000c0014cfc                milliTenthSleep(unsigned int)
                0x00000000c0014d0c                sleep(unsigned int)
                0x00000000c0014d28                Semaphore::acquire()
                0x00000000c0014de4                taskReturned
                0x00000000c0014e20                Thr::processFromPID(int)
                0x00000000c0014ec0                unblockTask(ThreadControlBlock*)
                0x00000000c0014f64                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015230                cleanerTaskFunction(void*)
                0x00000000c0015320                terminateTask(int)
                0x00000000c00153ec                Thr::terminateFromIRQ(int)
                0x00000000c00153fc                Semaphore::release()
 .text          0x00000000c0015539      0xb93 vm86/vm8086.32
                0x00000000c0015539                Vm::inbv(unsigned short)
                0x00000000c001554c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015582                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015592                Vm::getSegment(unsigned int)
                0x00000000c001559a                Vm::getOffset(unsigned int)
                0x00000000c001559f                Vm::mainloop2()
                0x00000000c00155d9                Vm::mainVm8086Loop(void*)
                0x00000000c00155e9                Vm::mainloop3(unsigned long)
                0x00000000c001560f                Vm::initialise8086()
                0x00000000c0015652                Vm::finish8086()
                0x00000000c00156b3                Vm::getOutput8086(unsigned char*)
                0x00000000c00156d8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015791                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00158f9                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0015983                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0015994                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00159a6                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00159b7                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00159cc                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00159e2                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00159f7                Vm::faultHandler(regs*)
 .text          0x00000000c00160cc      0xa8e arch/i386/hal.32
                0x00000000c00160cc                noCopro(unsigned long)
                0x00000000c00160cd                nmiHandler(regs*, void*)
                0x00000000c00160e6                doubleFault(regs*, void*)
                0x00000000c00160ff                displayDebugInfo(regs*)
                0x00000000c001645b                HalSystemIdle()
                0x00000000c00164d1                displayProgramFault(char const*)
                0x00000000c001651d                gpFault(regs*, void*)
                0x00000000c0016582                pgFault(regs*, void*)
                0x00000000c0016608                otherISRHandler(regs*, void*)
                0x00000000c001663c                opcodeFault(regs*, void*)
                0x00000000c00166bc                i386SaveCoprocessor(void*)
                0x00000000c00166d0                i386LoadCoprocessor(void*)
                0x00000000c00166e4                x87EmulHandler(regs*, void*)
                0x00000000c0016781                HalInitialiseCoprocessor()
                0x00000000c001682f                HalPanic(char const*)
                0x00000000c0016928                HalQueryPerformanceCounter()
                0x00000000c0016943                HalInitialise()
                0x00000000c0016ae9                HalMakeBeep(int)
                0x00000000c0016b23                HalGetRand()
                0x00000000c0016b26                HalEndOfInterrupt(int)
                0x00000000c0016b57                HalRestart()
                0x00000000c0016b58                HalShutdown()
                0x00000000c0016b59                HalSleep()
 *fill*         0x00000000c0016b5a        0x2 
 .text          0x00000000c0016b5c      0x2f4 arch/i386/pic.32
                0x00000000c0016b5c                picIoWait()
                0x00000000c0016b64                picDisable()
                0x00000000c0016b98                picGetIRQReg(int)
                0x00000000c0016c1c                picOpen()
                0x00000000c0016dac                picEOI(int)
 .text          0x00000000c0016e50      0x64d arch/i386/rtc.32
                0x00000000c0016e50                RTC::open(int, int, void*)
                0x00000000c0016e54                RTC::close(int, int, void*)
                0x00000000c0016e58                RTC::timeInSecondsUTC()
                0x00000000c0016e6a                RTC::timeInDatetimeUTC()
                0x00000000c0016e90                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0016ece                RTC::~RTC()
                0x00000000c0016ece                RTC::~RTC()
                0x00000000c0016ef2                RTC::~RTC()
                0x00000000c0016f1c                RTC::get_update_in_progress_flag()
                0x00000000c0016f34                RTC::completeRTCRefresh()
                0x00000000c00171ec                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001739f                rtcIRQHandler(regs*, void*)
                0x00000000c00173e4                RTC::RTC()
                0x00000000c00173e4                RTC::RTC()
 *fill*         0x00000000c001749d        0x3 
 .text          0x00000000c00174a0      0x203 arch/i386/vga.32
                0x00000000c00174a0                HalConsoleScroll(int, int)
                0x00000000c00175a8                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017614                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00176a3        0x1 
 .text          0x00000000c00176a4     0x13e7 fs/fat/vfslink.32
                0x00000000c00176a4                FAT::getName()
                0x00000000c00176ac                FAT::tell(void*, unsigned long long*)
                0x00000000c00176e8                FAT::stat(void*, unsigned long long*)
                0x00000000c0017724                FAT::~FAT()
                0x00000000c0017724                FAT::~FAT()
                0x00000000c0017748                FAT::~FAT()
                0x00000000c0017770                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017814                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00178d8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017aac                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0017cc4                FAT::allocateSwapfile(char const*, int)
                0x00000000c0017e84                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017ff0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0018050                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00180b0                FAT::close(void*)
                0x00000000c0018104                FAT::closeDir(void*)
                0x00000000c0018158                FAT::seek(void*, unsigned long long)
                0x00000000c00181b0                fatWrapperReadDisk
                0x00000000c00181f4                fatWrapperWriteDisk
                0x00000000c0018238                fatWrapperIoctl
                0x00000000c0018354                FAT::FAT()
                0x00000000c0018354                FAT::FAT()
                0x00000000c00183a8                FAT::fixFilepath(char*)
                0x00000000c00183e4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001851c                FAT::openDir(char const*, void**)
                0x00000000c00185cc                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00186c4                FAT::unlink(char const*)
                0x00000000c0018744                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00188d0                FAT::rename(char const*, char const*)
                0x00000000c001899c                FAT::mkdir(char const*)
                0x00000000c0018a1c                FAT::exists(char const*)
 *fill*         0x00000000c0018a8b        0x1 
 .text          0x00000000c0018a8c       0x94 fs/iso9660/helper.32
                0x00000000c0018a8c                isoReadDiscSectorHelper
                0x00000000c0018ae8                iso_kprintf
                0x00000000c0018b04                iso_kprintfd
 .text          0x00000000c0018b20      0x6f8 fs/iso9660/vfslink.32
                0x00000000c0018b20                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018b26                ISO9660::getName()
                0x00000000c0018b2c                ISO9660::closeDir(void*)
                0x00000000c0018b36                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0018b3c                ISO9660::unlink(char const*)
                0x00000000c0018b42                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0018b48                ISO9660::rename(char const*, char const*)
                0x00000000c0018b4e                ISO9660::mkdir(char const*)
                0x00000000c0018b54                ISO9660::~ISO9660()
                0x00000000c0018b54                ISO9660::~ISO9660()
                0x00000000c0018b78                ISO9660::~ISO9660()
                0x00000000c0018ba0                ISO9660::exists(char const*)
                0x00000000c0018bb4                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0018c92                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0018cda                ISO9660::seek(void*, unsigned long long)
                0x00000000c0018d1c                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0018d5a                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0018dac                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018ee4                ISO9660::close(void*)
                0x00000000c0018f14                ISO9660::openDir(char const*, void**)
                0x00000000c0018fe6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019103                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001917e                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c00191f0                ISO9660::ISO9660()
                0x00000000c00191f0                ISO9660::ISO9660()
 .text          0x00000000c0019218      0x26c hal/sound/sndcard.32
                0x00000000c0019218                SoundCard::beginPlayback()
                0x00000000c0019226                SoundCard::stopPlayback()
                0x00000000c0019234                SoundCard::SoundCard(char const*)
                0x00000000c0019234                SoundCard::SoundCard(char const*)
                0x00000000c00192d2                SoundCard::~SoundCard()
                0x00000000c00192d2                SoundCard::~SoundCard()
                0x00000000c00192f6                SoundCard::~SoundCard()
                0x00000000c0019320                SoundCard::configureRates(int, int, int)
                0x00000000c0019350                SoundCard::getSamples16(int, short*)
                0x00000000c00193ac                SoundCard::getSamples32(int, int*)
                0x00000000c0019432                SoundCard::addChannel(SoundPort*)
                0x00000000c0019470                SoundCard::removeChannel(int)
 .text          0x00000000c0019484      0x377 hal/sound/sndport.32
                0x00000000c0019484                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019484                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019510                SoundPort::~SoundPort()
                0x00000000c0019510                SoundPort::~SoundPort()
                0x00000000c0019544                SoundPort::unpause()
                0x00000000c0019550                SoundPort::pause()
                0x00000000c001955c                SoundPort::getBufferUsed()
                0x00000000c0019564                SoundPort::getBufferSize()
                0x00000000c001956c                SoundPort::buffer16(short*, int)
                0x00000000c00195f8                SoundPort::buffer32(int*, int)
                0x00000000c0019680                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019744                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c00197fb        0x0 hw/bus/isa.32
 *fill*         0x00000000c00197fb        0x1 
 .text          0x00000000c00197fc      0xb83 hw/bus/pci.32
                0x00000000c00197fc                PCI::open(int, int, void*)
                0x00000000c001981a                PCI::close(int, int, void*)
                0x00000000c001981e                PCI::PCI()
                0x00000000c001981e                PCI::PCI()
                0x00000000c00198b8                PCI::readBAR8(unsigned int, int)
                0x00000000c00198d4                PCI::readBAR16(unsigned int, int)
                0x00000000c00198f2                PCI::readBAR32(unsigned int, int)
                0x00000000c001990e                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001992e                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0019950                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0019970                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00199de                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019a86                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0019aaa                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0019ad2                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0019b1c                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0019b44                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0019b68                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0019b8c                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0019bb4                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019c18                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0019d00                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0019fb4                PCI::checkBus(unsigned char)
                0x00000000c0019fda                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a14c                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001a2c0                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001a32c                PCI::detect()
 *fill*         0x00000000c001a37f        0x1 
 .text          0x00000000c001a380      0xb5a hw/diskctrl/ide.32
                0x00000000c001a380                IDE::close(int, int, void*)
                0x00000000c001a384                IDE::IDE()
                0x00000000c001a384                IDE::IDE()
                0x00000000c001a3b8                IDE::prepareInterrupt(unsigned char)
                0x00000000c001a3ca                selectDrive(unsigned char, unsigned char)
                0x00000000c001a3cc                IDE::getBase(unsigned char)
                0x00000000c001a3de                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001a49e                IDE::read(unsigned char, unsigned char)
                0x00000000c001a54c                IDE::waitInterrupt(unsigned char)
                0x00000000c001a5b4                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001a5d0                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001a5ec                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001a632                IDE::open(int, int, void*)
                0x00000000c001aa40                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ab0c                IDE::detect()
                0x00000000c001adcc                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae7c                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001aeda      0x32a hw/diskctrl/satabus.32
                0x00000000c001aeda                SATABus::close(int, int, void*)
                0x00000000c001aede                SATABus::detect()
                0x00000000c001aee0                SATABus::SATABus()
                0x00000000c001aee0                SATABus::SATABus()
                0x00000000c001af66                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001af98                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001afe0                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b000                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b02a                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001b13a                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001b1e4                SATABus::open(int, int, void*)
 .text          0x00000000c001b204      0x921 hw/diskphys/ata.32
                0x00000000c001b204                ATA::close(int, int, void*)
                0x00000000c001b228                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001b22a                ATA::ATA()
                0x00000000c001b22a                ATA::ATA()
                0x00000000c001b258                ATA::flush(bool)
                0x00000000c001b2a2                ATA::readyForCommand()
                0x00000000c001b2ee                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001b66a                ATA::detectCHS()
                0x00000000c001b694                ATA::open(int, int, void*)
                0x00000000c001b760                combineCharAndColour(char, unsigned char)
                0x00000000c001b771                combineColours(unsigned char, unsigned char)
                0x00000000c001b77e                ATA::read(unsigned long long, int, void*)
                0x00000000c001b954                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001bb25        0x1 
 .text          0x00000000c001bb26      0x60e hw/diskphys/atapi.32
                0x00000000c001bb26                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001bb2c                ATAPI::close(int, int, void*)
                0x00000000c001bb50                ATAPI::ATAPI()
                0x00000000c001bb50                ATAPI::ATAPI()
                0x00000000c001bb7e                ATAPI::readyForCommand()
                0x00000000c001bbd0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001be90                ATAPI::diskRemoved()
                0x00000000c001beca                ATAPI::eject()
                0x00000000c001bf12                ATAPI::diskInserted()
                0x00000000c001bf1e                ATAPI::detectMedia()
                0x00000000c001bfda                ATAPI::open(int, int, void*)
                0x00000000c001c0ba                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001c134      0x7ff hw/diskphys/sata.32
                0x00000000c001c134                SATA::close(int, int, void*)
                0x00000000c001c158                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001c15a                SATA::open(int, int, void*)
                0x00000000c001c204                SATA::SATA()
                0x00000000c001c204                SATA::SATA()
                0x00000000c001c232                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001c47e                SATA::read(unsigned long long, int, void*)
                0x00000000c001c6ce                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001c933        0x1 
 .text          0x00000000c001c934      0x5c6 hw/diskphys/satapi.32
                0x00000000c001c934                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001c93a                SATAPI::close(int, int, void*)
                0x00000000c001c95e                SATAPI::SATAPI()
                0x00000000c001c95e                SATAPI::SATAPI()
                0x00000000c001c98c                SATAPI::diskRemoved()
                0x00000000c001c98e                SATAPI::diskInserted()
                0x00000000c001c9aa                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001cc7e                SATAPI::eject()
                0x00000000c001ccba                SATAPI::detectMedia()
                0x00000000c001cd10                SATAPI::open(int, int, void*)
                0x00000000c001ce10                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001cefa      0x455 hw/intctrl/apic.32
                0x00000000c001cefa                IOAPIC::close(int, int, void*)
                0x00000000c001cf00                apicGetBase()
                0x00000000c001cf42                IOAPIC::IOAPIC()
                0x00000000c001cf42                IOAPIC::IOAPIC()
                0x00000000c001cf6a                apicOpen()
                0x00000000c001d0d0                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d102                IOAPIC::read(int)
                0x00000000c001d12a                IOAPIC::open(int, int, void*)
                0x00000000c001d21e                IOAPIC::write(int, int)
                0x00000000c001d24a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001d34f        0x1 
 .text          0x00000000c001d350       0xf0 hw/timer/apictimer.32
                0x00000000c001d350                APICTimer::close(int, int, void*)
                0x00000000c001d358                apicTimerHandler(regs*, void*)
                0x00000000c001d380                APICTimer::open(int, int, void*)
                0x00000000c001d3f0                APICTimer::write(int)
                0x00000000c001d418                APICTimer::APICTimer()
                0x00000000c001d418                APICTimer::APICTimer()
 .text          0x00000000c001d440      0x1aa hw/timer/pit.32
                0x00000000c001d440                PIT::write(int)
                0x00000000c001d4c4                pitHandler(regs*, void*)
                0x00000000c001d4e8                PIT::open(int, int, void*)
                0x00000000c001d538                PIT::close(int, int, void*)
                0x00000000c001d568                PIT::PIT()
                0x00000000c001d568                PIT::PIT()
 *fill*         0x00000000c001d5ea        0x6 
 .text          0x00000000c001d5f0       0x83 arch/i386/avx.32
                0x00000000c001d5f0                avxDetect
                0x00000000c001d61a                avxSave
                0x00000000c001d62b                avxLoad
                0x00000000c001d63c                avxInit
                0x00000000c001d65e                avxClose
                0x00000000c001d65f                wouldSheSayYes
 *fill*         0x00000000c001d673        0xd 
 .text          0x00000000c001d680      0x2ec arch/i386/interrupt.32
                0x00000000c001d680                isr0
                0x00000000c001d690                isr1
                0x00000000c001d69a                isr2
                0x00000000c001d6a4                isr3
                0x00000000c001d6ae                isr4
                0x00000000c001d6b8                isr5
                0x00000000c001d6c2                isr6
                0x00000000c001d6cc                isr7
                0x00000000c001d6d6                isr8
                0x00000000c001d6de                isr9
                0x00000000c001d6e8                isr10
                0x00000000c001d6f0                isr11
                0x00000000c001d6f8                isr12
                0x00000000c001d700                isr13
                0x00000000c001d71a                isr14
                0x00000000c001d722                isr15
                0x00000000c001d72c                isr16
                0x00000000c001d736                isr17
                0x00000000c001d740                isr18
                0x00000000c001d74a                irq3
                0x00000000c001d754                irq4
                0x00000000c001d75e                irq5
                0x00000000c001d768                irq6
                0x00000000c001d772                irq7
                0x00000000c001d77c                irq8
                0x00000000c001d786                irq9
                0x00000000c001d790                irq10
                0x00000000c001d79a                irq11
                0x00000000c001d7a4                irq12
                0x00000000c001d7ae                irq13
                0x00000000c001d7b8                irq14
                0x00000000c001d7c2                irq15
                0x00000000c001d7cc                irq1
                0x00000000c001d7d3                irq2
                0x00000000c001d7da                isr96
                0x00000000c001d7e1                irq0
                0x00000000c001d7e6                int_common_stub
                0x00000000c001d818                syscall_common_stub
                0x00000000c001d91c                irq16
                0x00000000c001d926                irq17
                0x00000000c001d930                irq18
                0x00000000c001d93a                irq19
                0x00000000c001d944                irq20
                0x00000000c001d94e                irq21
                0x00000000c001d958                irq22
                0x00000000c001d962                irq23
 *fill*         0x00000000c001d96c        0x4 
 .text          0x00000000c001d970       0x10 arch/i386/rdrand.32
                0x00000000c001d970                i386GetRDRAND
 .text          0x00000000c001d980       0x39 arch/i386/sse.32
                0x00000000c001d980                absolutelyNoChanceInHell
                0x00000000c001d980                sseDetect
                0x00000000c001d998                sseSave
                0x00000000c001d9a0                sseLoad
                0x00000000c001d9a8                sseInit
                0x00000000c001d9b8                sseClose
 *fill*         0x00000000c001d9b9        0x7 
 .text          0x00000000c001d9c0       0x49 arch/i386/x87.32
                0x00000000c001d9c6                x87Detect
                0x00000000c001d9e1                x87Save
                0x00000000c001d9e8                x87Load
                0x00000000c001d9ef                x87Init
                0x00000000c001da08                x87Close
 *fill*         0x00000000c001da09        0x3 
 .text          0x00000000c001da0c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001da31        0x0 crtn.32
 *fill*         0x00000000c001da31        0x3 
 .text          0x00000000c001da34      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001da34                __divdi3
 *fill*         0x00000000c001db7f        0x1 
 .text          0x00000000c001db80      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001db80                __moddi3
 *fill*         0x00000000c001dcfe        0x2 
 .text          0x00000000c001dd00       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001dd00                __udivdi3
 *fill*         0x00000000c001ddff        0x1 
 .text          0x00000000c001de00      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001de00                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001df20        0x0
 .iplt          0x00000000c001df20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001df1a        0xf
 .init          0x00000000c001df1a        0x3 crti.32
                0x00000000c001df1a                _init
 .init          0x00000000c001df1d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001df22        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001df27        0x2 crtn.32

.fini           0x00000000c001df29        0xa
 .fini          0x00000000c001df29        0x3 crti.32
                0x00000000c001df29                _fini
 .fini          0x00000000c001df2c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001df31        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001df34       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001df34       0x23 core/computer.32
                0x00000000c001df34                Computer::~Computer()
                0x00000000c001df34                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001df58       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001df58       0x2a core/computer.32
                0x00000000c001df58                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001df82       0x21
 .text._Z10idleCommonv
                0x00000000c001df82       0x21 core/idle.32
                0x00000000c001df82                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001dfa4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001dfa4        0x2 core/unixfile.32
                0x00000000c001dfa4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001dfa4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001dfa6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001dfa6       0x42 core/unixfile.32
                0x00000000c001dfa6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001dfa6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001dfe8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001dfe8       0xd3 core/unixfile.32
                0x00000000c001dfe8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e0bc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e0bc        0x7 core/unixfile.32
                0x00000000c001e0bc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e0c4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e0c4       0xa1 core/unixfile.32
                0x00000000c001e0c4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e166        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e166        0x8 core/unixfile.32
                0x00000000c001e166                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e16e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e16e       0x1a hal/device.32
                0x00000000c001e16e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e16e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e188       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e188       0x2a hal/device.32
                0x00000000c001e188                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e1b2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e1b2       0xdc hal/device.32
                0x00000000c001e1b2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e28e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e28e       0x42 hal/device.32
                0x00000000c001e28e                LinkedList<Device>::LinkedList()
                0x00000000c001e28e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e2d0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e2d0       0x1c hal/timer.32
                0x00000000c001e2d0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e2ec        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e2ec        0x7 hal/timer.32
                0x00000000c001e2ec                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e2f4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e2f4       0xb8 hal/timer.32
                0x00000000c001e2f4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e3ac       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e3ac       0xda hal/timer.32
                0x00000000c001e3ac                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001e488       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001e488       0x23 hw/acpi.32
                0x00000000c001e488                ACPI::~ACPI()
                0x00000000c001e488                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001e4ac       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001e4ac       0x2a hw/acpi.32
                0x00000000c001e4ac                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001e4d8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001e4d8        0x2 hw/acpi.32
                0x00000000c001e4d8                LinkedList<Device>::~LinkedList()
                0x00000000c001e4d8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001e4dc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001e4dc       0x1c hw/acpi.32
                0x00000000c001e4dc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001e4f8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001e4f8        0x7 hw/acpi.32
                0x00000000c001e4f8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001e500       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001e500       0xb8 hw/acpi.32
                0x00000000c001e500                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001e5b8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001e5b8       0x23 hw/cpu.32
                0x00000000c001e5b8                CPU::~CPU()
                0x00000000c001e5b8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001e5dc       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001e5dc       0x2a hw/cpu.32
                0x00000000c001e5dc                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001e608        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001e608        0x8 sys/kill.32
                0x00000000c001e608                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e610        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e610        0x2 thr/prcssthr.32
                0x00000000c001e610                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001e610                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e614       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e614       0x49 thr/prcssthr.32
                0x00000000c001e614                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001e614                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001e660       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001e660       0x42 thr/prcssthr.32
                0x00000000c001e660                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001e660                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001e6a2       0x23
 .text._ZN3PCID2Ev
                0x00000000c001e6a2       0x23 hw/bus/pci.32
                0x00000000c001e6a2                PCI::~PCI()
                0x00000000c001e6a2                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001e6c6       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001e6c6       0x2a hw/bus/pci.32
                0x00000000c001e6c6                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001e6f0       0x23
 .text._ZN3IDED2Ev
                0x00000000c001e6f0       0x23 hw/diskctrl/ide.32
                0x00000000c001e6f0                IDE::~IDE()
                0x00000000c001e6f0                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001e714       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001e714       0x2a hw/diskctrl/ide.32
                0x00000000c001e714                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001e73e       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001e73e       0x23 hw/diskctrl/satabus.32
                0x00000000c001e73e                SATABus::~SATABus()
                0x00000000c001e73e                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001e762       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001e762       0x2a hw/diskctrl/satabus.32
                0x00000000c001e762                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001e78c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001e78c       0x23 hw/diskphys/ata.32
                0x00000000c001e78c                ATA::~ATA()
                0x00000000c001e78c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001e7b0       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001e7b0       0x2a hw/diskphys/ata.32
                0x00000000c001e7b0                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001e7da       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001e7da       0x23 hw/diskphys/atapi.32
                0x00000000c001e7da                ATAPI::~ATAPI()
                0x00000000c001e7da                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001e7fe       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001e7fe       0x2a hw/diskphys/atapi.32
                0x00000000c001e7fe                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001e828       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001e828       0x23 hw/diskphys/sata.32
                0x00000000c001e828                SATA::~SATA()
                0x00000000c001e828                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001e84c       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001e84c       0x2a hw/diskphys/sata.32
                0x00000000c001e84c                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001e876       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001e876       0x23 hw/diskphys/satapi.32
                0x00000000c001e876                SATAPI::~SATAPI()
                0x00000000c001e876                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001e89a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001e89a       0x2a hw/diskphys/satapi.32
                0x00000000c001e89a                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001e8c4       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001e8c4       0x23 hw/intctrl/apic.32
                0x00000000c001e8c4                IOAPIC::~IOAPIC()
                0x00000000c001e8c4                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001e8e8       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001e8e8       0x2a hw/intctrl/apic.32
                0x00000000c001e8e8                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001e914       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001e914       0x23 hw/timer/apictimer.32
                0x00000000c001e914                APICTimer::~APICTimer()
                0x00000000c001e914                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001e938       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001e938       0x2a hw/timer/apictimer.32
                0x00000000c001e938                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001e964       0x23
 .text._ZN3PITD2Ev
                0x00000000c001e964       0x23 hw/timer/pit.32
                0x00000000c001e964                PIT::~PIT()
                0x00000000c001e964                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001e988       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001e988       0x2a hw/timer/pit.32
                0x00000000c001e988                PIT::~PIT()

.rodata         0x00000000c001e9b2     0x2b8e
                0x00000000c001e9b2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001e9b2        0x2 
 .ctors         0x00000000c001e9b4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001e9b8        0x4 core/unixfile.32
 .ctors         0x00000000c001e9bc        0x4 thr/prcssthr.32
 .ctors         0x00000000c001e9c0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001e9c4                end_ctors = .
                0x00000000c001e9c4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001e9c4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001e9c8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001e9c8                __DTOR_END__
                0x00000000c001e9cc                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001e9cc       0x14 
 .rodata        0x00000000c001e9e0      0x101 acpica/utclib.32
                0x00000000c001e9e0                AcpiGbl_Ctypes
 *fill*         0x00000000c001eae1        0x3 
 .rodata        0x00000000c001eae4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001eafc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001eb46       0x1a 
 .rodata        0x00000000c001eb60       0xed fs/fat/ff.32
 *fill*         0x00000000c001ec4d       0x13 
 .rodata        0x00000000c001ec60      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f060       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001f0cf      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001f1e4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001f24c       0x2c core/computer.32
                0x00000000c001f24c                vtable for Computer
 .rodata.str1.4
                0x00000000c001f278       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001f2a8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001f2b4       0x17 core/main.32
 *fill*         0x00000000c001f2cb        0x1 
 .rodata.str1.4
                0x00000000c001f2cc       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001f371       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001f3c9       0x39 core/pipe.32
 *fill*         0x00000000c001f402        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001f404       0x1c core/pipe.32
                0x00000000c001f404                vtable for Pipe
 .rodata.str1.1
                0x00000000c001f420       0x2b core/terminal.32
 *fill*         0x00000000c001f44b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001f44c       0x1c core/terminal.32
                0x00000000c001f44c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001f468       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001f48a       0x15 core/unixfile.32
 *fill*         0x00000000c001f49f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001f4a0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001f4eb        0x8 core/unixfile.32
 *fill*         0x00000000c001f4f3        0x1 
 .rodata.str1.4
                0x00000000c001f4f4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001f514       0x1c core/unixfile.32
                0x00000000c001f514                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001f530       0x1c core/unixfile.32
                0x00000000c001f530                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001f54c      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001f6b3      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001f7ba       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001f7ed       0x11 dbg/kconsole.32
 *fill*         0x00000000c001f7ed        0x3 
 .rodata        0x00000000c001f7f0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001f940       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001f940       0x68 fs/vfs.32
                0x00000000c001f940                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001f9a8       0x1c fs/vfs.32
                0x00000000c001f9a8                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001f9c4       0x1c fs/vfs.32
                0x00000000c001f9c4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001f9e0       0x2c hal/bus.32
                0x00000000c001f9e0                vtable for Bus
 .rodata.str1.1
                0x00000000c001fa0c       0x1e hal/clock.32
 *fill*         0x00000000c001fa2a        0x2 
 .rodata._ZTV5Clock
                0x00000000c001fa2c       0x3c hal/clock.32
                0x00000000c001fa2c                vtable for Clock
 *fill*         0x00000000c001fa68       0x18 
 .rodata        0x00000000c001fa80       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001fab0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001fb08       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001fb08       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001fb08       0x2c hal/device.32
                0x00000000c001fb08                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001fb34       0x2c hal/device.32
                0x00000000c001fb34                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001fb60       0x2c hal/diskctrl.32
                0x00000000c001fb60                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001fb8c       0x38 hal/diskphys.32
                0x00000000c001fb8c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001fbc4       0x3e hal/intctrl.32
 *fill*         0x00000000c001fc02        0x2 
 .rodata.str1.4
                0x00000000c001fc04       0x5d hal/intctrl.32
 .rodata        0x00000000c001fc61       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001fcb4       0x34 hal/keybrd.32
                0x00000000c001fcb4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001fce8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001fd2c       0x2c hal/logidisk.32
                0x00000000c001fd2c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001fd58       0x2c hal/mouse.32
                0x00000000c001fd58                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c001fd84       0x34 hal/nic.32
                0x00000000c001fd84                vtable for NIC
 .rodata.str1.1
                0x00000000c001fdb8        0xb hal/partition.32
 *fill*         0x00000000c001fdc3        0x1 
 .rodata._ZTV6Serial
                0x00000000c001fdc4       0x44 hal/serial.32
                0x00000000c001fdc4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001fe08       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001fe08        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001fe08       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001fe08       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001fe08       0x30 hal/timer.32
                0x00000000c001fe08                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001fe38       0x10 hal/vcache.32
                0x00000000c001fe38                vtable for VCache
 .rodata.str1.1
                0x00000000c001fe48       0x93 hal/video.32
 *fill*         0x00000000c001fedb        0x1 
 .rodata._ZTV5Video
                0x00000000c001fedc       0x4c hal/video.32
                0x00000000c001fedc                vtable for Video
 .rodata.str1.4
                0x00000000c001ff28       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001ffc3      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00200ff       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00200ff        0x8 hw/acpi.32
 *fill*         0x00000000c00200ff        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020100       0x2c hw/acpi.32
                0x00000000c0020100                vtable for ACPI
 .rodata.str1.1
                0x00000000c002012c      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020299        0x3 
 .rodata._ZTV3CPU
                0x00000000c002029c       0x2c hw/cpu.32
                0x00000000c002029c                vtable for CPU
 .rodata.str1.1
                0x00000000c00202c8       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0020304       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020395       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c002045e       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00204a6       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002051c       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020561        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002056b       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002058c       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0020622       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0020676       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00206a2      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c002086e       0x57 thr/prcssthr.32
 *fill*         0x00000000c00208c5        0x3 
 .rodata.str1.4
                0x00000000c00208c8      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00209d4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00209d4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00209d4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00209d4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00209d4       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0020a74       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0020aa4      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c0020c34       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0020ca7       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0020cbc       0x3c arch/i386/rtc.32
                0x00000000c0020cbc                vtable for RTC
 .rodata.str1.1
                0x00000000c0020cf8       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0020d39        0x3 
 .rodata._ZTV3FAT
                0x00000000c0020d3c       0x68 fs/fat/vfslink.32
                0x00000000c0020d3c                vtable for FAT
 .rodata.str1.1
                0x00000000c0020da4       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0020da4      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0020edc       0x68 fs/iso9660/vfslink.32
                0x00000000c0020edc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0020f44       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0020f88       0x34 hal/sound/sndcard.32
                0x00000000c0020f88                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0020fbc       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0020ffb       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0021033       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00210d4       0x2c hw/bus/pci.32
                0x00000000c00210d4                vtable for PCI
 .rodata.str1.1
                0x00000000c0021100       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0021187        0x1 
 .rodata._ZTV3IDE
                0x00000000c0021188       0x2c hw/diskctrl/ide.32
                0x00000000c0021188                vtable for IDE
 .rodata.str1.4
                0x00000000c00211b4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00211d8       0x2c hw/diskctrl/satabus.32
                0x00000000c00211d8                vtable for SATABus
 .rodata.str1.1
                0x00000000c0021204       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0021216        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021218       0x38 hw/diskphys/ata.32
                0x00000000c0021218                vtable for ATA
 .rodata.str1.1
                0x00000000c0021250        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c002125d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0021260       0x38 hw/diskphys/atapi.32
                0x00000000c0021260                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021298       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0021314       0x38 hw/diskphys/sata.32
                0x00000000c0021314                vtable for SATA
 .rodata.str1.1
                0x00000000c002134c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0021436        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0021438       0x38 hw/diskphys/satapi.32
                0x00000000c0021438                vtable for SATAPI
 .rodata        0x00000000c0021470        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0021478       0x2c hw/intctrl/apic.32
                0x00000000c0021478                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00214a4       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00214bf        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00214c0       0x30 hw/timer/apictimer.32
                0x00000000c00214c0                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00214f0       0x1d hw/timer/pit.32
 *fill*         0x00000000c002150d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021510       0x30 hw/timer/pit.32
                0x00000000c0021510                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021540      0x4e5
 *(.data)
 .data          0x00000000c0021540        0x0 crti.32
 .data          0x00000000c0021540        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021540                __dso_handle
 .data          0x00000000c0021544        0x0 acpica/utclib.32
 .data          0x00000000c0021544        0x0 core/malloc.32
 .data          0x00000000c0021544        0x0 libk/ctype.32
 .data          0x00000000c0021544        0x0 libk/string.32
 .data          0x00000000c0021544        0x0 fs/fat/diskio.32
 .data          0x00000000c0021544        0x0 fs/fat/ff.32
 .data          0x00000000c0021544        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0021544        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0021544        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0021544        0x0 core/computer.32
 .data          0x00000000c0021544        0x0 core/gdt.32
 .data          0x00000000c0021544        0x0 core/idle.32
 .data          0x00000000c0021544        0x0 core/idt.32
 .data          0x00000000c0021544        0x4 core/kheap.32
 .data          0x00000000c0021548        0x0 core/main.32
 .data          0x00000000c0021548        0x4 core/physmgr.32
                0x00000000c0021548                Phys::bitmap
 .data          0x00000000c002154c        0x0 core/pipe.32
 *fill*         0x00000000c002154c       0x14 
 .data          0x00000000c0021560       0x60 core/terminal.32
                0x00000000c0021560                VgaText::hiddenOut
                0x00000000c0021580                ansiToVGAMappings
 .data          0x00000000c00215c0        0x0 core/tss.32
 .data          0x00000000c00215c0        0x4 core/unixfile.32
                0x00000000c00215c0                UnixFile::nextFd
 .data          0x00000000c00215c4       0x15 core/virtmgr.32
                0x00000000c00215c4                Virt::pageAllocPtr
                0x00000000c00215c8                Virt::bitmap
                0x00000000c00215cc                Virt::swapfileSectorsPerPage
                0x00000000c00215d0                Virt::swapfileLength
                0x00000000c00215d4                Virt::swapfileSector
                0x00000000c00215d8                Virt::swapfileDrive
 *fill*         0x00000000c00215d9        0x3 
 .data          0x00000000c00215dc        0x4 coreobjs/c++.32
                0x00000000c00215dc                __stack_chk_guard
 .data          0x00000000c00215e0        0x0 dbg/kconsole.32
 .data          0x00000000c00215e0        0x0 fs/vfs.32
 .data          0x00000000c00215e0        0x0 hal/bus.32
 .data          0x00000000c00215e0        0x0 hal/buzzer.32
 .data          0x00000000c00215e0        0x0 hal/clock.32
 .data          0x00000000c00215e0        0x0 hal/device.32
 .data          0x00000000c00215e0        0x0 hal/diskctrl.32
 .data          0x00000000c00215e0        0x0 hal/diskphys.32
 .data          0x00000000c00215e0        0x0 hal/fpu.32
 .data          0x00000000c00215e0        0x0 hal/intctrl.32
 .data          0x00000000c00215e0        0x0 hal/keybrd.32
 .data          0x00000000c00215e0        0x0 hal/logidisk.32
 .data          0x00000000c00215e0        0x0 hal/mouse.32
 .data          0x00000000c00215e0        0x0 hal/nic.32
 .data          0x00000000c00215e0        0x0 hal/partition.32
 .data          0x00000000c00215e0        0x0 hal/serial.32
 .data          0x00000000c00215e0        0x0 hal/timer.32
 .data          0x00000000c00215e0        0x0 hal/vcache.32
 .data          0x00000000c00215e0        0x0 hal/video.32
 .data          0x00000000c00215e0       0x10 hw/acpi.32
                0x00000000c00215e0                legacyIRQRemaps
 .data          0x00000000c00215f0        0x4 hw/cpu.32
                0x00000000c00215f0                lastCode
 *fill*         0x00000000c00215f4        0xc 
 .data          0x00000000c0021600      0x142 krnl/bootmsg.32
                0x00000000c0021600                KiSplashScreen
 *fill*         0x00000000c0021742       0x1e 
 .data          0x00000000c0021760       0x4d krnl/env.32
                0x00000000c0021760                defaultSysEnv
 .data          0x00000000c00217ad        0x0 krnl/inlines.32
 .data          0x00000000c00217ad        0x0 krnl/panic.32
 .data          0x00000000c00217ad        0x0 krnl/powctrl.32
 .data          0x00000000c00217ad        0x0 krnl/resolve.32
 *fill*         0x00000000c00217ad       0x13 
 .data          0x00000000c00217c0       0x4c krnl/signal.32
                0x00000000c00217c0                KiDefaultSignalHandlers
 *fill*         0x00000000c002180c       0x14 
 .data          0x00000000c0021820       0xf0 krnl/syscalls.32
                0x00000000c0021820                systemCallHandlers
 .data          0x00000000c0021910        0x0 net/ethernet.32
 *fill*         0x00000000c0021910       0x10 
 .data          0x00000000c0021920      0x100 reg/cm.32
                0x00000000c0021920                CmComponents
 .data          0x00000000c0021a20        0x0 reg/registry.32
 .data          0x00000000c0021a20        0x0 sys/eject.32
 .data          0x00000000c0021a20        0x0 sys/exit.32
 .data          0x00000000c0021a20        0x0 sys/getcwd.32
 .data          0x00000000c0021a20        0x0 sys/getpid.32
 .data          0x00000000c0021a20        0x0 sys/getramdata.32
 .data          0x00000000c0021a20        0x0 sys/getvgaptr.32
 .data          0x00000000c0021a20        0x0 sys/kill.32
 .data          0x00000000c0021a20        0x0 sys/loaddll.32
 .data          0x00000000c0021a20        0x0 sys/read.32
 .data          0x00000000c0021a20        0x0 sys/registersignal.32
 .data          0x00000000c0021a20        0x0 sys/registry.32
 .data          0x00000000c0021a20        0x0 sys/sbrk.32
 .data          0x00000000c0021a20        0x0 sys/setcwd.32
 .data          0x00000000c0021a20        0x0 sys/settime.32
 .data          0x00000000c0021a20        0x0 sys/timezone.32
 .data          0x00000000c0021a20        0x0 sys/write.32
 .data          0x00000000c0021a20        0x0 sys/wsbe.32
 .data          0x00000000c0021a20        0x0 sys/yield.32
 .data          0x00000000c0021a20        0x0 thr/elf.32
 .data          0x00000000c0021a20        0x4 thr/prcssthr.32
                0x00000000c0021a20                Thr::nextPID
 .data          0x00000000c0021a24        0x0 vm86/vm8086.32
 .data          0x00000000c0021a24        0x0 arch/i386/hal.32
 .data          0x00000000c0021a24        0x0 arch/i386/pic.32
 .data          0x00000000c0021a24        0x0 arch/i386/rtc.32
 .data          0x00000000c0021a24        0x0 arch/i386/vga.32
 .data          0x00000000c0021a24        0x0 fs/fat/vfslink.32
 .data          0x00000000c0021a24        0x0 fs/iso9660/helper.32
 .data          0x00000000c0021a24        0x1 fs/iso9660/vfslink.32
                0x00000000c0021a24                recentDriveletter
 .data          0x00000000c0021a25        0x0 hal/sound/sndcard.32
 .data          0x00000000c0021a25        0x0 hal/sound/sndport.32
 .data          0x00000000c0021a25        0x0 hw/bus/isa.32
 .data          0x00000000c0021a25        0x0 hw/bus/pci.32
 .data          0x00000000c0021a25        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0021a25        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0021a25        0x0 hw/diskphys/ata.32
 .data          0x00000000c0021a25        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0021a25        0x0 hw/diskphys/sata.32
 .data          0x00000000c0021a25        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0021a25        0x0 hw/intctrl/apic.32
 .data          0x00000000c0021a25        0x0 hw/timer/apictimer.32
 .data          0x00000000c0021a25        0x0 hw/timer/pit.32
 .data          0x00000000c0021a25        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0021a25        0x0 crtn.32
 .data          0x00000000c0021a25        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0021a25        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0021a25        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0021a25        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0021a28        0x0
 .got           0x00000000c0021a28        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0021a28        0x0
 .got.plt       0x00000000c0021a28        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0021a28        0x0
 .igot.plt      0x00000000c0021a28        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0021a28        0x0
 .tm_clone_table
                0x00000000c0021a28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0021a28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0021a25      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0021a25        0x3 
 .eh_frame      0x00000000c0021a28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0021a28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0021a28       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0021a80       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0021ac0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0021b2c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0022000       0x7d
 *(userkernel)
 userkernel     0x00000000c0022000       0x52 krnl/signal.32
                0x00000000c0022000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002202c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0022052       0x2b krnl/syscalls.32
                0x00000000c0022052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0023000        0x1
 *(align_previous)
 align_previous
                0x00000000c0023000        0x1 krnl/signal.32
                0x00000000c0023000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0023004        0x0
 .rel.got       0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0023001     0x4ba7
                0x00000000c0023001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0023001       0x1f 
 COMMON         0x00000000c0023020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0023020                dcache
                0x00000000c0023060                cdDriveLetter
                0x00000000c0023080                icache
 *(.bss)
 .bss           0x00000000c00230c0        0x0 crti.32
 .bss           0x00000000c00230c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00230e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00230e4       0x1c 
 .bss           0x00000000c0023100      0x378 core/malloc.32
 .bss           0x00000000c0023478        0x0 libk/ctype.32
 .bss           0x00000000c0023478        0x0 libk/string.32
 .bss           0x00000000c0023478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0023478        0x8 
 .bss           0x00000000c0023480       0x88 fs/fat/ff.32
 .bss           0x00000000c0023508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0023508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0023508       0x18 
 .bss           0x00000000c0023520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0023eb8        0x6 core/computer.32
                0x00000000c0023eb8                Krnl::computer
                0x00000000c0023ebc                KeIsPreemptionOn
                0x00000000c0023ebd                KeIsSchedulingOn
 *fill*         0x00000000c0023ebe        0x2 
 .bss           0x00000000c0023ec0        0x6 core/gdt.32
                0x00000000c0023ec0                gdtDescr
 .bss           0x00000000c0023ec6        0x0 core/idle.32
 *fill*         0x00000000c0023ec6        0x2 
 .bss           0x00000000c0023ec8        0x6 core/idt.32
                0x00000000c0023ec8                idtDescr
 .bss           0x00000000c0023ece        0x0 core/kheap.32
 *fill*         0x00000000c0023ece        0x2 
 .bss           0x00000000c0023ed0        0x4 core/main.32
                0x00000000c0023ed0                sysBootSettings
 .bss           0x00000000c0023ed4       0x29 core/physmgr.32
                0x00000000c0023ed4                Phys::forbidEvictions
                0x00000000c0023ed8                Phys::currentPagePointer
                0x00000000c0023edc                Phys::highestMem
                0x00000000c0023ee0                Phys::oldPercent
                0x00000000c0023ee4                Phys::usedPages
                0x00000000c0023ee8                Phys::usablePages
                0x00000000c0023eec                Phys::dmaUsage
 .bss           0x00000000c0023efd        0x0 core/pipe.32
 *fill*         0x00000000c0023efd        0x3 
 .bss           0x00000000c0023f00        0x9 core/terminal.32
                0x00000000c0023f00                terminalCycle
                0x00000000c0023f04                activeTerminal
                0x00000000c0023f08                VgaText::graphicMode
 *fill*         0x00000000c0023f09        0x1 
 .bss           0x00000000c0023f0a        0x2 core/tss.32
                0x00000000c0023f0a                doubleFaultSelector
 *fill*         0x00000000c0023f0c       0x14 
 .bss           0x00000000c0023f20       0x84 core/unixfile.32
                0x00000000c0023f20                sfileLpt
                0x00000000c0023f60                sfileCom
                0x00000000c0023f84                sfileNul
                0x00000000c0023f88                sfilePnt
                0x00000000c0023f8c                sfileAux
                0x00000000c0023f90                sfileCon
                0x00000000c0023f94                initialFilesAdded
                0x00000000c0023f98                unixFileLinkedList
 .bss           0x00000000c0023fa4       0x10 core/virtmgr.32
                0x00000000c0023fa4                twswaps
                0x00000000c0023fa8                swapBalance
                0x00000000c0023fac                Virt::swapfileBitmap
                0x00000000c0023fb0                firstVAS
 .bss           0x00000000c0023fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0023fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0023fb4        0x4 fs/vfs.32
                0x00000000c0023fb4                installedFilesystems
 .bss           0x00000000c0023fb8        0x0 hal/bus.32
 .bss           0x00000000c0023fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0023fb8        0x8 hal/clock.32
                0x00000000c0023fb8                User::dstOn
                0x00000000c0023fb9                User::timezoneHalfHourOffset
                0x00000000c0023fbc                User::timezoneHourOffset
 .bss           0x00000000c0023fc0        0x0 hal/device.32
 .bss           0x00000000c0023fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0023fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0023fc0        0x0 hal/fpu.32
 .bss           0x00000000c0023fc0     0x2000 hal/intctrl.32
                0x00000000c0023fc0                INT_contexts
                0x00000000c0024fc0                INT_handlers
 .bss           0x00000000c0025fc0      0x429 hal/keybrd.32
                0x00000000c0025fc0                keyboardWaitingTaskList
                0x00000000c0025fc4                keyboardSetupYet
                0x00000000c0025fc8                guiKeyboardHandler
                0x00000000c0025fe0                keystates
 *fill*         0x00000000c00263e9       0x17 
 .bss           0x00000000c0026400       0x88 hal/logidisk.32
                0x00000000c0026400                diskAssignments
                0x00000000c0026420                disks
 .bss           0x00000000c0026488        0x4 hal/mouse.32
                0x00000000c0026488                guiMouseHandler
 .bss           0x00000000c002648c        0x0 hal/nic.32
 .bss           0x00000000c002648c        0x0 hal/partition.32
 .bss           0x00000000c002648c        0x0 hal/serial.32
 .bss           0x00000000c002648c        0x4 hal/timer.32
                0x00000000c002648c                milliTenthsSinceBoot
 .bss           0x00000000c0026490        0x0 hal/vcache.32
 .bss           0x00000000c0026490        0x4 hal/video.32
                0x00000000c0026490                screen
 *fill*         0x00000000c0026494        0xc 
 .bss           0x00000000c00264a0      0x480 hw/acpi.32
                0x00000000c00264a0                systemSleepFunction
                0x00000000c00264a4                systemResetFunction
                0x00000000c00264a8                systemShutdownFunction
                0x00000000c00264ac                nextACPITable
                0x00000000c00264c0                acpiTables
                0x00000000c00266c0                usingXSDT
                0x00000000c00266c4                MADTpointer
                0x00000000c00266c8                RSDTpointer
                0x00000000c00266cc                RSDPpointer
                0x00000000c00266d0                nextAPICNMI
                0x00000000c00266e0                apicNMIInfo
                0x00000000c0026760                legacyIRQFlags
                0x00000000c0026780                ioapicDiscoveryNumber
                0x00000000c00267a0                ioapicFoundInMADT
                0x00000000c00267c0                ioapicAddresses
                0x00000000c0026840                ioapicGSIBase
                0x00000000c00268c0                processorDiscoveryNumber
                0x00000000c00268e0                matchingAPICID
                0x00000000c0026900                processorID
 .bss           0x00000000c0026920       0x10 hw/cpu.32
                0x00000000c0026920                lastD
                0x00000000c0026924                lastC
                0x00000000c0026928                lastB
                0x00000000c002692c                lastA
 .bss           0x00000000c0026930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0026930        0x8 krnl/env.32
                0x00000000c0026930                Krnl::userEnv
                0x00000000c0026934                Krnl::systemEnv
 .bss           0x00000000c0026938        0x0 krnl/inlines.32
 .bss           0x00000000c0026938        0x1 krnl/panic.32
                0x00000000c0026938                KeIsKernelInPanic
 *fill*         0x00000000c0026939        0x7 
 .bss           0x00000000c0026940       0x48 krnl/powctrl.32
                0x00000000c0026940                Krnl::powCtrlOnBattery
                0x00000000c0026960                Krnl::currentPowerSettings
                0x00000000c0026984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0026988        0x0 krnl/resolve.32
 .bss           0x00000000c0026988        0x0 krnl/signal.32
 .bss           0x00000000c0026988        0x0 krnl/syscalls.32
 .bss           0x00000000c0026988        0x0 net/ethernet.32
 .bss           0x00000000c0026988        0x4 reg/cm.32
 .bss           0x00000000c002698c        0x0 reg/registry.32
 .bss           0x00000000c002698c        0x0 sys/eject.32
 .bss           0x00000000c002698c        0x0 sys/exit.32
 .bss           0x00000000c002698c        0x0 sys/getcwd.32
 .bss           0x00000000c002698c        0x0 sys/getpid.32
 .bss           0x00000000c002698c        0x0 sys/getramdata.32
 .bss           0x00000000c002698c        0x0 sys/getvgaptr.32
 .bss           0x00000000c002698c        0x0 sys/kill.32
 .bss           0x00000000c002698c        0x0 sys/loaddll.32
 .bss           0x00000000c002698c        0x0 sys/read.32
 .bss           0x00000000c002698c        0x0 sys/registersignal.32
 .bss           0x00000000c002698c        0x0 sys/registry.32
 .bss           0x00000000c002698c        0x0 sys/sbrk.32
 .bss           0x00000000c002698c        0x0 sys/setcwd.32
 .bss           0x00000000c002698c        0x0 sys/settime.32
 .bss           0x00000000c002698c        0x0 sys/timezone.32
 .bss           0x00000000c002698c        0x0 sys/write.32
 .bss           0x00000000c002698c        0x0 sys/wsbe.32
 .bss           0x00000000c002698c        0x0 sys/yield.32
 *fill*         0x00000000c002698c       0x14 
 .bss           0x00000000c00269a0      0x7a4 thr/elf.32
                0x00000000c00269a0                Thr::driverLookupNext
                0x00000000c00269c0                Thr::driverLookupLen
                0x00000000c0026bc0                Thr::driverLookupAddr
                0x00000000c0026dc0                Thr::driverNameLookup
                0x00000000c0026fc0                Thr::kernelSymbols
                0x00000000c0027040                Thr::kernelStringTable
                0x00000000c00270c0                Thr::kernelSymbolTable
                0x00000000c0027140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0027144        0x4 
 .bss           0x00000000c0027148       0x68 thr/prcssthr.32
                0x00000000c0027148                cleanerThread
                0x00000000c002714c                weNeedTheCleanerToNotBlock
                0x00000000c0027150                retValLockStuff
                0x00000000c0027154                retValSchedLock
                0x00000000c0027158                lockStuffLock
                0x00000000c002715c                schedulerLock
                0x00000000c0027160                taskSwitchesPostponedFlag
                0x00000000c0027164                postponeTaskSwitchesCounter
                0x00000000c0027168                irqDisableCounter
                0x00000000c002716c                terminatedTaskList
                0x00000000c0027178                sleepingTaskList
                0x00000000c0027184                taskList
                0x00000000c0027190                kernelProcess
 *fill*         0x00000000c00271b0       0x10 
 .bss           0x00000000c00271c0       0x40 vm86/vm8086.32
                0x00000000c00271c0                Vm::vmRetV
                0x00000000c00271c4                Vm::vmDone
                0x00000000c00271c5                Vm::vmReady
                0x00000000c00271c8                Vm::vm86Thread
                0x00000000c00271cc                Vm::vmToHostCommsPtr
                0x00000000c00271e0                Vm::vmToHostComms
 .bss           0x00000000c0027200       0x14 arch/i386/hal.32
                0x00000000c0027200                apic
                0x00000000c0027204                fpuOwner
                0x00000000c0027208                coproLoadFunc
                0x00000000c002720c                coproSaveFunc
                0x00000000c0027210                gpFaultIntercept
 .bss           0x00000000c0027214        0x0 arch/i386/pic.32
 .bss           0x00000000c0027214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0027216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0027216        0xa 
 .bss           0x00000000c0027220       0xf0 fs/fat/vfslink.32
                0x00000000c0027220                FAT::fats
                0x00000000c0027240                FAT::vfsToFatRemaps
                0x00000000c00272c0                fatToVFSRemaps
 .bss           0x00000000c0027310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0027310       0x10 
 .bss           0x00000000c0027320      0x820 fs/iso9660/vfslink.32
                0x00000000c0027320                iso9660Owner
                0x00000000c0027324                recentSector
                0x00000000c0027340                recentBuffer
 .bss           0x00000000c0027b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0027b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0027b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0027b40        0xd hw/bus/pci.32
                0x00000000c0027b40                thePCI
 .bss           0x00000000c0027b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0027b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0027b4d        0x3 
 .bss           0x00000000c0027b50        0x8 hw/diskphys/ata.32
                0x00000000c0027b50                ataSectorsWritten
                0x00000000c0027b54                ataSectorsRead
 .bss           0x00000000c0027b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0027b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0027b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0027b58        0x8 
 .bss           0x00000000c0027b60       0x41 hw/intctrl/apic.32
                0x00000000c0027b60                noOfIOAPICs
                0x00000000c0027b80                ioapics
                0x00000000c0027ba0                IOAPICsSetupYet
 .bss           0x00000000c0027ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0027ba1        0x3 
 .bss           0x00000000c0027ba4        0x4 hw/timer/pit.32
                0x00000000c0027ba4                pitFreq
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0027ba8        0x0 crtn.32
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0027ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002c74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
