Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e7aa
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6b9 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cc5                Krnl::firstTask()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006eb0                Computer::setBootMessage(char const*)
                0x00000000c0006eb2                Computer::detectFeatures()
                0x00000000c00070d8                Computer::displayFeatures()
                0x00000000c00070da                Computer::rdmsr(unsigned int)
                0x00000000c0007106                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007142                Computer::shutdown()
                0x00000000c000715a                Computer::restart()
                0x00000000c0007172                Computer::sleep()
                0x00000000c0007186                Computer::nmiEnabled()
                0x00000000c0007192                Computer::readCMOS(unsigned char)
                0x00000000c00071ae                Computer::enableNMI(bool)
                0x00000000c00071c6                Computer::open(int, int, void*)
                0x00000000c000729a                Computer::disableNMI()
                0x00000000c00072aa                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072ce                Computer::handleNMI()
 *fill*         0x00000000c0007339        0x1 
 .text          0x00000000c000733a      0x1db core/gdt.32
                0x00000000c000733a                GDTEntry::setBase(unsigned int)
                0x00000000c0007356                GDTEntry::setLimit(unsigned int)
                0x00000000c0007374                GDT::GDT()
                0x00000000c0007374                GDT::GDT()
                0x00000000c000738a                GDT::addEntry(GDTEntry)
                0x00000000c00073ac                GDT::getNumberOfEntries()
                0x00000000c00073b4                GDT::flush()
                0x00000000c00073d6                GDT::setup()
 .text          0x00000000c0007515       0x1d core/idle.32
                0x00000000c0007515                idleFunction(void*)
 *fill*         0x00000000c0007532        0x2 
 .text          0x00000000c0007534      0x46c core/idt.32
                0x00000000c0007534                IDTEntry::IDTEntry(bool)
                0x00000000c0007534                IDTEntry::IDTEntry(bool)
                0x00000000c00075ae                IDTEntry::setOffset(unsigned int)
                0x00000000c00075c4                IDT::IDT()
                0x00000000c00075c4                IDT::IDT()
                0x00000000c00075c6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075ce                IDT::addEntry(IDTEntry, int)
                0x00000000c00075e8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007620                IDT::flush()
                0x00000000c000763a                IDT::setup()
 .text          0x00000000c00079a0      0x185 core/kheap.32
                0x00000000c00079a0                sbrk
                0x00000000c0007a34                mmap
                0x00000000c0007a4a                munmap
                0x00000000c0007a60                liballoc_lock()
                0x00000000c0007a6e                liballoc_unlock()
                0x00000000c0007a84                liballoc_alloc(int)
                0x00000000c0007a9c                liballoc_free(void*, int)
                0x00000000c0007ab7                realloc
                0x00000000c0007acb                malloc
                0x00000000c0007adb                free
                0x00000000c0007aeb                rfree
                0x00000000c0007afb                calloc
 .text          0x00000000c0007b25       0xc3 core/main.32
                0x00000000c0007b25                KeEntryPoint
 .text          0x00000000c0007be8      0x639 core/physmgr.32
                0x00000000c0007be8                Phys::allocateDMA(unsigned long)
                0x00000000c0007cd6                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d11                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d51                Phys::getPageState(unsigned long)
                0x00000000c0007d6d                Phys::freePage(unsigned long)
                0x00000000c0007dd6                Phys::allocatePage()
                0x00000000c0007ea5                Phys::allocateContiguousPages(int)
                0x00000000c0007f0c                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f44                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008221        0x1 
 .text          0x00000000c0008222      0x26d core/pipe.32
                0x00000000c0008222                Pipe::isAtty()
                0x00000000c0008226                Pipe::~Pipe()
                0x00000000c0008226                Pipe::~Pipe()
                0x00000000c000824a                Pipe::~Pipe()
                0x00000000c0008272                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008336                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xaaa core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a50                VgaText::putx(unsigned int)
                0x00000000c0008a96                VgaText::puts(char const*)
                0x00000000c0008abc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b08                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c56                VgaText::VgaText(char const*)
                0x00000000c0008c56                VgaText::VgaText(char const*)
                0x00000000c0008da6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f14                VgaText::doUpdate()
                0x00000000c0008f15                newTerminal(char*)
 *fill*         0x00000000c0008f3a        0x2 
 .text          0x00000000c0008f3c      0x1a1 core/tss.32
                0x00000000c0008f3c                TSS::TSS()
                0x00000000c0008f3c                TSS::TSS()
                0x00000000c0008f4c                TSS::setESP(unsigned long)
                0x00000000c0008f60                TSS::flush()
                0x00000000c0008f80                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090dd        0x1 
 .text          0x00000000c00090de      0x4ca core/unixfile.32
                0x00000000c00090de                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009134                ReservedFilename::isAtty()
                0x00000000c0009150                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091ae                UnixFile::getFileDescriptor()
                0x00000000c00091b6                UnixFile::UnixFile(int)
                0x00000000c00091b6                UnixFile::UnixFile(int)
                0x00000000c000936a                ReservedFilename::ReservedFilename(int)
                0x00000000c000936a                ReservedFilename::ReservedFilename(int)
                0x00000000c000939c                UnixFile::~UnixFile()
                0x00000000c000939c                UnixFile::~UnixFile()
                0x00000000c0009438                UnixFile::~UnixFile()
                0x00000000c0009460                ReservedFilename::~ReservedFilename()
                0x00000000c0009460                ReservedFilename::~ReservedFilename()
                0x00000000c0009484                ReservedFilename::~ReservedFilename()
                0x00000000c00094ab                getFromFileDescriptor(int)
 .text          0x00000000c00095a8     0x125b core/virtmgr.32
                0x00000000c00095a8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095e2                Virt::getPageState(unsigned long)
                0x00000000c0009605                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009721                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009744                Virt::swapIDToSector(unsigned long)
                0x00000000c000975a                Virt::allocateSwapfilePage()
                0x00000000c00097d9                Virt::virtualMemorySetup()
                0x00000000c000982a                Virt::setupPageSwapping(int)
                0x00000000c000989c                VAS::VAS(VAS*)
                0x00000000c000989c                VAS::VAS(VAS*)
                0x00000000c00098ca                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098f8                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009917                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a2a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a4e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a68                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009aac                VAS::VAS()
                0x00000000c0009aac                VAS::VAS()
                0x00000000c0009b16                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b4a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b76                VAS::~VAS()
                0x00000000c0009b76                VAS::~VAS()
                0x00000000c0009ce4                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009df0                VAS::allocatePages(int, int)
                0x00000000c0009fe0                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009ffe                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a0c6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a1b6                VAS::VAS(bool)
                0x00000000c000a1b6                VAS::VAS(bool)
                0x00000000c000a448                VAS::evict(unsigned long)
                0x00000000c000a514                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a622                VAS::scanForEviction()
                0x00000000c000a708                mapVASFirstTime
 .text          0x00000000c000a803       0x5f coreobjs/c++.32
                0x00000000c000a803                __cxa_atexit
                0x00000000c000a806                __cxa_finalize
                0x00000000c000a807                __stack_chk_fail
                0x00000000c000a83d                __cxa_pure_virtual
                0x00000000c000a84e                operator new[](unsigned long)
                0x00000000c000a853                operator delete(void*, unsigned long)
                0x00000000c000a858                operator delete[](void*)
                0x00000000c000a85d                operator delete[](void*, unsigned long)
 .text          0x00000000c000a862      0x225 dbg/kconsole.32
                0x00000000c000a862                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8d3                Dbg::logc(char)
                0x00000000c000a8f3                Dbg::logs(char*)
                0x00000000c000a912                Dbg::logWriteInt(unsigned int)
                0x00000000c000a930                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a951                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa87        0x1 
 .text          0x00000000c000aa88      0xc86 fs/vfs.32
                0x00000000c000aa88                File::read(unsigned long long, void*, int*)
                0x00000000c000aae0                File::write(unsigned long long, void*, int*)
                0x00000000c000ab38                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ab90                Directory::write(unsigned long long, void*, int*)
                0x00000000c000abbe                File::isAtty()
                0x00000000c000abc2                Directory::isAtty()
                0x00000000c000abc6                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000abcc                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000abd2                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000abd8                File::~File()
                0x00000000c000abd8                File::~File()
                0x00000000c000abfc                File::~File()
                0x00000000c000ac26                Directory::~Directory()
                0x00000000c000ac26                Directory::~Directory()
                0x00000000c000ac4a                Directory::~Directory()
                0x00000000c000ac74                Filesystem::Filesystem()
                0x00000000c000ac74                Filesystem::Filesystem()
                0x00000000c000ac98                Filesystem::~Filesystem()
                0x00000000c000ac98                Filesystem::~Filesystem()
                0x00000000c000aca6                Filesystem::~Filesystem()
                0x00000000c000acca                Fs::getcwd(Process*, char*, int)
                0x00000000c000acf4                Fs::initVFS()
                0x00000000c000ad1e                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aefa                File::File(char const*, Process*)
                0x00000000c000aefa                File::File(char const*, Process*)
                0x00000000c000afb6                File::open(FileOpenMode)
                0x00000000c000b014                File::close()
                0x00000000c000b074                File::seek(unsigned long long)
                0x00000000c000b0ca                File::tell(unsigned long long*)
                0x00000000c000b11a                File::rewind()
                0x00000000c000b12e                File::unlink()
                0x00000000c000b17a                File::rename(char const*)
                0x00000000c000b1c8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b224                File::exists()
                0x00000000c000b262                File::stat(unsigned long long*, bool*)
                0x00000000c000b2c3                Fs::setcwd(Process*, char*)
                0x00000000c000b420                Directory::Directory(char const*, Process*)
                0x00000000c000b420                Directory::Directory(char const*, Process*)
                0x00000000c000b4dc                Directory::open()
                0x00000000c000b538                Directory::close()
                0x00000000c000b598                Directory::unlink()
                0x00000000c000b5e4                Directory::rename(char const*)
                0x00000000c000b632                Directory::exists()
                0x00000000c000b670                Directory::read(dirent*)
                0x00000000c000b6bc                Directory::create()
                0x00000000c000b708                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b70e        0x2 
 .text          0x00000000c000b710       0x86 hal/bus.32
                0x00000000c000b710                Bus::Bus(char const*)
                0x00000000c000b710                Bus::Bus(char const*)
                0x00000000c000b748                Bus::~Bus()
                0x00000000c000b748                Bus::~Bus()
                0x00000000c000b76c                Bus::~Bus()
 .text          0x00000000c000b796       0x96 hal/buzzer.32
                0x00000000c000b796                beepThread(void*)
                0x00000000c000b7d3                Krnl::beep(int, int, bool)
 .text          0x00000000c000b82c      0x465 hal/clock.32
                0x00000000c000b82c                User::loadClockSettings(int)
                0x00000000c000b87e                Clock::Clock(char const*)
                0x00000000c000b87e                Clock::Clock(char const*)
                0x00000000c000b8b4                Clock::~Clock()
                0x00000000c000b8b4                Clock::~Clock()
                0x00000000c000b8d8                Clock::~Clock()
                0x00000000c000b902                Clock::timeInSecondsLocal()
                0x00000000c000b94a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b9a3                datetimeToSeconds(datetime_t)
                0x00000000c000bac8                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bb28                secondsToDatetime(unsigned long long)
                0x00000000c000bc6c                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bc91        0x1 
 .text          0x00000000c000bc92      0x464 hal/device.32
                0x00000000c000bc92                Device::hibernate()
                0x00000000c000bc94                Device::wake()
                0x00000000c000bc96                Device::detect()
                0x00000000c000bc98                Device::disableLegacy()
                0x00000000c000bc9a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bc9c                DriverlessDevice::close(int, int, void*)
                0x00000000c000bca0                DriverlessDevice::detect()
                0x00000000c000bca2                DriverlessDevice::open(int, int, void*)
                0x00000000c000bcb6                Device::~Device()
                0x00000000c000bcb6                Device::~Device()
                0x00000000c000bcc4                Device::~Device()
                0x00000000c000bcec                Device::findAndLoadDriver()
                0x00000000c000bcfa                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bd20                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bd60                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bd8a                Device::getParent()
                0x00000000c000bd96                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000bdb4                Device::addChild(Device*)
                0x00000000c000bdf8                Device::removeAllChildren()
                0x00000000c000be3e                Device::hibernateAll()
                0x00000000c000be6e                Device::wakeAll()
                0x00000000c000be9e                Device::detectAll()
                0x00000000c000bece                Device::disableLegacyAll()
                0x00000000c000bed0                Device::loadDriversForAll()
                0x00000000c000bed2                Device::closeAll()
                0x00000000c000bf08                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bf3e                Device::setName(char const*)
                0x00000000c000bf4c                Device::Device(char const*)
                0x00000000c000bf4c                Device::Device(char const*)
                0x00000000c000c048                Device::getName()
                0x00000000c000c052                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c052                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c088                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c0cc                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c0f6        0x2 
 .text          0x00000000c000c0f8       0x86 hal/diskctrl.32
                0x00000000c000c0f8                HardDiskController::HardDiskController(char const*)
                0x00000000c000c0f8                HardDiskController::HardDiskController(char const*)
                0x00000000c000c130                HardDiskController::~HardDiskController()
                0x00000000c000c130                HardDiskController::~HardDiskController()
                0x00000000c000c154                HardDiskController::~HardDiskController()
 .text          0x00000000c000c17e       0xe2 hal/diskphys.32
                0x00000000c000c17e                PhysicalDisk::eject()
                0x00000000c000c182                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c182                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c1ea                PhysicalDisk::startCache()
                0x00000000c000c212                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c212                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c236                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c260        0x0 hal/fpu.32
 .text          0x00000000c000c260      0x360 hal/intctrl.32
                0x00000000c000c260                int_handler
                0x00000000c000c2ea                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c334                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c477                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c4ab                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c521                setupINTS()
                0x00000000c000c57e                convertLegacyIRQNumber(int)
 .text          0x00000000c000c5c0      0x8be hal/keybrd.32
                0x00000000c000c5c0                startGUI(void*)
                0x00000000c000c62e                startGUIVESA(void*)
                0x00000000c000c69c                sendKeyToTerminal(unsigned char)
                0x00000000c000c777                sendKeyboardToken(KeyboardToken)
                0x00000000c000cc61                clearInternalKeybuffer(VgaText*)
                0x00000000c000cc96                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000cdf4                Keyboard::Keyboard(char const*)
                0x00000000c000cdf4                Keyboard::Keyboard(char const*)
                0x00000000c000ce30                Keyboard::~Keyboard()
                0x00000000c000ce30                Keyboard::~Keyboard()
                0x00000000c000ce54                Keyboard::~Keyboard()
 .text          0x00000000c000ce7e      0x3f8 hal/logidisk.32
                0x00000000c000ce7e                LogicalDisk::close(int, int, void*)
                0x00000000c000ce82                LogicalDisk::~LogicalDisk()
                0x00000000c000ce82                LogicalDisk::~LogicalDisk()
                0x00000000c000cea6                LogicalDisk::~LogicalDisk()
                0x00000000c000ced0                LogicalDisk::open(int, int, void*)
                0x00000000c000cee4                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cf1c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cf62                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cf62                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d022                LogicalDisk::assignDriveLetter()
                0x00000000c000d0dc                LogicalDisk::mount()
                0x00000000c000d124                LogicalDisk::unmount()
                0x00000000c000d134                LogicalDisk::eject()
                0x00000000c000d148                LogicalDisk::unassignDriveLetter()
                0x00000000c000d19e                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d20a                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000d276        0x2 
 .text          0x00000000c000d278       0x86 hal/mouse.32
                0x00000000c000d278                Mouse::Mouse(char const*)
                0x00000000c000d278                Mouse::Mouse(char const*)
                0x00000000c000d2b0                Mouse::~Mouse()
                0x00000000c000d2b0                Mouse::~Mouse()
                0x00000000c000d2d4                Mouse::~Mouse()
 .text          0x00000000c000d2fe       0x90 hal/nic.32
                0x00000000c000d2fe                NIC::getMAC()
                0x00000000c000d304                NIC::write(int, unsigned char*, int*)
                0x00000000c000d30a                NIC::NIC(char const*)
                0x00000000c000d30a                NIC::NIC(char const*)
                0x00000000c000d340                NIC::~NIC()
                0x00000000c000d340                NIC::~NIC()
                0x00000000c000d364                NIC::~NIC()
 .text          0x00000000c000d38e      0x33b hal/partition.32
                0x00000000c000d38e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d436                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d6c9        0x3 
 .text          0x00000000c000d6cc       0x86 hal/serial.32
                0x00000000c000d6cc                Serial::Serial(char const*)
                0x00000000c000d6cc                Serial::Serial(char const*)
                0x00000000c000d704                Serial::~Serial()
                0x00000000c000d704                Serial::~Serial()
                0x00000000c000d728                Serial::~Serial()
 *fill*         0x00000000c000d752        0x2 
 .text          0x00000000c000d754      0x234 hal/timer.32
                0x00000000c000d754                Timer::Timer(char const*)
                0x00000000c000d754                Timer::Timer(char const*)
                0x00000000c000d78c                Timer::~Timer()
                0x00000000c000d78c                Timer::~Timer()
                0x00000000c000d7b0                Timer::~Timer()
                0x00000000c000d7da                Timer::read()
                0x00000000c000d7e5                setupTimer(int)
                0x00000000c000d820                timerHandler(unsigned int)
 .text          0x00000000c000d988      0x450 hal/vcache.32
                0x00000000c000d988                VCache::VCache(PhysicalDisk*)
                0x00000000c000d988                VCache::VCache(PhysicalDisk*)
                0x00000000c000daf8                VCache::invalidateReadBuffer()
                0x00000000c000db08                VCache::writeWriteBuffer()
                0x00000000c000db54                VCache::~VCache()
                0x00000000c000db54                VCache::~VCache()
                0x00000000c000dbac                VCache::~VCache()
                0x00000000c000dbd4                VCache::write(unsigned long long, int, void*)
                0x00000000c000dcce                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ddd8      0x4d9 hal/video.32
                0x00000000c000ddd8                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000de24                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000de94                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000df24                Video::clearScreen(unsigned int)
                0x00000000c000df58                Video::putpixel(int, int, unsigned int)
                0x00000000c000df66                Video::readPixelApprox(int, int)
                0x00000000c000df7a                Video::Video(char const*)
                0x00000000c000df7a                Video::Video(char const*)
                0x00000000c000dfb0                Video::~Video()
                0x00000000c000dfb0                Video::~Video()
                0x00000000c000dfd4                Video::~Video()
                0x00000000c000dffe                Video::isMonochrome()
                0x00000000c000e00a                Video::getWidth()
                0x00000000c000e016                Video::getHeight()
                0x00000000c000e022                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e0de                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e246                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e2b1        0x3 
 .text          0x00000000c000e2b4     0x128a hw/acpi.32
                0x00000000c000e2b4                ACPI::close(int, int, void*)
                0x00000000c000e368                findRSDP()
                0x00000000c000e400                loadACPITables(unsigned char*)
                0x00000000c000e66c                findRSDT(unsigned char*)
                0x00000000c000e7c4                findDataTable(unsigned char*, char*)
                0x00000000c000e844                scanMADT()
                0x00000000c000ecfc                ACPI::ACPI()
                0x00000000c000ecfc                ACPI::ACPI()
                0x00000000c000ed50                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ee4c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ef18                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ef20                ACPI::detectPCI()
                0x00000000c000f140                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f188                ACPI::sleep()
                0x00000000c000f1a4                ACPI::open(int, int, void*)
 .text          0x00000000c000f53e      0xba5 hw/cpu.32
                0x00000000c000f53e                CPU::close(int, int, void*)
                0x00000000c000f542                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f55e                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f576                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f5ea                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f66e                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f69c                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f6ca                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f6f8                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f726                CPU::CPU()
                0x00000000c000f726                CPU::CPU()
                0x00000000c000f7b4                CPU::displayFeatures()
                0x00000000c000f7b6                CPU::detectFeatures()
                0x00000000c000fe8a                CPU::setupSMEP()
                0x00000000c000fe96                CPU::setupUMIP()
                0x00000000c000fea0                CPU::setupTSC()
                0x00000000c000feaa                CPU::setupLargePages()
                0x00000000c000feb4                CPU::setupPAT()
                0x00000000c000fef0                CPU::setupMTRR()
                0x00000000c000fef2                CPU::setupGlobalPages()
                0x00000000c000fefc                CPU::allowUsermodeDataAccess()
                0x00000000c000ff0e                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ff20                CPU::setupSMAP()
                0x00000000c000ff2e                CPU::setupFeatures()
                0x00000000c000fffa                CPU::open(int, int, void*)
 .text          0x00000000c00100e3       0xd8 krnl/bootmsg.32
                0x00000000c00100e3                KeDisplaySplashScreen()
                0x00000000c0010158                KeSetBootMessage(char const*)
 *fill*         0x00000000c00101bb        0x1 
 .text          0x00000000c00101bc      0x585 krnl/env.32
                0x00000000c00101bc                EnvVarContainer::getEnv(char const*)
                0x00000000c00101fa                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00102bc                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00102be                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00104a8                EnvVarContainer::__loadSystem()
                0x00000000c00104c2                EnvVarContainer::__loadUser()
                0x00000000c00104c4                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104c4                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104e6                EnvVarContainer::~EnvVarContainer()
                0x00000000c00104e6                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010516                Krnl::getEnv(Process*, char const*)
                0x00000000c001057b                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c0010595                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00105b4                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00105c7                Krnl::deleteEnvSystem(char const*)
                0x00000000c00105c8                Krnl::deleteEnvUser(char const*)
                0x00000000c00105c9                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c00105ca                Krnl::newProcessEnv(Process*)
                0x00000000c00105ec                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010638                Krnl::loadSystemEnv()
                0x00000000c0010666                Krnl::loadUserEnv()
                0x00000000c001068c                Krnl::flushEnv()
                0x00000000c001068d                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00106ad                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0010741       0x94 krnl/inlines.32
                0x00000000c0010741                CPU::current()
                0x00000000c001074d                operator new(unsigned long)
                0x00000000c0010752                operator delete(void*)
                0x00000000c0010757                disableIRQs()
                0x00000000c0010759                enableIRQs()
                0x00000000c001075b                lockScheduler()
                0x00000000c0010763                unlockScheduler()
                0x00000000c0010772                lockStuff()
                0x00000000c0010780                unlockStuff()
                0x00000000c00107ba                Virt::getAKernelVAS()
                0x00000000c00107c0                __not_memcpy
 .text          0x00000000c00107d5        0xc krnl/panic.32
                0x00000000c00107d5                KePanic(char const*)
 .text          0x00000000c00107e1      0x142 krnl/powctrl.32
                0x00000000c00107e1                Krnl::powerThread(void*)
                0x00000000c001080f                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010825                Krnl::userIOReceived()
                0x00000000c0010830                Krnl::handlePowerButton()
                0x00000000c0010865                Krnl::handleSleepButton()
                0x00000000c001089a                Krnl::setupPowerManager()
 .text          0x00000000c0010923       0x9b krnl/random.32
                0x00000000c0010923                KeRand()
                0x00000000c0010963                KeSeedRand(unsigned int)
                0x00000000c001098c                KeInitRand()
 *fill*         0x00000000c00109be        0x2 
 .text          0x00000000c00109c0      0x1bc krnl/resolve.32
                0x00000000c00109c0                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010b7c      0x313 krnl/signal.32
                0x00000000c0010b7c                KiSigKill(int)
                0x00000000c0010b90                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010b91                KiDefaultSignalHandlerPause(int)
                0x00000000c0010bbd                KiDefaultSignalHandlerResume(int)
                0x00000000c0010be9                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010bee                KeInitSignals()
                0x00000000c0010c39                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010c6f                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010cec                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010ddb                KiCheckSignalZ
                0x00000000c0010e1d                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010e58                KiFinishSignalZ
 .text          0x00000000c0010e8f      0xc76 krnl/syscalls.32
                0x00000000c0010e8f                SysSeekDir(regs*)
                0x00000000c0010e94                SysTellDir(regs*)
                0x00000000c0010e99                SysVerify(regs*)
                0x00000000c0010ea3                SysGetArgc(regs*)
                0x00000000c0010eb7                SysTTYName(regs*)
                0x00000000c0010ebf                SysFormatDisk(regs*)
                0x00000000c0010f26                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010f7a                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010fd3                SysShutdown(regs*)
                0x00000000c0011060                SysRealpath(regs*)
                0x00000000c00110af                SysReadDir(regs*)
                0x00000000c001112f                SysIsATTY(regs*)
                0x00000000c0011189                SysSeek(regs*)
                0x00000000c00111e3                SysTell(regs*)
                0x00000000c0011250                SysSize(regs*)
                0x00000000c00112c3                SysSizeFromFilename(regs*)
                0x00000000c001136d                SysClose(regs*)
                0x00000000c00113cd                SysOpenDir(regs*)
                0x00000000c001144a                SysMakeDir(regs*)
                0x00000000c00114b8                SysCloseDir(regs*)
                0x00000000c0011507                SysWait(regs*)
                0x00000000c0011528                SysNotImpl(regs*)
                0x00000000c0011543                SysPanic(regs*)
                0x00000000c001155e                SysRmdir(regs*)
                0x00000000c00115bc                SysUnlink(regs*)
                0x00000000c001161a                SysGetArgv(regs*)
                0x00000000c0011667                SysUSleep(regs*)
                0x00000000c0011690                SysSpawn(regs*)
                0x00000000c0011701                SysGetEnv(regs*)
                0x00000000c00117b6                SysSetFatAttrib(regs*)
                0x00000000c001181f                SysPipe(regs*)
                0x00000000c0011864                SysGetUnixTime(regs*)
                0x00000000c0011878                string_ends_with(char const*, char const*)
                0x00000000c00118c3                SysOpen(regs*)
                0x00000000c0011ac3                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011b05        0x3 
 .text          0x00000000c0011b08      0x159 net/ethernet.32
                0x00000000c0011b08                KeSwitchEndian16(unsigned short)
                0x00000000c0011b2c                KeSwitchEndian32(unsigned int)
                0x00000000c0011b5c                EthernetCRC32(unsigned char*, int)
                0x00000000c0011c00                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0011c61      0xd51 reg/cm.32
                0x00000000c0011c61                CmOpen(char const*)
                0x00000000c0011d7f                CmClose(Reghive_Tag*)
                0x00000000c0011d95                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011dd1                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0011e48                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011e87                CmGetNext(Reghive_Tag*, int)
                0x00000000c0011eb9                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011ef5                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0011f1d                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0011f3e                CmExpand(Reghive_Tag*, int)
                0x00000000c0011fb9                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c001203f                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012133                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c001226b                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c00122cc                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c00122fc                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012333                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c001235d                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c001239d                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012441                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c001246f                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c001260c                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0012659                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00126d3                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c0012726                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00127ea                zStrtok(char*, char const*)
                0x00000000c001285c                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00128dd                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0012980                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00129b2      0x545 reg/registry.32
                0x00000000c00129b2                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012b3e                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0012c93                Reg::getLine(char*, char*, char*)
                0x00000000c0012cca                Reg::readInt(char*, char*, int*)
                0x00000000c0012db8                Reg::readString(char*, char*, char*, int)
                0x00000000c0012e39                Reg::readBool(char*, char*, bool*)
                0x00000000c0012e5e                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0012e8a                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012eb6                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0012ef7       0x36 sys/eject.32
                0x00000000c0012ef7                SysEject(regs*)
 .text          0x00000000c0012f2d       0x18 sys/exit.32
                0x00000000c0012f2d                SysExit(regs*)
 .text          0x00000000c0012f45       0x1f sys/getcwd.32
                0x00000000c0012f45                SysGetCwd(regs*)
 .text          0x00000000c0012f64        0xc sys/getpid.32
                0x00000000c0012f64                SysGetPID(regs*)
 .text          0x00000000c0012f70       0x1a sys/getramdata.32
                0x00000000c0012f70                SysGetRAMData(regs*)
 .text          0x00000000c0012f8a       0x82 sys/getvgaptr.32
                0x00000000c0012f8a                SysGetVGAPtr(regs*)
 .text          0x00000000c001300c       0xb9 sys/kill.32
                0x00000000c001300c                SysKill(regs*)
 .text          0x00000000c00130c5       0xa8 sys/loaddll.32
                0x00000000c00130c5                SysLoadDLL(regs*)
 .text          0x00000000c001316d       0x68 sys/read.32
                0x00000000c001316d                SysRead(regs*)
 .text          0x00000000c00131d5       0x29 sys/registersignal.32
                0x00000000c00131d5                SysRegisterSignal(regs*)
 .text          0x00000000c00131fe      0x19c sys/registry.32
                0x00000000c00131fe                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013275                SysRegistryReadExtent(regs*)
                0x00000000c00132bd                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00132e5                SysRegistryEnterDirectory(regs*)
                0x00000000c001330d                SysRegistryGetNext(regs*)
                0x00000000c0013335                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001336f                SysRegistryOpen(regs*)
                0x00000000c0013383                SysRegistryClose(regs*)
 .text          0x00000000c001339a       0x55 sys/sbrk.32
                0x00000000c001339a                SysSbrk(regs*)
 .text          0x00000000c00133ef       0x1c sys/setcwd.32
                0x00000000c00133ef                SysSetCwd(regs*)
 .text          0x00000000c001340b       0x96 sys/settime.32
                0x00000000c001340b                SysSetTime(regs*)
 .text          0x00000000c00134a1       0x4a sys/timezone.32
                0x00000000c00134a1                SysTimezone(regs*)
 .text          0x00000000c00134eb       0x68 sys/write.32
                0x00000000c00134eb                SysWrite(regs*)
 .text          0x00000000c0013553       0x62 sys/wsbe.32
                0x00000000c0013553                SysWsbe(regs*)
 .text          0x00000000c00135b5       0x25 sys/yield.32
                0x00000000c00135b5                SysYield(regs*)
 .text          0x00000000c00135da     0x1203 thr/elf.32
                0x00000000c00135da                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0013861                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013a80                Thr::runtimeReferenceHelper()
                0x00000000c0013a93                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013ae2                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013da0                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00144e1                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0014513                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001454a                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0014564                Thr::loadDLL(char const*, bool)
                0x00000000c00147a4                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00147dd        0x3 
 .text          0x00000000c00147e0     0x13b5 thr/prcssthr.32
                0x00000000c00147e0                userModeEntryPoint(void*)
                0x00000000c0014808                changeTSS
                0x00000000c0014838                switchToThread(ThreadControlBlock*)
                0x00000000c00148e8                Process::addArgs(char**)
                0x00000000c0014954                Process::Process(char const*, Process*, char**)
                0x00000000c0014954                Process::Process(char const*, Process*, char**)
                0x00000000c0014b60                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014b60                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014d34                taskStartupFunction
                0x00000000c0014d40                Semaphore::Semaphore(int)
                0x00000000c0014d40                Semaphore::Semaphore(int)
                0x00000000c0014d70                Mutex::Mutex()
                0x00000000c0014d70                Mutex::Mutex()
                0x00000000c0014d84                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014e8c                Process::createUserThread()
                0x00000000c0014eac                setupMultitasking(void (*)())
                0x00000000c0014fd0                schedule()
                0x00000000c0015064                Semaphore::tryAcquire()
                0x00000000c0015124                Semaphore::assertLocked(char const*)
                0x00000000c00151a8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00151d0                blockTask(TaskState)
                0x00000000c0015208                waitTask(int, int*, int)
                0x00000000c001524c                milliTenthSleepUntil(unsigned int)
                0x00000000c00152ec                milliTenthSleep(unsigned int)
                0x00000000c0015300                sleep(unsigned int)
                0x00000000c0015310                Semaphore::acquire()
                0x00000000c00153d8                taskReturned
                0x00000000c001541c                Thr::processFromPID(int)
                0x00000000c00154c8                unblockTask(ThreadControlBlock*)
                0x00000000c0015574                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015848                cleanerTaskFunction(void*)
                0x00000000c0015950                terminateTask(int)
                0x00000000c0015a3c                Thr::terminateFromIRQ(int)
                0x00000000c0015a4c                Semaphore::release()
 .text          0x00000000c0015b95      0xbec vm86/vm8086.32
                0x00000000c0015b95                Vm::inbv(unsigned short)
                0x00000000c0015ba8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015bde                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015bee                Vm::getSegment(unsigned int)
                0x00000000c0015bf6                Vm::getOffset(unsigned int)
                0x00000000c0015bfb                Vm::mainloop2()
                0x00000000c0015c35                Vm::mainVm8086Loop(void*)
                0x00000000c0015c45                Vm::mainloop3(unsigned long)
                0x00000000c0015c6b                Vm::initialise8086()
                0x00000000c0015cae                Vm::finish8086()
                0x00000000c0015d0f                Vm::getOutput8086(unsigned char*)
                0x00000000c0015d34                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015ded                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015f7a                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016003                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016014                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016026                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016037                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001604c                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016062                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016077                Vm::faultHandler(regs*)
 .text          0x00000000c0016781      0xaac arch/i386/hal.32
                0x00000000c0016781                noCopro(unsigned long)
                0x00000000c0016782                nmiHandler(regs*, void*)
                0x00000000c001679b                doubleFault(regs*, void*)
                0x00000000c00167b4                displayDebugInfo(regs*)
                0x00000000c0016b10                HalSystemIdle()
                0x00000000c0016b8c                displayProgramFault(char const*)
                0x00000000c0016bd8                gpFault(regs*, void*)
                0x00000000c0016c3f                pgFault(regs*, void*)
                0x00000000c0016cc8                otherISRHandler(regs*, void*)
                0x00000000c0016cfc                opcodeFault(regs*, void*)
                0x00000000c0016d7f                i386SaveCoprocessor(void*)
                0x00000000c0016d93                i386LoadCoprocessor(void*)
                0x00000000c0016da7                x87EmulHandler(regs*, void*)
                0x00000000c0016e44                HalInitialiseCoprocessor()
                0x00000000c0016ef2                HalPanic(char const*)
                0x00000000c0016feb                HalQueryPerformanceCounter()
                0x00000000c0017006                HalInitialise()
                0x00000000c00171bc                HalMakeBeep(int)
                0x00000000c00171f6                HalGetRand()
                0x00000000c00171f9                HalEndOfInterrupt(int)
                0x00000000c001722a                HalRestart()
                0x00000000c001722b                HalShutdown()
                0x00000000c001722c                HalSleep()
 *fill*         0x00000000c001722d        0x3 
 .text          0x00000000c0017230      0x2dc arch/i386/pic.32
                0x00000000c0017230                picIoWait()
                0x00000000c0017238                picDisable()
                0x00000000c001726c                picGetIRQReg(int)
                0x00000000c00172e8                picOpen()
                0x00000000c001746c                picEOI(int)
 .text          0x00000000c001750c      0x66e arch/i386/rtc.32
                0x00000000c001750c                RTC::open(int, int, void*)
                0x00000000c0017510                RTC::close(int, int, void*)
                0x00000000c0017514                RTC::timeInSecondsUTC()
                0x00000000c0017526                RTC::timeInDatetimeUTC()
                0x00000000c001754c                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001758a                RTC::~RTC()
                0x00000000c001758a                RTC::~RTC()
                0x00000000c00175ae                RTC::~RTC()
                0x00000000c00175d8                RTC::get_update_in_progress_flag()
                0x00000000c00175f2                RTC::completeRTCRefresh()
                0x00000000c00178cc                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0017a7a                rtcIRQHandler(regs*, void*)
                0x00000000c0017ac0                RTC::RTC()
                0x00000000c0017ac0                RTC::RTC()
 *fill*         0x00000000c0017b7a        0x2 
 .text          0x00000000c0017b7c      0x1f4 arch/i386/vga.32
                0x00000000c0017b7c                HalConsoleScroll(int, int)
                0x00000000c0017c84                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017ce8                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0017d70     0x1487 fs/fat/vfslink.32
                0x00000000c0017d70                FAT::getName()
                0x00000000c0017d78                FAT::tell(void*, unsigned long long*)
                0x00000000c0017db4                FAT::stat(void*, unsigned long long*)
                0x00000000c0017df0                FAT::~FAT()
                0x00000000c0017df0                FAT::~FAT()
                0x00000000c0017e14                FAT::~FAT()
                0x00000000c0017e3c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017ee0                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0017fc0                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00181a4                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00183c0                FAT::allocateSwapfile(char const*, int)
                0x00000000c0018580                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00186f0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0018750                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00187b0                FAT::close(void*)
                0x00000000c0018804                FAT::closeDir(void*)
                0x00000000c0018858                FAT::seek(void*, unsigned long long)
                0x00000000c00188b0                fatWrapperReadDisk
                0x00000000c00188f0                fatWrapperWriteDisk
                0x00000000c0018930                fatWrapperIoctl
                0x00000000c0018a50                FAT::FAT()
                0x00000000c0018a50                FAT::FAT()
                0x00000000c0018aa8                FAT::fixFilepath(char*)
                0x00000000c0018ae8                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0018c5c                FAT::openDir(char const*, void**)
                0x00000000c0018d0c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018e04                FAT::unlink(char const*)
                0x00000000c0018e84                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001903c                FAT::rename(char const*, char const*)
                0x00000000c0019108                FAT::mkdir(char const*)
                0x00000000c0019188                FAT::exists(char const*)
 *fill*         0x00000000c00191f7        0x1 
 .text          0x00000000c00191f8       0x94 fs/iso9660/helper.32
                0x00000000c00191f8                isoReadDiscSectorHelper
                0x00000000c0019254                iso_kprintf
                0x00000000c0019270                iso_kprintfd
 .text          0x00000000c001928c      0x714 fs/iso9660/vfslink.32
                0x00000000c001928c                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019292                ISO9660::getName()
                0x00000000c0019298                ISO9660::closeDir(void*)
                0x00000000c00192a2                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00192a8                ISO9660::unlink(char const*)
                0x00000000c00192ae                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00192b4                ISO9660::rename(char const*, char const*)
                0x00000000c00192ba                ISO9660::mkdir(char const*)
                0x00000000c00192c0                ISO9660::~ISO9660()
                0x00000000c00192c0                ISO9660::~ISO9660()
                0x00000000c00192e4                ISO9660::~ISO9660()
                0x00000000c001930c                ISO9660::exists(char const*)
                0x00000000c0019320                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0019406                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001944e                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019490                ISO9660::tell(void*, unsigned long long*)
                0x00000000c00194ce                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019520                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019662                ISO9660::close(void*)
                0x00000000c0019692                ISO9660::openDir(char const*, void**)
                0x00000000c001976c                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019887                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0019906                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019978                ISO9660::ISO9660()
                0x00000000c0019978                ISO9660::ISO9660()
 .text          0x00000000c00199a0      0x26c hal/sound/sndcard.32
                0x00000000c00199a0                SoundCard::beginPlayback()
                0x00000000c00199ae                SoundCard::stopPlayback()
                0x00000000c00199bc                SoundCard::SoundCard(char const*)
                0x00000000c00199bc                SoundCard::SoundCard(char const*)
                0x00000000c0019a5a                SoundCard::~SoundCard()
                0x00000000c0019a5a                SoundCard::~SoundCard()
                0x00000000c0019a7e                SoundCard::~SoundCard()
                0x00000000c0019aa8                SoundCard::configureRates(int, int, int)
                0x00000000c0019ad8                SoundCard::getSamples16(int, short*)
                0x00000000c0019b34                SoundCard::getSamples32(int, int*)
                0x00000000c0019bba                SoundCard::addChannel(SoundPort*)
                0x00000000c0019bf8                SoundCard::removeChannel(int)
 .text          0x00000000c0019c0c      0x393 hal/sound/sndport.32
                0x00000000c0019c0c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019c0c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019c98                SoundPort::~SoundPort()
                0x00000000c0019c98                SoundPort::~SoundPort()
                0x00000000c0019ccc                SoundPort::unpause()
                0x00000000c0019cd8                SoundPort::pause()
                0x00000000c0019ce4                SoundPort::getBufferUsed()
                0x00000000c0019cec                SoundPort::getBufferSize()
                0x00000000c0019cf4                SoundPort::buffer16(short*, int)
                0x00000000c0019d80                SoundPort::buffer32(int*, int)
                0x00000000c0019e0c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019edc                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0019f9f        0x0 hw/bus/isa.32
 *fill*         0x00000000c0019f9f        0x1 
 .text          0x00000000c0019fa0      0xbc5 hw/bus/pci.32
                0x00000000c0019fa0                PCI::open(int, int, void*)
                0x00000000c0019fbe                PCI::close(int, int, void*)
                0x00000000c0019fc2                PCI::PCI()
                0x00000000c0019fc2                PCI::PCI()
                0x00000000c001a05a                PCI::readBAR8(unsigned int, int)
                0x00000000c001a076                PCI::readBAR16(unsigned int, int)
                0x00000000c001a094                PCI::readBAR32(unsigned int, int)
                0x00000000c001a0b0                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001a0d0                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001a0f2                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001a112                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a188                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a232                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a256                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a27e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a2c8                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a2f0                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a314                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a338                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a360                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a3c4                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001a4aa                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a774                PCI::checkBus(unsigned char)
                0x00000000c001a798                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a91e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001aa9a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001ab0c                PCI::detect()
 *fill*         0x00000000c001ab65        0x1 
 .text          0x00000000c001ab66      0xb96 hw/diskctrl/ide.32
                0x00000000c001ab66                IDE::close(int, int, void*)
                0x00000000c001ab6a                IDE::IDE()
                0x00000000c001ab6a                IDE::IDE()
                0x00000000c001ab9e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001abb0                selectDrive(unsigned char, unsigned char)
                0x00000000c001abb2                IDE::getBase(unsigned char)
                0x00000000c001abc4                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ac84                IDE::read(unsigned char, unsigned char)
                0x00000000c001ad38                IDE::waitInterrupt(unsigned char)
                0x00000000c001ad9a                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001adb6                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001add2                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ae1c                IDE::open(int, int, void*)
                0x00000000c001b256                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b326                IDE::detect()
                0x00000000c001b5ee                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b6a8                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b6fc      0x32c hw/diskctrl/satabus.32
                0x00000000c001b6fc                SATABus::close(int, int, void*)
                0x00000000c001b700                SATABus::detect()
                0x00000000c001b702                SATABus::SATABus()
                0x00000000c001b702                SATABus::SATABus()
                0x00000000c001b788                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b7ba                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b802                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b822                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b84c                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001b95e                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001ba08                SATABus::open(int, int, void*)
 .text          0x00000000c001ba28      0x96d hw/diskphys/ata.32
                0x00000000c001ba28                ATA::close(int, int, void*)
                0x00000000c001ba4c                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001ba4e                ATA::ATA()
                0x00000000c001ba4e                ATA::ATA()
                0x00000000c001ba7c                ATA::flush(bool)
                0x00000000c001baca                ATA::readyForCommand()
                0x00000000c001bb16                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001beda                ATA::detectCHS()
                0x00000000c001bf04                ATA::open(int, int, void*)
                0x00000000c001bfd0                combineCharAndColour(char, unsigned char)
                0x00000000c001bfe1                combineColours(unsigned char, unsigned char)
                0x00000000c001bfee                ATA::read(unsigned long long, int, void*)
                0x00000000c001c1c4                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001c395        0x1 
 .text          0x00000000c001c396      0x612 hw/diskphys/atapi.32
                0x00000000c001c396                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c39c                ATAPI::close(int, int, void*)
                0x00000000c001c3c0                ATAPI::ATAPI()
                0x00000000c001c3c0                ATAPI::ATAPI()
                0x00000000c001c3ee                ATAPI::readyForCommand()
                0x00000000c001c440                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c700                ATAPI::diskRemoved()
                0x00000000c001c73a                ATAPI::eject()
                0x00000000c001c782                ATAPI::diskInserted()
                0x00000000c001c78e                ATAPI::detectMedia()
                0x00000000c001c84e                ATAPI::open(int, int, void*)
                0x00000000c001c92e                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001c9a8      0x7ff hw/diskphys/sata.32
                0x00000000c001c9a8                SATA::close(int, int, void*)
                0x00000000c001c9cc                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001c9ce                SATA::open(int, int, void*)
                0x00000000c001ca78                SATA::SATA()
                0x00000000c001ca78                SATA::SATA()
                0x00000000c001caa6                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ccf8                SATA::read(unsigned long long, int, void*)
                0x00000000c001cf48                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d1a7        0x1 
 .text          0x00000000c001d1a8      0x5d8 hw/diskphys/satapi.32
                0x00000000c001d1a8                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001d1ae                SATAPI::close(int, int, void*)
                0x00000000c001d1d2                SATAPI::SATAPI()
                0x00000000c001d1d2                SATAPI::SATAPI()
                0x00000000c001d200                SATAPI::diskRemoved()
                0x00000000c001d202                SATAPI::diskInserted()
                0x00000000c001d21e                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001d504                SATAPI::eject()
                0x00000000c001d540                SATAPI::detectMedia()
                0x00000000c001d596                SATAPI::open(int, int, void*)
                0x00000000c001d696                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d780      0x45b hw/intctrl/apic.32
                0x00000000c001d780                IOAPIC::close(int, int, void*)
                0x00000000c001d786                apicGetBase()
                0x00000000c001d7cc                IOAPIC::IOAPIC()
                0x00000000c001d7cc                IOAPIC::IOAPIC()
                0x00000000c001d7f4                apicOpen()
                0x00000000c001d970                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d9a2                IOAPIC::read(int)
                0x00000000c001d9ca                IOAPIC::open(int, int, void*)
                0x00000000c001dab0                IOAPIC::write(int, int)
                0x00000000c001dadc                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001dbdb        0x1 
 .text          0x00000000c001dbdc       0xf0 hw/timer/apictimer.32
                0x00000000c001dbdc                APICTimer::close(int, int, void*)
                0x00000000c001dbe4                apicTimerHandler(regs*, void*)
                0x00000000c001dc0c                APICTimer::open(int, int, void*)
                0x00000000c001dc7c                APICTimer::write(int)
                0x00000000c001dca4                APICTimer::APICTimer()
                0x00000000c001dca4                APICTimer::APICTimer()
 .text          0x00000000c001dccc      0x1ad hw/timer/pit.32
                0x00000000c001dccc                PIT::write(int)
                0x00000000c001dd50                pitHandler(regs*, void*)
                0x00000000c001dd78                PIT::open(int, int, void*)
                0x00000000c001ddc8                PIT::close(int, int, void*)
                0x00000000c001ddf8                PIT::PIT()
                0x00000000c001ddf8                PIT::PIT()
 *fill*         0x00000000c001de79        0x7 
 .text          0x00000000c001de80       0x83 arch/i386/avx.32
                0x00000000c001de80                avxDetect
                0x00000000c001deaa                avxSave
                0x00000000c001debb                avxLoad
                0x00000000c001decc                avxInit
                0x00000000c001deee                avxClose
                0x00000000c001deef                wouldSheSayYes
 *fill*         0x00000000c001df03        0xd 
 .text          0x00000000c001df10      0x2ec arch/i386/interrupt.32
                0x00000000c001df10                isr0
                0x00000000c001df20                isr1
                0x00000000c001df2a                isr2
                0x00000000c001df34                isr3
                0x00000000c001df3e                isr4
                0x00000000c001df48                isr5
                0x00000000c001df52                isr6
                0x00000000c001df5c                isr7
                0x00000000c001df66                isr8
                0x00000000c001df6e                isr9
                0x00000000c001df78                isr10
                0x00000000c001df80                isr11
                0x00000000c001df88                isr12
                0x00000000c001df90                isr13
                0x00000000c001dfaa                isr14
                0x00000000c001dfb2                isr15
                0x00000000c001dfbc                isr16
                0x00000000c001dfc6                isr17
                0x00000000c001dfd0                isr18
                0x00000000c001dfda                irq3
                0x00000000c001dfe4                irq4
                0x00000000c001dfee                irq5
                0x00000000c001dff8                irq6
                0x00000000c001e002                irq7
                0x00000000c001e00c                irq8
                0x00000000c001e016                irq9
                0x00000000c001e020                irq10
                0x00000000c001e02a                irq11
                0x00000000c001e034                irq12
                0x00000000c001e03e                irq13
                0x00000000c001e048                irq14
                0x00000000c001e052                irq15
                0x00000000c001e05c                irq1
                0x00000000c001e063                irq2
                0x00000000c001e06a                isr96
                0x00000000c001e071                irq0
                0x00000000c001e076                int_common_stub
                0x00000000c001e0a8                syscall_common_stub
                0x00000000c001e1ac                irq16
                0x00000000c001e1b6                irq17
                0x00000000c001e1c0                irq18
                0x00000000c001e1ca                irq19
                0x00000000c001e1d4                irq20
                0x00000000c001e1de                irq21
                0x00000000c001e1e8                irq22
                0x00000000c001e1f2                irq23
 *fill*         0x00000000c001e1fc        0x4 
 .text          0x00000000c001e200       0x10 arch/i386/rdrand.32
                0x00000000c001e200                i386GetRDRAND
 .text          0x00000000c001e210       0x39 arch/i386/sse.32
                0x00000000c001e210                absolutelyNoChanceInHell
                0x00000000c001e210                sseDetect
                0x00000000c001e228                sseSave
                0x00000000c001e230                sseLoad
                0x00000000c001e238                sseInit
                0x00000000c001e248                sseClose
 *fill*         0x00000000c001e249        0x7 
 .text          0x00000000c001e250       0x49 arch/i386/x87.32
                0x00000000c001e256                x87Detect
                0x00000000c001e271                x87Save
                0x00000000c001e278                x87Load
                0x00000000c001e27f                x87Init
                0x00000000c001e298                x87Close
 *fill*         0x00000000c001e299        0x3 
 .text          0x00000000c001e29c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e2c1        0x0 crtn.32
 *fill*         0x00000000c001e2c1        0x3 
 .text          0x00000000c001e2c4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e2c4                __divdi3
 *fill*         0x00000000c001e40f        0x1 
 .text          0x00000000c001e410      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e410                __moddi3
 *fill*         0x00000000c001e58e        0x2 
 .text          0x00000000c001e590       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001e590                __udivdi3
 *fill*         0x00000000c001e68f        0x1 
 .text          0x00000000c001e690      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001e690                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e7b0        0x0
 .iplt          0x00000000c001e7b0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e7aa        0xf
 .init          0x00000000c001e7aa        0x3 crti.32
                0x00000000c001e7aa                _init
 .init          0x00000000c001e7ad        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e7b2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e7b7        0x2 crtn.32

.fini           0x00000000c001e7b9        0xa
 .fini          0x00000000c001e7b9        0x3 crti.32
                0x00000000c001e7b9                _fini
 .fini          0x00000000c001e7bc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e7c1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e7c4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e7c4       0x23 core/computer.32
                0x00000000c001e7c4                Computer::~Computer()
                0x00000000c001e7c4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e7e8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e7e8       0x2a core/computer.32
                0x00000000c001e7e8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e812       0x21
 .text._Z10idleCommonv
                0x00000000c001e812       0x21 core/idle.32
                0x00000000c001e812                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e834        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e834        0x2 core/unixfile.32
                0x00000000c001e834                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e834                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e836       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e836       0x42 core/unixfile.32
                0x00000000c001e836                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e836                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e878       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e878       0xd3 core/unixfile.32
                0x00000000c001e878                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e94c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e94c        0x7 core/unixfile.32
                0x00000000c001e94c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e954       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e954       0xa1 core/unixfile.32
                0x00000000c001e954                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e9f6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e9f6        0x8 core/unixfile.32
                0x00000000c001e9f6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e9fe       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e9fe       0x1a hal/device.32
                0x00000000c001e9fe                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e9fe                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ea18       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ea18       0x2a hal/device.32
                0x00000000c001ea18                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ea42       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ea42       0xdc hal/device.32
                0x00000000c001ea42                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001eb1e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001eb1e       0x42 hal/device.32
                0x00000000c001eb1e                LinkedList<Device>::LinkedList()
                0x00000000c001eb1e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eb60       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eb60       0x1c hal/timer.32
                0x00000000c001eb60                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001eb7c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001eb7c        0x7 hal/timer.32
                0x00000000c001eb7c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001eb84       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001eb84       0xbc hal/timer.32
                0x00000000c001eb84                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ec40       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ec40       0xda hal/timer.32
                0x00000000c001ec40                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ed1c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ed1c       0x23 hw/acpi.32
                0x00000000c001ed1c                ACPI::~ACPI()
                0x00000000c001ed1c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ed40       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ed40       0x2a hw/acpi.32
                0x00000000c001ed40                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ed6c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ed6c        0x2 hw/acpi.32
                0x00000000c001ed6c                LinkedList<Device>::~LinkedList()
                0x00000000c001ed6c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ed70       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ed70       0x1c hw/acpi.32
                0x00000000c001ed70                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ed8c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ed8c        0x7 hw/acpi.32
                0x00000000c001ed8c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ed94       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ed94       0xb8 hw/acpi.32
                0x00000000c001ed94                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ee4c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ee4c       0x23 hw/cpu.32
                0x00000000c001ee4c                CPU::~CPU()
                0x00000000c001ee4c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ee70       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ee70       0x2a hw/cpu.32
                0x00000000c001ee70                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ee9c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ee9c        0x8 sys/kill.32
                0x00000000c001ee9c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001eea4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001eea4        0x2 thr/prcssthr.32
                0x00000000c001eea4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001eea4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001eea8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001eea8       0x49 thr/prcssthr.32
                0x00000000c001eea8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001eea8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001eef4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001eef4       0x42 thr/prcssthr.32
                0x00000000c001eef4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001eef4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001ef36       0x23
 .text._ZN3PCID2Ev
                0x00000000c001ef36       0x23 hw/bus/pci.32
                0x00000000c001ef36                PCI::~PCI()
                0x00000000c001ef36                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001ef5a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001ef5a       0x2a hw/bus/pci.32
                0x00000000c001ef5a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001ef84       0x23
 .text._ZN3IDED2Ev
                0x00000000c001ef84       0x23 hw/diskctrl/ide.32
                0x00000000c001ef84                IDE::~IDE()
                0x00000000c001ef84                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001efa8       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001efa8       0x2a hw/diskctrl/ide.32
                0x00000000c001efa8                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001efd2       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001efd2       0x23 hw/diskctrl/satabus.32
                0x00000000c001efd2                SATABus::~SATABus()
                0x00000000c001efd2                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001eff6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001eff6       0x2a hw/diskctrl/satabus.32
                0x00000000c001eff6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001f020       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f020       0x23 hw/diskphys/ata.32
                0x00000000c001f020                ATA::~ATA()
                0x00000000c001f020                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f044       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f044       0x2a hw/diskphys/ata.32
                0x00000000c001f044                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f06e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f06e       0x23 hw/diskphys/atapi.32
                0x00000000c001f06e                ATAPI::~ATAPI()
                0x00000000c001f06e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f092       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f092       0x2a hw/diskphys/atapi.32
                0x00000000c001f092                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001f0bc       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001f0bc       0x23 hw/diskphys/sata.32
                0x00000000c001f0bc                SATA::~SATA()
                0x00000000c001f0bc                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001f0e0       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001f0e0       0x2a hw/diskphys/sata.32
                0x00000000c001f0e0                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001f10a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001f10a       0x23 hw/diskphys/satapi.32
                0x00000000c001f10a                SATAPI::~SATAPI()
                0x00000000c001f10a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001f12e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001f12e       0x2a hw/diskphys/satapi.32
                0x00000000c001f12e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001f158       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f158       0x23 hw/intctrl/apic.32
                0x00000000c001f158                IOAPIC::~IOAPIC()
                0x00000000c001f158                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f17c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f17c       0x2a hw/intctrl/apic.32
                0x00000000c001f17c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f1a8       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f1a8       0x23 hw/timer/apictimer.32
                0x00000000c001f1a8                APICTimer::~APICTimer()
                0x00000000c001f1a8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f1cc       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f1cc       0x2a hw/timer/apictimer.32
                0x00000000c001f1cc                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f1f8       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f1f8       0x23 hw/timer/pit.32
                0x00000000c001f1f8                PIT::~PIT()
                0x00000000c001f1f8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f21c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f21c       0x2a hw/timer/pit.32
                0x00000000c001f21c                PIT::~PIT()

.rodata         0x00000000c001f246     0x2ba6
                0x00000000c001f246                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f246        0x2 
 .ctors         0x00000000c001f248        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f24c        0x4 core/unixfile.32
 .ctors         0x00000000c001f250        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f254        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f258                end_ctors = .
                0x00000000c001f258                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f258        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f25c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f25c                __DTOR_END__
                0x00000000c001f260                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f260        0x0 
 .rodata        0x00000000c001f260      0x101 acpica/utclib.32
                0x00000000c001f260                AcpiGbl_Ctypes
 *fill*         0x00000000c001f361        0x3 
 .rodata        0x00000000c001f364       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f37c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f3c6       0x1a 
 .rodata        0x00000000c001f3e0       0xed fs/fat/ff.32
 *fill*         0x00000000c001f4cd       0x13 
 .rodata        0x00000000c001f4e0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f8e0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001f94f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001fa64       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001facc       0x2c core/computer.32
                0x00000000c001facc                vtable for Computer
 .rodata.str1.4
                0x00000000c001faf8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001fb28        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001fb34       0x17 core/main.32
 *fill*         0x00000000c001fb4b        0x1 
 .rodata.str1.4
                0x00000000c001fb4c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fbf1       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fc49       0x39 core/pipe.32
 *fill*         0x00000000c001fc82        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001fc84       0x1c core/pipe.32
                0x00000000c001fc84                vtable for Pipe
 .rodata.str1.1
                0x00000000c001fca0       0x2b core/terminal.32
 *fill*         0x00000000c001fccb        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001fccc       0x1c core/terminal.32
                0x00000000c001fccc                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001fce8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001fd0a       0x15 core/unixfile.32
 *fill*         0x00000000c001fd1f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001fd20       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001fd6b        0x8 core/unixfile.32
 *fill*         0x00000000c001fd73        0x1 
 .rodata.str1.4
                0x00000000c001fd74       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001fd94       0x1c core/unixfile.32
                0x00000000c001fd94                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001fdb0       0x1c core/unixfile.32
                0x00000000c001fdb0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001fdcc      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001ff33      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002003a       0x33 coreobjs/c++.32
 *fill*         0x00000000c002006d        0x3 
 .rodata        0x00000000c0020070      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00201c0       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c00201c0       0x68 fs/vfs.32
                0x00000000c00201c0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020228       0x1c fs/vfs.32
                0x00000000c0020228                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020244       0x1c fs/vfs.32
                0x00000000c0020244                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0020260       0x2c hal/bus.32
                0x00000000c0020260                vtable for Bus
 .rodata.str1.1
                0x00000000c002028c       0x1e hal/clock.32
 *fill*         0x00000000c00202aa        0x2 
 .rodata._ZTV5Clock
                0x00000000c00202ac       0x3c hal/clock.32
                0x00000000c00202ac                vtable for Clock
 *fill*         0x00000000c00202e8       0x18 
 .rodata        0x00000000c0020300       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020330       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020388       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020388       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0020388       0x2c hal/device.32
                0x00000000c0020388                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00203b4       0x2c hal/device.32
                0x00000000c00203b4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00203e0       0x2c hal/diskctrl.32
                0x00000000c00203e0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002040c       0x38 hal/diskphys.32
                0x00000000c002040c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020444       0x3e hal/intctrl.32
 *fill*         0x00000000c0020482        0x2 
 .rodata.str1.4
                0x00000000c0020484       0x5d hal/intctrl.32
 .rodata        0x00000000c00204e1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0020534       0x34 hal/keybrd.32
                0x00000000c0020534                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020568       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00205ac       0x2c hal/logidisk.32
                0x00000000c00205ac                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00205d8       0x2c hal/mouse.32
                0x00000000c00205d8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0020604       0x34 hal/nic.32
                0x00000000c0020604                vtable for NIC
 .rodata.str1.1
                0x00000000c0020638        0xb hal/partition.32
 *fill*         0x00000000c0020643        0x1 
 .rodata._ZTV6Serial
                0x00000000c0020644       0x44 hal/serial.32
                0x00000000c0020644                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020688       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020688        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020688       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020688       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0020688       0x30 hal/timer.32
                0x00000000c0020688                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00206b8       0x10 hal/vcache.32
                0x00000000c00206b8                vtable for VCache
 .rodata.str1.1
                0x00000000c00206c8       0x93 hal/video.32
 *fill*         0x00000000c002075b        0x1 
 .rodata._ZTV5Video
                0x00000000c002075c       0x4c hal/video.32
                0x00000000c002075c                vtable for Video
 .rodata.str1.4
                0x00000000c00207a8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0020843      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c002097f       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c002097f        0x8 hw/acpi.32
 *fill*         0x00000000c002097f        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020980       0x2c hw/acpi.32
                0x00000000c0020980                vtable for ACPI
 .rodata.str1.1
                0x00000000c00209ac      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020b19        0x3 
 .rodata._ZTV3CPU
                0x00000000c0020b1c       0x2c hw/cpu.32
                0x00000000c0020b1c                vtable for CPU
 .rodata.str1.1
                0x00000000c0020b48       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0020b84       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020c15       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0020cde       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020d26       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0020d51       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020dc7       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020e0c        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0020e16       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0020e37       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0020ecd       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0020f21       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0020f4d      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0021119       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0021170      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021280       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021280       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021280       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021280        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0021280       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0021320       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021350      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c00214e0       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0021553       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0021568       0x3c arch/i386/rtc.32
                0x00000000c0021568                vtable for RTC
 .rodata.str1.1
                0x00000000c00215a4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00215e5        0x3 
 .rodata._ZTV3FAT
                0x00000000c00215e8       0x68 fs/fat/vfslink.32
                0x00000000c00215e8                vtable for FAT
 .rodata.str1.1
                0x00000000c0021650       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0021650      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0021788       0x68 fs/iso9660/vfslink.32
                0x00000000c0021788                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00217f0       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0021834       0x34 hal/sound/sndcard.32
                0x00000000c0021834                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0021868       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00218a7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00218df       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0021980       0x2c hw/bus/pci.32
                0x00000000c0021980                vtable for PCI
 .rodata.str1.1
                0x00000000c00219ac       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0021a33        0x1 
 .rodata._ZTV3IDE
                0x00000000c0021a34       0x2c hw/diskctrl/ide.32
                0x00000000c0021a34                vtable for IDE
 .rodata.str1.4
                0x00000000c0021a60       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0021a84       0x2c hw/diskctrl/satabus.32
                0x00000000c0021a84                vtable for SATABus
 .rodata.str1.1
                0x00000000c0021ab0       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0021ac2        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021ac4       0x38 hw/diskphys/ata.32
                0x00000000c0021ac4                vtable for ATA
 .rodata.str1.1
                0x00000000c0021afc        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0021b09        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0021b0c       0x38 hw/diskphys/atapi.32
                0x00000000c0021b0c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021b44       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0021bc0       0x38 hw/diskphys/sata.32
                0x00000000c0021bc0                vtable for SATA
 .rodata.str1.1
                0x00000000c0021bf8       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0021ce2        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0021ce4       0x38 hw/diskphys/satapi.32
                0x00000000c0021ce4                vtable for SATAPI
 .rodata        0x00000000c0021d1c        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0021d24       0x2c hw/intctrl/apic.32
                0x00000000c0021d24                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0021d50       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0021d6b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021d6c       0x30 hw/timer/apictimer.32
                0x00000000c0021d6c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021d9c       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021db9        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021dbc       0x30 hw/timer/pit.32
                0x00000000c0021dbc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021dec      0x4d9
 *(.data)
 .data          0x00000000c0021dec        0x0 crti.32
 .data          0x00000000c0021dec        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021dec                __dso_handle
 .data          0x00000000c0021df0        0x0 acpica/utclib.32
 .data          0x00000000c0021df0        0x0 core/malloc.32
 .data          0x00000000c0021df0        0x0 libk/ctype.32
 .data          0x00000000c0021df0        0x0 libk/string.32
 .data          0x00000000c0021df0        0x0 fs/fat/diskio.32
 .data          0x00000000c0021df0        0x0 fs/fat/ff.32
 .data          0x00000000c0021df0        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0021df0        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0021df0        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0021df0        0x0 core/computer.32
 .data          0x00000000c0021df0        0x0 core/gdt.32
 .data          0x00000000c0021df0        0x0 core/idle.32
 .data          0x00000000c0021df0        0x0 core/idt.32
 .data          0x00000000c0021df0        0x4 core/kheap.32
 .data          0x00000000c0021df4        0x0 core/main.32
 .data          0x00000000c0021df4        0x4 core/physmgr.32
                0x00000000c0021df4                Phys::bitmap
 .data          0x00000000c0021df8        0x0 core/pipe.32
 *fill*         0x00000000c0021df8        0x8 
 .data          0x00000000c0021e00       0x60 core/terminal.32
                0x00000000c0021e00                VgaText::hiddenOut
                0x00000000c0021e20                ansiToVGAMappings
 .data          0x00000000c0021e60        0x0 core/tss.32
 .data          0x00000000c0021e60        0x4 core/unixfile.32
                0x00000000c0021e60                UnixFile::nextFd
 .data          0x00000000c0021e64       0x15 core/virtmgr.32
                0x00000000c0021e64                Virt::pageAllocPtr
                0x00000000c0021e68                Virt::bitmap
                0x00000000c0021e6c                Virt::swapfileSectorsPerPage
                0x00000000c0021e70                Virt::swapfileLength
                0x00000000c0021e74                Virt::swapfileSector
                0x00000000c0021e78                Virt::swapfileDrive
 *fill*         0x00000000c0021e79        0x3 
 .data          0x00000000c0021e7c        0x4 coreobjs/c++.32
                0x00000000c0021e7c                __stack_chk_guard
 .data          0x00000000c0021e80        0x0 dbg/kconsole.32
 .data          0x00000000c0021e80        0x0 fs/vfs.32
 .data          0x00000000c0021e80        0x0 hal/bus.32
 .data          0x00000000c0021e80        0x0 hal/buzzer.32
 .data          0x00000000c0021e80        0x0 hal/clock.32
 .data          0x00000000c0021e80        0x0 hal/device.32
 .data          0x00000000c0021e80        0x0 hal/diskctrl.32
 .data          0x00000000c0021e80        0x0 hal/diskphys.32
 .data          0x00000000c0021e80        0x0 hal/fpu.32
 .data          0x00000000c0021e80        0x0 hal/intctrl.32
 .data          0x00000000c0021e80        0x0 hal/keybrd.32
 .data          0x00000000c0021e80        0x0 hal/logidisk.32
 .data          0x00000000c0021e80        0x0 hal/mouse.32
 .data          0x00000000c0021e80        0x0 hal/nic.32
 .data          0x00000000c0021e80        0x0 hal/partition.32
 .data          0x00000000c0021e80        0x0 hal/serial.32
 .data          0x00000000c0021e80        0x0 hal/timer.32
 .data          0x00000000c0021e80        0x0 hal/vcache.32
 .data          0x00000000c0021e80        0x0 hal/video.32
 .data          0x00000000c0021e80       0x10 hw/acpi.32
                0x00000000c0021e80                legacyIRQRemaps
 .data          0x00000000c0021e90        0x4 hw/cpu.32
                0x00000000c0021e90                lastCode
 *fill*         0x00000000c0021e94        0xc 
 .data          0x00000000c0021ea0      0x142 krnl/bootmsg.32
                0x00000000c0021ea0                KiSplashScreen
 *fill*         0x00000000c0021fe2       0x1e 
 .data          0x00000000c0022000       0x4d krnl/env.32
                0x00000000c0022000                defaultSysEnv
 .data          0x00000000c002204d        0x0 krnl/inlines.32
 .data          0x00000000c002204d        0x0 krnl/panic.32
 .data          0x00000000c002204d        0x0 krnl/powctrl.32
 .data          0x00000000c002204d        0x0 krnl/random.32
 .data          0x00000000c002204d        0x0 krnl/resolve.32
 *fill*         0x00000000c002204d       0x13 
 .data          0x00000000c0022060       0x4c krnl/signal.32
                0x00000000c0022060                KiDefaultSignalHandlers
 *fill*         0x00000000c00220ac       0x14 
 .data          0x00000000c00220c0       0xf0 krnl/syscalls.32
                0x00000000c00220c0                systemCallHandlers
 .data          0x00000000c00221b0        0x0 net/ethernet.32
 *fill*         0x00000000c00221b0       0x10 
 .data          0x00000000c00221c0      0x100 reg/cm.32
                0x00000000c00221c0                CmComponents
 .data          0x00000000c00222c0        0x0 reg/registry.32
 .data          0x00000000c00222c0        0x0 sys/eject.32
 .data          0x00000000c00222c0        0x0 sys/exit.32
 .data          0x00000000c00222c0        0x0 sys/getcwd.32
 .data          0x00000000c00222c0        0x0 sys/getpid.32
 .data          0x00000000c00222c0        0x0 sys/getramdata.32
 .data          0x00000000c00222c0        0x0 sys/getvgaptr.32
 .data          0x00000000c00222c0        0x0 sys/kill.32
 .data          0x00000000c00222c0        0x0 sys/loaddll.32
 .data          0x00000000c00222c0        0x0 sys/read.32
 .data          0x00000000c00222c0        0x0 sys/registersignal.32
 .data          0x00000000c00222c0        0x0 sys/registry.32
 .data          0x00000000c00222c0        0x0 sys/sbrk.32
 .data          0x00000000c00222c0        0x0 sys/setcwd.32
 .data          0x00000000c00222c0        0x0 sys/settime.32
 .data          0x00000000c00222c0        0x0 sys/timezone.32
 .data          0x00000000c00222c0        0x0 sys/write.32
 .data          0x00000000c00222c0        0x0 sys/wsbe.32
 .data          0x00000000c00222c0        0x0 sys/yield.32
 .data          0x00000000c00222c0        0x0 thr/elf.32
 .data          0x00000000c00222c0        0x4 thr/prcssthr.32
                0x00000000c00222c0                Thr::nextPID
 .data          0x00000000c00222c4        0x0 vm86/vm8086.32
 .data          0x00000000c00222c4        0x0 arch/i386/hal.32
 .data          0x00000000c00222c4        0x0 arch/i386/pic.32
 .data          0x00000000c00222c4        0x0 arch/i386/rtc.32
 .data          0x00000000c00222c4        0x0 arch/i386/vga.32
 .data          0x00000000c00222c4        0x0 fs/fat/vfslink.32
 .data          0x00000000c00222c4        0x0 fs/iso9660/helper.32
 .data          0x00000000c00222c4        0x1 fs/iso9660/vfslink.32
                0x00000000c00222c4                recentDriveletter
 .data          0x00000000c00222c5        0x0 hal/sound/sndcard.32
 .data          0x00000000c00222c5        0x0 hal/sound/sndport.32
 .data          0x00000000c00222c5        0x0 hw/bus/isa.32
 .data          0x00000000c00222c5        0x0 hw/bus/pci.32
 .data          0x00000000c00222c5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00222c5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00222c5        0x0 hw/diskphys/ata.32
 .data          0x00000000c00222c5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00222c5        0x0 hw/diskphys/sata.32
 .data          0x00000000c00222c5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00222c5        0x0 hw/intctrl/apic.32
 .data          0x00000000c00222c5        0x0 hw/timer/apictimer.32
 .data          0x00000000c00222c5        0x0 hw/timer/pit.32
 .data          0x00000000c00222c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00222c5        0x0 crtn.32
 .data          0x00000000c00222c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00222c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00222c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00222c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00222c8        0x0
 .got           0x00000000c00222c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00222c8        0x0
 .got.plt       0x00000000c00222c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00222c8        0x0
 .igot.plt      0x00000000c00222c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00222c8        0x0
 .tm_clone_table
                0x00000000c00222c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00222c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00222c5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00222c5        0x3 
 .eh_frame      0x00000000c00222c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00222c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00222c8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022320       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022360       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00223cc       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0023000       0x7d
 *(userkernel)
 userkernel     0x00000000c0023000       0x52 krnl/signal.32
                0x00000000c0023000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002302c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0023052       0x2b krnl/syscalls.32
                0x00000000c0023052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0024000        0x1
 *(align_previous)
 align_previous
                0x00000000c0024000        0x1 krnl/signal.32
                0x00000000c0024000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0024004        0x0
 .rel.got       0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0024001     0x4ba7
                0x00000000c0024001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0024001       0x1f 
 COMMON         0x00000000c0024020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0024020                dcache
                0x00000000c0024060                cdDriveLetter
                0x00000000c0024080                icache
 *(.bss)
 .bss           0x00000000c00240c0        0x0 crti.32
 .bss           0x00000000c00240c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00240e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00240e4       0x1c 
 .bss           0x00000000c0024100      0x378 core/malloc.32
 .bss           0x00000000c0024478        0x0 libk/ctype.32
 .bss           0x00000000c0024478        0x0 libk/string.32
 .bss           0x00000000c0024478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024478        0x8 
 .bss           0x00000000c0024480       0x88 fs/fat/ff.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0024508       0x18 
 .bss           0x00000000c0024520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0024eb8        0x6 core/computer.32
                0x00000000c0024eb8                Krnl::computer
                0x00000000c0024ebc                KeIsPreemptionOn
                0x00000000c0024ebd                KeIsSchedulingOn
 *fill*         0x00000000c0024ebe        0x2 
 .bss           0x00000000c0024ec0        0x6 core/gdt.32
                0x00000000c0024ec0                gdtDescr
 .bss           0x00000000c0024ec6        0x0 core/idle.32
 *fill*         0x00000000c0024ec6        0x2 
 .bss           0x00000000c0024ec8        0x6 core/idt.32
                0x00000000c0024ec8                idtDescr
 .bss           0x00000000c0024ece        0x0 core/kheap.32
 *fill*         0x00000000c0024ece        0x2 
 .bss           0x00000000c0024ed0        0x4 core/main.32
                0x00000000c0024ed0                sysBootSettings
 .bss           0x00000000c0024ed4       0x29 core/physmgr.32
                0x00000000c0024ed4                Phys::forbidEvictions
                0x00000000c0024ed8                Phys::currentPagePointer
                0x00000000c0024edc                Phys::highestMem
                0x00000000c0024ee0                Phys::oldPercent
                0x00000000c0024ee4                Phys::usedPages
                0x00000000c0024ee8                Phys::usablePages
                0x00000000c0024eec                Phys::dmaUsage
 .bss           0x00000000c0024efd        0x0 core/pipe.32
 *fill*         0x00000000c0024efd        0x3 
 .bss           0x00000000c0024f00        0x9 core/terminal.32
                0x00000000c0024f00                terminalCycle
                0x00000000c0024f04                activeTerminal
                0x00000000c0024f08                VgaText::graphicMode
 *fill*         0x00000000c0024f09        0x1 
 .bss           0x00000000c0024f0a        0x2 core/tss.32
                0x00000000c0024f0a                doubleFaultSelector
 *fill*         0x00000000c0024f0c       0x14 
 .bss           0x00000000c0024f20       0x84 core/unixfile.32
                0x00000000c0024f20                sfileLpt
                0x00000000c0024f60                sfileCom
                0x00000000c0024f84                sfileNul
                0x00000000c0024f88                sfilePnt
                0x00000000c0024f8c                sfileAux
                0x00000000c0024f90                sfileCon
                0x00000000c0024f94                initialFilesAdded
                0x00000000c0024f98                unixFileLinkedList
 .bss           0x00000000c0024fa4       0x10 core/virtmgr.32
                0x00000000c0024fa4                twswaps
                0x00000000c0024fa8                swapBalance
                0x00000000c0024fac                Virt::swapfileBitmap
                0x00000000c0024fb0                firstVAS
 .bss           0x00000000c0024fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0024fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0024fb4        0x4 fs/vfs.32
                0x00000000c0024fb4                installedFilesystems
 .bss           0x00000000c0024fb8        0x0 hal/bus.32
 .bss           0x00000000c0024fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0024fb8        0x8 hal/clock.32
                0x00000000c0024fb8                User::dstOn
                0x00000000c0024fb9                User::timezoneHalfHourOffset
                0x00000000c0024fbc                User::timezoneHourOffset
 .bss           0x00000000c0024fc0        0x0 hal/device.32
 .bss           0x00000000c0024fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0024fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0024fc0        0x0 hal/fpu.32
 .bss           0x00000000c0024fc0     0x2000 hal/intctrl.32
                0x00000000c0024fc0                INT_contexts
                0x00000000c0025fc0                INT_handlers
 .bss           0x00000000c0026fc0      0x429 hal/keybrd.32
                0x00000000c0026fc0                keyboardWaitingTaskList
                0x00000000c0026fc4                keyboardSetupYet
                0x00000000c0026fc8                guiKeyboardHandler
                0x00000000c0026fe0                keystates
 *fill*         0x00000000c00273e9       0x17 
 .bss           0x00000000c0027400       0x88 hal/logidisk.32
                0x00000000c0027400                diskAssignments
                0x00000000c0027420                disks
 .bss           0x00000000c0027488        0x4 hal/mouse.32
                0x00000000c0027488                guiMouseHandler
 .bss           0x00000000c002748c        0x0 hal/nic.32
 .bss           0x00000000c002748c        0x0 hal/partition.32
 .bss           0x00000000c002748c        0x0 hal/serial.32
 .bss           0x00000000c002748c        0x4 hal/timer.32
                0x00000000c002748c                milliTenthsSinceBoot
 .bss           0x00000000c0027490        0x0 hal/vcache.32
 .bss           0x00000000c0027490        0x4 hal/video.32
                0x00000000c0027490                screen
 *fill*         0x00000000c0027494        0xc 
 .bss           0x00000000c00274a0      0x480 hw/acpi.32
                0x00000000c00274a0                systemSleepFunction
                0x00000000c00274a4                systemResetFunction
                0x00000000c00274a8                systemShutdownFunction
                0x00000000c00274ac                nextACPITable
                0x00000000c00274c0                acpiTables
                0x00000000c00276c0                usingXSDT
                0x00000000c00276c4                MADTpointer
                0x00000000c00276c8                RSDTpointer
                0x00000000c00276cc                RSDPpointer
                0x00000000c00276d0                nextAPICNMI
                0x00000000c00276e0                apicNMIInfo
                0x00000000c0027760                legacyIRQFlags
                0x00000000c0027780                ioapicDiscoveryNumber
                0x00000000c00277a0                ioapicFoundInMADT
                0x00000000c00277c0                ioapicAddresses
                0x00000000c0027840                ioapicGSIBase
                0x00000000c00278c0                processorDiscoveryNumber
                0x00000000c00278e0                matchingAPICID
                0x00000000c0027900                processorID
 .bss           0x00000000c0027920       0x10 hw/cpu.32
                0x00000000c0027920                lastD
                0x00000000c0027924                lastC
                0x00000000c0027928                lastB
                0x00000000c002792c                lastA
 .bss           0x00000000c0027930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0027930        0x8 krnl/env.32
                0x00000000c0027930                Krnl::userEnv
                0x00000000c0027934                Krnl::systemEnv
 .bss           0x00000000c0027938        0x0 krnl/inlines.32
 .bss           0x00000000c0027938        0x1 krnl/panic.32
                0x00000000c0027938                KeIsKernelInPanic
 *fill*         0x00000000c0027939        0x7 
 .bss           0x00000000c0027940       0x48 krnl/powctrl.32
                0x00000000c0027940                Krnl::powCtrlOnBattery
                0x00000000c0027960                Krnl::currentPowerSettings
                0x00000000c0027984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0027988        0x8 krnl/random.32
                0x00000000c0027988                kiRandSeed
 .bss           0x00000000c0027990        0x0 krnl/resolve.32
 .bss           0x00000000c0027990        0x0 krnl/signal.32
 .bss           0x00000000c0027990        0x0 krnl/syscalls.32
 .bss           0x00000000c0027990        0x0 net/ethernet.32
 .bss           0x00000000c0027990        0x4 reg/cm.32
 .bss           0x00000000c0027994        0x0 reg/registry.32
 .bss           0x00000000c0027994        0x0 sys/eject.32
 .bss           0x00000000c0027994        0x0 sys/exit.32
 .bss           0x00000000c0027994        0x0 sys/getcwd.32
 .bss           0x00000000c0027994        0x0 sys/getpid.32
 .bss           0x00000000c0027994        0x0 sys/getramdata.32
 .bss           0x00000000c0027994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0027994        0x0 sys/kill.32
 .bss           0x00000000c0027994        0x0 sys/loaddll.32
 .bss           0x00000000c0027994        0x0 sys/read.32
 .bss           0x00000000c0027994        0x0 sys/registersignal.32
 .bss           0x00000000c0027994        0x0 sys/registry.32
 .bss           0x00000000c0027994        0x0 sys/sbrk.32
 .bss           0x00000000c0027994        0x0 sys/setcwd.32
 .bss           0x00000000c0027994        0x0 sys/settime.32
 .bss           0x00000000c0027994        0x0 sys/timezone.32
 .bss           0x00000000c0027994        0x0 sys/write.32
 .bss           0x00000000c0027994        0x0 sys/wsbe.32
 .bss           0x00000000c0027994        0x0 sys/yield.32
 *fill*         0x00000000c0027994        0xc 
 .bss           0x00000000c00279a0      0x7a4 thr/elf.32
                0x00000000c00279a0                Thr::driverLookupNext
                0x00000000c00279c0                Thr::driverLookupLen
                0x00000000c0027bc0                Thr::driverLookupAddr
                0x00000000c0027dc0                Thr::driverNameLookup
                0x00000000c0027fc0                Thr::kernelSymbols
                0x00000000c0028040                Thr::kernelStringTable
                0x00000000c00280c0                Thr::kernelSymbolTable
                0x00000000c0028140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0028144        0x4 
 .bss           0x00000000c0028148       0x68 thr/prcssthr.32
                0x00000000c0028148                cleanerThread
                0x00000000c002814c                weNeedTheCleanerToNotBlock
                0x00000000c0028150                retValLockStuff
                0x00000000c0028154                retValSchedLock
                0x00000000c0028158                lockStuffLock
                0x00000000c002815c                schedulerLock
                0x00000000c0028160                taskSwitchesPostponedFlag
                0x00000000c0028164                postponeTaskSwitchesCounter
                0x00000000c0028168                irqDisableCounter
                0x00000000c002816c                terminatedTaskList
                0x00000000c0028178                sleepingTaskList
                0x00000000c0028184                taskList
                0x00000000c0028190                kernelProcess
 *fill*         0x00000000c00281b0       0x10 
 .bss           0x00000000c00281c0       0x40 vm86/vm8086.32
                0x00000000c00281c0                Vm::vmRetV
                0x00000000c00281c4                Vm::vmDone
                0x00000000c00281c5                Vm::vmReady
                0x00000000c00281c8                Vm::vm86Thread
                0x00000000c00281cc                Vm::vmToHostCommsPtr
                0x00000000c00281e0                Vm::vmToHostComms
 .bss           0x00000000c0028200       0x14 arch/i386/hal.32
                0x00000000c0028200                apic
                0x00000000c0028204                fpuOwner
                0x00000000c0028208                coproLoadFunc
                0x00000000c002820c                coproSaveFunc
                0x00000000c0028210                gpFaultIntercept
 .bss           0x00000000c0028214        0x0 arch/i386/pic.32
 .bss           0x00000000c0028214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0028216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0028216        0xa 
 .bss           0x00000000c0028220       0xf0 fs/fat/vfslink.32
                0x00000000c0028220                FAT::fats
                0x00000000c0028240                FAT::vfsToFatRemaps
                0x00000000c00282c0                fatToVFSRemaps
 .bss           0x00000000c0028310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0028310       0x10 
 .bss           0x00000000c0028320      0x820 fs/iso9660/vfslink.32
                0x00000000c0028320                iso9660Owner
                0x00000000c0028324                recentSector
                0x00000000c0028340                recentBuffer
 .bss           0x00000000c0028b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0028b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0028b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0028b40        0xd hw/bus/pci.32
                0x00000000c0028b40                thePCI
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0028b4d        0x3 
 .bss           0x00000000c0028b50        0x8 hw/diskphys/ata.32
                0x00000000c0028b50                ataSectorsWritten
                0x00000000c0028b54                ataSectorsRead
 .bss           0x00000000c0028b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0028b58        0x8 
 .bss           0x00000000c0028b60       0x41 hw/intctrl/apic.32
                0x00000000c0028b60                noOfIOAPICs
                0x00000000c0028b80                ioapics
                0x00000000c0028ba0                IOAPICsSetupYet
 .bss           0x00000000c0028ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0028ba1        0x3 
 .bss           0x00000000c0028ba4        0x4 hw/timer/pit.32
                0x00000000c0028ba4                pitFreq
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0028ba8        0x0 crtn.32
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0028ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
