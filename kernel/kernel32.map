Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1b6da
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 .text          0x00000000c0001afb        0x0 libk/string.32
 .text          0x00000000c0001afb       0x51 fs/fat/diskio.32
                0x00000000c0001afb                disk_status
                0x00000000c0001afe                disk_initialize
                0x00000000c0001b01                disk_read
                0x00000000c0001b17                disk_write
                0x00000000c0001b2d                disk_ioctl
 .text          0x00000000c0001b4c     0x3d4b fs/fat/ff.32
                0x00000000c00038e8                f_mount
                0x00000000c000394a                f_open
                0x00000000c0003c15                f_read
                0x00000000c0003e14                f_write
                0x00000000c0004048                f_sync
                0x00000000c00040fd                f_close
                0x00000000c000412c                f_lseek
                0x00000000c00042d3                f_opendir
                0x00000000c000439e                f_closedir
                0x00000000c00043c0                f_readdir
                0x00000000c0004452                f_stat
                0x00000000c00044d1                f_getfree
                0x00000000c00045d3                f_truncate
                0x00000000c00046b7                f_unlink
                0x00000000c00047d9                f_mkdir
                0x00000000c0004974                f_rename
                0x00000000c0004b2a                f_chmod
                0x00000000c0004bd3                f_utime
                0x00000000c0004c81                f_getlabel
                0x00000000c0004dd2                f_setlabel
                0x00000000c0004f62                f_expand
                0x00000000c00050c2                f_mkfs
 *fill*         0x00000000c0005897        0x1 
 .text          0x00000000c0005898       0x2f fs/fat/ffsystem.32
                0x00000000c0005898                ff_memalloc
                0x00000000c00058b0                ff_memfree
 *fill*         0x00000000c00058c7        0x1 
 .text          0x00000000c00058c8      0x2a8 fs/fat/ffunicode.32
                0x00000000c00058c8                ff_uni2oem
                0x00000000c0005968                ff_oem2uni
                0x00000000c00059e0                ff_wtoupper
 .text          0x00000000c0005b70       0x94 compat/inlines.32
                0x00000000c0005b70                CPU::current()
                0x00000000c0005b7c                operator new(unsigned long)
                0x00000000c0005b81                operator delete(void*)
                0x00000000c0005b86                disableIRQs()
                0x00000000c0005b88                enableIRQs()
                0x00000000c0005b8a                lockScheduler()
                0x00000000c0005b92                unlockScheduler()
                0x00000000c0005ba1                lockStuff()
                0x00000000c0005baf                unlockStuff()
                0x00000000c0005be9                Virt::getAKernelVAS()
                0x00000000c0005bef                __not_memcpy
 .text          0x00000000c0005c04      0x118 compat/resolve.32
                0x00000000c0005c04                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0005d1c      0x68b core/computer.32
                0x00000000c0005d1c                Computer::close(int, int, void*)
                0x00000000c0005d61                Krnl::firstTask()
                0x00000000c0005e9a                Computer::Computer()
                0x00000000c0005e9a                Computer::Computer()
                0x00000000c0005f4c                Computer::setBootMessage(char const*)
                0x00000000c0005f4e                Computer::detectFeatures()
                0x00000000c0006158                Computer::displayFeatures()
                0x00000000c000615a                Computer::rdmsr(unsigned int)
                0x00000000c0006186                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00061be                Computer::shutdown()
                0x00000000c00061d6                Computer::restart()
                0x00000000c00061ee                Computer::sleep()
                0x00000000c0006202                Computer::nmiEnabled()
                0x00000000c000620e                Computer::readCMOS(unsigned char)
                0x00000000c0006228                Computer::enableNMI(bool)
                0x00000000c0006240                Computer::open(int, int, void*)
                0x00000000c0006314                Computer::disableNMI()
                0x00000000c0006324                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006342                Computer::handleNMI()
 *fill*         0x00000000c00063a7        0x1 
 .text          0x00000000c00063a8      0x1cf core/gdt.32
                0x00000000c00063a8                GDTEntry::setBase(unsigned int)
                0x00000000c00063c4                GDTEntry::setLimit(unsigned int)
                0x00000000c00063e2                GDT::GDT()
                0x00000000c00063e2                GDT::GDT()
                0x00000000c00063f8                GDT::addEntry(GDTEntry)
                0x00000000c000641a                GDT::getNumberOfEntries()
                0x00000000c0006422                GDT::flush()
                0x00000000c0006444                GDT::setup()
 .text          0x00000000c0006577       0x19 core/idle.32
                0x00000000c0006577                idleFunction(void*)
 .text          0x00000000c0006590      0x464 core/idt.32
                0x00000000c0006590                IDTEntry::IDTEntry(bool)
                0x00000000c0006590                IDTEntry::IDTEntry(bool)
                0x00000000c0006602                IDTEntry::setOffset(unsigned int)
                0x00000000c0006618                IDT::IDT()
                0x00000000c0006618                IDT::IDT()
                0x00000000c000661a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0006622                IDT::addEntry(IDTEntry, int)
                0x00000000c000663c                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0006674                IDT::flush()
                0x00000000c000668e                IDT::setup()
 .text          0x00000000c00069f4      0x183 core/kheap.32
                0x00000000c00069f4                sbrk
                0x00000000c0006a89                mmap
                0x00000000c0006a9f                munmap
                0x00000000c0006ab5                liballoc_lock()
                0x00000000c0006ac2                liballoc_unlock()
                0x00000000c0006ad6                liballoc_alloc(int)
                0x00000000c0006aee                liballoc_free(void*, int)
                0x00000000c0006b09                realloc
                0x00000000c0006b1d                malloc
                0x00000000c0006b2d                free
                0x00000000c0006b3d                rfree
                0x00000000c0006b4d                calloc
 .text          0x00000000c0006b77      0x1b4 core/main.32
                0x00000000c0006b77                Krnl::setBootMessage(char const*)
                0x00000000c0006be3                kernel_main
 .text          0x00000000c0006d2b      0x5dc core/physmgr.32
                0x00000000c0006d2b                Phys::allocateDMA(unsigned long)
                0x00000000c0006e02                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0006e35                Phys::setPageState(unsigned long, bool)
                0x00000000c0006e67                Phys::getPageState(unsigned long)
                0x00000000c0006e88                Phys::freePage(unsigned long)
                0x00000000c0006eea                Phys::allocatePage()
                0x00000000c0006fa8                Phys::allocateContiguousPages(int)
                0x00000000c0007004                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000703c                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0007307        0x1 
 .text          0x00000000c0007308      0x273 core/pipe.32
                0x00000000c0007308                Pipe::isAtty()
                0x00000000c000730c                Pipe::~Pipe()
                0x00000000c000730c                Pipe::~Pipe()
                0x00000000c0007330                Pipe::~Pipe()
                0x00000000c0007358                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007418                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0007514                Pipe::Pipe(int)
                0x00000000c0007514                Pipe::Pipe(int)
 *fill*         0x00000000c000757b        0x1 
 .text          0x00000000c000757c      0xa1e core/terminal.32
                0x00000000c000757c                VgaText::isAtty()
                0x00000000c0007580                VgaText::~VgaText()
                0x00000000c0007580                VgaText::~VgaText()
                0x00000000c00075a4                VgaText::~VgaText()
                0x00000000c00075ce                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00075ee                setTerminalScrollLock(bool)
                0x00000000c00075ef                doTerminalCycle()
                0x00000000c00075f0                addToTerminalCycle(VgaText*)
                0x00000000c00075f1                scrollTerminalScrollLock(int)
                0x00000000c00075f2                VgaText::updateTitle()
                0x00000000c00075f4                VgaText::load()
                0x00000000c00075f6                VgaText::updateCursor()
                0x00000000c000760c                VgaText::doANSI_SGR(int)
                0x00000000c0007680                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0007690                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00076a0                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00076c0                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00076cc                VgaText::setTitleColour(VgaColour)
                0x00000000c00076d8                VgaText::setTitle(char*)
                0x00000000c00076da                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00076ec                VgaText::scrollScreen()
                0x00000000c0007784                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0007796                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0007826                VgaText::getCursorX()
                0x00000000c000782e                VgaText::getCursorY()
                0x00000000c0007836                VgaText::setCursor(int, int)
                0x00000000c000784d                setActiveTerminal(VgaText*)
                0x00000000c0007898                VgaText::clearScreen()
                0x00000000c00078e6                VgaText::setCursorX(int)
                0x00000000c00078fe                VgaText::setCursorY(int)
                0x00000000c0007916                VgaText::incrementCursor(bool)
                0x00000000c000796a                VgaText::decrementCursor(bool)
                0x00000000c000798c                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0007a5a                VgaText::putchar(char)
                0x00000000c0007b46                VgaText::putx(unsigned int)
                0x00000000c0007b8c                VgaText::puts(char const*)
                0x00000000c0007bb2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0007bfe                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0007d50                VgaText::VgaText(char const*)
                0x00000000c0007d50                VgaText::VgaText(char const*)
                0x00000000c0007e9c                VgaText::receiveKey(unsigned char)
                0x00000000c0007f74                VgaText::doUpdate()
                0x00000000c0007f75                newTerminal(char*)
 *fill*         0x00000000c0007f9a        0x2 
 .text          0x00000000c0007f9c      0x1a1 core/tss.32
                0x00000000c0007f9c                TSS::TSS()
                0x00000000c0007f9c                TSS::TSS()
                0x00000000c0007fac                TSS::setESP(unsigned long)
                0x00000000c0007fc0                TSS::flush()
                0x00000000c0007fe0                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000813d        0x1 
 .text          0x00000000c000813e      0x4c2 core/unixfile.32
                0x00000000c000813e                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008194                ReservedFilename::isAtty()
                0x00000000c00081b0                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000820e                UnixFile::getFileDescriptor()
                0x00000000c0008216                UnixFile::UnixFile(int)
                0x00000000c0008216                UnixFile::UnixFile(int)
                0x00000000c00083c6                ReservedFilename::ReservedFilename(int)
                0x00000000c00083c6                ReservedFilename::ReservedFilename(int)
                0x00000000c00083f8                UnixFile::~UnixFile()
                0x00000000c00083f8                UnixFile::~UnixFile()
                0x00000000c0008490                UnixFile::~UnixFile()
                0x00000000c00084b8                ReservedFilename::~ReservedFilename()
                0x00000000c00084b8                ReservedFilename::~ReservedFilename()
                0x00000000c00084dc                ReservedFilename::~ReservedFilename()
                0x00000000c0008503                getFromFileDescriptor(int)
 .text          0x00000000c0008600     0x1166 core/virtmgr.32
                0x00000000c0008600                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0008635                Virt::getPageState(unsigned long)
                0x00000000c0008659                Virt::allocateKernelVirtualPages(int)
                0x00000000c000876a                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0008788                Virt::swapIDToSector(unsigned long)
                0x00000000c000879a                Virt::allocateSwapfilePage()
                0x00000000c0008818                Virt::virtualMemorySetup()
                0x00000000c0008863                Virt::setupPageSwapping(int)
                0x00000000c00088d4                VAS::VAS()
                0x00000000c00088d4                VAS::VAS()
                0x00000000c0008910                VAS::VAS(VAS*)
                0x00000000c0008910                VAS::VAS(VAS*)
                0x00000000c000893e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000896a                VAS::getPageTableEntry(unsigned long)
                0x00000000c0008989                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0008aae                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0008ad2                VAS::virtualToPhysical(unsigned long)
                0x00000000c0008aec                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0008b2c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0008b60                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0008b8a                VAS::~VAS()
                0x00000000c0008b8a                VAS::~VAS()
                0x00000000c0008cee                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0008df2                VAS::allocatePages(int, int)
                0x00000000c0008fca                VAS::setCPUSpecific(unsigned long)
                0x00000000c0008fe8                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c00090ae                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000919c                VAS::VAS(bool)
                0x00000000c000919c                VAS::VAS(bool)
                0x00000000c000941c                VAS::evict(unsigned long)
                0x00000000c00094de                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c00095cc                VAS::scanForEviction()
                0x00000000c00096ac                mapVASFirstTime
 .text          0x00000000c0009766       0x5f coreobjs/c++.32
                0x00000000c0009766                __cxa_atexit
                0x00000000c0009769                __cxa_finalize
                0x00000000c000976a                __stack_chk_fail
                0x00000000c00097a0                __cxa_pure_virtual
                0x00000000c00097b1                operator new[](unsigned long)
                0x00000000c00097b6                operator delete(void*, unsigned long)
                0x00000000c00097bb                operator delete[](void*)
                0x00000000c00097c0                operator delete[](void*, unsigned long)
 .text          0x00000000c00097c5      0x21c dbg/kconsole.32
                0x00000000c00097c5                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0009830                Dbg::logc(char)
                0x00000000c0009850                Dbg::logs(char*)
                0x00000000c000986d                Dbg::logWriteInt(unsigned int)
                0x00000000c000988b                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c00098ac                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00099e1        0x1 
 .text          0x00000000c00099e2      0xc5c fs/vfs.32
                0x00000000c00099e2                File::read(unsigned long long, void*, int*)
                0x00000000c0009a3a                File::write(unsigned long long, void*, int*)
                0x00000000c0009a92                Directory::read(unsigned long long, void*, int*)
                0x00000000c0009aea                Directory::write(unsigned long long, void*, int*)
                0x00000000c0009b18                File::isAtty()
                0x00000000c0009b1c                Directory::isAtty()
                0x00000000c0009b20                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0009b26                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0009b2c                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0009b32                File::~File()
                0x00000000c0009b32                File::~File()
                0x00000000c0009b56                File::~File()
                0x00000000c0009b80                Directory::~Directory()
                0x00000000c0009b80                Directory::~Directory()
                0x00000000c0009ba4                Directory::~Directory()
                0x00000000c0009bce                Filesystem::Filesystem()
                0x00000000c0009bce                Filesystem::Filesystem()
                0x00000000c0009bf2                Filesystem::~Filesystem()
                0x00000000c0009bf2                Filesystem::~Filesystem()
                0x00000000c0009c00                Filesystem::~Filesystem()
                0x00000000c0009c24                Fs::getcwd(Process*, char*, int)
                0x00000000c0009c4e                Fs::initVFS()
                0x00000000c0009c78                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c0009e22                File::File(char const*, Process*)
                0x00000000c0009e22                File::File(char const*, Process*)
                0x00000000c0009ee2                File::open(FileOpenMode)
                0x00000000c0009f40                File::close()
                0x00000000c0009fa0                File::seek(unsigned long long)
                0x00000000c0009ff6                File::tell(unsigned long long*)
                0x00000000c000a046                File::rewind()
                0x00000000c000a05a                File::unlink()
                0x00000000c000a0a6                File::rename(char const*)
                0x00000000c000a0f4                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000a150                File::exists()
                0x00000000c000a18e                File::stat(unsigned long long*, bool*)
                0x00000000c000a1ef                Fs::setcwd(Process*, char*)
                0x00000000c000a34c                Directory::Directory(char const*, Process*)
                0x00000000c000a34c                Directory::Directory(char const*, Process*)
                0x00000000c000a40c                Directory::open()
                0x00000000c000a468                Directory::close()
                0x00000000c000a4c8                Directory::unlink()
                0x00000000c000a514                Directory::rename(char const*)
                0x00000000c000a562                Directory::exists()
                0x00000000c000a5a0                Directory::read(dirent*)
                0x00000000c000a5ec                Directory::create()
                0x00000000c000a638                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000a63e        0x2 
 .text          0x00000000c000a640       0x86 hal/bus.32
                0x00000000c000a640                Bus::Bus(char const*)
                0x00000000c000a640                Bus::Bus(char const*)
                0x00000000c000a678                Bus::~Bus()
                0x00000000c000a678                Bus::~Bus()
                0x00000000c000a69c                Bus::~Bus()
 .text          0x00000000c000a6c6       0x96 hal/buzzer.32
                0x00000000c000a6c6                beepThread(void*)
                0x00000000c000a703                Krnl::beep(int, int, bool)
 .text          0x00000000c000a75c      0x46d hal/clock.32
                0x00000000c000a75c                User::loadClockSettings(int)
                0x00000000c000a7ae                Clock::Clock(char const*)
                0x00000000c000a7ae                Clock::Clock(char const*)
                0x00000000c000a7e4                Clock::~Clock()
                0x00000000c000a7e4                Clock::~Clock()
                0x00000000c000a808                Clock::~Clock()
                0x00000000c000a832                Clock::timeInSecondsLocal()
                0x00000000c000a87a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000a8d3                datetimeToSeconds(datetime_t)
                0x00000000c000aa00                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000aa60                secondsToDatetime(unsigned long long)
                0x00000000c000aba4                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000abc9        0x1 
 .text          0x00000000c000abca      0x464 hal/device.32
                0x00000000c000abca                Device::hibernate()
                0x00000000c000abcc                Device::wake()
                0x00000000c000abce                Device::detect()
                0x00000000c000abd0                Device::disableLegacy()
                0x00000000c000abd2                Device::powerSaving(PowerSavingLevel)
                0x00000000c000abd4                DriverlessDevice::close(int, int, void*)
                0x00000000c000abd8                DriverlessDevice::detect()
                0x00000000c000abda                DriverlessDevice::open(int, int, void*)
                0x00000000c000abee                Device::~Device()
                0x00000000c000abee                Device::~Device()
                0x00000000c000abfc                Device::~Device()
                0x00000000c000ac24                Device::findAndLoadDriver()
                0x00000000c000ac32                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000ac58                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000ac98                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000acc2                Device::getParent()
                0x00000000c000acce                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000acec                Device::addChild(Device*)
                0x00000000c000ad30                Device::removeAllChildren()
                0x00000000c000ad76                Device::hibernateAll()
                0x00000000c000ada6                Device::wakeAll()
                0x00000000c000add6                Device::detectAll()
                0x00000000c000ae06                Device::disableLegacyAll()
                0x00000000c000ae08                Device::loadDriversForAll()
                0x00000000c000ae0a                Device::closeAll()
                0x00000000c000ae40                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000ae76                Device::setName(char const*)
                0x00000000c000ae84                Device::Device(char const*)
                0x00000000c000ae84                Device::Device(char const*)
                0x00000000c000af80                Device::getName()
                0x00000000c000af8a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000af8a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000afc0                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000b004                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000b02e        0x2 
 .text          0x00000000c000b030       0x86 hal/diskctrl.32
                0x00000000c000b030                HardDiskController::HardDiskController(char const*)
                0x00000000c000b030                HardDiskController::HardDiskController(char const*)
                0x00000000c000b068                HardDiskController::~HardDiskController()
                0x00000000c000b068                HardDiskController::~HardDiskController()
                0x00000000c000b08c                HardDiskController::~HardDiskController()
 .text          0x00000000c000b0b6       0xe2 hal/diskphys.32
                0x00000000c000b0b6                PhysicalDisk::eject()
                0x00000000c000b0ba                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b0ba                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b122                PhysicalDisk::startCache()
                0x00000000c000b14a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b14a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b16e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000b198        0x0 hal/fpu.32
 .text          0x00000000c000b198      0x35d hal/intctrl.32
                0x00000000c000b198                int_handler
                0x00000000c000b220                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000b268                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b3a0                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000b3d4                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b453                setupINTS()
                0x00000000c000b4b0                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000b4f5        0x1 
 .text          0x00000000c000b4f6      0x78c hal/keybrd.32
                0x00000000c000b4f6                startGUI(void*)
                0x00000000c000b562                startGUIVESA(void*)
                0x00000000c000b5ce                sendKeyToTerminal(unsigned char)
                0x00000000c000b691                sendKeyboardToken(KeyboardToken)
                0x00000000c000bad1                clearInternalKeybuffer(VgaText*)
                0x00000000c000bb06                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000bbf8                Keyboard::Keyboard(char const*)
                0x00000000c000bbf8                Keyboard::Keyboard(char const*)
                0x00000000c000bc34                Keyboard::~Keyboard()
                0x00000000c000bc34                Keyboard::~Keyboard()
                0x00000000c000bc58                Keyboard::~Keyboard()
 .text          0x00000000c000bc82      0x3ea hal/logidisk.32
                0x00000000c000bc82                LogicalDisk::close(int, int, void*)
                0x00000000c000bc86                LogicalDisk::~LogicalDisk()
                0x00000000c000bc86                LogicalDisk::~LogicalDisk()
                0x00000000c000bcaa                LogicalDisk::~LogicalDisk()
                0x00000000c000bcd4                LogicalDisk::open(int, int, void*)
                0x00000000c000bce8                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000bd20                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000bd66                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bd66                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000be1c                LogicalDisk::assignDriveLetter()
                0x00000000c000bed2                LogicalDisk::mount()
                0x00000000c000bf1a                LogicalDisk::unmount()
                0x00000000c000bf2a                LogicalDisk::eject()
                0x00000000c000bf3e                LogicalDisk::unassignDriveLetter()
                0x00000000c000bf94                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000c000                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000c06c       0x86 hal/mouse.32
                0x00000000c000c06c                Mouse::Mouse(char const*)
                0x00000000c000c06c                Mouse::Mouse(char const*)
                0x00000000c000c0a4                Mouse::~Mouse()
                0x00000000c000c0a4                Mouse::~Mouse()
                0x00000000c000c0c8                Mouse::~Mouse()
 .text          0x00000000c000c0f2      0x339 hal/partition.32
                0x00000000c000c0f2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c19a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000c42b        0x1 
 .text          0x00000000c000c42c       0x86 hal/serial.32
                0x00000000c000c42c                Serial::Serial(char const*)
                0x00000000c000c42c                Serial::Serial(char const*)
                0x00000000c000c464                Serial::~Serial()
                0x00000000c000c464                Serial::~Serial()
                0x00000000c000c488                Serial::~Serial()
 *fill*         0x00000000c000c4b2        0x2 
 .text          0x00000000c000c4b4      0x234 hal/timer.32
                0x00000000c000c4b4                Timer::Timer(char const*)
                0x00000000c000c4b4                Timer::Timer(char const*)
                0x00000000c000c4ec                Timer::~Timer()
                0x00000000c000c4ec                Timer::~Timer()
                0x00000000c000c510                Timer::~Timer()
                0x00000000c000c53a                Timer::read()
                0x00000000c000c545                setupTimer(int)
                0x00000000c000c580                timerHandler(unsigned int)
 .text          0x00000000c000c6e8      0x43e hal/vcache.32
                0x00000000c000c6e8                VCache::VCache(PhysicalDisk*)
                0x00000000c000c6e8                VCache::VCache(PhysicalDisk*)
                0x00000000c000c850                VCache::invalidateReadBuffer()
                0x00000000c000c860                VCache::writeWriteBuffer()
                0x00000000c000c8ac                VCache::~VCache()
                0x00000000c000c8ac                VCache::~VCache()
                0x00000000c000c900                VCache::~VCache()
                0x00000000c000c928                VCache::write(unsigned long long, int, void*)
                0x00000000c000ca22                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000cb26      0x4b3 hal/video.32
                0x00000000c000cb26                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000cb72                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000cbe2                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000cc60                Video::clearScreen(unsigned int)
                0x00000000c000cc94                Video::putpixel(int, int, unsigned int)
                0x00000000c000cca2                Video::Video(char const*)
                0x00000000c000cca2                Video::Video(char const*)
                0x00000000c000ccd8                Video::~Video()
                0x00000000c000ccd8                Video::~Video()
                0x00000000c000ccfc                Video::~Video()
                0x00000000c000cd26                Video::isMonochrome()
                0x00000000c000cd32                Video::getWidth()
                0x00000000c000cd3e                Video::getHeight()
                0x00000000c000cd4a                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000ce06                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000cf6e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000cfd9        0x3 
 .text          0x00000000c000cfdc     0x1307 hw/acpi.32
                0x00000000c000cfdc                ACPI::close(int, int, void*)
                0x00000000c000d094                findRSDP()
                0x00000000c000d124                loadACPITables(unsigned char*)
                0x00000000c000d388                findRSDT(unsigned char*)
                0x00000000c000d4d8                findDataTable(unsigned char*, char*)
                0x00000000c000d550                scanMADT()
                0x00000000c000da24                ACPI::ACPI()
                0x00000000c000da24                ACPI::ACPI()
                0x00000000c000da78                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000db60                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000dc28                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000dc30                ACPI::detectPCI()
                0x00000000c000de38                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000de8c                ACPI::sleep()
                0x00000000c000dea8                ACPI::open(int, int, void*)
 *fill*         0x00000000c000e2e3        0x1 
 .text          0x00000000c000e2e4      0xb95 hw/cpu.32
                0x00000000c000e2e4                CPU::close(int, int, void*)
                0x00000000c000e2e8                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000e304                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000e31c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000e390                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000e414                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000e442                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000e470                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000e49e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000e4cc                CPU::CPU()
                0x00000000c000e4cc                CPU::CPU()
                0x00000000c000e55a                CPU::displayFeatures()
                0x00000000c000e55c                CPU::detectFeatures()
                0x00000000c000ec20                CPU::setupSMEP()
                0x00000000c000ec2c                CPU::setupUMIP()
                0x00000000c000ec36                CPU::setupTSC()
                0x00000000c000ec40                CPU::setupLargePages()
                0x00000000c000ec4a                CPU::setupPAT()
                0x00000000c000ec86                CPU::setupMTRR()
                0x00000000c000ec88                CPU::setupGlobalPages()
                0x00000000c000ec92                CPU::allowUsermodeDataAccess()
                0x00000000c000eca4                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ecb6                CPU::setupSMAP()
                0x00000000c000ecc4                CPU::setupFeatures()
                0x00000000c000ed90                CPU::open(int, int, void*)
 *fill*         0x00000000c000ee79        0x1 
 .text          0x00000000c000ee7a      0x581 krnl/env.32
                0x00000000c000ee7a                EnvVarContainer::getEnv(char const*)
                0x00000000c000eeb8                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000ef7a                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000ef7c                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000f162                EnvVarContainer::__loadSystem()
                0x00000000c000f17c                EnvVarContainer::__loadUser()
                0x00000000c000f17e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f17e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f1a0                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f1a0                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f1d0                Krnl::getEnv(Process*, char const*)
                0x00000000c000f235                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000f24f                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000f26e                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000f281                Krnl::deleteEnvSystem(char const*)
                0x00000000c000f282                Krnl::deleteEnvUser(char const*)
                0x00000000c000f283                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000f284                Krnl::newProcessEnv(Process*)
                0x00000000c000f2a6                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000f2f2                Krnl::loadSystemEnv()
                0x00000000c000f320                Krnl::loadUserEnv()
                0x00000000c000f346                Krnl::flushEnv()
                0x00000000c000f347                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c000f367                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c000f3fb      0x108 krnl/panic.32
                0x00000000c000f3fb                Krnl::panic(char const*)
 .text          0x00000000c000f503      0x142 krnl/powctrl.32
                0x00000000c000f503                Krnl::powerThread(void*)
                0x00000000c000f531                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c000f547                Krnl::userIOReceived()
                0x00000000c000f552                Krnl::handlePowerButton()
                0x00000000c000f587                Krnl::handleSleepButton()
                0x00000000c000f5bc                Krnl::setupPowerManager()
 .text          0x00000000c000f645      0x50e reg/registry.32
                0x00000000c000f645                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c000f79d                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c000f8f2                Reg::getLine(char*, char*, char*)
                0x00000000c000f929                Reg::readInt(char*, char*, int*)
                0x00000000c000fa14                Reg::readString(char*, char*, char*, int)
                0x00000000c000fa95                Reg::readBool(char*, char*, bool*)
                0x00000000c000faba                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c000fae6                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c000fb12                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c000fb53       0x36 sys/sc_eject.32
                0x00000000c000fb53                Sys::eject(regs*)
 .text          0x00000000c000fb89       0x18 sys/sc_exit.32
                0x00000000c000fb89                Sys::exit(regs*)
 .text          0x00000000c000fba1       0x1f sys/sc_getcwd.32
                0x00000000c000fba1                Sys::getCwd(regs*)
 .text          0x00000000c000fbc0        0xc sys/sc_getpid.32
                0x00000000c000fbc0                Sys::getPID(regs*)
 .text          0x00000000c000fbcc       0x1a sys/sc_getramdata.32
                0x00000000c000fbcc                Sys::getRAMData(regs*)
 .text          0x00000000c000fbe6       0x82 sys/sc_getvgaptr.32
                0x00000000c000fbe6                Sys::getVGAPtr(regs*)
 .text          0x00000000c000fc68       0xa8 sys/sc_loaddll.32
                0x00000000c000fc68                Sys::loadDLL(regs*)
 .text          0x00000000c000fd10       0x68 sys/sc_read.32
                0x00000000c000fd10                Sys::read(regs*)
 .text          0x00000000c000fd78       0x55 sys/sc_sbrk.32
                0x00000000c000fd78                Sys::sbrk(regs*)
 .text          0x00000000c000fdcd       0x1c sys/sc_setcwd.32
                0x00000000c000fdcd                Sys::setCwd(regs*)
 .text          0x00000000c000fde9       0x95 sys/sc_settime.32
                0x00000000c000fde9                Sys::setTime(regs*)
 .text          0x00000000c000fe7e       0x4a sys/sc_timezone.32
                0x00000000c000fe7e                Sys::timezone(regs*)
 .text          0x00000000c000fec8       0x68 sys/sc_write.32
                0x00000000c000fec8                Sys::write(regs*)
 .text          0x00000000c000ff30       0x62 sys/sc_wsbe.32
                0x00000000c000ff30                Sys::wsbe(regs*)
 .text          0x00000000c000ff92       0x25 sys/sc_yield.32
                0x00000000c000ff92                Sys::yield(regs*)
 .text          0x00000000c000ffb7      0xe2c sys/syscalls.32
                0x00000000c000ffb7                sysCallSeekDir(regs*)
                0x00000000c000ffbc                sysCallTellDir(regs*)
                0x00000000c000ffc1                sysCallVerify(regs*)
                0x00000000c000ffcb                sysCallGetArgc(regs*)
                0x00000000c000ffdb                sysCallTTYName(regs*)
                0x00000000c000ffe3                sysFormatDisk(regs*)
                0x00000000c0010050                sysSetDiskVolumeLabel(regs*)
                0x00000000c001009a                sysGetDiskVolumeLabel(regs*)
                0x00000000c00100ef                sysShutdown(regs*)
                0x00000000c001014d                sysCallRealpath(regs*)
                0x00000000c0010190                sysCallReadDir(regs*)
                0x00000000c0010210                sysCallIsATTY(regs*)
                0x00000000c001026c                sysCallSeek(regs*)
                0x00000000c00102c5                sysCallTell(regs*)
                0x00000000c0010334                sysCallSize(regs*)
                0x00000000c00103a9                sysCallSizeFromFilename(regs*)
                0x00000000c001045c                sysCallClose(regs*)
                0x00000000c00104bc                sysCallOpenDir(regs*)
                0x00000000c0010533                sysCallCloseDir(regs*)
                0x00000000c0010587                sysCallMakeDir(regs*)
                0x00000000c00105f9                sysCallWait(regs*)
                0x00000000c0010616                sysCallNotImpl(regs*)
                0x00000000c0010631                sysPanic(regs*)
                0x00000000c001064c                sysCallRmdir(regs*)
                0x00000000c00106b3                sysCallUnlink(regs*)
                0x00000000c001071a                sysCallGetArgv(regs*)
                0x00000000c0010767                sysCallUSleep(regs*)
                0x00000000c0010790                sysCallSpawn(regs*)
                0x00000000c00107f9                sysCallGetEnv(regs*)
                0x00000000c00108a8                sysSetFatAttrib(regs*)
                0x00000000c001091f                sysPipe(regs*)
                0x00000000c0010964                sysGetUnixTime(regs*)
                0x00000000c0010978                string_ends_with(char const*, char const*)
                0x00000000c00109c2                sysCallOpen(regs*)
                0x00000000c0010bb6                Sys::loadSyscalls()
                0x00000000c0010da1                Sys::systemCall(regs*, void*)
 .text          0x00000000c0010de3     0x11e5 thr/elf.32
                0x00000000c0010de3                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001106f                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0011285                Thr::runtimeReferenceHelper()
                0x00000000c0011298                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00112e7                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00115a5                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0011cdb                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0011d0d                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0011d44                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0011d5e                Thr::loadDLL(char const*, bool)
                0x00000000c0011f8f                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0011fc8     0x12c5 thr/prcssthr.32
                0x00000000c0011fc8                userModeEntryPoint(void*)
                0x00000000c0011ff0                changeTSS
                0x00000000c0012020                switchToThread(ThreadControlBlock*)
                0x00000000c00120d4                Process::addArgs(char**)
                0x00000000c0012134                Process::Process(char const*, Process*, char**)
                0x00000000c0012134                Process::Process(char const*, Process*, char**)
                0x00000000c0012324                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0012324                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00124e0                taskStartupFunction
                0x00000000c00124ec                Semaphore::Semaphore(int)
                0x00000000c00124ec                Semaphore::Semaphore(int)
                0x00000000c001251c                Mutex::Mutex()
                0x00000000c001251c                Mutex::Mutex()
                0x00000000c0012530                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0012628                Process::createUserThread()
                0x00000000c0012648                setupMultitasking(void (*)())
                0x00000000c0012750                schedule()
                0x00000000c00127e0                Semaphore::tryAcquire()
                0x00000000c00128ac                Semaphore::assertLocked(char const*)
                0x00000000c0012924                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001294c                blockTask(TaskState)
                0x00000000c001297c                waitTask(int, int*, int)
                0x00000000c00129c0                milliTenthSleepUntil(unsigned int)
                0x00000000c0012a50                milliTenthSleep(unsigned int)
                0x00000000c0012a60                sleep(unsigned int)
                0x00000000c0012a7c                Semaphore::acquire()
                0x00000000c0012b38                taskReturned
                0x00000000c0012b74                Thr::processFromPID(int)
                0x00000000c0012c14                unblockTask(ThreadControlBlock*)
                0x00000000c0012cb8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0012f84                cleanerTaskFunction(void*)
                0x00000000c0013074                terminateTask(int)
                0x00000000c0013140                Thr::terminateFromIRQ(int)
                0x00000000c0013150                Semaphore::release()
 .text          0x00000000c001328d      0xb93 vm86/vm8086.32
                0x00000000c001328d                Vm::inbv(unsigned short)
                0x00000000c00132a0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00132d6                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00132e6                Vm::getSegment(unsigned int)
                0x00000000c00132ee                Vm::getOffset(unsigned int)
                0x00000000c00132f3                Vm::mainloop2()
                0x00000000c001332d                Vm::mainVm8086Loop(void*)
                0x00000000c001333d                Vm::mainloop3(unsigned long)
                0x00000000c0013363                Vm::initialise8086()
                0x00000000c00133a6                Vm::finish8086()
                0x00000000c0013407                Vm::getOutput8086(unsigned char*)
                0x00000000c001342c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00134e5                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001364d                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00136d7                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00136e8                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00136fa                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001370b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0013720                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0013736                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001374b                Vm::faultHandler(regs*)
 .text          0x00000000c0013e20      0x8e9 arch/i386/hal.32
                0x00000000c0013e20                noCopro(unsigned long)
                0x00000000c0013e21                nmiHandler(regs*, void*)
                0x00000000c0013e3a                doubleFault(regs*, void*)
                0x00000000c0013e53                displayDebugInfo(regs*)
                0x00000000c0014174                displayProgramFault(char const*)
                0x00000000c00141c0                gpFault(regs*, void*)
                0x00000000c0014225                pgFault(regs*, void*)
                0x00000000c00142ab                otherISRHandler(regs*, void*)
                0x00000000c00142df                opcodeFault(regs*, void*)
                0x00000000c001435f                i386SaveCoprocessor(void*)
                0x00000000c0014373                i386LoadCoprocessor(void*)
                0x00000000c0014387                x87EmulHandler(regs*, void*)
                0x00000000c0014424                HalInitialiseCoprocessor()
                0x00000000c00144d2                HalPanic(char const*)
                0x00000000c00144d7                HalQueryPerformanceCounter()
                0x00000000c00144f2                HalInitialise()
                0x00000000c0014698                HalMakeBeep(int)
                0x00000000c00146d2                HalGetRand()
                0x00000000c00146d5                HalEndOfInterrupt(int)
                0x00000000c0014706                HalRestart()
                0x00000000c0014707                HalShutdown()
                0x00000000c0014708                HalSleep()
 *fill*         0x00000000c0014709        0x3 
 .text          0x00000000c001470c      0x2f4 arch/i386/pic.32
                0x00000000c001470c                picIoWait()
                0x00000000c0014714                picDisable()
                0x00000000c0014748                picGetIRQReg(int)
                0x00000000c00147cc                picOpen()
                0x00000000c001495c                picEOI(int)
 .text          0x00000000c0014a00      0x64d arch/i386/rtc.32
                0x00000000c0014a00                RTC::open(int, int, void*)
                0x00000000c0014a04                RTC::close(int, int, void*)
                0x00000000c0014a08                RTC::timeInSecondsUTC()
                0x00000000c0014a1a                RTC::timeInDatetimeUTC()
                0x00000000c0014a40                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0014a7e                RTC::~RTC()
                0x00000000c0014a7e                RTC::~RTC()
                0x00000000c0014aa2                RTC::~RTC()
                0x00000000c0014acc                RTC::get_update_in_progress_flag()
                0x00000000c0014ae4                RTC::completeRTCRefresh()
                0x00000000c0014d9c                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0014f4f                rtcIRQHandler(regs*, void*)
                0x00000000c0014f94                RTC::RTC()
                0x00000000c0014f94                RTC::RTC()
 *fill*         0x00000000c001504d        0x3 
 .text          0x00000000c0015050      0x203 arch/i386/vga.32
                0x00000000c0015050                HalConsoleScroll(int, int)
                0x00000000c0015158                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00151c4                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0015253        0x1 
 .text          0x00000000c0015254     0x13e7 fs/fat/vfslink.32
                0x00000000c0015254                FAT::getName()
                0x00000000c001525c                FAT::tell(void*, unsigned long long*)
                0x00000000c0015298                FAT::stat(void*, unsigned long long*)
                0x00000000c00152d4                FAT::~FAT()
                0x00000000c00152d4                FAT::~FAT()
                0x00000000c00152f8                FAT::~FAT()
                0x00000000c0015320                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00153c4                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0015488                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001565c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0015874                FAT::allocateSwapfile(char const*, int)
                0x00000000c0015a34                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0015ba0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0015c00                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0015c60                FAT::close(void*)
                0x00000000c0015cb4                FAT::closeDir(void*)
                0x00000000c0015d08                FAT::seek(void*, unsigned long long)
                0x00000000c0015d60                fatWrapperReadDisk
                0x00000000c0015da4                fatWrapperWriteDisk
                0x00000000c0015de8                fatWrapperIoctl
                0x00000000c0015f04                FAT::FAT()
                0x00000000c0015f04                FAT::FAT()
                0x00000000c0015f58                FAT::fixFilepath(char*)
                0x00000000c0015f94                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00160cc                FAT::openDir(char const*, void**)
                0x00000000c001617c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0016274                FAT::unlink(char const*)
                0x00000000c00162f4                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0016480                FAT::rename(char const*, char const*)
                0x00000000c001654c                FAT::mkdir(char const*)
                0x00000000c00165cc                FAT::exists(char const*)
 *fill*         0x00000000c001663b        0x1 
 .text          0x00000000c001663c      0xc1b fs/iso9660/vfslink.32
                0x00000000c001663c                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016642                ISO9660::seek(void*, unsigned long long)
                0x00000000c0016672                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0016696                ISO9660::getName()
                0x00000000c001669c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c00166c0                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00166c6                ISO9660::unlink(char const*)
                0x00000000c00166cc                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00166d2                ISO9660::rename(char const*, char const*)
                0x00000000c00166d8                ISO9660::mkdir(char const*)
                0x00000000c00166de                ISO9660::close(void*)
                0x00000000c0016700                ISO9660::closeDir(void*)
                0x00000000c0016722                ISO9660::~ISO9660()
                0x00000000c0016722                ISO9660::~ISO9660()
                0x00000000c0016746                ISO9660::~ISO9660()
                0x00000000c001676d                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c00167af                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001683a                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001689a                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0016a9e                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016d16                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0016d85                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c0016f6e                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c0017020                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00170e2                ISO9660::exists(char const*)
                0x00000000c0017106                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001719a                ISO9660::openDir(char const*, void**)
                0x00000000c0017234                ISO9660::ISO9660()
                0x00000000c0017234                ISO9660::ISO9660()
 *fill*         0x00000000c0017257        0x1 
 .text          0x00000000c0017258      0x26c hal/sound/sndcard.32
                0x00000000c0017258                SoundCard::beginPlayback()
                0x00000000c0017266                SoundCard::stopPlayback()
                0x00000000c0017274                SoundCard::SoundCard(char const*)
                0x00000000c0017274                SoundCard::SoundCard(char const*)
                0x00000000c0017312                SoundCard::~SoundCard()
                0x00000000c0017312                SoundCard::~SoundCard()
                0x00000000c0017336                SoundCard::~SoundCard()
                0x00000000c0017360                SoundCard::configureRates(int, int, int)
                0x00000000c0017390                SoundCard::getSamples16(int, short*)
                0x00000000c00173ec                SoundCard::getSamples32(int, int*)
                0x00000000c0017472                SoundCard::addChannel(SoundPort*)
                0x00000000c00174b0                SoundCard::removeChannel(int)
 .text          0x00000000c00174c4      0x377 hal/sound/sndport.32
                0x00000000c00174c4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00174c4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017550                SoundPort::~SoundPort()
                0x00000000c0017550                SoundPort::~SoundPort()
                0x00000000c0017584                SoundPort::unpause()
                0x00000000c0017590                SoundPort::pause()
                0x00000000c001759c                SoundPort::getBufferUsed()
                0x00000000c00175a4                SoundPort::getBufferSize()
                0x00000000c00175ac                SoundPort::buffer16(short*, int)
                0x00000000c0017638                SoundPort::buffer32(int*, int)
                0x00000000c00176c0                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0017784                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001783b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001783b        0x1 
 .text          0x00000000c001783c      0xb49 hw/bus/pci.32
                0x00000000c001783c                PCI::open(int, int, void*)
                0x00000000c001785a                PCI::close(int, int, void*)
                0x00000000c001785e                PCI::PCI()
                0x00000000c001785e                PCI::PCI()
                0x00000000c00178f8                PCI::readBAR8(unsigned int, int)
                0x00000000c0017914                PCI::readBAR16(unsigned int, int)
                0x00000000c0017932                PCI::readBAR32(unsigned int, int)
                0x00000000c001794e                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001796e                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0017990                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c00179b0                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017a1e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017ac6                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0017aea                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0017b12                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0017b5c                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0017b84                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0017ba8                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0017bcc                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0017bf4                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017c58                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0017d40                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0017fba                PCI::checkBus(unsigned char)
                0x00000000c0017fe0                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018152                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c00182c6                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018332                PCI::detect()
 *fill*         0x00000000c0018385        0x1 
 .text          0x00000000c0018386      0xb5a hw/diskctrl/ide.32
                0x00000000c0018386                IDE::close(int, int, void*)
                0x00000000c001838a                IDE::IDE()
                0x00000000c001838a                IDE::IDE()
                0x00000000c00183be                IDE::prepareInterrupt(unsigned char)
                0x00000000c00183d0                selectDrive(unsigned char, unsigned char)
                0x00000000c00183d2                IDE::getBase(unsigned char)
                0x00000000c00183e4                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c00184a4                IDE::read(unsigned char, unsigned char)
                0x00000000c0018552                IDE::waitInterrupt(unsigned char)
                0x00000000c00185ba                ideChannel0IRQHandler(regs*, void*)
                0x00000000c00185d6                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00185f2                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0018638                IDE::open(int, int, void*)
                0x00000000c0018a46                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0018b12                IDE::detect()
                0x00000000c0018dd2                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0018e82                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0018ee0      0x32a hw/diskctrl/satabus.32
                0x00000000c0018ee0                SATABus::close(int, int, void*)
                0x00000000c0018ee4                SATABus::detect()
                0x00000000c0018ee6                SATABus::SATABus()
                0x00000000c0018ee6                SATABus::SATABus()
                0x00000000c0018f6c                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0018f9e                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0018fe6                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019006                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019030                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019140                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c00191ea                SATABus::open(int, int, void*)
 .text          0x00000000c001920a      0x5f4 hw/diskphys/ata.32
                0x00000000c001920a                ATA::close(int, int, void*)
                0x00000000c001922e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019230                ATA::ATA()
                0x00000000c0019230                ATA::ATA()
                0x00000000c001925e                ATA::flush(bool)
                0x00000000c00192a8                ATA::readyForCommand()
                0x00000000c00192f4                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c0019670                ATA::read(unsigned long long, int, void*)
                0x00000000c00196bc                ATA::write(unsigned long long, int, void*)
                0x00000000c0019708                ATA::detectCHS()
                0x00000000c0019732                ATA::open(int, int, void*)
 .text          0x00000000c00197fe      0x60e hw/diskphys/atapi.32
                0x00000000c00197fe                ATAPI::write(unsigned long long, int, void*)
                0x00000000c0019804                ATAPI::close(int, int, void*)
                0x00000000c0019828                ATAPI::ATAPI()
                0x00000000c0019828                ATAPI::ATAPI()
                0x00000000c0019856                ATAPI::readyForCommand()
                0x00000000c00198a8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0019b68                ATAPI::diskRemoved()
                0x00000000c0019ba2                ATAPI::eject()
                0x00000000c0019bea                ATAPI::diskInserted()
                0x00000000c0019bf6                ATAPI::detectMedia()
                0x00000000c0019cb2                ATAPI::open(int, int, void*)
                0x00000000c0019d92                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0019e0c      0x402 hw/diskphys/sata.32
                0x00000000c0019e0c                SATA::close(int, int, void*)
                0x00000000c0019e30                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0019e32                SATA::open(int, int, void*)
                0x00000000c0019edc                SATA::SATA()
                0x00000000c0019edc                SATA::SATA()
                0x00000000c0019f0a                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a156                SATA::read(unsigned long long, int, void*)
                0x00000000c001a1a2                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001a20e      0x5b9 hw/diskphys/satapi.32
                0x00000000c001a20e                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001a214                SATAPI::close(int, int, void*)
                0x00000000c001a238                SATAPI::open(int, int, void*)
                0x00000000c001a330                SATAPI::SATAPI()
                0x00000000c001a330                SATAPI::SATAPI()
                0x00000000c001a35e                SATAPI::diskRemoved()
                0x00000000c001a360                SATAPI::diskInserted()
                0x00000000c001a37c                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001a658                SATAPI::eject()
                0x00000000c001a694                SATAPI::read(unsigned long long, int, void*)
                0x00000000c001a7c6                SATAPI::detectMedia()
 *fill*         0x00000000c001a7c7        0x1 
 .text          0x00000000c001a7c8      0x455 hw/intctrl/apic.32
                0x00000000c001a7c8                IOAPIC::close(int, int, void*)
                0x00000000c001a7ce                apicGetBase()
                0x00000000c001a810                IOAPIC::IOAPIC()
                0x00000000c001a810                IOAPIC::IOAPIC()
                0x00000000c001a838                apicOpen()
                0x00000000c001a99e                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001a9d0                IOAPIC::read(int)
                0x00000000c001a9f8                IOAPIC::open(int, int, void*)
                0x00000000c001aaec                IOAPIC::write(int, int)
                0x00000000c001ab18                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ac1d        0x3 
 .text          0x00000000c001ac20       0xf0 hw/timer/apictimer.32
                0x00000000c001ac20                APICTimer::close(int, int, void*)
                0x00000000c001ac28                apicTimerHandler(regs*, void*)
                0x00000000c001ac50                APICTimer::open(int, int, void*)
                0x00000000c001acc0                APICTimer::write(int)
                0x00000000c001ace8                APICTimer::APICTimer()
                0x00000000c001ace8                APICTimer::APICTimer()
 .text          0x00000000c001ad10      0x1aa hw/timer/pit.32
                0x00000000c001ad10                PIT::write(int)
                0x00000000c001ad94                pitHandler(regs*, void*)
                0x00000000c001adb8                PIT::open(int, int, void*)
                0x00000000c001ae08                PIT::close(int, int, void*)
                0x00000000c001ae38                PIT::PIT()
                0x00000000c001ae38                PIT::PIT()
 *fill*         0x00000000c001aeba        0x6 
 .text          0x00000000c001aec0       0x83 arch/i386/avx.32
                0x00000000c001aec0                avxDetect
                0x00000000c001aeea                avxSave
                0x00000000c001aefb                avxLoad
                0x00000000c001af0c                avxInit
                0x00000000c001af2e                avxClose
                0x00000000c001af2f                wouldSheSayYes
 *fill*         0x00000000c001af43        0xd 
 .text          0x00000000c001af50      0x1d6 arch/i386/interrupt.32
                0x00000000c001af50                isr0
                0x00000000c001af60                isr1
                0x00000000c001af6a                isr2
                0x00000000c001af74                isr3
                0x00000000c001af7e                isr4
                0x00000000c001af88                isr5
                0x00000000c001af92                isr6
                0x00000000c001af9c                isr7
                0x00000000c001afa6                isr8
                0x00000000c001afae                isr9
                0x00000000c001afb8                isr10
                0x00000000c001afc0                isr11
                0x00000000c001afc8                isr12
                0x00000000c001afd0                isr13
                0x00000000c001afd8                isr14
                0x00000000c001afe0                isr15
                0x00000000c001afea                isr16
                0x00000000c001aff4                isr17
                0x00000000c001affe                isr18
                0x00000000c001b008                irq3
                0x00000000c001b012                irq4
                0x00000000c001b01c                irq5
                0x00000000c001b026                irq6
                0x00000000c001b030                irq7
                0x00000000c001b03a                irq8
                0x00000000c001b044                irq9
                0x00000000c001b04e                irq10
                0x00000000c001b058                irq11
                0x00000000c001b062                irq12
                0x00000000c001b06c                irq13
                0x00000000c001b076                irq14
                0x00000000c001b080                irq15
                0x00000000c001b08a                irq1
                0x00000000c001b091                irq2
                0x00000000c001b098                isr96
                0x00000000c001b09f                irq0
                0x00000000c001b0a4                int_common_stub
                0x00000000c001b0a4                syscall_common_stub
                0x00000000c001b0d6                irq16
                0x00000000c001b0e0                irq17
                0x00000000c001b0ea                irq18
                0x00000000c001b0f4                irq19
                0x00000000c001b0fe                irq20
                0x00000000c001b108                irq21
                0x00000000c001b112                irq22
                0x00000000c001b11c                irq23
 *fill*         0x00000000c001b126        0xa 
 .text          0x00000000c001b130       0x10 arch/i386/rdrand.32
                0x00000000c001b130                i386GetRDRAND
 .text          0x00000000c001b140       0x39 arch/i386/sse.32
                0x00000000c001b140                absolutelyNoChanceInHell
                0x00000000c001b140                sseDetect
                0x00000000c001b158                sseSave
                0x00000000c001b160                sseLoad
                0x00000000c001b168                sseInit
                0x00000000c001b178                sseClose
 *fill*         0x00000000c001b179        0x7 
 .text          0x00000000c001b180       0x49 arch/i386/x87.32
                0x00000000c001b186                x87Detect
                0x00000000c001b1a1                x87Save
                0x00000000c001b1a8                x87Load
                0x00000000c001b1af                x87Init
                0x00000000c001b1c8                x87Close
 *fill*         0x00000000c001b1c9        0x3 
 .text          0x00000000c001b1cc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001b1f1        0x0 crtn.32
 *fill*         0x00000000c001b1f1        0x3 
 .text          0x00000000c001b1f4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001b1f4                __divdi3
 *fill*         0x00000000c001b33f        0x1 
 .text          0x00000000c001b340      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001b340                __moddi3
 *fill*         0x00000000c001b4be        0x2 
 .text          0x00000000c001b4c0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001b4c0                __udivdi3
 *fill*         0x00000000c001b5bf        0x1 
 .text          0x00000000c001b5c0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001b5c0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001b6e0        0x0
 .iplt          0x00000000c001b6e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001b6da        0xf
 .init          0x00000000c001b6da        0x3 crti.32
                0x00000000c001b6da                _init
 .init          0x00000000c001b6dd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001b6e2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001b6e7        0x2 crtn.32

.fini           0x00000000c001b6e9        0xa
 .fini          0x00000000c001b6e9        0x3 crti.32
                0x00000000c001b6e9                _fini
 .fini          0x00000000c001b6ec        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001b6f1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001b6f4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001b6f4       0x23 core/computer.32
                0x00000000c001b6f4                Computer::~Computer()
                0x00000000c001b6f4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001b718       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001b718       0x2a core/computer.32
                0x00000000c001b718                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001b742       0x21
 .text._Z10idleCommonv
                0x00000000c001b742       0x21 core/idle.32
                0x00000000c001b742                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001b764        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001b764        0x2 core/unixfile.32
                0x00000000c001b764                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001b764                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001b766       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001b766       0x42 core/unixfile.32
                0x00000000c001b766                LinkedList<UnixFile>::LinkedList()
                0x00000000c001b766                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001b7a8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001b7a8       0xd3 core/unixfile.32
                0x00000000c001b7a8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001b87c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001b87c        0x7 core/unixfile.32
                0x00000000c001b87c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001b884       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001b884       0xa1 core/unixfile.32
                0x00000000c001b884                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001b926        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001b926        0x8 core/unixfile.32
                0x00000000c001b926                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001b92e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001b92e       0x1a hal/device.32
                0x00000000c001b92e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001b92e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001b948       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001b948       0x2a hal/device.32
                0x00000000c001b948                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001b972       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001b972       0xdc hal/device.32
                0x00000000c001b972                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ba4e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ba4e       0x42 hal/device.32
                0x00000000c001ba4e                LinkedList<Device>::LinkedList()
                0x00000000c001ba4e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ba90       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ba90       0x1c hal/timer.32
                0x00000000c001ba90                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001baac        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001baac        0x7 hal/timer.32
                0x00000000c001baac                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001bab4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001bab4       0xb8 hal/timer.32
                0x00000000c001bab4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001bb6c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001bb6c       0xda hal/timer.32
                0x00000000c001bb6c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001bc48       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001bc48       0x23 hw/acpi.32
                0x00000000c001bc48                ACPI::~ACPI()
                0x00000000c001bc48                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001bc6c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001bc6c       0x2a hw/acpi.32
                0x00000000c001bc6c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001bc98        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001bc98        0x2 hw/acpi.32
                0x00000000c001bc98                LinkedList<Device>::~LinkedList()
                0x00000000c001bc98                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001bc9c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001bc9c       0x1c hw/acpi.32
                0x00000000c001bc9c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001bcb8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001bcb8        0x7 hw/acpi.32
                0x00000000c001bcb8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001bcc0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001bcc0       0xb8 hw/acpi.32
                0x00000000c001bcc0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001bd78       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001bd78       0x23 hw/cpu.32
                0x00000000c001bd78                CPU::~CPU()
                0x00000000c001bd78                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001bd9c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001bd9c       0x2a hw/cpu.32
                0x00000000c001bd9c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001bdc8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001bdc8        0x2 thr/prcssthr.32
                0x00000000c001bdc8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001bdc8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001bdcc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001bdcc       0x49 thr/prcssthr.32
                0x00000000c001bdcc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001bdcc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001be18       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001be18       0x42 thr/prcssthr.32
                0x00000000c001be18                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001be18                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001be5c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001be5c        0x8 thr/prcssthr.32
                0x00000000c001be5c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001be64       0x23
 .text._ZN3PCID2Ev
                0x00000000c001be64       0x23 hw/bus/pci.32
                0x00000000c001be64                PCI::~PCI()
                0x00000000c001be64                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001be88       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001be88       0x2a hw/bus/pci.32
                0x00000000c001be88                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001beb2       0x23
 .text._ZN3IDED2Ev
                0x00000000c001beb2       0x23 hw/diskctrl/ide.32
                0x00000000c001beb2                IDE::~IDE()
                0x00000000c001beb2                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001bed6       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001bed6       0x2a hw/diskctrl/ide.32
                0x00000000c001bed6                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001bf00       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001bf00       0x23 hw/diskctrl/satabus.32
                0x00000000c001bf00                SATABus::~SATABus()
                0x00000000c001bf00                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001bf24       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001bf24       0x2a hw/diskctrl/satabus.32
                0x00000000c001bf24                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001bf4e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001bf4e       0x23 hw/diskphys/ata.32
                0x00000000c001bf4e                ATA::~ATA()
                0x00000000c001bf4e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001bf72       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001bf72       0x2a hw/diskphys/ata.32
                0x00000000c001bf72                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001bf9c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001bf9c       0x23 hw/diskphys/atapi.32
                0x00000000c001bf9c                ATAPI::~ATAPI()
                0x00000000c001bf9c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001bfc0       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001bfc0       0x2a hw/diskphys/atapi.32
                0x00000000c001bfc0                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001bfea       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001bfea       0x23 hw/diskphys/sata.32
                0x00000000c001bfea                SATA::~SATA()
                0x00000000c001bfea                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001c00e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001c00e       0x2a hw/diskphys/sata.32
                0x00000000c001c00e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001c038       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001c038       0x23 hw/diskphys/satapi.32
                0x00000000c001c038                SATAPI::~SATAPI()
                0x00000000c001c038                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001c05c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001c05c       0x2a hw/diskphys/satapi.32
                0x00000000c001c05c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001c086       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001c086       0x23 hw/intctrl/apic.32
                0x00000000c001c086                IOAPIC::~IOAPIC()
                0x00000000c001c086                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001c0aa       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001c0aa       0x2a hw/intctrl/apic.32
                0x00000000c001c0aa                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001c0d4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001c0d4       0x23 hw/timer/apictimer.32
                0x00000000c001c0d4                APICTimer::~APICTimer()
                0x00000000c001c0d4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001c0f8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001c0f8       0x2a hw/timer/apictimer.32
                0x00000000c001c0f8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001c124       0x23
 .text._ZN3PITD2Ev
                0x00000000c001c124       0x23 hw/timer/pit.32
                0x00000000c001c124                PIT::~PIT()
                0x00000000c001c124                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001c148       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001c148       0x2a hw/timer/pit.32
                0x00000000c001c148                PIT::~PIT()

.rodata         0x00000000c001c172     0x285e
                0x00000000c001c172                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001c172        0x2 
 .ctors         0x00000000c001c174        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001c178        0x4 core/unixfile.32
 .ctors         0x00000000c001c17c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001c180        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c184                end_ctors = .
                0x00000000c001c184                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001c184        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001c188        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c188                __DTOR_END__
                0x00000000c001c18c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001c18c       0x14 
 .rodata        0x00000000c001c1a0      0x101 acpica/utclib.32
                0x00000000c001c1a0                AcpiGbl_Ctypes
 *fill*         0x00000000c001c2a1        0x3 
 .rodata        0x00000000c001c2a4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001c2bc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001c306       0x1a 
 .rodata        0x00000000c001c320       0xed fs/fat/ff.32
 *fill*         0x00000000c001c40d       0x13 
 .rodata        0x00000000c001c420      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001c820       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001c869      0x115 core/computer.32
 *fill*         0x00000000c001c97e        0x2 
 .rodata.str1.4
                0x00000000c001c980       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001c9e8       0x2c core/computer.32
                0x00000000c001c9e8                vtable for Computer
 .rodata.str1.4
                0x00000000c001ca14       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001ca44        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001ca50       0x17 core/main.32
 *fill*         0x00000000c001ca67        0x1 
 .rodata.str1.4
                0x00000000c001ca68       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001cb0d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001cb65       0x39 core/pipe.32
 *fill*         0x00000000c001cb9e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001cba0       0x1c core/pipe.32
                0x00000000c001cba0                vtable for Pipe
 .rodata.str1.1
                0x00000000c001cbbc       0x69 core/terminal.32
 *fill*         0x00000000c001cc25        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001cc28       0x1c core/terminal.32
                0x00000000c001cc28                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001cc44       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001cc66       0x15 core/unixfile.32
 *fill*         0x00000000c001cc7b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001cc7c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001ccc7        0x8 core/unixfile.32
 *fill*         0x00000000c001cccf        0x1 
 .rodata.str1.4
                0x00000000c001ccd0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001ccf0       0x1c core/unixfile.32
                0x00000000c001ccf0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001cd0c       0x1c core/unixfile.32
                0x00000000c001cd0c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001cd28      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001ce8f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001cf96       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001cfc9       0x11 dbg/kconsole.32
 *fill*         0x00000000c001cfc9        0x3 
 .rodata        0x00000000c001cfcc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001d11c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001d11c       0x68 fs/vfs.32
                0x00000000c001d11c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001d184       0x1c fs/vfs.32
                0x00000000c001d184                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001d1a0       0x1c fs/vfs.32
                0x00000000c001d1a0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001d1bc       0x2c hal/bus.32
                0x00000000c001d1bc                vtable for Bus
 .rodata.str1.1
                0x00000000c001d1e8       0x1e hal/clock.32
 *fill*         0x00000000c001d206        0x2 
 .rodata._ZTV5Clock
                0x00000000c001d208       0x3c hal/clock.32
                0x00000000c001d208                vtable for Clock
 *fill*         0x00000000c001d244       0x1c 
 .rodata        0x00000000c001d260       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001d290       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001d2e8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001d2e8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001d2e8       0x2c hal/device.32
                0x00000000c001d2e8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001d314       0x2c hal/device.32
                0x00000000c001d314                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001d340       0x2c hal/diskctrl.32
                0x00000000c001d340                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001d36c       0x38 hal/diskphys.32
                0x00000000c001d36c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001d3a4       0x3e hal/intctrl.32
 *fill*         0x00000000c001d3e2        0x2 
 .rodata.str1.4
                0x00000000c001d3e4       0x5d hal/intctrl.32
 .rodata        0x00000000c001d441       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001d494       0x34 hal/keybrd.32
                0x00000000c001d494                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001d4c8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001d50c       0x2c hal/logidisk.32
                0x00000000c001d50c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001d538       0x2c hal/mouse.32
                0x00000000c001d538                vtable for Mouse
 .rodata.str1.1
                0x00000000c001d564        0xb hal/partition.32
 *fill*         0x00000000c001d56f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001d570       0x44 hal/serial.32
                0x00000000c001d570                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001d5b4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001d5b4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001d5b4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001d5b4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001d5b4       0x30 hal/timer.32
                0x00000000c001d5b4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001d5e4       0x10 hal/vcache.32
                0x00000000c001d5e4                vtable for VCache
 .rodata.str1.1
                0x00000000c001d5f4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001d65c       0x48 hal/video.32
                0x00000000c001d65c                vtable for Video
 .rodata.str1.4
                0x00000000c001d6a4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001d73f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001d87b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001d87b        0x8 hw/acpi.32
 *fill*         0x00000000c001d87b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001d87c       0x2c hw/acpi.32
                0x00000000c001d87c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001d8a8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001da15        0x3 
 .rodata._ZTV3CPU
                0x00000000c001da18       0x2c hw/cpu.32
                0x00000000c001da18                vtable for CPU
 .rodata.str1.1
                0x00000000c001da44       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001da80       0x3d krnl/panic.32
                                         0x3e (size before relaxing)
 *fill*         0x00000000c001dabd        0x3 
 .rodata.str1.4
                0x00000000c001dac0       0x3a krnl/panic.32
 .rodata.str1.1
                0x00000000c001dafa       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001db3f        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001db49       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001db9d       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001dbc9       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001dc11      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001dddd       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001de34      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001df40       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001df40       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001df40       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001df40        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001df40       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001dfe0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001e010      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001e11e        0x2 
 .rodata.str1.4
                0x00000000c001e120       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001e193       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001e1a8       0x3c arch/i386/rtc.32
                0x00000000c001e1a8                vtable for RTC
 .rodata.str1.1
                0x00000000c001e1e4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001e225        0x3 
 .rodata._ZTV3FAT
                0x00000000c001e228       0x68 fs/fat/vfslink.32
                0x00000000c001e228                vtable for FAT
 .rodata.str1.1
                0x00000000c001e290       0x6e fs/iso9660/vfslink.32
 *fill*         0x00000000c001e2fe        0x2 
 .rodata._ZTV7ISO9660
                0x00000000c001e300       0x68 fs/iso9660/vfslink.32
                0x00000000c001e300                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001e368       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001e3ac       0x34 hal/sound/sndcard.32
                0x00000000c001e3ac                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001e3e0       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001e41f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001e457       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001e4f8       0x2c hw/bus/pci.32
                0x00000000c001e4f8                vtable for PCI
 .rodata.str1.1
                0x00000000c001e524       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001e5ab        0x1 
 .rodata._ZTV3IDE
                0x00000000c001e5ac       0x2c hw/diskctrl/ide.32
                0x00000000c001e5ac                vtable for IDE
 .rodata.str1.4
                0x00000000c001e5d8       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001e5fc       0x2c hw/diskctrl/satabus.32
                0x00000000c001e5fc                vtable for SATABus
 .rodata.str1.1
                0x00000000c001e628       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001e63a        0x2 
 .rodata._ZTV3ATA
                0x00000000c001e63c       0x38 hw/diskphys/ata.32
                0x00000000c001e63c                vtable for ATA
 .rodata.str1.1
                0x00000000c001e674        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001e681        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001e684       0x38 hw/diskphys/atapi.32
                0x00000000c001e684                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001e6bc       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001e738       0x38 hw/diskphys/sata.32
                0x00000000c001e738                vtable for SATA
 .rodata.str1.1
                0x00000000c001e770      0x158 hw/diskphys/satapi.32
                                        0x165 (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001e8c8       0x38 hw/diskphys/satapi.32
                0x00000000c001e8c8                vtable for SATAPI
 .rodata        0x00000000c001e900        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001e908       0x2c hw/intctrl/apic.32
                0x00000000c001e908                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001e934       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001e94f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001e950       0x30 hw/timer/apictimer.32
                0x00000000c001e950                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001e980       0x1d hw/timer/pit.32
 *fill*         0x00000000c001e99d        0x3 
 .rodata._ZTV3PIT
                0x00000000c001e9a0       0x30 hw/timer/pit.32
                0x00000000c001e9a0                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001e9d0      0x265
 *(.data)
 .data          0x00000000c001e9d0        0x0 crti.32
 .data          0x00000000c001e9d0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001e9d0                __dso_handle
 .data          0x00000000c001e9d4        0x0 acpica/utclib.32
 .data          0x00000000c001e9d4        0x0 core/malloc.32
 .data          0x00000000c001e9d4        0x0 libk/string.32
 .data          0x00000000c001e9d4        0x0 fs/fat/diskio.32
 .data          0x00000000c001e9d4        0x0 fs/fat/ff.32
 .data          0x00000000c001e9d4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001e9d4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001e9d4        0x0 compat/inlines.32
 .data          0x00000000c001e9d4        0x0 compat/resolve.32
 .data          0x00000000c001e9d4        0x0 core/computer.32
 .data          0x00000000c001e9d4        0x0 core/gdt.32
 .data          0x00000000c001e9d4        0x0 core/idle.32
 .data          0x00000000c001e9d4        0x0 core/idt.32
 .data          0x00000000c001e9d4        0x4 core/kheap.32
 *fill*         0x00000000c001e9d8        0x8 
 .data          0x00000000c001e9e0      0x142 core/main.32
                0x00000000c001e9e0                titleScreen
 *fill*         0x00000000c001eb22        0x2 
 .data          0x00000000c001eb24        0x4 core/physmgr.32
                0x00000000c001eb24                Phys::bitmap
 .data          0x00000000c001eb28        0x0 core/pipe.32
 *fill*         0x00000000c001eb28       0x18 
 .data          0x00000000c001eb40       0x60 core/terminal.32
                0x00000000c001eb40                VgaText::hiddenOut
                0x00000000c001eb60                ansiToVGAMappings
 .data          0x00000000c001eba0        0x0 core/tss.32
 .data          0x00000000c001eba0        0x4 core/unixfile.32
                0x00000000c001eba0                UnixFile::nextFd
 .data          0x00000000c001eba4       0x15 core/virtmgr.32
                0x00000000c001eba4                Virt::pageAllocPtr
                0x00000000c001eba8                Virt::bitmap
                0x00000000c001ebac                Virt::swapfileSectorsPerPage
                0x00000000c001ebb0                Virt::swapfileLength
                0x00000000c001ebb4                Virt::swapfileSector
                0x00000000c001ebb8                Virt::swapfileDrive
 *fill*         0x00000000c001ebb9        0x3 
 .data          0x00000000c001ebbc        0x4 coreobjs/c++.32
                0x00000000c001ebbc                __stack_chk_guard
 .data          0x00000000c001ebc0        0x0 dbg/kconsole.32
 .data          0x00000000c001ebc0        0x0 fs/vfs.32
 .data          0x00000000c001ebc0        0x0 hal/bus.32
 .data          0x00000000c001ebc0        0x0 hal/buzzer.32
 .data          0x00000000c001ebc0        0x0 hal/clock.32
 .data          0x00000000c001ebc0        0x0 hal/device.32
 .data          0x00000000c001ebc0        0x0 hal/diskctrl.32
 .data          0x00000000c001ebc0        0x0 hal/diskphys.32
 .data          0x00000000c001ebc0        0x0 hal/fpu.32
 .data          0x00000000c001ebc0        0x0 hal/intctrl.32
 .data          0x00000000c001ebc0        0x0 hal/keybrd.32
 .data          0x00000000c001ebc0        0x0 hal/logidisk.32
 .data          0x00000000c001ebc0        0x0 hal/mouse.32
 .data          0x00000000c001ebc0        0x0 hal/partition.32
 .data          0x00000000c001ebc0        0x0 hal/serial.32
 .data          0x00000000c001ebc0        0x0 hal/timer.32
 .data          0x00000000c001ebc0        0x0 hal/vcache.32
 .data          0x00000000c001ebc0        0x0 hal/video.32
 .data          0x00000000c001ebc0       0x10 hw/acpi.32
                0x00000000c001ebc0                legacyIRQRemaps
 .data          0x00000000c001ebd0        0x4 hw/cpu.32
                0x00000000c001ebd0                lastCode
 *fill*         0x00000000c001ebd4        0xc 
 .data          0x00000000c001ebe0       0x4d krnl/env.32
                0x00000000c001ebe0                defaultSysEnv
 .data          0x00000000c001ec2d        0x0 krnl/panic.32
 .data          0x00000000c001ec2d        0x0 krnl/powctrl.32
 .data          0x00000000c001ec2d        0x0 reg/registry.32
 .data          0x00000000c001ec2d        0x0 sys/sc_eject.32
 .data          0x00000000c001ec2d        0x0 sys/sc_exit.32
 .data          0x00000000c001ec2d        0x0 sys/sc_getcwd.32
 .data          0x00000000c001ec2d        0x0 sys/sc_getpid.32
 .data          0x00000000c001ec2d        0x0 sys/sc_getramdata.32
 .data          0x00000000c001ec2d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001ec2d        0x0 sys/sc_loaddll.32
 .data          0x00000000c001ec2d        0x0 sys/sc_read.32
 .data          0x00000000c001ec2d        0x0 sys/sc_sbrk.32
 .data          0x00000000c001ec2d        0x0 sys/sc_setcwd.32
 .data          0x00000000c001ec2d        0x0 sys/sc_settime.32
 .data          0x00000000c001ec2d        0x0 sys/sc_timezone.32
 .data          0x00000000c001ec2d        0x0 sys/sc_write.32
 .data          0x00000000c001ec2d        0x0 sys/sc_wsbe.32
 .data          0x00000000c001ec2d        0x0 sys/sc_yield.32
 .data          0x00000000c001ec2d        0x0 sys/syscalls.32
 .data          0x00000000c001ec2d        0x0 thr/elf.32
 *fill*         0x00000000c001ec2d        0x3 
 .data          0x00000000c001ec30        0x4 thr/prcssthr.32
                0x00000000c001ec30                Thr::nextPID
 .data          0x00000000c001ec34        0x0 vm86/vm8086.32
 .data          0x00000000c001ec34        0x0 arch/i386/hal.32
 .data          0x00000000c001ec34        0x0 arch/i386/pic.32
 .data          0x00000000c001ec34        0x0 arch/i386/rtc.32
 .data          0x00000000c001ec34        0x0 arch/i386/vga.32
 .data          0x00000000c001ec34        0x0 fs/fat/vfslink.32
 .data          0x00000000c001ec34        0x1 fs/iso9660/vfslink.32
                0x00000000c001ec34                recentDriveletter
 .data          0x00000000c001ec35        0x0 hal/sound/sndcard.32
 .data          0x00000000c001ec35        0x0 hal/sound/sndport.32
 .data          0x00000000c001ec35        0x0 hw/bus/isa.32
 .data          0x00000000c001ec35        0x0 hw/bus/pci.32
 .data          0x00000000c001ec35        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001ec35        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001ec35        0x0 hw/diskphys/ata.32
 .data          0x00000000c001ec35        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001ec35        0x0 hw/diskphys/sata.32
 .data          0x00000000c001ec35        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001ec35        0x0 hw/intctrl/apic.32
 .data          0x00000000c001ec35        0x0 hw/timer/apictimer.32
 .data          0x00000000c001ec35        0x0 hw/timer/pit.32
 .data          0x00000000c001ec35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001ec35        0x0 crtn.32
 .data          0x00000000c001ec35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001ec35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001ec35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001ec35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001ec38        0x0
 .got           0x00000000c001ec38        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001ec38        0x0
 .got.plt       0x00000000c001ec38        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001ec38        0x0
 .igot.plt      0x00000000c001ec38        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001ec38        0x0
 .tm_clone_table
                0x00000000c001ec38        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001ec38        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001ec35      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001ec35        0x3 
 .eh_frame      0x00000000c001ec38        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001ec38        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001ec38       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001ec90       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001ecd0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001ed3c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001edc0        0x0
 .rel.got       0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001edc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001edc0     0x4348
                0x00000000c001edc0                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c001edc0        0x0 crti.32
 .bss           0x00000000c001edc0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001ede0        0x4 acpica/utclib.32
 *fill*         0x00000000c001ede4       0x1c 
 .bss           0x00000000c001ee00      0x378 core/malloc.32
 .bss           0x00000000c001f178        0x0 libk/string.32
 .bss           0x00000000c001f178        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001f178        0x8 
 .bss           0x00000000c001f180       0x88 fs/fat/ff.32
 .bss           0x00000000c001f208        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001f208        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c001f208        0x0 compat/inlines.32
 .bss           0x00000000c001f208        0x0 compat/resolve.32
 .bss           0x00000000c001f208        0x6 core/computer.32
                0x00000000c001f208                Krnl::computer
                0x00000000c001f20c                Krnl::preemptionOn
                0x00000000c001f20d                Krnl::schedulingOn
 *fill*         0x00000000c001f20e        0x2 
 .bss           0x00000000c001f210        0x6 core/gdt.32
                0x00000000c001f210                gdtDescr
 .bss           0x00000000c001f216        0x0 core/idle.32
 *fill*         0x00000000c001f216        0x2 
 .bss           0x00000000c001f218        0x6 core/idt.32
                0x00000000c001f218                idtDescr
 .bss           0x00000000c001f21e        0x0 core/kheap.32
 *fill*         0x00000000c001f21e        0x2 
 .bss           0x00000000c001f220        0x4 core/main.32
                0x00000000c001f220                sysBootSettings
 .bss           0x00000000c001f224       0x29 core/physmgr.32
                0x00000000c001f224                Phys::forbidEvictions
                0x00000000c001f228                Phys::currentPagePointer
                0x00000000c001f22c                Phys::highestMem
                0x00000000c001f230                Phys::oldPercent
                0x00000000c001f234                Phys::usedPages
                0x00000000c001f238                Phys::usablePages
                0x00000000c001f23c                Phys::dmaUsage
 .bss           0x00000000c001f24d        0x0 core/pipe.32
 *fill*         0x00000000c001f24d        0x3 
 .bss           0x00000000c001f250        0x9 core/terminal.32
                0x00000000c001f250                terminalCycle
                0x00000000c001f254                activeTerminal
                0x00000000c001f258                VgaText::graphicMode
 *fill*         0x00000000c001f259        0x1 
 .bss           0x00000000c001f25a        0x2 core/tss.32
                0x00000000c001f25a                doubleFaultSelector
 *fill*         0x00000000c001f25c        0x4 
 .bss           0x00000000c001f260       0x84 core/unixfile.32
                0x00000000c001f260                sfileLpt
                0x00000000c001f2a0                sfileCom
                0x00000000c001f2c4                sfileNul
                0x00000000c001f2c8                sfilePnt
                0x00000000c001f2cc                sfileAux
                0x00000000c001f2d0                sfileCon
                0x00000000c001f2d4                initialFilesAdded
                0x00000000c001f2d8                unixFileLinkedList
 .bss           0x00000000c001f2e4       0x10 core/virtmgr.32
                0x00000000c001f2e4                twswaps
                0x00000000c001f2e8                swapBalance
                0x00000000c001f2ec                Virt::swapfileBitmap
                0x00000000c001f2f0                firstVAS
 .bss           0x00000000c001f2f4        0x0 coreobjs/c++.32
 .bss           0x00000000c001f2f4        0x0 dbg/kconsole.32
 .bss           0x00000000c001f2f4        0x4 fs/vfs.32
                0x00000000c001f2f4                installedFilesystems
 .bss           0x00000000c001f2f8        0x0 hal/bus.32
 .bss           0x00000000c001f2f8        0x0 hal/buzzer.32
 .bss           0x00000000c001f2f8        0x8 hal/clock.32
                0x00000000c001f2f8                User::dstOn
                0x00000000c001f2f9                User::timezoneHalfHourOffset
                0x00000000c001f2fc                User::timezoneHourOffset
 .bss           0x00000000c001f300        0x0 hal/device.32
 .bss           0x00000000c001f300        0x0 hal/diskctrl.32
 .bss           0x00000000c001f300        0x0 hal/diskphys.32
 .bss           0x00000000c001f300        0x0 hal/fpu.32
 .bss           0x00000000c001f300     0x2000 hal/intctrl.32
                0x00000000c001f300                INT_contexts
                0x00000000c0020300                INT_handlers
 .bss           0x00000000c0021300      0x429 hal/keybrd.32
                0x00000000c0021300                keyboardWaitingTaskList
                0x00000000c0021304                keyboardSetupYet
                0x00000000c0021308                guiKeyboardHandler
                0x00000000c0021320                keystates
 *fill*         0x00000000c0021729       0x17 
 .bss           0x00000000c0021740       0x88 hal/logidisk.32
                0x00000000c0021740                diskAssignments
                0x00000000c0021760                disks
 .bss           0x00000000c00217c8        0x4 hal/mouse.32
                0x00000000c00217c8                guiMouseHandler
 .bss           0x00000000c00217cc        0x0 hal/partition.32
 .bss           0x00000000c00217cc        0x0 hal/serial.32
 .bss           0x00000000c00217cc        0x4 hal/timer.32
                0x00000000c00217cc                milliTenthsSinceBoot
 .bss           0x00000000c00217d0        0x0 hal/vcache.32
 .bss           0x00000000c00217d0        0x4 hal/video.32
                0x00000000c00217d0                screen
 *fill*         0x00000000c00217d4        0xc 
 .bss           0x00000000c00217e0      0x480 hw/acpi.32
                0x00000000c00217e0                systemSleepFunction
                0x00000000c00217e4                systemResetFunction
                0x00000000c00217e8                systemShutdownFunction
                0x00000000c00217ec                nextACPITable
                0x00000000c0021800                acpiTables
                0x00000000c0021a00                usingXSDT
                0x00000000c0021a04                MADTpointer
                0x00000000c0021a08                RSDTpointer
                0x00000000c0021a0c                RSDPpointer
                0x00000000c0021a10                nextAPICNMI
                0x00000000c0021a20                apicNMIInfo
                0x00000000c0021aa0                legacyIRQFlags
                0x00000000c0021ac0                ioapicDiscoveryNumber
                0x00000000c0021ae0                ioapicFoundInMADT
                0x00000000c0021b00                ioapicAddresses
                0x00000000c0021b80                ioapicGSIBase
                0x00000000c0021c00                processorDiscoveryNumber
                0x00000000c0021c20                matchingAPICID
                0x00000000c0021c40                processorID
 .bss           0x00000000c0021c60       0x10 hw/cpu.32
                0x00000000c0021c60                lastD
                0x00000000c0021c64                lastC
                0x00000000c0021c68                lastB
                0x00000000c0021c6c                lastA
 .bss           0x00000000c0021c70        0x8 krnl/env.32
                0x00000000c0021c70                Krnl::userEnv
                0x00000000c0021c74                Krnl::systemEnv
 .bss           0x00000000c0021c78        0x9 krnl/panic.32
                0x00000000c0021c78                Krnl::guiProgramFaultHandler
                0x00000000c0021c7c                Krnl::guiPanicHandler
                0x00000000c0021c80                Krnl::kernelInPanic
 *fill*         0x00000000c0021c81       0x1f 
 .bss           0x00000000c0021ca0       0x48 krnl/powctrl.32
                0x00000000c0021ca0                Krnl::powCtrlOnBattery
                0x00000000c0021cc0                Krnl::currentPowerSettings
                0x00000000c0021ce4                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0021ce8        0x0 reg/registry.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_eject.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_exit.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_getpid.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_read.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_settime.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_timezone.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_write.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0021ce8        0x0 sys/sc_yield.32
 *fill*         0x00000000c0021ce8       0x18 
 .bss           0x00000000c0021d00      0x200 sys/syscalls.32
                0x00000000c0021d00                systemCallHandlers
 .bss           0x00000000c0021f00      0x7a4 thr/elf.32
                0x00000000c0021f00                Thr::driverLookupNext
                0x00000000c0021f20                Thr::driverLookupLen
                0x00000000c0022120                Thr::driverLookupAddr
                0x00000000c0022320                Thr::driverNameLookup
                0x00000000c0022520                Thr::kernelSymbols
                0x00000000c00225a0                Thr::kernelStringTable
                0x00000000c0022620                Thr::kernelSymbolTable
                0x00000000c00226a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00226a4        0x4 
 .bss           0x00000000c00226a8       0x68 thr/prcssthr.32
                0x00000000c00226a8                cleanerThread
                0x00000000c00226ac                weNeedTheCleanerToNotBlock
                0x00000000c00226b0                retValLockStuff
                0x00000000c00226b4                retValSchedLock
                0x00000000c00226b8                lockStuffLock
                0x00000000c00226bc                schedulerLock
                0x00000000c00226c0                taskSwitchesPostponedFlag
                0x00000000c00226c4                postponeTaskSwitchesCounter
                0x00000000c00226c8                irqDisableCounter
                0x00000000c00226cc                terminatedTaskList
                0x00000000c00226d8                sleepingTaskList
                0x00000000c00226e4                taskList
                0x00000000c00226f0                kernelProcess
 *fill*         0x00000000c0022710       0x10 
 .bss           0x00000000c0022720       0x40 vm86/vm8086.32
                0x00000000c0022720                Vm::vmRetV
                0x00000000c0022724                Vm::vmDone
                0x00000000c0022725                Vm::vmReady
                0x00000000c0022728                Vm::vm86Thread
                0x00000000c002272c                Vm::vmToHostCommsPtr
                0x00000000c0022740                Vm::vmToHostComms
 .bss           0x00000000c0022760       0x14 arch/i386/hal.32
                0x00000000c0022760                apic
                0x00000000c0022764                fpuOwner
                0x00000000c0022768                coproLoadFunc
                0x00000000c002276c                coproSaveFunc
                0x00000000c0022770                gpFaultIntercept
 .bss           0x00000000c0022774        0x0 arch/i386/pic.32
 .bss           0x00000000c0022774        0x2 arch/i386/rtc.32
 .bss           0x00000000c0022776        0x0 arch/i386/vga.32
 *fill*         0x00000000c0022776        0xa 
 .bss           0x00000000c0022780       0xf0 fs/fat/vfslink.32
                0x00000000c0022780                FAT::fats
                0x00000000c00227a0                FAT::vfsToFatRemaps
                0x00000000c0022820                fatToVFSRemaps
 *fill*         0x00000000c0022870       0x10 
 .bss           0x00000000c0022880      0x820 fs/iso9660/vfslink.32
                0x00000000c0022880                recentSector
                0x00000000c00228a0                recentBuffer
 .bss           0x00000000c00230a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00230a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00230a0        0x0 hw/bus/isa.32
 .bss           0x00000000c00230a0        0xd hw/bus/pci.32
                0x00000000c00230a0                thePCI
 .bss           0x00000000c00230ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00230ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00230ad        0x3 
 .bss           0x00000000c00230b0        0x8 hw/diskphys/ata.32
                0x00000000c00230b0                ataSectorsWritten
                0x00000000c00230b4                ataSectorsRead
 .bss           0x00000000c00230b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00230b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00230b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c00230b8        0x8 
 .bss           0x00000000c00230c0       0x41 hw/intctrl/apic.32
                0x00000000c00230c0                noOfIOAPICs
                0x00000000c00230e0                ioapics
                0x00000000c0023100                IOAPICsSetupYet
 .bss           0x00000000c0023101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0023101        0x3 
 .bss           0x00000000c0023104        0x4 hw/timer/pit.32
                0x00000000c0023104                pitFreq
 .bss           0x00000000c0023108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0023108        0x0 crtn.32
 .bss           0x00000000c0023108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0023108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0023108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0023108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0023108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0027450                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
