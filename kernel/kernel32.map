Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x20eea
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0x2 
 .text          0x00000000c00003a4      0x5dd acpica/utclib.32
                0x00000000c00003a4                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004a8                memset
                0x00000000c00004c4                strlen
                0x00000000c00004dc                strpbrk
                0x00000000c0000518                strtok
                0x00000000c0000564                strcpy
                0x00000000c0000588                strncpy
                0x00000000c00005f0                strcmp
                0x00000000c0000630                strchr
                0x00000000c0000654                strncmp
                0x00000000c00006a4                strcat
                0x00000000c00006d4                strncat
                0x00000000c0000710                strstr
                0x00000000c0000758                toupper
                0x00000000c000076c                tolower
                0x00000000c0000780                simple_strtoul
 .text          0x00000000c0000981      0xfad core/malloc.32
                0x00000000c0000aec                dlfree
                0x00000000c0000e47                dlmalloc
                0x00000000c0001384                dlrealloc
                0x00000000c0001527                dlmemalign
                0x00000000c000164a                dlcalloc
                0x00000000c00016e4                dlcfree
                0x00000000c00016e9                dlindependent_calloc
                0x00000000c000170e                dlindependent_comalloc
                0x00000000c0001725                dlvalloc
                0x00000000c0001750                dlpvalloc
                0x00000000c0001786                dlmalloc_trim
                0x00000000c0001793                dlmalloc_usable_size
                0x00000000c00017c4                dlmallinfo
                0x00000000c0001893                dlmalloc_stats
                0x00000000c00018a4                dlmallopt
 .text          0x00000000c000192e        0x0 libk/string.32
 .text          0x00000000c000192e       0x51 fs/fat/diskio.32
                0x00000000c000192e                disk_status
                0x00000000c0001931                disk_initialize
                0x00000000c0001934                disk_read
                0x00000000c000194a                disk_write
                0x00000000c0001960                disk_ioctl
 .text          0x00000000c000197f     0x6a69 fs/fat/ff.32
                0x00000000c0004c4d                f_mount
                0x00000000c0004caf                f_open
                0x00000000c00050eb                f_read
                0x00000000c000536b                f_write
                0x00000000c0005625                f_sync
                0x00000000c0005801                f_close
                0x00000000c0005830                f_lseek
                0x00000000c0005ce7                f_opendir
                0x00000000c0005de9                f_closedir
                0x00000000c0005e0b                f_readdir
                0x00000000c0005ea6                f_stat
                0x00000000c0005f35                f_getfree
                0x00000000c0006100                f_truncate
                0x00000000c00061f8                f_unlink
                0x00000000c000637b                f_mkdir
                0x00000000c00065a7                f_rename
                0x00000000c000689a                f_chmod
                0x00000000c0006978                f_utime
                0x00000000c0006a56                f_getlabel
                0x00000000c0006c44                f_setlabel
                0x00000000c0006eb1                f_expand
                0x00000000c00070e7                f_forward
                0x00000000c00072c5                f_mkfs
 .text          0x00000000c00083e8       0x2f fs/fat/ffsystem.32
                0x00000000c00083e8                ff_memalloc
                0x00000000c0008400                ff_memfree
 *fill*         0x00000000c0008417        0x1 
 .text          0x00000000c0008418      0x274 fs/fat/ffunicode.32
                0x00000000c0008418                ff_uni2oem
                0x00000000c00084b0                ff_oem2uni
                0x00000000c0008524                ff_wtoupper
 .text          0x00000000c000868c       0xa7 compat/inlines.32
                0x00000000c000868c                CPU::current()
                0x00000000c0008698                operator new(unsigned long)
                0x00000000c000869d                operator delete(void*)
                0x00000000c00086a2                disableIRQs()
                0x00000000c00086aa                enableIRQs()
                0x00000000c00086b9                lockScheduler()
                0x00000000c00086c1                unlockScheduler()
                0x00000000c00086d0                lockStuff()
                0x00000000c00086de                unlockStuff()
                0x00000000c0008718                Virt::getAKernelVAS()
                0x00000000c000871e                __not_memcpy
 *fill*         0x00000000c0008733        0x1 
 .text          0x00000000c0008734      0x118 compat/resolve.32
                0x00000000c0008734                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c000884c      0x783 core/computer.32
                0x00000000c000884c                Computer::close(int, int, void*)
                0x00000000c0008890                Krnl::firstTask()
                0x00000000c00089e4                Computer::Computer()
                0x00000000c00089e4                Computer::Computer()
                0x00000000c0008b40                Computer::setBootMessage(char const*)
                0x00000000c0008b42                Computer::detectFeatures()
                0x00000000c0008d4c                Computer::displayFeatures()
                0x00000000c0008d4e                Computer::rdmsr(unsigned int)
                0x00000000c0008d7a                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0008db2                Computer::shutdown()
                0x00000000c0008dca                Computer::restart()
                0x00000000c0008de2                Computer::sleep()
                0x00000000c0008df6                Computer::nmiEnabled()
                0x00000000c0008e02                Computer::readCMOS(unsigned char)
                0x00000000c0008e1c                Computer::enableNMI(bool)
                0x00000000c0008e34                Computer::open(int, int, void*)
                0x00000000c0008f12                Computer::disableNMI()
                0x00000000c0008f20                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0008f3e                Computer::handleNMI()
                0x00000000c0008fa4                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c0008fcf        0x1 
 .text          0x00000000c0008fd0      0x211 core/gdt.32
                0x00000000c0008fd0                GDTEntry::setBase(unsigned int)
                0x00000000c0008fec                GDTEntry::setLimit(unsigned int)
                0x00000000c000900a                GDT::GDT()
                0x00000000c000900a                GDT::GDT()
                0x00000000c0009020                GDT::addEntry(GDTEntry)
                0x00000000c0009042                GDT::getNumberOfEntries()
                0x00000000c000904a                GDT::flush()
                0x00000000c000906c                GDT::setup()
 .text          0x00000000c00091e1       0x19 core/idle.32
                0x00000000c00091e1                idleFunction(void*)
 *fill*         0x00000000c00091fa        0x2 
 .text          0x00000000c00091fc      0x464 core/idt.32
                0x00000000c00091fc                IDTEntry::IDTEntry(bool)
                0x00000000c00091fc                IDTEntry::IDTEntry(bool)
                0x00000000c000926e                IDTEntry::setOffset(unsigned int)
                0x00000000c0009284                IDT::IDT()
                0x00000000c0009284                IDT::IDT()
                0x00000000c0009286                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000928e                IDT::addEntry(IDTEntry, int)
                0x00000000c00092a8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00092e0                IDT::flush()
                0x00000000c00092fa                IDT::setup()
 .text          0x00000000c0009660      0x191 core/kheap.32
                0x00000000c0009660                sbrk
                0x00000000c0009703                mmap
                0x00000000c0009719                munmap
                0x00000000c000972f                liballoc_lock()
                0x00000000c000973c                liballoc_unlock()
                0x00000000c0009750                liballoc_alloc(int)
                0x00000000c0009768                liballoc_free(void*, int)
                0x00000000c0009783                realloc
                0x00000000c0009797                malloc
                0x00000000c00097a7                free
                0x00000000c00097b7                rfree
                0x00000000c00097c7                calloc
 .text          0x00000000c00097f1      0x1bf core/main.32
                0x00000000c00097f1                Krnl::setBootMessage(char const*)
                0x00000000c000985d                kernel_main
 .text          0x00000000c00099b0      0x668 core/physmgr.32
                0x00000000c00099b0                Phys::allocateDMA(unsigned long)
                0x00000000c0009abf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0009b05                Phys::setPageState(unsigned long, bool)
                0x00000000c0009b37                Phys::getPageState(unsigned long)
                0x00000000c0009b53                Phys::freePage(unsigned long)
                0x00000000c0009bd6                Phys::allocatePage()
                0x00000000c0009cc1                Phys::allocateContiguousPages(int)
                0x00000000c0009d1d                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0009d55                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000a018      0x273 core/pipe.32
                0x00000000c000a018                Pipe::isAtty()
                0x00000000c000a01c                Pipe::~Pipe()
                0x00000000c000a01c                Pipe::~Pipe()
                0x00000000c000a040                Pipe::~Pipe()
                0x00000000c000a068                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000a128                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000a224                Pipe::Pipe(int)
                0x00000000c000a224                Pipe::Pipe(int)
 *fill*         0x00000000c000a28b        0x1 
 .text          0x00000000c000a28c      0xa40 core/terminal.32
                0x00000000c000a28c                VgaText::isAtty()
                0x00000000c000a290                VgaText::~VgaText()
                0x00000000c000a290                VgaText::~VgaText()
                0x00000000c000a2b4                VgaText::~VgaText()
                0x00000000c000a2de                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000a2fe                setTerminalScrollLock(bool)
                0x00000000c000a2ff                doTerminalCycle()
                0x00000000c000a300                addToTerminalCycle(VgaText*)
                0x00000000c000a301                scrollTerminalScrollLock(int)
                0x00000000c000a302                VgaText::updateTitle()
                0x00000000c000a304                VgaText::load()
                0x00000000c000a306                VgaText::updateCursor()
                0x00000000c000a31c                VgaText::doANSI_SGR(int)
                0x00000000c000a390                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000a3a0                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000a3b0                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000a3d0                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000a3dc                VgaText::setTitleColour(VgaColour)
                0x00000000c000a3e8                VgaText::setTitle(char*)
                0x00000000c000a3f6                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000a408                VgaText::scrollScreen()
                0x00000000c000a4a0                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000a4b2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000a542                VgaText::getCursorX()
                0x00000000c000a54a                VgaText::getCursorY()
                0x00000000c000a552                VgaText::setCursor(int, int)
                0x00000000c000a569                setActiveTerminal(VgaText*)
                0x00000000c000a5b4                VgaText::clearScreen()
                0x00000000c000a602                VgaText::setCursorX(int)
                0x00000000c000a61a                VgaText::setCursorY(int)
                0x00000000c000a632                VgaText::incrementCursor(bool)
                0x00000000c000a686                VgaText::decrementCursor(bool)
                0x00000000c000a6a8                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000a776                VgaText::putchar(char)
                0x00000000c000a862                VgaText::putx(unsigned int)
                0x00000000c000a8a8                VgaText::puts(char const*)
                0x00000000c000a8ce                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000a91a                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000aa68                VgaText::VgaText(char const*)
                0x00000000c000aa68                VgaText::VgaText(char const*)
                0x00000000c000abce                VgaText::receiveKey(unsigned char)
                0x00000000c000aca6                VgaText::doUpdate()
                0x00000000c000aca7                newTerminal(char*)
 .text          0x00000000c000accc      0x1a1 core/tss.32
                0x00000000c000accc                TSS::TSS()
                0x00000000c000accc                TSS::TSS()
                0x00000000c000acdc                TSS::setESP(unsigned long)
                0x00000000c000acf0                TSS::flush()
                0x00000000c000ad10                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000ae6d        0x1 
 .text          0x00000000c000ae6e      0x4c2 core/unixfile.32
                0x00000000c000ae6e                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000aec4                ReservedFilename::isAtty()
                0x00000000c000aee0                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000af3e                UnixFile::getFileDescriptor()
                0x00000000c000af46                UnixFile::UnixFile(int)
                0x00000000c000af46                UnixFile::UnixFile(int)
                0x00000000c000b0f6                ReservedFilename::ReservedFilename(int)
                0x00000000c000b0f6                ReservedFilename::ReservedFilename(int)
                0x00000000c000b128                UnixFile::~UnixFile()
                0x00000000c000b128                UnixFile::~UnixFile()
                0x00000000c000b1c0                UnixFile::~UnixFile()
                0x00000000c000b1e8                ReservedFilename::~ReservedFilename()
                0x00000000c000b1e8                ReservedFilename::~ReservedFilename()
                0x00000000c000b20c                ReservedFilename::~ReservedFilename()
                0x00000000c000b233                getFromFileDescriptor(int)
 .text          0x00000000c000b330     0x124e core/virtmgr.32
                0x00000000c000b330                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000b365                Virt::getPageState(unsigned long)
                0x00000000c000b389                Virt::allocateKernelVirtualPages(int)
                0x00000000c000b49a                Virt::freeSwapfilePage(unsigned long)
                0x00000000c000b4b8                Virt::swapIDToSector(unsigned long)
                0x00000000c000b4ca                Virt::allocateSwapfilePage()
                0x00000000c000b548                Virt::virtualMemorySetup()
                0x00000000c000b593                Virt::setupPageSwapping(int)
                0x00000000c000b604                VAS::VAS(VAS*)
                0x00000000c000b604                VAS::VAS(VAS*)
                0x00000000c000b632                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000b65e                VAS::getPageTableEntry(unsigned long)
                0x00000000c000b67d                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000b7a0                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000b7c4                VAS::virtualToPhysical(unsigned long)
                0x00000000c000b7dc                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000b81c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000b84e                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000b878                VAS::~VAS()
                0x00000000c000b878                VAS::~VAS()
                0x00000000c000b9f4                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000baf8                VAS::allocatePages(int, int)
                0x00000000c000bcd0                VAS::setCPUSpecific(unsigned long)
                0x00000000c000bcec                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000bdb2                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000bea0                VAS::VAS(bool)
                0x00000000c000bea0                VAS::VAS(bool)
                0x00000000c000c120                VAS::VAS()
                0x00000000c000c120                VAS::VAS()
                0x00000000c000c190                VAS::evict(unsigned long)
                0x00000000c000c260                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000c374                VAS::scanForEviction()
                0x00000000c000c452                mapVASFirstTime
 .text          0x00000000c000c57e       0x95 coreobjs/c++.32
                0x00000000c000c57e                __cxa_atexit
                0x00000000c000c581                __cxa_finalize
                0x00000000c000c582                __stack_chk_fail
                0x00000000c000c5ee                __cxa_pure_virtual
                0x00000000c000c5ff                operator new[](unsigned long)
                0x00000000c000c604                operator delete(void*, unsigned long)
                0x00000000c000c609                operator delete[](void*)
                0x00000000c000c60e                operator delete[](void*, unsigned long)
 .text          0x00000000c000c613      0x1fc dbg/kconsole.32
                0x00000000c000c613                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000c66c                Dbg::logc(char)
                0x00000000c000c68c                Dbg::logs(char*)
                0x00000000c000c6a9                Dbg::logWriteInt(unsigned int)
                0x00000000c000c6c6                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000c6e5                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000c80f        0x1 
 .text          0x00000000c000c810      0xcac fs/vfs.32
                0x00000000c000c810                File::read(unsigned long long, void*, int*)
                0x00000000c000c868                File::write(unsigned long long, void*, int*)
                0x00000000c000c8c0                Directory::read(unsigned long long, void*, int*)
                0x00000000c000c918                Directory::write(unsigned long long, void*, int*)
                0x00000000c000c946                File::isAtty()
                0x00000000c000c94a                Directory::isAtty()
                0x00000000c000c94e                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000c954                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000c95a                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000c960                File::~File()
                0x00000000c000c960                File::~File()
                0x00000000c000c984                File::~File()
                0x00000000c000c9ae                Directory::~Directory()
                0x00000000c000c9ae                Directory::~Directory()
                0x00000000c000c9d2                Directory::~Directory()
                0x00000000c000c9fc                Filesystem::Filesystem()
                0x00000000c000c9fc                Filesystem::Filesystem()
                0x00000000c000ca20                Filesystem::~Filesystem()
                0x00000000c000ca20                Filesystem::~Filesystem()
                0x00000000c000ca2e                Filesystem::~Filesystem()
                0x00000000c000ca52                Fs::getcwd(Process*, char*, int)
                0x00000000c000ca7c                Fs::initVFS()
                0x00000000c000caa6                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000cc50                File::File(char const*, Process*)
                0x00000000c000cc50                File::File(char const*, Process*)
                0x00000000c000cd2a                File::open(FileOpenMode)
                0x00000000c000cd88                File::close()
                0x00000000c000cde8                File::seek(unsigned long long)
                0x00000000c000ce3e                File::tell(unsigned long long*)
                0x00000000c000ce8e                File::rewind()
                0x00000000c000cea2                File::unlink()
                0x00000000c000ceee                File::rename(char const*)
                0x00000000c000cf3c                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000cf98                File::exists()
                0x00000000c000cfd6                File::stat(unsigned long long*, bool*)
                0x00000000c000d037                Fs::setcwd(Process*, char*)
                0x00000000c000d1b0                Directory::Directory(char const*, Process*)
                0x00000000c000d1b0                Directory::Directory(char const*, Process*)
                0x00000000c000d28a                Directory::open()
                0x00000000c000d2e6                Directory::close()
                0x00000000c000d346                Directory::unlink()
                0x00000000c000d392                Directory::rename(char const*)
                0x00000000c000d3e0                Directory::exists()
                0x00000000c000d41e                Directory::read(dirent*)
                0x00000000c000d46a                Directory::create()
                0x00000000c000d4b6                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000d4bc       0x86 hal/bus.32
                0x00000000c000d4bc                Bus::Bus(char const*)
                0x00000000c000d4bc                Bus::Bus(char const*)
                0x00000000c000d4f4                Bus::~Bus()
                0x00000000c000d4f4                Bus::~Bus()
                0x00000000c000d518                Bus::~Bus()
 .text          0x00000000c000d542       0x96 hal/buzzer.32
                0x00000000c000d542                beepThread(void*)
                0x00000000c000d57f                Krnl::beep(int, int, bool)
 .text          0x00000000c000d5d8      0x467 hal/clock.32
                0x00000000c000d5d8                User::loadClockSettings(int)
                0x00000000c000d62a                Clock::Clock(char const*)
                0x00000000c000d62a                Clock::Clock(char const*)
                0x00000000c000d660                Clock::~Clock()
                0x00000000c000d660                Clock::~Clock()
                0x00000000c000d684                Clock::~Clock()
                0x00000000c000d6ae                Clock::timeInSecondsLocal()
                0x00000000c000d6f6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000d74f                datetimeToSeconds(datetime_t)
                0x00000000c000d876                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000d8d6                secondsToDatetime(unsigned long long)
                0x00000000c000da1a                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000da3f        0x1 
 .text          0x00000000c000da40      0x4d0 hal/device.32
                0x00000000c000da40                Device::hibernate()
                0x00000000c000da42                Device::wake()
                0x00000000c000da44                Device::detect()
                0x00000000c000da46                Device::disableLegacy()
                0x00000000c000da48                Device::powerSaving(PowerSavingLevel)
                0x00000000c000da4a                DriverlessDevice::close(int, int, void*)
                0x00000000c000da4e                DriverlessDevice::detect()
                0x00000000c000da50                DriverlessDevice::open(int, int, void*)
                0x00000000c000da64                Device::~Device()
                0x00000000c000da64                Device::~Device()
                0x00000000c000da72                Device::~Device()
                0x00000000c000da9a                Device::findAndLoadDriver()
                0x00000000c000daa8                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000dace                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000db0e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000db38                Device::getParent()
                0x00000000c000db44                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000db62                Device::addChild(Device*)
                0x00000000c000dba6                Device::removeAllChildren()
                0x00000000c000dbec                Device::hibernateAll()
                0x00000000c000dc1c                Device::wakeAll()
                0x00000000c000dc4c                Device::detectAll()
                0x00000000c000dc7c                Device::disableLegacyAll()
                0x00000000c000dcac                Device::loadDriversForAll()
                0x00000000c000dcec                Device::closeAll()
                0x00000000c000dd22                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000dd58                Device::setName(char const*)
                0x00000000c000dd66                Device::Device(char const*)
                0x00000000c000dd66                Device::Device(char const*)
                0x00000000c000de62                Device::getName()
                0x00000000c000de6c                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000de6c                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000dea2                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000dee6                getDevicesOfType(DeviceType)
 .text          0x00000000c000df10       0x86 hal/diskctrl.32
                0x00000000c000df10                HardDiskController::HardDiskController(char const*)
                0x00000000c000df10                HardDiskController::HardDiskController(char const*)
                0x00000000c000df48                HardDiskController::~HardDiskController()
                0x00000000c000df48                HardDiskController::~HardDiskController()
                0x00000000c000df6c                HardDiskController::~HardDiskController()
 .text          0x00000000c000df96       0xe2 hal/diskphys.32
                0x00000000c000df96                PhysicalDisk::eject()
                0x00000000c000df9a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000df9a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000e002                PhysicalDisk::startCache()
                0x00000000c000e02a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000e02a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000e04e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000e078        0x0 hal/fpu.32
 .text          0x00000000c000e078      0x34c hal/intctrl.32
                0x00000000c000e078                int_handler
                0x00000000c000e100                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000e148                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000e273                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000e2a7                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000e325                setupINTS()
                0x00000000c000e382                convertLegacyIRQNumber(int)
 .text          0x00000000c000e3c4      0x778 hal/keybrd.32
                0x00000000c000e3c4                startGUI(void*)
                0x00000000c000e430                startGUIVESA(void*)
                0x00000000c000e49c                sendKeyToTerminal(unsigned char)
                0x00000000c000e55a                sendKeyboardToken(KeyboardToken)
                0x00000000c000e98c                clearInternalKeybuffer(VgaText*)
                0x00000000c000e9c1                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000eab2                Keyboard::Keyboard(char const*)
                0x00000000c000eab2                Keyboard::Keyboard(char const*)
                0x00000000c000eaee                Keyboard::~Keyboard()
                0x00000000c000eaee                Keyboard::~Keyboard()
                0x00000000c000eb12                Keyboard::~Keyboard()
 .text          0x00000000c000eb3c      0x42a hal/logidisk.32
                0x00000000c000eb3c                LogicalDisk::close(int, int, void*)
                0x00000000c000eb40                LogicalDisk::~LogicalDisk()
                0x00000000c000eb40                LogicalDisk::~LogicalDisk()
                0x00000000c000eb64                LogicalDisk::~LogicalDisk()
                0x00000000c000eb8e                LogicalDisk::open(int, int, void*)
                0x00000000c000eba2                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000ebda                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000ec20                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ec20                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ecd6                LogicalDisk::assignDriveLetter()
                0x00000000c000ed8c                LogicalDisk::mount()
                0x00000000c000ee14                LogicalDisk::unmount()
                0x00000000c000ee24                LogicalDisk::eject()
                0x00000000c000ee38                LogicalDisk::unassignDriveLetter()
                0x00000000c000ee8e                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000eefa                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000ef66        0x2 
 .text          0x00000000c000ef68       0x86 hal/mouse.32
                0x00000000c000ef68                Mouse::Mouse(char const*)
                0x00000000c000ef68                Mouse::Mouse(char const*)
                0x00000000c000efa0                Mouse::~Mouse()
                0x00000000c000efa0                Mouse::~Mouse()
                0x00000000c000efc4                Mouse::~Mouse()
 .text          0x00000000c000efee      0x339 hal/partition.32
                0x00000000c000efee                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000f096                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000f327        0x1 
 .text          0x00000000c000f328       0x86 hal/serial.32
                0x00000000c000f328                Serial::Serial(char const*)
                0x00000000c000f328                Serial::Serial(char const*)
                0x00000000c000f360                Serial::~Serial()
                0x00000000c000f360                Serial::~Serial()
                0x00000000c000f384                Serial::~Serial()
 *fill*         0x00000000c000f3ae        0x2 
 .text          0x00000000c000f3b0      0x234 hal/timer.32
                0x00000000c000f3b0                Timer::Timer(char const*)
                0x00000000c000f3b0                Timer::Timer(char const*)
                0x00000000c000f3e8                Timer::~Timer()
                0x00000000c000f3e8                Timer::~Timer()
                0x00000000c000f40c                Timer::~Timer()
                0x00000000c000f436                Timer::read()
                0x00000000c000f441                setupTimer(int)
                0x00000000c000f47c                timerHandler(unsigned int)
 .text          0x00000000c000f5e4      0x43e hal/vcache.32
                0x00000000c000f5e4                VCache::VCache(PhysicalDisk*)
                0x00000000c000f5e4                VCache::VCache(PhysicalDisk*)
                0x00000000c000f74c                VCache::invalidateReadBuffer()
                0x00000000c000f75c                VCache::writeWriteBuffer()
                0x00000000c000f7a8                VCache::~VCache()
                0x00000000c000f7a8                VCache::~VCache()
                0x00000000c000f7fc                VCache::~VCache()
                0x00000000c000f824                VCache::write(unsigned long long, int, void*)
                0x00000000c000f91e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000fa22      0x4b3 hal/video.32
                0x00000000c000fa22                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000fa6e                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000fade                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000fb5c                Video::clearScreen(unsigned int)
                0x00000000c000fb90                Video::putpixel(int, int, unsigned int)
                0x00000000c000fb9e                Video::Video(char const*)
                0x00000000c000fb9e                Video::Video(char const*)
                0x00000000c000fbd4                Video::~Video()
                0x00000000c000fbd4                Video::~Video()
                0x00000000c000fbf8                Video::~Video()
                0x00000000c000fc22                Video::isMonochrome()
                0x00000000c000fc2e                Video::getWidth()
                0x00000000c000fc3a                Video::getHeight()
                0x00000000c000fc46                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000fd02                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000fe6a                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000fed5        0x3 
 .text          0x00000000c000fed8     0x16bf hw/acpi.32
                0x00000000c000fed8                ACPI::close(int, int, void*)
                0x00000000c000ff8c                findRSDP()
                0x00000000c0010060                loadACPITables(unsigned char*)
                0x00000000c00102c4                findRSDT(unsigned char*)
                0x00000000c0010484                findDataTable(unsigned char*, char*)
                0x00000000c00104fc                scanMADT()
                0x00000000c00109d8                ACPI::ACPI()
                0x00000000c00109d8                ACPI::ACPI()
                0x00000000c0010a3c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0010b24                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0010bec                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0010bf4                ACPI::detectPCI()
                0x00000000c00110d8                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c0011120                ACPI::sleep()
                0x00000000c001115c                ACPI::open(int, int, void*)
 *fill*         0x00000000c0011597        0x1 
 .text          0x00000000c0011598      0xdcb hw/cpu.32
                0x00000000c0011598                CPU::close(int, int, void*)
                0x00000000c001159c                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c00115b8                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c00115d0                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0011644                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00116c8                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c00116f6                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0011724                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0011752                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0011780                CPU::CPU()
                0x00000000c0011780                CPU::CPU()
                0x00000000c001180e                CPU::displayFeatures()
                0x00000000c0011810                CPU::detectFeatures()
                0x00000000c0011ee6                CPU::setupSMEP()
                0x00000000c0011ef2                CPU::setupUMIP()
                0x00000000c0011efc                CPU::setupTSC()
                0x00000000c0011f06                CPU::setupLargePages()
                0x00000000c0011f10                CPU::setupPAT()
                0x00000000c0011f4c                CPU::setupMTRR()
                0x00000000c0011f4e                CPU::setupGlobalPages()
                0x00000000c0011f58                CPU::allowUsermodeDataAccess()
                0x00000000c0011f6a                CPU::prohibitUsermodeDataAccess()
                0x00000000c0011f7c                CPU::setupSMAP()
                0x00000000c0011f8a                CPU::setupFeatures()
                0x00000000c0012056                CPU::open(int, int, void*)
                0x00000000c0012168                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0012363      0x16a hw/smp.32
                0x00000000c0012363                Krnl::smpEntry()
                0x00000000c0012365                Krnl::startCPU(int)
                0x00000000c00124ae                Krnl::startCPUs()
 *fill*         0x00000000c00124cd        0x1 
 .text          0x00000000c00124ce      0x581 krnl/env.32
                0x00000000c00124ce                EnvVarContainer::getEnv(char const*)
                0x00000000c001250c                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00125ce                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00125d0                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00127b6                EnvVarContainer::__loadSystem()
                0x00000000c00127d0                EnvVarContainer::__loadUser()
                0x00000000c00127d2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00127d2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00127f4                EnvVarContainer::~EnvVarContainer()
                0x00000000c00127f4                EnvVarContainer::~EnvVarContainer()
                0x00000000c0012824                Krnl::getEnv(Process*, char const*)
                0x00000000c0012889                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00128a3                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00128c2                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00128d5                Krnl::deleteEnvSystem(char const*)
                0x00000000c00128d6                Krnl::deleteEnvUser(char const*)
                0x00000000c00128d7                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c00128d8                Krnl::newProcessEnv(Process*)
                0x00000000c00128fa                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0012946                Krnl::loadSystemEnv()
                0x00000000c0012974                Krnl::loadUserEnv()
                0x00000000c001299a                Krnl::flushEnv()
                0x00000000c001299b                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00129bb                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0012a4f      0x243 krnl/panic.32
                0x00000000c0012a4f                Krnl::panic(char const*)
 .text          0x00000000c0012c92      0x194 krnl/powctrl.32
                0x00000000c0012c92                Krnl::powerThread(void*)
                0x00000000c0012d12                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0012d28                Krnl::userIOReceived()
                0x00000000c0012d33                Krnl::handlePowerButton()
                0x00000000c0012d68                Krnl::handleSleepButton()
                0x00000000c0012d9d                Krnl::setupPowerManager()
 .text          0x00000000c0012e26      0x50e reg/registry.32
                0x00000000c0012e26                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012f7e                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00130d3                Reg::getLine(char*, char*, char*)
                0x00000000c001310a                Reg::readInt(char*, char*, int*)
                0x00000000c00131f5                Reg::readString(char*, char*, char*, int)
                0x00000000c0013276                Reg::readBool(char*, char*, bool*)
                0x00000000c001329b                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00132c7                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00132f3                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013334       0x36 sys/sc_eject.32
                0x00000000c0013334                Sys::eject(regs*)
 .text          0x00000000c001336a       0x18 sys/sc_exit.32
                0x00000000c001336a                Sys::exit(regs*)
 .text          0x00000000c0013382       0x1f sys/sc_getcwd.32
                0x00000000c0013382                Sys::getCwd(regs*)
 .text          0x00000000c00133a1        0xc sys/sc_getpid.32
                0x00000000c00133a1                Sys::getPID(regs*)
 .text          0x00000000c00133ad       0x1a sys/sc_getramdata.32
                0x00000000c00133ad                Sys::getRAMData(regs*)
 .text          0x00000000c00133c7       0x84 sys/sc_getvgaptr.32
                0x00000000c00133c7                Sys::getVGAPtr(regs*)
 .text          0x00000000c001344b       0xa8 sys/sc_loaddll.32
                0x00000000c001344b                Sys::loadDLL(regs*)
 .text          0x00000000c00134f3       0x68 sys/sc_read.32
                0x00000000c00134f3                Sys::read(regs*)
 .text          0x00000000c001355b       0x55 sys/sc_sbrk.32
                0x00000000c001355b                Sys::sbrk(regs*)
 .text          0x00000000c00135b0       0x1c sys/sc_setcwd.32
                0x00000000c00135b0                Sys::setCwd(regs*)
 .text          0x00000000c00135cc       0x95 sys/sc_settime.32
                0x00000000c00135cc                Sys::setTime(regs*)
 .text          0x00000000c0013661       0x4a sys/sc_timezone.32
                0x00000000c0013661                Sys::timezone(regs*)
 .text          0x00000000c00136ab       0x68 sys/sc_write.32
                0x00000000c00136ab                Sys::write(regs*)
 .text          0x00000000c0013713       0x62 sys/sc_wsbe.32
                0x00000000c0013713                Sys::wsbe(regs*)
 .text          0x00000000c0013775       0x25 sys/sc_yield.32
                0x00000000c0013775                Sys::yield(regs*)
 .text          0x00000000c001379a      0xe70 sys/syscalls.32
                0x00000000c001379a                sysCallSeekDir(regs*)
                0x00000000c001379f                sysCallTellDir(regs*)
                0x00000000c00137a4                sysCallVerify(regs*)
                0x00000000c00137ae                sysCallGetArgc(regs*)
                0x00000000c00137be                sysFormatDisk(regs*)
                0x00000000c0013828                sysSetDiskVolumeLabel(regs*)
                0x00000000c0013872                sysGetDiskVolumeLabel(regs*)
                0x00000000c00138c7                sysShutdown(regs*)
                0x00000000c0013925                sysCallRealpath(regs*)
                0x00000000c0013968                sysCallReadDir(regs*)
                0x00000000c00139e7                sysCallIsATTY(regs*)
                0x00000000c0013a41                sysCallSeek(regs*)
                0x00000000c0013a98                sysCallTell(regs*)
                0x00000000c0013b04                sysCallSize(regs*)
                0x00000000c0013b76                sysCallSizeFromFilename(regs*)
                0x00000000c0013c25                sysCallClose(regs*)
                0x00000000c0013c85                sysCallOpenDir(regs*)
                0x00000000c0013cfa                sysCallCloseDir(regs*)
                0x00000000c0013d4e                sysCallMakeDir(regs*)
                0x00000000c0013dbe                sysCallWait(regs*)
                0x00000000c0013dd8                sysCallNotImpl(regs*)
                0x00000000c0013df3                sysPanic(regs*)
                0x00000000c0013e0d                sysCallRmdir(regs*)
                0x00000000c0013e71                sysCallUnlink(regs*)
                0x00000000c0013ed5                sysCallGetArgv(regs*)
                0x00000000c0013f21                sysCallTTYName(regs*)
                0x00000000c0013fa4                sysCallUSleep(regs*)
                0x00000000c0013fcd                sysCallSpawn(regs*)
                0x00000000c0014035                sysCallGetEnv(regs*)
                0x00000000c00140e2                sysSetFatAttrib(regs*)
                0x00000000c0014154                sysPipe(regs*)
                0x00000000c0014199                sysGetUnixTime(regs*)
                0x00000000c00141ad                string_ends_with(char const*, char const*)
                0x00000000c00141f5                sysCallOpen(regs*)
                0x00000000c00143dd                Sys::loadSyscalls()
                0x00000000c00145c8                Sys::systemCall(regs*, void*)
 .text          0x00000000c001460a     0x1203 thr/elf.32
                0x00000000c001460a                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00148b4                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014aca                Thr::runtimeReferenceHelper()
                0x00000000c0014add                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014b2c                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014dea                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015520                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015552                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015589                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00155a3                Thr::loadDLL(char const*, bool)
                0x00000000c00157d4                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001580d        0x3 
 .text          0x00000000c0015810     0x12a1 thr/prcssthr.32
                0x00000000c0015810                userModeEntryPoint(void*)
                0x00000000c0015838                changeTSS
                0x00000000c0015868                switchToThread(ThreadControlBlock*)
                0x00000000c0015914                Process::addArgs(char**)
                0x00000000c0015974                Process::Process(char const*, Process*, char**)
                0x00000000c0015974                Process::Process(char const*, Process*, char**)
                0x00000000c0015b60                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015b60                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015d18                taskStartupFunction
                0x00000000c0015d24                Semaphore::Semaphore(int)
                0x00000000c0015d24                Semaphore::Semaphore(int)
                0x00000000c0015d54                Mutex::Mutex()
                0x00000000c0015d54                Mutex::Mutex()
                0x00000000c0015d68                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015e60                Process::createUserThread()
                0x00000000c0015e7c                setupMultitasking(void (*)())
                0x00000000c0015f84                schedule()
                0x00000000c0016010                Semaphore::tryAcquire()
                0x00000000c00160dc                Semaphore::assertLocked(char const*)
                0x00000000c0016154                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001617c                blockTask(TaskState)
                0x00000000c00161ac                waitTask(int, int*, int)
                0x00000000c00161f0                milliTenthSleepUntil(unsigned int)
                0x00000000c001627c                milliTenthSleep(unsigned int)
                0x00000000c001628c                sleep(unsigned int)
                0x00000000c00162a8                Semaphore::acquire()
                0x00000000c0016364                taskReturned
                0x00000000c00163a0                Thr::processFromPID(int)
                0x00000000c0016440                unblockTask(ThreadControlBlock*)
                0x00000000c00164e4                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00167ac                cleanerTaskFunction(void*)
                0x00000000c001689c                terminateTask(int)
                0x00000000c0016968                Thr::terminateFromIRQ(int)
                0x00000000c0016974                Semaphore::release()
 .text          0x00000000c0016ab1      0xb93 vm86/vm8086.32
                0x00000000c0016ab1                Vm::inbv(unsigned short)
                0x00000000c0016ac4                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016afa                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016b0a                Vm::getSegment(unsigned int)
                0x00000000c0016b12                Vm::getOffset(unsigned int)
                0x00000000c0016b17                Vm::mainloop2()
                0x00000000c0016b51                Vm::mainVm8086Loop(void*)
                0x00000000c0016b61                Vm::mainloop3(unsigned long)
                0x00000000c0016b87                Vm::initialise8086()
                0x00000000c0016bca                Vm::finish8086()
                0x00000000c0016c2b                Vm::getOutput8086(unsigned char*)
                0x00000000c0016c50                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016d09                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016e71                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016efb                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016f0c                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016f1e                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016f2f                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016f44                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016f5a                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016f6f                Vm::faultHandler(regs*)
 .text          0x00000000c0017644      0xfcd vm86/x87em.32
                0x00000000c0017644                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c00176a2                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c00176ab                Vm::fpu32ToInternal(unsigned int)
                0x00000000c00176f0                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c00176f9                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c0017758                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c0017794                Vm::fpuLongToFloat(long long)
                0x00000000c00177f3                Vm::fpuGet0()
                0x00000000c00177f8                Vm::fpuGet1()
                0x00000000c0017800                Vm::fpuGetPi()
                0x00000000c0017808                Vm::fpuGetLog2E()
                0x00000000c0017820                Vm::fpuGetLogE2()
                0x00000000c0017838                Vm::fpuGetLog210()
                0x00000000c0017850                Vm::fpuGetLog102()
                0x00000000c0017868                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c001787c                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c0017892                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c00178e8                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c00178f9                Vm::fpuAbs(unsigned long long)
                0x00000000c0017902                Vm::fpuChs(unsigned long long)
                0x00000000c0017912                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c0017921                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c0017940                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c001795c                Vm::fpuSquare(unsigned long long)
                0x00000000c0017972                Vm::fpuGetReg(int)
                0x00000000c00179b5                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c0017a01                Vm::fpuPush(unsigned long long)
                0x00000000c0017a5f                Vm::fpuPop()
                0x00000000c0017ab2                Vm::x87Handler(regs*)
 .text          0x00000000c0018611      0x929 arch/i386/hal.32
                0x00000000c0018611                Hal::noCopro(unsigned long)
                0x00000000c0018612                Hal::noTSC()
                0x00000000c0018617                Hal::readTSC()
                0x00000000c001861a                nmiHandler(regs*, void*)
                0x00000000c0018633                doubleFault(regs*, void*)
                0x00000000c001864c                displayDebugInfo(regs*)
                0x00000000c001896d                displayProgramFault(char const*)
                0x00000000c00189aa                gpFault(regs*, void*)
                0x00000000c0018a1f                pgFault(regs*, void*)
                0x00000000c0018a91                otherISRHandler(regs*, void*)
                0x00000000c0018ae5                opcodeFault(regs*, void*)
                0x00000000c0018b75                i386SaveCoprocessor(void*)
                0x00000000c0018b89                i386LoadCoprocessor(void*)
                0x00000000c0018b9d                x87EmulHandler(regs*, void*)
                0x00000000c0018c50                Hal::initialiseCoprocessor()
                0x00000000c0018cfe                Hal::panic(char const*)
                0x00000000c0018d03                Hal::initialise()
                0x00000000c0018ecc                Hal::makeBeep(int)
                0x00000000c0018f06                Hal::getRand()
                0x00000000c0018f09                Hal::endOfInterrupt(int)
 *fill*         0x00000000c0018f3a        0x2 
 .text          0x00000000c0018f3c      0x2dc arch/i386/pic.32
                0x00000000c0018f3c                picIoWait()
                0x00000000c0018f44                picDisable()
                0x00000000c0018f78                picGetIRQReg(int)
                0x00000000c0018ff4                picOpen()
                0x00000000c0019178                picEOI(int)
 .text          0x00000000c0019218      0x724 arch/i386/rtc.32
                0x00000000c0019218                RTC::open(int, int, void*)
                0x00000000c001921c                RTC::close(int, int, void*)
                0x00000000c0019220                RTC::timeInSecondsUTC()
                0x00000000c0019232                RTC::timeInDatetimeUTC()
                0x00000000c0019258                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0019296                RTC::~RTC()
                0x00000000c0019296                RTC::~RTC()
                0x00000000c00192ba                RTC::~RTC()
                0x00000000c00192e4                RTC::get_update_in_progress_flag()
                0x00000000c00192fc                RTC::completeRTCRefresh()
                0x00000000c00195c6                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0019840                rtcIRQHandler(regs*, void*)
                0x00000000c0019886                RTC::RTC()
                0x00000000c0019886                RTC::RTC()
 .text          0x00000000c001993c      0x1f7 arch/i386/vga.32
                0x00000000c001993c                Hal::consoleScroll(int, int)
                0x00000000c0019a44                Hal::consoleWriteCharacter(char, int, int, int, int)
                0x00000000c0019aa8                Hal::consoleCursorUpdate(int, int)
 *fill*         0x00000000c0019b33        0x1 
 .text          0x00000000c0019b34     0x13b7 fs/fat/vfslink.32
                0x00000000c0019b34                FAT::getName()
                0x00000000c0019b3c                FAT::tell(void*, unsigned long long*)
                0x00000000c0019b78                FAT::stat(void*, unsigned long long*)
                0x00000000c0019bb4                FAT::~FAT()
                0x00000000c0019bb4                FAT::~FAT()
                0x00000000c0019bd8                FAT::~FAT()
                0x00000000c0019c00                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019ca4                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019d68                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019f3c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001a154                FAT::allocateSwapfile(char const*, int)
                0x00000000c001a310                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a47c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001a4dc                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001a53c                FAT::close(void*)
                0x00000000c001a590                FAT::closeDir(void*)
                0x00000000c001a5e4                FAT::seek(void*, unsigned long long)
                0x00000000c001a640                fatWrapperReadDisk
                0x00000000c001a688                fatWrapperWriteDisk
                0x00000000c001a6d0                fatWrapperIoctl
                0x00000000c001a7e0                FAT::FAT()
                0x00000000c001a7e0                FAT::FAT()
                0x00000000c001a834                FAT::fixFilepath(char*)
                0x00000000c001a870                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001a9a4                FAT::openDir(char const*, void**)
                0x00000000c001aa54                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001ab48                FAT::unlink(char const*)
                0x00000000c001abc8                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ad30                FAT::rename(char const*, char const*)
                0x00000000c001adfc                FAT::mkdir(char const*)
                0x00000000c001ae7c                FAT::exists(char const*)
 *fill*         0x00000000c001aeeb        0x1 
 .text          0x00000000c001aeec      0xba7 fs/iso9660/vfslink.32
                0x00000000c001aeec                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001aef2                ISO9660::seek(void*, unsigned long long)
                0x00000000c001af22                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001af46                ISO9660::getName()
                0x00000000c001af4c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001af70                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001af76                ISO9660::unlink(char const*)
                0x00000000c001af7c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001af82                ISO9660::rename(char const*, char const*)
                0x00000000c001af88                ISO9660::mkdir(char const*)
                0x00000000c001af8e                ISO9660::close(void*)
                0x00000000c001afb0                ISO9660::closeDir(void*)
                0x00000000c001afd2                ISO9660::~ISO9660()
                0x00000000c001afd2                ISO9660::~ISO9660()
                0x00000000c001aff6                ISO9660::~ISO9660()
                0x00000000c001b01d                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001b05f                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b0da                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b13a                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001b33e                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b5b8                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001b60c                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001b7e2                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001b870                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001b91e                ISO9660::exists(char const*)
                0x00000000c001b942                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b9d6                ISO9660::openDir(char const*, void**)
                0x00000000c001ba70                ISO9660::ISO9660()
                0x00000000c001ba70                ISO9660::ISO9660()
 *fill*         0x00000000c001ba93        0x1 
 .text          0x00000000c001ba94      0x298 hal/sound/sndcard.32
                0x00000000c001ba94                SoundCard::beginPlayback()
                0x00000000c001baa2                SoundCard::stopPlayback()
                0x00000000c001bab0                SoundCard::SoundCard(char const*)
                0x00000000c001bab0                SoundCard::SoundCard(char const*)
                0x00000000c001bb4e                SoundCard::~SoundCard()
                0x00000000c001bb4e                SoundCard::~SoundCard()
                0x00000000c001bb72                SoundCard::~SoundCard()
                0x00000000c001bb9c                SoundCard::configureRates(int, int, int)
                0x00000000c001bbcc                SoundCard::getSamples16(int, short*)
                0x00000000c001bc36                SoundCard::getSamples32(int, int*)
                0x00000000c001bcbc                SoundCard::addChannel(SoundPort*)
                0x00000000c001bd18                SoundCard::removeChannel(int)
 .text          0x00000000c001bd2c      0x3fb hal/sound/sndport.32
                0x00000000c001bd2c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001bd2c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001bdb8                SoundPort::~SoundPort()
                0x00000000c001bdb8                SoundPort::~SoundPort()
                0x00000000c001bdec                SoundPort::unpause()
                0x00000000c001bdf8                SoundPort::pause()
                0x00000000c001be04                SoundPort::getBufferUsed()
                0x00000000c001be0c                SoundPort::getBufferSize()
                0x00000000c001be14                SoundPort::buffer16(short*, int)
                0x00000000c001bec8                SoundPort::buffer32(int*, int)
                0x00000000c001bf74                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001c070                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001c127        0x0 hw/bus/isa.32
 *fill*         0x00000000c001c127        0x1 
 .text          0x00000000c001c128     0x1187 hw/bus/pci.32
                0x00000000c001c128                PCI::open(int, int, void*)
                0x00000000c001c146                PCI::close(int, int, void*)
                0x00000000c001c14a                PCI::PCI()
                0x00000000c001c14a                PCI::PCI()
                0x00000000c001c1e0                PCI::readBAR8(unsigned int, int)
                0x00000000c001c1fc                PCI::readBAR16(unsigned int, int)
                0x00000000c001c21a                PCI::readBAR32(unsigned int, int)
                0x00000000c001c236                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001c256                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001c278                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001c298                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c306                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c3ae                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c3d2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001c3fa                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001c444                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001c46c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c490                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001c4b4                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001c4dc                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c540                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001c628                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001ca1a                PCI::checkBus(unsigned char)
                0x00000000c001ca3e                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001ce7e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001d1f0                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001d25c                PCI::detect()
 *fill*         0x00000000c001d2af        0x1 
 .text          0x00000000c001d2b0      0xb66 hw/diskctrl/ide.32
                0x00000000c001d2b0                IDE::close(int, int, void*)
                0x00000000c001d2b4                IDE::IDE()
                0x00000000c001d2b4                IDE::IDE()
                0x00000000c001d2e8                IDE::prepareInterrupt(unsigned char)
                0x00000000c001d2fa                selectDrive(unsigned char, unsigned char)
                0x00000000c001d2fc                IDE::getBase(unsigned char)
                0x00000000c001d30e                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001d3ce                IDE::read(unsigned char, unsigned char)
                0x00000000c001d47c                IDE::waitInterrupt(unsigned char)
                0x00000000c001d4de                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001d4fa                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001d516                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001d55c                IDE::open(int, int, void*)
                0x00000000c001d986                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001da52                IDE::detect()
                0x00000000c001dd12                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001ddc2                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001de16      0x46c hw/diskctrl/satabus.32
                0x00000000c001de16                SATABus::close(int, int, void*)
                0x00000000c001de1a                SATABus::detect()
                0x00000000c001de1c                SATABus::SATABus()
                0x00000000c001de1c                SATABus::SATABus()
                0x00000000c001dea2                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ded4                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001df1c                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001df3c                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001df66                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001e06c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001e24e                SATABus::open(int, int, void*)
 .text          0x00000000c001e282      0x684 hw/diskphys/ata.32
                0x00000000c001e282                ATA::close(int, int, void*)
                0x00000000c001e2a6                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001e2a8                ATA::ATA()
                0x00000000c001e2a8                ATA::ATA()
                0x00000000c001e2d6                ATA::flush(bool)
                0x00000000c001e320                ATA::readyForCommand()
                0x00000000c001e36c                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001e762                ATA::read(unsigned long long, int, void*)
                0x00000000c001e7ae                ATA::write(unsigned long long, int, void*)
                0x00000000c001e810                ATA::detectCHS()
                0x00000000c001e83a                ATA::open(int, int, void*)
 .text          0x00000000c001e906      0x645 hw/diskphys/atapi.32
                0x00000000c001e906                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001e90c                ATAPI::close(int, int, void*)
                0x00000000c001e930                ATAPI::ATAPI()
                0x00000000c001e930                ATAPI::ATAPI()
                0x00000000c001e95e                ATAPI::readyForCommand()
                0x00000000c001e9b0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001ec70                ATAPI::diskRemoved()
                0x00000000c001eccc                ATAPI::eject()
                0x00000000c001ed14                ATAPI::diskInserted()
                0x00000000c001ed30                ATAPI::detectMedia()
                0x00000000c001edec                ATAPI::open(int, int, void*)
                0x00000000c001eecc                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001ef4b        0x1 
 .text          0x00000000c001ef4c      0xa68 hw/diskphys/sata.32
                0x00000000c001ef4c                SATA::close(int, int, void*)
                0x00000000c001ef70                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ef72                SATA::open(int, int, void*)
                0x00000000c001f168                SATA::SATA()
                0x00000000c001f168                SATA::SATA()
                0x00000000c001f196                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f78e                SATA::read(unsigned long long, int, void*)
                0x00000000c001f88e                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001f9b4      0x642 hw/diskphys/satapi.32
                0x00000000c001f9b4                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001f9ba                SATAPI::close(int, int, void*)
                0x00000000c001f9de                SATAPI::SATAPI()
                0x00000000c001f9de                SATAPI::SATAPI()
                0x00000000c001fa0c                SATAPI::diskRemoved()
                0x00000000c001fa0e                SATAPI::diskInserted()
                0x00000000c001fa2a                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001fcb8                SATAPI::eject()
                0x00000000c001fcf4                SATAPI::detectMedia()
                0x00000000c001fe1e                SATAPI::open(int, int, void*)
                0x00000000c001ff1e                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001fff6      0x43f hw/intctrl/apic.32
                0x00000000c001fff6                IOAPIC::close(int, int, void*)
                0x00000000c001fffc                apicGetBase()
                0x00000000c002003e                IOAPIC::IOAPIC()
                0x00000000c002003e                IOAPIC::IOAPIC()
                0x00000000c0020066                apicOpen()
                0x00000000c00201c0                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c00201f2                IOAPIC::read(int)
                0x00000000c002021a                IOAPIC::open(int, int, void*)
                0x00000000c0020310                IOAPIC::write(int, int)
                0x00000000c002033c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0020435        0x3 
 .text          0x00000000c0020438       0xf0 hw/timer/apictimer.32
                0x00000000c0020438                APICTimer::close(int, int, void*)
                0x00000000c0020440                apicTimerHandler(regs*, void*)
                0x00000000c0020468                APICTimer::open(int, int, void*)
                0x00000000c00204d8                APICTimer::write(int)
                0x00000000c0020500                APICTimer::APICTimer()
                0x00000000c0020500                APICTimer::APICTimer()
 .text          0x00000000c0020528      0x1a3 hw/timer/pit.32
                0x00000000c0020528                PIT::write(int)
                0x00000000c00205a8                pitHandler(regs*, void*)
                0x00000000c00205cc                PIT::open(int, int, void*)
                0x00000000c002061c                PIT::close(int, int, void*)
                0x00000000c002064c                PIT::PIT()
                0x00000000c002064c                PIT::PIT()
 *fill*         0x00000000c00206cb        0x5 
 .text          0x00000000c00206d0       0x83 arch/i386/avx.32
                0x00000000c00206d0                avxDetect
                0x00000000c00206fa                avxSave
                0x00000000c002070b                avxLoad
                0x00000000c002071c                avxInit
                0x00000000c002073e                avxClose
                0x00000000c002073f                wouldSheSayYes
 *fill*         0x00000000c0020753        0xd 
 .text          0x00000000c0020760      0x1d6 arch/i386/interrupt.32
                0x00000000c0020760                isr0
                0x00000000c0020770                isr1
                0x00000000c002077a                isr2
                0x00000000c0020784                isr3
                0x00000000c002078e                isr4
                0x00000000c0020798                isr5
                0x00000000c00207a2                isr6
                0x00000000c00207ac                isr7
                0x00000000c00207b6                isr8
                0x00000000c00207be                isr9
                0x00000000c00207c8                isr10
                0x00000000c00207d0                isr11
                0x00000000c00207d8                isr12
                0x00000000c00207e0                isr13
                0x00000000c00207e8                isr14
                0x00000000c00207f0                isr15
                0x00000000c00207fa                isr16
                0x00000000c0020804                isr17
                0x00000000c002080e                isr18
                0x00000000c0020818                irq3
                0x00000000c0020822                irq4
                0x00000000c002082c                irq5
                0x00000000c0020836                irq6
                0x00000000c0020840                irq7
                0x00000000c002084a                irq8
                0x00000000c0020854                irq9
                0x00000000c002085e                irq10
                0x00000000c0020868                irq11
                0x00000000c0020872                irq12
                0x00000000c002087c                irq13
                0x00000000c0020886                irq14
                0x00000000c0020890                irq15
                0x00000000c002089a                irq1
                0x00000000c00208a1                irq2
                0x00000000c00208a8                isr96
                0x00000000c00208af                irq0
                0x00000000c00208b4                int_common_stub
                0x00000000c00208b4                syscall_common_stub
                0x00000000c00208e6                irq16
                0x00000000c00208f0                irq17
                0x00000000c00208fa                irq18
                0x00000000c0020904                irq19
                0x00000000c002090e                irq20
                0x00000000c0020918                irq21
                0x00000000c0020922                irq22
                0x00000000c002092c                irq23
 *fill*         0x00000000c0020936        0xa 
 .text          0x00000000c0020940       0x10 arch/i386/rdrand.32
                0x00000000c0020940                i386GetRDRAND
 .text          0x00000000c0020950       0x39 arch/i386/sse.32
                0x00000000c0020950                absolutelyNoChanceInHell
                0x00000000c0020950                sseDetect
                0x00000000c0020968                sseSave
                0x00000000c0020970                sseLoad
                0x00000000c0020978                sseInit
                0x00000000c0020988                sseClose
 *fill*         0x00000000c0020989        0x7 
 .text          0x00000000c0020990       0x49 arch/i386/x87.32
                0x00000000c0020996                x87Detect
                0x00000000c00209b1                x87Save
                0x00000000c00209b8                x87Load
                0x00000000c00209bf                x87Init
                0x00000000c00209d8                x87Close
 *fill*         0x00000000c00209d9        0x3 
 .text          0x00000000c00209dc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0020a01        0x0 crtn.32
 *fill*         0x00000000c0020a01        0x3 
 .text          0x00000000c0020a04      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0020a04                __divdi3
 *fill*         0x00000000c0020b4f        0x1 
 .text          0x00000000c0020b50      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0020b50                __moddi3
 *fill*         0x00000000c0020cce        0x2 
 .text          0x00000000c0020cd0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0020cd0                __udivdi3
 *fill*         0x00000000c0020dcf        0x1 
 .text          0x00000000c0020dd0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0020dd0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0020ef0        0x0
 .iplt          0x00000000c0020ef0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0020eea        0xf
 .init          0x00000000c0020eea        0x3 crti.32
                0x00000000c0020eea                _init
 .init          0x00000000c0020eed        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0020ef2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0020ef7        0x2 crtn.32

.fini           0x00000000c0020ef9        0xa
 .fini          0x00000000c0020ef9        0x3 crti.32
                0x00000000c0020ef9                _fini
 .fini          0x00000000c0020efc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0020f01        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c0020f04       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0020f04       0x23 core/computer.32
                0x00000000c0020f04                Computer::~Computer()
                0x00000000c0020f04                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0020f28       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0020f28       0x2a core/computer.32
                0x00000000c0020f28                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0020f52       0x21
 .text._Z10idleCommonv
                0x00000000c0020f52       0x21 core/idle.32
                0x00000000c0020f52                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0020f74        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0020f74        0x2 core/unixfile.32
                0x00000000c0020f74                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0020f74                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0020f76       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0020f76       0x42 core/unixfile.32
                0x00000000c0020f76                LinkedList<UnixFile>::LinkedList()
                0x00000000c0020f76                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0020fb8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0020fb8       0xd3 core/unixfile.32
                0x00000000c0020fb8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c002108c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c002108c        0x7 core/unixfile.32
                0x00000000c002108c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021094       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021094       0xa1 core/unixfile.32
                0x00000000c0021094                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021136        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021136        0x8 core/unixfile.32
                0x00000000c0021136                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c002113e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c002113e       0x1a hal/device.32
                0x00000000c002113e                DriverlessDevice::~DriverlessDevice()
                0x00000000c002113e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021158       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021158       0x2a hal/device.32
                0x00000000c0021158                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021182       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021182       0xdc hal/device.32
                0x00000000c0021182                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c002125e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c002125e       0x42 hal/device.32
                0x00000000c002125e                LinkedList<Device>::LinkedList()
                0x00000000c002125e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00212a0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00212a0       0x1c hal/timer.32
                0x00000000c00212a0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00212bc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00212bc        0x7 hal/timer.32
                0x00000000c00212bc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00212c4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00212c4       0xb8 hal/timer.32
                0x00000000c00212c4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002137c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002137c       0xda hal/timer.32
                0x00000000c002137c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021458       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021458       0x23 hw/acpi.32
                0x00000000c0021458                ACPI::~ACPI()
                0x00000000c0021458                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002147c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002147c       0x2a hw/acpi.32
                0x00000000c002147c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00214a8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00214a8        0x2 hw/acpi.32
                0x00000000c00214a8                LinkedList<Device>::~LinkedList()
                0x00000000c00214a8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00214ac       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00214ac       0x1c hw/acpi.32
                0x00000000c00214ac                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00214c8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00214c8        0x7 hw/acpi.32
                0x00000000c00214c8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00214d0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00214d0       0xb8 hw/acpi.32
                0x00000000c00214d0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c0021588       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0021588       0x23 hw/cpu.32
                0x00000000c0021588                CPU::~CPU()
                0x00000000c0021588                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00215ac       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00215ac       0x2a hw/cpu.32
                0x00000000c00215ac                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00215d8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00215d8        0x2 thr/prcssthr.32
                0x00000000c00215d8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00215d8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00215dc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00215dc       0x49 thr/prcssthr.32
                0x00000000c00215dc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00215dc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021628       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021628       0x42 thr/prcssthr.32
                0x00000000c0021628                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0021628                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002166c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002166c        0x8 thr/prcssthr.32
                0x00000000c002166c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0021674        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0021674        0xd vm86/x87em.32
                0x00000000c0021674                Vm::_FPUState::_FPUState()
                0x00000000c0021674                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c0021682       0x23
 .text._ZN3PCID2Ev
                0x00000000c0021682       0x23 hw/bus/pci.32
                0x00000000c0021682                PCI::~PCI()
                0x00000000c0021682                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00216a6       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00216a6       0x2a hw/bus/pci.32
                0x00000000c00216a6                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00216d0       0x23
 .text._ZN3IDED2Ev
                0x00000000c00216d0       0x23 hw/diskctrl/ide.32
                0x00000000c00216d0                IDE::~IDE()
                0x00000000c00216d0                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00216f4       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00216f4       0x2a hw/diskctrl/ide.32
                0x00000000c00216f4                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c002171e       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c002171e       0x23 hw/diskctrl/satabus.32
                0x00000000c002171e                SATABus::~SATABus()
                0x00000000c002171e                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0021742       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0021742       0x2a hw/diskctrl/satabus.32
                0x00000000c0021742                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c002176c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c002176c       0x23 hw/diskphys/ata.32
                0x00000000c002176c                ATA::~ATA()
                0x00000000c002176c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0021790       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0021790       0x2a hw/diskphys/ata.32
                0x00000000c0021790                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00217ba       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00217ba       0x23 hw/diskphys/atapi.32
                0x00000000c00217ba                ATAPI::~ATAPI()
                0x00000000c00217ba                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00217de       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00217de       0x2a hw/diskphys/atapi.32
                0x00000000c00217de                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0021808       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0021808       0x23 hw/diskphys/sata.32
                0x00000000c0021808                SATA::~SATA()
                0x00000000c0021808                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c002182c       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c002182c       0x2a hw/diskphys/sata.32
                0x00000000c002182c                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0021856       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0021856       0x23 hw/diskphys/satapi.32
                0x00000000c0021856                SATAPI::~SATAPI()
                0x00000000c0021856                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002187a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002187a       0x2a hw/diskphys/satapi.32
                0x00000000c002187a                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00218a4       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00218a4       0x23 hw/intctrl/apic.32
                0x00000000c00218a4                IOAPIC::~IOAPIC()
                0x00000000c00218a4                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00218c8       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00218c8       0x2a hw/intctrl/apic.32
                0x00000000c00218c8                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00218f4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00218f4       0x23 hw/timer/apictimer.32
                0x00000000c00218f4                APICTimer::~APICTimer()
                0x00000000c00218f4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0021918       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0021918       0x2a hw/timer/apictimer.32
                0x00000000c0021918                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0021944       0x23
 .text._ZN3PITD2Ev
                0x00000000c0021944       0x23 hw/timer/pit.32
                0x00000000c0021944                PIT::~PIT()
                0x00000000c0021944                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0021968       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0021968       0x2a hw/timer/pit.32
                0x00000000c0021968                PIT::~PIT()

.rodata         0x00000000c0021992     0x357e
                0x00000000c0021992                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0021992        0x2 
 .ctors         0x00000000c0021994        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0021998        0x4 core/unixfile.32
 .ctors         0x00000000c002199c        0x4 thr/prcssthr.32
 .ctors         0x00000000c00219a0        0x4 vm86/x87em.32
 .ctors         0x00000000c00219a4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00219a8                end_ctors = .
                0x00000000c00219a8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00219a8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00219ac        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00219ac                __DTOR_END__
                0x00000000c00219b0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00219b0       0x10 
 .rodata        0x00000000c00219c0      0x101 acpica/utclib.32
                0x00000000c00219c0                AcpiGbl_Ctypes
 *fill*         0x00000000c0021ac1        0x3 
 .rodata        0x00000000c0021ac4       0x18 core/malloc.32
 *fill*         0x00000000c0021adc        0x4 
 .rodata        0x00000000c0021ae0      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c0021c00       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c0021c56        0xa 
 .rodata        0x00000000c0021c60      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022060       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c00220a9      0x12c core/computer.32
 *fill*         0x00000000c00221d5        0x3 
 .rodata.str1.4
                0x00000000c00221d8       0x8c core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0022264       0x2c core/computer.32
                0x00000000c0022264                vtable for Computer
 .rodata.str1.1
                0x00000000c0022290       0x2a core/kheap.32
 *fill*         0x00000000c00222ba        0x2 
 .rodata.str1.4
                0x00000000c00222bc       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00222ec       0x17 core/main.32
 *fill*         0x00000000c0022303        0x1 
 .rodata.str1.4
                0x00000000c0022304       0x1f core/main.32
 .rodata.str1.1
                0x00000000c0022323       0xea core/physmgr.32
                                         0xee (size before relaxing)
 *fill*         0x00000000c002240d        0x3 
 .rodata.str1.4
                0x00000000c0022410       0xc9 core/physmgr.32
 .rodata.str1.1
                0x00000000c00224d9       0x39 core/pipe.32
 *fill*         0x00000000c0022512        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0022514       0x1c core/pipe.32
                0x00000000c0022514                vtable for Pipe
 .rodata.str1.1
                0x00000000c0022530       0x69 core/terminal.32
 *fill*         0x00000000c0022599        0x3 
 .rodata._ZTV7VgaText
                0x00000000c002259c       0x1c core/terminal.32
                0x00000000c002259c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00225b8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00225da       0x15 core/unixfile.32
 *fill*         0x00000000c00225ef        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00225f0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002263b        0x8 core/unixfile.32
 *fill*         0x00000000c0022643        0x1 
 .rodata.str1.4
                0x00000000c0022644       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0022664       0x1c core/unixfile.32
                0x00000000c0022664                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0022680       0x1c core/unixfile.32
                0x00000000c0022680                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002269c      0x1b8 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0022854      0x194 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00229e8       0x83 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0022a6b       0x11 dbg/kconsole.32
 *fill*         0x00000000c0022a6b        0x1 
 .rodata        0x00000000c0022a6c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0022bbc       0x25 fs/vfs.32
                                         0x33 (size before relaxing)
 *fill*         0x00000000c0022be1        0x3 
 .rodata.str1.4
                0x00000000c0022be4       0x54 fs/vfs.32
 .rodata._ZTV10Filesystem
                0x00000000c0022c38       0x68 fs/vfs.32
                0x00000000c0022c38                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0022ca0       0x1c fs/vfs.32
                0x00000000c0022ca0                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0022cbc       0x1c fs/vfs.32
                0x00000000c0022cbc                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0022cd8       0x2c hal/bus.32
                0x00000000c0022cd8                vtable for Bus
 .rodata.str1.1
                0x00000000c0022d04       0x1e hal/clock.32
 *fill*         0x00000000c0022d22        0x2 
 .rodata._ZTV5Clock
                0x00000000c0022d24       0x3c hal/clock.32
                0x00000000c0022d24                vtable for Clock
 .rodata        0x00000000c0022d60       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0022d90       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0022de8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0022de8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0022de8       0x2c hal/device.32
                0x00000000c0022de8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0022e14       0x2c hal/device.32
                0x00000000c0022e14                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0022e40       0x2c hal/diskctrl.32
                0x00000000c0022e40                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0022e6c       0x38 hal/diskphys.32
                0x00000000c0022e6c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0022ea4       0x3e hal/intctrl.32
 *fill*         0x00000000c0022ee2        0x2 
 .rodata.str1.4
                0x00000000c0022ee4       0x5d hal/intctrl.32
 .rodata        0x00000000c0022f41       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0022f94       0x34 hal/keybrd.32
                0x00000000c0022f94                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0022fc8       0x9a hal/logidisk.32
 *fill*         0x00000000c0023062        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0023064       0x2c hal/logidisk.32
                0x00000000c0023064                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0023090       0x2c hal/mouse.32
                0x00000000c0023090                vtable for Mouse
 .rodata.str1.1
                0x00000000c00230bc        0xb hal/partition.32
 *fill*         0x00000000c00230c7        0x1 
 .rodata._ZTV6Serial
                0x00000000c00230c8       0x44 hal/serial.32
                0x00000000c00230c8                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002310c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002310c        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002310c       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002310c       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c002310c       0x30 hal/timer.32
                0x00000000c002310c                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c002313c       0x10 hal/vcache.32
                0x00000000c002313c                vtable for VCache
 .rodata.str1.1
                0x00000000c002314c       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c00231b4       0x48 hal/video.32
                0x00000000c00231b4                vtable for Video
 .rodata.str1.4
                0x00000000c00231fc      0x123 hw/acpi.32
 .rodata.str1.1
                0x00000000c002331f      0x268 hw/acpi.32
                                        0x282 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023587       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023587        0x8 hw/acpi.32
 *fill*         0x00000000c0023587        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023588       0x2c hw/acpi.32
                0x00000000c0023588                vtable for ACPI
 .rodata.str1.1
                0x00000000c00235b4      0x1be hw/cpu.32
                                        0x1c2 (size before relaxing)
 *fill*         0x00000000c0023772        0x2 
 .rodata._ZTV3CPU
                0x00000000c0023774       0x2c hw/cpu.32
                0x00000000c0023774                vtable for CPU
 .rodata.str1.1
                0x00000000c00237a0       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c00237b1       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00237ed       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 *fill*         0x00000000c002388d        0x3 
 .rodata.str1.4
                0x00000000c0023890      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c00239ce       0x2f krnl/powctrl.32
 .rodata.str1.1
                0x00000000c00239fd       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023a42       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c0023a96       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c0023ac2       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023b0a      0x247 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023d51       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0023da8      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023eb4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023eb4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0023eb4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023eb4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0023eb4       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0023f54       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0023f84       0x58 vm86/x87em.32
 .rodata        0x00000000c0023fdc       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c0024018      0x164 arch/i386/hal.32
                                        0x16f (size before relaxing)
 .rodata.str1.4
                0x00000000c002417c       0x4b arch/i386/hal.32
 .rodata.str1.1
                0x00000000c00241c7       0xc5 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c002428c       0x3c arch/i386/rtc.32
                0x00000000c002428c                vtable for RTC
 .rodata.str1.1
                0x00000000c00242c8       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0024309        0x3 
 .rodata._ZTV3FAT
                0x00000000c002430c       0x68 fs/fat/vfslink.32
                0x00000000c002430c                vtable for FAT
 .rodata.str1.1
                0x00000000c0024374       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c002438f        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c0024390       0x68 fs/iso9660/vfslink.32
                0x00000000c0024390                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00243f8       0xc3 hal/sound/sndcard.32
                                         0xdb (size before relaxing)
 *fill*         0x00000000c00244bb        0x1 
 .rodata._ZTV9SoundCard
                0x00000000c00244bc       0x34 hal/sound/sndcard.32
                0x00000000c00244bc                vtable for SoundCard
 .rodata.str1.1
                0x00000000c00244f0       0x6e hal/sound/sndport.32
 *fill*         0x00000000c002455e        0x2 
 .rodata.str1.4
                0x00000000c0024560       0x93 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00245f3      0x1cd hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00247c0       0x2c hw/bus/pci.32
                0x00000000c00247c0                vtable for PCI
 .rodata.str1.1
                0x00000000c00247ec       0xa3 hw/diskctrl/ide.32
 *fill*         0x00000000c002488f        0x1 
 .rodata._ZTV3IDE
                0x00000000c0024890       0x2c hw/diskctrl/ide.32
                0x00000000c0024890                vtable for IDE
 .rodata.str1.4
                0x00000000c00248bc       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata.str1.1
                0x00000000c00248e0       0x7b hw/diskctrl/satabus.32
 *fill*         0x00000000c002495b        0x1 
 .rodata._ZTV7SATABus
                0x00000000c002495c       0x2c hw/diskctrl/satabus.32
                0x00000000c002495c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0024988       0x4b hw/diskphys/ata.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c00249d3        0x1 
 .rodata._ZTV3ATA
                0x00000000c00249d4       0x38 hw/diskphys/ata.32
                0x00000000c00249d4                vtable for ATA
 .rodata.str1.1
                0x00000000c0024a0c       0x40 hw/diskphys/atapi.32
                                         0x6f (size before relaxing)
 .rodata._ZTV5ATAPI
                0x00000000c0024a4c       0x38 hw/diskphys/atapi.32
                0x00000000c0024a4c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0024a84      0x202 hw/diskphys/sata.32
 *fill*         0x00000000c0024c86        0x2 
 .rodata._ZTV4SATA
                0x00000000c0024c88       0x38 hw/diskphys/sata.32
                0x00000000c0024c88                vtable for SATA
 .rodata.str1.1
                0x00000000c0024cc0      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c0024df2        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0024df4       0x38 hw/diskphys/satapi.32
                0x00000000c0024df4                vtable for SATAPI
 .rodata        0x00000000c0024e2c       0x19 hw/intctrl/apic.32
 *fill*         0x00000000c0024e45        0x3 
 .rodata._ZTV6IOAPIC
                0x00000000c0024e48       0x2c hw/intctrl/apic.32
                0x00000000c0024e48                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0024e74       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0024e8f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0024e90       0x30 hw/timer/apictimer.32
                0x00000000c0024e90                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0024ec0       0x1d hw/timer/pit.32
 *fill*         0x00000000c0024edd        0x3 
 .rodata._ZTV3PIT
                0x00000000c0024ee0       0x30 hw/timer/pit.32
                0x00000000c0024ee0                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0024f10      0x265
 *(.data)
 .data          0x00000000c0024f10        0x0 crti.32
 .data          0x00000000c0024f10        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0024f10                __dso_handle
 .data          0x00000000c0024f14        0x0 acpica/utclib.32
 .data          0x00000000c0024f14        0x0 core/malloc.32
 .data          0x00000000c0024f14        0x0 libk/string.32
 .data          0x00000000c0024f14        0x0 fs/fat/diskio.32
 .data          0x00000000c0024f14        0x0 fs/fat/ff.32
 .data          0x00000000c0024f14        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0024f14        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0024f14        0x0 compat/inlines.32
 .data          0x00000000c0024f14        0x0 compat/resolve.32
 .data          0x00000000c0024f14        0x0 core/computer.32
 .data          0x00000000c0024f14        0x0 core/gdt.32
 .data          0x00000000c0024f14        0x0 core/idle.32
 .data          0x00000000c0024f14        0x0 core/idt.32
 .data          0x00000000c0024f14        0x4 core/kheap.32
 *fill*         0x00000000c0024f18        0x8 
 .data          0x00000000c0024f20      0x142 core/main.32
                0x00000000c0024f20                titleScreen
 *fill*         0x00000000c0025062        0x2 
 .data          0x00000000c0025064        0x4 core/physmgr.32
                0x00000000c0025064                Phys::bitmap
 .data          0x00000000c0025068        0x0 core/pipe.32
 *fill*         0x00000000c0025068       0x18 
 .data          0x00000000c0025080       0x60 core/terminal.32
                0x00000000c0025080                VgaText::hiddenOut
                0x00000000c00250a0                ansiToVGAMappings
 .data          0x00000000c00250e0        0x0 core/tss.32
 .data          0x00000000c00250e0        0x4 core/unixfile.32
                0x00000000c00250e0                UnixFile::nextFd
 .data          0x00000000c00250e4       0x15 core/virtmgr.32
                0x00000000c00250e4                Virt::pageAllocPtr
                0x00000000c00250e8                Virt::bitmap
                0x00000000c00250ec                Virt::swapfileSectorsPerPage
                0x00000000c00250f0                Virt::swapfileLength
                0x00000000c00250f4                Virt::swapfileSector
                0x00000000c00250f8                Virt::swapfileDrive
 *fill*         0x00000000c00250f9        0x3 
 .data          0x00000000c00250fc        0x4 coreobjs/c++.32
                0x00000000c00250fc                __stack_chk_guard
 .data          0x00000000c0025100        0x0 dbg/kconsole.32
 .data          0x00000000c0025100        0x0 fs/vfs.32
 .data          0x00000000c0025100        0x0 hal/bus.32
 .data          0x00000000c0025100        0x0 hal/buzzer.32
 .data          0x00000000c0025100        0x0 hal/clock.32
 .data          0x00000000c0025100        0x0 hal/device.32
 .data          0x00000000c0025100        0x0 hal/diskctrl.32
 .data          0x00000000c0025100        0x0 hal/diskphys.32
 .data          0x00000000c0025100        0x0 hal/fpu.32
 .data          0x00000000c0025100        0x0 hal/intctrl.32
 .data          0x00000000c0025100        0x0 hal/keybrd.32
 .data          0x00000000c0025100        0x0 hal/logidisk.32
 .data          0x00000000c0025100        0x0 hal/mouse.32
 .data          0x00000000c0025100        0x0 hal/partition.32
 .data          0x00000000c0025100        0x0 hal/serial.32
 .data          0x00000000c0025100        0x0 hal/timer.32
 .data          0x00000000c0025100        0x0 hal/vcache.32
 .data          0x00000000c0025100        0x0 hal/video.32
 .data          0x00000000c0025100       0x10 hw/acpi.32
                0x00000000c0025100                legacyIRQRemaps
 .data          0x00000000c0025110        0x4 hw/cpu.32
                0x00000000c0025110                lastCode
 .data          0x00000000c0025114        0x0 hw/smp.32
 *fill*         0x00000000c0025114        0xc 
 .data          0x00000000c0025120       0x4d krnl/env.32
                0x00000000c0025120                defaultSysEnv
 .data          0x00000000c002516d        0x0 krnl/panic.32
 .data          0x00000000c002516d        0x0 krnl/powctrl.32
 .data          0x00000000c002516d        0x0 reg/registry.32
 .data          0x00000000c002516d        0x0 sys/sc_eject.32
 .data          0x00000000c002516d        0x0 sys/sc_exit.32
 .data          0x00000000c002516d        0x0 sys/sc_getcwd.32
 .data          0x00000000c002516d        0x0 sys/sc_getpid.32
 .data          0x00000000c002516d        0x0 sys/sc_getramdata.32
 .data          0x00000000c002516d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c002516d        0x0 sys/sc_loaddll.32
 .data          0x00000000c002516d        0x0 sys/sc_read.32
 .data          0x00000000c002516d        0x0 sys/sc_sbrk.32
 .data          0x00000000c002516d        0x0 sys/sc_setcwd.32
 .data          0x00000000c002516d        0x0 sys/sc_settime.32
 .data          0x00000000c002516d        0x0 sys/sc_timezone.32
 .data          0x00000000c002516d        0x0 sys/sc_write.32
 .data          0x00000000c002516d        0x0 sys/sc_wsbe.32
 .data          0x00000000c002516d        0x0 sys/sc_yield.32
 .data          0x00000000c002516d        0x0 sys/syscalls.32
 .data          0x00000000c002516d        0x0 thr/elf.32
 *fill*         0x00000000c002516d        0x3 
 .data          0x00000000c0025170        0x4 thr/prcssthr.32
                0x00000000c0025170                Thr::nextPID
 .data          0x00000000c0025174        0x0 vm86/vm8086.32
 .data          0x00000000c0025174        0x0 vm86/x87em.32
 .data          0x00000000c0025174        0x0 arch/i386/hal.32
 .data          0x00000000c0025174        0x0 arch/i386/pic.32
 .data          0x00000000c0025174        0x0 arch/i386/rtc.32
 .data          0x00000000c0025174        0x0 arch/i386/vga.32
 .data          0x00000000c0025174        0x0 fs/fat/vfslink.32
 .data          0x00000000c0025174        0x1 fs/iso9660/vfslink.32
                0x00000000c0025174                recentDriveletter
 .data          0x00000000c0025175        0x0 hal/sound/sndcard.32
 .data          0x00000000c0025175        0x0 hal/sound/sndport.32
 .data          0x00000000c0025175        0x0 hw/bus/isa.32
 .data          0x00000000c0025175        0x0 hw/bus/pci.32
 .data          0x00000000c0025175        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0025175        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0025175        0x0 hw/diskphys/ata.32
 .data          0x00000000c0025175        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0025175        0x0 hw/diskphys/sata.32
 .data          0x00000000c0025175        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0025175        0x0 hw/intctrl/apic.32
 .data          0x00000000c0025175        0x0 hw/timer/apictimer.32
 .data          0x00000000c0025175        0x0 hw/timer/pit.32
 .data          0x00000000c0025175        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0025175        0x0 crtn.32
 .data          0x00000000c0025175        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0025175        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0025175        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0025175        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0025178        0x0
 .got           0x00000000c0025178        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0025178        0x0
 .got.plt       0x00000000c0025178        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0025178        0x0
 .igot.plt      0x00000000c0025178        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0025178        0x0
 .tm_clone_table
                0x00000000c0025178        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0025178        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0025175      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0025175        0x3 
 .eh_frame      0x00000000c0025178        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0025178        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0025178       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00251d0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0025210       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002527c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c0025300        0x0
 .rel.got       0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025300        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025300     0x43c8
                0x00000000c0025300                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0025300        0x0 crti.32
 .bss           0x00000000c0025300       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0025320        0x4 acpica/utclib.32
 *fill*         0x00000000c0025324       0x1c 
 .bss           0x00000000c0025340      0x378 core/malloc.32
 .bss           0x00000000c00256b8        0x0 libk/string.32
 .bss           0x00000000c00256b8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c00256b8        0x8 
 .bss           0x00000000c00256c0       0x88 fs/fat/ff.32
 .bss           0x00000000c0025748        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025748        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0025748        0x0 compat/inlines.32
 .bss           0x00000000c0025748        0x0 compat/resolve.32
 .bss           0x00000000c0025748        0x6 core/computer.32
                0x00000000c0025748                Krnl::computer
                0x00000000c002574c                Krnl::preemptionOn
                0x00000000c002574d                Krnl::schedulingOn
 *fill*         0x00000000c002574e        0x2 
 .bss           0x00000000c0025750        0x6 core/gdt.32
                0x00000000c0025750                gdtDescr
 .bss           0x00000000c0025756        0x0 core/idle.32
 *fill*         0x00000000c0025756        0x2 
 .bss           0x00000000c0025758        0x6 core/idt.32
                0x00000000c0025758                idtDescr
 .bss           0x00000000c002575e        0x0 core/kheap.32
 *fill*         0x00000000c002575e        0x2 
 .bss           0x00000000c0025760        0x4 core/main.32
                0x00000000c0025760                sysBootSettings
 .bss           0x00000000c0025764       0x29 core/physmgr.32
                0x00000000c0025764                Phys::forbidEvictions
                0x00000000c0025768                Phys::currentPagePointer
                0x00000000c002576c                Phys::highestMem
                0x00000000c0025770                Phys::oldPercent
                0x00000000c0025774                Phys::usedPages
                0x00000000c0025778                Phys::usablePages
                0x00000000c002577c                Phys::dmaUsage
 .bss           0x00000000c002578d        0x0 core/pipe.32
 *fill*         0x00000000c002578d        0x3 
 .bss           0x00000000c0025790        0x9 core/terminal.32
                0x00000000c0025790                terminalCycle
                0x00000000c0025794                activeTerminal
                0x00000000c0025798                VgaText::graphicMode
 *fill*         0x00000000c0025799        0x1 
 .bss           0x00000000c002579a        0x2 core/tss.32
                0x00000000c002579a                doubleFaultSelector
 *fill*         0x00000000c002579c        0x4 
 .bss           0x00000000c00257a0       0x84 core/unixfile.32
                0x00000000c00257a0                sfileLpt
                0x00000000c00257e0                sfileCom
                0x00000000c0025804                sfileNul
                0x00000000c0025808                sfilePnt
                0x00000000c002580c                sfileAux
                0x00000000c0025810                sfileCon
                0x00000000c0025814                initialFilesAdded
                0x00000000c0025818                unixFileLinkedList
 .bss           0x00000000c0025824       0x14 core/virtmgr.32
                0x00000000c0025824                twswaps
                0x00000000c0025828                swapBalance
                0x00000000c002582c                panicVAS
                0x00000000c0025830                Virt::swapfileBitmap
                0x00000000c0025834                firstVAS
 .bss           0x00000000c0025838        0x0 coreobjs/c++.32
 .bss           0x00000000c0025838        0x0 dbg/kconsole.32
 .bss           0x00000000c0025838        0x4 fs/vfs.32
                0x00000000c0025838                installedFilesystems
 .bss           0x00000000c002583c        0x0 hal/bus.32
 .bss           0x00000000c002583c        0x0 hal/buzzer.32
 .bss           0x00000000c002583c        0x8 hal/clock.32
                0x00000000c002583c                User::dstOn
                0x00000000c002583d                User::timezoneHalfHourOffset
                0x00000000c0025840                User::timezoneHourOffset
 .bss           0x00000000c0025844        0x0 hal/device.32
 .bss           0x00000000c0025844        0x0 hal/diskctrl.32
 .bss           0x00000000c0025844        0x0 hal/diskphys.32
 .bss           0x00000000c0025844        0x0 hal/fpu.32
 *fill*         0x00000000c0025844       0x1c 
 .bss           0x00000000c0025860     0x2000 hal/intctrl.32
                0x00000000c0025860                INT_contexts
                0x00000000c0026860                INT_handlers
 .bss           0x00000000c0027860      0x429 hal/keybrd.32
                0x00000000c0027860                keyboardWaitingTaskList
                0x00000000c0027864                keyboardSetupYet
                0x00000000c0027868                guiKeyboardHandler
                0x00000000c0027880                keystates
 *fill*         0x00000000c0027c89       0x17 
 .bss           0x00000000c0027ca0       0x88 hal/logidisk.32
                0x00000000c0027ca0                diskAssignments
                0x00000000c0027cc0                disks
 .bss           0x00000000c0027d28        0x4 hal/mouse.32
                0x00000000c0027d28                guiMouseHandler
 .bss           0x00000000c0027d2c        0x0 hal/partition.32
 .bss           0x00000000c0027d2c        0x0 hal/serial.32
 .bss           0x00000000c0027d2c        0x4 hal/timer.32
                0x00000000c0027d2c                milliTenthsSinceBoot
 .bss           0x00000000c0027d30        0x0 hal/vcache.32
 .bss           0x00000000c0027d30        0x4 hal/video.32
                0x00000000c0027d30                screen
 *fill*         0x00000000c0027d34        0xc 
 .bss           0x00000000c0027d40      0x480 hw/acpi.32
                0x00000000c0027d40                systemSleepFunction
                0x00000000c0027d44                systemResetFunction
                0x00000000c0027d48                systemShutdownFunction
                0x00000000c0027d4c                nextACPITable
                0x00000000c0027d60                acpiTables
                0x00000000c0027f60                usingXSDT
                0x00000000c0027f64                MADTpointer
                0x00000000c0027f68                RSDTpointer
                0x00000000c0027f6c                RSDPpointer
                0x00000000c0027f70                nextAPICNMI
                0x00000000c0027f80                apicNMIInfo
                0x00000000c0028000                legacyIRQFlags
                0x00000000c0028020                ioapicDiscoveryNumber
                0x00000000c0028040                ioapicFoundInMADT
                0x00000000c0028060                ioapicAddresses
                0x00000000c00280e0                ioapicGSIBase
                0x00000000c0028160                processorDiscoveryNumber
                0x00000000c0028180                matchingAPICID
                0x00000000c00281a0                processorID
 .bss           0x00000000c00281c0       0x10 hw/cpu.32
                0x00000000c00281c0                lastD
                0x00000000c00281c4                lastC
                0x00000000c00281c8                lastB
                0x00000000c00281cc                lastA
 .bss           0x00000000c00281d0        0x1 hw/smp.32
                0x00000000c00281d0                Krnl::bspID
 *fill*         0x00000000c00281d1        0x3 
 .bss           0x00000000c00281d4        0x8 krnl/env.32
                0x00000000c00281d4                Krnl::userEnv
                0x00000000c00281d8                Krnl::systemEnv
 .bss           0x00000000c00281dc        0x9 krnl/panic.32
                0x00000000c00281dc                Krnl::guiProgramFaultHandler
                0x00000000c00281e0                Krnl::guiPanicHandler
                0x00000000c00281e4                Krnl::kernelInPanic
 *fill*         0x00000000c00281e5       0x1b 
 .bss           0x00000000c0028200       0x48 krnl/powctrl.32
                0x00000000c0028200                Krnl::powCtrlOnBattery
                0x00000000c0028220                Krnl::currentPowerSettings
                0x00000000c0028244                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0028248        0x0 reg/registry.32
 .bss           0x00000000c0028248        0x0 sys/sc_eject.32
 .bss           0x00000000c0028248        0x0 sys/sc_exit.32
 .bss           0x00000000c0028248        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0028248        0x0 sys/sc_getpid.32
 .bss           0x00000000c0028248        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0028248        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0028248        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0028248        0x0 sys/sc_read.32
 .bss           0x00000000c0028248        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0028248        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0028248        0x0 sys/sc_settime.32
 .bss           0x00000000c0028248        0x0 sys/sc_timezone.32
 .bss           0x00000000c0028248        0x0 sys/sc_write.32
 .bss           0x00000000c0028248        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0028248        0x0 sys/sc_yield.32
 *fill*         0x00000000c0028248       0x18 
 .bss           0x00000000c0028260      0x200 sys/syscalls.32
                0x00000000c0028260                systemCallHandlers
 .bss           0x00000000c0028460      0x7a4 thr/elf.32
                0x00000000c0028460                Thr::driverLookupNext
                0x00000000c0028480                Thr::driverLookupLen
                0x00000000c0028680                Thr::driverLookupAddr
                0x00000000c0028880                Thr::driverNameLookup
                0x00000000c0028a80                Thr::kernelSymbols
                0x00000000c0028b00                Thr::kernelStringTable
                0x00000000c0028b80                Thr::kernelSymbolTable
                0x00000000c0028c00                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0028c04        0x4 
 .bss           0x00000000c0028c08       0x68 thr/prcssthr.32
                0x00000000c0028c08                cleanerThread
                0x00000000c0028c0c                weNeedTheCleanerToNotBlock
                0x00000000c0028c10                retValLockStuff
                0x00000000c0028c14                retValSchedLock
                0x00000000c0028c18                lockStuffLock
                0x00000000c0028c1c                schedulerLock
                0x00000000c0028c20                taskSwitchesPostponedFlag
                0x00000000c0028c24                postponeTaskSwitchesCounter
                0x00000000c0028c28                irqDisableCounter
                0x00000000c0028c2c                terminatedTaskList
                0x00000000c0028c38                sleepingTaskList
                0x00000000c0028c44                taskList
                0x00000000c0028c50                kernelProcess
 *fill*         0x00000000c0028c70       0x10 
 .bss           0x00000000c0028c80       0x40 vm86/vm8086.32
                0x00000000c0028c80                Vm::vmRetV
                0x00000000c0028c84                Vm::vmDone
                0x00000000c0028c85                Vm::vmReady
                0x00000000c0028c88                Vm::vm86Thread
                0x00000000c0028c8c                Vm::vmToHostCommsPtr
                0x00000000c0028ca0                Vm::vmToHostComms
 .bss           0x00000000c0028cc0       0x48 vm86/x87em.32
                0x00000000c0028cc0                Vm::fpuState
 .bss           0x00000000c0028d08       0x18 arch/i386/hal.32
                0x00000000c0028d08                Hal::apic
                0x00000000c0028d0c                fpuOwner
                0x00000000c0028d10                coproLoadFunc
                0x00000000c0028d14                coproSaveFunc
                0x00000000c0028d18                _i386_HAL_tscFunction
                0x00000000c0028d1c                gpFaultIntercept
 .bss           0x00000000c0028d20        0x0 arch/i386/pic.32
 .bss           0x00000000c0028d20        0x2 arch/i386/rtc.32
 .bss           0x00000000c0028d22        0x0 arch/i386/vga.32
 *fill*         0x00000000c0028d22       0x1e 
 .bss           0x00000000c0028d40       0xf0 fs/fat/vfslink.32
                0x00000000c0028d40                FAT::fats
                0x00000000c0028d60                FAT::vfsToFatRemaps
                0x00000000c0028de0                fatToVFSRemaps
 *fill*         0x00000000c0028e30       0x10 
 .bss           0x00000000c0028e40      0x820 fs/iso9660/vfslink.32
                0x00000000c0028e40                recentSector
                0x00000000c0028e60                recentBuffer
 .bss           0x00000000c0029660        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0029660        0x0 hal/sound/sndport.32
 .bss           0x00000000c0029660        0x0 hw/bus/isa.32
 .bss           0x00000000c0029660        0xd hw/bus/pci.32
                0x00000000c0029660                thePCI
 .bss           0x00000000c002966d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002966d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002966d        0x3 
 .bss           0x00000000c0029670        0x8 hw/diskphys/ata.32
                0x00000000c0029670                ataSectorsWritten
                0x00000000c0029674                ataSectorsRead
 .bss           0x00000000c0029678        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0029678        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0029678        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0029678        0x8 
 .bss           0x00000000c0029680       0x41 hw/intctrl/apic.32
                0x00000000c0029680                noOfIOAPICs
                0x00000000c00296a0                ioapics
                0x00000000c00296c0                IOAPICsSetupYet
 .bss           0x00000000c00296c1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00296c1        0x3 
 .bss           0x00000000c00296c4        0x4 hw/timer/pit.32
                0x00000000c00296c4                pitFreq
 .bss           0x00000000c00296c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00296c8        0x0 crtn.32
 .bss           0x00000000c00296c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00296c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00296c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00296c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00296c8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002da90                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
