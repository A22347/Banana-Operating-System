Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/syscalls.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c41a
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 *fill*         0x00000000c0001afb        0x1 
 .text          0x00000000c0001afc      0x1f2 libk/ctype.32
                0x00000000c0001afc                isblank
                0x00000000c0001b1c                iscntrl
                0x00000000c0001b3c                isdigit
                0x00000000c0001b58                islower
                0x00000000c0001b74                isspace
                0x00000000c0001b9c                isupper
                0x00000000c0001bb8                isalpha
                0x00000000c0001be8                isalnum
                0x00000000c0001c18                ispunct
                0x00000000c0001c58                isgraph
                0x00000000c0001c88                isprint
                0x00000000c0001cb0                isxdigit
 .text          0x00000000c0001cee        0x0 libk/string.32
 .text          0x00000000c0001cee       0x51 fs/fat/diskio.32
                0x00000000c0001cee                disk_status
                0x00000000c0001cf1                disk_initialize
                0x00000000c0001cf4                disk_read
                0x00000000c0001d0a                disk_write
                0x00000000c0001d20                disk_ioctl
 .text          0x00000000c0001d3f     0x3d4b fs/fat/ff.32
                0x00000000c0003adb                f_mount
                0x00000000c0003b3d                f_open
                0x00000000c0003e08                f_read
                0x00000000c0004007                f_write
                0x00000000c000423b                f_sync
                0x00000000c00042f0                f_close
                0x00000000c000431f                f_lseek
                0x00000000c00044c6                f_opendir
                0x00000000c0004591                f_closedir
                0x00000000c00045b3                f_readdir
                0x00000000c0004645                f_stat
                0x00000000c00046c4                f_getfree
                0x00000000c00047c6                f_truncate
                0x00000000c00048aa                f_unlink
                0x00000000c00049cc                f_mkdir
                0x00000000c0004b67                f_rename
                0x00000000c0004d1d                f_chmod
                0x00000000c0004dc6                f_utime
                0x00000000c0004e74                f_getlabel
                0x00000000c0004fc5                f_setlabel
                0x00000000c0005155                f_expand
                0x00000000c00052b5                f_mkfs
 *fill*         0x00000000c0005a8a        0x2 
 .text          0x00000000c0005a8c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a8c                ff_memalloc
                0x00000000c0005aa4                ff_memfree
 *fill*         0x00000000c0005abb        0x1 
 .text          0x00000000c0005abc      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005abc                ff_uni2oem
                0x00000000c0005b5c                ff_oem2uni
                0x00000000c0005bd4                ff_wtoupper
 .text          0x00000000c0005d64     0x1145 fs/iso9660/iso9660.32
                0x00000000c0006064                isoReadDiscSector
                0x00000000c0006145                strnicmp
                0x00000000c00064a8                stricmp
                0x00000000c0006502                iso_open
                0x00000000c00065e2                iso_close
                0x00000000c0006602                iso_read
                0x00000000c0006800                iso_seek
                0x00000000c00068de                iso_tell
                0x00000000c000693b                iso_total
                0x00000000c0006984                fn_postprocess
                0x00000000c00069b8                iso_readdir
                0x00000000c0006c82                iso_reset
                0x00000000c0006c92                init_percd
                0x00000000c0006d97                iso_ioctl
                0x00000000c0006da2                fs_iso9660_init
                0x00000000c0006e31                fs_iso9660_shutdown
 .text          0x00000000c0006ea9       0x94 compat/inlines.32
                0x00000000c0006ea9                CPU::current()
                0x00000000c0006eb5                operator new(unsigned long)
                0x00000000c0006eba                operator delete(void*)
                0x00000000c0006ebf                disableIRQs()
                0x00000000c0006ec1                enableIRQs()
                0x00000000c0006ec3                lockScheduler()
                0x00000000c0006ecb                unlockScheduler()
                0x00000000c0006eda                lockStuff()
                0x00000000c0006ee8                unlockStuff()
                0x00000000c0006f22                Virt::getAKernelVAS()
                0x00000000c0006f28                __not_memcpy
 *fill*         0x00000000c0006f3d        0x3 
 .text          0x00000000c0006f40      0x118 compat/resolve.32
                0x00000000c0006f40                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0007058      0x68b core/computer.32
                0x00000000c0007058                Computer::close(int, int, void*)
                0x00000000c000709d                Krnl::firstTask()
                0x00000000c00071d6                Computer::Computer()
                0x00000000c00071d6                Computer::Computer()
                0x00000000c0007288                Computer::setBootMessage(char const*)
                0x00000000c000728a                Computer::detectFeatures()
                0x00000000c0007494                Computer::displayFeatures()
                0x00000000c0007496                Computer::rdmsr(unsigned int)
                0x00000000c00074c2                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00074fa                Computer::shutdown()
                0x00000000c0007512                Computer::restart()
                0x00000000c000752a                Computer::sleep()
                0x00000000c000753e                Computer::nmiEnabled()
                0x00000000c000754a                Computer::readCMOS(unsigned char)
                0x00000000c0007564                Computer::enableNMI(bool)
                0x00000000c000757c                Computer::open(int, int, void*)
                0x00000000c0007650                Computer::disableNMI()
                0x00000000c0007660                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000767e                Computer::handleNMI()
 *fill*         0x00000000c00076e3        0x1 
 .text          0x00000000c00076e4      0x1cf core/gdt.32
                0x00000000c00076e4                GDTEntry::setBase(unsigned int)
                0x00000000c0007700                GDTEntry::setLimit(unsigned int)
                0x00000000c000771e                GDT::GDT()
                0x00000000c000771e                GDT::GDT()
                0x00000000c0007734                GDT::addEntry(GDTEntry)
                0x00000000c0007756                GDT::getNumberOfEntries()
                0x00000000c000775e                GDT::flush()
                0x00000000c0007780                GDT::setup()
 .text          0x00000000c00078b3       0x1d core/idle.32
                0x00000000c00078b3                idleFunction(void*)
 .text          0x00000000c00078d0      0x464 core/idt.32
                0x00000000c00078d0                IDTEntry::IDTEntry(bool)
                0x00000000c00078d0                IDTEntry::IDTEntry(bool)
                0x00000000c0007942                IDTEntry::setOffset(unsigned int)
                0x00000000c0007958                IDT::IDT()
                0x00000000c0007958                IDT::IDT()
                0x00000000c000795a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0007962                IDT::addEntry(IDTEntry, int)
                0x00000000c000797c                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00079b4                IDT::flush()
                0x00000000c00079ce                IDT::setup()
 .text          0x00000000c0007d34      0x183 core/kheap.32
                0x00000000c0007d34                sbrk
                0x00000000c0007dc9                mmap
                0x00000000c0007ddf                munmap
                0x00000000c0007df5                liballoc_lock()
                0x00000000c0007e02                liballoc_unlock()
                0x00000000c0007e16                liballoc_alloc(int)
                0x00000000c0007e2e                liballoc_free(void*, int)
                0x00000000c0007e49                realloc
                0x00000000c0007e5d                malloc
                0x00000000c0007e6d                free
                0x00000000c0007e7d                rfree
                0x00000000c0007e8d                calloc
 .text          0x00000000c0007eb7       0xbf core/main.32
                0x00000000c0007eb7                Krnl::setBootMessage(char const*)
                0x00000000c0007eb8                kernel_main
 .text          0x00000000c0007f76      0x5dc core/physmgr.32
                0x00000000c0007f76                Phys::allocateDMA(unsigned long)
                0x00000000c000804d                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0008080                Phys::setPageState(unsigned long, bool)
                0x00000000c00080b2                Phys::getPageState(unsigned long)
                0x00000000c00080d3                Phys::freePage(unsigned long)
                0x00000000c0008135                Phys::allocatePage()
                0x00000000c00081f3                Phys::allocateContiguousPages(int)
                0x00000000c000824f                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0008287                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0008552      0x273 core/pipe.32
                0x00000000c0008552                Pipe::isAtty()
                0x00000000c0008556                Pipe::~Pipe()
                0x00000000c0008556                Pipe::~Pipe()
                0x00000000c000857a                Pipe::~Pipe()
                0x00000000c00085a2                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008662                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000875e                Pipe::Pipe(int)
                0x00000000c000875e                Pipe::Pipe(int)
 *fill*         0x00000000c00087c5        0x1 
 .text          0x00000000c00087c6      0xa1e core/terminal.32
                0x00000000c00087c6                VgaText::isAtty()
                0x00000000c00087ca                VgaText::~VgaText()
                0x00000000c00087ca                VgaText::~VgaText()
                0x00000000c00087ee                VgaText::~VgaText()
                0x00000000c0008818                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008838                setTerminalScrollLock(bool)
                0x00000000c0008839                doTerminalCycle()
                0x00000000c000883a                addToTerminalCycle(VgaText*)
                0x00000000c000883b                scrollTerminalScrollLock(int)
                0x00000000c000883c                VgaText::updateTitle()
                0x00000000c000883e                VgaText::load()
                0x00000000c0008840                VgaText::updateCursor()
                0x00000000c0008856                VgaText::doANSI_SGR(int)
                0x00000000c00088ca                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00088da                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00088ea                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000890a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008916                VgaText::setTitleColour(VgaColour)
                0x00000000c0008922                VgaText::setTitle(char*)
                0x00000000c0008924                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008936                VgaText::scrollScreen()
                0x00000000c00089ce                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00089e0                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008a70                VgaText::getCursorX()
                0x00000000c0008a78                VgaText::getCursorY()
                0x00000000c0008a80                VgaText::setCursor(int, int)
                0x00000000c0008a97                setActiveTerminal(VgaText*)
                0x00000000c0008ae2                VgaText::clearScreen()
                0x00000000c0008b30                VgaText::setCursorX(int)
                0x00000000c0008b48                VgaText::setCursorY(int)
                0x00000000c0008b60                VgaText::incrementCursor(bool)
                0x00000000c0008bb4                VgaText::decrementCursor(bool)
                0x00000000c0008bd6                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008ca4                VgaText::putchar(char)
                0x00000000c0008d90                VgaText::putx(unsigned int)
                0x00000000c0008dd6                VgaText::puts(char const*)
                0x00000000c0008dfc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008e48                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008f9a                VgaText::VgaText(char const*)
                0x00000000c0008f9a                VgaText::VgaText(char const*)
                0x00000000c00090e6                VgaText::receiveKey(unsigned char)
                0x00000000c00091be                VgaText::doUpdate()
                0x00000000c00091bf                newTerminal(char*)
 .text          0x00000000c00091e4      0x1a1 core/tss.32
                0x00000000c00091e4                TSS::TSS()
                0x00000000c00091e4                TSS::TSS()
                0x00000000c00091f4                TSS::setESP(unsigned long)
                0x00000000c0009208                TSS::flush()
                0x00000000c0009228                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0009385        0x1 
 .text          0x00000000c0009386      0x4c2 core/unixfile.32
                0x00000000c0009386                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00093dc                ReservedFilename::isAtty()
                0x00000000c00093f8                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0009456                UnixFile::getFileDescriptor()
                0x00000000c000945e                UnixFile::UnixFile(int)
                0x00000000c000945e                UnixFile::UnixFile(int)
                0x00000000c000960e                ReservedFilename::ReservedFilename(int)
                0x00000000c000960e                ReservedFilename::ReservedFilename(int)
                0x00000000c0009640                UnixFile::~UnixFile()
                0x00000000c0009640                UnixFile::~UnixFile()
                0x00000000c00096d8                UnixFile::~UnixFile()
                0x00000000c0009700                ReservedFilename::~ReservedFilename()
                0x00000000c0009700                ReservedFilename::~ReservedFilename()
                0x00000000c0009724                ReservedFilename::~ReservedFilename()
                0x00000000c000974b                getFromFileDescriptor(int)
 .text          0x00000000c0009848     0x1166 core/virtmgr.32
                0x00000000c0009848                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000987d                Virt::getPageState(unsigned long)
                0x00000000c00098a1                Virt::allocateKernelVirtualPages(int)
                0x00000000c00099b2                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00099d0                Virt::swapIDToSector(unsigned long)
                0x00000000c00099e2                Virt::allocateSwapfilePage()
                0x00000000c0009a60                Virt::virtualMemorySetup()
                0x00000000c0009aab                Virt::setupPageSwapping(int)
                0x00000000c0009b1c                VAS::VAS()
                0x00000000c0009b1c                VAS::VAS()
                0x00000000c0009b58                VAS::VAS(VAS*)
                0x00000000c0009b58                VAS::VAS(VAS*)
                0x00000000c0009b86                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009bb2                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009bd1                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009cf6                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009d1a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009d34                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009d74                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009da8                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009dd2                VAS::~VAS()
                0x00000000c0009dd2                VAS::~VAS()
                0x00000000c0009f36                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000a03a                VAS::allocatePages(int, int)
                0x00000000c000a212                VAS::setCPUSpecific(unsigned long)
                0x00000000c000a230                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a2f6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a3e4                VAS::VAS(bool)
                0x00000000c000a3e4                VAS::VAS(bool)
                0x00000000c000a664                VAS::evict(unsigned long)
                0x00000000c000a726                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a814                VAS::scanForEviction()
                0x00000000c000a8f4                mapVASFirstTime
 .text          0x00000000c000a9ae       0x5f coreobjs/c++.32
                0x00000000c000a9ae                __cxa_atexit
                0x00000000c000a9b1                __cxa_finalize
                0x00000000c000a9b2                __stack_chk_fail
                0x00000000c000a9e8                __cxa_pure_virtual
                0x00000000c000a9f9                operator new[](unsigned long)
                0x00000000c000a9fe                operator delete(void*, unsigned long)
                0x00000000c000aa03                operator delete[](void*)
                0x00000000c000aa08                operator delete[](void*, unsigned long)
 .text          0x00000000c000aa0d      0x21c dbg/kconsole.32
                0x00000000c000aa0d                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000aa78                Dbg::logc(char)
                0x00000000c000aa98                Dbg::logs(char*)
                0x00000000c000aab5                Dbg::logWriteInt(unsigned int)
                0x00000000c000aad3                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000aaf4                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000ac29        0x1 
 .text          0x00000000c000ac2a      0xc5c fs/vfs.32
                0x00000000c000ac2a                File::read(unsigned long long, void*, int*)
                0x00000000c000ac82                File::write(unsigned long long, void*, int*)
                0x00000000c000acda                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ad32                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ad60                File::isAtty()
                0x00000000c000ad64                Directory::isAtty()
                0x00000000c000ad68                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ad6e                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ad74                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ad7a                File::~File()
                0x00000000c000ad7a                File::~File()
                0x00000000c000ad9e                File::~File()
                0x00000000c000adc8                Directory::~Directory()
                0x00000000c000adc8                Directory::~Directory()
                0x00000000c000adec                Directory::~Directory()
                0x00000000c000ae16                Filesystem::Filesystem()
                0x00000000c000ae16                Filesystem::Filesystem()
                0x00000000c000ae3a                Filesystem::~Filesystem()
                0x00000000c000ae3a                Filesystem::~Filesystem()
                0x00000000c000ae48                Filesystem::~Filesystem()
                0x00000000c000ae6c                Fs::getcwd(Process*, char*, int)
                0x00000000c000ae96                Fs::initVFS()
                0x00000000c000aec0                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b06a                File::File(char const*, Process*)
                0x00000000c000b06a                File::File(char const*, Process*)
                0x00000000c000b12a                File::open(FileOpenMode)
                0x00000000c000b188                File::close()
                0x00000000c000b1e8                File::seek(unsigned long long)
                0x00000000c000b23e                File::tell(unsigned long long*)
                0x00000000c000b28e                File::rewind()
                0x00000000c000b2a2                File::unlink()
                0x00000000c000b2ee                File::rename(char const*)
                0x00000000c000b33c                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b398                File::exists()
                0x00000000c000b3d6                File::stat(unsigned long long*, bool*)
                0x00000000c000b437                Fs::setcwd(Process*, char*)
                0x00000000c000b594                Directory::Directory(char const*, Process*)
                0x00000000c000b594                Directory::Directory(char const*, Process*)
                0x00000000c000b654                Directory::open()
                0x00000000c000b6b0                Directory::close()
                0x00000000c000b710                Directory::unlink()
                0x00000000c000b75c                Directory::rename(char const*)
                0x00000000c000b7aa                Directory::exists()
                0x00000000c000b7e8                Directory::read(dirent*)
                0x00000000c000b834                Directory::create()
                0x00000000c000b880                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b886        0x2 
 .text          0x00000000c000b888       0x86 hal/bus.32
                0x00000000c000b888                Bus::Bus(char const*)
                0x00000000c000b888                Bus::Bus(char const*)
                0x00000000c000b8c0                Bus::~Bus()
                0x00000000c000b8c0                Bus::~Bus()
                0x00000000c000b8e4                Bus::~Bus()
 .text          0x00000000c000b90e       0x96 hal/buzzer.32
                0x00000000c000b90e                beepThread(void*)
                0x00000000c000b94b                Krnl::beep(int, int, bool)
 .text          0x00000000c000b9a4      0x46d hal/clock.32
                0x00000000c000b9a4                User::loadClockSettings(int)
                0x00000000c000b9f6                Clock::Clock(char const*)
                0x00000000c000b9f6                Clock::Clock(char const*)
                0x00000000c000ba2c                Clock::~Clock()
                0x00000000c000ba2c                Clock::~Clock()
                0x00000000c000ba50                Clock::~Clock()
                0x00000000c000ba7a                Clock::timeInSecondsLocal()
                0x00000000c000bac2                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000bb1b                datetimeToSeconds(datetime_t)
                0x00000000c000bc48                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bca8                secondsToDatetime(unsigned long long)
                0x00000000c000bdec                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000be11        0x1 
 .text          0x00000000c000be12      0x464 hal/device.32
                0x00000000c000be12                Device::hibernate()
                0x00000000c000be14                Device::wake()
                0x00000000c000be16                Device::detect()
                0x00000000c000be18                Device::disableLegacy()
                0x00000000c000be1a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000be1c                DriverlessDevice::close(int, int, void*)
                0x00000000c000be20                DriverlessDevice::detect()
                0x00000000c000be22                DriverlessDevice::open(int, int, void*)
                0x00000000c000be36                Device::~Device()
                0x00000000c000be36                Device::~Device()
                0x00000000c000be44                Device::~Device()
                0x00000000c000be6c                Device::findAndLoadDriver()
                0x00000000c000be7a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bea0                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bee0                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bf0a                Device::getParent()
                0x00000000c000bf16                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000bf34                Device::addChild(Device*)
                0x00000000c000bf78                Device::removeAllChildren()
                0x00000000c000bfbe                Device::hibernateAll()
                0x00000000c000bfee                Device::wakeAll()
                0x00000000c000c01e                Device::detectAll()
                0x00000000c000c04e                Device::disableLegacyAll()
                0x00000000c000c050                Device::loadDriversForAll()
                0x00000000c000c052                Device::closeAll()
                0x00000000c000c088                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c0be                Device::setName(char const*)
                0x00000000c000c0cc                Device::Device(char const*)
                0x00000000c000c0cc                Device::Device(char const*)
                0x00000000c000c1c8                Device::getName()
                0x00000000c000c1d2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c1d2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c208                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c24c                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c276        0x2 
 .text          0x00000000c000c278       0x86 hal/diskctrl.32
                0x00000000c000c278                HardDiskController::HardDiskController(char const*)
                0x00000000c000c278                HardDiskController::HardDiskController(char const*)
                0x00000000c000c2b0                HardDiskController::~HardDiskController()
                0x00000000c000c2b0                HardDiskController::~HardDiskController()
                0x00000000c000c2d4                HardDiskController::~HardDiskController()
 .text          0x00000000c000c2fe       0xe2 hal/diskphys.32
                0x00000000c000c2fe                PhysicalDisk::eject()
                0x00000000c000c302                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c302                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c36a                PhysicalDisk::startCache()
                0x00000000c000c392                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c392                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c3b6                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c3e0        0x0 hal/fpu.32
 .text          0x00000000c000c3e0      0x35d hal/intctrl.32
                0x00000000c000c3e0                int_handler
                0x00000000c000c468                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c4b0                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c5e8                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c61c                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c69b                setupINTS()
                0x00000000c000c6f8                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c73d        0x1 
 .text          0x00000000c000c73e      0x78c hal/keybrd.32
                0x00000000c000c73e                startGUI(void*)
                0x00000000c000c7aa                startGUIVESA(void*)
                0x00000000c000c816                sendKeyToTerminal(unsigned char)
                0x00000000c000c8d9                sendKeyboardToken(KeyboardToken)
                0x00000000c000cd19                clearInternalKeybuffer(VgaText*)
                0x00000000c000cd4e                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000ce40                Keyboard::Keyboard(char const*)
                0x00000000c000ce40                Keyboard::Keyboard(char const*)
                0x00000000c000ce7c                Keyboard::~Keyboard()
                0x00000000c000ce7c                Keyboard::~Keyboard()
                0x00000000c000cea0                Keyboard::~Keyboard()
 .text          0x00000000c000ceca      0x3ea hal/logidisk.32
                0x00000000c000ceca                LogicalDisk::close(int, int, void*)
                0x00000000c000cece                LogicalDisk::~LogicalDisk()
                0x00000000c000cece                LogicalDisk::~LogicalDisk()
                0x00000000c000cef2                LogicalDisk::~LogicalDisk()
                0x00000000c000cf1c                LogicalDisk::open(int, int, void*)
                0x00000000c000cf30                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cf68                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cfae                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cfae                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d064                LogicalDisk::assignDriveLetter()
                0x00000000c000d11a                LogicalDisk::mount()
                0x00000000c000d162                LogicalDisk::unmount()
                0x00000000c000d172                LogicalDisk::eject()
                0x00000000c000d186                LogicalDisk::unassignDriveLetter()
                0x00000000c000d1dc                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d248                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000d2b4       0x86 hal/mouse.32
                0x00000000c000d2b4                Mouse::Mouse(char const*)
                0x00000000c000d2b4                Mouse::Mouse(char const*)
                0x00000000c000d2ec                Mouse::~Mouse()
                0x00000000c000d2ec                Mouse::~Mouse()
                0x00000000c000d310                Mouse::~Mouse()
 .text          0x00000000c000d33a      0x339 hal/partition.32
                0x00000000c000d33a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d3e2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d673        0x1 
 .text          0x00000000c000d674       0x86 hal/serial.32
                0x00000000c000d674                Serial::Serial(char const*)
                0x00000000c000d674                Serial::Serial(char const*)
                0x00000000c000d6ac                Serial::~Serial()
                0x00000000c000d6ac                Serial::~Serial()
                0x00000000c000d6d0                Serial::~Serial()
 *fill*         0x00000000c000d6fa        0x2 
 .text          0x00000000c000d6fc      0x234 hal/timer.32
                0x00000000c000d6fc                Timer::Timer(char const*)
                0x00000000c000d6fc                Timer::Timer(char const*)
                0x00000000c000d734                Timer::~Timer()
                0x00000000c000d734                Timer::~Timer()
                0x00000000c000d758                Timer::~Timer()
                0x00000000c000d782                Timer::read()
                0x00000000c000d78d                setupTimer(int)
                0x00000000c000d7c8                timerHandler(unsigned int)
 .text          0x00000000c000d930      0x3ee hal/vcache.32
                0x00000000c000d930                VCache::VCache(PhysicalDisk*)
                0x00000000c000d930                VCache::VCache(PhysicalDisk*)
                0x00000000c000da98                VCache::invalidateReadBuffer()
                0x00000000c000daa8                VCache::writeWriteBuffer()
                0x00000000c000daf4                VCache::~VCache()
                0x00000000c000daf4                VCache::~VCache()
                0x00000000c000db48                VCache::~VCache()
                0x00000000c000db70                VCache::write(unsigned long long, int, void*)
                0x00000000c000dc86                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000dd1e      0x4b3 hal/video.32
                0x00000000c000dd1e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000dd6a                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ddda                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000de58                Video::clearScreen(unsigned int)
                0x00000000c000de8c                Video::putpixel(int, int, unsigned int)
                0x00000000c000de9a                Video::Video(char const*)
                0x00000000c000de9a                Video::Video(char const*)
                0x00000000c000ded0                Video::~Video()
                0x00000000c000ded0                Video::~Video()
                0x00000000c000def4                Video::~Video()
                0x00000000c000df1e                Video::isMonochrome()
                0x00000000c000df2a                Video::getWidth()
                0x00000000c000df36                Video::getHeight()
                0x00000000c000df42                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000dffe                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e166                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e1d1        0x3 
 .text          0x00000000c000e1d4     0x1307 hw/acpi.32
                0x00000000c000e1d4                ACPI::close(int, int, void*)
                0x00000000c000e28c                findRSDP()
                0x00000000c000e31c                loadACPITables(unsigned char*)
                0x00000000c000e580                findRSDT(unsigned char*)
                0x00000000c000e6d0                findDataTable(unsigned char*, char*)
                0x00000000c000e748                scanMADT()
                0x00000000c000ec1c                ACPI::ACPI()
                0x00000000c000ec1c                ACPI::ACPI()
                0x00000000c000ec70                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ed58                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ee20                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ee28                ACPI::detectPCI()
                0x00000000c000f030                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f084                ACPI::sleep()
                0x00000000c000f0a0                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f4db        0x1 
 .text          0x00000000c000f4dc      0xb95 hw/cpu.32
                0x00000000c000f4dc                CPU::close(int, int, void*)
                0x00000000c000f4e0                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f4fc                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f514                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f588                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f60c                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f63a                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f668                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f696                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f6c4                CPU::CPU()
                0x00000000c000f6c4                CPU::CPU()
                0x00000000c000f752                CPU::displayFeatures()
                0x00000000c000f754                CPU::detectFeatures()
                0x00000000c000fe18                CPU::setupSMEP()
                0x00000000c000fe24                CPU::setupUMIP()
                0x00000000c000fe2e                CPU::setupTSC()
                0x00000000c000fe38                CPU::setupLargePages()
                0x00000000c000fe42                CPU::setupPAT()
                0x00000000c000fe7e                CPU::setupMTRR()
                0x00000000c000fe80                CPU::setupGlobalPages()
                0x00000000c000fe8a                CPU::allowUsermodeDataAccess()
                0x00000000c000fe9c                CPU::prohibitUsermodeDataAccess()
                0x00000000c000feae                CPU::setupSMAP()
                0x00000000c000febc                CPU::setupFeatures()
                0x00000000c000ff88                CPU::open(int, int, void*)
 .text          0x00000000c0010071       0xd1 krnl/bootmsg.32
                0x00000000c0010071                KeDisplaySplashScreen()
                0x00000000c00100df                KeSetBootMessage(char const*)
 .text          0x00000000c0010142      0x581 krnl/env.32
                0x00000000c0010142                EnvVarContainer::getEnv(char const*)
                0x00000000c0010180                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010242                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010244                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001042a                EnvVarContainer::__loadSystem()
                0x00000000c0010444                EnvVarContainer::__loadUser()
                0x00000000c0010446                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010446                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010468                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010468                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010498                Krnl::getEnv(Process*, char const*)
                0x00000000c00104fd                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c0010517                Krnl::setEnvUser(char const*, char const*)
                0x00000000c0010536                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0010549                Krnl::deleteEnvSystem(char const*)
                0x00000000c001054a                Krnl::deleteEnvUser(char const*)
                0x00000000c001054b                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c001054c                Krnl::newProcessEnv(Process*)
                0x00000000c001056e                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c00105ba                Krnl::loadSystemEnv()
                0x00000000c00105e8                Krnl::loadUserEnv()
                0x00000000c001060e                Krnl::flushEnv()
                0x00000000c001060f                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001062f                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00106c3        0xc krnl/panic.32
                0x00000000c00106c3                KePanic(char const*)
 .text          0x00000000c00106cf      0x142 krnl/powctrl.32
                0x00000000c00106cf                Krnl::powerThread(void*)
                0x00000000c00106fd                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010713                Krnl::userIOReceived()
                0x00000000c001071e                Krnl::handlePowerButton()
                0x00000000c0010753                Krnl::handleSleepButton()
                0x00000000c0010788                Krnl::setupPowerManager()
 .text          0x00000000c0010811      0xe2c krnl/syscalls.32
                0x00000000c0010811                sysCallSeekDir(regs*)
                0x00000000c0010816                sysCallTellDir(regs*)
                0x00000000c001081b                sysCallVerify(regs*)
                0x00000000c0010825                sysCallGetArgc(regs*)
                0x00000000c0010835                sysCallTTYName(regs*)
                0x00000000c001083d                sysFormatDisk(regs*)
                0x00000000c00108aa                sysSetDiskVolumeLabel(regs*)
                0x00000000c00108f4                sysGetDiskVolumeLabel(regs*)
                0x00000000c0010949                sysShutdown(regs*)
                0x00000000c00109a7                sysCallRealpath(regs*)
                0x00000000c00109ea                sysCallReadDir(regs*)
                0x00000000c0010a6a                sysCallIsATTY(regs*)
                0x00000000c0010ac6                sysCallSeek(regs*)
                0x00000000c0010b1f                sysCallTell(regs*)
                0x00000000c0010b8e                sysCallSize(regs*)
                0x00000000c0010c03                sysCallSizeFromFilename(regs*)
                0x00000000c0010cb6                sysCallClose(regs*)
                0x00000000c0010d16                sysCallOpenDir(regs*)
                0x00000000c0010d8d                sysCallCloseDir(regs*)
                0x00000000c0010de1                sysCallMakeDir(regs*)
                0x00000000c0010e53                sysCallWait(regs*)
                0x00000000c0010e70                sysCallNotImpl(regs*)
                0x00000000c0010e8b                sysPanic(regs*)
                0x00000000c0010ea6                sysCallRmdir(regs*)
                0x00000000c0010f0d                sysCallUnlink(regs*)
                0x00000000c0010f74                sysCallGetArgv(regs*)
                0x00000000c0010fc1                sysCallUSleep(regs*)
                0x00000000c0010fea                sysCallSpawn(regs*)
                0x00000000c0011053                sysCallGetEnv(regs*)
                0x00000000c0011102                sysSetFatAttrib(regs*)
                0x00000000c0011179                sysPipe(regs*)
                0x00000000c00111be                sysGetUnixTime(regs*)
                0x00000000c00111d2                string_ends_with(char const*, char const*)
                0x00000000c001121c                sysCallOpen(regs*)
                0x00000000c0011410                KeLoadSystemCalls()
                0x00000000c00115fb                KeSystemCall(regs*, void*)
 .text          0x00000000c001163d      0x50e reg/registry.32
                0x00000000c001163d                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0011795                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00118ea                Reg::getLine(char*, char*, char*)
                0x00000000c0011921                Reg::readInt(char*, char*, int*)
                0x00000000c0011a0c                Reg::readString(char*, char*, char*, int)
                0x00000000c0011a8d                Reg::readBool(char*, char*, bool*)
                0x00000000c0011ab2                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0011ade                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0011b0a                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0011b4b       0x36 sys/eject.32
                0x00000000c0011b4b                SysEject(regs*)
 .text          0x00000000c0011b81       0x18 sys/exit.32
                0x00000000c0011b81                SysExit(regs*)
 .text          0x00000000c0011b99       0x1f sys/getcwd.32
                0x00000000c0011b99                SysGetCwd(regs*)
 .text          0x00000000c0011bb8        0xc sys/getpid.32
                0x00000000c0011bb8                SysGetPID(regs*)
 .text          0x00000000c0011bc4       0x1a sys/getramdata.32
                0x00000000c0011bc4                SysGetRAMData(regs*)
 .text          0x00000000c0011bde       0x82 sys/getvgaptr.32
                0x00000000c0011bde                SysGetVGAPtr(regs*)
 .text          0x00000000c0011c60       0xa8 sys/loaddll.32
                0x00000000c0011c60                SysLoadDLL(regs*)
 .text          0x00000000c0011d08       0x68 sys/read.32
                0x00000000c0011d08                SysRead(regs*)
 .text          0x00000000c0011d70       0x55 sys/sbrk.32
                0x00000000c0011d70                SysSbrk(regs*)
 .text          0x00000000c0011dc5       0x1c sys/setcwd.32
                0x00000000c0011dc5                SysSetCwd(regs*)
 .text          0x00000000c0011de1       0x95 sys/settime.32
                0x00000000c0011de1                SysSetTime(regs*)
 .text          0x00000000c0011e76       0x4a sys/timezone.32
                0x00000000c0011e76                SysTimezone(regs*)
 .text          0x00000000c0011ec0       0x68 sys/write.32
                0x00000000c0011ec0                SysWrite(regs*)
 .text          0x00000000c0011f28       0x62 sys/wsbe.32
                0x00000000c0011f28                SysWsbe(regs*)
 .text          0x00000000c0011f8a       0x25 sys/yield.32
                0x00000000c0011f8a                SysYield(regs*)
 .text          0x00000000c0011faf     0x11e5 thr/elf.32
                0x00000000c0011faf                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001223b                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0012451                Thr::runtimeReferenceHelper()
                0x00000000c0012464                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00124b3                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0012771                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012ea7                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012ed9                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012f10                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012f2a                Thr::loadDLL(char const*, bool)
                0x00000000c001315b                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0013194     0x12c5 thr/prcssthr.32
                0x00000000c0013194                userModeEntryPoint(void*)
                0x00000000c00131bc                changeTSS
                0x00000000c00131ec                switchToThread(ThreadControlBlock*)
                0x00000000c00132a0                Process::addArgs(char**)
                0x00000000c0013300                Process::Process(char const*, Process*, char**)
                0x00000000c0013300                Process::Process(char const*, Process*, char**)
                0x00000000c00134f0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00134f0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00136ac                taskStartupFunction
                0x00000000c00136b8                Semaphore::Semaphore(int)
                0x00000000c00136b8                Semaphore::Semaphore(int)
                0x00000000c00136e8                Mutex::Mutex()
                0x00000000c00136e8                Mutex::Mutex()
                0x00000000c00136fc                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00137f4                Process::createUserThread()
                0x00000000c0013814                setupMultitasking(void (*)())
                0x00000000c001391c                schedule()
                0x00000000c00139ac                Semaphore::tryAcquire()
                0x00000000c0013a78                Semaphore::assertLocked(char const*)
                0x00000000c0013af0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013b18                blockTask(TaskState)
                0x00000000c0013b48                waitTask(int, int*, int)
                0x00000000c0013b8c                milliTenthSleepUntil(unsigned int)
                0x00000000c0013c1c                milliTenthSleep(unsigned int)
                0x00000000c0013c2c                sleep(unsigned int)
                0x00000000c0013c48                Semaphore::acquire()
                0x00000000c0013d04                taskReturned
                0x00000000c0013d40                Thr::processFromPID(int)
                0x00000000c0013de0                unblockTask(ThreadControlBlock*)
                0x00000000c0013e84                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0014150                cleanerTaskFunction(void*)
                0x00000000c0014240                terminateTask(int)
                0x00000000c001430c                Thr::terminateFromIRQ(int)
                0x00000000c001431c                Semaphore::release()
 .text          0x00000000c0014459      0xb93 vm86/vm8086.32
                0x00000000c0014459                Vm::inbv(unsigned short)
                0x00000000c001446c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00144a2                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00144b2                Vm::getSegment(unsigned int)
                0x00000000c00144ba                Vm::getOffset(unsigned int)
                0x00000000c00144bf                Vm::mainloop2()
                0x00000000c00144f9                Vm::mainVm8086Loop(void*)
                0x00000000c0014509                Vm::mainloop3(unsigned long)
                0x00000000c001452f                Vm::initialise8086()
                0x00000000c0014572                Vm::finish8086()
                0x00000000c00145d3                Vm::getOutput8086(unsigned char*)
                0x00000000c00145f8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00146b1                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014819                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00148a3                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00148b4                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00148c6                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00148d7                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00148ec                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0014902                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0014917                Vm::faultHandler(regs*)
 .text          0x00000000c0014fec      0xa53 arch/i386/hal.32
                0x00000000c0014fec                noCopro(unsigned long)
                0x00000000c0014fed                nmiHandler(regs*, void*)
                0x00000000c0015006                doubleFault(regs*, void*)
                0x00000000c001501f                displayDebugInfo(regs*)
                0x00000000c0015340                HalSystemIdle()
                0x00000000c00153b6                displayProgramFault(char const*)
                0x00000000c0015402                gpFault(regs*, void*)
                0x00000000c0015467                pgFault(regs*, void*)
                0x00000000c00154ed                otherISRHandler(regs*, void*)
                0x00000000c0015521                opcodeFault(regs*, void*)
                0x00000000c00155a1                i386SaveCoprocessor(void*)
                0x00000000c00155b5                i386LoadCoprocessor(void*)
                0x00000000c00155c9                x87EmulHandler(regs*, void*)
                0x00000000c0015666                HalInitialiseCoprocessor()
                0x00000000c0015714                HalPanic(char const*)
                0x00000000c001580d                HalQueryPerformanceCounter()
                0x00000000c0015828                HalInitialise()
                0x00000000c00159ce                HalMakeBeep(int)
                0x00000000c0015a08                HalGetRand()
                0x00000000c0015a0b                HalEndOfInterrupt(int)
                0x00000000c0015a3c                HalRestart()
                0x00000000c0015a3d                HalShutdown()
                0x00000000c0015a3e                HalSleep()
 *fill*         0x00000000c0015a3f        0x1 
 .text          0x00000000c0015a40      0x2f4 arch/i386/pic.32
                0x00000000c0015a40                picIoWait()
                0x00000000c0015a48                picDisable()
                0x00000000c0015a7c                picGetIRQReg(int)
                0x00000000c0015b00                picOpen()
                0x00000000c0015c90                picEOI(int)
 .text          0x00000000c0015d34      0x64d arch/i386/rtc.32
                0x00000000c0015d34                RTC::open(int, int, void*)
                0x00000000c0015d38                RTC::close(int, int, void*)
                0x00000000c0015d3c                RTC::timeInSecondsUTC()
                0x00000000c0015d4e                RTC::timeInDatetimeUTC()
                0x00000000c0015d74                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015db2                RTC::~RTC()
                0x00000000c0015db2                RTC::~RTC()
                0x00000000c0015dd6                RTC::~RTC()
                0x00000000c0015e00                RTC::get_update_in_progress_flag()
                0x00000000c0015e18                RTC::completeRTCRefresh()
                0x00000000c00160d0                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0016283                rtcIRQHandler(regs*, void*)
                0x00000000c00162c8                RTC::RTC()
                0x00000000c00162c8                RTC::RTC()
 *fill*         0x00000000c0016381        0x3 
 .text          0x00000000c0016384      0x203 arch/i386/vga.32
                0x00000000c0016384                HalConsoleScroll(int, int)
                0x00000000c001648c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00164f8                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0016587        0x1 
 .text          0x00000000c0016588     0x13e7 fs/fat/vfslink.32
                0x00000000c0016588                FAT::getName()
                0x00000000c0016590                FAT::tell(void*, unsigned long long*)
                0x00000000c00165cc                FAT::stat(void*, unsigned long long*)
                0x00000000c0016608                FAT::~FAT()
                0x00000000c0016608                FAT::~FAT()
                0x00000000c001662c                FAT::~FAT()
                0x00000000c0016654                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00166f8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00167bc                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016990                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016ba8                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016d68                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016ed4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016f34                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016f94                FAT::close(void*)
                0x00000000c0016fe8                FAT::closeDir(void*)
                0x00000000c001703c                FAT::seek(void*, unsigned long long)
                0x00000000c0017094                fatWrapperReadDisk
                0x00000000c00170d8                fatWrapperWriteDisk
                0x00000000c001711c                fatWrapperIoctl
                0x00000000c0017238                FAT::FAT()
                0x00000000c0017238                FAT::FAT()
                0x00000000c001728c                FAT::fixFilepath(char*)
                0x00000000c00172c8                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0017400                FAT::openDir(char const*, void**)
                0x00000000c00174b0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00175a8                FAT::unlink(char const*)
                0x00000000c0017628                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00177b4                FAT::rename(char const*, char const*)
                0x00000000c0017880                FAT::mkdir(char const*)
                0x00000000c0017900                FAT::exists(char const*)
 *fill*         0x00000000c001796f        0x1 
 .text          0x00000000c0017970       0x5c fs/iso9660/helper.32
                0x00000000c0017970                isoReadDiscSectorHelper
 .text          0x00000000c00179cc      0x58c fs/iso9660/vfslink.32
                0x00000000c00179cc                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00179d2                ISO9660::getName()
                0x00000000c00179d8                ISO9660::closeDir(void*)
                0x00000000c00179e2                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00179e8                ISO9660::unlink(char const*)
                0x00000000c00179ee                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00179f4                ISO9660::rename(char const*, char const*)
                0x00000000c00179fa                ISO9660::mkdir(char const*)
                0x00000000c0017a00                ISO9660::~ISO9660()
                0x00000000c0017a00                ISO9660::~ISO9660()
                0x00000000c0017a24                ISO9660::~ISO9660()
                0x00000000c0017a4c                ISO9660::exists(char const*)
                0x00000000c0017a60                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017aec                ISO9660::openDir(char const*, void**)
                0x00000000c0017b6c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017bac                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017be4                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017c1a                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017c54                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017d40                ISO9660::close(void*)
                0x00000000c0017d66                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017e33                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017ebe                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017f30                ISO9660::ISO9660()
                0x00000000c0017f30                ISO9660::ISO9660()
 .text          0x00000000c0017f58      0x26c hal/sound/sndcard.32
                0x00000000c0017f58                SoundCard::beginPlayback()
                0x00000000c0017f66                SoundCard::stopPlayback()
                0x00000000c0017f74                SoundCard::SoundCard(char const*)
                0x00000000c0017f74                SoundCard::SoundCard(char const*)
                0x00000000c0018012                SoundCard::~SoundCard()
                0x00000000c0018012                SoundCard::~SoundCard()
                0x00000000c0018036                SoundCard::~SoundCard()
                0x00000000c0018060                SoundCard::configureRates(int, int, int)
                0x00000000c0018090                SoundCard::getSamples16(int, short*)
                0x00000000c00180ec                SoundCard::getSamples32(int, int*)
                0x00000000c0018172                SoundCard::addChannel(SoundPort*)
                0x00000000c00181b0                SoundCard::removeChannel(int)
 .text          0x00000000c00181c4      0x377 hal/sound/sndport.32
                0x00000000c00181c4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00181c4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018250                SoundPort::~SoundPort()
                0x00000000c0018250                SoundPort::~SoundPort()
                0x00000000c0018284                SoundPort::unpause()
                0x00000000c0018290                SoundPort::pause()
                0x00000000c001829c                SoundPort::getBufferUsed()
                0x00000000c00182a4                SoundPort::getBufferSize()
                0x00000000c00182ac                SoundPort::buffer16(short*, int)
                0x00000000c0018338                SoundPort::buffer32(int*, int)
                0x00000000c00183c0                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0018484                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001853b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001853b        0x1 
 .text          0x00000000c001853c      0xb49 hw/bus/pci.32
                0x00000000c001853c                PCI::open(int, int, void*)
                0x00000000c001855a                PCI::close(int, int, void*)
                0x00000000c001855e                PCI::PCI()
                0x00000000c001855e                PCI::PCI()
                0x00000000c00185f8                PCI::readBAR8(unsigned int, int)
                0x00000000c0018614                PCI::readBAR16(unsigned int, int)
                0x00000000c0018632                PCI::readBAR32(unsigned int, int)
                0x00000000c001864e                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001866e                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0018690                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c00186b0                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001871e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00187c6                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c00187ea                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0018812                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001885c                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0018884                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c00188a8                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c00188cc                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c00188f4                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018958                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018a40                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018cba                PCI::checkBus(unsigned char)
                0x00000000c0018ce0                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018e52                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018fc6                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0019032                PCI::detect()
 *fill*         0x00000000c0019085        0x1 
 .text          0x00000000c0019086      0xb5a hw/diskctrl/ide.32
                0x00000000c0019086                IDE::close(int, int, void*)
                0x00000000c001908a                IDE::IDE()
                0x00000000c001908a                IDE::IDE()
                0x00000000c00190be                IDE::prepareInterrupt(unsigned char)
                0x00000000c00190d0                selectDrive(unsigned char, unsigned char)
                0x00000000c00190d2                IDE::getBase(unsigned char)
                0x00000000c00190e4                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c00191a4                IDE::read(unsigned char, unsigned char)
                0x00000000c0019252                IDE::waitInterrupt(unsigned char)
                0x00000000c00192ba                ideChannel0IRQHandler(regs*, void*)
                0x00000000c00192d6                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00192f2                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019338                IDE::open(int, int, void*)
                0x00000000c0019746                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0019812                IDE::detect()
                0x00000000c0019ad2                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019b82                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019be0      0x32a hw/diskctrl/satabus.32
                0x00000000c0019be0                SATABus::close(int, int, void*)
                0x00000000c0019be4                SATABus::detect()
                0x00000000c0019be6                SATABus::SATABus()
                0x00000000c0019be6                SATABus::SATABus()
                0x00000000c0019c6c                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c9e                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019ce6                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d06                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d30                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019e40                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019eea                SATABus::open(int, int, void*)
 .text          0x00000000c0019f0a      0x5f4 hw/diskphys/ata.32
                0x00000000c0019f0a                ATA::close(int, int, void*)
                0x00000000c0019f2e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019f30                ATA::ATA()
                0x00000000c0019f30                ATA::ATA()
                0x00000000c0019f5e                ATA::flush(bool)
                0x00000000c0019fa8                ATA::readyForCommand()
                0x00000000c0019ff4                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a370                ATA::read(unsigned long long, int, void*)
                0x00000000c001a3bc                ATA::write(unsigned long long, int, void*)
                0x00000000c001a408                ATA::detectCHS()
                0x00000000c001a432                ATA::open(int, int, void*)
 .text          0x00000000c001a4fe      0x60e hw/diskphys/atapi.32
                0x00000000c001a4fe                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a504                ATAPI::close(int, int, void*)
                0x00000000c001a528                ATAPI::ATAPI()
                0x00000000c001a528                ATAPI::ATAPI()
                0x00000000c001a556                ATAPI::readyForCommand()
                0x00000000c001a5a8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a868                ATAPI::diskRemoved()
                0x00000000c001a8a2                ATAPI::eject()
                0x00000000c001a8ea                ATAPI::diskInserted()
                0x00000000c001a8f6                ATAPI::detectMedia()
                0x00000000c001a9b2                ATAPI::open(int, int, void*)
                0x00000000c001aa92                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ab0c      0x402 hw/diskphys/sata.32
                0x00000000c001ab0c                SATA::close(int, int, void*)
                0x00000000c001ab30                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ab32                SATA::open(int, int, void*)
                0x00000000c001abdc                SATA::SATA()
                0x00000000c001abdc                SATA::SATA()
                0x00000000c001ac0a                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ae56                SATA::read(unsigned long long, int, void*)
                0x00000000c001aea2                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001af0e      0x5f5 hw/diskphys/satapi.32
                0x00000000c001af0e                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001af14                SATAPI::close(int, int, void*)
                0x00000000c001af38                SATAPI::SATAPI()
                0x00000000c001af38                SATAPI::SATAPI()
                0x00000000c001af66                SATAPI::diskRemoved()
                0x00000000c001af68                SATAPI::diskInserted()
                0x00000000c001af84                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b260                SATAPI::eject()
                0x00000000c001b29c                SATAPI::detectMedia()
                0x00000000c001b2c2                SATAPI::open(int, int, void*)
                0x00000000c001b3c2                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b503        0x1 
 .text          0x00000000c001b504      0x455 hw/intctrl/apic.32
                0x00000000c001b504                IOAPIC::close(int, int, void*)
                0x00000000c001b50a                apicGetBase()
                0x00000000c001b54c                IOAPIC::IOAPIC()
                0x00000000c001b54c                IOAPIC::IOAPIC()
                0x00000000c001b574                apicOpen()
                0x00000000c001b6da                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b70c                IOAPIC::read(int)
                0x00000000c001b734                IOAPIC::open(int, int, void*)
                0x00000000c001b828                IOAPIC::write(int, int)
                0x00000000c001b854                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b959        0x3 
 .text          0x00000000c001b95c       0xf0 hw/timer/apictimer.32
                0x00000000c001b95c                APICTimer::close(int, int, void*)
                0x00000000c001b964                apicTimerHandler(regs*, void*)
                0x00000000c001b98c                APICTimer::open(int, int, void*)
                0x00000000c001b9fc                APICTimer::write(int)
                0x00000000c001ba24                APICTimer::APICTimer()
                0x00000000c001ba24                APICTimer::APICTimer()
 .text          0x00000000c001ba4c      0x1aa hw/timer/pit.32
                0x00000000c001ba4c                PIT::write(int)
                0x00000000c001bad0                pitHandler(regs*, void*)
                0x00000000c001baf4                PIT::open(int, int, void*)
                0x00000000c001bb44                PIT::close(int, int, void*)
                0x00000000c001bb74                PIT::PIT()
                0x00000000c001bb74                PIT::PIT()
 *fill*         0x00000000c001bbf6        0xa 
 .text          0x00000000c001bc00       0x83 arch/i386/avx.32
                0x00000000c001bc00                avxDetect
                0x00000000c001bc2a                avxSave
                0x00000000c001bc3b                avxLoad
                0x00000000c001bc4c                avxInit
                0x00000000c001bc6e                avxClose
                0x00000000c001bc6f                wouldSheSayYes
 *fill*         0x00000000c001bc83        0xd 
 .text          0x00000000c001bc90      0x1d6 arch/i386/interrupt.32
                0x00000000c001bc90                isr0
                0x00000000c001bca0                isr1
                0x00000000c001bcaa                isr2
                0x00000000c001bcb4                isr3
                0x00000000c001bcbe                isr4
                0x00000000c001bcc8                isr5
                0x00000000c001bcd2                isr6
                0x00000000c001bcdc                isr7
                0x00000000c001bce6                isr8
                0x00000000c001bcee                isr9
                0x00000000c001bcf8                isr10
                0x00000000c001bd00                isr11
                0x00000000c001bd08                isr12
                0x00000000c001bd10                isr13
                0x00000000c001bd18                isr14
                0x00000000c001bd20                isr15
                0x00000000c001bd2a                isr16
                0x00000000c001bd34                isr17
                0x00000000c001bd3e                isr18
                0x00000000c001bd48                irq3
                0x00000000c001bd52                irq4
                0x00000000c001bd5c                irq5
                0x00000000c001bd66                irq6
                0x00000000c001bd70                irq7
                0x00000000c001bd7a                irq8
                0x00000000c001bd84                irq9
                0x00000000c001bd8e                irq10
                0x00000000c001bd98                irq11
                0x00000000c001bda2                irq12
                0x00000000c001bdac                irq13
                0x00000000c001bdb6                irq14
                0x00000000c001bdc0                irq15
                0x00000000c001bdca                irq1
                0x00000000c001bdd1                irq2
                0x00000000c001bdd8                isr96
                0x00000000c001bddf                irq0
                0x00000000c001bde4                int_common_stub
                0x00000000c001bde4                syscall_common_stub
                0x00000000c001be16                irq16
                0x00000000c001be20                irq17
                0x00000000c001be2a                irq18
                0x00000000c001be34                irq19
                0x00000000c001be3e                irq20
                0x00000000c001be48                irq21
                0x00000000c001be52                irq22
                0x00000000c001be5c                irq23
 *fill*         0x00000000c001be66        0xa 
 .text          0x00000000c001be70       0x10 arch/i386/rdrand.32
                0x00000000c001be70                i386GetRDRAND
 .text          0x00000000c001be80       0x39 arch/i386/sse.32
                0x00000000c001be80                absolutelyNoChanceInHell
                0x00000000c001be80                sseDetect
                0x00000000c001be98                sseSave
                0x00000000c001bea0                sseLoad
                0x00000000c001bea8                sseInit
                0x00000000c001beb8                sseClose
 *fill*         0x00000000c001beb9        0x7 
 .text          0x00000000c001bec0       0x49 arch/i386/x87.32
                0x00000000c001bec6                x87Detect
                0x00000000c001bee1                x87Save
                0x00000000c001bee8                x87Load
                0x00000000c001beef                x87Init
                0x00000000c001bf08                x87Close
 *fill*         0x00000000c001bf09        0x3 
 .text          0x00000000c001bf0c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001bf31        0x0 crtn.32
 *fill*         0x00000000c001bf31        0x3 
 .text          0x00000000c001bf34      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001bf34                __divdi3
 *fill*         0x00000000c001c07f        0x1 
 .text          0x00000000c001c080      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c080                __moddi3
 *fill*         0x00000000c001c1fe        0x2 
 .text          0x00000000c001c200       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c200                __udivdi3
 *fill*         0x00000000c001c2ff        0x1 
 .text          0x00000000c001c300      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c300                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c420        0x0
 .iplt          0x00000000c001c420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c41a        0xf
 .init          0x00000000c001c41a        0x3 crti.32
                0x00000000c001c41a                _init
 .init          0x00000000c001c41d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c422        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c427        0x2 crtn.32

.fini           0x00000000c001c429        0xa
 .fini          0x00000000c001c429        0x3 crti.32
                0x00000000c001c429                _fini
 .fini          0x00000000c001c42c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c431        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c434       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c434       0x23 core/computer.32
                0x00000000c001c434                Computer::~Computer()
                0x00000000c001c434                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c458       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c458       0x2a core/computer.32
                0x00000000c001c458                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c482       0x21
 .text._Z10idleCommonv
                0x00000000c001c482       0x21 core/idle.32
                0x00000000c001c482                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c4a4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c4a4        0x2 core/unixfile.32
                0x00000000c001c4a4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c4a4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c4a6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c4a6       0x42 core/unixfile.32
                0x00000000c001c4a6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c4a6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c4e8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c4e8       0xd3 core/unixfile.32
                0x00000000c001c4e8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c5bc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c5bc        0x7 core/unixfile.32
                0x00000000c001c5bc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c5c4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c5c4       0xa1 core/unixfile.32
                0x00000000c001c5c4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c666        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c666        0x8 core/unixfile.32
                0x00000000c001c666                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c66e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c66e       0x1a hal/device.32
                0x00000000c001c66e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c66e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c688       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c688       0x2a hal/device.32
                0x00000000c001c688                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c6b2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c6b2       0xdc hal/device.32
                0x00000000c001c6b2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c78e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c78e       0x42 hal/device.32
                0x00000000c001c78e                LinkedList<Device>::LinkedList()
                0x00000000c001c78e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c7d0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c7d0       0x1c hal/timer.32
                0x00000000c001c7d0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c7ec        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c7ec        0x7 hal/timer.32
                0x00000000c001c7ec                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c7f4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c7f4       0xb8 hal/timer.32
                0x00000000c001c7f4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c8ac       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c8ac       0xda hal/timer.32
                0x00000000c001c8ac                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c988       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c988       0x23 hw/acpi.32
                0x00000000c001c988                ACPI::~ACPI()
                0x00000000c001c988                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c9ac       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c9ac       0x2a hw/acpi.32
                0x00000000c001c9ac                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c9d8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c9d8        0x2 hw/acpi.32
                0x00000000c001c9d8                LinkedList<Device>::~LinkedList()
                0x00000000c001c9d8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c9dc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c9dc       0x1c hw/acpi.32
                0x00000000c001c9dc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c9f8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c9f8        0x7 hw/acpi.32
                0x00000000c001c9f8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ca00       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ca00       0xb8 hw/acpi.32
                0x00000000c001ca00                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001cab8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001cab8       0x23 hw/cpu.32
                0x00000000c001cab8                CPU::~CPU()
                0x00000000c001cab8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001cadc       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001cadc       0x2a hw/cpu.32
                0x00000000c001cadc                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cb08        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cb08        0x2 thr/prcssthr.32
                0x00000000c001cb08                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001cb08                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cb0c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cb0c       0x49 thr/prcssthr.32
                0x00000000c001cb0c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001cb0c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb58       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb58       0x42 thr/prcssthr.32
                0x00000000c001cb58                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001cb58                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cb9c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cb9c        0x8 thr/prcssthr.32
                0x00000000c001cb9c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001cba4       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cba4       0x23 hw/bus/pci.32
                0x00000000c001cba4                PCI::~PCI()
                0x00000000c001cba4                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cbc8       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cbc8       0x2a hw/bus/pci.32
                0x00000000c001cbc8                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cbf2       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cbf2       0x23 hw/diskctrl/ide.32
                0x00000000c001cbf2                IDE::~IDE()
                0x00000000c001cbf2                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cc16       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cc16       0x2a hw/diskctrl/ide.32
                0x00000000c001cc16                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cc40       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cc40       0x23 hw/diskctrl/satabus.32
                0x00000000c001cc40                SATABus::~SATABus()
                0x00000000c001cc40                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cc64       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cc64       0x2a hw/diskctrl/satabus.32
                0x00000000c001cc64                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cc8e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cc8e       0x23 hw/diskphys/ata.32
                0x00000000c001cc8e                ATA::~ATA()
                0x00000000c001cc8e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001ccb2       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001ccb2       0x2a hw/diskphys/ata.32
                0x00000000c001ccb2                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001ccdc       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001ccdc       0x23 hw/diskphys/atapi.32
                0x00000000c001ccdc                ATAPI::~ATAPI()
                0x00000000c001ccdc                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001cd00       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001cd00       0x2a hw/diskphys/atapi.32
                0x00000000c001cd00                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cd2a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cd2a       0x23 hw/diskphys/sata.32
                0x00000000c001cd2a                SATA::~SATA()
                0x00000000c001cd2a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cd4e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cd4e       0x2a hw/diskphys/sata.32
                0x00000000c001cd4e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cd78       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cd78       0x23 hw/diskphys/satapi.32
                0x00000000c001cd78                SATAPI::~SATAPI()
                0x00000000c001cd78                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cd9c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cd9c       0x2a hw/diskphys/satapi.32
                0x00000000c001cd9c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cdc6       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cdc6       0x23 hw/intctrl/apic.32
                0x00000000c001cdc6                IOAPIC::~IOAPIC()
                0x00000000c001cdc6                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cdea       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cdea       0x2a hw/intctrl/apic.32
                0x00000000c001cdea                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ce14       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ce14       0x23 hw/timer/apictimer.32
                0x00000000c001ce14                APICTimer::~APICTimer()
                0x00000000c001ce14                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ce38       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ce38       0x2a hw/timer/apictimer.32
                0x00000000c001ce38                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ce64       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ce64       0x23 hw/timer/pit.32
                0x00000000c001ce64                PIT::~PIT()
                0x00000000c001ce64                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ce88       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ce88       0x2a hw/timer/pit.32
                0x00000000c001ce88                PIT::~PIT()

.rodata         0x00000000c001ceb2     0x2862
                0x00000000c001ceb2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001ceb2        0x2 
 .ctors         0x00000000c001ceb4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001ceb8        0x4 core/unixfile.32
 .ctors         0x00000000c001cebc        0x4 thr/prcssthr.32
 .ctors         0x00000000c001cec0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cec4                end_ctors = .
                0x00000000c001cec4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001cec4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001cec8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cec8                __DTOR_END__
                0x00000000c001cecc                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cecc       0x14 
 .rodata        0x00000000c001cee0      0x101 acpica/utclib.32
                0x00000000c001cee0                AcpiGbl_Ctypes
 *fill*         0x00000000c001cfe1        0x3 
 .rodata        0x00000000c001cfe4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001cffc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001d046       0x1a 
 .rodata        0x00000000c001d060       0xed fs/fat/ff.32
 *fill*         0x00000000c001d14d       0x13 
 .rodata        0x00000000c001d160      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d560       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d571       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001d5ba      0x115 core/computer.32
 *fill*         0x00000000c001d6cf        0x1 
 .rodata.str1.4
                0x00000000c001d6d0       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d738       0x2c core/computer.32
                0x00000000c001d738                vtable for Computer
 .rodata.str1.4
                0x00000000c001d764       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d794        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d7a0       0x17 core/main.32
 *fill*         0x00000000c001d7b7        0x1 
 .rodata.str1.4
                0x00000000c001d7b8       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d85d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d8b5       0x39 core/pipe.32
 *fill*         0x00000000c001d8ee        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d8f0       0x1c core/pipe.32
                0x00000000c001d8f0                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d90c       0x69 core/terminal.32
 *fill*         0x00000000c001d975        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d978       0x1c core/terminal.32
                0x00000000c001d978                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d994       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d9b6       0x15 core/unixfile.32
 *fill*         0x00000000c001d9cb        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d9cc       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001da17        0x8 core/unixfile.32
 *fill*         0x00000000c001da1f        0x1 
 .rodata.str1.4
                0x00000000c001da20       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001da40       0x1c core/unixfile.32
                0x00000000c001da40                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001da5c       0x1c core/unixfile.32
                0x00000000c001da5c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001da78      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dbdf      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dce6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dd19       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dd19        0x3 
 .rodata        0x00000000c001dd1c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001de6c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001de6c       0x68 fs/vfs.32
                0x00000000c001de6c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001ded4       0x1c fs/vfs.32
                0x00000000c001ded4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001def0       0x1c fs/vfs.32
                0x00000000c001def0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001df0c       0x2c hal/bus.32
                0x00000000c001df0c                vtable for Bus
 .rodata.str1.1
                0x00000000c001df38       0x1e hal/clock.32
 *fill*         0x00000000c001df56        0x2 
 .rodata._ZTV5Clock
                0x00000000c001df58       0x3c hal/clock.32
                0x00000000c001df58                vtable for Clock
 *fill*         0x00000000c001df94        0xc 
 .rodata        0x00000000c001dfa0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001dfd0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001e028       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001e028       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001e028       0x2c hal/device.32
                0x00000000c001e028                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001e054       0x2c hal/device.32
                0x00000000c001e054                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e080       0x2c hal/diskctrl.32
                0x00000000c001e080                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e0ac       0x38 hal/diskphys.32
                0x00000000c001e0ac                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e0e4       0x3e hal/intctrl.32
 *fill*         0x00000000c001e122        0x2 
 .rodata.str1.4
                0x00000000c001e124       0x5d hal/intctrl.32
 .rodata        0x00000000c001e181       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e1d4       0x34 hal/keybrd.32
                0x00000000c001e1d4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e208       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e24c       0x2c hal/logidisk.32
                0x00000000c001e24c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e278       0x2c hal/mouse.32
                0x00000000c001e278                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e2a4        0xb hal/partition.32
 *fill*         0x00000000c001e2af        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e2b0       0x44 hal/serial.32
                0x00000000c001e2b0                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e2f4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e2f4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e2f4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e2f4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e2f4       0x30 hal/timer.32
                0x00000000c001e2f4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e324       0x10 hal/vcache.32
                0x00000000c001e324                vtable for VCache
 .rodata.str1.1
                0x00000000c001e334       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e39c       0x48 hal/video.32
                0x00000000c001e39c                vtable for Video
 .rodata.str1.4
                0x00000000c001e3e4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e47f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e5bb       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e5bb        0x8 hw/acpi.32
 *fill*         0x00000000c001e5bb        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e5bc       0x2c hw/acpi.32
                0x00000000c001e5bc                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e5e8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e755        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e758       0x2c hw/cpu.32
                0x00000000c001e758                vtable for CPU
 .rodata.str1.1
                0x00000000c001e784       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e7c0       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e808       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e84d        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001e857       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001e8ab       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001e8d7      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001eaa3       0x57 thr/prcssthr.32
 *fill*         0x00000000c001eafa        0x2 
 .rodata.str1.4
                0x00000000c001eafc      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ec08       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ec08       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ec08       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ec08        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001ec08       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001eca8       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001ecd8      0x182 arch/i386/hal.32
                                        0x191 (size before relaxing)
 *fill*         0x00000000c001ee5a        0x2 
 .rodata.str1.4
                0x00000000c001ee5c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001eecf       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001eee4       0x3c arch/i386/rtc.32
                0x00000000c001eee4                vtable for RTC
 .rodata.str1.1
                0x00000000c001ef20       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001ef61        0x3 
 .rodata._ZTV3FAT
                0x00000000c001ef64       0x68 fs/fat/vfslink.32
                0x00000000c001ef64                vtable for FAT
 .rodata.str1.1
                0x00000000c001efcc       0x76 fs/iso9660/vfslink.32
 *fill*         0x00000000c001f042        0x2 
 .rodata._ZTV7ISO9660
                0x00000000c001f044       0x68 fs/iso9660/vfslink.32
                0x00000000c001f044                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f0ac       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f0f0       0x34 hal/sound/sndcard.32
                0x00000000c001f0f0                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f124       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f163       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f19b       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f23c       0x2c hw/bus/pci.32
                0x00000000c001f23c                vtable for PCI
 .rodata.str1.1
                0x00000000c001f268       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f2ef        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f2f0       0x2c hw/diskctrl/ide.32
                0x00000000c001f2f0                vtable for IDE
 .rodata.str1.4
                0x00000000c001f31c       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f340       0x2c hw/diskctrl/satabus.32
                0x00000000c001f340                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f36c       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f37e        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f380       0x38 hw/diskphys/ata.32
                0x00000000c001f380                vtable for ATA
 .rodata.str1.1
                0x00000000c001f3b8        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f3c5        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f3c8       0x38 hw/diskphys/atapi.32
                0x00000000c001f3c8                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f400       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f47c       0x38 hw/diskphys/sata.32
                0x00000000c001f47c                vtable for SATA
 .rodata.str1.1
                0x00000000c001f4b4      0x158 hw/diskphys/satapi.32
                                        0x165 (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f60c       0x38 hw/diskphys/satapi.32
                0x00000000c001f60c                vtable for SATAPI
 .rodata        0x00000000c001f644        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f64c       0x2c hw/intctrl/apic.32
                0x00000000c001f64c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f678       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f693        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f694       0x30 hw/timer/apictimer.32
                0x00000000c001f694                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f6c4       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f6e1        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f6e4       0x30 hw/timer/pit.32
                0x00000000c001f6e4                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f714      0x261
 *(.data)
 .data          0x00000000c001f714        0x0 crti.32
 .data          0x00000000c001f714        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f714                __dso_handle
 .data          0x00000000c001f718        0x0 acpica/utclib.32
 .data          0x00000000c001f718        0x0 core/malloc.32
 .data          0x00000000c001f718        0x0 libk/ctype.32
 .data          0x00000000c001f718        0x0 libk/string.32
 .data          0x00000000c001f718        0x0 fs/fat/diskio.32
 .data          0x00000000c001f718        0x0 fs/fat/ff.32
 .data          0x00000000c001f718        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f718        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f718        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f718        0x0 compat/inlines.32
 .data          0x00000000c001f718        0x0 compat/resolve.32
 .data          0x00000000c001f718        0x0 core/computer.32
 .data          0x00000000c001f718        0x0 core/gdt.32
 .data          0x00000000c001f718        0x0 core/idle.32
 .data          0x00000000c001f718        0x0 core/idt.32
 .data          0x00000000c001f718        0x4 core/kheap.32
 .data          0x00000000c001f71c        0x0 core/main.32
 .data          0x00000000c001f71c        0x4 core/physmgr.32
                0x00000000c001f71c                Phys::bitmap
 .data          0x00000000c001f720        0x0 core/pipe.32
 .data          0x00000000c001f720       0x60 core/terminal.32
                0x00000000c001f720                VgaText::hiddenOut
                0x00000000c001f740                ansiToVGAMappings
 .data          0x00000000c001f780        0x0 core/tss.32
 .data          0x00000000c001f780        0x4 core/unixfile.32
                0x00000000c001f780                UnixFile::nextFd
 .data          0x00000000c001f784       0x15 core/virtmgr.32
                0x00000000c001f784                Virt::pageAllocPtr
                0x00000000c001f788                Virt::bitmap
                0x00000000c001f78c                Virt::swapfileSectorsPerPage
                0x00000000c001f790                Virt::swapfileLength
                0x00000000c001f794                Virt::swapfileSector
                0x00000000c001f798                Virt::swapfileDrive
 *fill*         0x00000000c001f799        0x3 
 .data          0x00000000c001f79c        0x4 coreobjs/c++.32
                0x00000000c001f79c                __stack_chk_guard
 .data          0x00000000c001f7a0        0x0 dbg/kconsole.32
 .data          0x00000000c001f7a0        0x0 fs/vfs.32
 .data          0x00000000c001f7a0        0x0 hal/bus.32
 .data          0x00000000c001f7a0        0x0 hal/buzzer.32
 .data          0x00000000c001f7a0        0x0 hal/clock.32
 .data          0x00000000c001f7a0        0x0 hal/device.32
 .data          0x00000000c001f7a0        0x0 hal/diskctrl.32
 .data          0x00000000c001f7a0        0x0 hal/diskphys.32
 .data          0x00000000c001f7a0        0x0 hal/fpu.32
 .data          0x00000000c001f7a0        0x0 hal/intctrl.32
 .data          0x00000000c001f7a0        0x0 hal/keybrd.32
 .data          0x00000000c001f7a0        0x0 hal/logidisk.32
 .data          0x00000000c001f7a0        0x0 hal/mouse.32
 .data          0x00000000c001f7a0        0x0 hal/partition.32
 .data          0x00000000c001f7a0        0x0 hal/serial.32
 .data          0x00000000c001f7a0        0x0 hal/timer.32
 .data          0x00000000c001f7a0        0x0 hal/vcache.32
 .data          0x00000000c001f7a0        0x0 hal/video.32
 .data          0x00000000c001f7a0       0x10 hw/acpi.32
                0x00000000c001f7a0                legacyIRQRemaps
 .data          0x00000000c001f7b0        0x4 hw/cpu.32
                0x00000000c001f7b0                lastCode
 *fill*         0x00000000c001f7b4        0xc 
 .data          0x00000000c001f7c0      0x142 krnl/bootmsg.32
                0x00000000c001f7c0                KiSplashScreen
 *fill*         0x00000000c001f902       0x1e 
 .data          0x00000000c001f920       0x4d krnl/env.32
                0x00000000c001f920                defaultSysEnv
 .data          0x00000000c001f96d        0x0 krnl/panic.32
 .data          0x00000000c001f96d        0x0 krnl/powctrl.32
 .data          0x00000000c001f96d        0x0 krnl/syscalls.32
 .data          0x00000000c001f96d        0x0 reg/registry.32
 .data          0x00000000c001f96d        0x0 sys/eject.32
 .data          0x00000000c001f96d        0x0 sys/exit.32
 .data          0x00000000c001f96d        0x0 sys/getcwd.32
 .data          0x00000000c001f96d        0x0 sys/getpid.32
 .data          0x00000000c001f96d        0x0 sys/getramdata.32
 .data          0x00000000c001f96d        0x0 sys/getvgaptr.32
 .data          0x00000000c001f96d        0x0 sys/loaddll.32
 .data          0x00000000c001f96d        0x0 sys/read.32
 .data          0x00000000c001f96d        0x0 sys/sbrk.32
 .data          0x00000000c001f96d        0x0 sys/setcwd.32
 .data          0x00000000c001f96d        0x0 sys/settime.32
 .data          0x00000000c001f96d        0x0 sys/timezone.32
 .data          0x00000000c001f96d        0x0 sys/write.32
 .data          0x00000000c001f96d        0x0 sys/wsbe.32
 .data          0x00000000c001f96d        0x0 sys/yield.32
 .data          0x00000000c001f96d        0x0 thr/elf.32
 *fill*         0x00000000c001f96d        0x3 
 .data          0x00000000c001f970        0x4 thr/prcssthr.32
                0x00000000c001f970                Thr::nextPID
 .data          0x00000000c001f974        0x0 vm86/vm8086.32
 .data          0x00000000c001f974        0x0 arch/i386/hal.32
 .data          0x00000000c001f974        0x0 arch/i386/pic.32
 .data          0x00000000c001f974        0x0 arch/i386/rtc.32
 .data          0x00000000c001f974        0x0 arch/i386/vga.32
 .data          0x00000000c001f974        0x0 fs/fat/vfslink.32
 .data          0x00000000c001f974        0x0 fs/iso9660/helper.32
 .data          0x00000000c001f974        0x1 fs/iso9660/vfslink.32
                0x00000000c001f974                recentDriveletter
 .data          0x00000000c001f975        0x0 hal/sound/sndcard.32
 .data          0x00000000c001f975        0x0 hal/sound/sndport.32
 .data          0x00000000c001f975        0x0 hw/bus/isa.32
 .data          0x00000000c001f975        0x0 hw/bus/pci.32
 .data          0x00000000c001f975        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001f975        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001f975        0x0 hw/diskphys/ata.32
 .data          0x00000000c001f975        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001f975        0x0 hw/diskphys/sata.32
 .data          0x00000000c001f975        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001f975        0x0 hw/intctrl/apic.32
 .data          0x00000000c001f975        0x0 hw/timer/apictimer.32
 .data          0x00000000c001f975        0x0 hw/timer/pit.32
 .data          0x00000000c001f975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001f975        0x0 crtn.32
 .data          0x00000000c001f975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001f975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001f975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001f975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001f978        0x0
 .got           0x00000000c001f978        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001f978        0x0
 .got.plt       0x00000000c001f978        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001f978        0x0
 .igot.plt      0x00000000c001f978        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001f978        0x0
 .tm_clone_table
                0x00000000c001f978        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001f978        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001f975      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001f975        0x3 
 .eh_frame      0x00000000c001f978        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001f978        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001f978       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001f9d0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fa10       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fa7c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001fb00        0x0
 .rel.got       0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001fb00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001fb00     0x4d88
                0x00000000c001fb00                sbss = .
 *(COMMON)
 *fill*         0x00000000c001fb00        0x0 
 COMMON         0x00000000c001fb00       0xa0 fs/iso9660/iso9660.32
                0x00000000c001fb00                dcache
                0x00000000c001fb40                cdDriveLetter
                0x00000000c001fb60                icache
 *(.bss)
 .bss           0x00000000c001fba0        0x0 crti.32
 .bss           0x00000000c001fba0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001fbc0        0x4 acpica/utclib.32
 *fill*         0x00000000c001fbc4       0x1c 
 .bss           0x00000000c001fbe0      0x378 core/malloc.32
 .bss           0x00000000c001ff58        0x0 libk/ctype.32
 .bss           0x00000000c001ff58        0x0 libk/string.32
 .bss           0x00000000c001ff58        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001ff58        0x8 
 .bss           0x00000000c001ff60       0x88 fs/fat/ff.32
 .bss           0x00000000c001ffe8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001ffe8        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c001ffe8       0x18 
 .bss           0x00000000c0020000      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0020998        0x0 compat/inlines.32
 .bss           0x00000000c0020998        0x0 compat/resolve.32
 .bss           0x00000000c0020998        0x6 core/computer.32
                0x00000000c0020998                Krnl::computer
                0x00000000c002099c                Krnl::preemptionOn
                0x00000000c002099d                Krnl::schedulingOn
 *fill*         0x00000000c002099e        0x2 
 .bss           0x00000000c00209a0        0x6 core/gdt.32
                0x00000000c00209a0                gdtDescr
 .bss           0x00000000c00209a6        0x0 core/idle.32
 *fill*         0x00000000c00209a6        0x2 
 .bss           0x00000000c00209a8        0x6 core/idt.32
                0x00000000c00209a8                idtDescr
 .bss           0x00000000c00209ae        0x0 core/kheap.32
 *fill*         0x00000000c00209ae        0x2 
 .bss           0x00000000c00209b0        0x4 core/main.32
                0x00000000c00209b0                sysBootSettings
 .bss           0x00000000c00209b4       0x29 core/physmgr.32
                0x00000000c00209b4                Phys::forbidEvictions
                0x00000000c00209b8                Phys::currentPagePointer
                0x00000000c00209bc                Phys::highestMem
                0x00000000c00209c0                Phys::oldPercent
                0x00000000c00209c4                Phys::usedPages
                0x00000000c00209c8                Phys::usablePages
                0x00000000c00209cc                Phys::dmaUsage
 .bss           0x00000000c00209dd        0x0 core/pipe.32
 *fill*         0x00000000c00209dd        0x3 
 .bss           0x00000000c00209e0        0x9 core/terminal.32
                0x00000000c00209e0                terminalCycle
                0x00000000c00209e4                activeTerminal
                0x00000000c00209e8                VgaText::graphicMode
 *fill*         0x00000000c00209e9        0x1 
 .bss           0x00000000c00209ea        0x2 core/tss.32
                0x00000000c00209ea                doubleFaultSelector
 *fill*         0x00000000c00209ec       0x14 
 .bss           0x00000000c0020a00       0x84 core/unixfile.32
                0x00000000c0020a00                sfileLpt
                0x00000000c0020a40                sfileCom
                0x00000000c0020a64                sfileNul
                0x00000000c0020a68                sfilePnt
                0x00000000c0020a6c                sfileAux
                0x00000000c0020a70                sfileCon
                0x00000000c0020a74                initialFilesAdded
                0x00000000c0020a78                unixFileLinkedList
 .bss           0x00000000c0020a84       0x10 core/virtmgr.32
                0x00000000c0020a84                twswaps
                0x00000000c0020a88                swapBalance
                0x00000000c0020a8c                Virt::swapfileBitmap
                0x00000000c0020a90                firstVAS
 .bss           0x00000000c0020a94        0x0 coreobjs/c++.32
 .bss           0x00000000c0020a94        0x0 dbg/kconsole.32
 .bss           0x00000000c0020a94        0x4 fs/vfs.32
                0x00000000c0020a94                installedFilesystems
 .bss           0x00000000c0020a98        0x0 hal/bus.32
 .bss           0x00000000c0020a98        0x0 hal/buzzer.32
 .bss           0x00000000c0020a98        0x8 hal/clock.32
                0x00000000c0020a98                User::dstOn
                0x00000000c0020a99                User::timezoneHalfHourOffset
                0x00000000c0020a9c                User::timezoneHourOffset
 .bss           0x00000000c0020aa0        0x0 hal/device.32
 .bss           0x00000000c0020aa0        0x0 hal/diskctrl.32
 .bss           0x00000000c0020aa0        0x0 hal/diskphys.32
 .bss           0x00000000c0020aa0        0x0 hal/fpu.32
 .bss           0x00000000c0020aa0     0x2000 hal/intctrl.32
                0x00000000c0020aa0                INT_contexts
                0x00000000c0021aa0                INT_handlers
 .bss           0x00000000c0022aa0      0x429 hal/keybrd.32
                0x00000000c0022aa0                keyboardWaitingTaskList
                0x00000000c0022aa4                keyboardSetupYet
                0x00000000c0022aa8                guiKeyboardHandler
                0x00000000c0022ac0                keystates
 *fill*         0x00000000c0022ec9       0x17 
 .bss           0x00000000c0022ee0       0x88 hal/logidisk.32
                0x00000000c0022ee0                diskAssignments
                0x00000000c0022f00                disks
 .bss           0x00000000c0022f68        0x4 hal/mouse.32
                0x00000000c0022f68                guiMouseHandler
 .bss           0x00000000c0022f6c        0x0 hal/partition.32
 .bss           0x00000000c0022f6c        0x0 hal/serial.32
 .bss           0x00000000c0022f6c        0x4 hal/timer.32
                0x00000000c0022f6c                milliTenthsSinceBoot
 .bss           0x00000000c0022f70        0x0 hal/vcache.32
 .bss           0x00000000c0022f70        0x4 hal/video.32
                0x00000000c0022f70                screen
 *fill*         0x00000000c0022f74        0xc 
 .bss           0x00000000c0022f80      0x480 hw/acpi.32
                0x00000000c0022f80                systemSleepFunction
                0x00000000c0022f84                systemResetFunction
                0x00000000c0022f88                systemShutdownFunction
                0x00000000c0022f8c                nextACPITable
                0x00000000c0022fa0                acpiTables
                0x00000000c00231a0                usingXSDT
                0x00000000c00231a4                MADTpointer
                0x00000000c00231a8                RSDTpointer
                0x00000000c00231ac                RSDPpointer
                0x00000000c00231b0                nextAPICNMI
                0x00000000c00231c0                apicNMIInfo
                0x00000000c0023240                legacyIRQFlags
                0x00000000c0023260                ioapicDiscoveryNumber
                0x00000000c0023280                ioapicFoundInMADT
                0x00000000c00232a0                ioapicAddresses
                0x00000000c0023320                ioapicGSIBase
                0x00000000c00233a0                processorDiscoveryNumber
                0x00000000c00233c0                matchingAPICID
                0x00000000c00233e0                processorID
 .bss           0x00000000c0023400       0x10 hw/cpu.32
                0x00000000c0023400                lastD
                0x00000000c0023404                lastC
                0x00000000c0023408                lastB
                0x00000000c002340c                lastA
 .bss           0x00000000c0023410        0x0 krnl/bootmsg.32
 .bss           0x00000000c0023410        0x8 krnl/env.32
                0x00000000c0023410                Krnl::userEnv
                0x00000000c0023414                Krnl::systemEnv
 .bss           0x00000000c0023418        0x1 krnl/panic.32
                0x00000000c0023418                KeKernelInPanic
 *fill*         0x00000000c0023419        0x7 
 .bss           0x00000000c0023420       0x48 krnl/powctrl.32
                0x00000000c0023420                Krnl::powCtrlOnBattery
                0x00000000c0023440                Krnl::currentPowerSettings
                0x00000000c0023464                Krnl::secondsSinceLastUserIO
 *fill*         0x00000000c0023468       0x18 
 .bss           0x00000000c0023480      0x200 krnl/syscalls.32
                0x00000000c0023480                systemCallHandlers
 .bss           0x00000000c0023680        0x0 reg/registry.32
 .bss           0x00000000c0023680        0x0 sys/eject.32
 .bss           0x00000000c0023680        0x0 sys/exit.32
 .bss           0x00000000c0023680        0x0 sys/getcwd.32
 .bss           0x00000000c0023680        0x0 sys/getpid.32
 .bss           0x00000000c0023680        0x0 sys/getramdata.32
 .bss           0x00000000c0023680        0x0 sys/getvgaptr.32
 .bss           0x00000000c0023680        0x0 sys/loaddll.32
 .bss           0x00000000c0023680        0x0 sys/read.32
 .bss           0x00000000c0023680        0x0 sys/sbrk.32
 .bss           0x00000000c0023680        0x0 sys/setcwd.32
 .bss           0x00000000c0023680        0x0 sys/settime.32
 .bss           0x00000000c0023680        0x0 sys/timezone.32
 .bss           0x00000000c0023680        0x0 sys/write.32
 .bss           0x00000000c0023680        0x0 sys/wsbe.32
 .bss           0x00000000c0023680        0x0 sys/yield.32
 .bss           0x00000000c0023680      0x7a4 thr/elf.32
                0x00000000c0023680                Thr::driverLookupNext
                0x00000000c00236a0                Thr::driverLookupLen
                0x00000000c00238a0                Thr::driverLookupAddr
                0x00000000c0023aa0                Thr::driverNameLookup
                0x00000000c0023ca0                Thr::kernelSymbols
                0x00000000c0023d20                Thr::kernelStringTable
                0x00000000c0023da0                Thr::kernelSymbolTable
                0x00000000c0023e20                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023e24        0x4 
 .bss           0x00000000c0023e28       0x68 thr/prcssthr.32
                0x00000000c0023e28                cleanerThread
                0x00000000c0023e2c                weNeedTheCleanerToNotBlock
                0x00000000c0023e30                retValLockStuff
                0x00000000c0023e34                retValSchedLock
                0x00000000c0023e38                lockStuffLock
                0x00000000c0023e3c                schedulerLock
                0x00000000c0023e40                taskSwitchesPostponedFlag
                0x00000000c0023e44                postponeTaskSwitchesCounter
                0x00000000c0023e48                irqDisableCounter
                0x00000000c0023e4c                terminatedTaskList
                0x00000000c0023e58                sleepingTaskList
                0x00000000c0023e64                taskList
                0x00000000c0023e70                kernelProcess
 *fill*         0x00000000c0023e90       0x10 
 .bss           0x00000000c0023ea0       0x40 vm86/vm8086.32
                0x00000000c0023ea0                Vm::vmRetV
                0x00000000c0023ea4                Vm::vmDone
                0x00000000c0023ea5                Vm::vmReady
                0x00000000c0023ea8                Vm::vm86Thread
                0x00000000c0023eac                Vm::vmToHostCommsPtr
                0x00000000c0023ec0                Vm::vmToHostComms
 .bss           0x00000000c0023ee0       0x14 arch/i386/hal.32
                0x00000000c0023ee0                apic
                0x00000000c0023ee4                fpuOwner
                0x00000000c0023ee8                coproLoadFunc
                0x00000000c0023eec                coproSaveFunc
                0x00000000c0023ef0                gpFaultIntercept
 .bss           0x00000000c0023ef4        0x0 arch/i386/pic.32
 .bss           0x00000000c0023ef4        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023ef6        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023ef6        0xa 
 .bss           0x00000000c0023f00       0xf0 fs/fat/vfslink.32
                0x00000000c0023f00                FAT::fats
                0x00000000c0023f20                FAT::vfsToFatRemaps
                0x00000000c0023fa0                fatToVFSRemaps
 .bss           0x00000000c0023ff0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0023ff0       0x10 
 .bss           0x00000000c0024000      0x820 fs/iso9660/vfslink.32
                0x00000000c0024000                iso9660Owner
                0x00000000c0024004                recentSector
                0x00000000c0024020                recentBuffer
 .bss           0x00000000c0024820        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0024820        0x0 hal/sound/sndport.32
 .bss           0x00000000c0024820        0x0 hw/bus/isa.32
 .bss           0x00000000c0024820        0xd hw/bus/pci.32
                0x00000000c0024820                thePCI
 .bss           0x00000000c002482d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002482d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002482d        0x3 
 .bss           0x00000000c0024830        0x8 hw/diskphys/ata.32
                0x00000000c0024830                ataSectorsWritten
                0x00000000c0024834                ataSectorsRead
 .bss           0x00000000c0024838        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024838        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0024838        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0024838        0x8 
 .bss           0x00000000c0024840       0x41 hw/intctrl/apic.32
                0x00000000c0024840                noOfIOAPICs
                0x00000000c0024860                ioapics
                0x00000000c0024880                IOAPICsSetupYet
 .bss           0x00000000c0024881        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024881        0x3 
 .bss           0x00000000c0024884        0x4 hw/timer/pit.32
                0x00000000c0024884                pitFreq
 .bss           0x00000000c0024888        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024888        0x0 crtn.32
 .bss           0x00000000c0024888        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0024888        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0024888        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0024888        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024888                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0029610                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
