Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c42a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002ff                asmQuickAcquireLock
                0x00000000c000031d                asmQuickReleaseLock
                0x00000000c0000329                asmAcquireLock
                0x00000000c000034a                asmReleaseLock
                0x00000000c000035d                loadGDT
                0x00000000c000037d                memcpy
 *fill*         0x00000000c0000382        0xe 
 .text          0x00000000c0000390      0x79e acpica/utclib.32
                0x00000000c0000390                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004d0                memset
                0x00000000c0000540                strlen
                0x00000000c0000570                strpbrk
                0x00000000c00005b0                strtok
                0x00000000c0000600                strcpy
                0x00000000c0000630                strncpy
                0x00000000c00006e0                strcmp
                0x00000000c0000730                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b2e      0xfad core/malloc.32
                0x00000000c0000c99                dlfree
                0x00000000c0000ff4                dlmalloc
                0x00000000c0001531                dlrealloc
                0x00000000c00016d4                dlmemalign
                0x00000000c00017f7                dlcalloc
                0x00000000c0001891                dlcfree
                0x00000000c0001896                dlindependent_calloc
                0x00000000c00018bb                dlindependent_comalloc
                0x00000000c00018d2                dlvalloc
                0x00000000c00018fd                dlpvalloc
                0x00000000c0001933                dlmalloc_trim
                0x00000000c0001940                dlmalloc_usable_size
                0x00000000c0001971                dlmallinfo
                0x00000000c0001a40                dlmalloc_stats
                0x00000000c0001a51                dlmallopt
 *fill*         0x00000000c0001adb        0x1 
 .text          0x00000000c0001adc      0x1f2 libk/ctype.32
                0x00000000c0001adc                isblank
                0x00000000c0001afc                iscntrl
                0x00000000c0001b1c                isdigit
                0x00000000c0001b38                islower
                0x00000000c0001b54                isspace
                0x00000000c0001b7c                isupper
                0x00000000c0001b98                isalpha
                0x00000000c0001bc8                isalnum
                0x00000000c0001bf8                ispunct
                0x00000000c0001c38                isgraph
                0x00000000c0001c68                isprint
                0x00000000c0001c90                isxdigit
 .text          0x00000000c0001cce        0x0 libk/string.32
 .text          0x00000000c0001cce       0x51 fs/fat/diskio.32
                0x00000000c0001cce                disk_status
                0x00000000c0001cd1                disk_initialize
                0x00000000c0001cd4                disk_read
                0x00000000c0001cea                disk_write
                0x00000000c0001d00                disk_ioctl
 .text          0x00000000c0001d1f     0x3d4b fs/fat/ff.32
                0x00000000c0003abb                f_mount
                0x00000000c0003b1d                f_open
                0x00000000c0003de8                f_read
                0x00000000c0003fe7                f_write
                0x00000000c000421b                f_sync
                0x00000000c00042d0                f_close
                0x00000000c00042ff                f_lseek
                0x00000000c00044a6                f_opendir
                0x00000000c0004571                f_closedir
                0x00000000c0004593                f_readdir
                0x00000000c0004625                f_stat
                0x00000000c00046a4                f_getfree
                0x00000000c00047a6                f_truncate
                0x00000000c000488a                f_unlink
                0x00000000c00049ac                f_mkdir
                0x00000000c0004b47                f_rename
                0x00000000c0004cfd                f_chmod
                0x00000000c0004da6                f_utime
                0x00000000c0004e54                f_getlabel
                0x00000000c0004fa5                f_setlabel
                0x00000000c0005135                f_expand
                0x00000000c0005295                f_mkfs
 *fill*         0x00000000c0005a6a        0x2 
 .text          0x00000000c0005a6c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a6c                ff_memalloc
                0x00000000c0005a84                ff_memfree
 *fill*         0x00000000c0005a9b        0x1 
 .text          0x00000000c0005a9c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a9c                ff_uni2oem
                0x00000000c0005b3c                ff_oem2uni
                0x00000000c0005bb4                ff_wtoupper
 .text          0x00000000c0005d44      0xc76 fs/iso9660/iso9660.32
                0x00000000c0005f63                isoReadDiscSector
                0x00000000c0005ffe                strnicmp
                0x00000000c00062b1                stricmp
                0x00000000c00062fd                iso_open
                0x00000000c0006387                iso_close
                0x00000000c00063a5                iso_read
                0x00000000c00064bb                iso_seek
                0x00000000c000653f                iso_tell
                0x00000000c0006570                iso_total
                0x00000000c000659b                fn_postprocess
                0x00000000c00065c1                iso_readdir
                0x00000000c00067b2                iso_reset
                0x00000000c00067bf                init_percd
                0x00000000c00068b9                iso_ioctl
                0x00000000c00068c1                fs_iso9660_init
                0x00000000c000694a                fs_iso9660_shutdown
 .text          0x00000000c00069ba      0x685 core/computer.32
                0x00000000c00069ba                Computer::close(int, int, void*)
                0x00000000c00069ff                Krnl::firstTask()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006be4                Computer::setBootMessage(char const*)
                0x00000000c0006be6                Computer::detectFeatures()
                0x00000000c0006df0                Computer::displayFeatures()
                0x00000000c0006df2                Computer::rdmsr(unsigned int)
                0x00000000c0006e1e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006e56                Computer::shutdown()
                0x00000000c0006e6e                Computer::restart()
                0x00000000c0006e86                Computer::sleep()
                0x00000000c0006e9a                Computer::nmiEnabled()
                0x00000000c0006ea6                Computer::readCMOS(unsigned char)
                0x00000000c0006ec0                Computer::enableNMI(bool)
                0x00000000c0006ed8                Computer::open(int, int, void*)
                0x00000000c0006fac                Computer::disableNMI()
                0x00000000c0006fbc                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006fda                Computer::handleNMI()
 *fill*         0x00000000c000703f        0x1 
 .text          0x00000000c0007040      0x1cf core/gdt.32
                0x00000000c0007040                GDTEntry::setBase(unsigned int)
                0x00000000c000705c                GDTEntry::setLimit(unsigned int)
                0x00000000c000707a                GDT::GDT()
                0x00000000c000707a                GDT::GDT()
                0x00000000c0007090                GDT::addEntry(GDTEntry)
                0x00000000c00070b2                GDT::getNumberOfEntries()
                0x00000000c00070ba                GDT::flush()
                0x00000000c00070dc                GDT::setup()
 .text          0x00000000c000720f       0x1d core/idle.32
                0x00000000c000720f                idleFunction(void*)
 .text          0x00000000c000722c      0x464 core/idt.32
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000729e                IDTEntry::setOffset(unsigned int)
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00072be                IDT::addEntry(IDTEntry, int)
                0x00000000c00072d8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007310                IDT::flush()
                0x00000000c000732a                IDT::setup()
 .text          0x00000000c0007690      0x193 core/kheap.32
                0x00000000c0007690                sbrk
                0x00000000c0007725                mmap
                0x00000000c000773b                munmap
                0x00000000c0007751                liballoc_lock()
                0x00000000c000775e                liballoc_unlock()
                0x00000000c0007772                liballoc_alloc(int)
                0x00000000c000778a                liballoc_free(void*, int)
                0x00000000c00077a5                realloc
                0x00000000c00077b9                malloc
                0x00000000c00077d9                free
                0x00000000c00077e9                rfree
                0x00000000c00077f9                calloc
 .text          0x00000000c0007823       0xc3 core/main.32
                0x00000000c0007823                KeEntryPoint
 .text          0x00000000c00078e6      0x5dc core/physmgr.32
                0x00000000c00078e6                Phys::allocateDMA(unsigned long)
                0x00000000c00079bd                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c00079f0                Phys::setPageState(unsigned long, bool)
                0x00000000c0007a22                Phys::getPageState(unsigned long)
                0x00000000c0007a43                Phys::freePage(unsigned long)
                0x00000000c0007aa5                Phys::allocatePage()
                0x00000000c0007b63                Phys::allocateContiguousPages(int)
                0x00000000c0007bbf                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007bf7                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007ec2      0x273 core/pipe.32
                0x00000000c0007ec2                Pipe::isAtty()
                0x00000000c0007ec6                Pipe::~Pipe()
                0x00000000c0007ec6                Pipe::~Pipe()
                0x00000000c0007eea                Pipe::~Pipe()
                0x00000000c0007f12                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007fd2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00080ce                Pipe::Pipe(int)
                0x00000000c00080ce                Pipe::Pipe(int)
 *fill*         0x00000000c0008135        0x1 
 .text          0x00000000c0008136      0xaa0 core/terminal.32
                0x00000000c0008136                VgaText::isAtty()
                0x00000000c000813a                VgaText::~VgaText()
                0x00000000c000813a                VgaText::~VgaText()
                0x00000000c000815e                VgaText::~VgaText()
                0x00000000c0008188                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00081a8                setTerminalScrollLock(bool)
                0x00000000c00081a9                doTerminalCycle()
                0x00000000c00081aa                addToTerminalCycle(VgaText*)
                0x00000000c00081ab                scrollTerminalScrollLock(int)
                0x00000000c00081ac                VgaText::updateTitle()
                0x00000000c00081ae                VgaText::load()
                0x00000000c00081b0                VgaText::updateCursor()
                0x00000000c00081c6                VgaText::doANSI_SGR(int)
                0x00000000c000823a                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000824a                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000825a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000827a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008286                VgaText::setTitleColour(VgaColour)
                0x00000000c0008292                VgaText::setTitle(char*)
                0x00000000c0008294                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00082a6                VgaText::scrollScreen()
                0x00000000c000833e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008350                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00083e0                VgaText::getCursorX()
                0x00000000c00083e8                VgaText::getCursorY()
                0x00000000c00083f0                VgaText::setCursor(int, int)
                0x00000000c0008407                setActiveTerminal(VgaText*)
                0x00000000c0008452                VgaText::clearScreen()
                0x00000000c00084a0                VgaText::setCursorX(int)
                0x00000000c00084b8                VgaText::setCursorY(int)
                0x00000000c00084d0                VgaText::incrementCursor(bool)
                0x00000000c0008524                VgaText::decrementCursor(bool)
                0x00000000c0008546                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008614                VgaText::putchar(char)
                0x00000000c0008700                VgaText::putx(unsigned int)
                0x00000000c0008746                VgaText::puts(char const*)
                0x00000000c000876c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00087b8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000890a                VgaText::VgaText(char const*)
                0x00000000c000890a                VgaText::VgaText(char const*)
                0x00000000c0008a56                VgaText::receiveKey(unsigned char)
                0x00000000c0008bb0                VgaText::doUpdate()
                0x00000000c0008bb1                newTerminal(char*)
 *fill*         0x00000000c0008bd6        0x2 
 .text          0x00000000c0008bd8      0x1a1 core/tss.32
                0x00000000c0008bd8                TSS::TSS()
                0x00000000c0008bd8                TSS::TSS()
                0x00000000c0008be8                TSS::setESP(unsigned long)
                0x00000000c0008bfc                TSS::flush()
                0x00000000c0008c1c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008d79        0x1 
 .text          0x00000000c0008d7a      0x4c2 core/unixfile.32
                0x00000000c0008d7a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008dd0                ReservedFilename::isAtty()
                0x00000000c0008dec                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008e4a                UnixFile::getFileDescriptor()
                0x00000000c0008e52                UnixFile::UnixFile(int)
                0x00000000c0008e52                UnixFile::UnixFile(int)
                0x00000000c0009002                ReservedFilename::ReservedFilename(int)
                0x00000000c0009002                ReservedFilename::ReservedFilename(int)
                0x00000000c0009034                UnixFile::~UnixFile()
                0x00000000c0009034                UnixFile::~UnixFile()
                0x00000000c00090cc                UnixFile::~UnixFile()
                0x00000000c00090f4                ReservedFilename::~ReservedFilename()
                0x00000000c00090f4                ReservedFilename::~ReservedFilename()
                0x00000000c0009118                ReservedFilename::~ReservedFilename()
                0x00000000c000913f                getFromFileDescriptor(int)
 .text          0x00000000c000923c     0x1166 core/virtmgr.32
                0x00000000c000923c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009271                Virt::getPageState(unsigned long)
                0x00000000c0009295                Virt::allocateKernelVirtualPages(int)
                0x00000000c00093a6                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00093c4                Virt::swapIDToSector(unsigned long)
                0x00000000c00093d6                Virt::allocateSwapfilePage()
                0x00000000c0009454                Virt::virtualMemorySetup()
                0x00000000c000949f                Virt::setupPageSwapping(int)
                0x00000000c0009510                VAS::VAS()
                0x00000000c0009510                VAS::VAS()
                0x00000000c000954c                VAS::VAS(VAS*)
                0x00000000c000954c                VAS::VAS(VAS*)
                0x00000000c000957a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00095a6                VAS::getPageTableEntry(unsigned long)
                0x00000000c00095c5                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00096ea                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000970e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009728                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009768                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000979c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00097c6                VAS::~VAS()
                0x00000000c00097c6                VAS::~VAS()
                0x00000000c000992a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009a2e                VAS::allocatePages(int, int)
                0x00000000c0009c06                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009c24                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009cea                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009dd8                VAS::VAS(bool)
                0x00000000c0009dd8                VAS::VAS(bool)
                0x00000000c000a058                VAS::evict(unsigned long)
                0x00000000c000a11a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a208                VAS::scanForEviction()
                0x00000000c000a2e8                mapVASFirstTime
 .text          0x00000000c000a3a2       0x5f coreobjs/c++.32
                0x00000000c000a3a2                __cxa_atexit
                0x00000000c000a3a5                __cxa_finalize
                0x00000000c000a3a6                __stack_chk_fail
                0x00000000c000a3dc                __cxa_pure_virtual
                0x00000000c000a3ed                operator new[](unsigned long)
                0x00000000c000a3f2                operator delete(void*, unsigned long)
                0x00000000c000a3f7                operator delete[](void*)
                0x00000000c000a3fc                operator delete[](void*, unsigned long)
 .text          0x00000000c000a401      0x21c dbg/kconsole.32
                0x00000000c000a401                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a46c                Dbg::logc(char)
                0x00000000c000a48c                Dbg::logs(char*)
                0x00000000c000a4a9                Dbg::logWriteInt(unsigned int)
                0x00000000c000a4c7                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a4e8                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a61d        0x1 
 .text          0x00000000c000a61e      0xc5c fs/vfs.32
                0x00000000c000a61e                File::read(unsigned long long, void*, int*)
                0x00000000c000a676                File::write(unsigned long long, void*, int*)
                0x00000000c000a6ce                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a726                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a754                File::isAtty()
                0x00000000c000a758                Directory::isAtty()
                0x00000000c000a75c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a762                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a768                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a76e                File::~File()
                0x00000000c000a76e                File::~File()
                0x00000000c000a792                File::~File()
                0x00000000c000a7bc                Directory::~Directory()
                0x00000000c000a7bc                Directory::~Directory()
                0x00000000c000a7e0                Directory::~Directory()
                0x00000000c000a80a                Filesystem::Filesystem()
                0x00000000c000a80a                Filesystem::Filesystem()
                0x00000000c000a82e                Filesystem::~Filesystem()
                0x00000000c000a82e                Filesystem::~Filesystem()
                0x00000000c000a83c                Filesystem::~Filesystem()
                0x00000000c000a860                Fs::getcwd(Process*, char*, int)
                0x00000000c000a88a                Fs::initVFS()
                0x00000000c000a8b4                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aa5e                File::File(char const*, Process*)
                0x00000000c000aa5e                File::File(char const*, Process*)
                0x00000000c000ab1e                File::open(FileOpenMode)
                0x00000000c000ab7c                File::close()
                0x00000000c000abdc                File::seek(unsigned long long)
                0x00000000c000ac32                File::tell(unsigned long long*)
                0x00000000c000ac82                File::rewind()
                0x00000000c000ac96                File::unlink()
                0x00000000c000ace2                File::rename(char const*)
                0x00000000c000ad30                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ad8c                File::exists()
                0x00000000c000adca                File::stat(unsigned long long*, bool*)
                0x00000000c000ae2b                Fs::setcwd(Process*, char*)
                0x00000000c000af88                Directory::Directory(char const*, Process*)
                0x00000000c000af88                Directory::Directory(char const*, Process*)
                0x00000000c000b048                Directory::open()
                0x00000000c000b0a4                Directory::close()
                0x00000000c000b104                Directory::unlink()
                0x00000000c000b150                Directory::rename(char const*)
                0x00000000c000b19e                Directory::exists()
                0x00000000c000b1dc                Directory::read(dirent*)
                0x00000000c000b228                Directory::create()
                0x00000000c000b274                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b27a        0x2 
 .text          0x00000000c000b27c       0x86 hal/bus.32
                0x00000000c000b27c                Bus::Bus(char const*)
                0x00000000c000b27c                Bus::Bus(char const*)
                0x00000000c000b2b4                Bus::~Bus()
                0x00000000c000b2b4                Bus::~Bus()
                0x00000000c000b2d8                Bus::~Bus()
 .text          0x00000000c000b302       0x96 hal/buzzer.32
                0x00000000c000b302                beepThread(void*)
                0x00000000c000b33f                Krnl::beep(int, int, bool)
 .text          0x00000000c000b398      0x46d hal/clock.32
                0x00000000c000b398                User::loadClockSettings(int)
                0x00000000c000b3ea                Clock::Clock(char const*)
                0x00000000c000b3ea                Clock::Clock(char const*)
                0x00000000c000b420                Clock::~Clock()
                0x00000000c000b420                Clock::~Clock()
                0x00000000c000b444                Clock::~Clock()
                0x00000000c000b46e                Clock::timeInSecondsLocal()
                0x00000000c000b4b6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b50f                datetimeToSeconds(datetime_t)
                0x00000000c000b63c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b69c                secondsToDatetime(unsigned long long)
                0x00000000c000b7e0                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b805        0x1 
 .text          0x00000000c000b806      0x464 hal/device.32
                0x00000000c000b806                Device::hibernate()
                0x00000000c000b808                Device::wake()
                0x00000000c000b80a                Device::detect()
                0x00000000c000b80c                Device::disableLegacy()
                0x00000000c000b80e                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b810                DriverlessDevice::close(int, int, void*)
                0x00000000c000b814                DriverlessDevice::detect()
                0x00000000c000b816                DriverlessDevice::open(int, int, void*)
                0x00000000c000b82a                Device::~Device()
                0x00000000c000b82a                Device::~Device()
                0x00000000c000b838                Device::~Device()
                0x00000000c000b860                Device::findAndLoadDriver()
                0x00000000c000b86e                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000b894                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000b8d4                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b8fe                Device::getParent()
                0x00000000c000b90a                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b928                Device::addChild(Device*)
                0x00000000c000b96c                Device::removeAllChildren()
                0x00000000c000b9b2                Device::hibernateAll()
                0x00000000c000b9e2                Device::wakeAll()
                0x00000000c000ba12                Device::detectAll()
                0x00000000c000ba42                Device::disableLegacyAll()
                0x00000000c000ba44                Device::loadDriversForAll()
                0x00000000c000ba46                Device::closeAll()
                0x00000000c000ba7c                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bab2                Device::setName(char const*)
                0x00000000c000bac0                Device::Device(char const*)
                0x00000000c000bac0                Device::Device(char const*)
                0x00000000c000bbbc                Device::getName()
                0x00000000c000bbc6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbc6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbfc                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bc40                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bc6a        0x2 
 .text          0x00000000c000bc6c       0x86 hal/diskctrl.32
                0x00000000c000bc6c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bc6c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bca4                HardDiskController::~HardDiskController()
                0x00000000c000bca4                HardDiskController::~HardDiskController()
                0x00000000c000bcc8                HardDiskController::~HardDiskController()
 .text          0x00000000c000bcf2       0xe2 hal/diskphys.32
                0x00000000c000bcf2                PhysicalDisk::eject()
                0x00000000c000bcf6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bcf6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bd5e                PhysicalDisk::startCache()
                0x00000000c000bd86                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bd86                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bdaa                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000bdd4        0x0 hal/fpu.32
 .text          0x00000000c000bdd4      0x35d hal/intctrl.32
                0x00000000c000bdd4                int_handler
                0x00000000c000be5c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000bea4                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bfdc                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c010                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c08f                setupINTS()
                0x00000000c000c0ec                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c131        0x1 
 .text          0x00000000c000c132      0x7b4 hal/keybrd.32
                0x00000000c000c132                startGUI(void*)
                0x00000000c000c19e                startGUIVESA(void*)
                0x00000000c000c20a                sendKeyToTerminal(unsigned char)
                0x00000000c000c2d3                sendKeyboardToken(KeyboardToken)
                0x00000000c000c713                clearInternalKeybuffer(VgaText*)
                0x00000000c000c748                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000c85c                Keyboard::Keyboard(char const*)
                0x00000000c000c85c                Keyboard::Keyboard(char const*)
                0x00000000c000c898                Keyboard::~Keyboard()
                0x00000000c000c898                Keyboard::~Keyboard()
                0x00000000c000c8bc                Keyboard::~Keyboard()
 .text          0x00000000c000c8e6      0x3ea hal/logidisk.32
                0x00000000c000c8e6                LogicalDisk::close(int, int, void*)
                0x00000000c000c8ea                LogicalDisk::~LogicalDisk()
                0x00000000c000c8ea                LogicalDisk::~LogicalDisk()
                0x00000000c000c90e                LogicalDisk::~LogicalDisk()
                0x00000000c000c938                LogicalDisk::open(int, int, void*)
                0x00000000c000c94c                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000c984                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000c9ca                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c9ca                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ca80                LogicalDisk::assignDriveLetter()
                0x00000000c000cb36                LogicalDisk::mount()
                0x00000000c000cb7e                LogicalDisk::unmount()
                0x00000000c000cb8e                LogicalDisk::eject()
                0x00000000c000cba2                LogicalDisk::unassignDriveLetter()
                0x00000000c000cbf8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000cc64                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ccd0       0x86 hal/mouse.32
                0x00000000c000ccd0                Mouse::Mouse(char const*)
                0x00000000c000ccd0                Mouse::Mouse(char const*)
                0x00000000c000cd08                Mouse::~Mouse()
                0x00000000c000cd08                Mouse::~Mouse()
                0x00000000c000cd2c                Mouse::~Mouse()
 .text          0x00000000c000cd56      0x339 hal/partition.32
                0x00000000c000cd56                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cdfe                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d08f        0x1 
 .text          0x00000000c000d090       0x86 hal/serial.32
                0x00000000c000d090                Serial::Serial(char const*)
                0x00000000c000d090                Serial::Serial(char const*)
                0x00000000c000d0c8                Serial::~Serial()
                0x00000000c000d0c8                Serial::~Serial()
                0x00000000c000d0ec                Serial::~Serial()
 *fill*         0x00000000c000d116        0x2 
 .text          0x00000000c000d118      0x234 hal/timer.32
                0x00000000c000d118                Timer::Timer(char const*)
                0x00000000c000d118                Timer::Timer(char const*)
                0x00000000c000d150                Timer::~Timer()
                0x00000000c000d150                Timer::~Timer()
                0x00000000c000d174                Timer::~Timer()
                0x00000000c000d19e                Timer::read()
                0x00000000c000d1a9                setupTimer(int)
                0x00000000c000d1e4                timerHandler(unsigned int)
 .text          0x00000000c000d34c      0x3ce hal/vcache.32
                0x00000000c000d34c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d34c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d4b4                VCache::invalidateReadBuffer()
                0x00000000c000d4c4                VCache::writeWriteBuffer()
                0x00000000c000d510                VCache::~VCache()
                0x00000000c000d510                VCache::~VCache()
                0x00000000c000d564                VCache::~VCache()
                0x00000000c000d58c                VCache::write(unsigned long long, int, void*)
                0x00000000c000d6a2                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d71a      0x4b3 hal/video.32
                0x00000000c000d71a                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d766                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000d7d6                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000d854                Video::clearScreen(unsigned int)
                0x00000000c000d888                Video::putpixel(int, int, unsigned int)
                0x00000000c000d896                Video::Video(char const*)
                0x00000000c000d896                Video::Video(char const*)
                0x00000000c000d8cc                Video::~Video()
                0x00000000c000d8cc                Video::~Video()
                0x00000000c000d8f0                Video::~Video()
                0x00000000c000d91a                Video::isMonochrome()
                0x00000000c000d926                Video::getWidth()
                0x00000000c000d932                Video::getHeight()
                0x00000000c000d93e                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000d9fa                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000db62                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000dbcd        0x3 
 .text          0x00000000c000dbd0     0x1307 hw/acpi.32
                0x00000000c000dbd0                ACPI::close(int, int, void*)
                0x00000000c000dc88                findRSDP()
                0x00000000c000dd18                loadACPITables(unsigned char*)
                0x00000000c000df7c                findRSDT(unsigned char*)
                0x00000000c000e0cc                findDataTable(unsigned char*, char*)
                0x00000000c000e144                scanMADT()
                0x00000000c000e618                ACPI::ACPI()
                0x00000000c000e618                ACPI::ACPI()
                0x00000000c000e66c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e754                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000e81c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000e824                ACPI::detectPCI()
                0x00000000c000ea2c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ea80                ACPI::sleep()
                0x00000000c000ea9c                ACPI::open(int, int, void*)
 *fill*         0x00000000c000eed7        0x1 
 .text          0x00000000c000eed8      0xb95 hw/cpu.32
                0x00000000c000eed8                CPU::close(int, int, void*)
                0x00000000c000eedc                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000eef8                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000ef10                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ef84                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f008                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f036                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f064                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f092                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f0c0                CPU::CPU()
                0x00000000c000f0c0                CPU::CPU()
                0x00000000c000f14e                CPU::displayFeatures()
                0x00000000c000f150                CPU::detectFeatures()
                0x00000000c000f814                CPU::setupSMEP()
                0x00000000c000f820                CPU::setupUMIP()
                0x00000000c000f82a                CPU::setupTSC()
                0x00000000c000f834                CPU::setupLargePages()
                0x00000000c000f83e                CPU::setupPAT()
                0x00000000c000f87a                CPU::setupMTRR()
                0x00000000c000f87c                CPU::setupGlobalPages()
                0x00000000c000f886                CPU::allowUsermodeDataAccess()
                0x00000000c000f898                CPU::prohibitUsermodeDataAccess()
                0x00000000c000f8aa                CPU::setupSMAP()
                0x00000000c000f8b8                CPU::setupFeatures()
                0x00000000c000f984                CPU::open(int, int, void*)
 .text          0x00000000c000fa6d       0xd1 krnl/bootmsg.32
                0x00000000c000fa6d                KeDisplaySplashScreen()
                0x00000000c000fadb                KeSetBootMessage(char const*)
 .text          0x00000000c000fb3e      0x581 krnl/env.32
                0x00000000c000fb3e                EnvVarContainer::getEnv(char const*)
                0x00000000c000fb7c                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000fc3e                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000fc40                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000fe26                EnvVarContainer::__loadSystem()
                0x00000000c000fe40                EnvVarContainer::__loadUser()
                0x00000000c000fe42                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe42                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe64                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe64                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe94                Krnl::getEnv(Process*, char const*)
                0x00000000c000fef9                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000ff13                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000ff32                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000ff45                Krnl::deleteEnvSystem(char const*)
                0x00000000c000ff46                Krnl::deleteEnvUser(char const*)
                0x00000000c000ff47                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000ff48                Krnl::newProcessEnv(Process*)
                0x00000000c000ff6a                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000ffb6                Krnl::loadSystemEnv()
                0x00000000c000ffe4                Krnl::loadUserEnv()
                0x00000000c001000a                Krnl::flushEnv()
                0x00000000c001000b                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001002b                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00100bf       0x94 krnl/inlines.32
                0x00000000c00100bf                CPU::current()
                0x00000000c00100cb                operator new(unsigned long)
                0x00000000c00100d0                operator delete(void*)
                0x00000000c00100d5                disableIRQs()
                0x00000000c00100d7                enableIRQs()
                0x00000000c00100d9                lockScheduler()
                0x00000000c00100e1                unlockScheduler()
                0x00000000c00100f0                lockStuff()
                0x00000000c00100fe                unlockStuff()
                0x00000000c0010138                Virt::getAKernelVAS()
                0x00000000c001013e                __not_memcpy
 .text          0x00000000c0010153        0xc krnl/panic.32
                0x00000000c0010153                KePanic(char const*)
 .text          0x00000000c001015f      0x142 krnl/powctrl.32
                0x00000000c001015f                Krnl::powerThread(void*)
                0x00000000c001018d                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c00101a3                Krnl::userIOReceived()
                0x00000000c00101ae                Krnl::handlePowerButton()
                0x00000000c00101e3                Krnl::handleSleepButton()
                0x00000000c0010218                Krnl::setupPowerManager()
 *fill*         0x00000000c00102a1        0x3 
 .text          0x00000000c00102a4      0x190 krnl/resolve.32
                0x00000000c00102a4                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010434      0x33f krnl/signal.32
                0x00000000c0010434                KiDefaultSignalHandlerAbort(int)
                0x00000000c0010441                KiDefaultSignalHandlerTerminate(int)
                0x00000000c001044e                KiSigKill(int)
                0x00000000c001045b                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001045c                KiDefaultSignalHandlerPause(int)
                0x00000000c0010469                KiDefaultSignalHandlerResume(int)
                0x00000000c0010476                KeInitSignals()
                0x00000000c00104d1                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010536                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00105b2                KeCheckSignal(SigHandlerBlock*)
                0x00000000c0010738                KeCompleteSignal(SigHandlerBlock*, int)
 .text          0x00000000c0010773      0xcfe krnl/syscalls.32
                0x00000000c0010773                SysSeekDir(regs*)
                0x00000000c0010778                SysTellDir(regs*)
                0x00000000c001077d                SysVerify(regs*)
                0x00000000c0010787                SysGetArgc(regs*)
                0x00000000c0010797                SysTTYName(regs*)
                0x00000000c001079f                SysFormatDisk(regs*)
                0x00000000c001080c                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010856                SysGetDiskVolumeLabel(regs*)
                0x00000000c00108ab                SysShutdown(regs*)
                0x00000000c0010909                SysRealpath(regs*)
                0x00000000c001094c                SysReadDir(regs*)
                0x00000000c00109cc                SysIsATTY(regs*)
                0x00000000c0010a28                SysSeek(regs*)
                0x00000000c0010a81                SysTell(regs*)
                0x00000000c0010af0                SysSize(regs*)
                0x00000000c0010b65                SysSizeFromFilename(regs*)
                0x00000000c0010c18                SysClose(regs*)
                0x00000000c0010c78                SysOpenDir(regs*)
                0x00000000c0010d89                SysCloseDir(regs*)
                0x00000000c0010ddd                SysMakeDir(regs*)
                0x00000000c0010e4f                SysWait(regs*)
                0x00000000c0010e6c                SysNotImpl(regs*)
                0x00000000c0010e87                SysPanic(regs*)
                0x00000000c0010ea2                SysRmdir(regs*)
                0x00000000c0010f09                SysUnlink(regs*)
                0x00000000c0010f70                SysGetArgv(regs*)
                0x00000000c0010fbd                SysUSleep(regs*)
                0x00000000c0010fe6                SysSpawn(regs*)
                0x00000000c001104f                SysGetEnv(regs*)
                0x00000000c00110fe                SysSetFatAttrib(regs*)
                0x00000000c0011175                SysPipe(regs*)
                0x00000000c00111ba                SysGetUnixTime(regs*)
                0x00000000c00111ce                string_ends_with(char const*, char const*)
                0x00000000c0011218                SysOpen(regs*)
                0x00000000c001141f                KeSystemCall(regs*, void*)
 .text          0x00000000c0011471      0x50e reg/registry.32
                0x00000000c0011471                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00115c9                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001171e                Reg::getLine(char*, char*, char*)
                0x00000000c0011755                Reg::readInt(char*, char*, int*)
                0x00000000c0011840                Reg::readString(char*, char*, char*, int)
                0x00000000c00118c1                Reg::readBool(char*, char*, bool*)
                0x00000000c00118e6                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0011912                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001193e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001197f       0x36 sys/eject.32
                0x00000000c001197f                SysEject(regs*)
 .text          0x00000000c00119b5       0x18 sys/exit.32
                0x00000000c00119b5                SysExit(regs*)
 .text          0x00000000c00119cd       0x1f sys/getcwd.32
                0x00000000c00119cd                SysGetCwd(regs*)
 .text          0x00000000c00119ec        0xc sys/getpid.32
                0x00000000c00119ec                SysGetPID(regs*)
 .text          0x00000000c00119f8       0x1a sys/getramdata.32
                0x00000000c00119f8                SysGetRAMData(regs*)
 .text          0x00000000c0011a12       0x82 sys/getvgaptr.32
                0x00000000c0011a12                SysGetVGAPtr(regs*)
 .text          0x00000000c0011a94       0xa8 sys/loaddll.32
                0x00000000c0011a94                SysLoadDLL(regs*)
 .text          0x00000000c0011b3c       0x68 sys/read.32
                0x00000000c0011b3c                SysRead(regs*)
 .text          0x00000000c0011ba4       0x29 sys/registersignal.32
                0x00000000c0011ba4                SysRegisterSignal(regs*)
 .text          0x00000000c0011bcd       0x67 sys/sbrk.32
                0x00000000c0011bcd                SysSbrk(regs*)
 .text          0x00000000c0011c34       0x1c sys/setcwd.32
                0x00000000c0011c34                SysSetCwd(regs*)
 .text          0x00000000c0011c50       0x95 sys/settime.32
                0x00000000c0011c50                SysSetTime(regs*)
 .text          0x00000000c0011ce5       0x4a sys/timezone.32
                0x00000000c0011ce5                SysTimezone(regs*)
 .text          0x00000000c0011d2f       0x68 sys/write.32
                0x00000000c0011d2f                SysWrite(regs*)
 .text          0x00000000c0011d97       0x62 sys/wsbe.32
                0x00000000c0011d97                SysWsbe(regs*)
 .text          0x00000000c0011df9       0x25 sys/yield.32
                0x00000000c0011df9                SysYield(regs*)
 .text          0x00000000c0011e1e     0x11e5 thr/elf.32
                0x00000000c0011e1e                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00120aa                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00122c0                Thr::runtimeReferenceHelper()
                0x00000000c00122d3                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0012322                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00125e0                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012d16                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012d48                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012d7f                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012d99                Thr::loadDLL(char const*, bool)
                0x00000000c0012fca                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0013003        0x1 
 .text          0x00000000c0013004     0x1445 thr/prcssthr.32
                0x00000000c0013004                userModeEntryPoint(void*)
                0x00000000c001302c                changeTSS
                0x00000000c001305c                switchToThread(ThreadControlBlock*)
                0x00000000c0013110                Process::addArgs(char**)
                0x00000000c0013170                Process::Process(char const*, Process*, char**)
                0x00000000c0013170                Process::Process(char const*, Process*, char**)
                0x00000000c0013424                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013424                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001369c                taskStartupFunction
                0x00000000c00136a8                Semaphore::Semaphore(int)
                0x00000000c00136a8                Semaphore::Semaphore(int)
                0x00000000c00136d8                Mutex::Mutex()
                0x00000000c00136d8                Mutex::Mutex()
                0x00000000c00136ec                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00137e4                Process::createUserThread()
                0x00000000c0013804                setupMultitasking(void (*)())
                0x00000000c001390c                schedule()
                0x00000000c001399c                Semaphore::tryAcquire()
                0x00000000c0013a68                Semaphore::assertLocked(char const*)
                0x00000000c0013ae0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013b08                blockTask(TaskState)
                0x00000000c0013b38                waitTask(int, int*, int)
                0x00000000c0013b7c                milliTenthSleepUntil(unsigned int)
                0x00000000c0013c0c                milliTenthSleep(unsigned int)
                0x00000000c0013c1c                sleep(unsigned int)
                0x00000000c0013c38                Semaphore::acquire()
                0x00000000c0013cf4                taskReturned
                0x00000000c0013d30                Thr::processFromPID(int)
                0x00000000c0013dd0                unblockTask(ThreadControlBlock*)
                0x00000000c0013e74                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0014140                cleanerTaskFunction(void*)
                0x00000000c0014230                terminateTask(int)
                0x00000000c00142fc                Thr::terminateFromIRQ(int)
                0x00000000c001430c                Semaphore::release()
 .text          0x00000000c0014449      0xb93 vm86/vm8086.32
                0x00000000c0014449                Vm::inbv(unsigned short)
                0x00000000c001445c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0014492                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00144a2                Vm::getSegment(unsigned int)
                0x00000000c00144aa                Vm::getOffset(unsigned int)
                0x00000000c00144af                Vm::mainloop2()
                0x00000000c00144e9                Vm::mainVm8086Loop(void*)
                0x00000000c00144f9                Vm::mainloop3(unsigned long)
                0x00000000c001451f                Vm::initialise8086()
                0x00000000c0014562                Vm::finish8086()
                0x00000000c00145c3                Vm::getOutput8086(unsigned char*)
                0x00000000c00145e8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00146a1                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014809                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0014893                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00148a4                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00148b6                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00148c7                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00148dc                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00148f2                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0014907                Vm::faultHandler(regs*)
 .text          0x00000000c0014fdc      0xa53 arch/i386/hal.32
                0x00000000c0014fdc                noCopro(unsigned long)
                0x00000000c0014fdd                nmiHandler(regs*, void*)
                0x00000000c0014ff6                doubleFault(regs*, void*)
                0x00000000c001500f                displayDebugInfo(regs*)
                0x00000000c0015330                HalSystemIdle()
                0x00000000c00153a6                displayProgramFault(char const*)
                0x00000000c00153f2                gpFault(regs*, void*)
                0x00000000c0015457                pgFault(regs*, void*)
                0x00000000c00154dd                otherISRHandler(regs*, void*)
                0x00000000c0015511                opcodeFault(regs*, void*)
                0x00000000c0015591                i386SaveCoprocessor(void*)
                0x00000000c00155a5                i386LoadCoprocessor(void*)
                0x00000000c00155b9                x87EmulHandler(regs*, void*)
                0x00000000c0015656                HalInitialiseCoprocessor()
                0x00000000c0015704                HalPanic(char const*)
                0x00000000c00157fd                HalQueryPerformanceCounter()
                0x00000000c0015818                HalInitialise()
                0x00000000c00159be                HalMakeBeep(int)
                0x00000000c00159f8                HalGetRand()
                0x00000000c00159fb                HalEndOfInterrupt(int)
                0x00000000c0015a2c                HalRestart()
                0x00000000c0015a2d                HalShutdown()
                0x00000000c0015a2e                HalSleep()
 *fill*         0x00000000c0015a2f        0x1 
 .text          0x00000000c0015a30      0x2f4 arch/i386/pic.32
                0x00000000c0015a30                picIoWait()
                0x00000000c0015a38                picDisable()
                0x00000000c0015a6c                picGetIRQReg(int)
                0x00000000c0015af0                picOpen()
                0x00000000c0015c80                picEOI(int)
 .text          0x00000000c0015d24      0x64d arch/i386/rtc.32
                0x00000000c0015d24                RTC::open(int, int, void*)
                0x00000000c0015d28                RTC::close(int, int, void*)
                0x00000000c0015d2c                RTC::timeInSecondsUTC()
                0x00000000c0015d3e                RTC::timeInDatetimeUTC()
                0x00000000c0015d64                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015da2                RTC::~RTC()
                0x00000000c0015da2                RTC::~RTC()
                0x00000000c0015dc6                RTC::~RTC()
                0x00000000c0015df0                RTC::get_update_in_progress_flag()
                0x00000000c0015e08                RTC::completeRTCRefresh()
                0x00000000c00160c0                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0016273                rtcIRQHandler(regs*, void*)
                0x00000000c00162b8                RTC::RTC()
                0x00000000c00162b8                RTC::RTC()
 *fill*         0x00000000c0016371        0x3 
 .text          0x00000000c0016374      0x203 arch/i386/vga.32
                0x00000000c0016374                HalConsoleScroll(int, int)
                0x00000000c001647c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00164e8                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0016577        0x1 
 .text          0x00000000c0016578     0x13e7 fs/fat/vfslink.32
                0x00000000c0016578                FAT::getName()
                0x00000000c0016580                FAT::tell(void*, unsigned long long*)
                0x00000000c00165bc                FAT::stat(void*, unsigned long long*)
                0x00000000c00165f8                FAT::~FAT()
                0x00000000c00165f8                FAT::~FAT()
                0x00000000c001661c                FAT::~FAT()
                0x00000000c0016644                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00166e8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00167ac                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016980                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016b98                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016d58                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016ec4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016f24                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016f84                FAT::close(void*)
                0x00000000c0016fd8                FAT::closeDir(void*)
                0x00000000c001702c                FAT::seek(void*, unsigned long long)
                0x00000000c0017084                fatWrapperReadDisk
                0x00000000c00170c8                fatWrapperWriteDisk
                0x00000000c001710c                fatWrapperIoctl
                0x00000000c0017228                FAT::FAT()
                0x00000000c0017228                FAT::FAT()
                0x00000000c001727c                FAT::fixFilepath(char*)
                0x00000000c00172b8                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00173f0                FAT::openDir(char const*, void**)
                0x00000000c00174a0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017598                FAT::unlink(char const*)
                0x00000000c0017618                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00177a4                FAT::rename(char const*, char const*)
                0x00000000c0017870                FAT::mkdir(char const*)
                0x00000000c00178f0                FAT::exists(char const*)
 *fill*         0x00000000c001795f        0x1 
 .text          0x00000000c0017960       0xc6 fs/iso9660/helper.32
                0x00000000c0017960                isoReadDiscSectorHelper
                0x00000000c00179bc                iso_kprintf
                0x00000000c00179dc                iso_kprintfd
 .text          0x00000000c0017a26      0x586 fs/iso9660/vfslink.32
                0x00000000c0017a26                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017a2c                ISO9660::getName()
                0x00000000c0017a32                ISO9660::closeDir(void*)
                0x00000000c0017a3c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017a42                ISO9660::unlink(char const*)
                0x00000000c0017a48                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017a4e                ISO9660::rename(char const*, char const*)
                0x00000000c0017a54                ISO9660::mkdir(char const*)
                0x00000000c0017a5a                ISO9660::~ISO9660()
                0x00000000c0017a5a                ISO9660::~ISO9660()
                0x00000000c0017a7e                ISO9660::~ISO9660()
                0x00000000c0017aa6                ISO9660::exists(char const*)
                0x00000000c0017aba                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017b5a                ISO9660::openDir(char const*, void**)
                0x00000000c0017bea                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017c2a                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017c62                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017c98                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017cd2                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017da4                ISO9660::close(void*)
                0x00000000c0017dca                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017e97                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017f12                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017f84                ISO9660::ISO9660()
                0x00000000c0017f84                ISO9660::ISO9660()
 .text          0x00000000c0017fac      0x26c hal/sound/sndcard.32
                0x00000000c0017fac                SoundCard::beginPlayback()
                0x00000000c0017fba                SoundCard::stopPlayback()
                0x00000000c0017fc8                SoundCard::SoundCard(char const*)
                0x00000000c0017fc8                SoundCard::SoundCard(char const*)
                0x00000000c0018066                SoundCard::~SoundCard()
                0x00000000c0018066                SoundCard::~SoundCard()
                0x00000000c001808a                SoundCard::~SoundCard()
                0x00000000c00180b4                SoundCard::configureRates(int, int, int)
                0x00000000c00180e4                SoundCard::getSamples16(int, short*)
                0x00000000c0018140                SoundCard::getSamples32(int, int*)
                0x00000000c00181c6                SoundCard::addChannel(SoundPort*)
                0x00000000c0018204                SoundCard::removeChannel(int)
 .text          0x00000000c0018218      0x377 hal/sound/sndport.32
                0x00000000c0018218                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018218                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00182a4                SoundPort::~SoundPort()
                0x00000000c00182a4                SoundPort::~SoundPort()
                0x00000000c00182d8                SoundPort::unpause()
                0x00000000c00182e4                SoundPort::pause()
                0x00000000c00182f0                SoundPort::getBufferUsed()
                0x00000000c00182f8                SoundPort::getBufferSize()
                0x00000000c0018300                SoundPort::buffer16(short*, int)
                0x00000000c001838c                SoundPort::buffer32(int*, int)
                0x00000000c0018414                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00184d8                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001858f        0x0 hw/bus/isa.32
 *fill*         0x00000000c001858f        0x1 
 .text          0x00000000c0018590      0xb49 hw/bus/pci.32
                0x00000000c0018590                PCI::open(int, int, void*)
                0x00000000c00185ae                PCI::close(int, int, void*)
                0x00000000c00185b2                PCI::PCI()
                0x00000000c00185b2                PCI::PCI()
                0x00000000c001864c                PCI::readBAR8(unsigned int, int)
                0x00000000c0018668                PCI::readBAR16(unsigned int, int)
                0x00000000c0018686                PCI::readBAR32(unsigned int, int)
                0x00000000c00186a2                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c00186c2                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c00186e4                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0018704                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018772                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001881a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001883e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0018866                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c00188b0                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c00188d8                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c00188fc                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0018920                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018948                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00189ac                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018a94                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018d0e                PCI::checkBus(unsigned char)
                0x00000000c0018d34                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018ea6                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001901a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0019086                PCI::detect()
 *fill*         0x00000000c00190d9        0x1 
 .text          0x00000000c00190da      0xb5a hw/diskctrl/ide.32
                0x00000000c00190da                IDE::close(int, int, void*)
                0x00000000c00190de                IDE::IDE()
                0x00000000c00190de                IDE::IDE()
                0x00000000c0019112                IDE::prepareInterrupt(unsigned char)
                0x00000000c0019124                selectDrive(unsigned char, unsigned char)
                0x00000000c0019126                IDE::getBase(unsigned char)
                0x00000000c0019138                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c00191f8                IDE::read(unsigned char, unsigned char)
                0x00000000c00192a6                IDE::waitInterrupt(unsigned char)
                0x00000000c001930e                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001932a                ideChannel1IRQHandler(regs*, void*)
                0x00000000c0019346                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001938c                IDE::open(int, int, void*)
                0x00000000c001979a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0019866                IDE::detect()
                0x00000000c0019b26                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019bd6                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019c34      0x32a hw/diskctrl/satabus.32
                0x00000000c0019c34                SATABus::close(int, int, void*)
                0x00000000c0019c38                SATABus::detect()
                0x00000000c0019c3a                SATABus::SATABus()
                0x00000000c0019c3a                SATABus::SATABus()
                0x00000000c0019cc0                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019cf2                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d3a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d5a                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d84                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019e94                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019f3e                SATABus::open(int, int, void*)
 .text          0x00000000c0019f5e      0x5f4 hw/diskphys/ata.32
                0x00000000c0019f5e                ATA::close(int, int, void*)
                0x00000000c0019f82                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019f84                ATA::ATA()
                0x00000000c0019f84                ATA::ATA()
                0x00000000c0019fb2                ATA::flush(bool)
                0x00000000c0019ffc                ATA::readyForCommand()
                0x00000000c001a048                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a3c4                ATA::read(unsigned long long, int, void*)
                0x00000000c001a410                ATA::write(unsigned long long, int, void*)
                0x00000000c001a45c                ATA::detectCHS()
                0x00000000c001a486                ATA::open(int, int, void*)
 .text          0x00000000c001a552      0x60e hw/diskphys/atapi.32
                0x00000000c001a552                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a558                ATAPI::close(int, int, void*)
                0x00000000c001a57c                ATAPI::ATAPI()
                0x00000000c001a57c                ATAPI::ATAPI()
                0x00000000c001a5aa                ATAPI::readyForCommand()
                0x00000000c001a5fc                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a8bc                ATAPI::diskRemoved()
                0x00000000c001a8f6                ATAPI::eject()
                0x00000000c001a93e                ATAPI::diskInserted()
                0x00000000c001a94a                ATAPI::detectMedia()
                0x00000000c001aa06                ATAPI::open(int, int, void*)
                0x00000000c001aae6                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ab60      0x402 hw/diskphys/sata.32
                0x00000000c001ab60                SATA::close(int, int, void*)
                0x00000000c001ab84                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ab86                SATA::open(int, int, void*)
                0x00000000c001ac30                SATA::SATA()
                0x00000000c001ac30                SATA::SATA()
                0x00000000c001ac5e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001aeaa                SATA::read(unsigned long long, int, void*)
                0x00000000c001aef6                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001af62      0x5af hw/diskphys/satapi.32
                0x00000000c001af62                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001af68                SATAPI::close(int, int, void*)
                0x00000000c001af8c                SATAPI::SATAPI()
                0x00000000c001af8c                SATAPI::SATAPI()
                0x00000000c001afba                SATAPI::diskRemoved()
                0x00000000c001afbc                SATAPI::diskInserted()
                0x00000000c001afd8                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b2b8                SATAPI::eject()
                0x00000000c001b2f4                SATAPI::detectMedia()
                0x00000000c001b31a                SATAPI::open(int, int, void*)
                0x00000000c001b41a                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b511        0x1 
 .text          0x00000000c001b512      0x455 hw/intctrl/apic.32
                0x00000000c001b512                IOAPIC::close(int, int, void*)
                0x00000000c001b518                apicGetBase()
                0x00000000c001b55a                IOAPIC::IOAPIC()
                0x00000000c001b55a                IOAPIC::IOAPIC()
                0x00000000c001b582                apicOpen()
                0x00000000c001b6e8                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b71a                IOAPIC::read(int)
                0x00000000c001b742                IOAPIC::open(int, int, void*)
                0x00000000c001b836                IOAPIC::write(int, int)
                0x00000000c001b862                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b967        0x1 
 .text          0x00000000c001b968       0xf0 hw/timer/apictimer.32
                0x00000000c001b968                APICTimer::close(int, int, void*)
                0x00000000c001b970                apicTimerHandler(regs*, void*)
                0x00000000c001b998                APICTimer::open(int, int, void*)
                0x00000000c001ba08                APICTimer::write(int)
                0x00000000c001ba30                APICTimer::APICTimer()
                0x00000000c001ba30                APICTimer::APICTimer()
 .text          0x00000000c001ba58      0x1aa hw/timer/pit.32
                0x00000000c001ba58                PIT::write(int)
                0x00000000c001badc                pitHandler(regs*, void*)
                0x00000000c001bb00                PIT::open(int, int, void*)
                0x00000000c001bb50                PIT::close(int, int, void*)
                0x00000000c001bb80                PIT::PIT()
                0x00000000c001bb80                PIT::PIT()
 *fill*         0x00000000c001bc02        0xe 
 .text          0x00000000c001bc10       0x83 arch/i386/avx.32
                0x00000000c001bc10                avxDetect
                0x00000000c001bc3a                avxSave
                0x00000000c001bc4b                avxLoad
                0x00000000c001bc5c                avxInit
                0x00000000c001bc7e                avxClose
                0x00000000c001bc7f                wouldSheSayYes
 *fill*         0x00000000c001bc93        0xd 
 .text          0x00000000c001bca0      0x1d6 arch/i386/interrupt.32
                0x00000000c001bca0                isr0
                0x00000000c001bcb0                isr1
                0x00000000c001bcba                isr2
                0x00000000c001bcc4                isr3
                0x00000000c001bcce                isr4
                0x00000000c001bcd8                isr5
                0x00000000c001bce2                isr6
                0x00000000c001bcec                isr7
                0x00000000c001bcf6                isr8
                0x00000000c001bcfe                isr9
                0x00000000c001bd08                isr10
                0x00000000c001bd10                isr11
                0x00000000c001bd18                isr12
                0x00000000c001bd20                isr13
                0x00000000c001bd28                isr14
                0x00000000c001bd30                isr15
                0x00000000c001bd3a                isr16
                0x00000000c001bd44                isr17
                0x00000000c001bd4e                isr18
                0x00000000c001bd58                irq3
                0x00000000c001bd62                irq4
                0x00000000c001bd6c                irq5
                0x00000000c001bd76                irq6
                0x00000000c001bd80                irq7
                0x00000000c001bd8a                irq8
                0x00000000c001bd94                irq9
                0x00000000c001bd9e                irq10
                0x00000000c001bda8                irq11
                0x00000000c001bdb2                irq12
                0x00000000c001bdbc                irq13
                0x00000000c001bdc6                irq14
                0x00000000c001bdd0                irq15
                0x00000000c001bdda                irq1
                0x00000000c001bde1                irq2
                0x00000000c001bde8                isr96
                0x00000000c001bdef                irq0
                0x00000000c001bdf4                int_common_stub
                0x00000000c001bdf4                syscall_common_stub
                0x00000000c001be26                irq16
                0x00000000c001be30                irq17
                0x00000000c001be3a                irq18
                0x00000000c001be44                irq19
                0x00000000c001be4e                irq20
                0x00000000c001be58                irq21
                0x00000000c001be62                irq22
                0x00000000c001be6c                irq23
 *fill*         0x00000000c001be76        0xa 
 .text          0x00000000c001be80       0x10 arch/i386/rdrand.32
                0x00000000c001be80                i386GetRDRAND
 .text          0x00000000c001be90       0x39 arch/i386/sse.32
                0x00000000c001be90                absolutelyNoChanceInHell
                0x00000000c001be90                sseDetect
                0x00000000c001bea8                sseSave
                0x00000000c001beb0                sseLoad
                0x00000000c001beb8                sseInit
                0x00000000c001bec8                sseClose
 *fill*         0x00000000c001bec9        0x7 
 .text          0x00000000c001bed0       0x49 arch/i386/x87.32
                0x00000000c001bed6                x87Detect
                0x00000000c001bef1                x87Save
                0x00000000c001bef8                x87Load
                0x00000000c001beff                x87Init
                0x00000000c001bf18                x87Close
 *fill*         0x00000000c001bf19        0x3 
 .text          0x00000000c001bf1c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001bf41        0x0 crtn.32
 *fill*         0x00000000c001bf41        0x3 
 .text          0x00000000c001bf44      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001bf44                __divdi3
 *fill*         0x00000000c001c08f        0x1 
 .text          0x00000000c001c090      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c090                __moddi3
 *fill*         0x00000000c001c20e        0x2 
 .text          0x00000000c001c210       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c210                __udivdi3
 *fill*         0x00000000c001c30f        0x1 
 .text          0x00000000c001c310      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c310                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c430        0x0
 .iplt          0x00000000c001c430        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c42a        0xf
 .init          0x00000000c001c42a        0x3 crti.32
                0x00000000c001c42a                _init
 .init          0x00000000c001c42d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c432        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c437        0x2 crtn.32

.fini           0x00000000c001c439        0xa
 .fini          0x00000000c001c439        0x3 crti.32
                0x00000000c001c439                _fini
 .fini          0x00000000c001c43c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c441        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c444       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c444       0x23 core/computer.32
                0x00000000c001c444                Computer::~Computer()
                0x00000000c001c444                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c468       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c468       0x2a core/computer.32
                0x00000000c001c468                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c492       0x21
 .text._Z10idleCommonv
                0x00000000c001c492       0x21 core/idle.32
                0x00000000c001c492                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c4b4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c4b4        0x2 core/unixfile.32
                0x00000000c001c4b4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c4b4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c4b6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c4b6       0x42 core/unixfile.32
                0x00000000c001c4b6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c4b6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c4f8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c4f8       0xd3 core/unixfile.32
                0x00000000c001c4f8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c5cc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c5cc        0x7 core/unixfile.32
                0x00000000c001c5cc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c5d4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c5d4       0xa1 core/unixfile.32
                0x00000000c001c5d4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c676        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c676        0x8 core/unixfile.32
                0x00000000c001c676                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c67e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c67e       0x1a hal/device.32
                0x00000000c001c67e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c67e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c698       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c698       0x2a hal/device.32
                0x00000000c001c698                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c6c2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c6c2       0xdc hal/device.32
                0x00000000c001c6c2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c79e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c79e       0x42 hal/device.32
                0x00000000c001c79e                LinkedList<Device>::LinkedList()
                0x00000000c001c79e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c7e0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c7e0       0x1c hal/timer.32
                0x00000000c001c7e0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c7fc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c7fc        0x7 hal/timer.32
                0x00000000c001c7fc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c804       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c804       0xb8 hal/timer.32
                0x00000000c001c804                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c8bc       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c8bc       0xda hal/timer.32
                0x00000000c001c8bc                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c998       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c998       0x23 hw/acpi.32
                0x00000000c001c998                ACPI::~ACPI()
                0x00000000c001c998                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c9bc       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c9bc       0x2a hw/acpi.32
                0x00000000c001c9bc                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c9e8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c9e8        0x2 hw/acpi.32
                0x00000000c001c9e8                LinkedList<Device>::~LinkedList()
                0x00000000c001c9e8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c9ec       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c9ec       0x1c hw/acpi.32
                0x00000000c001c9ec                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ca08        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ca08        0x7 hw/acpi.32
                0x00000000c001ca08                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ca10       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ca10       0xb8 hw/acpi.32
                0x00000000c001ca10                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001cac8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001cac8       0x23 hw/cpu.32
                0x00000000c001cac8                CPU::~CPU()
                0x00000000c001cac8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001caec       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001caec       0x2a hw/cpu.32
                0x00000000c001caec                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cb18        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cb18        0x2 thr/prcssthr.32
                0x00000000c001cb18                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001cb18                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cb1c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cb1c       0x49 thr/prcssthr.32
                0x00000000c001cb1c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001cb1c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb68       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb68       0x42 thr/prcssthr.32
                0x00000000c001cb68                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001cb68                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cbac        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cbac        0x8 thr/prcssthr.32
                0x00000000c001cbac                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001cbb4       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cbb4       0x23 hw/bus/pci.32
                0x00000000c001cbb4                PCI::~PCI()
                0x00000000c001cbb4                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cbd8       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cbd8       0x2a hw/bus/pci.32
                0x00000000c001cbd8                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cc02       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cc02       0x23 hw/diskctrl/ide.32
                0x00000000c001cc02                IDE::~IDE()
                0x00000000c001cc02                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cc26       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cc26       0x2a hw/diskctrl/ide.32
                0x00000000c001cc26                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cc50       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cc50       0x23 hw/diskctrl/satabus.32
                0x00000000c001cc50                SATABus::~SATABus()
                0x00000000c001cc50                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cc74       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cc74       0x2a hw/diskctrl/satabus.32
                0x00000000c001cc74                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cc9e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cc9e       0x23 hw/diskphys/ata.32
                0x00000000c001cc9e                ATA::~ATA()
                0x00000000c001cc9e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001ccc2       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001ccc2       0x2a hw/diskphys/ata.32
                0x00000000c001ccc2                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001ccec       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001ccec       0x23 hw/diskphys/atapi.32
                0x00000000c001ccec                ATAPI::~ATAPI()
                0x00000000c001ccec                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001cd10       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001cd10       0x2a hw/diskphys/atapi.32
                0x00000000c001cd10                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cd3a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cd3a       0x23 hw/diskphys/sata.32
                0x00000000c001cd3a                SATA::~SATA()
                0x00000000c001cd3a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cd5e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cd5e       0x2a hw/diskphys/sata.32
                0x00000000c001cd5e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cd88       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cd88       0x23 hw/diskphys/satapi.32
                0x00000000c001cd88                SATAPI::~SATAPI()
                0x00000000c001cd88                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cdac       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cdac       0x2a hw/diskphys/satapi.32
                0x00000000c001cdac                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cdd6       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cdd6       0x23 hw/intctrl/apic.32
                0x00000000c001cdd6                IOAPIC::~IOAPIC()
                0x00000000c001cdd6                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cdfa       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cdfa       0x2a hw/intctrl/apic.32
                0x00000000c001cdfa                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ce24       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ce24       0x23 hw/timer/apictimer.32
                0x00000000c001ce24                APICTimer::~APICTimer()
                0x00000000c001ce24                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ce48       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ce48       0x2a hw/timer/apictimer.32
                0x00000000c001ce48                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ce74       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ce74       0x23 hw/timer/pit.32
                0x00000000c001ce74                PIT::~PIT()
                0x00000000c001ce74                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ce98       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ce98       0x2a hw/timer/pit.32
                0x00000000c001ce98                PIT::~PIT()

.rodata         0x00000000c001cec2     0x2ab2
                0x00000000c001cec2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001cec2        0x2 
 .ctors         0x00000000c001cec4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001cec8        0x4 core/unixfile.32
 .ctors         0x00000000c001cecc        0x4 thr/prcssthr.32
 .ctors         0x00000000c001ced0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ced4                end_ctors = .
                0x00000000c001ced4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001ced4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001ced8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ced8                __DTOR_END__
                0x00000000c001cedc                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cedc        0x4 
 .rodata        0x00000000c001cee0      0x101 acpica/utclib.32
                0x00000000c001cee0                AcpiGbl_Ctypes
 *fill*         0x00000000c001cfe1        0x3 
 .rodata        0x00000000c001cfe4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001cffc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001d046       0x1a 
 .rodata        0x00000000c001d060       0xed fs/fat/ff.32
 *fill*         0x00000000c001d14d       0x13 
 .rodata        0x00000000c001d160      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d560       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d571      0x115 core/computer.32
 *fill*         0x00000000c001d686        0x2 
 .rodata.str1.4
                0x00000000c001d688       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d6f0       0x2c core/computer.32
                0x00000000c001d6f0                vtable for Computer
 .rodata.str1.4
                0x00000000c001d71c       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d74c       0x19 core/kheap.32
 .rodata.str1.1
                0x00000000c001d765       0x17 core/main.32
 .rodata.str1.4
                0x00000000c001d77c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d821       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d879       0x39 core/pipe.32
 *fill*         0x00000000c001d8b2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d8b4       0x1c core/pipe.32
                0x00000000c001d8b4                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d8d0       0x75 core/terminal.32
 *fill*         0x00000000c001d945        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d948       0x1c core/terminal.32
                0x00000000c001d948                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d964       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d986       0x15 core/unixfile.32
 *fill*         0x00000000c001d99b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d99c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d9e7        0x8 core/unixfile.32
 *fill*         0x00000000c001d9ef        0x1 
 .rodata.str1.4
                0x00000000c001d9f0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001da10       0x1c core/unixfile.32
                0x00000000c001da10                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001da2c       0x1c core/unixfile.32
                0x00000000c001da2c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001da48      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dbaf      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dcb6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dce9       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dce9        0x3 
 .rodata        0x00000000c001dcec      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001de3c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001de3c       0x68 fs/vfs.32
                0x00000000c001de3c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001dea4       0x1c fs/vfs.32
                0x00000000c001dea4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001dec0       0x1c fs/vfs.32
                0x00000000c001dec0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001dedc       0x2c hal/bus.32
                0x00000000c001dedc                vtable for Bus
 .rodata.str1.1
                0x00000000c001df08       0x1e hal/clock.32
 *fill*         0x00000000c001df26        0x2 
 .rodata._ZTV5Clock
                0x00000000c001df28       0x3c hal/clock.32
                0x00000000c001df28                vtable for Clock
 *fill*         0x00000000c001df64       0x1c 
 .rodata        0x00000000c001df80       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001dfb0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001e008       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001e008       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001e008       0x2c hal/device.32
                0x00000000c001e008                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001e034       0x2c hal/device.32
                0x00000000c001e034                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e060       0x2c hal/diskctrl.32
                0x00000000c001e060                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e08c       0x38 hal/diskphys.32
                0x00000000c001e08c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e0c4       0x3e hal/intctrl.32
 *fill*         0x00000000c001e102        0x2 
 .rodata.str1.4
                0x00000000c001e104       0x5d hal/intctrl.32
 .rodata        0x00000000c001e161       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e1b4       0x34 hal/keybrd.32
                0x00000000c001e1b4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e1e8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e22c       0x2c hal/logidisk.32
                0x00000000c001e22c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e258       0x2c hal/mouse.32
                0x00000000c001e258                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e284        0xb hal/partition.32
 *fill*         0x00000000c001e28f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e290       0x44 hal/serial.32
                0x00000000c001e290                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e2d4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e2d4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e2d4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e2d4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e2d4       0x30 hal/timer.32
                0x00000000c001e2d4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e304       0x10 hal/vcache.32
                0x00000000c001e304                vtable for VCache
 .rodata.str1.1
                0x00000000c001e314       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e37c       0x48 hal/video.32
                0x00000000c001e37c                vtable for Video
 .rodata.str1.4
                0x00000000c001e3c4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e45f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e59b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e59b        0x8 hw/acpi.32
 *fill*         0x00000000c001e59b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e59c       0x2c hw/acpi.32
                0x00000000c001e59c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e5c8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e735        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e738       0x2c hw/cpu.32
                0x00000000c001e738                vtable for CPU
 .rodata.str1.1
                0x00000000c001e764       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e7a0       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c001e831      0x1f1 krnl/signal.32
 *fill*         0x00000000c001ea22        0x2 
 .rodata.str1.4
                0x00000000c001ea24       0x26 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c001ea4a       0x97 krnl/syscalls.32
                                         0xa7 (size before relaxing)
 .rodata.str1.1
                0x00000000c001eae1       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001eb26        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001eb30        0xc sys/sbrk.32
 .rodata.str1.1
                0x00000000c001eb3c       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001eb90       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001ebbc      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001ed88       0x57 thr/prcssthr.32
 *fill*         0x00000000c001eddf        0x1 
 .rodata.str1.4
                0x00000000c001ede0      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001eeec       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001eeec       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001eeec       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001eeec        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001eeec       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001ef8c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001efbc      0x182 arch/i386/hal.32
                                        0x191 (size before relaxing)
 *fill*         0x00000000c001f13e        0x2 
 .rodata.str1.4
                0x00000000c001f140       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001f1b3       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001f1c8       0x3c arch/i386/rtc.32
                0x00000000c001f1c8                vtable for RTC
 .rodata.str1.1
                0x00000000c001f204       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f245        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f248       0x68 fs/fat/vfslink.32
                0x00000000c001f248                vtable for FAT
 .rodata.str1.1
                0x00000000c001f2b0        0x3 fs/iso9660/helper.32
                                          0x5 (size before relaxing)
 .rodata.str1.1
                0x00000000c001f2b3       0x49 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c001f2fc       0x68 fs/iso9660/vfslink.32
                0x00000000c001f2fc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f364       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f3a8       0x34 hal/sound/sndcard.32
                0x00000000c001f3a8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f3dc       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f41b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f453       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f4f4       0x2c hw/bus/pci.32
                0x00000000c001f4f4                vtable for PCI
 .rodata.str1.1
                0x00000000c001f520       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f5a7        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f5a8       0x2c hw/diskctrl/ide.32
                0x00000000c001f5a8                vtable for IDE
 .rodata.str1.4
                0x00000000c001f5d4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f5f8       0x2c hw/diskctrl/satabus.32
                0x00000000c001f5f8                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f624       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f636        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f638       0x38 hw/diskphys/ata.32
                0x00000000c001f638                vtable for ATA
 .rodata.str1.1
                0x00000000c001f670        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f67d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f680       0x38 hw/diskphys/atapi.32
                0x00000000c001f680                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f6b8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f734       0x38 hw/diskphys/sata.32
                0x00000000c001f734                vtable for SATA
 .rodata.str1.1
                0x00000000c001f76c      0x100 hw/diskphys/satapi.32
                                        0x10d (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f86c       0x38 hw/diskphys/satapi.32
                0x00000000c001f86c                vtable for SATAPI
 .rodata        0x00000000c001f8a4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f8ac       0x2c hw/intctrl/apic.32
                0x00000000c001f8ac                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f8d8       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f8f3        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f8f4       0x30 hw/timer/apictimer.32
                0x00000000c001f8f4                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f924       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f941        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f944       0x30 hw/timer/pit.32
                0x00000000c001f944                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f974      0x39d
 *(.data)
 .data          0x00000000c001f974        0x0 crti.32
 .data          0x00000000c001f974        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f974                __dso_handle
 .data          0x00000000c001f978        0x0 acpica/utclib.32
 .data          0x00000000c001f978        0x0 core/malloc.32
 .data          0x00000000c001f978        0x0 libk/ctype.32
 .data          0x00000000c001f978        0x0 libk/string.32
 .data          0x00000000c001f978        0x0 fs/fat/diskio.32
 .data          0x00000000c001f978        0x0 fs/fat/ff.32
 .data          0x00000000c001f978        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f978        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f978        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f978        0x0 core/computer.32
 .data          0x00000000c001f978        0x0 core/gdt.32
 .data          0x00000000c001f978        0x0 core/idle.32
 .data          0x00000000c001f978        0x0 core/idt.32
 .data          0x00000000c001f978        0x4 core/kheap.32
 .data          0x00000000c001f97c        0x0 core/main.32
 .data          0x00000000c001f97c        0x4 core/physmgr.32
                0x00000000c001f97c                Phys::bitmap
 .data          0x00000000c001f980        0x0 core/pipe.32
 .data          0x00000000c001f980       0x60 core/terminal.32
                0x00000000c001f980                VgaText::hiddenOut
                0x00000000c001f9a0                ansiToVGAMappings
 .data          0x00000000c001f9e0        0x0 core/tss.32
 .data          0x00000000c001f9e0        0x4 core/unixfile.32
                0x00000000c001f9e0                UnixFile::nextFd
 .data          0x00000000c001f9e4       0x15 core/virtmgr.32
                0x00000000c001f9e4                Virt::pageAllocPtr
                0x00000000c001f9e8                Virt::bitmap
                0x00000000c001f9ec                Virt::swapfileSectorsPerPage
                0x00000000c001f9f0                Virt::swapfileLength
                0x00000000c001f9f4                Virt::swapfileSector
                0x00000000c001f9f8                Virt::swapfileDrive
 *fill*         0x00000000c001f9f9        0x3 
 .data          0x00000000c001f9fc        0x4 coreobjs/c++.32
                0x00000000c001f9fc                __stack_chk_guard
 .data          0x00000000c001fa00        0x0 dbg/kconsole.32
 .data          0x00000000c001fa00        0x0 fs/vfs.32
 .data          0x00000000c001fa00        0x0 hal/bus.32
 .data          0x00000000c001fa00        0x0 hal/buzzer.32
 .data          0x00000000c001fa00        0x0 hal/clock.32
 .data          0x00000000c001fa00        0x0 hal/device.32
 .data          0x00000000c001fa00        0x0 hal/diskctrl.32
 .data          0x00000000c001fa00        0x0 hal/diskphys.32
 .data          0x00000000c001fa00        0x0 hal/fpu.32
 .data          0x00000000c001fa00        0x0 hal/intctrl.32
 .data          0x00000000c001fa00        0x0 hal/keybrd.32
 .data          0x00000000c001fa00        0x0 hal/logidisk.32
 .data          0x00000000c001fa00        0x0 hal/mouse.32
 .data          0x00000000c001fa00        0x0 hal/partition.32
 .data          0x00000000c001fa00        0x0 hal/serial.32
 .data          0x00000000c001fa00        0x0 hal/timer.32
 .data          0x00000000c001fa00        0x0 hal/vcache.32
 .data          0x00000000c001fa00        0x0 hal/video.32
 .data          0x00000000c001fa00       0x10 hw/acpi.32
                0x00000000c001fa00                legacyIRQRemaps
 .data          0x00000000c001fa10        0x4 hw/cpu.32
                0x00000000c001fa10                lastCode
 *fill*         0x00000000c001fa14        0xc 
 .data          0x00000000c001fa20      0x142 krnl/bootmsg.32
                0x00000000c001fa20                KiSplashScreen
 *fill*         0x00000000c001fb62       0x1e 
 .data          0x00000000c001fb80       0x4d krnl/env.32
                0x00000000c001fb80                defaultSysEnv
 .data          0x00000000c001fbcd        0x0 krnl/inlines.32
 .data          0x00000000c001fbcd        0x0 krnl/panic.32
 .data          0x00000000c001fbcd        0x0 krnl/powctrl.32
 .data          0x00000000c001fbcd        0x0 krnl/resolve.32
 *fill*         0x00000000c001fbcd       0x13 
 .data          0x00000000c001fbe0       0x4c krnl/signal.32
                0x00000000c001fbe0                KiDefaultSignalHandlers
 *fill*         0x00000000c001fc2c       0x14 
 .data          0x00000000c001fc40       0xcc krnl/syscalls.32
                0x00000000c001fc40                systemCallHandlers
 .data          0x00000000c001fd0c        0x0 reg/registry.32
 .data          0x00000000c001fd0c        0x0 sys/eject.32
 .data          0x00000000c001fd0c        0x0 sys/exit.32
 .data          0x00000000c001fd0c        0x0 sys/getcwd.32
 .data          0x00000000c001fd0c        0x0 sys/getpid.32
 .data          0x00000000c001fd0c        0x0 sys/getramdata.32
 .data          0x00000000c001fd0c        0x0 sys/getvgaptr.32
 .data          0x00000000c001fd0c        0x0 sys/loaddll.32
 .data          0x00000000c001fd0c        0x0 sys/read.32
 .data          0x00000000c001fd0c        0x0 sys/registersignal.32
 .data          0x00000000c001fd0c        0x0 sys/sbrk.32
 .data          0x00000000c001fd0c        0x0 sys/setcwd.32
 .data          0x00000000c001fd0c        0x0 sys/settime.32
 .data          0x00000000c001fd0c        0x0 sys/timezone.32
 .data          0x00000000c001fd0c        0x0 sys/write.32
 .data          0x00000000c001fd0c        0x0 sys/wsbe.32
 .data          0x00000000c001fd0c        0x0 sys/yield.32
 .data          0x00000000c001fd0c        0x0 thr/elf.32
 .data          0x00000000c001fd0c        0x4 thr/prcssthr.32
                0x00000000c001fd0c                Thr::nextPID
 .data          0x00000000c001fd10        0x0 vm86/vm8086.32
 .data          0x00000000c001fd10        0x0 arch/i386/hal.32
 .data          0x00000000c001fd10        0x0 arch/i386/pic.32
 .data          0x00000000c001fd10        0x0 arch/i386/rtc.32
 .data          0x00000000c001fd10        0x0 arch/i386/vga.32
 .data          0x00000000c001fd10        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fd10        0x0 fs/iso9660/helper.32
 .data          0x00000000c001fd10        0x1 fs/iso9660/vfslink.32
                0x00000000c001fd10                recentDriveletter
 .data          0x00000000c001fd11        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fd11        0x0 hal/sound/sndport.32
 .data          0x00000000c001fd11        0x0 hw/bus/isa.32
 .data          0x00000000c001fd11        0x0 hw/bus/pci.32
 .data          0x00000000c001fd11        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fd11        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fd11        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fd11        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fd11        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fd11        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fd11        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fd11        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fd11        0x0 hw/timer/pit.32
 .data          0x00000000c001fd11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fd11        0x0 crtn.32
 .data          0x00000000c001fd11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fd11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fd11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fd11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fd14        0x0
 .got           0x00000000c001fd14        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fd14        0x0
 .got.plt       0x00000000c001fd14        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fd14        0x0
 .igot.plt      0x00000000c001fd14        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fd14        0x0
 .tm_clone_table
                0x00000000c001fd14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fd14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fd11      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fd11        0x3 
 .eh_frame      0x00000000c001fd14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fd14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fd14       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fd6c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fdac       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fe18       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001fe9c        0x0
 .rel.got       0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001fe9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001fe9c     0x4b8c
                0x00000000c001fe9c                sbss = .
 *(COMMON)
 *fill*         0x00000000c001fe9c        0x4 
 COMMON         0x00000000c001fea0       0xa0 fs/iso9660/iso9660.32
                0x00000000c001fea0                dcache
                0x00000000c001fee0                cdDriveLetter
                0x00000000c001ff00                icache
 *(.bss)
 .bss           0x00000000c001ff40        0x0 crti.32
 .bss           0x00000000c001ff40       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001ff60        0x4 acpica/utclib.32
 *fill*         0x00000000c001ff64       0x1c 
 .bss           0x00000000c001ff80      0x378 core/malloc.32
 .bss           0x00000000c00202f8        0x0 libk/ctype.32
 .bss           0x00000000c00202f8        0x0 libk/string.32
 .bss           0x00000000c00202f8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c00202f8        0x8 
 .bss           0x00000000c0020300       0x88 fs/fat/ff.32
 .bss           0x00000000c0020388        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0020388        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0020388       0x18 
 .bss           0x00000000c00203a0      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0020d38        0x6 core/computer.32
                0x00000000c0020d38                Krnl::computer
                0x00000000c0020d3c                KeIsPreemptionOn
                0x00000000c0020d3d                KeIsSchedulingOn
 *fill*         0x00000000c0020d3e        0x2 
 .bss           0x00000000c0020d40        0x6 core/gdt.32
                0x00000000c0020d40                gdtDescr
 .bss           0x00000000c0020d46        0x0 core/idle.32
 *fill*         0x00000000c0020d46        0x2 
 .bss           0x00000000c0020d48        0x6 core/idt.32
                0x00000000c0020d48                idtDescr
 .bss           0x00000000c0020d4e        0x0 core/kheap.32
 *fill*         0x00000000c0020d4e        0x2 
 .bss           0x00000000c0020d50        0x4 core/main.32
                0x00000000c0020d50                sysBootSettings
 .bss           0x00000000c0020d54       0x29 core/physmgr.32
                0x00000000c0020d54                Phys::forbidEvictions
                0x00000000c0020d58                Phys::currentPagePointer
                0x00000000c0020d5c                Phys::highestMem
                0x00000000c0020d60                Phys::oldPercent
                0x00000000c0020d64                Phys::usedPages
                0x00000000c0020d68                Phys::usablePages
                0x00000000c0020d6c                Phys::dmaUsage
 .bss           0x00000000c0020d7d        0x0 core/pipe.32
 *fill*         0x00000000c0020d7d        0x3 
 .bss           0x00000000c0020d80        0x9 core/terminal.32
                0x00000000c0020d80                terminalCycle
                0x00000000c0020d84                activeTerminal
                0x00000000c0020d88                VgaText::graphicMode
 *fill*         0x00000000c0020d89        0x1 
 .bss           0x00000000c0020d8a        0x2 core/tss.32
                0x00000000c0020d8a                doubleFaultSelector
 *fill*         0x00000000c0020d8c       0x14 
 .bss           0x00000000c0020da0       0x84 core/unixfile.32
                0x00000000c0020da0                sfileLpt
                0x00000000c0020de0                sfileCom
                0x00000000c0020e04                sfileNul
                0x00000000c0020e08                sfilePnt
                0x00000000c0020e0c                sfileAux
                0x00000000c0020e10                sfileCon
                0x00000000c0020e14                initialFilesAdded
                0x00000000c0020e18                unixFileLinkedList
 .bss           0x00000000c0020e24       0x10 core/virtmgr.32
                0x00000000c0020e24                twswaps
                0x00000000c0020e28                swapBalance
                0x00000000c0020e2c                Virt::swapfileBitmap
                0x00000000c0020e30                firstVAS
 .bss           0x00000000c0020e34        0x0 coreobjs/c++.32
 .bss           0x00000000c0020e34        0x0 dbg/kconsole.32
 .bss           0x00000000c0020e34        0x4 fs/vfs.32
                0x00000000c0020e34                installedFilesystems
 .bss           0x00000000c0020e38        0x0 hal/bus.32
 .bss           0x00000000c0020e38        0x0 hal/buzzer.32
 .bss           0x00000000c0020e38        0x8 hal/clock.32
                0x00000000c0020e38                User::dstOn
                0x00000000c0020e39                User::timezoneHalfHourOffset
                0x00000000c0020e3c                User::timezoneHourOffset
 .bss           0x00000000c0020e40        0x0 hal/device.32
 .bss           0x00000000c0020e40        0x0 hal/diskctrl.32
 .bss           0x00000000c0020e40        0x0 hal/diskphys.32
 .bss           0x00000000c0020e40        0x0 hal/fpu.32
 .bss           0x00000000c0020e40     0x2000 hal/intctrl.32
                0x00000000c0020e40                INT_contexts
                0x00000000c0021e40                INT_handlers
 .bss           0x00000000c0022e40      0x429 hal/keybrd.32
                0x00000000c0022e40                keyboardWaitingTaskList
                0x00000000c0022e44                keyboardSetupYet
                0x00000000c0022e48                guiKeyboardHandler
                0x00000000c0022e60                keystates
 *fill*         0x00000000c0023269       0x17 
 .bss           0x00000000c0023280       0x88 hal/logidisk.32
                0x00000000c0023280                diskAssignments
                0x00000000c00232a0                disks
 .bss           0x00000000c0023308        0x4 hal/mouse.32
                0x00000000c0023308                guiMouseHandler
 .bss           0x00000000c002330c        0x0 hal/partition.32
 .bss           0x00000000c002330c        0x0 hal/serial.32
 .bss           0x00000000c002330c        0x4 hal/timer.32
                0x00000000c002330c                milliTenthsSinceBoot
 .bss           0x00000000c0023310        0x0 hal/vcache.32
 .bss           0x00000000c0023310        0x4 hal/video.32
                0x00000000c0023310                screen
 *fill*         0x00000000c0023314        0xc 
 .bss           0x00000000c0023320      0x480 hw/acpi.32
                0x00000000c0023320                systemSleepFunction
                0x00000000c0023324                systemResetFunction
                0x00000000c0023328                systemShutdownFunction
                0x00000000c002332c                nextACPITable
                0x00000000c0023340                acpiTables
                0x00000000c0023540                usingXSDT
                0x00000000c0023544                MADTpointer
                0x00000000c0023548                RSDTpointer
                0x00000000c002354c                RSDPpointer
                0x00000000c0023550                nextAPICNMI
                0x00000000c0023560                apicNMIInfo
                0x00000000c00235e0                legacyIRQFlags
                0x00000000c0023600                ioapicDiscoveryNumber
                0x00000000c0023620                ioapicFoundInMADT
                0x00000000c0023640                ioapicAddresses
                0x00000000c00236c0                ioapicGSIBase
                0x00000000c0023740                processorDiscoveryNumber
                0x00000000c0023760                matchingAPICID
                0x00000000c0023780                processorID
 .bss           0x00000000c00237a0       0x10 hw/cpu.32
                0x00000000c00237a0                lastD
                0x00000000c00237a4                lastC
                0x00000000c00237a8                lastB
                0x00000000c00237ac                lastA
 .bss           0x00000000c00237b0        0x0 krnl/bootmsg.32
 .bss           0x00000000c00237b0        0x8 krnl/env.32
                0x00000000c00237b0                Krnl::userEnv
                0x00000000c00237b4                Krnl::systemEnv
 .bss           0x00000000c00237b8        0x0 krnl/inlines.32
 .bss           0x00000000c00237b8        0x1 krnl/panic.32
                0x00000000c00237b8                KeIsKernelInPanic
 *fill*         0x00000000c00237b9        0x7 
 .bss           0x00000000c00237c0       0x48 krnl/powctrl.32
                0x00000000c00237c0                Krnl::powCtrlOnBattery
                0x00000000c00237e0                Krnl::currentPowerSettings
                0x00000000c0023804                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0023808        0x0 krnl/resolve.32
 .bss           0x00000000c0023808        0x0 krnl/signal.32
 .bss           0x00000000c0023808        0x0 krnl/syscalls.32
 .bss           0x00000000c0023808        0x0 reg/registry.32
 .bss           0x00000000c0023808        0x0 sys/eject.32
 .bss           0x00000000c0023808        0x0 sys/exit.32
 .bss           0x00000000c0023808        0x0 sys/getcwd.32
 .bss           0x00000000c0023808        0x0 sys/getpid.32
 .bss           0x00000000c0023808        0x0 sys/getramdata.32
 .bss           0x00000000c0023808        0x0 sys/getvgaptr.32
 .bss           0x00000000c0023808        0x0 sys/loaddll.32
 .bss           0x00000000c0023808        0x0 sys/read.32
 .bss           0x00000000c0023808        0x0 sys/registersignal.32
 .bss           0x00000000c0023808        0x0 sys/sbrk.32
 .bss           0x00000000c0023808        0x0 sys/setcwd.32
 .bss           0x00000000c0023808        0x0 sys/settime.32
 .bss           0x00000000c0023808        0x0 sys/timezone.32
 .bss           0x00000000c0023808        0x0 sys/write.32
 .bss           0x00000000c0023808        0x0 sys/wsbe.32
 .bss           0x00000000c0023808        0x0 sys/yield.32
 *fill*         0x00000000c0023808       0x18 
 .bss           0x00000000c0023820      0x7a4 thr/elf.32
                0x00000000c0023820                Thr::driverLookupNext
                0x00000000c0023840                Thr::driverLookupLen
                0x00000000c0023a40                Thr::driverLookupAddr
                0x00000000c0023c40                Thr::driverNameLookup
                0x00000000c0023e40                Thr::kernelSymbols
                0x00000000c0023ec0                Thr::kernelStringTable
                0x00000000c0023f40                Thr::kernelSymbolTable
                0x00000000c0023fc0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023fc4        0x4 
 .bss           0x00000000c0023fc8       0x68 thr/prcssthr.32
                0x00000000c0023fc8                cleanerThread
                0x00000000c0023fcc                weNeedTheCleanerToNotBlock
                0x00000000c0023fd0                retValLockStuff
                0x00000000c0023fd4                retValSchedLock
                0x00000000c0023fd8                lockStuffLock
                0x00000000c0023fdc                schedulerLock
                0x00000000c0023fe0                taskSwitchesPostponedFlag
                0x00000000c0023fe4                postponeTaskSwitchesCounter
                0x00000000c0023fe8                irqDisableCounter
                0x00000000c0023fec                terminatedTaskList
                0x00000000c0023ff8                sleepingTaskList
                0x00000000c0024004                taskList
                0x00000000c0024010                kernelProcess
 *fill*         0x00000000c0024030       0x10 
 .bss           0x00000000c0024040       0x40 vm86/vm8086.32
                0x00000000c0024040                Vm::vmRetV
                0x00000000c0024044                Vm::vmDone
                0x00000000c0024045                Vm::vmReady
                0x00000000c0024048                Vm::vm86Thread
                0x00000000c002404c                Vm::vmToHostCommsPtr
                0x00000000c0024060                Vm::vmToHostComms
 .bss           0x00000000c0024080       0x14 arch/i386/hal.32
                0x00000000c0024080                apic
                0x00000000c0024084                fpuOwner
                0x00000000c0024088                coproLoadFunc
                0x00000000c002408c                coproSaveFunc
                0x00000000c0024090                gpFaultIntercept
 .bss           0x00000000c0024094        0x0 arch/i386/pic.32
 .bss           0x00000000c0024094        0x2 arch/i386/rtc.32
 .bss           0x00000000c0024096        0x0 arch/i386/vga.32
 *fill*         0x00000000c0024096        0xa 
 .bss           0x00000000c00240a0       0xf0 fs/fat/vfslink.32
                0x00000000c00240a0                FAT::fats
                0x00000000c00240c0                FAT::vfsToFatRemaps
                0x00000000c0024140                fatToVFSRemaps
 .bss           0x00000000c0024190        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0024190       0x10 
 .bss           0x00000000c00241a0      0x820 fs/iso9660/vfslink.32
                0x00000000c00241a0                iso9660Owner
                0x00000000c00241a4                recentSector
                0x00000000c00241c0                recentBuffer
 .bss           0x00000000c00249c0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00249c0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00249c0        0x0 hw/bus/isa.32
 .bss           0x00000000c00249c0        0xd hw/bus/pci.32
                0x00000000c00249c0                thePCI
 .bss           0x00000000c00249cd        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00249cd        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00249cd        0x3 
 .bss           0x00000000c00249d0        0x8 hw/diskphys/ata.32
                0x00000000c00249d0                ataSectorsWritten
                0x00000000c00249d4                ataSectorsRead
 .bss           0x00000000c00249d8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00249d8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00249d8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c00249d8        0x8 
 .bss           0x00000000c00249e0       0x41 hw/intctrl/apic.32
                0x00000000c00249e0                noOfIOAPICs
                0x00000000c0024a00                ioapics
                0x00000000c0024a20                IOAPICsSetupYet
 .bss           0x00000000c0024a21        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024a21        0x3 
 .bss           0x00000000c0024a24        0x4 hw/timer/pit.32
                0x00000000c0024a24                pitFreq
 .bss           0x00000000c0024a28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024a28        0x0 crtn.32
 .bss           0x00000000c0024a28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0024a28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0024a28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0024a28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024a28                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00295b4                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
