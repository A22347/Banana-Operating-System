Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f94a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6c3 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006ca8                Krnl::firstTask()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006e96                Computer::setBootMessage(char const*)
                0x00000000c0006e98                Computer::detectFeatures()
                0x00000000c00070be                Computer::displayFeatures()
                0x00000000c00070c0                Computer::rdmsr(unsigned int)
                0x00000000c00070ec                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007128                Computer::shutdown()
                0x00000000c0007140                Computer::restart()
                0x00000000c0007158                Computer::sleep()
                0x00000000c000716c                Computer::nmiEnabled()
                0x00000000c0007178                Computer::readCMOS(unsigned char)
                0x00000000c0007196                Computer::enableNMI(bool)
                0x00000000c00071ae                Computer::open(int, int, void*)
                0x00000000c0007282                Computer::disableNMI()
                0x00000000c0007292                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072b6                Computer::handleNMI()
 *fill*         0x00000000c0007321        0x1 
 .text          0x00000000c0007322      0x1db core/gdt.32
                0x00000000c0007322                GDTEntry::setBase(unsigned int)
                0x00000000c000733e                GDTEntry::setLimit(unsigned int)
                0x00000000c000735c                GDT::GDT()
                0x00000000c000735c                GDT::GDT()
                0x00000000c0007372                GDT::addEntry(GDTEntry)
                0x00000000c0007394                GDT::getNumberOfEntries()
                0x00000000c000739c                GDT::flush()
                0x00000000c00073be                GDT::setup()
 .text          0x00000000c00074fd       0x1d core/idle.32
                0x00000000c00074fd                idleFunction(void*)
 *fill*         0x00000000c000751a        0x2 
 .text          0x00000000c000751c      0x46c core/idt.32
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c0007596                IDTEntry::setOffset(unsigned int)
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ae                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075b6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075d0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007608                IDT::flush()
                0x00000000c0007622                IDT::setup()
 .text          0x00000000c0007988      0x188 core/kheap.32
                0x00000000c0007988                sbrk
                0x00000000c0007a1f                mmap
                0x00000000c0007a35                munmap
                0x00000000c0007a4b                liballoc_lock()
                0x00000000c0007a59                liballoc_unlock()
                0x00000000c0007a6f                liballoc_alloc(int)
                0x00000000c0007a87                liballoc_free(void*, int)
                0x00000000c0007aa2                realloc
                0x00000000c0007ab6                malloc
                0x00000000c0007ac6                free
                0x00000000c0007ad6                rfree
                0x00000000c0007ae6                calloc
 .text          0x00000000c0007b10       0xc7 core/main.32
                0x00000000c0007b10                KeEntryPoint
 .text          0x00000000c0007bd7      0x644 core/physmgr.32
                0x00000000c0007bd7                Phys::allocateDMA(unsigned long)
                0x00000000c0007cbf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cfa                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d3a                Phys::getPageState(unsigned long)
                0x00000000c0007d56                Phys::freePage(unsigned long)
                0x00000000c0007dbf                Phys::allocatePage()
                0x00000000c0007e8e                Phys::allocateContiguousPages(int)
                0x00000000c0007ef5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f2d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000821b        0x1 
 .text          0x00000000c000821c      0x273 core/pipe.32
                0x00000000c000821c                Pipe::isAtty()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008244                Pipe::~Pipe()
                0x00000000c000826c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000832c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xab3 core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a60                VgaText::putx(unsigned int)
                0x00000000c0008aa6                VgaText::puts(char const*)
                0x00000000c0008acc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b18                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008db6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f42                VgaText::doUpdate()
 *fill*         0x00000000c0008f43        0x1 
 .text          0x00000000c0008f44      0x1a1 core/tss.32
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f54                TSS::setESP(unsigned long)
                0x00000000c0008f68                TSS::flush()
                0x00000000c0008f88                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090e5        0x1 
 .text          0x00000000c00090e6      0x4ca core/unixfile.32
                0x00000000c00090e6                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000913c                ReservedFilename::isAtty()
                0x00000000c0009158                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091b6                UnixFile::getFileDescriptor()
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c0009440                UnixFile::~UnixFile()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c000948c                ReservedFilename::~ReservedFilename()
                0x00000000c00094b3                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095b0     0x1218 core/virtmgr.32
                0x00000000c00095b0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095ea                Virt::getPageState(unsigned long)
                0x00000000c000960d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009732                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009755                Virt::swapIDToSector(unsigned long)
                0x00000000c000976b                Virt::allocateSwapfilePage()
                0x00000000c00097eb                Virt::virtualMemorySetup()
                0x00000000c000983c                Virt::setupPageSwapping(int)
                0x00000000c00098ae                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098de                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000990c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000992b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a68                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a8c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009aa6                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009b52                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b86                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009d20                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e24                VAS::allocatePages(int, int)
                0x00000000c0009f1a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f72                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a2b2                VAS::evict(unsigned long)
                0x00000000c000a390                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a52a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a59e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ca                VAS::scanForEviction()
                0x00000000c000a6cd                mapVASFirstTime
 .text          0x00000000c000a7c8       0x5f coreobjs/c++.32
                0x00000000c000a7c8                __cxa_atexit
                0x00000000c000a7cb                __cxa_finalize
                0x00000000c000a7cc                __stack_chk_fail
                0x00000000c000a802                __cxa_pure_virtual
                0x00000000c000a813                operator new[](unsigned long)
                0x00000000c000a818                operator delete(void*, unsigned long)
                0x00000000c000a81d                operator delete[](void*)
                0x00000000c000a822                operator delete[](void*, unsigned long)
 .text          0x00000000c000a827      0x254 dbg/kconsole.32
                0x00000000c000a827                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8c7                Dbg::logc(char)
                0x00000000c000a8e7                Dbg::logs(char*)
                0x00000000c000a906                Dbg::logWriteInt(unsigned int)
                0x00000000c000a924                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a945                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa7b        0x1 
 .text          0x00000000c000aa7c      0x2d4 dbg/usban.32
                0x00000000c000aa7c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aae8                __ubsan_handle_type_mismatch_v1
                0x00000000c000abc4                __ubsan_handle_pointer_overflow
                0x00000000c000abf0                __ubsan_handle_out_of_bounds
                0x00000000c000ac1c                __ubsan_handle_add_overflow
                0x00000000c000ac48                __ubsan_handle_load_invalid_value
                0x00000000c000ac74                __ubsan_handle_divrem_overflow
                0x00000000c000aca0                __ubsan_handle_mul_overflow
                0x00000000c000accc                __ubsan_handle_sub_overflow
                0x00000000c000acf8                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad24                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad50      0x86a fs/symlink.32
                0x00000000c000ae9f                KiDeinitialiseSymlinks(void*)
                0x00000000c000af32                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000afc4                KeInitialiseSymlinks()
                0x00000000c000b138                KiIsSymlinkRegistered(char const*)
                0x00000000c000b2bc                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b463                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c000b5ba      0xd68 fs/vfs.32
                0x00000000c000b5ba                File::read(unsigned long long, void*, int*)
                0x00000000c000b612                File::write(unsigned long long, void*, int*)
                0x00000000c000b66a                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b6c2                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b6f0                File::isAtty()
                0x00000000c000b6f4                Directory::isAtty()
                0x00000000c000b6f8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b6fe                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b704                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b70a                File::~File()
                0x00000000c000b70a                File::~File()
                0x00000000c000b72e                File::~File()
                0x00000000c000b758                Directory::~Directory()
                0x00000000c000b758                Directory::~Directory()
                0x00000000c000b77c                Directory::~Directory()
                0x00000000c000b7a6                Filesystem::Filesystem()
                0x00000000c000b7a6                Filesystem::Filesystem()
                0x00000000c000b7ca                Filesystem::~Filesystem()
                0x00000000c000b7ca                Filesystem::~Filesystem()
                0x00000000c000b7d8                Filesystem::~Filesystem()
                0x00000000c000b7fc                Fs::getcwd(Process*, char*, int)
                0x00000000c000b826                Fs::initVFS()
                0x00000000c000b850                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000ba6a                File::File(char const*, Process*, bool)
                0x00000000c000ba6a                File::File(char const*, Process*, bool)
                0x00000000c000bb48                File::File(char const*, Process*)
                0x00000000c000bb48                File::File(char const*, Process*)
                0x00000000c000bb66                File::open(FileOpenMode)
                0x00000000c000bbc4                File::close()
                0x00000000c000bc24                File::seek(unsigned long long)
                0x00000000c000bc7a                File::truncate(unsigned long long)
                0x00000000c000bcd0                File::tell(unsigned long long*)
                0x00000000c000bd20                File::rewind()
                0x00000000c000bd34                File::unlink()
                0x00000000c000bd80                File::rename(char const*)
                0x00000000c000bdce                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000be2a                File::exists()
                0x00000000c000be68                File::stat(unsigned long long*, bool*)
                0x00000000c000bec9                Fs::setcwd(Process*, char*)
                0x00000000c000c028                Directory::Directory(char const*, Process*)
                0x00000000c000c028                Directory::Directory(char const*, Process*)
                0x00000000c000c0f0                Directory::open()
                0x00000000c000c14c                Directory::close()
                0x00000000c000c1ac                Directory::unlink()
                0x00000000c000c1f8                Directory::rename(char const*)
                0x00000000c000c246                Directory::exists()
                0x00000000c000c284                Directory::read(dirent*)
                0x00000000c000c2d0                Directory::create()
                0x00000000c000c31c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c322        0x2 
 .text          0x00000000c000c324       0x86 hal/bus.32
                0x00000000c000c324                Bus::Bus(char const*)
                0x00000000c000c324                Bus::Bus(char const*)
                0x00000000c000c35c                Bus::~Bus()
                0x00000000c000c35c                Bus::~Bus()
                0x00000000c000c380                Bus::~Bus()
 .text          0x00000000c000c3aa       0x96 hal/buzzer.32
                0x00000000c000c3aa                beepThread(void*)
                0x00000000c000c3e7                Krnl::beep(int, int, bool)
 .text          0x00000000c000c440      0x45f hal/clock.32
                0x00000000c000c440                User::loadClockSettings(int)
                0x00000000c000c492                Clock::Clock(char const*)
                0x00000000c000c492                Clock::Clock(char const*)
                0x00000000c000c4c8                Clock::~Clock()
                0x00000000c000c4c8                Clock::~Clock()
                0x00000000c000c4ec                Clock::~Clock()
                0x00000000c000c516                Clock::timeInSecondsLocal()
                0x00000000c000c55e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c5b7                datetimeToSeconds(datetime_t)
                0x00000000c000c6d6                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c736                secondsToDatetime(unsigned long long)
                0x00000000c000c87a                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c89f        0x1 
 .text          0x00000000c000c8a0      0x464 hal/device.32
                0x00000000c000c8a0                Device::hibernate()
                0x00000000c000c8a2                Device::wake()
                0x00000000c000c8a4                Device::detect()
                0x00000000c000c8a6                Device::disableLegacy()
                0x00000000c000c8a8                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c8aa                DriverlessDevice::close(int, int, void*)
                0x00000000c000c8ae                DriverlessDevice::detect()
                0x00000000c000c8b0                DriverlessDevice::open(int, int, void*)
                0x00000000c000c8c4                Device::~Device()
                0x00000000c000c8c4                Device::~Device()
                0x00000000c000c8d2                Device::~Device()
                0x00000000c000c8fa                Device::findAndLoadDriver()
                0x00000000c000c908                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c92e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c96e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c998                Device::getParent()
                0x00000000c000c9a4                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c9c2                Device::addChild(Device*)
                0x00000000c000ca06                Device::removeAllChildren()
                0x00000000c000ca4c                Device::hibernateAll()
                0x00000000c000ca7c                Device::wakeAll()
                0x00000000c000caac                Device::detectAll()
                0x00000000c000cadc                Device::disableLegacyAll()
                0x00000000c000cade                Device::loadDriversForAll()
                0x00000000c000cae0                Device::closeAll()
                0x00000000c000cb16                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cb4c                Device::setName(char const*)
                0x00000000c000cb5a                Device::Device(char const*)
                0x00000000c000cb5a                Device::Device(char const*)
                0x00000000c000cc56                Device::getName()
                0x00000000c000cc60                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc60                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc96                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ccda                getDevicesOfType(DeviceType)
 .text          0x00000000c000cd04       0x86 hal/diskctrl.32
                0x00000000c000cd04                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd04                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd3c                HardDiskController::~HardDiskController()
                0x00000000c000cd3c                HardDiskController::~HardDiskController()
                0x00000000c000cd60                HardDiskController::~HardDiskController()
 .text          0x00000000c000cd8a       0xe2 hal/diskphys.32
                0x00000000c000cd8a                PhysicalDisk::eject()
                0x00000000c000cd8e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cd8e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cdf6                PhysicalDisk::startCache()
                0x00000000c000ce1e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce1e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce42                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ce6c        0x0 hal/fpu.32
 .text          0x00000000c000ce6c      0x359 hal/intctrl.32
                0x00000000c000ce6c                int_handler
                0x00000000c000cef6                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cf40                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d074                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d0a8                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d126                setupINTS()
                0x00000000c000d183                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000d1c5        0x1 
 .text          0x00000000c000d1c6      0x8be hal/keybrd.32
                0x00000000c000d1c6                startGUI(void*)
                0x00000000c000d234                startGUIVESA(void*)
                0x00000000c000d2a2                sendKeyToTerminal(unsigned char)
                0x00000000c000d37d                sendKeyboardToken(KeyboardToken)
                0x00000000c000d867                clearInternalKeybuffer(VgaText*)
                0x00000000c000d89c                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d9fa                Keyboard::Keyboard(char const*)
                0x00000000c000d9fa                Keyboard::Keyboard(char const*)
                0x00000000c000da36                Keyboard::~Keyboard()
                0x00000000c000da36                Keyboard::~Keyboard()
                0x00000000c000da5a                Keyboard::~Keyboard()
 .text          0x00000000c000da84      0x3f8 hal/logidisk.32
                0x00000000c000da84                LogicalDisk::close(int, int, void*)
                0x00000000c000da88                LogicalDisk::~LogicalDisk()
                0x00000000c000da88                LogicalDisk::~LogicalDisk()
                0x00000000c000daac                LogicalDisk::~LogicalDisk()
                0x00000000c000dad6                LogicalDisk::open(int, int, void*)
                0x00000000c000daea                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000db22                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000db68                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000db68                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc28                LogicalDisk::assignDriveLetter()
                0x00000000c000dce2                LogicalDisk::mount()
                0x00000000c000dd2a                LogicalDisk::unmount()
                0x00000000c000dd3a                LogicalDisk::eject()
                0x00000000c000dd4e                LogicalDisk::unassignDriveLetter()
                0x00000000c000dda4                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000de10                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000de7c       0x86 hal/mouse.32
                0x00000000c000de7c                Mouse::Mouse(char const*)
                0x00000000c000de7c                Mouse::Mouse(char const*)
                0x00000000c000deb4                Mouse::~Mouse()
                0x00000000c000deb4                Mouse::~Mouse()
                0x00000000c000ded8                Mouse::~Mouse()
 .text          0x00000000c000df02       0x90 hal/nic.32
                0x00000000c000df02                NIC::getMAC()
                0x00000000c000df08                NIC::write(int, unsigned char*, int*)
                0x00000000c000df0e                NIC::NIC(char const*)
                0x00000000c000df0e                NIC::NIC(char const*)
                0x00000000c000df44                NIC::~NIC()
                0x00000000c000df44                NIC::~NIC()
                0x00000000c000df68                NIC::~NIC()
 .text          0x00000000c000df92      0x33b hal/partition.32
                0x00000000c000df92                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e03a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e2cd        0x3 
 .text          0x00000000c000e2d0       0x86 hal/serial.32
                0x00000000c000e2d0                Serial::Serial(char const*)
                0x00000000c000e2d0                Serial::Serial(char const*)
                0x00000000c000e308                Serial::~Serial()
                0x00000000c000e308                Serial::~Serial()
                0x00000000c000e32c                Serial::~Serial()
 *fill*         0x00000000c000e356        0x2 
 .text          0x00000000c000e358      0x234 hal/timer.32
                0x00000000c000e358                Timer::Timer(char const*)
                0x00000000c000e358                Timer::Timer(char const*)
                0x00000000c000e390                Timer::~Timer()
                0x00000000c000e390                Timer::~Timer()
                0x00000000c000e3b4                Timer::~Timer()
                0x00000000c000e3de                Timer::read()
                0x00000000c000e3e9                setupTimer(int)
                0x00000000c000e424                timerHandler(unsigned int)
 .text          0x00000000c000e58c      0x444 hal/vcache.32
                0x00000000c000e58c                VCache::VCache(PhysicalDisk*)
                0x00000000c000e58c                VCache::VCache(PhysicalDisk*)
                0x00000000c000e6fc                VCache::invalidateReadBuffer()
                0x00000000c000e70c                VCache::writeWriteBuffer()
                0x00000000c000e758                VCache::~VCache()
                0x00000000c000e758                VCache::~VCache()
                0x00000000c000e7b0                VCache::~VCache()
                0x00000000c000e7d8                VCache::write(unsigned long long, int, void*)
                0x00000000c000e8c6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e9d0      0x4c7 hal/video.32
                0x00000000c000e9d0                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ea1c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ea8c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eb0a                Video::clearScreen(unsigned int)
                0x00000000c000eb3e                Video::putpixel(int, int, unsigned int)
                0x00000000c000eb4c                Video::readPixelApprox(int, int)
                0x00000000c000eb60                Video::Video(char const*)
                0x00000000c000eb60                Video::Video(char const*)
                0x00000000c000eb96                Video::~Video()
                0x00000000c000eb96                Video::~Video()
                0x00000000c000ebba                Video::~Video()
                0x00000000c000ebe4                Video::isMonochrome()
                0x00000000c000ebf0                Video::getWidth()
                0x00000000c000ebfc                Video::getHeight()
                0x00000000c000ec08                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ecc4                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ee2c                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ee97        0x1 
 .text          0x00000000c000ee98     0x138b hw/acpi.32
                0x00000000c000ee98                ACPI::close(int, int, void*)
                0x00000000c000ef4c                findRSDP()
                0x00000000c000efe4                loadACPITables(unsigned char*)
                0x00000000c000f250                findRSDT(unsigned char*)
                0x00000000c000f3a8                findDataTable(unsigned char*, char*)
                0x00000000c000f428                scanMADT()
                0x00000000c000f8e0                ACPI::ACPI()
                0x00000000c000f8e0                ACPI::ACPI()
                0x00000000c000f934                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fa30                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fafc                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fb04                ACPI::detectPCI()
                0x00000000c000fd24                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fd6c                ACPI::sleep()
                0x00000000c000fd88                ACPI::open(int, int, void*)
 *fill*         0x00000000c0010223        0x1 
 .text          0x00000000c0010224      0xbc5 hw/cpu.32
                0x00000000c0010224                CPU::close(int, int, void*)
                0x00000000c0010228                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0010244                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c001025c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c00102d0                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0010354                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010382                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00103b0                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00103de                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c001040c                CPU::CPU()
                0x00000000c001040c                CPU::CPU()
                0x00000000c001049a                CPU::displayFeatures()
                0x00000000c001049c                CPU::detectFeatures()
                0x00000000c0010b70                CPU::setupSMEP()
                0x00000000c0010b7c                CPU::setupUMIP()
                0x00000000c0010b86                CPU::setupTSC()
                0x00000000c0010b90                CPU::setupLargePages()
                0x00000000c0010b9a                CPU::setupPAT()
                0x00000000c0010bd6                CPU::setupMTRR()
                0x00000000c0010bd8                CPU::setupGlobalPages()
                0x00000000c0010be2                CPU::allowUsermodeDataAccess()
                0x00000000c0010bf4                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010c06                CPU::setupSMAP()
                0x00000000c0010c14                CPU::setupFeatures()
                0x00000000c0010ce0                CPU::open(int, int, void*)
 .text          0x00000000c0010de9       0xb6 krnl/atexit.32
                0x00000000c0010de9                KeInitialiseAtexit()
                0x00000000c0010e08                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010e3c                KeExecuteAtexit()
 .text          0x00000000c0010e9f       0xdf krnl/bootmsg.32
                0x00000000c0010e9f                KeDisplaySplashScreen()
                0x00000000c0010f1b                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010f7e        0x2 
 .text          0x00000000c0010f80       0x1d krnl/compat.32
                0x00000000c0010f80                Krnl::handlePowerButton()
                0x00000000c0010f90                Krnl::handleSleepButton()
 .text          0x00000000c0010f9d       0x2b krnl/crc32.32
                0x00000000c0010f9d                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010fc8      0x5bf krnl/env.32
                0x00000000c0010fc8                EnvVarContainer::getEnv(char const*)
                0x00000000c0011006                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00110c8                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00110ca                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00112ee                EnvVarContainer::__loadSystem()
                0x00000000c0011308                EnvVarContainer::__loadUser()
                0x00000000c001130a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001130a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001132c                EnvVarContainer::~EnvVarContainer()
                0x00000000c001132c                EnvVarContainer::~EnvVarContainer()
                0x00000000c001135c                KeGetEnv(Process*, char const*)
                0x00000000c00113c1                KeSetEnvSystem(char const*, char const*)
                0x00000000c00113db                KeSetEnvUser(char const*, char const*)
                0x00000000c00113fa                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c001140d                KeDeleteEnvSystem(char const*)
                0x00000000c001140e                KeDeleteEnvUser(char const*)
                0x00000000c001140f                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0011410                KeNewProcessEnv(Process*)
                0x00000000c0011432                KeCopyProcessEnv(Process*, Process*)
                0x00000000c001147e                KeLoadSystemEnv()
                0x00000000c00114ac                KeLoadUserEnv()
                0x00000000c00114d2                KeFlushEnv()
                0x00000000c00114d3                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00114f3                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011587       0x94 krnl/inlines.32
                0x00000000c0011587                CPU::current()
                0x00000000c0011593                operator new(unsigned long)
                0x00000000c0011598                operator delete(void*)
                0x00000000c001159d                disableIRQs()
                0x00000000c001159f                enableIRQs()
                0x00000000c00115a1                lockScheduler()
                0x00000000c00115a9                unlockScheduler()
                0x00000000c00115b8                lockStuff()
                0x00000000c00115c6                unlockStuff()
                0x00000000c0011600                Virt::getAKernelVAS()
                0x00000000c0011606                __not_memcpy
 .text          0x00000000c001161b        0xc krnl/panic.32
                0x00000000c001161b                KePanic(char const*)
 .text          0x00000000c0011627      0x142 krnl/powctrl.32
                0x00000000c0011627                KePowerThread(void*)
                0x00000000c0011655                KeChangePowerSettings(PowerSettings)
                0x00000000c001166b                KeUserIOReceived()
                0x00000000c0011676                KeHandlePowerButton()
                0x00000000c00116ab                KeHandleSleepButton()
                0x00000000c00116e0                KeSetupPowerManager()
 .text          0x00000000c0011769       0x9d krnl/random.32
                0x00000000c0011769                KeRand()
                0x00000000c00117ab                KeSeedRand(unsigned int)
                0x00000000c00117d4                KeInitRand()
 *fill*         0x00000000c0011806        0x2 
 .text          0x00000000c0011808      0x1bc krnl/resolve.32
                0x00000000c0011808                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00119c4      0x322 krnl/signal.32
                0x00000000c00119c4                KiSigKill(int)
                0x00000000c00119d8                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00119d9                KiDefaultSignalHandlerPause(int)
                0x00000000c0011a05                KiDefaultSignalHandlerResume(int)
                0x00000000c0011a31                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011a36                KeInitSignals()
                0x00000000c0011a88                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011abe                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011b3b                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011c32                KiCheckSignalZ
                0x00000000c0011c74                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011caf                KiFinishSignalZ
 .text          0x00000000c0011ce6      0xe10 krnl/syscalls.32
                0x00000000c0011ce6                SysSeekDir(regs*)
                0x00000000c0011ceb                SysTellDir(regs*)
                0x00000000c0011cf0                SysVerify(regs*)
                0x00000000c0011cfa                SysGetArgc(regs*)
                0x00000000c0011d0e                SysTTYName(regs*)
                0x00000000c0011d16                SysFormatDisk(regs*)
                0x00000000c0011d8d                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011de1                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011e3a                SysShutdown(regs*)
                0x00000000c0011e98                SysRealpath(regs*)
                0x00000000c0011edc                SysReadDir(regs*)
                0x00000000c0011f5c                SysIsATTY(regs*)
                0x00000000c0011fb6                SysSeek(regs*)
                0x00000000c001200d                SysTell(regs*)
                0x00000000c001207a                SysSize(regs*)
                0x00000000c00120ed                SysSizeFromFilename(regs*)
                0x00000000c001221e                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c001234f                SysClose(regs*)
                0x00000000c00123af                SysOpenDir(regs*)
                0x00000000c001242c                SysMakeDir(regs*)
                0x00000000c001249a                SysCloseDir(regs*)
                0x00000000c00124ee                SysWait(regs*)
                0x00000000c001250f                SysNotImpl(regs*)
                0x00000000c001252a                SysPanic(regs*)
                0x00000000c0012545                SysRmdir(regs*)
                0x00000000c00125aa                SysUnlink(regs*)
                0x00000000c001260f                SysGetArgv(regs*)
                0x00000000c001265c                SysUSleep(regs*)
                0x00000000c0012685                SysSpawn(regs*)
                0x00000000c00126f8                SysGetEnv(regs*)
                0x00000000c00127a9                SysSetFatAttrib(regs*)
                0x00000000c001281c                SysPipe(regs*)
                0x00000000c0012861                SysGetUnixTime(regs*)
                0x00000000c0012875                string_ends_with(char const*, char const*)
                0x00000000c00128bd                SysOpen(regs*)
                0x00000000c0012ab4                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012af6        0x2 
 .text          0x00000000c0012af8      0x159 net/ethernet.32
                0x00000000c0012af8                KeSwitchEndian16(unsigned short)
                0x00000000c0012b1c                KeSwitchEndian32(unsigned int)
                0x00000000c0012b4c                EthernetCRC32(unsigned char*, int)
                0x00000000c0012bf0                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012c51      0xd56 reg/cm.32
                0x00000000c0012c51                CmOpen(char const*)
                0x00000000c0012d6f                CmClose(Reghive_Tag*)
                0x00000000c0012d85                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012dc1                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012e38                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012e77                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012ea9                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012ee5                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012f0d                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012f2e                CmExpand(Reghive_Tag*, int)
                0x00000000c0012fa9                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c001302f                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0013123                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c001325f                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c00132c0                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c00132f0                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0013327                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0013351                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013391                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013435                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0013463                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013601                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c001364e                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00136c8                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001371b                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00137df                zStrtok(char*, char const*)
                0x00000000c0013851                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00138d2                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013975                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00139a7      0x52a reg/registry.32
                0x00000000c00139a7                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013b18                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013c6d                Reg::getLine(char*, char*, char*)
                0x00000000c0013ca4                Reg::readInt(char*, char*, int*)
                0x00000000c0013d92                Reg::readString(char*, char*, char*, int)
                0x00000000c0013e13                Reg::readBool(char*, char*, bool*)
                0x00000000c0013e38                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013e64                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013e90                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013ed1       0x36 sys/eject.32
                0x00000000c0013ed1                SysEject(regs*)
 .text          0x00000000c0013f07       0x18 sys/exit.32
                0x00000000c0013f07                SysExit(regs*)
 .text          0x00000000c0013f1f       0x1f sys/getcwd.32
                0x00000000c0013f1f                SysGetCwd(regs*)
 .text          0x00000000c0013f3e        0xc sys/getpid.32
                0x00000000c0013f3e                SysGetPID(regs*)
 .text          0x00000000c0013f4a       0x1a sys/getramdata.32
                0x00000000c0013f4a                SysGetRAMData(regs*)
 .text          0x00000000c0013f64       0x82 sys/getvgaptr.32
                0x00000000c0013f64                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013fe6        0x2 
 .text          0x00000000c0013fe8       0xb9 sys/kill.32
                0x00000000c0013fe8                SysKill(regs*)
 .text          0x00000000c00140a1       0xa8 sys/loaddll.32
                0x00000000c00140a1                SysLoadDLL(regs*)
 .text          0x00000000c0014149       0x68 sys/read.32
                0x00000000c0014149                SysRead(regs*)
 .text          0x00000000c00141b1       0x29 sys/registersignal.32
                0x00000000c00141b1                SysRegisterSignal(regs*)
 .text          0x00000000c00141da      0x19c sys/registry.32
                0x00000000c00141da                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014251                SysRegistryReadExtent(regs*)
                0x00000000c0014299                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00142c1                SysRegistryEnterDirectory(regs*)
                0x00000000c00142e9                SysRegistryGetNext(regs*)
                0x00000000c0014311                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001434b                SysRegistryOpen(regs*)
                0x00000000c001435f                SysRegistryClose(regs*)
 .text          0x00000000c0014376       0x55 sys/sbrk.32
                0x00000000c0014376                SysSbrk(regs*)
 .text          0x00000000c00143cb       0x1c sys/setcwd.32
                0x00000000c00143cb                SysSetCwd(regs*)
 .text          0x00000000c00143e7       0x96 sys/settime.32
                0x00000000c00143e7                SysSetTime(regs*)
 .text          0x00000000c001447d       0x2d sys/symlink.32
                0x00000000c001447d                SysSymlink(regs*)
 .text          0x00000000c00144aa       0x4a sys/timezone.32
                0x00000000c00144aa                SysTimezone(regs*)
 .text          0x00000000c00144f4       0xfc sys/truncate.32
                0x00000000c00144f4                SysTruncate(regs*)
 .text          0x00000000c00145f0       0x68 sys/write.32
                0x00000000c00145f0                SysWrite(regs*)
 .text          0x00000000c0014658       0x62 sys/wsbe.32
                0x00000000c0014658                SysWsbe(regs*)
 .text          0x00000000c00146ba       0x25 sys/yield.32
                0x00000000c00146ba                SysYield(regs*)
 .text          0x00000000c00146df     0x11e6 thr/elf.32
                0x00000000c00146df                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001496d                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014b7f                Thr::runtimeReferenceHelper()
                0x00000000c0014b92                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014be1                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014e9f                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00155d8                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001560a                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015641                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001565b                Thr::loadDLL(char const*, bool)
                0x00000000c001588c                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00158c5        0x3 
 .text          0x00000000c00158c8     0x13d9 thr/prcssthr.32
                0x00000000c00158c8                userModeEntryPoint(void*)
                0x00000000c00158f0                changeTSS
                0x00000000c0015920                switchToThread(ThreadControlBlock*)
                0x00000000c00159d0                Process::addArgs(char**)
                0x00000000c0015a3c                Process::Process(char const*, Process*, char**)
                0x00000000c0015a3c                Process::Process(char const*, Process*, char**)
                0x00000000c0015c48                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015c48                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015e1c                taskStartupFunction
                0x00000000c0015e28                Semaphore::Semaphore(int)
                0x00000000c0015e28                Semaphore::Semaphore(int)
                0x00000000c0015e58                Mutex::Mutex()
                0x00000000c0015e58                Mutex::Mutex()
                0x00000000c0015e6c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015f78                Process::createUserThread()
                0x00000000c0015f98                setupMultitasking(void (*)())
                0x00000000c00160bc                schedule()
                0x00000000c0016150                Semaphore::tryAcquire()
                0x00000000c0016224                Semaphore::assertLocked(char const*)
                0x00000000c00162a8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00162d0                blockTask(TaskState)
                0x00000000c0016308                waitTask(int, int*, int)
                0x00000000c001634c                milliTenthSleepUntil(unsigned int)
                0x00000000c00163ec                milliTenthSleep(unsigned int)
                0x00000000c0016400                sleep(unsigned int)
                0x00000000c001641c                Semaphore::acquire()
                0x00000000c00164e4                taskReturned
                0x00000000c0016528                Thr::processFromPID(int)
                0x00000000c00165d4                unblockTask(ThreadControlBlock*)
                0x00000000c0016680                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016954                cleanerTaskFunction(void*)
                0x00000000c0016a5c                terminateTask(int)
                0x00000000c0016b48                Thr::terminateFromIRQ(int)
                0x00000000c0016b58                Semaphore::release()
 .text          0x00000000c0016ca1      0xc27 vm86/vm8086.32
                0x00000000c0016ca1                Vm::inbv(unsigned short)
                0x00000000c0016cb4                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016cea                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016cfa                Vm::getSegment(unsigned int)
                0x00000000c0016d02                Vm::getOffset(unsigned int)
                0x00000000c0016d07                Vm::mainloop2()
                0x00000000c0016d41                Vm::mainVm8086Loop(void*)
                0x00000000c0016d51                Vm::mainloop3(unsigned long)
                0x00000000c0016d77                Vm::initialise8086()
                0x00000000c0016dba                Vm::finish8086()
                0x00000000c0016e1b                Vm::getOutput8086(unsigned char*)
                0x00000000c0016e40                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016ef9                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017097                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017130                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017141                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017153                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017164                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017179                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001718f                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00171a4                Vm::faultHandler(regs*)
 .text          0x00000000c00178c8      0xaf0 arch/i386/hal.32
                0x00000000c00178c8                noCopro(unsigned long)
                0x00000000c00178c9                nmiHandler(regs*, void*)
                0x00000000c00178e2                doubleFault(regs*, void*)
                0x00000000c00178fb                displayDebugInfo(regs*)
                0x00000000c0017c80                HalSystemIdle()
                0x00000000c0017cfc                displayProgramFault(char const*)
                0x00000000c0017d48                gpFault(regs*, void*)
                0x00000000c0017daf                pgFault(regs*, void*)
                0x00000000c0017e38                otherISRHandler(regs*, void*)
                0x00000000c0017e6c                opcodeFault(regs*, void*)
                0x00000000c0017eef                i386SaveCoprocessor(void*)
                0x00000000c0017f03                i386LoadCoprocessor(void*)
                0x00000000c0017f17                x87EmulHandler(regs*, void*)
                0x00000000c0017fb4                HalInitialiseCoprocessor()
                0x00000000c0018062                HalPanic(char const*)
                0x00000000c0018176                HalQueryPerformanceCounter()
                0x00000000c0018191                HalInitialise()
                0x00000000c0018347                HalMakeBeep(int)
                0x00000000c0018381                HalGetRand()
                0x00000000c0018384                HalEndOfInterrupt(int)
                0x00000000c00183b5                HalRestart()
                0x00000000c00183b6                HalShutdown()
                0x00000000c00183b7                HalSleep()
 .text          0x00000000c00183b8      0x2dc arch/i386/pic.32
                0x00000000c00183b8                picIoWait()
                0x00000000c00183c0                picDisable()
                0x00000000c00183f4                picGetIRQReg(int)
                0x00000000c0018470                picOpen()
                0x00000000c00185f4                picEOI(int)
 .text          0x00000000c0018694      0x674 arch/i386/rtc.32
                0x00000000c0018694                RTC::open(int, int, void*)
                0x00000000c0018698                RTC::close(int, int, void*)
                0x00000000c001869c                RTC::timeInSecondsUTC()
                0x00000000c00186ae                RTC::timeInDatetimeUTC()
                0x00000000c00186d4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018712                RTC::~RTC()
                0x00000000c0018712                RTC::~RTC()
                0x00000000c0018736                RTC::~RTC()
                0x00000000c0018760                RTC::get_update_in_progress_flag()
                0x00000000c001877a                RTC::completeRTCRefresh()
                0x00000000c0018a5a                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018c08                rtcIRQHandler(regs*, void*)
                0x00000000c0018c4e                RTC::RTC()
                0x00000000c0018c4e                RTC::RTC()
 .text          0x00000000c0018d08      0x1f4 arch/i386/vga.32
                0x00000000c0018d08                HalConsoleScroll(int, int)
                0x00000000c0018e10                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018e74                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018efc     0x14cf fs/fat/vfslink.32
                0x00000000c0018efc                FAT::getName()
                0x00000000c0018f04                FAT::tell(void*, unsigned long long*)
                0x00000000c0018f40                FAT::stat(void*, unsigned long long*)
                0x00000000c0018f7c                FAT::~FAT()
                0x00000000c0018f7c                FAT::~FAT()
                0x00000000c0018fa0                FAT::~FAT()
                0x00000000c0018fc8                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001906c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019130                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019314                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019530                FAT::allocateSwapfile(char const*, int)
                0x00000000c00196f0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019860                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00198c0                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019920                FAT::close(void*)
                0x00000000c0019974                FAT::closeDir(void*)
                0x00000000c00199c8                FAT::truncate(void*, unsigned long long)
                0x00000000c0019a34                FAT::seek(void*, unsigned long long)
                0x00000000c0019a8c                fatWrapperReadDisk
                0x00000000c0019acc                fatWrapperWriteDisk
                0x00000000c0019b0c                fatWrapperIoctl
                0x00000000c0019c28                FAT::FAT()
                0x00000000c0019c28                FAT::FAT()
                0x00000000c0019c80                FAT::fixFilepath(char*)
                0x00000000c0019cc0                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019e34                FAT::openDir(char const*, void**)
                0x00000000c0019ee4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019fdc                FAT::unlink(char const*)
                0x00000000c001a05c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a210                FAT::rename(char const*, char const*)
                0x00000000c001a2dc                FAT::mkdir(char const*)
                0x00000000c001a35c                FAT::exists(char const*)
 *fill*         0x00000000c001a3cb        0x1 
 .text          0x00000000c001a3cc       0x94 fs/iso9660/helper.32
                0x00000000c001a3cc                isoReadDiscSectorHelper
                0x00000000c001a428                iso_kprintf
                0x00000000c001a444                iso_kprintfd
 .text          0x00000000c001a460      0x71c fs/iso9660/vfslink.32
                0x00000000c001a460                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a466                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a46c                ISO9660::getName()
                0x00000000c001a472                ISO9660::closeDir(void*)
                0x00000000c001a47c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a482                ISO9660::unlink(char const*)
                0x00000000c001a488                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a48e                ISO9660::rename(char const*, char const*)
                0x00000000c001a494                ISO9660::mkdir(char const*)
                0x00000000c001a49a                ISO9660::~ISO9660()
                0x00000000c001a49a                ISO9660::~ISO9660()
                0x00000000c001a4be                ISO9660::~ISO9660()
                0x00000000c001a4e6                ISO9660::exists(char const*)
                0x00000000c001a4fa                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a5e0                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a628                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a66a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a6a8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a6fa                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a83c                ISO9660::close(void*)
                0x00000000c001a86c                ISO9660::openDir(char const*, void**)
                0x00000000c001a946                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001aa63                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001aae2                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001ab54                ISO9660::ISO9660()
                0x00000000c001ab54                ISO9660::ISO9660()
 .text          0x00000000c001ab7c      0x26c hal/sound/sndcard.32
                0x00000000c001ab7c                SoundCard::beginPlayback()
                0x00000000c001ab8a                SoundCard::stopPlayback()
                0x00000000c001ab98                SoundCard::SoundCard(char const*)
                0x00000000c001ab98                SoundCard::SoundCard(char const*)
                0x00000000c001ac36                SoundCard::~SoundCard()
                0x00000000c001ac36                SoundCard::~SoundCard()
                0x00000000c001ac5a                SoundCard::~SoundCard()
                0x00000000c001ac84                SoundCard::configureRates(int, int, int)
                0x00000000c001acb4                SoundCard::getSamples16(int, short*)
                0x00000000c001ad10                SoundCard::getSamples32(int, int*)
                0x00000000c001ad96                SoundCard::addChannel(SoundPort*)
                0x00000000c001add4                SoundCard::removeChannel(int)
 .text          0x00000000c001ade8      0x38a hal/sound/sndport.32
                0x00000000c001ade8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ade8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ae74                SoundPort::~SoundPort()
                0x00000000c001ae74                SoundPort::~SoundPort()
                0x00000000c001aea8                SoundPort::unpause()
                0x00000000c001aeb4                SoundPort::pause()
                0x00000000c001aec0                SoundPort::getBufferUsed()
                0x00000000c001aec8                SoundPort::getBufferSize()
                0x00000000c001aed0                SoundPort::buffer16(short*, int)
                0x00000000c001af5c                SoundPort::buffer32(int*, int)
                0x00000000c001afe8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b0b4                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b172        0x0 hw/bus/isa.32
 .text          0x00000000c001b172      0xbb7 hw/bus/pci.32
                0x00000000c001b172                PCI::open(int, int, void*)
                0x00000000c001b190                PCI::close(int, int, void*)
                0x00000000c001b194                PCI::PCI()
                0x00000000c001b194                PCI::PCI()
                0x00000000c001b22c                PCI::readBAR8(unsigned int, int)
                0x00000000c001b248                PCI::readBAR16(unsigned int, int)
                0x00000000c001b266                PCI::readBAR32(unsigned int, int)
                0x00000000c001b282                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b2a2                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b2c4                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b2e4                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b35a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b404                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b428                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b450                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b49a                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4c2                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4e6                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b50a                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b532                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b596                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b67e                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b944                PCI::checkBus(unsigned char)
                0x00000000c001b968                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bae2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc5e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bcd0                PCI::detect()
 *fill*         0x00000000c001bd29        0x1 
 .text          0x00000000c001bd2a      0xb9a hw/diskctrl/ide.32
                0x00000000c001bd2a                IDE::close(int, int, void*)
                0x00000000c001bd2e                IDE::IDE()
                0x00000000c001bd2e                IDE::IDE()
                0x00000000c001bd62                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bd74                selectDrive(unsigned char, unsigned char)
                0x00000000c001bd76                IDE::getBase(unsigned char)
                0x00000000c001bd88                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001be48                IDE::read(unsigned char, unsigned char)
                0x00000000c001bef6                IDE::waitInterrupt(unsigned char)
                0x00000000c001bf58                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bf74                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bf90                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bfda                IDE::open(int, int, void*)
                0x00000000c001c418                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c4e8                IDE::detect()
                0x00000000c001c7b6                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c870                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c8c4      0x32a hw/diskctrl/satabus.32
                0x00000000c001c8c4                SATABus::close(int, int, void*)
                0x00000000c001c8c8                SATABus::detect()
                0x00000000c001c8ca                SATABus::SATABus()
                0x00000000c001c8ca                SATABus::SATABus()
                0x00000000c001c950                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c982                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c9ca                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c9ea                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca14                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cb24                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cbce                SATABus::open(int, int, void*)
 .text          0x00000000c001cbee      0x93f hw/diskphys/ata.32
                0x00000000c001cbee                ATA::close(int, int, void*)
                0x00000000c001cc12                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cc14                ATA::ATA()
                0x00000000c001cc14                ATA::ATA()
                0x00000000c001cc42                ATA::flush(bool)
                0x00000000c001cc90                ATA::readyForCommand()
                0x00000000c001ccdc                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d072                ATA::detectCHS()
                0x00000000c001d09c                ATA::open(int, int, void*)
                0x00000000c001d168                combineCharAndColour(char, unsigned char)
                0x00000000c001d179                combineColours(unsigned char, unsigned char)
                0x00000000c001d186                ATA::read(unsigned long long, int, void*)
                0x00000000c001d35c                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d52d        0x1 
 .text          0x00000000c001d52e      0x618 hw/diskphys/atapi.32
                0x00000000c001d52e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d534                ATAPI::close(int, int, void*)
                0x00000000c001d558                ATAPI::ATAPI()
                0x00000000c001d558                ATAPI::ATAPI()
                0x00000000c001d586                ATAPI::readyForCommand()
                0x00000000c001d5d8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d8a0                ATAPI::diskRemoved()
                0x00000000c001d8da                ATAPI::eject()
                0x00000000c001d922                ATAPI::diskInserted()
                0x00000000c001d92e                ATAPI::detectMedia()
                0x00000000c001d9ec                ATAPI::open(int, int, void*)
                0x00000000c001dacc                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001db46      0x807 hw/diskphys/sata.32
                0x00000000c001db46                SATA::close(int, int, void*)
                0x00000000c001db6a                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001db6c                SATA::open(int, int, void*)
                0x00000000c001dc16                SATA::SATA()
                0x00000000c001dc16                SATA::SATA()
                0x00000000c001dc44                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001de98                SATA::read(unsigned long long, int, void*)
                0x00000000c001e0e8                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e34d        0x1 
 .text          0x00000000c001e34e      0x5d0 hw/diskphys/satapi.32
                0x00000000c001e34e                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e354                SATAPI::close(int, int, void*)
                0x00000000c001e378                SATAPI::SATAPI()
                0x00000000c001e378                SATAPI::SATAPI()
                0x00000000c001e3a6                SATAPI::diskRemoved()
                0x00000000c001e3a8                SATAPI::diskInserted()
                0x00000000c001e3c4                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e6a2                SATAPI::eject()
                0x00000000c001e6de                SATAPI::detectMedia()
                0x00000000c001e734                SATAPI::open(int, int, void*)
                0x00000000c001e834                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e91e      0x45b hw/intctrl/apic.32
                0x00000000c001e91e                IOAPIC::close(int, int, void*)
                0x00000000c001e924                apicGetBase()
                0x00000000c001e96a                IOAPIC::IOAPIC()
                0x00000000c001e96a                IOAPIC::IOAPIC()
                0x00000000c001e992                apicOpen()
                0x00000000c001eb0e                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001eb40                IOAPIC::read(int)
                0x00000000c001eb68                IOAPIC::open(int, int, void*)
                0x00000000c001ec4e                IOAPIC::write(int, int)
                0x00000000c001ec7a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ed79        0x3 
 .text          0x00000000c001ed7c       0xf0 hw/timer/apictimer.32
                0x00000000c001ed7c                APICTimer::close(int, int, void*)
                0x00000000c001ed84                apicTimerHandler(regs*, void*)
                0x00000000c001edac                APICTimer::open(int, int, void*)
                0x00000000c001ee1c                APICTimer::write(int)
                0x00000000c001ee44                APICTimer::APICTimer()
                0x00000000c001ee44                APICTimer::APICTimer()
 .text          0x00000000c001ee6c      0x1ad hw/timer/pit.32
                0x00000000c001ee6c                PIT::write(int)
                0x00000000c001eef0                pitHandler(regs*, void*)
                0x00000000c001ef18                PIT::open(int, int, void*)
                0x00000000c001ef68                PIT::close(int, int, void*)
                0x00000000c001ef98                PIT::PIT()
                0x00000000c001ef98                PIT::PIT()
 *fill*         0x00000000c001f019        0x7 
 .text          0x00000000c001f020       0x83 arch/i386/avx.32
                0x00000000c001f020                avxDetect
                0x00000000c001f04a                avxSave
                0x00000000c001f05b                avxLoad
                0x00000000c001f06c                avxInit
                0x00000000c001f08e                avxClose
                0x00000000c001f08f                wouldSheSayYes
 *fill*         0x00000000c001f0a3        0xd 
 .text          0x00000000c001f0b0      0x2ec arch/i386/interrupt.32
                0x00000000c001f0b0                isr0
                0x00000000c001f0c0                isr1
                0x00000000c001f0ca                isr2
                0x00000000c001f0d4                isr3
                0x00000000c001f0de                isr4
                0x00000000c001f0e8                isr5
                0x00000000c001f0f2                isr6
                0x00000000c001f0fc                isr7
                0x00000000c001f106                isr8
                0x00000000c001f10e                isr9
                0x00000000c001f118                isr10
                0x00000000c001f120                isr11
                0x00000000c001f128                isr12
                0x00000000c001f130                isr13
                0x00000000c001f14a                isr14
                0x00000000c001f152                isr15
                0x00000000c001f15c                isr16
                0x00000000c001f166                isr17
                0x00000000c001f170                isr18
                0x00000000c001f17a                irq3
                0x00000000c001f184                irq4
                0x00000000c001f18e                irq5
                0x00000000c001f198                irq6
                0x00000000c001f1a2                irq7
                0x00000000c001f1ac                irq8
                0x00000000c001f1b6                irq9
                0x00000000c001f1c0                irq10
                0x00000000c001f1ca                irq11
                0x00000000c001f1d4                irq12
                0x00000000c001f1de                irq13
                0x00000000c001f1e8                irq14
                0x00000000c001f1f2                irq15
                0x00000000c001f1fc                irq1
                0x00000000c001f203                irq2
                0x00000000c001f20a                isr96
                0x00000000c001f211                irq0
                0x00000000c001f216                int_common_stub
                0x00000000c001f248                syscall_common_stub
                0x00000000c001f34c                irq16
                0x00000000c001f356                irq17
                0x00000000c001f360                irq18
                0x00000000c001f36a                irq19
                0x00000000c001f374                irq20
                0x00000000c001f37e                irq21
                0x00000000c001f388                irq22
                0x00000000c001f392                irq23
 *fill*         0x00000000c001f39c        0x4 
 .text          0x00000000c001f3a0       0x10 arch/i386/rdrand.32
                0x00000000c001f3a0                i386GetRDRAND
 .text          0x00000000c001f3b0       0x39 arch/i386/sse.32
                0x00000000c001f3b0                absolutelyNoChanceInHell
                0x00000000c001f3b0                sseDetect
                0x00000000c001f3c8                sseSave
                0x00000000c001f3d0                sseLoad
                0x00000000c001f3d8                sseInit
                0x00000000c001f3e8                sseClose
 *fill*         0x00000000c001f3e9        0x7 
 .text          0x00000000c001f3f0       0x49 arch/i386/x87.32
                0x00000000c001f3f6                x87Detect
                0x00000000c001f411                x87Save
                0x00000000c001f418                x87Load
                0x00000000c001f41f                x87Init
                0x00000000c001f438                x87Close
 *fill*         0x00000000c001f439        0x3 
 .text          0x00000000c001f43c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f461        0x0 crtn.32
 *fill*         0x00000000c001f461        0x3 
 .text          0x00000000c001f464      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f464                __divdi3
 *fill*         0x00000000c001f5af        0x1 
 .text          0x00000000c001f5b0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f5b0                __moddi3
 *fill*         0x00000000c001f72e        0x2 
 .text          0x00000000c001f730       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f730                __udivdi3
 *fill*         0x00000000c001f82f        0x1 
 .text          0x00000000c001f830      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f830                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f950        0x0
 .iplt          0x00000000c001f950        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f94a        0xf
 .init          0x00000000c001f94a        0x3 crti.32
                0x00000000c001f94a                _init
 .init          0x00000000c001f94d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f952        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f957        0x2 crtn.32

.fini           0x00000000c001f959        0xa
 .fini          0x00000000c001f959        0x3 crti.32
                0x00000000c001f959                _fini
 .fini          0x00000000c001f95c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f961        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f964       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f964       0x23 core/computer.32
                0x00000000c001f964                Computer::~Computer()
                0x00000000c001f964                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f988       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f988       0x2a core/computer.32
                0x00000000c001f988                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f9b2       0x21
 .text._Z10idleCommonv
                0x00000000c001f9b2       0x21 core/idle.32
                0x00000000c001f9b2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f9d4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f9d4        0x2 core/unixfile.32
                0x00000000c001f9d4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f9d4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f9d6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f9d6       0x42 core/unixfile.32
                0x00000000c001f9d6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f9d6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fa18       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fa18       0xd3 core/unixfile.32
                0x00000000c001fa18                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001faec        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001faec        0x7 core/unixfile.32
                0x00000000c001faec                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001faf4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001faf4       0xa1 core/unixfile.32
                0x00000000c001faf4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fb96        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fb96        0x8 core/unixfile.32
                0x00000000c001fb96                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb9e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb9e       0x1a hal/device.32
                0x00000000c001fb9e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fb9e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fbb8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fbb8       0x2a hal/device.32
                0x00000000c001fbb8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fbe2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fbe2       0xdc hal/device.32
                0x00000000c001fbe2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fcbe       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fcbe       0x42 hal/device.32
                0x00000000c001fcbe                LinkedList<Device>::LinkedList()
                0x00000000c001fcbe                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fd00       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fd00       0x1c hal/timer.32
                0x00000000c001fd00                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fd1c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fd1c        0x7 hal/timer.32
                0x00000000c001fd1c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fd24       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fd24       0xbc hal/timer.32
                0x00000000c001fd24                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fde0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fde0       0xda hal/timer.32
                0x00000000c001fde0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001febc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001febc       0x23 hw/acpi.32
                0x00000000c001febc                ACPI::~ACPI()
                0x00000000c001febc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fee0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fee0       0x2a hw/acpi.32
                0x00000000c001fee0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ff0c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ff0c        0x2 hw/acpi.32
                0x00000000c001ff0c                LinkedList<Device>::~LinkedList()
                0x00000000c001ff0c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ff10       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ff10       0x1c hw/acpi.32
                0x00000000c001ff10                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ff2c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ff2c        0x7 hw/acpi.32
                0x00000000c001ff2c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ff34       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ff34       0xb8 hw/acpi.32
                0x00000000c001ff34                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ffec       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ffec       0x23 hw/cpu.32
                0x00000000c001ffec                CPU::~CPU()
                0x00000000c001ffec                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020010       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020010       0x2a hw/cpu.32
                0x00000000c0020010                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002003c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002003c        0x8 sys/kill.32
                0x00000000c002003c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020044        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020044        0x2 thr/prcssthr.32
                0x00000000c0020044                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020044                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020048       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020048       0x49 thr/prcssthr.32
                0x00000000c0020048                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020048                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020094       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020094       0x42 thr/prcssthr.32
                0x00000000c0020094                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020094                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c00200d6       0x23
 .text._ZN3PCID2Ev
                0x00000000c00200d6       0x23 hw/bus/pci.32
                0x00000000c00200d6                PCI::~PCI()
                0x00000000c00200d6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00200fa       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00200fa       0x2a hw/bus/pci.32
                0x00000000c00200fa                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020124       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020124       0x23 hw/diskctrl/ide.32
                0x00000000c0020124                IDE::~IDE()
                0x00000000c0020124                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020148       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020148       0x2a hw/diskctrl/ide.32
                0x00000000c0020148                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020172       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020172       0x23 hw/diskctrl/satabus.32
                0x00000000c0020172                SATABus::~SATABus()
                0x00000000c0020172                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020196       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020196       0x2a hw/diskctrl/satabus.32
                0x00000000c0020196                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c00201c0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c00201c0       0x23 hw/diskphys/ata.32
                0x00000000c00201c0                ATA::~ATA()
                0x00000000c00201c0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00201e4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00201e4       0x2a hw/diskphys/ata.32
                0x00000000c00201e4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c002020e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c002020e       0x23 hw/diskphys/atapi.32
                0x00000000c002020e                ATAPI::~ATAPI()
                0x00000000c002020e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020232       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020232       0x2a hw/diskphys/atapi.32
                0x00000000c0020232                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002025c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002025c       0x23 hw/diskphys/sata.32
                0x00000000c002025c                SATA::~SATA()
                0x00000000c002025c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020280       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020280       0x2a hw/diskphys/sata.32
                0x00000000c0020280                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00202aa       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00202aa       0x23 hw/diskphys/satapi.32
                0x00000000c00202aa                SATAPI::~SATAPI()
                0x00000000c00202aa                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00202ce       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00202ce       0x2a hw/diskphys/satapi.32
                0x00000000c00202ce                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00202f8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00202f8       0x23 hw/intctrl/apic.32
                0x00000000c00202f8                IOAPIC::~IOAPIC()
                0x00000000c00202f8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002031c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002031c       0x2a hw/intctrl/apic.32
                0x00000000c002031c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020348       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020348       0x23 hw/timer/apictimer.32
                0x00000000c0020348                APICTimer::~APICTimer()
                0x00000000c0020348                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002036c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002036c       0x2a hw/timer/apictimer.32
                0x00000000c002036c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020398       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020398       0x23 hw/timer/pit.32
                0x00000000c0020398                PIT::~PIT()
                0x00000000c0020398                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00203bc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00203bc       0x2a hw/timer/pit.32
                0x00000000c00203bc                PIT::~PIT()

.rodata         0x00000000c00203e6     0x3226
                0x00000000c00203e6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00203e6        0x2 
 .ctors         0x00000000c00203e8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00203ec        0x4 core/unixfile.32
 .ctors         0x00000000c00203f0        0x4 thr/prcssthr.32
 .ctors         0x00000000c00203f4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00203f8                end_ctors = .
                0x00000000c00203f8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00203f8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00203fc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00203fc                __DTOR_END__
                0x00000000c0020400                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020400        0x0 
 .rodata        0x00000000c0020400      0x101 acpica/utclib.32
                0x00000000c0020400                AcpiGbl_Ctypes
 *fill*         0x00000000c0020501        0x3 
 .rodata        0x00000000c0020504       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002051c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020566       0x1a 
 .rodata        0x00000000c0020580       0xed fs/fat/ff.32
 *fill*         0x00000000c002066d       0x13 
 .rodata        0x00000000c0020680      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020a80       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020aef      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020c04       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020c6c       0x2c core/computer.32
                0x00000000c0020c6c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020c98       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020cc8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020cd4       0x17 core/main.32
 *fill*         0x00000000c0020ceb        0x1 
 .rodata.str1.4
                0x00000000c0020cec       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020d91       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020de9       0x39 core/pipe.32
 *fill*         0x00000000c0020e22        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020e24       0x1c core/pipe.32
                0x00000000c0020e24                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020e40       0x2b core/terminal.32
 *fill*         0x00000000c0020e6b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020e6c       0x1c core/terminal.32
                0x00000000c0020e6c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020e88       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020eaa       0x15 core/unixfile.32
 *fill*         0x00000000c0020ebf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020ec0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020f0b        0x8 core/unixfile.32
 *fill*         0x00000000c0020f13        0x1 
 .rodata.str1.4
                0x00000000c0020f14       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020f34       0x1c core/unixfile.32
                0x00000000c0020f34                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020f50       0x1c core/unixfile.32
                0x00000000c0020f50                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020f6c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021200      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021326       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0021359       0x11 dbg/kconsole.32
 *fill*         0x00000000c0021359        0x3 
 .rodata        0x00000000c002135c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00214ac      0x169 dbg/usban.32
 *fill*         0x00000000c0021615        0x3 
 .rodata.str1.4
                0x00000000c0021618      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002174f      0x18f fs/symlink.32
 .rodata.str1.1
                0x00000000c00218de       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c002191f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021920       0x6c fs/vfs.32
                0x00000000c0021920                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002198c       0x1c fs/vfs.32
                0x00000000c002198c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00219a8       0x1c fs/vfs.32
                0x00000000c00219a8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00219c4       0x2c hal/bus.32
                0x00000000c00219c4                vtable for Bus
 .rodata.str1.1
                0x00000000c00219f0       0x1e hal/clock.32
 *fill*         0x00000000c0021a0e        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021a10       0x3c hal/clock.32
                0x00000000c0021a10                vtable for Clock
 *fill*         0x00000000c0021a4c       0x14 
 .rodata        0x00000000c0021a60       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021a90       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021ae8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021ae8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021ae8       0x2c hal/device.32
                0x00000000c0021ae8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021b14       0x2c hal/device.32
                0x00000000c0021b14                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021b40       0x2c hal/diskctrl.32
                0x00000000c0021b40                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021b6c       0x38 hal/diskphys.32
                0x00000000c0021b6c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021ba4       0x3e hal/intctrl.32
 *fill*         0x00000000c0021be2        0x2 
 .rodata.str1.4
                0x00000000c0021be4       0x5d hal/intctrl.32
 .rodata        0x00000000c0021c41       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021c94       0x34 hal/keybrd.32
                0x00000000c0021c94                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021cc8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021d0c       0x2c hal/logidisk.32
                0x00000000c0021d0c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021d38       0x2c hal/mouse.32
                0x00000000c0021d38                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021d64       0x34 hal/nic.32
                0x00000000c0021d64                vtable for NIC
 .rodata.str1.1
                0x00000000c0021d98        0xb hal/partition.32
 *fill*         0x00000000c0021da3        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021da4       0x44 hal/serial.32
                0x00000000c0021da4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021de8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021de8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021de8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021de8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021de8       0x30 hal/timer.32
                0x00000000c0021de8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021e18       0x10 hal/vcache.32
                0x00000000c0021e18                vtable for VCache
 .rodata.str1.1
                0x00000000c0021e28       0x93 hal/video.32
 *fill*         0x00000000c0021ebb        0x1 
 .rodata._ZTV5Video
                0x00000000c0021ebc       0x4c hal/video.32
                0x00000000c0021ebc                vtable for Video
 .rodata.str1.4
                0x00000000c0021f08       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021fa3      0x174 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0022117       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0022117        0x8 hw/acpi.32
 *fill*         0x00000000c0022117        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0022118       0x2c hw/acpi.32
                0x00000000c0022118                vtable for ACPI
 .rodata.str1.1
                0x00000000c0022144      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c00222bf        0x1 
 .rodata._ZTV3CPU
                0x00000000c00222c0       0x2c hw/cpu.32
                0x00000000c00222c0                vtable for CPU
 .rodata.str1.1
                0x00000000c00222ec       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c002232c       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0022368       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c00223f9       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c00224c2       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002250a       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0022535       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c00225ab       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00225f0        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00225fa       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002261b       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c00226b1       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022705       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022731      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00228fd       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022954      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022a64       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022a64       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022a64       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022a64        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022a64       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022b26        0x2 
 .rodata        0x00000000c0022b28       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022b58      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022cf7        0x1 
 .rodata.str1.4
                0x00000000c0022cf8       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022d6b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022d80       0x3c arch/i386/rtc.32
                0x00000000c0022d80                vtable for RTC
 .rodata.str1.1
                0x00000000c0022dbc       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022dfd        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022e00       0x6c fs/fat/vfslink.32
                0x00000000c0022e00                vtable for FAT
 .rodata.str1.1
                0x00000000c0022e6c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022e6c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022fa4       0x6c fs/iso9660/vfslink.32
                0x00000000c0022fa4                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0023010       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0023054       0x34 hal/sound/sndcard.32
                0x00000000c0023054                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0023088       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00230c7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00230ff       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00231a0       0x2c hw/bus/pci.32
                0x00000000c00231a0                vtable for PCI
 .rodata.str1.1
                0x00000000c00231cc       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0023253        0x1 
 .rodata._ZTV3IDE
                0x00000000c0023254       0x2c hw/diskctrl/ide.32
                0x00000000c0023254                vtable for IDE
 .rodata.str1.4
                0x00000000c0023280       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00232a4       0x2c hw/diskctrl/satabus.32
                0x00000000c00232a4                vtable for SATABus
 .rodata.str1.1
                0x00000000c00232d0       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c00232e2        0x2 
 .rodata._ZTV3ATA
                0x00000000c00232e4       0x38 hw/diskphys/ata.32
                0x00000000c00232e4                vtable for ATA
 .rodata.str1.1
                0x00000000c002331c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0023329        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c002332c       0x38 hw/diskphys/atapi.32
                0x00000000c002332c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0023364       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00233e0       0x38 hw/diskphys/sata.32
                0x00000000c00233e0                vtable for SATA
 .rodata.str1.1
                0x00000000c0023418       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0023502        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0023504       0x38 hw/diskphys/satapi.32
                0x00000000c0023504                vtable for SATAPI
 .rodata        0x00000000c002353c        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0023544       0x2c hw/intctrl/apic.32
                0x00000000c0023544                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023570       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002358b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002358c       0x30 hw/timer/apictimer.32
                0x00000000c002358c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00235bc       0x1d hw/timer/pit.32
 *fill*         0x00000000c00235d9        0x3 
 .rodata._ZTV3PIT
                0x00000000c00235dc       0x30 hw/timer/pit.32
                0x00000000c00235dc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002360c      0xbb5
 *(.data)
 .data          0x00000000c002360c        0x0 crti.32
 .data          0x00000000c002360c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002360c                __dso_handle
 .data          0x00000000c0023610        0x0 acpica/utclib.32
 .data          0x00000000c0023610        0x0 core/malloc.32
 .data          0x00000000c0023610        0x0 libk/ctype.32
 .data          0x00000000c0023610        0x0 libk/string.32
 .data          0x00000000c0023610        0x0 fs/fat/diskio.32
 .data          0x00000000c0023610        0x0 fs/fat/ff.32
 .data          0x00000000c0023610        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023610        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023610        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023610        0x0 core/computer.32
 .data          0x00000000c0023610        0x0 core/gdt.32
 .data          0x00000000c0023610        0x0 core/idle.32
 .data          0x00000000c0023610        0x0 core/idt.32
 .data          0x00000000c0023610        0x4 core/kheap.32
 .data          0x00000000c0023614        0x0 core/main.32
 .data          0x00000000c0023614        0x4 core/physmgr.32
                0x00000000c0023614                Phys::bitmap
 .data          0x00000000c0023618        0x0 core/pipe.32
 *fill*         0x00000000c0023618        0x8 
 .data          0x00000000c0023620       0x60 core/terminal.32
                0x00000000c0023620                VgaText::hiddenOut
                0x00000000c0023640                ansiToVGAMappings
 .data          0x00000000c0023680        0x0 core/tss.32
 .data          0x00000000c0023680        0x4 core/unixfile.32
                0x00000000c0023680                UnixFile::nextFd
 .data          0x00000000c0023684       0x15 core/virtmgr.32
                0x00000000c0023684                Virt::pageAllocPtr
                0x00000000c0023688                Virt::bitmap
                0x00000000c002368c                Virt::swapfileSectorsPerPage
                0x00000000c0023690                Virt::swapfileLength
                0x00000000c0023694                Virt::swapfileSector
                0x00000000c0023698                Virt::swapfileDrive
 *fill*         0x00000000c0023699        0x3 
 .data          0x00000000c002369c        0x4 coreobjs/c++.32
                0x00000000c002369c                __stack_chk_guard
 .data          0x00000000c00236a0        0x0 dbg/kconsole.32
 .data          0x00000000c00236a0       0x28 dbg/usban.32
                0x00000000c00236a0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00236c8        0x0 fs/symlink.32
 .data          0x00000000c00236c8        0x0 fs/vfs.32
 .data          0x00000000c00236c8        0x0 hal/bus.32
 .data          0x00000000c00236c8        0x0 hal/buzzer.32
 .data          0x00000000c00236c8        0x0 hal/clock.32
 .data          0x00000000c00236c8        0x0 hal/device.32
 .data          0x00000000c00236c8        0x0 hal/diskctrl.32
 .data          0x00000000c00236c8        0x0 hal/diskphys.32
 .data          0x00000000c00236c8        0x0 hal/fpu.32
 .data          0x00000000c00236c8        0x0 hal/intctrl.32
 .data          0x00000000c00236c8        0x0 hal/keybrd.32
 .data          0x00000000c00236c8        0x0 hal/logidisk.32
 .data          0x00000000c00236c8        0x0 hal/mouse.32
 .data          0x00000000c00236c8        0x0 hal/nic.32
 .data          0x00000000c00236c8        0x0 hal/partition.32
 .data          0x00000000c00236c8        0x0 hal/serial.32
 .data          0x00000000c00236c8        0x0 hal/timer.32
 .data          0x00000000c00236c8        0x0 hal/vcache.32
 .data          0x00000000c00236c8        0x0 hal/video.32
 .data          0x00000000c00236c8       0x10 hw/acpi.32
                0x00000000c00236c8                legacyIRQRemaps
 .data          0x00000000c00236d8        0x4 hw/cpu.32
                0x00000000c00236d8                lastCode
 .data          0x00000000c00236dc        0x0 krnl/atexit.32
 *fill*         0x00000000c00236dc        0x4 
 .data          0x00000000c00236e0      0x142 krnl/bootmsg.32
                0x00000000c00236e0                KiSplashScreen
 .data          0x00000000c0023822        0x0 krnl/compat.32
 *fill*         0x00000000c0023822       0x1e 
 .data          0x00000000c0023840      0x400 krnl/crc32.32
                0x00000000c0023840                KiPolyLookupCRC32
 .data          0x00000000c0023c40       0x4d krnl/env.32
                0x00000000c0023c40                defaultSysEnv
 .data          0x00000000c0023c8d        0x0 krnl/inlines.32
 .data          0x00000000c0023c8d        0x0 krnl/panic.32
 .data          0x00000000c0023c8d        0x0 krnl/powctrl.32
 .data          0x00000000c0023c8d        0x0 krnl/random.32
 .data          0x00000000c0023c8d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023c8d       0x13 
 .data          0x00000000c0023ca0       0x4c krnl/signal.32
                0x00000000c0023ca0                KiDefaultSignalHandlers
 *fill*         0x00000000c0023cec       0x14 
 .data          0x00000000c0023d00       0xfc krnl/syscalls.32
                0x00000000c0023d00                systemCallHandlers
 .data          0x00000000c0023dfc        0x0 net/ethernet.32
 *fill*         0x00000000c0023dfc        0x4 
 .data          0x00000000c0023e00      0x100 reg/cm.32
                0x00000000c0023e00                CmComponents
 .data          0x00000000c0023f00        0x0 reg/registry.32
 .data          0x00000000c0023f00        0x0 sys/eject.32
 .data          0x00000000c0023f00        0x0 sys/exit.32
 .data          0x00000000c0023f00        0x0 sys/getcwd.32
 .data          0x00000000c0023f00        0x0 sys/getpid.32
 .data          0x00000000c0023f00        0x0 sys/getramdata.32
 .data          0x00000000c0023f00        0x0 sys/getvgaptr.32
 .data          0x00000000c0023f00        0x0 sys/kill.32
 .data          0x00000000c0023f00        0x0 sys/loaddll.32
 .data          0x00000000c0023f00        0x0 sys/read.32
 .data          0x00000000c0023f00        0x0 sys/registersignal.32
 .data          0x00000000c0023f00        0x0 sys/registry.32
 .data          0x00000000c0023f00        0x0 sys/sbrk.32
 .data          0x00000000c0023f00        0x0 sys/setcwd.32
 .data          0x00000000c0023f00        0x0 sys/settime.32
 .data          0x00000000c0023f00        0x0 sys/symlink.32
 .data          0x00000000c0023f00        0x0 sys/timezone.32
 .data          0x00000000c0023f00        0x0 sys/truncate.32
 .data          0x00000000c0023f00        0x0 sys/write.32
 .data          0x00000000c0023f00        0x0 sys/wsbe.32
 .data          0x00000000c0023f00        0x0 sys/yield.32
 .data          0x00000000c0023f00        0x0 thr/elf.32
 .data          0x00000000c0023f00        0x4 thr/prcssthr.32
                0x00000000c0023f00                Thr::nextPID
 .data          0x00000000c0023f04        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023f04       0x1c 
 .data          0x00000000c0023f20      0x2a0 arch/i386/hal.32
                0x00000000c0023f20                exceptionNames
 .data          0x00000000c00241c0        0x0 arch/i386/pic.32
 .data          0x00000000c00241c0        0x0 arch/i386/rtc.32
 .data          0x00000000c00241c0        0x0 arch/i386/vga.32
 .data          0x00000000c00241c0        0x0 fs/fat/vfslink.32
 .data          0x00000000c00241c0        0x0 fs/iso9660/helper.32
 .data          0x00000000c00241c0        0x1 fs/iso9660/vfslink.32
                0x00000000c00241c0                recentDriveletter
 .data          0x00000000c00241c1        0x0 hal/sound/sndcard.32
 .data          0x00000000c00241c1        0x0 hal/sound/sndport.32
 .data          0x00000000c00241c1        0x0 hw/bus/isa.32
 .data          0x00000000c00241c1        0x0 hw/bus/pci.32
 .data          0x00000000c00241c1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00241c1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00241c1        0x0 hw/diskphys/ata.32
 .data          0x00000000c00241c1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00241c1        0x0 hw/diskphys/sata.32
 .data          0x00000000c00241c1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00241c1        0x0 hw/intctrl/apic.32
 .data          0x00000000c00241c1        0x0 hw/timer/apictimer.32
 .data          0x00000000c00241c1        0x0 hw/timer/pit.32
 .data          0x00000000c00241c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00241c1        0x0 crtn.32
 .data          0x00000000c00241c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00241c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00241c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00241c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00241c4        0x0
 .got           0x00000000c00241c4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00241c4        0x0
 .got.plt       0x00000000c00241c4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00241c4        0x0
 .igot.plt      0x00000000c00241c4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00241c4        0x0
 .tm_clone_table
                0x00000000c00241c4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00241c4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00241c1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00241c1        0x3 
 .eh_frame      0x00000000c00241c4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00241c4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00241c4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002421c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002425c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00242c8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
