Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c3ca
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 *fill*         0x00000000c0001afb        0x1 
 .text          0x00000000c0001afc      0x1f2 libk/ctype.32
                0x00000000c0001afc                isblank
                0x00000000c0001b1c                iscntrl
                0x00000000c0001b3c                isdigit
                0x00000000c0001b58                islower
                0x00000000c0001b74                isspace
                0x00000000c0001b9c                isupper
                0x00000000c0001bb8                isalpha
                0x00000000c0001be8                isalnum
                0x00000000c0001c18                ispunct
                0x00000000c0001c58                isgraph
                0x00000000c0001c88                isprint
                0x00000000c0001cb0                isxdigit
 .text          0x00000000c0001cee        0x0 libk/string.32
 .text          0x00000000c0001cee       0x51 fs/fat/diskio.32
                0x00000000c0001cee                disk_status
                0x00000000c0001cf1                disk_initialize
                0x00000000c0001cf4                disk_read
                0x00000000c0001d0a                disk_write
                0x00000000c0001d20                disk_ioctl
 .text          0x00000000c0001d3f     0x3d4b fs/fat/ff.32
                0x00000000c0003adb                f_mount
                0x00000000c0003b3d                f_open
                0x00000000c0003e08                f_read
                0x00000000c0004007                f_write
                0x00000000c000423b                f_sync
                0x00000000c00042f0                f_close
                0x00000000c000431f                f_lseek
                0x00000000c00044c6                f_opendir
                0x00000000c0004591                f_closedir
                0x00000000c00045b3                f_readdir
                0x00000000c0004645                f_stat
                0x00000000c00046c4                f_getfree
                0x00000000c00047c6                f_truncate
                0x00000000c00048aa                f_unlink
                0x00000000c00049cc                f_mkdir
                0x00000000c0004b67                f_rename
                0x00000000c0004d1d                f_chmod
                0x00000000c0004dc6                f_utime
                0x00000000c0004e74                f_getlabel
                0x00000000c0004fc5                f_setlabel
                0x00000000c0005155                f_expand
                0x00000000c00052b5                f_mkfs
 *fill*         0x00000000c0005a8a        0x2 
 .text          0x00000000c0005a8c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a8c                ff_memalloc
                0x00000000c0005aa4                ff_memfree
 *fill*         0x00000000c0005abb        0x1 
 .text          0x00000000c0005abc      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005abc                ff_uni2oem
                0x00000000c0005b5c                ff_oem2uni
                0x00000000c0005bd4                ff_wtoupper
 .text          0x00000000c0005d64     0x1140 fs/iso9660/iso9660.32
                0x00000000c0006064                isoReadDiscSector
                0x00000000c0006145                strnicmp
                0x00000000c00064a8                stricmp
                0x00000000c0006502                iso_open
                0x00000000c00065e2                iso_close
                0x00000000c00065fd                iso_read
                0x00000000c00067fb                iso_seek
                0x00000000c00068d9                iso_tell
                0x00000000c0006936                iso_total
                0x00000000c000697f                fn_postprocess
                0x00000000c00069b3                iso_readdir
                0x00000000c0006c7d                iso_reset
                0x00000000c0006c8d                init_percd
                0x00000000c0006d92                iso_ioctl
                0x00000000c0006d9d                fs_iso9660_init
                0x00000000c0006e2c                fs_iso9660_shutdown
 .text          0x00000000c0006ea4       0x94 compat/inlines.32
                0x00000000c0006ea4                CPU::current()
                0x00000000c0006eb0                operator new(unsigned long)
                0x00000000c0006eb5                operator delete(void*)
                0x00000000c0006eba                disableIRQs()
                0x00000000c0006ebc                enableIRQs()
                0x00000000c0006ebe                lockScheduler()
                0x00000000c0006ec6                unlockScheduler()
                0x00000000c0006ed5                lockStuff()
                0x00000000c0006ee3                unlockStuff()
                0x00000000c0006f1d                Virt::getAKernelVAS()
                0x00000000c0006f23                __not_memcpy
 .text          0x00000000c0006f38      0x118 compat/resolve.32
                0x00000000c0006f38                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0007050      0x68b core/computer.32
                0x00000000c0007050                Computer::close(int, int, void*)
                0x00000000c0007095                Krnl::firstTask()
                0x00000000c00071ce                Computer::Computer()
                0x00000000c00071ce                Computer::Computer()
                0x00000000c0007280                Computer::setBootMessage(char const*)
                0x00000000c0007282                Computer::detectFeatures()
                0x00000000c000748c                Computer::displayFeatures()
                0x00000000c000748e                Computer::rdmsr(unsigned int)
                0x00000000c00074ba                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00074f2                Computer::shutdown()
                0x00000000c000750a                Computer::restart()
                0x00000000c0007522                Computer::sleep()
                0x00000000c0007536                Computer::nmiEnabled()
                0x00000000c0007542                Computer::readCMOS(unsigned char)
                0x00000000c000755c                Computer::enableNMI(bool)
                0x00000000c0007574                Computer::open(int, int, void*)
                0x00000000c0007648                Computer::disableNMI()
                0x00000000c0007658                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0007676                Computer::handleNMI()
 *fill*         0x00000000c00076db        0x1 
 .text          0x00000000c00076dc      0x1cf core/gdt.32
                0x00000000c00076dc                GDTEntry::setBase(unsigned int)
                0x00000000c00076f8                GDTEntry::setLimit(unsigned int)
                0x00000000c0007716                GDT::GDT()
                0x00000000c0007716                GDT::GDT()
                0x00000000c000772c                GDT::addEntry(GDTEntry)
                0x00000000c000774e                GDT::getNumberOfEntries()
                0x00000000c0007756                GDT::flush()
                0x00000000c0007778                GDT::setup()
 .text          0x00000000c00078ab       0x19 core/idle.32
                0x00000000c00078ab                idleFunction(void*)
 .text          0x00000000c00078c4      0x464 core/idt.32
                0x00000000c00078c4                IDTEntry::IDTEntry(bool)
                0x00000000c00078c4                IDTEntry::IDTEntry(bool)
                0x00000000c0007936                IDTEntry::setOffset(unsigned int)
                0x00000000c000794c                IDT::IDT()
                0x00000000c000794c                IDT::IDT()
                0x00000000c000794e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0007956                IDT::addEntry(IDTEntry, int)
                0x00000000c0007970                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00079a8                IDT::flush()
                0x00000000c00079c2                IDT::setup()
 .text          0x00000000c0007d28      0x183 core/kheap.32
                0x00000000c0007d28                sbrk
                0x00000000c0007dbd                mmap
                0x00000000c0007dd3                munmap
                0x00000000c0007de9                liballoc_lock()
                0x00000000c0007df6                liballoc_unlock()
                0x00000000c0007e0a                liballoc_alloc(int)
                0x00000000c0007e22                liballoc_free(void*, int)
                0x00000000c0007e3d                realloc
                0x00000000c0007e51                malloc
                0x00000000c0007e61                free
                0x00000000c0007e71                rfree
                0x00000000c0007e81                calloc
 .text          0x00000000c0007eab      0x1b4 core/main.32
                0x00000000c0007eab                Krnl::setBootMessage(char const*)
                0x00000000c0007f17                kernel_main
 .text          0x00000000c000805f      0x5dc core/physmgr.32
                0x00000000c000805f                Phys::allocateDMA(unsigned long)
                0x00000000c0008136                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0008169                Phys::setPageState(unsigned long, bool)
                0x00000000c000819b                Phys::getPageState(unsigned long)
                0x00000000c00081bc                Phys::freePage(unsigned long)
                0x00000000c000821e                Phys::allocatePage()
                0x00000000c00082dc                Phys::allocateContiguousPages(int)
                0x00000000c0008338                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0008370                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000863b        0x1 
 .text          0x00000000c000863c      0x273 core/pipe.32
                0x00000000c000863c                Pipe::isAtty()
                0x00000000c0008640                Pipe::~Pipe()
                0x00000000c0008640                Pipe::~Pipe()
                0x00000000c0008664                Pipe::~Pipe()
                0x00000000c000868c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000874c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008848                Pipe::Pipe(int)
                0x00000000c0008848                Pipe::Pipe(int)
 *fill*         0x00000000c00088af        0x1 
 .text          0x00000000c00088b0      0xa1e core/terminal.32
                0x00000000c00088b0                VgaText::isAtty()
                0x00000000c00088b4                VgaText::~VgaText()
                0x00000000c00088b4                VgaText::~VgaText()
                0x00000000c00088d8                VgaText::~VgaText()
                0x00000000c0008902                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008922                setTerminalScrollLock(bool)
                0x00000000c0008923                doTerminalCycle()
                0x00000000c0008924                addToTerminalCycle(VgaText*)
                0x00000000c0008925                scrollTerminalScrollLock(int)
                0x00000000c0008926                VgaText::updateTitle()
                0x00000000c0008928                VgaText::load()
                0x00000000c000892a                VgaText::updateCursor()
                0x00000000c0008940                VgaText::doANSI_SGR(int)
                0x00000000c00089b4                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00089c4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00089d4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00089f4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008a00                VgaText::setTitleColour(VgaColour)
                0x00000000c0008a0c                VgaText::setTitle(char*)
                0x00000000c0008a0e                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008a20                VgaText::scrollScreen()
                0x00000000c0008ab8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008aca                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008b5a                VgaText::getCursorX()
                0x00000000c0008b62                VgaText::getCursorY()
                0x00000000c0008b6a                VgaText::setCursor(int, int)
                0x00000000c0008b81                setActiveTerminal(VgaText*)
                0x00000000c0008bcc                VgaText::clearScreen()
                0x00000000c0008c1a                VgaText::setCursorX(int)
                0x00000000c0008c32                VgaText::setCursorY(int)
                0x00000000c0008c4a                VgaText::incrementCursor(bool)
                0x00000000c0008c9e                VgaText::decrementCursor(bool)
                0x00000000c0008cc0                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008d8e                VgaText::putchar(char)
                0x00000000c0008e7a                VgaText::putx(unsigned int)
                0x00000000c0008ec0                VgaText::puts(char const*)
                0x00000000c0008ee6                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008f32                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0009084                VgaText::VgaText(char const*)
                0x00000000c0009084                VgaText::VgaText(char const*)
                0x00000000c00091d0                VgaText::receiveKey(unsigned char)
                0x00000000c00092a8                VgaText::doUpdate()
                0x00000000c00092a9                newTerminal(char*)
 *fill*         0x00000000c00092ce        0x2 
 .text          0x00000000c00092d0      0x1a1 core/tss.32
                0x00000000c00092d0                TSS::TSS()
                0x00000000c00092d0                TSS::TSS()
                0x00000000c00092e0                TSS::setESP(unsigned long)
                0x00000000c00092f4                TSS::flush()
                0x00000000c0009314                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0009471        0x1 
 .text          0x00000000c0009472      0x4c2 core/unixfile.32
                0x00000000c0009472                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00094c8                ReservedFilename::isAtty()
                0x00000000c00094e4                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0009542                UnixFile::getFileDescriptor()
                0x00000000c000954a                UnixFile::UnixFile(int)
                0x00000000c000954a                UnixFile::UnixFile(int)
                0x00000000c00096fa                ReservedFilename::ReservedFilename(int)
                0x00000000c00096fa                ReservedFilename::ReservedFilename(int)
                0x00000000c000972c                UnixFile::~UnixFile()
                0x00000000c000972c                UnixFile::~UnixFile()
                0x00000000c00097c4                UnixFile::~UnixFile()
                0x00000000c00097ec                ReservedFilename::~ReservedFilename()
                0x00000000c00097ec                ReservedFilename::~ReservedFilename()
                0x00000000c0009810                ReservedFilename::~ReservedFilename()
                0x00000000c0009837                getFromFileDescriptor(int)
 .text          0x00000000c0009934     0x1166 core/virtmgr.32
                0x00000000c0009934                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009969                Virt::getPageState(unsigned long)
                0x00000000c000998d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009a9e                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009abc                Virt::swapIDToSector(unsigned long)
                0x00000000c0009ace                Virt::allocateSwapfilePage()
                0x00000000c0009b4c                Virt::virtualMemorySetup()
                0x00000000c0009b97                Virt::setupPageSwapping(int)
                0x00000000c0009c08                VAS::VAS()
                0x00000000c0009c08                VAS::VAS()
                0x00000000c0009c44                VAS::VAS(VAS*)
                0x00000000c0009c44                VAS::VAS(VAS*)
                0x00000000c0009c72                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009c9e                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009cbd                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009de2                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009e06                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009e20                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009e60                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009e94                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009ebe                VAS::~VAS()
                0x00000000c0009ebe                VAS::~VAS()
                0x00000000c000a022                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000a126                VAS::allocatePages(int, int)
                0x00000000c000a2fe                VAS::setCPUSpecific(unsigned long)
                0x00000000c000a31c                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a3e2                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a4d0                VAS::VAS(bool)
                0x00000000c000a4d0                VAS::VAS(bool)
                0x00000000c000a750                VAS::evict(unsigned long)
                0x00000000c000a812                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a900                VAS::scanForEviction()
                0x00000000c000a9e0                mapVASFirstTime
 .text          0x00000000c000aa9a       0x5f coreobjs/c++.32
                0x00000000c000aa9a                __cxa_atexit
                0x00000000c000aa9d                __cxa_finalize
                0x00000000c000aa9e                __stack_chk_fail
                0x00000000c000aad4                __cxa_pure_virtual
                0x00000000c000aae5                operator new[](unsigned long)
                0x00000000c000aaea                operator delete(void*, unsigned long)
                0x00000000c000aaef                operator delete[](void*)
                0x00000000c000aaf4                operator delete[](void*, unsigned long)
 .text          0x00000000c000aaf9      0x21c dbg/kconsole.32
                0x00000000c000aaf9                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ab64                Dbg::logc(char)
                0x00000000c000ab84                Dbg::logs(char*)
                0x00000000c000aba1                Dbg::logWriteInt(unsigned int)
                0x00000000c000abbf                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000abe0                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000ad15        0x1 
 .text          0x00000000c000ad16      0xc5c fs/vfs.32
                0x00000000c000ad16                File::read(unsigned long long, void*, int*)
                0x00000000c000ad6e                File::write(unsigned long long, void*, int*)
                0x00000000c000adc6                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ae1e                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ae4c                File::isAtty()
                0x00000000c000ae50                Directory::isAtty()
                0x00000000c000ae54                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ae5a                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ae60                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ae66                File::~File()
                0x00000000c000ae66                File::~File()
                0x00000000c000ae8a                File::~File()
                0x00000000c000aeb4                Directory::~Directory()
                0x00000000c000aeb4                Directory::~Directory()
                0x00000000c000aed8                Directory::~Directory()
                0x00000000c000af02                Filesystem::Filesystem()
                0x00000000c000af02                Filesystem::Filesystem()
                0x00000000c000af26                Filesystem::~Filesystem()
                0x00000000c000af26                Filesystem::~Filesystem()
                0x00000000c000af34                Filesystem::~Filesystem()
                0x00000000c000af58                Fs::getcwd(Process*, char*, int)
                0x00000000c000af82                Fs::initVFS()
                0x00000000c000afac                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b156                File::File(char const*, Process*)
                0x00000000c000b156                File::File(char const*, Process*)
                0x00000000c000b216                File::open(FileOpenMode)
                0x00000000c000b274                File::close()
                0x00000000c000b2d4                File::seek(unsigned long long)
                0x00000000c000b32a                File::tell(unsigned long long*)
                0x00000000c000b37a                File::rewind()
                0x00000000c000b38e                File::unlink()
                0x00000000c000b3da                File::rename(char const*)
                0x00000000c000b428                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b484                File::exists()
                0x00000000c000b4c2                File::stat(unsigned long long*, bool*)
                0x00000000c000b523                Fs::setcwd(Process*, char*)
                0x00000000c000b680                Directory::Directory(char const*, Process*)
                0x00000000c000b680                Directory::Directory(char const*, Process*)
                0x00000000c000b740                Directory::open()
                0x00000000c000b79c                Directory::close()
                0x00000000c000b7fc                Directory::unlink()
                0x00000000c000b848                Directory::rename(char const*)
                0x00000000c000b896                Directory::exists()
                0x00000000c000b8d4                Directory::read(dirent*)
                0x00000000c000b920                Directory::create()
                0x00000000c000b96c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b972        0x2 
 .text          0x00000000c000b974       0x86 hal/bus.32
                0x00000000c000b974                Bus::Bus(char const*)
                0x00000000c000b974                Bus::Bus(char const*)
                0x00000000c000b9ac                Bus::~Bus()
                0x00000000c000b9ac                Bus::~Bus()
                0x00000000c000b9d0                Bus::~Bus()
 .text          0x00000000c000b9fa       0x96 hal/buzzer.32
                0x00000000c000b9fa                beepThread(void*)
                0x00000000c000ba37                Krnl::beep(int, int, bool)
 .text          0x00000000c000ba90      0x46d hal/clock.32
                0x00000000c000ba90                User::loadClockSettings(int)
                0x00000000c000bae2                Clock::Clock(char const*)
                0x00000000c000bae2                Clock::Clock(char const*)
                0x00000000c000bb18                Clock::~Clock()
                0x00000000c000bb18                Clock::~Clock()
                0x00000000c000bb3c                Clock::~Clock()
                0x00000000c000bb66                Clock::timeInSecondsLocal()
                0x00000000c000bbae                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000bc07                datetimeToSeconds(datetime_t)
                0x00000000c000bd34                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bd94                secondsToDatetime(unsigned long long)
                0x00000000c000bed8                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000befd        0x1 
 .text          0x00000000c000befe      0x464 hal/device.32
                0x00000000c000befe                Device::hibernate()
                0x00000000c000bf00                Device::wake()
                0x00000000c000bf02                Device::detect()
                0x00000000c000bf04                Device::disableLegacy()
                0x00000000c000bf06                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bf08                DriverlessDevice::close(int, int, void*)
                0x00000000c000bf0c                DriverlessDevice::detect()
                0x00000000c000bf0e                DriverlessDevice::open(int, int, void*)
                0x00000000c000bf22                Device::~Device()
                0x00000000c000bf22                Device::~Device()
                0x00000000c000bf30                Device::~Device()
                0x00000000c000bf58                Device::findAndLoadDriver()
                0x00000000c000bf66                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bf8c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bfcc                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bff6                Device::getParent()
                0x00000000c000c002                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c020                Device::addChild(Device*)
                0x00000000c000c064                Device::removeAllChildren()
                0x00000000c000c0aa                Device::hibernateAll()
                0x00000000c000c0da                Device::wakeAll()
                0x00000000c000c10a                Device::detectAll()
                0x00000000c000c13a                Device::disableLegacyAll()
                0x00000000c000c13c                Device::loadDriversForAll()
                0x00000000c000c13e                Device::closeAll()
                0x00000000c000c174                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c1aa                Device::setName(char const*)
                0x00000000c000c1b8                Device::Device(char const*)
                0x00000000c000c1b8                Device::Device(char const*)
                0x00000000c000c2b4                Device::getName()
                0x00000000c000c2be                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c2be                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c2f4                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c338                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c362        0x2 
 .text          0x00000000c000c364       0x86 hal/diskctrl.32
                0x00000000c000c364                HardDiskController::HardDiskController(char const*)
                0x00000000c000c364                HardDiskController::HardDiskController(char const*)
                0x00000000c000c39c                HardDiskController::~HardDiskController()
                0x00000000c000c39c                HardDiskController::~HardDiskController()
                0x00000000c000c3c0                HardDiskController::~HardDiskController()
 .text          0x00000000c000c3ea       0xe2 hal/diskphys.32
                0x00000000c000c3ea                PhysicalDisk::eject()
                0x00000000c000c3ee                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c3ee                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c456                PhysicalDisk::startCache()
                0x00000000c000c47e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c47e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c4a2                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c4cc        0x0 hal/fpu.32
 .text          0x00000000c000c4cc      0x35d hal/intctrl.32
                0x00000000c000c4cc                int_handler
                0x00000000c000c554                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c59c                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c6d4                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c708                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c787                setupINTS()
                0x00000000c000c7e4                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c829        0x1 
 .text          0x00000000c000c82a      0x78c hal/keybrd.32
                0x00000000c000c82a                startGUI(void*)
                0x00000000c000c896                startGUIVESA(void*)
                0x00000000c000c902                sendKeyToTerminal(unsigned char)
                0x00000000c000c9c5                sendKeyboardToken(KeyboardToken)
                0x00000000c000ce05                clearInternalKeybuffer(VgaText*)
                0x00000000c000ce3a                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000cf2c                Keyboard::Keyboard(char const*)
                0x00000000c000cf2c                Keyboard::Keyboard(char const*)
                0x00000000c000cf68                Keyboard::~Keyboard()
                0x00000000c000cf68                Keyboard::~Keyboard()
                0x00000000c000cf8c                Keyboard::~Keyboard()
 .text          0x00000000c000cfb6      0x3ea hal/logidisk.32
                0x00000000c000cfb6                LogicalDisk::close(int, int, void*)
                0x00000000c000cfba                LogicalDisk::~LogicalDisk()
                0x00000000c000cfba                LogicalDisk::~LogicalDisk()
                0x00000000c000cfde                LogicalDisk::~LogicalDisk()
                0x00000000c000d008                LogicalDisk::open(int, int, void*)
                0x00000000c000d01c                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d054                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d09a                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d09a                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d150                LogicalDisk::assignDriveLetter()
                0x00000000c000d206                LogicalDisk::mount()
                0x00000000c000d24e                LogicalDisk::unmount()
                0x00000000c000d25e                LogicalDisk::eject()
                0x00000000c000d272                LogicalDisk::unassignDriveLetter()
                0x00000000c000d2c8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d334                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000d3a0       0x86 hal/mouse.32
                0x00000000c000d3a0                Mouse::Mouse(char const*)
                0x00000000c000d3a0                Mouse::Mouse(char const*)
                0x00000000c000d3d8                Mouse::~Mouse()
                0x00000000c000d3d8                Mouse::~Mouse()
                0x00000000c000d3fc                Mouse::~Mouse()
 .text          0x00000000c000d426      0x339 hal/partition.32
                0x00000000c000d426                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d4ce                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d75f        0x1 
 .text          0x00000000c000d760       0x86 hal/serial.32
                0x00000000c000d760                Serial::Serial(char const*)
                0x00000000c000d760                Serial::Serial(char const*)
                0x00000000c000d798                Serial::~Serial()
                0x00000000c000d798                Serial::~Serial()
                0x00000000c000d7bc                Serial::~Serial()
 *fill*         0x00000000c000d7e6        0x2 
 .text          0x00000000c000d7e8      0x234 hal/timer.32
                0x00000000c000d7e8                Timer::Timer(char const*)
                0x00000000c000d7e8                Timer::Timer(char const*)
                0x00000000c000d820                Timer::~Timer()
                0x00000000c000d820                Timer::~Timer()
                0x00000000c000d844                Timer::~Timer()
                0x00000000c000d86e                Timer::read()
                0x00000000c000d879                setupTimer(int)
                0x00000000c000d8b4                timerHandler(unsigned int)
 .text          0x00000000c000da1c      0x43e hal/vcache.32
                0x00000000c000da1c                VCache::VCache(PhysicalDisk*)
                0x00000000c000da1c                VCache::VCache(PhysicalDisk*)
                0x00000000c000db84                VCache::invalidateReadBuffer()
                0x00000000c000db94                VCache::writeWriteBuffer()
                0x00000000c000dbe0                VCache::~VCache()
                0x00000000c000dbe0                VCache::~VCache()
                0x00000000c000dc34                VCache::~VCache()
                0x00000000c000dc5c                VCache::write(unsigned long long, int, void*)
                0x00000000c000dd56                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000de5a      0x4b3 hal/video.32
                0x00000000c000de5a                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000dea6                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000df16                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000df94                Video::clearScreen(unsigned int)
                0x00000000c000dfc8                Video::putpixel(int, int, unsigned int)
                0x00000000c000dfd6                Video::Video(char const*)
                0x00000000c000dfd6                Video::Video(char const*)
                0x00000000c000e00c                Video::~Video()
                0x00000000c000e00c                Video::~Video()
                0x00000000c000e030                Video::~Video()
                0x00000000c000e05a                Video::isMonochrome()
                0x00000000c000e066                Video::getWidth()
                0x00000000c000e072                Video::getHeight()
                0x00000000c000e07e                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000e13a                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e2a2                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e30d        0x3 
 .text          0x00000000c000e310     0x1307 hw/acpi.32
                0x00000000c000e310                ACPI::close(int, int, void*)
                0x00000000c000e3c8                findRSDP()
                0x00000000c000e458                loadACPITables(unsigned char*)
                0x00000000c000e6bc                findRSDT(unsigned char*)
                0x00000000c000e80c                findDataTable(unsigned char*, char*)
                0x00000000c000e884                scanMADT()
                0x00000000c000ed58                ACPI::ACPI()
                0x00000000c000ed58                ACPI::ACPI()
                0x00000000c000edac                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ee94                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ef5c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ef64                ACPI::detectPCI()
                0x00000000c000f16c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f1c0                ACPI::sleep()
                0x00000000c000f1dc                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f617        0x1 
 .text          0x00000000c000f618      0xb95 hw/cpu.32
                0x00000000c000f618                CPU::close(int, int, void*)
                0x00000000c000f61c                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f638                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f650                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f6c4                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f748                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f776                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f7a4                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f7d2                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f800                CPU::CPU()
                0x00000000c000f800                CPU::CPU()
                0x00000000c000f88e                CPU::displayFeatures()
                0x00000000c000f890                CPU::detectFeatures()
                0x00000000c000ff54                CPU::setupSMEP()
                0x00000000c000ff60                CPU::setupUMIP()
                0x00000000c000ff6a                CPU::setupTSC()
                0x00000000c000ff74                CPU::setupLargePages()
                0x00000000c000ff7e                CPU::setupPAT()
                0x00000000c000ffba                CPU::setupMTRR()
                0x00000000c000ffbc                CPU::setupGlobalPages()
                0x00000000c000ffc6                CPU::allowUsermodeDataAccess()
                0x00000000c000ffd8                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ffea                CPU::setupSMAP()
                0x00000000c000fff8                CPU::setupFeatures()
                0x00000000c00100c4                CPU::open(int, int, void*)
 *fill*         0x00000000c00101ad        0x1 
 .text          0x00000000c00101ae      0x581 krnl/env.32
                0x00000000c00101ae                EnvVarContainer::getEnv(char const*)
                0x00000000c00101ec                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00102ae                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00102b0                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010496                EnvVarContainer::__loadSystem()
                0x00000000c00104b0                EnvVarContainer::__loadUser()
                0x00000000c00104b2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104b2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104d4                EnvVarContainer::~EnvVarContainer()
                0x00000000c00104d4                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010504                Krnl::getEnv(Process*, char const*)
                0x00000000c0010569                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c0010583                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00105a2                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00105b5                Krnl::deleteEnvSystem(char const*)
                0x00000000c00105b6                Krnl::deleteEnvUser(char const*)
                0x00000000c00105b7                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c00105b8                Krnl::newProcessEnv(Process*)
                0x00000000c00105da                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010626                Krnl::loadSystemEnv()
                0x00000000c0010654                Krnl::loadUserEnv()
                0x00000000c001067a                Krnl::flushEnv()
                0x00000000c001067b                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001069b                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001072f      0x108 krnl/panic.32
                0x00000000c001072f                Krnl::panic(char const*)
 .text          0x00000000c0010837      0x142 krnl/powctrl.32
                0x00000000c0010837                Krnl::powerThread(void*)
                0x00000000c0010865                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c001087b                Krnl::userIOReceived()
                0x00000000c0010886                Krnl::handlePowerButton()
                0x00000000c00108bb                Krnl::handleSleepButton()
                0x00000000c00108f0                Krnl::setupPowerManager()
 .text          0x00000000c0010979      0x50e reg/registry.32
                0x00000000c0010979                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0010ad1                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0010c26                Reg::getLine(char*, char*, char*)
                0x00000000c0010c5d                Reg::readInt(char*, char*, int*)
                0x00000000c0010d48                Reg::readString(char*, char*, char*, int)
                0x00000000c0010dc9                Reg::readBool(char*, char*, bool*)
                0x00000000c0010dee                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0010e1a                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0010e46                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0010e87       0x36 sys/sc_eject.32
                0x00000000c0010e87                Sys::eject(regs*)
 .text          0x00000000c0010ebd       0x18 sys/sc_exit.32
                0x00000000c0010ebd                Sys::exit(regs*)
 .text          0x00000000c0010ed5       0x1f sys/sc_getcwd.32
                0x00000000c0010ed5                Sys::getCwd(regs*)
 .text          0x00000000c0010ef4        0xc sys/sc_getpid.32
                0x00000000c0010ef4                Sys::getPID(regs*)
 .text          0x00000000c0010f00       0x1a sys/sc_getramdata.32
                0x00000000c0010f00                Sys::getRAMData(regs*)
 .text          0x00000000c0010f1a       0x82 sys/sc_getvgaptr.32
                0x00000000c0010f1a                Sys::getVGAPtr(regs*)
 .text          0x00000000c0010f9c       0xa8 sys/sc_loaddll.32
                0x00000000c0010f9c                Sys::loadDLL(regs*)
 .text          0x00000000c0011044       0x68 sys/sc_read.32
                0x00000000c0011044                Sys::read(regs*)
 .text          0x00000000c00110ac       0x55 sys/sc_sbrk.32
                0x00000000c00110ac                Sys::sbrk(regs*)
 .text          0x00000000c0011101       0x1c sys/sc_setcwd.32
                0x00000000c0011101                Sys::setCwd(regs*)
 .text          0x00000000c001111d       0x95 sys/sc_settime.32
                0x00000000c001111d                Sys::setTime(regs*)
 .text          0x00000000c00111b2       0x4a sys/sc_timezone.32
                0x00000000c00111b2                Sys::timezone(regs*)
 .text          0x00000000c00111fc       0x68 sys/sc_write.32
                0x00000000c00111fc                Sys::write(regs*)
 .text          0x00000000c0011264       0x62 sys/sc_wsbe.32
                0x00000000c0011264                Sys::wsbe(regs*)
 .text          0x00000000c00112c6       0x25 sys/sc_yield.32
                0x00000000c00112c6                Sys::yield(regs*)
 .text          0x00000000c00112eb      0xe2c sys/syscalls.32
                0x00000000c00112eb                sysCallSeekDir(regs*)
                0x00000000c00112f0                sysCallTellDir(regs*)
                0x00000000c00112f5                sysCallVerify(regs*)
                0x00000000c00112ff                sysCallGetArgc(regs*)
                0x00000000c001130f                sysCallTTYName(regs*)
                0x00000000c0011317                sysFormatDisk(regs*)
                0x00000000c0011384                sysSetDiskVolumeLabel(regs*)
                0x00000000c00113ce                sysGetDiskVolumeLabel(regs*)
                0x00000000c0011423                sysShutdown(regs*)
                0x00000000c0011481                sysCallRealpath(regs*)
                0x00000000c00114c4                sysCallReadDir(regs*)
                0x00000000c0011544                sysCallIsATTY(regs*)
                0x00000000c00115a0                sysCallSeek(regs*)
                0x00000000c00115f9                sysCallTell(regs*)
                0x00000000c0011668                sysCallSize(regs*)
                0x00000000c00116dd                sysCallSizeFromFilename(regs*)
                0x00000000c0011790                sysCallClose(regs*)
                0x00000000c00117f0                sysCallOpenDir(regs*)
                0x00000000c0011867                sysCallCloseDir(regs*)
                0x00000000c00118bb                sysCallMakeDir(regs*)
                0x00000000c001192d                sysCallWait(regs*)
                0x00000000c001194a                sysCallNotImpl(regs*)
                0x00000000c0011965                sysPanic(regs*)
                0x00000000c0011980                sysCallRmdir(regs*)
                0x00000000c00119e7                sysCallUnlink(regs*)
                0x00000000c0011a4e                sysCallGetArgv(regs*)
                0x00000000c0011a9b                sysCallUSleep(regs*)
                0x00000000c0011ac4                sysCallSpawn(regs*)
                0x00000000c0011b2d                sysCallGetEnv(regs*)
                0x00000000c0011bdc                sysSetFatAttrib(regs*)
                0x00000000c0011c53                sysPipe(regs*)
                0x00000000c0011c98                sysGetUnixTime(regs*)
                0x00000000c0011cac                string_ends_with(char const*, char const*)
                0x00000000c0011cf6                sysCallOpen(regs*)
                0x00000000c0011eea                Sys::loadSyscalls()
                0x00000000c00120d5                Sys::systemCall(regs*, void*)
 .text          0x00000000c0012117     0x11e5 thr/elf.32
                0x00000000c0012117                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00123a3                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00125b9                Thr::runtimeReferenceHelper()
                0x00000000c00125cc                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001261b                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00128d9                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001300f                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0013041                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0013078                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0013092                Thr::loadDLL(char const*, bool)
                0x00000000c00132c3                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00132fc     0x12c5 thr/prcssthr.32
                0x00000000c00132fc                userModeEntryPoint(void*)
                0x00000000c0013324                changeTSS
                0x00000000c0013354                switchToThread(ThreadControlBlock*)
                0x00000000c0013408                Process::addArgs(char**)
                0x00000000c0013468                Process::Process(char const*, Process*, char**)
                0x00000000c0013468                Process::Process(char const*, Process*, char**)
                0x00000000c0013658                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013658                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013814                taskStartupFunction
                0x00000000c0013820                Semaphore::Semaphore(int)
                0x00000000c0013820                Semaphore::Semaphore(int)
                0x00000000c0013850                Mutex::Mutex()
                0x00000000c0013850                Mutex::Mutex()
                0x00000000c0013864                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001395c                Process::createUserThread()
                0x00000000c001397c                setupMultitasking(void (*)())
                0x00000000c0013a84                schedule()
                0x00000000c0013b14                Semaphore::tryAcquire()
                0x00000000c0013be0                Semaphore::assertLocked(char const*)
                0x00000000c0013c58                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013c80                blockTask(TaskState)
                0x00000000c0013cb0                waitTask(int, int*, int)
                0x00000000c0013cf4                milliTenthSleepUntil(unsigned int)
                0x00000000c0013d84                milliTenthSleep(unsigned int)
                0x00000000c0013d94                sleep(unsigned int)
                0x00000000c0013db0                Semaphore::acquire()
                0x00000000c0013e6c                taskReturned
                0x00000000c0013ea8                Thr::processFromPID(int)
                0x00000000c0013f48                unblockTask(ThreadControlBlock*)
                0x00000000c0013fec                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00142b8                cleanerTaskFunction(void*)
                0x00000000c00143a8                terminateTask(int)
                0x00000000c0014474                Thr::terminateFromIRQ(int)
                0x00000000c0014484                Semaphore::release()
 .text          0x00000000c00145c1      0xb93 vm86/vm8086.32
                0x00000000c00145c1                Vm::inbv(unsigned short)
                0x00000000c00145d4                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001460a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001461a                Vm::getSegment(unsigned int)
                0x00000000c0014622                Vm::getOffset(unsigned int)
                0x00000000c0014627                Vm::mainloop2()
                0x00000000c0014661                Vm::mainVm8086Loop(void*)
                0x00000000c0014671                Vm::mainloop3(unsigned long)
                0x00000000c0014697                Vm::initialise8086()
                0x00000000c00146da                Vm::finish8086()
                0x00000000c001473b                Vm::getOutput8086(unsigned char*)
                0x00000000c0014760                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014819                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014981                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0014a0b                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0014a1c                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0014a2e                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0014a3f                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0014a54                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0014a6a                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0014a7f                Vm::faultHandler(regs*)
 .text          0x00000000c0015154      0x8e9 arch/i386/hal.32
                0x00000000c0015154                noCopro(unsigned long)
                0x00000000c0015155                nmiHandler(regs*, void*)
                0x00000000c001516e                doubleFault(regs*, void*)
                0x00000000c0015187                displayDebugInfo(regs*)
                0x00000000c00154a8                displayProgramFault(char const*)
                0x00000000c00154f4                gpFault(regs*, void*)
                0x00000000c0015559                pgFault(regs*, void*)
                0x00000000c00155df                otherISRHandler(regs*, void*)
                0x00000000c0015613                opcodeFault(regs*, void*)
                0x00000000c0015693                i386SaveCoprocessor(void*)
                0x00000000c00156a7                i386LoadCoprocessor(void*)
                0x00000000c00156bb                x87EmulHandler(regs*, void*)
                0x00000000c0015758                HalInitialiseCoprocessor()
                0x00000000c0015806                HalPanic(char const*)
                0x00000000c001580b                HalQueryPerformanceCounter()
                0x00000000c0015826                HalInitialise()
                0x00000000c00159cc                HalMakeBeep(int)
                0x00000000c0015a06                HalGetRand()
                0x00000000c0015a09                HalEndOfInterrupt(int)
                0x00000000c0015a3a                HalRestart()
                0x00000000c0015a3b                HalShutdown()
                0x00000000c0015a3c                HalSleep()
 *fill*         0x00000000c0015a3d        0x3 
 .text          0x00000000c0015a40      0x2f4 arch/i386/pic.32
                0x00000000c0015a40                picIoWait()
                0x00000000c0015a48                picDisable()
                0x00000000c0015a7c                picGetIRQReg(int)
                0x00000000c0015b00                picOpen()
                0x00000000c0015c90                picEOI(int)
 .text          0x00000000c0015d34      0x64d arch/i386/rtc.32
                0x00000000c0015d34                RTC::open(int, int, void*)
                0x00000000c0015d38                RTC::close(int, int, void*)
                0x00000000c0015d3c                RTC::timeInSecondsUTC()
                0x00000000c0015d4e                RTC::timeInDatetimeUTC()
                0x00000000c0015d74                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015db2                RTC::~RTC()
                0x00000000c0015db2                RTC::~RTC()
                0x00000000c0015dd6                RTC::~RTC()
                0x00000000c0015e00                RTC::get_update_in_progress_flag()
                0x00000000c0015e18                RTC::completeRTCRefresh()
                0x00000000c00160d0                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0016283                rtcIRQHandler(regs*, void*)
                0x00000000c00162c8                RTC::RTC()
                0x00000000c00162c8                RTC::RTC()
 *fill*         0x00000000c0016381        0x3 
 .text          0x00000000c0016384      0x203 arch/i386/vga.32
                0x00000000c0016384                HalConsoleScroll(int, int)
                0x00000000c001648c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00164f8                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0016587        0x1 
 .text          0x00000000c0016588     0x13e7 fs/fat/vfslink.32
                0x00000000c0016588                FAT::getName()
                0x00000000c0016590                FAT::tell(void*, unsigned long long*)
                0x00000000c00165cc                FAT::stat(void*, unsigned long long*)
                0x00000000c0016608                FAT::~FAT()
                0x00000000c0016608                FAT::~FAT()
                0x00000000c001662c                FAT::~FAT()
                0x00000000c0016654                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00166f8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00167bc                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016990                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016ba8                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016d68                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016ed4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016f34                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016f94                FAT::close(void*)
                0x00000000c0016fe8                FAT::closeDir(void*)
                0x00000000c001703c                FAT::seek(void*, unsigned long long)
                0x00000000c0017094                fatWrapperReadDisk
                0x00000000c00170d8                fatWrapperWriteDisk
                0x00000000c001711c                fatWrapperIoctl
                0x00000000c0017238                FAT::FAT()
                0x00000000c0017238                FAT::FAT()
                0x00000000c001728c                FAT::fixFilepath(char*)
                0x00000000c00172c8                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0017400                FAT::openDir(char const*, void**)
                0x00000000c00174b0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00175a8                FAT::unlink(char const*)
                0x00000000c0017628                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00177b4                FAT::rename(char const*, char const*)
                0x00000000c0017880                FAT::mkdir(char const*)
                0x00000000c0017900                FAT::exists(char const*)
 *fill*         0x00000000c001796f        0x1 
 .text          0x00000000c0017970       0x5c fs/iso9660/helper.32
                0x00000000c0017970                isoReadDiscSectorHelper
 .text          0x00000000c00179cc      0x576 fs/iso9660/vfslink.32
                0x00000000c00179cc                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00179d2                ISO9660::getName()
                0x00000000c00179d8                ISO9660::closeDir(void*)
                0x00000000c00179e2                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00179e8                ISO9660::unlink(char const*)
                0x00000000c00179ee                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00179f4                ISO9660::rename(char const*, char const*)
                0x00000000c00179fa                ISO9660::mkdir(char const*)
                0x00000000c0017a00                ISO9660::~ISO9660()
                0x00000000c0017a00                ISO9660::~ISO9660()
                0x00000000c0017a24                ISO9660::~ISO9660()
                0x00000000c0017a4c                ISO9660::exists(char const*)
                0x00000000c0017a60                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017aec                ISO9660::openDir(char const*, void**)
                0x00000000c0017b6c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017bac                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017be4                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017c1a                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017c54                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017d40                ISO9660::close(void*)
                0x00000000c0017d66                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017e1e                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017ea8                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017f1a                ISO9660::ISO9660()
                0x00000000c0017f1a                ISO9660::ISO9660()
 .text          0x00000000c0017f42      0x26c hal/sound/sndcard.32
                0x00000000c0017f42                SoundCard::beginPlayback()
                0x00000000c0017f50                SoundCard::stopPlayback()
                0x00000000c0017f5e                SoundCard::SoundCard(char const*)
                0x00000000c0017f5e                SoundCard::SoundCard(char const*)
                0x00000000c0017ffc                SoundCard::~SoundCard()
                0x00000000c0017ffc                SoundCard::~SoundCard()
                0x00000000c0018020                SoundCard::~SoundCard()
                0x00000000c001804a                SoundCard::configureRates(int, int, int)
                0x00000000c001807a                SoundCard::getSamples16(int, short*)
                0x00000000c00180d6                SoundCard::getSamples32(int, int*)
                0x00000000c001815c                SoundCard::addChannel(SoundPort*)
                0x00000000c001819a                SoundCard::removeChannel(int)
 *fill*         0x00000000c00181ae        0x2 
 .text          0x00000000c00181b0      0x377 hal/sound/sndport.32
                0x00000000c00181b0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00181b0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001823c                SoundPort::~SoundPort()
                0x00000000c001823c                SoundPort::~SoundPort()
                0x00000000c0018270                SoundPort::unpause()
                0x00000000c001827c                SoundPort::pause()
                0x00000000c0018288                SoundPort::getBufferUsed()
                0x00000000c0018290                SoundPort::getBufferSize()
                0x00000000c0018298                SoundPort::buffer16(short*, int)
                0x00000000c0018324                SoundPort::buffer32(int*, int)
                0x00000000c00183ac                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0018470                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0018527        0x0 hw/bus/isa.32
 *fill*         0x00000000c0018527        0x1 
 .text          0x00000000c0018528      0xb49 hw/bus/pci.32
                0x00000000c0018528                PCI::open(int, int, void*)
                0x00000000c0018546                PCI::close(int, int, void*)
                0x00000000c001854a                PCI::PCI()
                0x00000000c001854a                PCI::PCI()
                0x00000000c00185e4                PCI::readBAR8(unsigned int, int)
                0x00000000c0018600                PCI::readBAR16(unsigned int, int)
                0x00000000c001861e                PCI::readBAR32(unsigned int, int)
                0x00000000c001863a                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001865a                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001867c                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001869c                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001870a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00187b2                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c00187d6                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c00187fe                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018848                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0018870                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018894                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c00188b8                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c00188e0                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018944                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018a2c                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018ca6                PCI::checkBus(unsigned char)
                0x00000000c0018ccc                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018e3e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018fb2                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001901e                PCI::detect()
 *fill*         0x00000000c0019071        0x1 
 .text          0x00000000c0019072      0xb5a hw/diskctrl/ide.32
                0x00000000c0019072                IDE::close(int, int, void*)
                0x00000000c0019076                IDE::IDE()
                0x00000000c0019076                IDE::IDE()
                0x00000000c00190aa                IDE::prepareInterrupt(unsigned char)
                0x00000000c00190bc                selectDrive(unsigned char, unsigned char)
                0x00000000c00190be                IDE::getBase(unsigned char)
                0x00000000c00190d0                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0019190                IDE::read(unsigned char, unsigned char)
                0x00000000c001923e                IDE::waitInterrupt(unsigned char)
                0x00000000c00192a6                ideChannel0IRQHandler(regs*, void*)
                0x00000000c00192c2                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00192de                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019324                IDE::open(int, int, void*)
                0x00000000c0019732                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c00197fe                IDE::detect()
                0x00000000c0019abe                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019b6e                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019bcc      0x32a hw/diskctrl/satabus.32
                0x00000000c0019bcc                SATABus::close(int, int, void*)
                0x00000000c0019bd0                SATABus::detect()
                0x00000000c0019bd2                SATABus::SATABus()
                0x00000000c0019bd2                SATABus::SATABus()
                0x00000000c0019c58                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c8a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019cd2                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019cf2                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d1c                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019e2c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019ed6                SATABus::open(int, int, void*)
 .text          0x00000000c0019ef6      0x5f4 hw/diskphys/ata.32
                0x00000000c0019ef6                ATA::close(int, int, void*)
                0x00000000c0019f1a                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019f1c                ATA::ATA()
                0x00000000c0019f1c                ATA::ATA()
                0x00000000c0019f4a                ATA::flush(bool)
                0x00000000c0019f94                ATA::readyForCommand()
                0x00000000c0019fe0                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a35c                ATA::read(unsigned long long, int, void*)
                0x00000000c001a3a8                ATA::write(unsigned long long, int, void*)
                0x00000000c001a3f4                ATA::detectCHS()
                0x00000000c001a41e                ATA::open(int, int, void*)
 .text          0x00000000c001a4ea      0x60e hw/diskphys/atapi.32
                0x00000000c001a4ea                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a4f0                ATAPI::close(int, int, void*)
                0x00000000c001a514                ATAPI::ATAPI()
                0x00000000c001a514                ATAPI::ATAPI()
                0x00000000c001a542                ATAPI::readyForCommand()
                0x00000000c001a594                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a854                ATAPI::diskRemoved()
                0x00000000c001a88e                ATAPI::eject()
                0x00000000c001a8d6                ATAPI::diskInserted()
                0x00000000c001a8e2                ATAPI::detectMedia()
                0x00000000c001a99e                ATAPI::open(int, int, void*)
                0x00000000c001aa7e                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001aaf8      0x402 hw/diskphys/sata.32
                0x00000000c001aaf8                SATA::close(int, int, void*)
                0x00000000c001ab1c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ab1e                SATA::open(int, int, void*)
                0x00000000c001abc8                SATA::SATA()
                0x00000000c001abc8                SATA::SATA()
                0x00000000c001abf6                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ae42                SATA::read(unsigned long long, int, void*)
                0x00000000c001ae8e                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001aefa      0x5b9 hw/diskphys/satapi.32
                0x00000000c001aefa                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001af00                SATAPI::close(int, int, void*)
                0x00000000c001af24                SATAPI::open(int, int, void*)
                0x00000000c001b01c                SATAPI::SATAPI()
                0x00000000c001b01c                SATAPI::SATAPI()
                0x00000000c001b04a                SATAPI::diskRemoved()
                0x00000000c001b04c                SATAPI::diskInserted()
                0x00000000c001b068                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b344                SATAPI::eject()
                0x00000000c001b380                SATAPI::read(unsigned long long, int, void*)
                0x00000000c001b4b2                SATAPI::detectMedia()
 *fill*         0x00000000c001b4b3        0x1 
 .text          0x00000000c001b4b4      0x455 hw/intctrl/apic.32
                0x00000000c001b4b4                IOAPIC::close(int, int, void*)
                0x00000000c001b4ba                apicGetBase()
                0x00000000c001b4fc                IOAPIC::IOAPIC()
                0x00000000c001b4fc                IOAPIC::IOAPIC()
                0x00000000c001b524                apicOpen()
                0x00000000c001b68a                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b6bc                IOAPIC::read(int)
                0x00000000c001b6e4                IOAPIC::open(int, int, void*)
                0x00000000c001b7d8                IOAPIC::write(int, int)
                0x00000000c001b804                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b909        0x3 
 .text          0x00000000c001b90c       0xf0 hw/timer/apictimer.32
                0x00000000c001b90c                APICTimer::close(int, int, void*)
                0x00000000c001b914                apicTimerHandler(regs*, void*)
                0x00000000c001b93c                APICTimer::open(int, int, void*)
                0x00000000c001b9ac                APICTimer::write(int)
                0x00000000c001b9d4                APICTimer::APICTimer()
                0x00000000c001b9d4                APICTimer::APICTimer()
 .text          0x00000000c001b9fc      0x1aa hw/timer/pit.32
                0x00000000c001b9fc                PIT::write(int)
                0x00000000c001ba80                pitHandler(regs*, void*)
                0x00000000c001baa4                PIT::open(int, int, void*)
                0x00000000c001baf4                PIT::close(int, int, void*)
                0x00000000c001bb24                PIT::PIT()
                0x00000000c001bb24                PIT::PIT()
 *fill*         0x00000000c001bba6        0xa 
 .text          0x00000000c001bbb0       0x83 arch/i386/avx.32
                0x00000000c001bbb0                avxDetect
                0x00000000c001bbda                avxSave
                0x00000000c001bbeb                avxLoad
                0x00000000c001bbfc                avxInit
                0x00000000c001bc1e                avxClose
                0x00000000c001bc1f                wouldSheSayYes
 *fill*         0x00000000c001bc33        0xd 
 .text          0x00000000c001bc40      0x1d6 arch/i386/interrupt.32
                0x00000000c001bc40                isr0
                0x00000000c001bc50                isr1
                0x00000000c001bc5a                isr2
                0x00000000c001bc64                isr3
                0x00000000c001bc6e                isr4
                0x00000000c001bc78                isr5
                0x00000000c001bc82                isr6
                0x00000000c001bc8c                isr7
                0x00000000c001bc96                isr8
                0x00000000c001bc9e                isr9
                0x00000000c001bca8                isr10
                0x00000000c001bcb0                isr11
                0x00000000c001bcb8                isr12
                0x00000000c001bcc0                isr13
                0x00000000c001bcc8                isr14
                0x00000000c001bcd0                isr15
                0x00000000c001bcda                isr16
                0x00000000c001bce4                isr17
                0x00000000c001bcee                isr18
                0x00000000c001bcf8                irq3
                0x00000000c001bd02                irq4
                0x00000000c001bd0c                irq5
                0x00000000c001bd16                irq6
                0x00000000c001bd20                irq7
                0x00000000c001bd2a                irq8
                0x00000000c001bd34                irq9
                0x00000000c001bd3e                irq10
                0x00000000c001bd48                irq11
                0x00000000c001bd52                irq12
                0x00000000c001bd5c                irq13
                0x00000000c001bd66                irq14
                0x00000000c001bd70                irq15
                0x00000000c001bd7a                irq1
                0x00000000c001bd81                irq2
                0x00000000c001bd88                isr96
                0x00000000c001bd8f                irq0
                0x00000000c001bd94                int_common_stub
                0x00000000c001bd94                syscall_common_stub
                0x00000000c001bdc6                irq16
                0x00000000c001bdd0                irq17
                0x00000000c001bdda                irq18
                0x00000000c001bde4                irq19
                0x00000000c001bdee                irq20
                0x00000000c001bdf8                irq21
                0x00000000c001be02                irq22
                0x00000000c001be0c                irq23
 *fill*         0x00000000c001be16        0xa 
 .text          0x00000000c001be20       0x10 arch/i386/rdrand.32
                0x00000000c001be20                i386GetRDRAND
 .text          0x00000000c001be30       0x39 arch/i386/sse.32
                0x00000000c001be30                absolutelyNoChanceInHell
                0x00000000c001be30                sseDetect
                0x00000000c001be48                sseSave
                0x00000000c001be50                sseLoad
                0x00000000c001be58                sseInit
                0x00000000c001be68                sseClose
 *fill*         0x00000000c001be69        0x7 
 .text          0x00000000c001be70       0x49 arch/i386/x87.32
                0x00000000c001be76                x87Detect
                0x00000000c001be91                x87Save
                0x00000000c001be98                x87Load
                0x00000000c001be9f                x87Init
                0x00000000c001beb8                x87Close
 *fill*         0x00000000c001beb9        0x3 
 .text          0x00000000c001bebc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001bee1        0x0 crtn.32
 *fill*         0x00000000c001bee1        0x3 
 .text          0x00000000c001bee4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001bee4                __divdi3
 *fill*         0x00000000c001c02f        0x1 
 .text          0x00000000c001c030      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c030                __moddi3
 *fill*         0x00000000c001c1ae        0x2 
 .text          0x00000000c001c1b0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c1b0                __udivdi3
 *fill*         0x00000000c001c2af        0x1 
 .text          0x00000000c001c2b0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c2b0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c3d0        0x0
 .iplt          0x00000000c001c3d0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c3ca        0xf
 .init          0x00000000c001c3ca        0x3 crti.32
                0x00000000c001c3ca                _init
 .init          0x00000000c001c3cd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c3d2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c3d7        0x2 crtn.32

.fini           0x00000000c001c3d9        0xa
 .fini          0x00000000c001c3d9        0x3 crti.32
                0x00000000c001c3d9                _fini
 .fini          0x00000000c001c3dc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c3e1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c3e4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c3e4       0x23 core/computer.32
                0x00000000c001c3e4                Computer::~Computer()
                0x00000000c001c3e4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c408       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c408       0x2a core/computer.32
                0x00000000c001c408                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c432       0x21
 .text._Z10idleCommonv
                0x00000000c001c432       0x21 core/idle.32
                0x00000000c001c432                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c454        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c454        0x2 core/unixfile.32
                0x00000000c001c454                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c454                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c456       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c456       0x42 core/unixfile.32
                0x00000000c001c456                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c456                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c498       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c498       0xd3 core/unixfile.32
                0x00000000c001c498                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c56c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c56c        0x7 core/unixfile.32
                0x00000000c001c56c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c574       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c574       0xa1 core/unixfile.32
                0x00000000c001c574                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c616        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c616        0x8 core/unixfile.32
                0x00000000c001c616                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c61e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c61e       0x1a hal/device.32
                0x00000000c001c61e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c61e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c638       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c638       0x2a hal/device.32
                0x00000000c001c638                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c662       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c662       0xdc hal/device.32
                0x00000000c001c662                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c73e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c73e       0x42 hal/device.32
                0x00000000c001c73e                LinkedList<Device>::LinkedList()
                0x00000000c001c73e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c780       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c780       0x1c hal/timer.32
                0x00000000c001c780                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c79c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c79c        0x7 hal/timer.32
                0x00000000c001c79c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c7a4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c7a4       0xb8 hal/timer.32
                0x00000000c001c7a4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c85c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c85c       0xda hal/timer.32
                0x00000000c001c85c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c938       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c938       0x23 hw/acpi.32
                0x00000000c001c938                ACPI::~ACPI()
                0x00000000c001c938                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c95c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c95c       0x2a hw/acpi.32
                0x00000000c001c95c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c988        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c988        0x2 hw/acpi.32
                0x00000000c001c988                LinkedList<Device>::~LinkedList()
                0x00000000c001c988                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c98c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c98c       0x1c hw/acpi.32
                0x00000000c001c98c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c9a8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c9a8        0x7 hw/acpi.32
                0x00000000c001c9a8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c9b0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c9b0       0xb8 hw/acpi.32
                0x00000000c001c9b0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ca68       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ca68       0x23 hw/cpu.32
                0x00000000c001ca68                CPU::~CPU()
                0x00000000c001ca68                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ca8c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ca8c       0x2a hw/cpu.32
                0x00000000c001ca8c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cab8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cab8        0x2 thr/prcssthr.32
                0x00000000c001cab8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001cab8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cabc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cabc       0x49 thr/prcssthr.32
                0x00000000c001cabc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001cabc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb08       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb08       0x42 thr/prcssthr.32
                0x00000000c001cb08                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001cb08                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cb4c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cb4c        0x8 thr/prcssthr.32
                0x00000000c001cb4c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001cb54       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cb54       0x23 hw/bus/pci.32
                0x00000000c001cb54                PCI::~PCI()
                0x00000000c001cb54                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cb78       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cb78       0x2a hw/bus/pci.32
                0x00000000c001cb78                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cba2       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cba2       0x23 hw/diskctrl/ide.32
                0x00000000c001cba2                IDE::~IDE()
                0x00000000c001cba2                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cbc6       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cbc6       0x2a hw/diskctrl/ide.32
                0x00000000c001cbc6                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cbf0       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cbf0       0x23 hw/diskctrl/satabus.32
                0x00000000c001cbf0                SATABus::~SATABus()
                0x00000000c001cbf0                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cc14       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cc14       0x2a hw/diskctrl/satabus.32
                0x00000000c001cc14                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cc3e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cc3e       0x23 hw/diskphys/ata.32
                0x00000000c001cc3e                ATA::~ATA()
                0x00000000c001cc3e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001cc62       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001cc62       0x2a hw/diskphys/ata.32
                0x00000000c001cc62                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cc8c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cc8c       0x23 hw/diskphys/atapi.32
                0x00000000c001cc8c                ATAPI::~ATAPI()
                0x00000000c001cc8c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001ccb0       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001ccb0       0x2a hw/diskphys/atapi.32
                0x00000000c001ccb0                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001ccda       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001ccda       0x23 hw/diskphys/sata.32
                0x00000000c001ccda                SATA::~SATA()
                0x00000000c001ccda                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001ccfe       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001ccfe       0x2a hw/diskphys/sata.32
                0x00000000c001ccfe                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cd28       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cd28       0x23 hw/diskphys/satapi.32
                0x00000000c001cd28                SATAPI::~SATAPI()
                0x00000000c001cd28                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cd4c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cd4c       0x2a hw/diskphys/satapi.32
                0x00000000c001cd4c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cd76       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cd76       0x23 hw/intctrl/apic.32
                0x00000000c001cd76                IOAPIC::~IOAPIC()
                0x00000000c001cd76                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cd9a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cd9a       0x2a hw/intctrl/apic.32
                0x00000000c001cd9a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001cdc4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001cdc4       0x23 hw/timer/apictimer.32
                0x00000000c001cdc4                APICTimer::~APICTimer()
                0x00000000c001cdc4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001cde8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001cde8       0x2a hw/timer/apictimer.32
                0x00000000c001cde8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ce14       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ce14       0x23 hw/timer/pit.32
                0x00000000c001ce14                PIT::~PIT()
                0x00000000c001ce14                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ce38       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ce38       0x2a hw/timer/pit.32
                0x00000000c001ce38                PIT::~PIT()

.rodata         0x00000000c001ce62     0x2856
                0x00000000c001ce62                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001ce62        0x2 
 .ctors         0x00000000c001ce64        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001ce68        0x4 core/unixfile.32
 .ctors         0x00000000c001ce6c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001ce70        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ce74                end_ctors = .
                0x00000000c001ce74                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001ce74        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001ce78        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ce78                __DTOR_END__
                0x00000000c001ce7c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001ce7c        0x4 
 .rodata        0x00000000c001ce80      0x101 acpica/utclib.32
                0x00000000c001ce80                AcpiGbl_Ctypes
 *fill*         0x00000000c001cf81        0x3 
 .rodata        0x00000000c001cf84       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001cf9c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001cfe6       0x1a 
 .rodata        0x00000000c001d000       0xed fs/fat/ff.32
 *fill*         0x00000000c001d0ed       0x13 
 .rodata        0x00000000c001d100      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d500       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d511       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001d55a      0x115 core/computer.32
 *fill*         0x00000000c001d66f        0x1 
 .rodata.str1.4
                0x00000000c001d670       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d6d8       0x2c core/computer.32
                0x00000000c001d6d8                vtable for Computer
 .rodata.str1.4
                0x00000000c001d704       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d734        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d740       0x17 core/main.32
 *fill*         0x00000000c001d757        0x1 
 .rodata.str1.4
                0x00000000c001d758       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d7fd       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d855       0x39 core/pipe.32
 *fill*         0x00000000c001d88e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d890       0x1c core/pipe.32
                0x00000000c001d890                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d8ac       0x69 core/terminal.32
 *fill*         0x00000000c001d915        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d918       0x1c core/terminal.32
                0x00000000c001d918                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d934       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d956       0x15 core/unixfile.32
 *fill*         0x00000000c001d96b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d96c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d9b7        0x8 core/unixfile.32
 *fill*         0x00000000c001d9bf        0x1 
 .rodata.str1.4
                0x00000000c001d9c0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d9e0       0x1c core/unixfile.32
                0x00000000c001d9e0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001d9fc       0x1c core/unixfile.32
                0x00000000c001d9fc                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001da18      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001db7f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dc86       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dcb9       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dcb9        0x3 
 .rodata        0x00000000c001dcbc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001de0c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001de0c       0x68 fs/vfs.32
                0x00000000c001de0c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001de74       0x1c fs/vfs.32
                0x00000000c001de74                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001de90       0x1c fs/vfs.32
                0x00000000c001de90                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001deac       0x2c hal/bus.32
                0x00000000c001deac                vtable for Bus
 .rodata.str1.1
                0x00000000c001ded8       0x1e hal/clock.32
 *fill*         0x00000000c001def6        0x2 
 .rodata._ZTV5Clock
                0x00000000c001def8       0x3c hal/clock.32
                0x00000000c001def8                vtable for Clock
 *fill*         0x00000000c001df34        0xc 
 .rodata        0x00000000c001df40       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001df70       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001dfc8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001dfc8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001dfc8       0x2c hal/device.32
                0x00000000c001dfc8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001dff4       0x2c hal/device.32
                0x00000000c001dff4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e020       0x2c hal/diskctrl.32
                0x00000000c001e020                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e04c       0x38 hal/diskphys.32
                0x00000000c001e04c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e084       0x3e hal/intctrl.32
 *fill*         0x00000000c001e0c2        0x2 
 .rodata.str1.4
                0x00000000c001e0c4       0x5d hal/intctrl.32
 .rodata        0x00000000c001e121       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e174       0x34 hal/keybrd.32
                0x00000000c001e174                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e1a8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e1ec       0x2c hal/logidisk.32
                0x00000000c001e1ec                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e218       0x2c hal/mouse.32
                0x00000000c001e218                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e244        0xb hal/partition.32
 *fill*         0x00000000c001e24f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e250       0x44 hal/serial.32
                0x00000000c001e250                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e294       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e294        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e294       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e294       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e294       0x30 hal/timer.32
                0x00000000c001e294                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e2c4       0x10 hal/vcache.32
                0x00000000c001e2c4                vtable for VCache
 .rodata.str1.1
                0x00000000c001e2d4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e33c       0x48 hal/video.32
                0x00000000c001e33c                vtable for Video
 .rodata.str1.4
                0x00000000c001e384       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e41f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e55b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e55b        0x8 hw/acpi.32
 *fill*         0x00000000c001e55b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e55c       0x2c hw/acpi.32
                0x00000000c001e55c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e588      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e6f5        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e6f8       0x2c hw/cpu.32
                0x00000000c001e6f8                vtable for CPU
 .rodata.str1.1
                0x00000000c001e724       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e760       0x3d krnl/panic.32
                                         0x3e (size before relaxing)
 *fill*         0x00000000c001e79d        0x3 
 .rodata.str1.4
                0x00000000c001e7a0       0x3a krnl/panic.32
 .rodata.str1.1
                0x00000000c001e7da       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e81f        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001e829       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001e87d       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001e8a9       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e8f1      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001eabd       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001eb14      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ec20       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ec20       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ec20       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ec20        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001ec20       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001ecc0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001ecf0      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001edfe        0x2 
 .rodata.str1.4
                0x00000000c001ee00       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001ee73       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001ee88       0x3c arch/i386/rtc.32
                0x00000000c001ee88                vtable for RTC
 .rodata.str1.1
                0x00000000c001eec4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001ef05        0x3 
 .rodata._ZTV3FAT
                0x00000000c001ef08       0x68 fs/fat/vfslink.32
                0x00000000c001ef08                vtable for FAT
 .rodata.str1.1
                0x00000000c001ef70       0x76 fs/iso9660/vfslink.32
 *fill*         0x00000000c001efe6        0x2 
 .rodata._ZTV7ISO9660
                0x00000000c001efe8       0x68 fs/iso9660/vfslink.32
                0x00000000c001efe8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f050       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f094       0x34 hal/sound/sndcard.32
                0x00000000c001f094                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f0c8       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f107       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f13f       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f1e0       0x2c hw/bus/pci.32
                0x00000000c001f1e0                vtable for PCI
 .rodata.str1.1
                0x00000000c001f20c       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f293        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f294       0x2c hw/diskctrl/ide.32
                0x00000000c001f294                vtable for IDE
 .rodata.str1.4
                0x00000000c001f2c0       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f2e4       0x2c hw/diskctrl/satabus.32
                0x00000000c001f2e4                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f310       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f322        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f324       0x38 hw/diskphys/ata.32
                0x00000000c001f324                vtable for ATA
 .rodata.str1.1
                0x00000000c001f35c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f369        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f36c       0x38 hw/diskphys/atapi.32
                0x00000000c001f36c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f3a4       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f420       0x38 hw/diskphys/sata.32
                0x00000000c001f420                vtable for SATA
 .rodata.str1.1
                0x00000000c001f458      0x158 hw/diskphys/satapi.32
                                        0x165 (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f5b0       0x38 hw/diskphys/satapi.32
                0x00000000c001f5b0                vtable for SATAPI
 .rodata        0x00000000c001f5e8        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f5f0       0x2c hw/intctrl/apic.32
                0x00000000c001f5f0                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f61c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f637        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f638       0x30 hw/timer/apictimer.32
                0x00000000c001f638                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f668       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f685        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f688       0x30 hw/timer/pit.32
                0x00000000c001f688                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f6b8      0x25d
 *(.data)
 .data          0x00000000c001f6b8        0x0 crti.32
 .data          0x00000000c001f6b8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f6b8                __dso_handle
 .data          0x00000000c001f6bc        0x0 acpica/utclib.32
 .data          0x00000000c001f6bc        0x0 core/malloc.32
 .data          0x00000000c001f6bc        0x0 libk/ctype.32
 .data          0x00000000c001f6bc        0x0 libk/string.32
 .data          0x00000000c001f6bc        0x0 fs/fat/diskio.32
 .data          0x00000000c001f6bc        0x0 fs/fat/ff.32
 .data          0x00000000c001f6bc        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f6bc        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f6bc        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f6bc        0x0 compat/inlines.32
 .data          0x00000000c001f6bc        0x0 compat/resolve.32
 .data          0x00000000c001f6bc        0x0 core/computer.32
 .data          0x00000000c001f6bc        0x0 core/gdt.32
 .data          0x00000000c001f6bc        0x0 core/idle.32
 .data          0x00000000c001f6bc        0x0 core/idt.32
 .data          0x00000000c001f6bc        0x4 core/kheap.32
 .data          0x00000000c001f6c0      0x142 core/main.32
                0x00000000c001f6c0                titleScreen
 *fill*         0x00000000c001f802        0x2 
 .data          0x00000000c001f804        0x4 core/physmgr.32
                0x00000000c001f804                Phys::bitmap
 .data          0x00000000c001f808        0x0 core/pipe.32
 *fill*         0x00000000c001f808       0x18 
 .data          0x00000000c001f820       0x60 core/terminal.32
                0x00000000c001f820                VgaText::hiddenOut
                0x00000000c001f840                ansiToVGAMappings
 .data          0x00000000c001f880        0x0 core/tss.32
 .data          0x00000000c001f880        0x4 core/unixfile.32
                0x00000000c001f880                UnixFile::nextFd
 .data          0x00000000c001f884       0x15 core/virtmgr.32
                0x00000000c001f884                Virt::pageAllocPtr
                0x00000000c001f888                Virt::bitmap
                0x00000000c001f88c                Virt::swapfileSectorsPerPage
                0x00000000c001f890                Virt::swapfileLength
                0x00000000c001f894                Virt::swapfileSector
                0x00000000c001f898                Virt::swapfileDrive
 *fill*         0x00000000c001f899        0x3 
 .data          0x00000000c001f89c        0x4 coreobjs/c++.32
                0x00000000c001f89c                __stack_chk_guard
 .data          0x00000000c001f8a0        0x0 dbg/kconsole.32
 .data          0x00000000c001f8a0        0x0 fs/vfs.32
 .data          0x00000000c001f8a0        0x0 hal/bus.32
 .data          0x00000000c001f8a0        0x0 hal/buzzer.32
 .data          0x00000000c001f8a0        0x0 hal/clock.32
 .data          0x00000000c001f8a0        0x0 hal/device.32
 .data          0x00000000c001f8a0        0x0 hal/diskctrl.32
 .data          0x00000000c001f8a0        0x0 hal/diskphys.32
 .data          0x00000000c001f8a0        0x0 hal/fpu.32
 .data          0x00000000c001f8a0        0x0 hal/intctrl.32
 .data          0x00000000c001f8a0        0x0 hal/keybrd.32
 .data          0x00000000c001f8a0        0x0 hal/logidisk.32
 .data          0x00000000c001f8a0        0x0 hal/mouse.32
 .data          0x00000000c001f8a0        0x0 hal/partition.32
 .data          0x00000000c001f8a0        0x0 hal/serial.32
 .data          0x00000000c001f8a0        0x0 hal/timer.32
 .data          0x00000000c001f8a0        0x0 hal/vcache.32
 .data          0x00000000c001f8a0        0x0 hal/video.32
 .data          0x00000000c001f8a0       0x10 hw/acpi.32
                0x00000000c001f8a0                legacyIRQRemaps
 .data          0x00000000c001f8b0        0x4 hw/cpu.32
                0x00000000c001f8b0                lastCode
 *fill*         0x00000000c001f8b4        0xc 
 .data          0x00000000c001f8c0       0x4d krnl/env.32
                0x00000000c001f8c0                defaultSysEnv
 .data          0x00000000c001f90d        0x0 krnl/panic.32
 .data          0x00000000c001f90d        0x0 krnl/powctrl.32
 .data          0x00000000c001f90d        0x0 reg/registry.32
 .data          0x00000000c001f90d        0x0 sys/sc_eject.32
 .data          0x00000000c001f90d        0x0 sys/sc_exit.32
 .data          0x00000000c001f90d        0x0 sys/sc_getcwd.32
 .data          0x00000000c001f90d        0x0 sys/sc_getpid.32
 .data          0x00000000c001f90d        0x0 sys/sc_getramdata.32
 .data          0x00000000c001f90d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001f90d        0x0 sys/sc_loaddll.32
 .data          0x00000000c001f90d        0x0 sys/sc_read.32
 .data          0x00000000c001f90d        0x0 sys/sc_sbrk.32
 .data          0x00000000c001f90d        0x0 sys/sc_setcwd.32
 .data          0x00000000c001f90d        0x0 sys/sc_settime.32
 .data          0x00000000c001f90d        0x0 sys/sc_timezone.32
 .data          0x00000000c001f90d        0x0 sys/sc_write.32
 .data          0x00000000c001f90d        0x0 sys/sc_wsbe.32
 .data          0x00000000c001f90d        0x0 sys/sc_yield.32
 .data          0x00000000c001f90d        0x0 sys/syscalls.32
 .data          0x00000000c001f90d        0x0 thr/elf.32
 *fill*         0x00000000c001f90d        0x3 
 .data          0x00000000c001f910        0x4 thr/prcssthr.32
                0x00000000c001f910                Thr::nextPID
 .data          0x00000000c001f914        0x0 vm86/vm8086.32
 .data          0x00000000c001f914        0x0 arch/i386/hal.32
 .data          0x00000000c001f914        0x0 arch/i386/pic.32
 .data          0x00000000c001f914        0x0 arch/i386/rtc.32
 .data          0x00000000c001f914        0x0 arch/i386/vga.32
 .data          0x00000000c001f914        0x0 fs/fat/vfslink.32
 .data          0x00000000c001f914        0x0 fs/iso9660/helper.32
 .data          0x00000000c001f914        0x1 fs/iso9660/vfslink.32
                0x00000000c001f914                recentDriveletter
 .data          0x00000000c001f915        0x0 hal/sound/sndcard.32
 .data          0x00000000c001f915        0x0 hal/sound/sndport.32
 .data          0x00000000c001f915        0x0 hw/bus/isa.32
 .data          0x00000000c001f915        0x0 hw/bus/pci.32
 .data          0x00000000c001f915        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001f915        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001f915        0x0 hw/diskphys/ata.32
 .data          0x00000000c001f915        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001f915        0x0 hw/diskphys/sata.32
 .data          0x00000000c001f915        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001f915        0x0 hw/intctrl/apic.32
 .data          0x00000000c001f915        0x0 hw/timer/apictimer.32
 .data          0x00000000c001f915        0x0 hw/timer/pit.32
 .data          0x00000000c001f915        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001f915        0x0 crtn.32
 .data          0x00000000c001f915        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001f915        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001f915        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001f915        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001f918        0x0
 .got           0x00000000c001f918        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001f918        0x0
 .got.plt       0x00000000c001f918        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001f918        0x0
 .igot.plt      0x00000000c001f918        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001f918        0x0
 .tm_clone_table
                0x00000000c001f918        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001f918        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001f915      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001f915        0x3 
 .eh_frame      0x00000000c001f918        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001f918        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001f918       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001f970       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001f9b0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fa1c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001faa0        0x0
 .rel.got       0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001faa0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001faa0     0x4da8
                0x00000000c001faa0                sbss = .
 *(COMMON)
 *fill*         0x00000000c001faa0        0x0 
 COMMON         0x00000000c001faa0       0xa0 fs/iso9660/iso9660.32
                0x00000000c001faa0                dcache
                0x00000000c001fae0                cdDriveLetter
                0x00000000c001fb00                icache
 *(.bss)
 .bss           0x00000000c001fb40        0x0 crti.32
 .bss           0x00000000c001fb40       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001fb60        0x4 acpica/utclib.32
 *fill*         0x00000000c001fb64       0x1c 
 .bss           0x00000000c001fb80      0x378 core/malloc.32
 .bss           0x00000000c001fef8        0x0 libk/ctype.32
 .bss           0x00000000c001fef8        0x0 libk/string.32
 .bss           0x00000000c001fef8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001fef8        0x8 
 .bss           0x00000000c001ff00       0x88 fs/fat/ff.32
 .bss           0x00000000c001ff88        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001ff88        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c001ff88       0x18 
 .bss           0x00000000c001ffa0      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0020938        0x0 compat/inlines.32
 .bss           0x00000000c0020938        0x0 compat/resolve.32
 .bss           0x00000000c0020938        0x6 core/computer.32
                0x00000000c0020938                Krnl::computer
                0x00000000c002093c                Krnl::preemptionOn
                0x00000000c002093d                Krnl::schedulingOn
 *fill*         0x00000000c002093e        0x2 
 .bss           0x00000000c0020940        0x6 core/gdt.32
                0x00000000c0020940                gdtDescr
 .bss           0x00000000c0020946        0x0 core/idle.32
 *fill*         0x00000000c0020946        0x2 
 .bss           0x00000000c0020948        0x6 core/idt.32
                0x00000000c0020948                idtDescr
 .bss           0x00000000c002094e        0x0 core/kheap.32
 *fill*         0x00000000c002094e        0x2 
 .bss           0x00000000c0020950        0x4 core/main.32
                0x00000000c0020950                sysBootSettings
 .bss           0x00000000c0020954       0x29 core/physmgr.32
                0x00000000c0020954                Phys::forbidEvictions
                0x00000000c0020958                Phys::currentPagePointer
                0x00000000c002095c                Phys::highestMem
                0x00000000c0020960                Phys::oldPercent
                0x00000000c0020964                Phys::usedPages
                0x00000000c0020968                Phys::usablePages
                0x00000000c002096c                Phys::dmaUsage
 .bss           0x00000000c002097d        0x0 core/pipe.32
 *fill*         0x00000000c002097d        0x3 
 .bss           0x00000000c0020980        0x9 core/terminal.32
                0x00000000c0020980                terminalCycle
                0x00000000c0020984                activeTerminal
                0x00000000c0020988                VgaText::graphicMode
 *fill*         0x00000000c0020989        0x1 
 .bss           0x00000000c002098a        0x2 core/tss.32
                0x00000000c002098a                doubleFaultSelector
 *fill*         0x00000000c002098c       0x14 
 .bss           0x00000000c00209a0       0x84 core/unixfile.32
                0x00000000c00209a0                sfileLpt
                0x00000000c00209e0                sfileCom
                0x00000000c0020a04                sfileNul
                0x00000000c0020a08                sfilePnt
                0x00000000c0020a0c                sfileAux
                0x00000000c0020a10                sfileCon
                0x00000000c0020a14                initialFilesAdded
                0x00000000c0020a18                unixFileLinkedList
 .bss           0x00000000c0020a24       0x10 core/virtmgr.32
                0x00000000c0020a24                twswaps
                0x00000000c0020a28                swapBalance
                0x00000000c0020a2c                Virt::swapfileBitmap
                0x00000000c0020a30                firstVAS
 .bss           0x00000000c0020a34        0x0 coreobjs/c++.32
 .bss           0x00000000c0020a34        0x0 dbg/kconsole.32
 .bss           0x00000000c0020a34        0x4 fs/vfs.32
                0x00000000c0020a34                installedFilesystems
 .bss           0x00000000c0020a38        0x0 hal/bus.32
 .bss           0x00000000c0020a38        0x0 hal/buzzer.32
 .bss           0x00000000c0020a38        0x8 hal/clock.32
                0x00000000c0020a38                User::dstOn
                0x00000000c0020a39                User::timezoneHalfHourOffset
                0x00000000c0020a3c                User::timezoneHourOffset
 .bss           0x00000000c0020a40        0x0 hal/device.32
 .bss           0x00000000c0020a40        0x0 hal/diskctrl.32
 .bss           0x00000000c0020a40        0x0 hal/diskphys.32
 .bss           0x00000000c0020a40        0x0 hal/fpu.32
 .bss           0x00000000c0020a40     0x2000 hal/intctrl.32
                0x00000000c0020a40                INT_contexts
                0x00000000c0021a40                INT_handlers
 .bss           0x00000000c0022a40      0x429 hal/keybrd.32
                0x00000000c0022a40                keyboardWaitingTaskList
                0x00000000c0022a44                keyboardSetupYet
                0x00000000c0022a48                guiKeyboardHandler
                0x00000000c0022a60                keystates
 *fill*         0x00000000c0022e69       0x17 
 .bss           0x00000000c0022e80       0x88 hal/logidisk.32
                0x00000000c0022e80                diskAssignments
                0x00000000c0022ea0                disks
 .bss           0x00000000c0022f08        0x4 hal/mouse.32
                0x00000000c0022f08                guiMouseHandler
 .bss           0x00000000c0022f0c        0x0 hal/partition.32
 .bss           0x00000000c0022f0c        0x0 hal/serial.32
 .bss           0x00000000c0022f0c        0x4 hal/timer.32
                0x00000000c0022f0c                milliTenthsSinceBoot
 .bss           0x00000000c0022f10        0x0 hal/vcache.32
 .bss           0x00000000c0022f10        0x4 hal/video.32
                0x00000000c0022f10                screen
 *fill*         0x00000000c0022f14        0xc 
 .bss           0x00000000c0022f20      0x480 hw/acpi.32
                0x00000000c0022f20                systemSleepFunction
                0x00000000c0022f24                systemResetFunction
                0x00000000c0022f28                systemShutdownFunction
                0x00000000c0022f2c                nextACPITable
                0x00000000c0022f40                acpiTables
                0x00000000c0023140                usingXSDT
                0x00000000c0023144                MADTpointer
                0x00000000c0023148                RSDTpointer
                0x00000000c002314c                RSDPpointer
                0x00000000c0023150                nextAPICNMI
                0x00000000c0023160                apicNMIInfo
                0x00000000c00231e0                legacyIRQFlags
                0x00000000c0023200                ioapicDiscoveryNumber
                0x00000000c0023220                ioapicFoundInMADT
                0x00000000c0023240                ioapicAddresses
                0x00000000c00232c0                ioapicGSIBase
                0x00000000c0023340                processorDiscoveryNumber
                0x00000000c0023360                matchingAPICID
                0x00000000c0023380                processorID
 .bss           0x00000000c00233a0       0x10 hw/cpu.32
                0x00000000c00233a0                lastD
                0x00000000c00233a4                lastC
                0x00000000c00233a8                lastB
                0x00000000c00233ac                lastA
 .bss           0x00000000c00233b0        0x8 krnl/env.32
                0x00000000c00233b0                Krnl::userEnv
                0x00000000c00233b4                Krnl::systemEnv
 .bss           0x00000000c00233b8        0x9 krnl/panic.32
                0x00000000c00233b8                Krnl::guiProgramFaultHandler
                0x00000000c00233bc                Krnl::guiPanicHandler
                0x00000000c00233c0                Krnl::kernelInPanic
 *fill*         0x00000000c00233c1       0x1f 
 .bss           0x00000000c00233e0       0x48 krnl/powctrl.32
                0x00000000c00233e0                Krnl::powCtrlOnBattery
                0x00000000c0023400                Krnl::currentPowerSettings
                0x00000000c0023424                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0023428        0x0 reg/registry.32
 .bss           0x00000000c0023428        0x0 sys/sc_eject.32
 .bss           0x00000000c0023428        0x0 sys/sc_exit.32
 .bss           0x00000000c0023428        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0023428        0x0 sys/sc_getpid.32
 .bss           0x00000000c0023428        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0023428        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0023428        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0023428        0x0 sys/sc_read.32
 .bss           0x00000000c0023428        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0023428        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0023428        0x0 sys/sc_settime.32
 .bss           0x00000000c0023428        0x0 sys/sc_timezone.32
 .bss           0x00000000c0023428        0x0 sys/sc_write.32
 .bss           0x00000000c0023428        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0023428        0x0 sys/sc_yield.32
 *fill*         0x00000000c0023428       0x18 
 .bss           0x00000000c0023440      0x200 sys/syscalls.32
                0x00000000c0023440                systemCallHandlers
 .bss           0x00000000c0023640      0x7a4 thr/elf.32
                0x00000000c0023640                Thr::driverLookupNext
                0x00000000c0023660                Thr::driverLookupLen
                0x00000000c0023860                Thr::driverLookupAddr
                0x00000000c0023a60                Thr::driverNameLookup
                0x00000000c0023c60                Thr::kernelSymbols
                0x00000000c0023ce0                Thr::kernelStringTable
                0x00000000c0023d60                Thr::kernelSymbolTable
                0x00000000c0023de0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023de4        0x4 
 .bss           0x00000000c0023de8       0x68 thr/prcssthr.32
                0x00000000c0023de8                cleanerThread
                0x00000000c0023dec                weNeedTheCleanerToNotBlock
                0x00000000c0023df0                retValLockStuff
                0x00000000c0023df4                retValSchedLock
                0x00000000c0023df8                lockStuffLock
                0x00000000c0023dfc                schedulerLock
                0x00000000c0023e00                taskSwitchesPostponedFlag
                0x00000000c0023e04                postponeTaskSwitchesCounter
                0x00000000c0023e08                irqDisableCounter
                0x00000000c0023e0c                terminatedTaskList
                0x00000000c0023e18                sleepingTaskList
                0x00000000c0023e24                taskList
                0x00000000c0023e30                kernelProcess
 *fill*         0x00000000c0023e50       0x10 
 .bss           0x00000000c0023e60       0x40 vm86/vm8086.32
                0x00000000c0023e60                Vm::vmRetV
                0x00000000c0023e64                Vm::vmDone
                0x00000000c0023e65                Vm::vmReady
                0x00000000c0023e68                Vm::vm86Thread
                0x00000000c0023e6c                Vm::vmToHostCommsPtr
                0x00000000c0023e80                Vm::vmToHostComms
 .bss           0x00000000c0023ea0       0x14 arch/i386/hal.32
                0x00000000c0023ea0                apic
                0x00000000c0023ea4                fpuOwner
                0x00000000c0023ea8                coproLoadFunc
                0x00000000c0023eac                coproSaveFunc
                0x00000000c0023eb0                gpFaultIntercept
 .bss           0x00000000c0023eb4        0x0 arch/i386/pic.32
 .bss           0x00000000c0023eb4        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023eb6        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023eb6        0xa 
 .bss           0x00000000c0023ec0       0xf0 fs/fat/vfslink.32
                0x00000000c0023ec0                FAT::fats
                0x00000000c0023ee0                FAT::vfsToFatRemaps
                0x00000000c0023f60                fatToVFSRemaps
 .bss           0x00000000c0023fb0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0023fb0       0x10 
 .bss           0x00000000c0023fc0      0x820 fs/iso9660/vfslink.32
                0x00000000c0023fc0                iso9660Owner
                0x00000000c0023fc4                recentSector
                0x00000000c0023fe0                recentBuffer
 .bss           0x00000000c00247e0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00247e0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00247e0        0x0 hw/bus/isa.32
 .bss           0x00000000c00247e0        0xd hw/bus/pci.32
                0x00000000c00247e0                thePCI
 .bss           0x00000000c00247ed        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00247ed        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00247ed        0x3 
 .bss           0x00000000c00247f0        0x8 hw/diskphys/ata.32
                0x00000000c00247f0                ataSectorsWritten
                0x00000000c00247f4                ataSectorsRead
 .bss           0x00000000c00247f8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00247f8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00247f8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c00247f8        0x8 
 .bss           0x00000000c0024800       0x41 hw/intctrl/apic.32
                0x00000000c0024800                noOfIOAPICs
                0x00000000c0024820                ioapics
                0x00000000c0024840                IOAPICsSetupYet
 .bss           0x00000000c0024841        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024841        0x3 
 .bss           0x00000000c0024844        0x4 hw/timer/pit.32
                0x00000000c0024844                pitFreq
 .bss           0x00000000c0024848        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024848        0x0 crtn.32
 .bss           0x00000000c0024848        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0024848        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0024848        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0024848        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024848                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00295f0                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
