Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD net/ethernet.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2299e
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x430 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c0000327                asmQuickAcquireLock
                0x00000000c0000345                asmQuickReleaseLock
                0x00000000c0000351                asmAcquireLock
                0x00000000c0000372                asmReleaseLock
                0x00000000c0000385                loadGDT
                0x00000000c00003a5                isr0
                0x00000000c00003b5                isr1
                0x00000000c00003bf                isr2
                0x00000000c00003c9                isr3
                0x00000000c00003d3                isr4
                0x00000000c00003dd                isr5
                0x00000000c00003e7                isr6
                0x00000000c00003f1                isr7
                0x00000000c00003fb                isr8
                0x00000000c0000403                isr9
                0x00000000c000040d                isr10
                0x00000000c0000415                isr11
                0x00000000c000041d                isr12
                0x00000000c0000425                isr13
                0x00000000c000042d                isr14
                0x00000000c0000435                isr15
                0x00000000c000043f                isr16
                0x00000000c0000449                isr17
                0x00000000c0000453                isr18
                0x00000000c000045d                irq3
                0x00000000c0000467                irq4
                0x00000000c0000471                irq5
                0x00000000c000047b                irq6
                0x00000000c0000485                irq7
                0x00000000c000048f                irq8
                0x00000000c0000499                irq9
                0x00000000c00004a3                irq10
                0x00000000c00004ad                irq11
                0x00000000c00004b7                irq12
                0x00000000c00004c1                irq13
                0x00000000c00004cb                irq14
                0x00000000c00004d5                irq15
                0x00000000c00004df                irq1
                0x00000000c00004e6                irq2
                0x00000000c00004ed                isr96
                0x00000000c00004f4                irq0
                0x00000000c00004f9                int_common_stub
                0x00000000c00004f9                syscall_common_stub
                0x00000000c000052b                irq16
                0x00000000c0000535                irq17
                0x00000000c000053f                irq18
                0x00000000c0000549                irq19
                0x00000000c0000553                irq20
                0x00000000c000055d                irq21
                0x00000000c0000567                irq22
                0x00000000c0000571                irq23
                0x00000000c000057b                memcpy
 .text          0x00000000c0000580      0x5dd acpica/utclib.32
                0x00000000c0000580                memcmp
                0x00000000c00005bc                memmove
                0x00000000c0000684                memset
                0x00000000c00006a0                strlen
                0x00000000c00006b8                strpbrk
                0x00000000c00006f4                strtok
                0x00000000c0000740                strcpy
                0x00000000c0000764                strncpy
                0x00000000c00007cc                strcmp
                0x00000000c000080c                strchr
                0x00000000c0000830                strncmp
                0x00000000c0000880                strcat
                0x00000000c00008b0                strncat
                0x00000000c00008ec                strstr
                0x00000000c0000934                toupper
                0x00000000c0000948                tolower
                0x00000000c000095c                simple_strtoul
 .text          0x00000000c0000b5d      0xfad core/malloc.32
                0x00000000c0000cc8                dlfree
                0x00000000c0001023                dlmalloc
                0x00000000c0001560                dlrealloc
                0x00000000c0001703                dlmemalign
                0x00000000c0001826                dlcalloc
                0x00000000c00018c0                dlcfree
                0x00000000c00018c5                dlindependent_calloc
                0x00000000c00018ea                dlindependent_comalloc
                0x00000000c0001901                dlvalloc
                0x00000000c000192c                dlpvalloc
                0x00000000c0001962                dlmalloc_trim
                0x00000000c000196f                dlmalloc_usable_size
                0x00000000c00019a0                dlmallinfo
                0x00000000c0001a6f                dlmalloc_stats
                0x00000000c0001a80                dlmallopt
 .text          0x00000000c0001b0a        0x0 libk/string.32
 .text          0x00000000c0001b0a       0x51 fs/fat/diskio.32
                0x00000000c0001b0a                disk_status
                0x00000000c0001b0d                disk_initialize
                0x00000000c0001b10                disk_read
                0x00000000c0001b26                disk_write
                0x00000000c0001b3c                disk_ioctl
 .text          0x00000000c0001b5b     0x6a69 fs/fat/ff.32
                0x00000000c0004e29                f_mount
                0x00000000c0004e8b                f_open
                0x00000000c00052c7                f_read
                0x00000000c0005547                f_write
                0x00000000c0005801                f_sync
                0x00000000c00059dd                f_close
                0x00000000c0005a0c                f_lseek
                0x00000000c0005ec3                f_opendir
                0x00000000c0005fc5                f_closedir
                0x00000000c0005fe7                f_readdir
                0x00000000c0006082                f_stat
                0x00000000c0006111                f_getfree
                0x00000000c00062dc                f_truncate
                0x00000000c00063d4                f_unlink
                0x00000000c0006557                f_mkdir
                0x00000000c0006783                f_rename
                0x00000000c0006a76                f_chmod
                0x00000000c0006b54                f_utime
                0x00000000c0006c32                f_getlabel
                0x00000000c0006e20                f_setlabel
                0x00000000c000708d                f_expand
                0x00000000c00072c3                f_forward
                0x00000000c00074a1                f_mkfs
 .text          0x00000000c00085c4       0x2f fs/fat/ffsystem.32
                0x00000000c00085c4                ff_memalloc
                0x00000000c00085dc                ff_memfree
 *fill*         0x00000000c00085f3        0x1 
 .text          0x00000000c00085f4      0x274 fs/fat/ffunicode.32
                0x00000000c00085f4                ff_uni2oem
                0x00000000c000868c                ff_oem2uni
                0x00000000c0008700                ff_wtoupper
 .text          0x00000000c0008868       0xa7 compat/inlines.32
                0x00000000c0008868                CPU::current()
                0x00000000c0008874                operator new(unsigned long)
                0x00000000c0008879                operator delete(void*)
                0x00000000c000887e                disableIRQs()
                0x00000000c0008886                enableIRQs()
                0x00000000c0008895                lockScheduler()
                0x00000000c000889d                unlockScheduler()
                0x00000000c00088ac                lockStuff()
                0x00000000c00088ba                unlockStuff()
                0x00000000c00088f4                Virt::getAKernelVAS()
                0x00000000c00088fa                __not_memcpy
 *fill*         0x00000000c000890f        0x1 
 .text          0x00000000c0008910      0x118 compat/resolve.32
                0x00000000c0008910                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0008a28      0x841 core/computer.32
                0x00000000c0008a28                Computer::close(int, int, void*)
                0x00000000c0008a6c                Krnl::firstTask()
                0x00000000c0008bc0                Computer::Computer()
                0x00000000c0008bc0                Computer::Computer()
                0x00000000c0008d1c                Computer::setBootMessage(char const*)
                0x00000000c0008d1e                Computer::detectFeatures()
                0x00000000c0008f28                Computer::displayFeatures()
                0x00000000c0008f2a                Computer::rdmsr(unsigned int)
                0x00000000c0008f56                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0008f8e                Computer::shutdown()
                0x00000000c0008fa6                Computer::restart()
                0x00000000c0008fbe                Computer::sleep()
                0x00000000c0008fd2                Computer::nmiEnabled()
                0x00000000c0008fde                Computer::readCMOS(unsigned char)
                0x00000000c0008ff8                Computer::enableNMI(bool)
                0x00000000c0009010                Computer::open(int, int, void*)
                0x00000000c00091ac                Computer::disableNMI()
                0x00000000c00091ba                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00091d8                Computer::handleNMI()
                0x00000000c000923e                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c0009269        0x1 
 .text          0x00000000c000926a      0x19d core/gdt.32
                0x00000000c000926a                GDTEntry::setBase(unsigned int)
                0x00000000c0009286                GDTEntry::setLimit(unsigned int)
                0x00000000c00092a4                GDT::GDT()
                0x00000000c00092a4                GDT::GDT()
                0x00000000c00092ba                GDT::addEntry(GDTEntry)
                0x00000000c00092dc                GDT::getNumberOfEntries()
                0x00000000c00092e4                GDT::flush()
                0x00000000c0009306                GDT::setup()
 .text          0x00000000c0009407       0x6b core/idle.32
                0x00000000c0009407                idleFunction(void*)
 *fill*         0x00000000c0009472        0x2 
 .text          0x00000000c0009474      0x464 core/idt.32
                0x00000000c0009474                IDTEntry::IDTEntry(bool)
                0x00000000c0009474                IDTEntry::IDTEntry(bool)
                0x00000000c00094e6                IDTEntry::setOffset(unsigned int)
                0x00000000c00094fc                IDT::IDT()
                0x00000000c00094fc                IDT::IDT()
                0x00000000c00094fe                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0009506                IDT::addEntry(IDTEntry, int)
                0x00000000c0009520                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0009558                IDT::flush()
                0x00000000c0009572                IDT::setup()
 .text          0x00000000c00098d8      0x191 core/kheap.32
                0x00000000c00098d8                sbrk
                0x00000000c000997b                mmap
                0x00000000c0009991                munmap
                0x00000000c00099a7                liballoc_lock()
                0x00000000c00099b4                liballoc_unlock()
                0x00000000c00099c8                liballoc_alloc(int)
                0x00000000c00099e0                liballoc_free(void*, int)
                0x00000000c00099fb                realloc
                0x00000000c0009a0f                malloc
                0x00000000c0009a1f                free
                0x00000000c0009a2f                rfree
                0x00000000c0009a3f                calloc
 .text          0x00000000c0009a69      0x437 core/main.32
                0x00000000c0009a69                Krnl::setBootMessage(char const*)
                0x00000000c0009ad5                kernel_main
 .text          0x00000000c0009ea0      0x673 core/physmgr.32
                0x00000000c0009ea0                Phys::allocateDMA(unsigned long)
                0x00000000c0009faf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0009ff5                Phys::setPageState(unsigned long, bool)
                0x00000000c000a027                Phys::getPageState(unsigned long)
                0x00000000c000a043                Phys::freePage(unsigned long)
                0x00000000c000a0c6                Phys::allocatePage()
                0x00000000c000a1b1                Phys::allocateContiguousPages(int)
                0x00000000c000a20d                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000a245                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000a513        0x1 
 .text          0x00000000c000a514      0x273 core/pipe.32
                0x00000000c000a514                Pipe::isAtty()
                0x00000000c000a518                Pipe::~Pipe()
                0x00000000c000a518                Pipe::~Pipe()
                0x00000000c000a53c                Pipe::~Pipe()
                0x00000000c000a564                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000a660                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000a720                Pipe::Pipe(int)
                0x00000000c000a720                Pipe::Pipe(int)
 *fill*         0x00000000c000a787        0x1 
 .text          0x00000000c000a788      0xb93 core/terminal.32
                0x00000000c000a788                VgaText::isAtty()
                0x00000000c000a78c                VgaText::~VgaText()
                0x00000000c000a78c                VgaText::~VgaText()
                0x00000000c000a7b0                VgaText::~VgaText()
                0x00000000c000a7da                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000a7fa                setTerminalScrollLock(bool)
                0x00000000c000a7fb                addToTerminalCycle(VgaText*)
                0x00000000c000a81c                installVgaTextImplementation()
                0x00000000c000a831                scrollTerminalScrollLock(int)
                0x00000000c000a832                VgaText::updateTitle()
                0x00000000c000a870                VgaText::load()
                0x00000000c000a8be                VgaText::updateCursor()
                0x00000000c000a8d4                VgaText::doANSI_SGR(int)
                0x00000000c000a948                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000a958                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000a968                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000a988                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000a998                VgaText::setTitleColour(VgaColour)
                0x00000000c000a9a8                VgaText::setTitle(char*)
                0x00000000c000a9ce                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000a9e0                VgaText::scrollScreen()
                0x00000000c000aa74                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000aa86                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000aae2                VgaText::getCursorX()
                0x00000000c000aaea                VgaText::getCursorY()
                0x00000000c000aaf2                VgaText::setCursor(int, int)
                0x00000000c000ab09                setActiveTerminal(VgaText*)
                0x00000000c000ab6b                doTerminalCycle()
                0x00000000c000ab86                VgaText::setCursorX(int)
                0x00000000c000ab9e                VgaText::setCursorY(int)
                0x00000000c000abb6                VgaText::incrementCursor(bool)
                0x00000000c000ac0a                VgaText::decrementCursor(bool)
                0x00000000c000ac2c                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000ad04                VgaText::doUpdate()
                0x00000000c000ad12                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000ae8a                VgaText::clearScreen()
                0x00000000c000aee4                VgaText::putchar(char)
                0x00000000c000afd0                VgaText::putx(unsigned int)
                0x00000000c000b016                VgaText::puts(char const*)
                0x00000000c000b03c                VgaText::VgaText(char const*)
                0x00000000c000b03c                VgaText::VgaText(char const*)
                0x00000000c000b1ba                VgaText::receiveKey(unsigned char)
                0x00000000c000b2a2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000b2f6                newTerminal(char*)
 *fill*         0x00000000c000b31b        0x1 
 .text          0x00000000c000b31c      0x1a1 core/tss.32
                0x00000000c000b31c                TSS::TSS()
                0x00000000c000b31c                TSS::TSS()
                0x00000000c000b32c                TSS::setESP(unsigned long)
                0x00000000c000b340                TSS::flush()
                0x00000000c000b360                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000b4bd        0x1 
 .text          0x00000000c000b4be      0x4c2 core/unixfile.32
                0x00000000c000b4be                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000b514                ReservedFilename::isAtty()
                0x00000000c000b530                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000b58e                UnixFile::getFileDescriptor()
                0x00000000c000b596                UnixFile::UnixFile(int)
                0x00000000c000b596                UnixFile::UnixFile(int)
                0x00000000c000b746                ReservedFilename::ReservedFilename(int)
                0x00000000c000b746                ReservedFilename::ReservedFilename(int)
                0x00000000c000b778                UnixFile::~UnixFile()
                0x00000000c000b778                UnixFile::~UnixFile()
                0x00000000c000b810                UnixFile::~UnixFile()
                0x00000000c000b838                ReservedFilename::~ReservedFilename()
                0x00000000c000b838                ReservedFilename::~ReservedFilename()
                0x00000000c000b85c                ReservedFilename::~ReservedFilename()
                0x00000000c000b883                getFromFileDescriptor(int)
 .text          0x00000000c000b980     0x1218 core/virtmgr.32
                0x00000000c000b980                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000b9b5                Virt::getPageState(unsigned long)
                0x00000000c000b9d9                Virt::allocateKernelVirtualPages(int)
                0x00000000c000baea                Virt::freeSwapfilePage(unsigned long)
                0x00000000c000bb08                Virt::swapIDToSector(unsigned long)
                0x00000000c000bb1a                Virt::allocateSwapfilePage()
                0x00000000c000bb98                Virt::virtualMemorySetup()
                0x00000000c000bbe3                Virt::setupPageSwapping(int)
                0x00000000c000bc54                VAS::VAS()
                0x00000000c000bc54                VAS::VAS()
                0x00000000c000bc90                VAS::VAS(VAS*)
                0x00000000c000bc90                VAS::VAS(VAS*)
                0x00000000c000bcbe                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000bcea                VAS::getPageTableEntry(unsigned long)
                0x00000000c000bd09                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000be2c                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000be50                VAS::virtualToPhysical(unsigned long)
                0x00000000c000be68                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000bea8                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000beda                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000bf04                VAS::~VAS()
                0x00000000c000bf04                VAS::~VAS()
                0x00000000c000c080                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000c182                VAS::allocatePages(int, int)
                0x00000000c000c35a                VAS::setCPUSpecific(unsigned long)
                0x00000000c000c376                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000c43c                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000c52a                VAS::VAS(bool)
                0x00000000c000c52a                VAS::VAS(bool)
                0x00000000c000c7aa                VAS::evict(unsigned long)
                0x00000000c000c87a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000c98e                VAS::scanForEviction()
                0x00000000c000ca6c                mapVASFirstTime
 .text          0x00000000c000cb98       0x95 coreobjs/c++.32
                0x00000000c000cb98                __cxa_atexit
                0x00000000c000cb9b                __cxa_finalize
                0x00000000c000cb9c                __stack_chk_fail
                0x00000000c000cc08                __cxa_pure_virtual
                0x00000000c000cc19                operator new[](unsigned long)
                0x00000000c000cc1e                operator delete(void*, unsigned long)
                0x00000000c000cc23                operator delete[](void*)
                0x00000000c000cc28                operator delete[](void*, unsigned long)
 .text          0x00000000c000cc2d      0x1fc dbg/kconsole.32
                0x00000000c000cc2d                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000cc86                Dbg::logc(char)
                0x00000000c000cca6                Dbg::logs(char*)
                0x00000000c000ccc3                Dbg::logWriteInt(unsigned int)
                0x00000000c000cce0                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000ccff                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000ce29        0x1 
 .text          0x00000000c000ce2a      0xc78 fs/vfs.32
                0x00000000c000ce2a                File::read(unsigned long long, void*, int*)
                0x00000000c000ce82                File::write(unsigned long long, void*, int*)
                0x00000000c000ceda                Directory::read(unsigned long long, void*, int*)
                0x00000000c000cf32                Directory::write(unsigned long long, void*, int*)
                0x00000000c000cf60                File::isAtty()
                0x00000000c000cf64                Directory::isAtty()
                0x00000000c000cf68                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000cf6e                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000cf74                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000cf7a                File::~File()
                0x00000000c000cf7a                File::~File()
                0x00000000c000cf9e                File::~File()
                0x00000000c000cfc8                Directory::~Directory()
                0x00000000c000cfc8                Directory::~Directory()
                0x00000000c000cfec                Directory::~Directory()
                0x00000000c000d016                Filesystem::Filesystem()
                0x00000000c000d016                Filesystem::Filesystem()
                0x00000000c000d03a                Filesystem::~Filesystem()
                0x00000000c000d03a                Filesystem::~Filesystem()
                0x00000000c000d048                Filesystem::~Filesystem()
                0x00000000c000d06c                Fs::getcwd(Process*, char*, int)
                0x00000000c000d096                Fs::initVFS()
                0x00000000c000d0c0                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000d26a                File::File(char const*, Process*)
                0x00000000c000d26a                File::File(char const*, Process*)
                0x00000000c000d32c                File::open(FileOpenMode)
                0x00000000c000d38a                File::close()
                0x00000000c000d3ea                File::seek(unsigned long long)
                0x00000000c000d440                File::tell(unsigned long long*)
                0x00000000c000d490                File::rewind()
                0x00000000c000d4a4                File::unlink()
                0x00000000c000d4f0                File::rename(char const*)
                0x00000000c000d53e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000d59a                File::exists()
                0x00000000c000d5d8                File::stat(unsigned long long*, bool*)
                0x00000000c000d639                Fs::setcwd(Process*, char*)
                0x00000000c000d7ae                Directory::Directory(char const*, Process*)
                0x00000000c000d7ae                Directory::Directory(char const*, Process*)
                0x00000000c000d870                Directory::open()
                0x00000000c000d8cc                Directory::close()
                0x00000000c000d92c                Directory::unlink()
                0x00000000c000d978                Directory::rename(char const*)
                0x00000000c000d9c6                Directory::exists()
                0x00000000c000da04                Directory::read(dirent*)
                0x00000000c000da50                Directory::create()
                0x00000000c000da9c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000daa2        0x2 
 .text          0x00000000c000daa4       0x86 hal/bus.32
                0x00000000c000daa4                Bus::Bus(char const*)
                0x00000000c000daa4                Bus::Bus(char const*)
                0x00000000c000dadc                Bus::~Bus()
                0x00000000c000dadc                Bus::~Bus()
                0x00000000c000db00                Bus::~Bus()
 *fill*         0x00000000c000db2a        0x2 
 .text          0x00000000c000db2c      0x153 hal/buzzer.32
                0x00000000c000db2c                Buzzer::Buzzer(char const*)
                0x00000000c000db2c                Buzzer::Buzzer(char const*)
                0x00000000c000db70                Buzzer::~Buzzer()
                0x00000000c000db70                Buzzer::~Buzzer()
                0x00000000c000db94                Buzzer::~Buzzer()
                0x00000000c000dbbe                Buzzer::stop()
                0x00000000c000dbd1                beepThread(void*)
                0x00000000c000dc12                Buzzer::beep(int, int, bool)
 *fill*         0x00000000c000dc7f        0x1 
 .text          0x00000000c000dc80      0x467 hal/clock.32
                0x00000000c000dc80                User::loadClockSettings(int)
                0x00000000c000dcd2                Clock::Clock(char const*)
                0x00000000c000dcd2                Clock::Clock(char const*)
                0x00000000c000dd08                Clock::~Clock()
                0x00000000c000dd08                Clock::~Clock()
                0x00000000c000dd2c                Clock::~Clock()
                0x00000000c000dd56                Clock::timeInSecondsLocal()
                0x00000000c000dd9e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000ddf7                datetimeToSeconds(datetime_t)
                0x00000000c000df1e                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000df7e                secondsToDatetime(unsigned long long)
                0x00000000c000e0c2                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000e0e7        0x1 
 .text          0x00000000c000e0e8      0x504 hal/device.32
                0x00000000c000e0e8                Device::hibernate()
                0x00000000c000e0ea                Device::wake()
                0x00000000c000e0ec                Device::detect()
                0x00000000c000e0ee                Device::disableLegacy()
                0x00000000c000e0f0                Device::powerSaving(PowerSavingLevel)
                0x00000000c000e0f2                DriverlessDevice::close(int, int, void*)
                0x00000000c000e0f6                DriverlessDevice::detect()
                0x00000000c000e0f8                DriverlessDevice::open(int, int, void*)
                0x00000000c000e10c                Device::~Device()
                0x00000000c000e10c                Device::~Device()
                0x00000000c000e11a                Device::~Device()
                0x00000000c000e142                Device::findAndLoadDriver()
                0x00000000c000e150                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000e176                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000e1b6                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000e1f4                Device::getParent()
                0x00000000c000e200                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000e23e                Device::addChild(Device*)
                0x00000000c000e282                Device::removeAllChildren()
                0x00000000c000e2c8                Device::hibernateAll()
                0x00000000c000e2f8                Device::wakeAll()
                0x00000000c000e328                Device::detectAll()
                0x00000000c000e358                Device::disableLegacyAll()
                0x00000000c000e388                Device::loadDriversForAll()
                0x00000000c000e3c8                Device::closeAll()
                0x00000000c000e3fe                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000e434                Device::setName(char const*)
                0x00000000c000e442                Device::Device(char const*)
                0x00000000c000e442                Device::Device(char const*)
                0x00000000c000e53e                Device::getName()
                0x00000000c000e548                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000e548                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000e57e                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000e5c2                getDevicesOfType(DeviceType)
 .text          0x00000000c000e5ec       0x86 hal/diskctrl.32
                0x00000000c000e5ec                HardDiskController::HardDiskController(char const*)
                0x00000000c000e5ec                HardDiskController::HardDiskController(char const*)
                0x00000000c000e624                HardDiskController::~HardDiskController()
                0x00000000c000e624                HardDiskController::~HardDiskController()
                0x00000000c000e648                HardDiskController::~HardDiskController()
 .text          0x00000000c000e672       0xe2 hal/diskphys.32
                0x00000000c000e672                PhysicalDisk::eject()
                0x00000000c000e676                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000e676                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000e6de                PhysicalDisk::startCache()
                0x00000000c000e706                PhysicalDisk::~PhysicalDisk()
                0x00000000c000e706                PhysicalDisk::~PhysicalDisk()
                0x00000000c000e72a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000e754      0x147 hal/fpu.32
                0x00000000c000e754                FPU::FPU(char const*)
                0x00000000c000e754                FPU::FPU(char const*)
                0x00000000c000e78c                FPU::~FPU()
                0x00000000c000e78c                FPU::~FPU()
                0x00000000c000e7b0                FPU::~FPU()
                0x00000000c000e7da                setupFPU()
 *fill*         0x00000000c000e89b        0x1 
 .text          0x00000000c000e89c     0x11e1 hal/intctrl.32
                0x00000000c000e89c                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000e8d4                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000e926                doubleFault(regs*, void*)
                0x00000000c000e940                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000e9dc                InterruptController::clearAllHandlers(int, bool)
                0x00000000c000ea84                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000eb0b                nmiHandler(regs*, void*)
                0x00000000c000eb19                int_handler
                0x00000000c000ebba                InterruptController::InterruptController(char const*)
                0x00000000c000ebba                InterruptController::InterruptController(char const*)
                0x00000000c000ec60                InterruptController::~InterruptController()
                0x00000000c000ec60                InterruptController::~InterruptController()
                0x00000000c000ec84                InterruptController::~InterruptController()
                0x00000000c000ecae                displayDebugInfo(regs*)
                0x00000000c000f13d                x87EmulHandler(regs*, void*)
                0x00000000c000f1b0                gpFault(regs*, void*)
                0x00000000c000f1e9                pgFault(regs*, void*)
                0x00000000c000f238                otherISRHandler(regs*, void*)
                0x00000000c000f257                opcodeFault(regs*, void*)
                0x00000000c000f61a                displayProgramFault(char const*)
                0x00000000c000f642                setupInterruptController()
                0x00000000c000fa30                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c000fa7d        0x1 
 .text          0x00000000c000fa7e      0x788 hal/keybrd.32
                0x00000000c000fa7e                startGUI(void*)
                0x00000000c000faea                startGUIVESA(void*)
                0x00000000c000fb56                sendKeyToTerminal(unsigned char)
                0x00000000c000fc14                sendKeyboardToken(KeyboardToken)
                0x00000000c0010056                clearInternalKeybuffer(VgaText*)
                0x00000000c001008b                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c001017c                Keyboard::Keyboard(char const*)
                0x00000000c001017c                Keyboard::Keyboard(char const*)
                0x00000000c00101b8                Keyboard::~Keyboard()
                0x00000000c00101b8                Keyboard::~Keyboard()
                0x00000000c00101dc                Keyboard::~Keyboard()
 .text          0x00000000c0010206      0x41c hal/logidisk.32
                0x00000000c0010206                LogicalDisk::close(int, int, void*)
                0x00000000c001020a                LogicalDisk::~LogicalDisk()
                0x00000000c001020a                LogicalDisk::~LogicalDisk()
                0x00000000c001022e                LogicalDisk::~LogicalDisk()
                0x00000000c0010258                LogicalDisk::open(int, int, void*)
                0x00000000c001026c                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c00102a4                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c00102ea                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00102ea                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00103a0                LogicalDisk::assignDriveLetter()
                0x00000000c0010456                LogicalDisk::mount()
                0x00000000c00104d0                LogicalDisk::unmount()
                0x00000000c00104e0                LogicalDisk::eject()
                0x00000000c00104f4                LogicalDisk::unassignDriveLetter()
                0x00000000c001054a                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c00105b6                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c0010622        0x2 
 .text          0x00000000c0010624       0x86 hal/mouse.32
                0x00000000c0010624                Mouse::Mouse(char const*)
                0x00000000c0010624                Mouse::Mouse(char const*)
                0x00000000c001065c                Mouse::~Mouse()
                0x00000000c001065c                Mouse::~Mouse()
                0x00000000c0010680                Mouse::~Mouse()
 .text          0x00000000c00106aa      0x339 hal/partition.32
                0x00000000c00106aa                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0010752                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c00109e3        0x1 
 .text          0x00000000c00109e4       0x86 hal/serial.32
                0x00000000c00109e4                Serial::Serial(char const*)
                0x00000000c00109e4                Serial::Serial(char const*)
                0x00000000c0010a1c                Serial::~Serial()
                0x00000000c0010a1c                Serial::~Serial()
                0x00000000c0010a40                Serial::~Serial()
 *fill*         0x00000000c0010a6a        0x2 
 .text          0x00000000c0010a6c      0x2f2 hal/timer.32
                0x00000000c0010a6c                Timer::Timer(char const*)
                0x00000000c0010a6c                Timer::Timer(char const*)
                0x00000000c0010aa4                Timer::~Timer()
                0x00000000c0010aa4                Timer::~Timer()
                0x00000000c0010ac8                Timer::~Timer()
                0x00000000c0010af2                Timer::read()
                0x00000000c0010afd                timerHandler(unsigned int)
                0x00000000c0010c64                setupTimer(int)
 *fill*         0x00000000c0010d5e        0x2 
 .text          0x00000000c0010d60      0x42e hal/vcache.32
                0x00000000c0010d60                VCache::VCache(PhysicalDisk*)
                0x00000000c0010d60                VCache::VCache(PhysicalDisk*)
                0x00000000c0010ec8                VCache::invalidateReadBuffer()
                0x00000000c0010ed8                VCache::writeWriteBuffer()
                0x00000000c0010f14                VCache::~VCache()
                0x00000000c0010f14                VCache::~VCache()
                0x00000000c0010f68                VCache::~VCache()
                0x00000000c0010f90                VCache::write(unsigned long long, int, void*)
                0x00000000c001108a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c001118e      0x4b3 hal/video.32
                0x00000000c001118e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c00111da                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c001124a                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c00112c8                Video::clearScreen(unsigned int)
                0x00000000c00112fc                Video::putpixel(int, int, unsigned int)
                0x00000000c001130a                Video::Video(char const*)
                0x00000000c001130a                Video::Video(char const*)
                0x00000000c0011340                Video::~Video()
                0x00000000c0011340                Video::~Video()
                0x00000000c0011364                Video::~Video()
                0x00000000c001138e                Video::isMonochrome()
                0x00000000c001139a                Video::getWidth()
                0x00000000c00113a6                Video::getHeight()
                0x00000000c00113b2                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c001146e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c00115d6                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c0011641        0x3 
 .text          0x00000000c0011644     0x1707 hw/acpi.32
                0x00000000c0011644                ACPI::close(int, int, void*)
                0x00000000c00116f8                findRSDP()
                0x00000000c00117cc                loadACPITables(unsigned char*)
                0x00000000c0011a30                findRSDT(unsigned char*)
                0x00000000c0011bf0                findDataTable(unsigned char*, char*)
                0x00000000c0011c68                scanMADT()
                0x00000000c0012144                ACPI::ACPI()
                0x00000000c0012144                ACPI::ACPI()
                0x00000000c00121a8                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0012290                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0012358                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0012360                ACPI::detectPCI()
                0x00000000c0012844                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c001288c                ACPI::sleep()
                0x00000000c00128c8                ACPI::open(int, int, void*)
 *fill*         0x00000000c0012d4b        0x1 
 .text          0x00000000c0012d4c     0x1583 hw/cpu.32
                0x00000000c0012d4c                CPU::close(int, int, void*)
                0x00000000c0012d50                CPU::lookupAMDName(unsigned char, unsigned char)
                0x00000000c0012ee4                CPU::lookupIntelName(unsigned char, unsigned char)
                0x00000000c0013192                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c00131ae                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c00131c6                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c001323a                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00132be                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c00132ec                CPU::cpuidCheckECX(unsigned int)
                0x00000000c001331a                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0013348                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0013376                CPU::CPU()
                0x00000000c0013376                CPU::CPU()
                0x00000000c0013404                CPU::displayFeatures()
                0x00000000c0013406                CPU::detectFeatures()
                0x00000000c0013df8                CPU::setupSMEP()
                0x00000000c0013e04                CPU::setupUMIP()
                0x00000000c0013e0e                CPU::setupTSC()
                0x00000000c0013e18                CPU::setupLargePages()
                0x00000000c0013e22                CPU::setupPAT()
                0x00000000c0013e5e                CPU::setupMTRR()
                0x00000000c0013e60                CPU::setupGlobalPages()
                0x00000000c0013e6a                CPU::allowUsermodeDataAccess()
                0x00000000c0013e7c                CPU::prohibitUsermodeDataAccess()
                0x00000000c0013e8e                CPU::setupSMAP()
                0x00000000c0013e9c                CPU::setupFeatures()
                0x00000000c0013f68                CPU::open(int, int, void*)
                0x00000000c00140d4                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c00142cf        0x0 hw/ports.32
 .text          0x00000000c00142cf      0x16a hw/smp.32
                0x00000000c00142cf                Krnl::smpEntry()
                0x00000000c00142d1                Krnl::startCPU(int)
                0x00000000c001441a                Krnl::startCPUs()
 *fill*         0x00000000c0014439        0x1 
 .text          0x00000000c001443a      0x581 krnl/env.32
                0x00000000c001443a                EnvVarContainer::getEnv(char const*)
                0x00000000c0014478                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001453a                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001453c                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0014722                EnvVarContainer::__loadSystem()
                0x00000000c001473c                EnvVarContainer::__loadUser()
                0x00000000c001473e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001473e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0014760                EnvVarContainer::~EnvVarContainer()
                0x00000000c0014760                EnvVarContainer::~EnvVarContainer()
                0x00000000c0014790                Krnl::getEnv(Process*, char const*)
                0x00000000c00147f5                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001480f                Krnl::setEnvUser(char const*, char const*)
                0x00000000c001482e                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0014841                Krnl::deleteEnvSystem(char const*)
                0x00000000c0014842                Krnl::deleteEnvUser(char const*)
                0x00000000c0014843                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0014844                Krnl::newProcessEnv(Process*)
                0x00000000c0014866                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c00148b2                Krnl::loadSystemEnv()
                0x00000000c00148e0                Krnl::loadUserEnv()
                0x00000000c0014906                Krnl::flushEnv()
                0x00000000c0014907                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0014927                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00149bb      0x39c krnl/panic.32
                0x00000000c00149bb                Krnl::panic(char const*)
 .text          0x00000000c0014d57      0x194 krnl/powctrl.32
                0x00000000c0014d57                Krnl::powerThread(void*)
                0x00000000c0014dd7                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0014ded                Krnl::userIOReceived()
                0x00000000c0014df8                Krnl::handlePowerButton()
                0x00000000c0014e2d                Krnl::handleSleepButton()
                0x00000000c0014e62                Krnl::setupPowerManager()
 *fill*         0x00000000c0014eeb        0x1 
 .text          0x00000000c0014eec      0x5a0 net/ethernet.32
                0x00000000c0014eec                Net::switchEndian16(unsigned short)
                0x00000000c0014f10                Net::switchEndian32(unsigned int)
                0x00000000c0014f40                Net::crc32Calc(unsigned char*, int)
                0x00000000c0014fe4                Net::wrapEthernetFrame(Net::UnwrappedEthernetFrame, unsigned char*)
                0x00000000c0015200                Net::unwrapEthernetFrame(unsigned char*, int)
 .text          0x00000000c001548c      0x50e reg/registry.32
                0x00000000c001548c                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00155e4                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0015739                Reg::getLine(char*, char*, char*)
                0x00000000c0015770                Reg::readInt(char*, char*, int*)
                0x00000000c001585b                Reg::readString(char*, char*, char*, int)
                0x00000000c00158dc                Reg::readBool(char*, char*, bool*)
                0x00000000c0015901                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001592d                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0015959                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001599a       0x36 sys/sc_eject.32
                0x00000000c001599a                Sys::eject(regs*)
 .text          0x00000000c00159d0       0x18 sys/sc_exit.32
                0x00000000c00159d0                Sys::exit(regs*)
 .text          0x00000000c00159e8       0x1f sys/sc_getcwd.32
                0x00000000c00159e8                Sys::getCwd(regs*)
 .text          0x00000000c0015a07        0xc sys/sc_getpid.32
                0x00000000c0015a07                Sys::getPID(regs*)
 .text          0x00000000c0015a13       0x1a sys/sc_getramdata.32
                0x00000000c0015a13                Sys::getRAMData(regs*)
 .text          0x00000000c0015a2d       0x84 sys/sc_getvgaptr.32
                0x00000000c0015a2d                Sys::getVGAPtr(regs*)
 .text          0x00000000c0015ab1       0xa8 sys/sc_loaddll.32
                0x00000000c0015ab1                Sys::loadDLL(regs*)
 .text          0x00000000c0015b59       0x68 sys/sc_read.32
                0x00000000c0015b59                Sys::read(regs*)
 .text          0x00000000c0015bc1       0x55 sys/sc_sbrk.32
                0x00000000c0015bc1                Sys::sbrk(regs*)
 .text          0x00000000c0015c16       0x1c sys/sc_setcwd.32
                0x00000000c0015c16                Sys::setCwd(regs*)
 .text          0x00000000c0015c32       0x95 sys/sc_settime.32
                0x00000000c0015c32                Sys::setTime(regs*)
 .text          0x00000000c0015cc7       0x4a sys/sc_timezone.32
                0x00000000c0015cc7                Sys::timezone(regs*)
 .text          0x00000000c0015d11       0x68 sys/sc_write.32
                0x00000000c0015d11                Sys::write(regs*)
 .text          0x00000000c0015d79       0x62 sys/sc_wsbe.32
                0x00000000c0015d79                Sys::wsbe(regs*)
 .text          0x00000000c0015ddb       0x38 sys/sc_yield.32
                0x00000000c0015ddb                Sys::yield(regs*)
 .text          0x00000000c0015e13      0xf8e sys/syscalls.32
                0x00000000c0015e13                sysCallSeekDir(regs*)
                0x00000000c0015e18                sysCallTellDir(regs*)
                0x00000000c0015e1d                sysCallVerify(regs*)
                0x00000000c0015e27                sysCallGetArgc(regs*)
                0x00000000c0015e37                sysFormatDisk(regs*)
                0x00000000c0015ea1                sysSetDiskVolumeLabel(regs*)
                0x00000000c0015eeb                sysGetDiskVolumeLabel(regs*)
                0x00000000c0015f40                sysShutdown(regs*)
                0x00000000c0015f9e                sysCallRealpath(regs*)
                0x00000000c0015fe1                sysCallReadDir(regs*)
                0x00000000c0016060                sysCallIsATTY(regs*)
                0x00000000c00160ba                sysCallSeek(regs*)
                0x00000000c0016111                sysCallTell(regs*)
                0x00000000c001617d                sysCallSize(regs*)
                0x00000000c00161ef                sysCallSizeFromFilename(regs*)
                0x00000000c001629e                sysCallClose(regs*)
                0x00000000c00162fe                sysCallOpenDir(regs*)
                0x00000000c0016373                sysCallCloseDir(regs*)
                0x00000000c00163c7                sysCallMakeDir(regs*)
                0x00000000c0016437                sysCallWait(regs*)
                0x00000000c0016451                sysCallNotImpl(regs*)
                0x00000000c001646c                sysPanic(regs*)
                0x00000000c0016486                sysCallRmdir(regs*)
                0x00000000c00164ea                sysCallUnlink(regs*)
                0x00000000c001654e                sysCallGetArgv(regs*)
                0x00000000c001659a                sysCallTTYName(regs*)
                0x00000000c001661d                sysCallUSleep(regs*)
                0x00000000c0016646                sysCallSpawn(regs*)
                0x00000000c00166ae                sysCallGetEnv(regs*)
                0x00000000c001675b                sysAppSettings(regs*)
                0x00000000c001686f                sysSetFatAttrib(regs*)
                0x00000000c00168e1                sysPipe(regs*)
                0x00000000c0016926                sysGetUnixTime(regs*)
                0x00000000c001693a                string_ends_with(char const*, char const*)
                0x00000000c0016982                sysCallOpen(regs*)
                0x00000000c0016b6a                Sys::loadSyscalls()
                0x00000000c0016d5f                Sys::systemCall(regs*, void*)
 .text          0x00000000c0016da1     0x1203 thr/elf.32
                0x00000000c0016da1                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001704b                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0017261                Thr::runtimeReferenceHelper()
                0x00000000c0017274                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00172c3                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0017581                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0017cb7                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0017ce9                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0017d20                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0017d3a                Thr::loadDLL(char const*, bool)
                0x00000000c0017f6b                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0017fa4     0x12a9 thr/prcssthr.32
                0x00000000c0017fa4                userModeEntryPoint(void*)
                0x00000000c0017fcc                changeTSS
                0x00000000c0017ffc                switchToThread(ThreadControlBlock*)
                0x00000000c00180b0                Process::addArgs(char**)
                0x00000000c0018110                Process::Process(char const*, Process*, char**)
                0x00000000c0018110                Process::Process(char const*, Process*, char**)
                0x00000000c00182fc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00182fc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00184b4                taskStartupFunction
                0x00000000c00184c0                Semaphore::Semaphore(int)
                0x00000000c00184c0                Semaphore::Semaphore(int)
                0x00000000c00184f0                Mutex::Mutex()
                0x00000000c00184f0                Mutex::Mutex()
                0x00000000c0018504                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00185fc                Process::createUserThread()
                0x00000000c0018618                setupMultitasking(void (*)())
                0x00000000c0018720                schedule()
                0x00000000c00187ac                Semaphore::tryAcquire()
                0x00000000c0018878                Semaphore::assertLocked(char const*)
                0x00000000c00188f0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0018918                blockTask(TaskState)
                0x00000000c0018948                waitTask(int, int*, int)
                0x00000000c001898c                milliTenthSleepUntil(unsigned int)
                0x00000000c0018a18                milliTenthSleep(unsigned int)
                0x00000000c0018a28                sleep(unsigned int)
                0x00000000c0018a44                Semaphore::acquire()
                0x00000000c0018b00                taskReturned
                0x00000000c0018b3c                Thr::processFromPID(int)
                0x00000000c0018bdc                unblockTask(ThreadControlBlock*)
                0x00000000c0018c80                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0018f48                cleanerTaskFunction(void*)
                0x00000000c0019038                terminateTask(int)
                0x00000000c0019104                Thr::terminateFromIRQ(int)
                0x00000000c0019110                Semaphore::release()
 .text          0x00000000c001924d      0xada vm86/vm8086.32
                0x00000000c001924d                Vm::inbv(unsigned short)
                0x00000000c0019260                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0019296                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00192a6                Vm::getSegment(unsigned int)
                0x00000000c00192ae                Vm::getOffset(unsigned int)
                0x00000000c00192b3                Vm::mainloop2()
                0x00000000c00192ed                Vm::mainVm8086Loop(void*)
                0x00000000c00192fd                Vm::mainloop3(unsigned long)
                0x00000000c0019323                Vm::initialise8086()
                0x00000000c0019366                Vm::finish8086()
                0x00000000c00193c7                Vm::getOutput8086(unsigned char*)
                0x00000000c00193ec                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0019554                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00195de                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00195ef                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0019601                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0019612                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0019627                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001963d                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0019652                Vm::faultHandler(regs*)
 *fill*         0x00000000c0019d27        0x1 
 .text          0x00000000c0019d28      0xfcd vm86/x87em.32
                0x00000000c0019d28                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c0019d86                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c0019d8f                Vm::fpu32ToInternal(unsigned int)
                0x00000000c0019dd4                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c0019ddd                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c0019e3c                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c0019e78                Vm::fpuLongToFloat(long long)
                0x00000000c0019ed7                Vm::fpuGet0()
                0x00000000c0019edc                Vm::fpuGet1()
                0x00000000c0019ee4                Vm::fpuGetPi()
                0x00000000c0019eec                Vm::fpuGetLog2E()
                0x00000000c0019f04                Vm::fpuGetLogE2()
                0x00000000c0019f1c                Vm::fpuGetLog210()
                0x00000000c0019f34                Vm::fpuGetLog102()
                0x00000000c0019f4c                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c0019f60                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c0019f76                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c0019fcc                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c0019fdd                Vm::fpuAbs(unsigned long long)
                0x00000000c0019fe6                Vm::fpuChs(unsigned long long)
                0x00000000c0019ff6                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c001a005                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c001a024                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c001a040                Vm::fpuSquare(unsigned long long)
                0x00000000c001a056                Vm::fpuGetReg(int)
                0x00000000c001a099                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c001a0e5                Vm::fpuPush(unsigned long long)
                0x00000000c001a143                Vm::fpuPop()
                0x00000000c001a196                Vm::x87Handler(regs*)
 *fill*         0x00000000c001acf5        0x3 
 .text          0x00000000c001acf8     0x13b7 fs/fat/vfslink.32
                0x00000000c001acf8                FAT::getName()
                0x00000000c001ad00                FAT::tell(void*, unsigned long long*)
                0x00000000c001ad3c                FAT::stat(void*, unsigned long long*)
                0x00000000c001ad78                FAT::~FAT()
                0x00000000c001ad78                FAT::~FAT()
                0x00000000c001ad9c                FAT::~FAT()
                0x00000000c001adc4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001ae68                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001af2c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b100                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001b318                FAT::allocateSwapfile(char const*, int)
                0x00000000c001b4d4                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b640                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001b6a0                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001b700                FAT::close(void*)
                0x00000000c001b754                FAT::closeDir(void*)
                0x00000000c001b7a8                FAT::seek(void*, unsigned long long)
                0x00000000c001b804                fatWrapperReadDisk
                0x00000000c001b84c                fatWrapperWriteDisk
                0x00000000c001b894                fatWrapperIoctl
                0x00000000c001b9a4                FAT::FAT()
                0x00000000c001b9a4                FAT::FAT()
                0x00000000c001b9f8                FAT::fixFilepath(char*)
                0x00000000c001ba34                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001bb68                FAT::openDir(char const*, void**)
                0x00000000c001bc18                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001bd0c                FAT::unlink(char const*)
                0x00000000c001bd8c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001bef4                FAT::rename(char const*, char const*)
                0x00000000c001bfc0                FAT::mkdir(char const*)
                0x00000000c001c040                FAT::exists(char const*)
 *fill*         0x00000000c001c0af        0x1 
 .text          0x00000000c001c0b0      0xb75 fs/iso9660/vfslink.32
                0x00000000c001c0b0                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001c0b6                ISO9660::seek(void*, unsigned long long)
                0x00000000c001c0e6                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001c10a                ISO9660::getName()
                0x00000000c001c110                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001c134                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c13a                ISO9660::unlink(char const*)
                0x00000000c001c140                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001c146                ISO9660::rename(char const*, char const*)
                0x00000000c001c14c                ISO9660::mkdir(char const*)
                0x00000000c001c152                ISO9660::close(void*)
                0x00000000c001c174                ISO9660::closeDir(void*)
                0x00000000c001c196                ISO9660::~ISO9660()
                0x00000000c001c196                ISO9660::~ISO9660()
                0x00000000c001c1ba                ISO9660::~ISO9660()
                0x00000000c001c1e1                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001c223                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001c27e                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001c2ce                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001c4d2                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c74c                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001c7a0                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001c973                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001ca02                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001cab0                ISO9660::exists(char const*)
                0x00000000c001cad4                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001cb68                ISO9660::openDir(char const*, void**)
                0x00000000c001cc02                ISO9660::ISO9660()
                0x00000000c001cc02                ISO9660::ISO9660()
 *fill*         0x00000000c001cc25        0x1 
 .text          0x00000000c001cc26      0x298 hal/sound/sndcard.32
                0x00000000c001cc26                SoundCard::beginPlayback()
                0x00000000c001cc34                SoundCard::stopPlayback()
                0x00000000c001cc42                SoundCard::SoundCard(char const*)
                0x00000000c001cc42                SoundCard::SoundCard(char const*)
                0x00000000c001cce0                SoundCard::~SoundCard()
                0x00000000c001cce0                SoundCard::~SoundCard()
                0x00000000c001cd04                SoundCard::~SoundCard()
                0x00000000c001cd2e                SoundCard::configureRates(int, int, int)
                0x00000000c001cd5e                SoundCard::getSamples16(int, short*)
                0x00000000c001cdc8                SoundCard::getSamples32(int, int*)
                0x00000000c001ce4e                SoundCard::addChannel(SoundPort*)
                0x00000000c001ceaa                SoundCard::removeChannel(int)
 *fill*         0x00000000c001cebe        0x2 
 .text          0x00000000c001cec0      0x3fb hal/sound/sndport.32
                0x00000000c001cec0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001cec0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001cf4c                SoundPort::~SoundPort()
                0x00000000c001cf4c                SoundPort::~SoundPort()
                0x00000000c001cf80                SoundPort::unpause()
                0x00000000c001cf8c                SoundPort::pause()
                0x00000000c001cf98                SoundPort::getBufferUsed()
                0x00000000c001cfa0                SoundPort::getBufferSize()
                0x00000000c001cfa8                SoundPort::buffer16(short*, int)
                0x00000000c001d05c                SoundPort::buffer32(int*, int)
                0x00000000c001d108                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001d204                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001d2bb        0x0 hw/bus/isa.32
 *fill*         0x00000000c001d2bb        0x1 
 .text          0x00000000c001d2bc     0x1187 hw/bus/pci.32
                0x00000000c001d2bc                PCI::open(int, int, void*)
                0x00000000c001d2da                PCI::close(int, int, void*)
                0x00000000c001d2de                PCI::PCI()
                0x00000000c001d2de                PCI::PCI()
                0x00000000c001d374                PCI::readBAR8(unsigned int, int)
                0x00000000c001d390                PCI::readBAR16(unsigned int, int)
                0x00000000c001d3ae                PCI::readBAR32(unsigned int, int)
                0x00000000c001d3ca                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001d3ea                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001d40c                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001d42c                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d49a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d542                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001d566                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001d58e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001d5d8                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001d600                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001d624                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001d648                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001d670                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d6d4                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001d7bc                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001dbae                PCI::checkBus(unsigned char)
                0x00000000c001dbd2                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e012                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e384                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e3f0                PCI::detect()
 *fill*         0x00000000c001e443        0x1 
 .text          0x00000000c001e444      0xb4a hw/diskctrl/ide.32
                0x00000000c001e444                IDE::close(int, int, void*)
                0x00000000c001e448                IDE::IDE()
                0x00000000c001e448                IDE::IDE()
                0x00000000c001e47c                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e48e                selectDrive(unsigned char, unsigned char)
                0x00000000c001e490                IDE::getBase(unsigned char)
                0x00000000c001e4a2                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001e562                IDE::read(unsigned char, unsigned char)
                0x00000000c001e610                IDE::waitInterrupt(unsigned char)
                0x00000000c001e672                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001e68e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001e6aa                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001e6f0                IDE::open(int, int, void*)
                0x00000000c001eafe                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ebca                IDE::detect()
                0x00000000c001ee8a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001ef3a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001ef8e      0x5ba hw/diskctrl/satabus.32
                0x00000000c001ef8e                SATABus::close(int, int, void*)
                0x00000000c001ef92                SATABus::detect()
                0x00000000c001ef94                SATABus::SATABus()
                0x00000000c001ef94                SATABus::SATABus()
                0x00000000c001f01a                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f1ae                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f1f6                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f216                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f240                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f346                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001f528                SATABus::open(int, int, void*)
 .text          0x00000000c001f548      0x684 hw/diskphys/ata.32
                0x00000000c001f548                ATA::close(int, int, void*)
                0x00000000c001f56c                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001f56e                ATA::ATA()
                0x00000000c001f56e                ATA::ATA()
                0x00000000c001f59c                ATA::flush(bool)
                0x00000000c001f5e6                ATA::readyForCommand()
                0x00000000c001f632                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001fa28                ATA::read(unsigned long long, int, void*)
                0x00000000c001fa74                ATA::write(unsigned long long, int, void*)
                0x00000000c001fad6                ATA::detectCHS()
                0x00000000c001fb00                ATA::open(int, int, void*)
 .text          0x00000000c001fbcc      0x5bf hw/diskphys/atapi.32
                0x00000000c001fbcc                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001fbd2                ATAPI::close(int, int, void*)
                0x00000000c001fbf6                ATAPI::ATAPI()
                0x00000000c001fbf6                ATAPI::ATAPI()
                0x00000000c001fc24                ATAPI::readyForCommand()
                0x00000000c001fc76                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001ff36                ATAPI::diskRemoved()
                0x00000000c001ff52                ATAPI::eject()
                0x00000000c001ff9a                ATAPI::diskInserted()
                0x00000000c001ffc8                ATAPI::detectMedia()
                0x00000000c0020084                ATAPI::open(int, int, void*)
                0x00000000c002010c                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c002018b        0x1 
 .text          0x00000000c002018c      0xa68 hw/diskphys/sata.32
                0x00000000c002018c                SATA::close(int, int, void*)
                0x00000000c00201b0                SATA::powerSaving(PowerSavingLevel)
                0x00000000c00201b2                SATA::open(int, int, void*)
                0x00000000c00203a8                SATA::SATA()
                0x00000000c00203a8                SATA::SATA()
                0x00000000c00203d6                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c00209ce                SATA::read(unsigned long long, int, void*)
                0x00000000c0020ace                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020bf4      0x6af hw/diskphys/satapi.32
                0x00000000c0020bf4                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020bfa                SATAPI::close(int, int, void*)
                0x00000000c0020c1e                SATAPI::SATAPI()
                0x00000000c0020c1e                SATAPI::SATAPI()
                0x00000000c0020c4c                SATAPI::diskRemoved()
                0x00000000c0020c8e                SATAPI::diskInserted()
                0x00000000c0020caa                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020f3e                SATAPI::eject()
                0x00000000c0020f96                SATAPI::detectMedia()
                0x00000000c00210d6                SATAPI::open(int, int, void*)
                0x00000000c00211d6                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c00212a3        0x1 
 .text          0x00000000c00212a4       0x94 hw/fpu/avx.32
                0x00000000c00212a4                AVX::open(int, int, void*)
                0x00000000c00212b8                AVX::close(int, int, void*)
                0x00000000c00212cc                AVX::available()
                0x00000000c00212e0                AVX::save(void*)
                0x00000000c00212f8                AVX::load(void*)
                0x00000000c0021310                AVX::AVX()
                0x00000000c0021310                AVX::AVX()
 .text          0x00000000c0021338       0x94 hw/fpu/mmx.32
                0x00000000c0021338                MMX::available()
                0x00000000c002134c                MMX::open(int, int, void*)
                0x00000000c0021360                MMX::close(int, int, void*)
                0x00000000c0021374                MMX::save(void*)
                0x00000000c002138c                MMX::load(void*)
                0x00000000c00213a4                MMX::MMX()
                0x00000000c00213a4                MMX::MMX()
 .text          0x00000000c00213cc       0x9c hw/fpu/sse.32
                0x00000000c00213cc                SSE::open(int, int, void*)
                0x00000000c00213e0                SSE::close(int, int, void*)
                0x00000000c00213f4                SSE::available()
                0x00000000c0021410                SSE::save(void*)
                0x00000000c0021428                SSE::load(void*)
                0x00000000c0021440                SSE::SSE()
                0x00000000c0021440                SSE::SSE()
 .text          0x00000000c0021468       0x94 hw/fpu/x87.32
                0x00000000c0021468                x87::open(int, int, void*)
                0x00000000c002147c                x87::close(int, int, void*)
                0x00000000c0021490                x87::available()
                0x00000000c00214a4                x87::save(void*)
                0x00000000c00214bc                x87::load(void*)
                0x00000000c00214d4                x87::x87()
                0x00000000c00214d4                x87::x87()
 .text          0x00000000c00214fc      0x71e hw/intctrl/apic.32
                0x00000000c00214fc                APIC::disable()
                0x00000000c00214fe                APIC::close(int, int, void*)
                0x00000000c0021520                IOAPIC::close(int, int, void*)
                0x00000000c0021526                APIC::io_wait()
                0x00000000c002152c                APIC::getBase()
                0x00000000c002156e                APIC::eoi(unsigned char)
                0x00000000c002159c                APIC::open(int, int, void*)
                0x00000000c00216ea                IOAPIC::IOAPIC()
                0x00000000c00216ea                IOAPIC::IOAPIC()
                0x00000000c0021712                APIC::APIC()
                0x00000000c0021712                APIC::APIC()
                0x00000000c00217ee                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0021820                IOAPIC::read(int)
                0x00000000c0021848                IOAPIC::open(int, int, void*)
                0x00000000c002193e                IOAPIC::write(int, int)
                0x00000000c002196a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
                0x00000000c0021a64                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 .text          0x00000000c0021c1a      0x3d3 hw/intctrl/pic.32
                0x00000000c0021c1a                PIC::disable()
                0x00000000c0021c48                PIC::close(int, int, void*)
                0x00000000c0021c6a                PIC::PIC()
                0x00000000c0021c6a                PIC::PIC()
                0x00000000c0021d40                PIC::ioWait()
                0x00000000c0021d46                PIC::getIRQReg(int)
                0x00000000c0021db0                PIC::eoi(unsigned char)
                0x00000000c0021e42                PIC::remap()
                0x00000000c0021fae                PIC::open(int, int, void*)
 *fill*         0x00000000c0021fed        0x3 
 .text          0x00000000c0021ff0      0x240 hw/timer/apictimer.32
                0x00000000c0021ff0                APICTimer::close(int, int, void*)
                0x00000000c0021ff8                apicTimerHandler(regs*, void*)
                0x00000000c0022020                APICTimer::write(int)
                0x00000000c0022108                APICTimer::open(int, int, void*)
                0x00000000c0022208                APICTimer::APICTimer()
                0x00000000c0022208                APICTimer::APICTimer()
 .text          0x00000000c0022230      0x1a3 hw/timer/pit.32
                0x00000000c0022230                PIT::write(int)
                0x00000000c00222b0                pitHandler(regs*, void*)
                0x00000000c00222d4                PIT::open(int, int, void*)
                0x00000000c0022324                PIT::close(int, int, void*)
                0x00000000c0022354                PIT::PIT()
                0x00000000c0022354                PIT::PIT()
 *fill*         0x00000000c00223d3        0xd 
 .text          0x00000000c00223e0       0x1e hw/fpu/x86/avx.32
                0x00000000c00223e0                avxDetect
                0x00000000c00223e6                avxSave
                0x00000000c00223e7                avxLoad
                0x00000000c00223e8                avxInit
                0x00000000c00223e9                avxClose
                0x00000000c00223ea                wouldSheSayYes
 *fill*         0x00000000c00223fe        0x2 
 .text          0x00000000c0022400       0x35 hw/fpu/x86/sse.32
                0x00000000c0022400                absolutelyNoChanceInHell
                0x00000000c0022400                sseDetect
                0x00000000c0022418                sseSave
                0x00000000c002241e                sseLoad
                0x00000000c0022424                sseInit
                0x00000000c0022434                sseClose
 *fill*         0x00000000c0022435        0xb 
 .text          0x00000000c0022440       0x4d hw/fpu/x86/x87.32
                0x00000000c0022446                x87Detect
                0x00000000c0022461                x87Save
                0x00000000c002246a                x87Load
                0x00000000c0022472                x87Init
                0x00000000c002248c                x87Close
 *fill*         0x00000000c002248d        0x3 
 .text          0x00000000c0022490       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00224b5        0x0 crtn.32
 *fill*         0x00000000c00224b5        0x3 
 .text          0x00000000c00224b8      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00224b8                __divdi3
 *fill*         0x00000000c0022603        0x1 
 .text          0x00000000c0022604      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0022604                __moddi3
 *fill*         0x00000000c0022782        0x2 
 .text          0x00000000c0022784       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0022784                __udivdi3
 *fill*         0x00000000c0022883        0x1 
 .text          0x00000000c0022884      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0022884                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c00229a0        0x0
 .iplt          0x00000000c00229a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002299e        0xf
 .init          0x00000000c002299e        0x3 crti.32
                0x00000000c002299e                _init
 .init          0x00000000c00229a1        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c00229a6        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c00229ab        0x2 crtn.32

.fini           0x00000000c00229ad        0xa
 .fini          0x00000000c00229ad        0x3 crti.32
                0x00000000c00229ad                _fini
 .fini          0x00000000c00229b0        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c00229b5        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c00229b8       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c00229b8       0x23 core/computer.32
                0x00000000c00229b8                Computer::~Computer()
                0x00000000c00229b8                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c00229dc       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c00229dc       0x2a core/computer.32
                0x00000000c00229dc                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0022a06       0x21
 .text._Z10idleCommonv
                0x00000000c0022a06       0x21 core/idle.32
                0x00000000c0022a06                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0022a28        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0022a28        0x2 core/unixfile.32
                0x00000000c0022a28                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0022a28                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0022a2a       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0022a2a       0x42 core/unixfile.32
                0x00000000c0022a2a                LinkedList<UnixFile>::LinkedList()
                0x00000000c0022a2a                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0022a6c       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0022a6c       0xd3 core/unixfile.32
                0x00000000c0022a6c                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022b40        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022b40        0x7 core/unixfile.32
                0x00000000c0022b40                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0022b48       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0022b48       0xa1 core/unixfile.32
                0x00000000c0022b48                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0022bea        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0022bea        0x8 core/unixfile.32
                0x00000000c0022bea                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0022bf2       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0022bf2       0x1a hal/device.32
                0x00000000c0022bf2                DriverlessDevice::~DriverlessDevice()
                0x00000000c0022bf2                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0022c0c       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0022c0c       0x2a hal/device.32
                0x00000000c0022c0c                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0022c36       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0022c36       0xdc hal/device.32
                0x00000000c0022c36                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0022d12       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0022d12       0x42 hal/device.32
                0x00000000c0022d12                LinkedList<Device>::LinkedList()
                0x00000000c0022d12                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0022d54       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0022d54       0x1c hal/timer.32
                0x00000000c0022d54                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0022d70        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0022d70        0x7 hal/timer.32
                0x00000000c0022d70                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0022d78       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0022d78       0xb8 hal/timer.32
                0x00000000c0022d78                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0022e30       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0022e30       0xda hal/timer.32
                0x00000000c0022e30                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0022f0c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0022f0c       0x23 hw/acpi.32
                0x00000000c0022f0c                ACPI::~ACPI()
                0x00000000c0022f0c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0022f30       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0022f30       0x2a hw/acpi.32
                0x00000000c0022f30                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0022f5c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0022f5c        0x2 hw/acpi.32
                0x00000000c0022f5c                LinkedList<Device>::~LinkedList()
                0x00000000c0022f5c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0022f60       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0022f60       0x1c hw/acpi.32
                0x00000000c0022f60                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0022f7c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0022f7c        0x7 hw/acpi.32
                0x00000000c0022f7c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0022f84       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0022f84       0xb8 hw/acpi.32
                0x00000000c0022f84                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c002303c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002303c       0x23 hw/cpu.32
                0x00000000c002303c                CPU::~CPU()
                0x00000000c002303c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0023060       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0023060       0x2a hw/cpu.32
                0x00000000c0023060                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002308c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002308c        0x2 thr/prcssthr.32
                0x00000000c002308c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002308c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0023090       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0023090       0x49 thr/prcssthr.32
                0x00000000c0023090                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0023090                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00230dc       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00230dc       0x42 thr/prcssthr.32
                0x00000000c00230dc                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00230dc                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0023120        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0023120        0x8 thr/prcssthr.32
                0x00000000c0023120                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0023128        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0023128        0xd vm86/x87em.32
                0x00000000c0023128                Vm::_FPUState::_FPUState()
                0x00000000c0023128                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c0023136       0x23
 .text._ZN3PCID2Ev
                0x00000000c0023136       0x23 hw/bus/pci.32
                0x00000000c0023136                PCI::~PCI()
                0x00000000c0023136                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002315a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002315a       0x2a hw/bus/pci.32
                0x00000000c002315a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0023184       0x23
 .text._ZN3IDED2Ev
                0x00000000c0023184       0x23 hw/diskctrl/ide.32
                0x00000000c0023184                IDE::~IDE()
                0x00000000c0023184                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00231a8       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00231a8       0x2a hw/diskctrl/ide.32
                0x00000000c00231a8                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c00231d2       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c00231d2       0x23 hw/diskctrl/satabus.32
                0x00000000c00231d2                SATABus::~SATABus()
                0x00000000c00231d2                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c00231f6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c00231f6       0x2a hw/diskctrl/satabus.32
                0x00000000c00231f6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0023220       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0023220       0x23 hw/diskphys/ata.32
                0x00000000c0023220                ATA::~ATA()
                0x00000000c0023220                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0023244       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0023244       0x2a hw/diskphys/ata.32
                0x00000000c0023244                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c002326e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c002326e       0x23 hw/diskphys/atapi.32
                0x00000000c002326e                ATAPI::~ATAPI()
                0x00000000c002326e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0023292       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0023292       0x2a hw/diskphys/atapi.32
                0x00000000c0023292                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00232bc       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00232bc       0x23 hw/diskphys/sata.32
                0x00000000c00232bc                SATA::~SATA()
                0x00000000c00232bc                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c00232e0       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c00232e0       0x2a hw/diskphys/sata.32
                0x00000000c00232e0                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002330a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002330a       0x23 hw/diskphys/satapi.32
                0x00000000c002330a                SATAPI::~SATAPI()
                0x00000000c002330a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002332e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002332e       0x2a hw/diskphys/satapi.32
                0x00000000c002332e                SATAPI::~SATAPI()

.text._ZN3AVXD2Ev
                0x00000000c0023358       0x23
 .text._ZN3AVXD2Ev
                0x00000000c0023358       0x23 hw/fpu/avx.32
                0x00000000c0023358                AVX::~AVX()
                0x00000000c0023358                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c002337c       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c002337c       0x2a hw/fpu/avx.32
                0x00000000c002337c                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c00233a8       0x23
 .text._ZN3MMXD2Ev
                0x00000000c00233a8       0x23 hw/fpu/mmx.32
                0x00000000c00233a8                MMX::~MMX()
                0x00000000c00233a8                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c00233cc       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c00233cc       0x2a hw/fpu/mmx.32
                0x00000000c00233cc                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c00233f8       0x23
 .text._ZN3SSED2Ev
                0x00000000c00233f8       0x23 hw/fpu/sse.32
                0x00000000c00233f8                SSE::~SSE()
                0x00000000c00233f8                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c002341c       0x2a
 .text._ZN3SSED0Ev
                0x00000000c002341c       0x2a hw/fpu/sse.32
                0x00000000c002341c                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c0023448       0x23
 .text._ZN3x87D2Ev
                0x00000000c0023448       0x23 hw/fpu/x87.32
                0x00000000c0023448                x87::~x87()
                0x00000000c0023448                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c002346c       0x2a
 .text._ZN3x87D0Ev
                0x00000000c002346c       0x2a hw/fpu/x87.32
                0x00000000c002346c                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c0023496       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0023496       0x23 hw/intctrl/apic.32
                0x00000000c0023496                IOAPIC::~IOAPIC()
                0x00000000c0023496                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00234ba       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00234ba       0x2a hw/intctrl/apic.32
                0x00000000c00234ba                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c00234e4       0x23
 .text._ZN4APICD2Ev
                0x00000000c00234e4       0x23 hw/intctrl/apic.32
                0x00000000c00234e4                APIC::~APIC()
                0x00000000c00234e4                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c0023508       0x2a
 .text._ZN4APICD0Ev
                0x00000000c0023508       0x2a hw/intctrl/apic.32
                0x00000000c0023508                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c0023532       0x23
 .text._ZN3PICD2Ev
                0x00000000c0023532       0x23 hw/intctrl/pic.32
                0x00000000c0023532                PIC::~PIC()
                0x00000000c0023532                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c0023556       0x2a
 .text._ZN3PICD0Ev
                0x00000000c0023556       0x2a hw/intctrl/pic.32
                0x00000000c0023556                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0023580       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0023580       0x23 hw/timer/apictimer.32
                0x00000000c0023580                APICTimer::~APICTimer()
                0x00000000c0023580                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00235a4       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00235a4       0x2a hw/timer/apictimer.32
                0x00000000c00235a4                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00235d0       0x23
 .text._ZN3PITD2Ev
                0x00000000c00235d0       0x23 hw/timer/pit.32
                0x00000000c00235d0                PIT::~PIT()
                0x00000000c00235d0                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00235f4       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00235f4       0x2a hw/timer/pit.32
                0x00000000c00235f4                PIT::~PIT()

.rodata         0x00000000c002361e     0x3c8e
                0x00000000c002361e                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002361e        0x2 
 .ctors         0x00000000c0023620        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0023624        0x4 core/unixfile.32
 .ctors         0x00000000c0023628        0x4 thr/prcssthr.32
 .ctors         0x00000000c002362c        0x4 vm86/x87em.32
 .ctors         0x00000000c0023630        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0023634                end_ctors = .
                0x00000000c0023634                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0023634        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0023638        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0023638                __DTOR_END__
                0x00000000c002363c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c002363c        0x4 
 .rodata        0x00000000c0023640      0x101 acpica/utclib.32
                0x00000000c0023640                AcpiGbl_Ctypes
 *fill*         0x00000000c0023741        0x3 
 .rodata        0x00000000c0023744       0x18 core/malloc.32
 *fill*         0x00000000c002375c        0x4 
 .rodata        0x00000000c0023760      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c0023880       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c00238d6        0xa 
 .rodata        0x00000000c00238e0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0023ce0       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c0023d29      0x1d5 core/computer.32
 *fill*         0x00000000c0023efe        0x2 
 .rodata.str1.4
                0x00000000c0023f00       0xcc core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0023fcc       0x2c core/computer.32
                0x00000000c0023fcc                vtable for Computer
 .rodata.str1.1
                0x00000000c0023ff8       0x2a core/kheap.32
 *fill*         0x00000000c0024022        0x2 
 .rodata.str1.4
                0x00000000c0024024       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0024054       0x99 core/main.32
 *fill*         0x00000000c00240ed        0x3 
 .rodata.str1.4
                0x00000000c00240f0       0x1f core/main.32
 .rodata.str1.1
                0x00000000c002410f       0xe6 core/physmgr.32
                                         0xee (size before relaxing)
 *fill*         0x00000000c00241f5        0x3 
 .rodata.str1.4
                0x00000000c00241f8       0xc9 core/physmgr.32
 .rodata.str1.1
                0x00000000c00242c1       0x39 core/pipe.32
 *fill*         0x00000000c00242fa        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00242fc       0x1c core/pipe.32
                0x00000000c00242fc                vtable for Pipe
 .rodata.str1.1
                0x00000000c0024318       0x69 core/terminal.32
 *fill*         0x00000000c0024381        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0024384       0x1c core/terminal.32
                0x00000000c0024384                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00243a0       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00243c2       0x15 core/unixfile.32
 *fill*         0x00000000c00243d7        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00243d8       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0024423        0x8 core/unixfile.32
 *fill*         0x00000000c002442b        0x1 
 .rodata.str1.4
                0x00000000c002442c       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c002444c       0x1c core/unixfile.32
                0x00000000c002444c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0024468       0x1c core/unixfile.32
                0x00000000c0024468                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0024484      0x1b8 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002463c      0x194 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00247d0       0x83 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0024853       0x11 dbg/kconsole.32
 *fill*         0x00000000c0024853        0x1 
 .rodata        0x00000000c0024854      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00249a4       0x25 fs/vfs.32
                                         0x33 (size before relaxing)
 *fill*         0x00000000c00249c9        0x3 
 .rodata.str1.4
                0x00000000c00249cc       0x54 fs/vfs.32
 .rodata._ZTV10Filesystem
                0x00000000c0024a20       0x68 fs/vfs.32
                0x00000000c0024a20                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0024a88       0x1c fs/vfs.32
                0x00000000c0024a88                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0024aa4       0x1c fs/vfs.32
                0x00000000c0024aa4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0024ac0       0x2c hal/bus.32
                0x00000000c0024ac0                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c0024aec       0x30 hal/buzzer.32
                0x00000000c0024aec                vtable for Buzzer
 .rodata.str1.1
                0x00000000c0024b1c       0x1e hal/clock.32
 *fill*         0x00000000c0024b3a        0x2 
 .rodata._ZTV5Clock
                0x00000000c0024b3c       0x3c hal/clock.32
                0x00000000c0024b3c                vtable for Clock
 *fill*         0x00000000c0024b78        0x8 
 .rodata        0x00000000c0024b80       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0024bb0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0024c08       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0024c08       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0024c08       0x2c hal/device.32
                0x00000000c0024c08                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0024c34       0x2c hal/device.32
                0x00000000c0024c34                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0024c60       0x2c hal/diskctrl.32
                0x00000000c0024c60                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0024c8c       0x38 hal/diskphys.32
                0x00000000c0024c8c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0024cc4        0x9 hal/fpu.32
 *fill*         0x00000000c0024ccd        0x3 
 .rodata._ZTV3FPU
                0x00000000c0024cd0       0x38 hal/fpu.32
                0x00000000c0024cd0                vtable for FPU
 .rodata        0x00000000c0024d08      0x2f0 hal/intctrl.32
 .rodata._ZTV19InterruptController
                0x00000000c0024ff8       0x48 hal/intctrl.32
                0x00000000c0024ff8                vtable for InterruptController
 .rodata        0x00000000c0025040       0x4f hal/keybrd.32
 *fill*         0x00000000c002508f        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0025090       0x34 hal/keybrd.32
                0x00000000c0025090                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00250c4       0x7e hal/logidisk.32
 *fill*         0x00000000c0025142        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0025144       0x2c hal/logidisk.32
                0x00000000c0025144                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0025170       0x2c hal/mouse.32
                0x00000000c0025170                vtable for Mouse
 .rodata.str1.1
                0x00000000c002519c        0xb hal/partition.32
 *fill*         0x00000000c00251a7        0x1 
 .rodata._ZTV6Serial
                0x00000000c00251a8       0x44 hal/serial.32
                0x00000000c00251a8                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00251ec       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00251ec        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00251ec       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00251ec       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c00251ec       0x30 hal/timer.32
                0x00000000c00251ec                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c002521c       0x10 hal/vcache.32
                0x00000000c002521c                vtable for VCache
 .rodata.str1.1
                0x00000000c002522c       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c0025294       0x48 hal/video.32
                0x00000000c0025294                vtable for Video
 .rodata.str1.4
                0x00000000c00252dc      0x123 hw/acpi.32
 .rodata.str1.1
                0x00000000c00253ff      0x2a0 hw/acpi.32
                                        0x2ba (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c002569f       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c002569f        0x8 hw/acpi.32
 *fill*         0x00000000c002569f        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00256a0       0x2c hw/acpi.32
                0x00000000c00256a0                vtable for ACPI
 .rodata.str1.1
                0x00000000c00256cc      0x3af hw/cpu.32
                                        0x3b3 (size before relaxing)
 *fill*         0x00000000c0025a7b        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025a7c       0x2c hw/cpu.32
                0x00000000c0025a7c                vtable for CPU
 .rodata.str1.1
                0x00000000c0025aa8       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c0025ab9       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0025af5       0xbe krnl/panic.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c0025bb3        0x1 
 .rodata.str1.4
                0x00000000c0025bb4      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c0025cf2       0x2f krnl/powctrl.32
 *fill*         0x00000000c0025d21        0x3 
 .rodata.str1.4
                0x00000000c0025d24       0x4c net/ethernet.32
 .rodata.str1.1
                0x00000000c0025d70       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0025db5       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c0025e09       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c0025e35       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0025e7d      0x247 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c00260c4       0x57 thr/prcssthr.32
 *fill*         0x00000000c002611b        0x1 
 .rodata.str1.4
                0x00000000c002611c      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0026228       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0026228       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0026228       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0026228        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0026228       0xa0 vm86/vm8086.32
 .rodata        0x00000000c00262c8       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00262f8       0x58 vm86/x87em.32
 .rodata        0x00000000c0026350       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c002638c       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00263cd        0x3 
 .rodata._ZTV3FAT
                0x00000000c00263d0       0x68 fs/fat/vfslink.32
                0x00000000c00263d0                vtable for FAT
 .rodata.str1.1
                0x00000000c0026438       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c0026453        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c0026454       0x68 fs/iso9660/vfslink.32
                0x00000000c0026454                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00264bc       0xc3 hal/sound/sndcard.32
                                         0xdb (size before relaxing)
 *fill*         0x00000000c002657f        0x1 
 .rodata._ZTV9SoundCard
                0x00000000c0026580       0x34 hal/sound/sndcard.32
                0x00000000c0026580                vtable for SoundCard
 .rodata.str1.1
                0x00000000c00265b4       0x6e hal/sound/sndport.32
 *fill*         0x00000000c0026622        0x2 
 .rodata.str1.4
                0x00000000c0026624       0x93 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00266b7      0x1cd hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0026884       0x2c hw/bus/pci.32
                0x00000000c0026884                vtable for PCI
 .rodata.str1.1
                0x00000000c00268b0       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0026937        0x1 
 .rodata._ZTV3IDE
                0x00000000c0026938       0x2c hw/diskctrl/ide.32
                0x00000000c0026938                vtable for IDE
 .rodata.str1.4
                0x00000000c0026964       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata.str1.1
                0x00000000c0026988      0x104 hw/diskctrl/satabus.32
 .rodata._ZTV7SATABus
                0x00000000c0026a8c       0x2c hw/diskctrl/satabus.32
                0x00000000c0026a8c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0026ab8       0x4b hw/diskphys/ata.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c0026b03        0x1 
 .rodata._ZTV3ATA
                0x00000000c0026b04       0x38 hw/diskphys/ata.32
                0x00000000c0026b04                vtable for ATA
 .rodata.str1.1
                0x00000000c0026b3c       0x4b hw/diskphys/atapi.32
                                         0x38 (size before relaxing)
 .rodata._ZTV5ATAPI
                0x00000000c0026b3c       0x38 hw/diskphys/atapi.32
                0x00000000c0026b3c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0026b74      0x202 hw/diskphys/sata.32
 *fill*         0x00000000c0026d76        0x2 
 .rodata._ZTV4SATA
                0x00000000c0026d78       0x38 hw/diskphys/sata.32
                0x00000000c0026d78                vtable for SATA
 .rodata.str1.1
                0x00000000c0026db0      0x180 hw/diskphys/satapi.32
                                        0x18e (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c0026f30       0x38 hw/diskphys/satapi.32
                0x00000000c0026f30                vtable for SATAPI
 .rodata.str1.1
                0x00000000c0026f68        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c0026f70       0x38 hw/fpu/avx.32
                0x00000000c0026f70                vtable for AVX
 .rodata.str1.1
                0x00000000c0026fa8        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0026fb0       0x38 hw/fpu/mmx.32
                0x00000000c0026fb0                vtable for MMX
 .rodata.str1.1
                0x00000000c0026fe8        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0026ff0       0x38 hw/fpu/sse.32
                0x00000000c0026ff0                vtable for SSE
 .rodata.str1.1
                0x00000000c0027028        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c0027030       0x38 hw/fpu/x87.32
                0x00000000c0027030                vtable for x87
 .rodata        0x00000000c0027068       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c0027140       0x48 hw/intctrl/apic.32
                0x00000000c0027140                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c0027188       0x2c hw/intctrl/apic.32
                0x00000000c0027188                vtable for IOAPIC
 .rodata        0x00000000c00271b4       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c00271d6        0x2 
 .rodata._ZTV3PIC
                0x00000000c00271d8       0x48 hw/intctrl/pic.32
                0x00000000c00271d8                vtable for PIC
 .rodata.str1.1
                0x00000000c0027220        0xb hw/timer/apictimer.32
 *fill*         0x00000000c002722b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002722c       0x30 hw/timer/apictimer.32
                0x00000000c002722c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002725c       0x1d hw/timer/pit.32
 *fill*         0x00000000c0027279        0x3 
 .rodata._ZTV3PIT
                0x00000000c002727c       0x30 hw/timer/pit.32
                0x00000000c002727c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00272ac      0x7c9
 *(.data)
 .data          0x00000000c00272ac        0x0 crti.32
 .data          0x00000000c00272ac        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00272ac                __dso_handle
 .data          0x00000000c00272b0        0x0 acpica/utclib.32
 .data          0x00000000c00272b0        0x0 core/malloc.32
 .data          0x00000000c00272b0        0x0 libk/string.32
 .data          0x00000000c00272b0        0x0 fs/fat/diskio.32
 .data          0x00000000c00272b0        0x0 fs/fat/ff.32
 .data          0x00000000c00272b0        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00272b0        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00272b0        0x0 compat/inlines.32
 .data          0x00000000c00272b0        0x0 compat/resolve.32
 .data          0x00000000c00272b0        0x0 core/computer.32
 .data          0x00000000c00272b0        0x0 core/gdt.32
 .data          0x00000000c00272b0        0x0 core/idle.32
 .data          0x00000000c00272b0        0x0 core/idt.32
 .data          0x00000000c00272b0        0x4 core/kheap.32
 *fill*         0x00000000c00272b4        0xc 
 .data          0x00000000c00272c0      0x142 core/main.32
                0x00000000c00272c0                titleScreen
 *fill*         0x00000000c0027402        0x2 
 .data          0x00000000c0027404        0x4 core/physmgr.32
                0x00000000c0027404                Phys::bitmap
 .data          0x00000000c0027408        0x0 core/pipe.32
 *fill*         0x00000000c0027408       0x18 
 .data          0x00000000c0027420       0x60 core/terminal.32
                0x00000000c0027420                VgaText::hiddenOut
                0x00000000c0027440                ansiToVGAMappings
 .data          0x00000000c0027480        0x0 core/tss.32
 .data          0x00000000c0027480        0x4 core/unixfile.32
                0x00000000c0027480                UnixFile::nextFd
 .data          0x00000000c0027484       0x15 core/virtmgr.32
                0x00000000c0027484                Virt::pageAllocPtr
                0x00000000c0027488                Virt::bitmap
                0x00000000c002748c                Virt::swapfileSectorsPerPage
                0x00000000c0027490                Virt::swapfileLength
                0x00000000c0027494                Virt::swapfileSector
                0x00000000c0027498                Virt::swapfileDrive
 *fill*         0x00000000c0027499        0x3 
 .data          0x00000000c002749c        0x4 coreobjs/c++.32
                0x00000000c002749c                __stack_chk_guard
 .data          0x00000000c00274a0        0x0 dbg/kconsole.32
 .data          0x00000000c00274a0        0x0 fs/vfs.32
 .data          0x00000000c00274a0        0x0 hal/bus.32
 .data          0x00000000c00274a0        0x0 hal/buzzer.32
 .data          0x00000000c00274a0        0x0 hal/clock.32
 .data          0x00000000c00274a0        0x0 hal/device.32
 .data          0x00000000c00274a0        0x0 hal/diskctrl.32
 .data          0x00000000c00274a0        0x0 hal/diskphys.32
 .data          0x00000000c00274a0        0x0 hal/fpu.32
 .data          0x00000000c00274a0      0x2a0 hal/intctrl.32
                0x00000000c00274a0                Krnl::exceptionNames
 .data          0x00000000c0027740        0x0 hal/keybrd.32
 .data          0x00000000c0027740        0x0 hal/logidisk.32
 .data          0x00000000c0027740        0x0 hal/mouse.32
 .data          0x00000000c0027740        0x0 hal/partition.32
 .data          0x00000000c0027740        0x0 hal/serial.32
 .data          0x00000000c0027740        0x0 hal/timer.32
 .data          0x00000000c0027740        0x0 hal/vcache.32
 .data          0x00000000c0027740        0x0 hal/video.32
 .data          0x00000000c0027740       0x10 hw/acpi.32
                0x00000000c0027740                legacyIRQRemaps
 *fill*         0x00000000c0027750       0x10 
 .data          0x00000000c0027760      0x2a4 hw/cpu.32
                0x00000000c0027760                cpuNameList
                0x00000000c0027a00                lastCode
 .data          0x00000000c0027a04        0x0 hw/ports.32
 .data          0x00000000c0027a04        0x0 hw/smp.32
 *fill*         0x00000000c0027a04       0x1c 
 .data          0x00000000c0027a20       0x4d krnl/env.32
                0x00000000c0027a20                defaultSysEnv
 .data          0x00000000c0027a6d        0x0 krnl/panic.32
 .data          0x00000000c0027a6d        0x0 krnl/powctrl.32
 .data          0x00000000c0027a6d        0x0 net/ethernet.32
 .data          0x00000000c0027a6d        0x0 reg/registry.32
 .data          0x00000000c0027a6d        0x0 sys/sc_eject.32
 .data          0x00000000c0027a6d        0x0 sys/sc_exit.32
 .data          0x00000000c0027a6d        0x0 sys/sc_getcwd.32
 .data          0x00000000c0027a6d        0x0 sys/sc_getpid.32
 .data          0x00000000c0027a6d        0x0 sys/sc_getramdata.32
 .data          0x00000000c0027a6d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c0027a6d        0x0 sys/sc_loaddll.32
 .data          0x00000000c0027a6d        0x0 sys/sc_read.32
 .data          0x00000000c0027a6d        0x0 sys/sc_sbrk.32
 .data          0x00000000c0027a6d        0x0 sys/sc_setcwd.32
 .data          0x00000000c0027a6d        0x0 sys/sc_settime.32
 .data          0x00000000c0027a6d        0x0 sys/sc_timezone.32
 .data          0x00000000c0027a6d        0x0 sys/sc_write.32
 .data          0x00000000c0027a6d        0x0 sys/sc_wsbe.32
 .data          0x00000000c0027a6d        0x0 sys/sc_yield.32
 .data          0x00000000c0027a6d        0x0 sys/syscalls.32
 .data          0x00000000c0027a6d        0x0 thr/elf.32
 *fill*         0x00000000c0027a6d        0x3 
 .data          0x00000000c0027a70        0x4 thr/prcssthr.32
                0x00000000c0027a70                Thr::nextPID
 .data          0x00000000c0027a74        0x0 vm86/vm8086.32
 .data          0x00000000c0027a74        0x0 vm86/x87em.32
 .data          0x00000000c0027a74        0x0 fs/fat/vfslink.32
 .data          0x00000000c0027a74        0x1 fs/iso9660/vfslink.32
                0x00000000c0027a74                recentDriveletter
 .data          0x00000000c0027a75        0x0 hal/sound/sndcard.32
 .data          0x00000000c0027a75        0x0 hal/sound/sndport.32
 .data          0x00000000c0027a75        0x0 hw/bus/isa.32
 .data          0x00000000c0027a75        0x0 hw/bus/pci.32
 .data          0x00000000c0027a75        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0027a75        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0027a75        0x0 hw/diskphys/ata.32
 .data          0x00000000c0027a75        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0027a75        0x0 hw/diskphys/sata.32
 .data          0x00000000c0027a75        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0027a75        0x0 hw/fpu/avx.32
 .data          0x00000000c0027a75        0x0 hw/fpu/mmx.32
 .data          0x00000000c0027a75        0x0 hw/fpu/sse.32
 .data          0x00000000c0027a75        0x0 hw/fpu/x87.32
 .data          0x00000000c0027a75        0x0 hw/intctrl/apic.32
 .data          0x00000000c0027a75        0x0 hw/intctrl/pic.32
 .data          0x00000000c0027a75        0x0 hw/timer/apictimer.32
 .data          0x00000000c0027a75        0x0 hw/timer/pit.32
 .data          0x00000000c0027a75        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0027a75        0x0 crtn.32
 .data          0x00000000c0027a75        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0027a75        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0027a75        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0027a75        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0027a78        0x0
 .got           0x00000000c0027a78        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0027a78        0x0
 .got.plt       0x00000000c0027a78        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0027a78        0x0
 .igot.plt      0x00000000c0027a78        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0027a78        0x0
 .tm_clone_table
                0x00000000c0027a78        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0027a78        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0027a75      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0027a75        0x3 
 .eh_frame      0x00000000c0027a78        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0027a78        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0027a78       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0027ad0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0027b10       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0027b7c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c0027c00        0x0
 .rel.got       0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0027c00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0027c00     0x23e8
                0x00000000c0027c00                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0027c00        0x0 crti.32
 .bss           0x00000000c0027c00       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0027c20        0x4 acpica/utclib.32
 *fill*         0x00000000c0027c24       0x1c 
 .bss           0x00000000c0027c40      0x378 core/malloc.32
 .bss           0x00000000c0027fb8        0x0 libk/string.32
 .bss           0x00000000c0027fb8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0027fb8        0x8 
 .bss           0x00000000c0027fc0       0x88 fs/fat/ff.32
 .bss           0x00000000c0028048        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028048        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0028048        0x0 compat/inlines.32
 .bss           0x00000000c0028048        0x0 compat/resolve.32
 .bss           0x00000000c0028048        0x6 core/computer.32
                0x00000000c0028048                Krnl::computer
                0x00000000c002804c                Krnl::preemptionOn
                0x00000000c002804d                Krnl::schedulingOn
 *fill*         0x00000000c002804e        0x2 
 .bss           0x00000000c0028050        0x6 core/gdt.32
                0x00000000c0028050                gdtDescr
 .bss           0x00000000c0028056        0x0 core/idle.32
 *fill*         0x00000000c0028056        0x2 
 .bss           0x00000000c0028058        0x6 core/idt.32
                0x00000000c0028058                idtDescr
 .bss           0x00000000c002805e        0x0 core/kheap.32
 *fill*         0x00000000c002805e        0x2 
 .bss           0x00000000c0028060        0x4 core/main.32
                0x00000000c0028060                sysBootSettings
 .bss           0x00000000c0028064       0x29 core/physmgr.32
                0x00000000c0028064                Phys::forbidEvictions
                0x00000000c0028068                Phys::currentPagePointer
                0x00000000c002806c                Phys::highestMem
                0x00000000c0028070                Phys::oldPercent
                0x00000000c0028074                Phys::usedPages
                0x00000000c0028078                Phys::usablePages
                0x00000000c002807c                Phys::dmaUsage
 .bss           0x00000000c002808d        0x0 core/pipe.32
 *fill*         0x00000000c002808d       0x13 
 .bss           0x00000000c00280a0       0x29 core/terminal.32
                0x00000000c00280a0                textModeImplementation
                0x00000000c00280c0                terminalCycle
                0x00000000c00280c4                activeTerminal
                0x00000000c00280c8                VgaText::graphicMode
 *fill*         0x00000000c00280c9        0x1 
 .bss           0x00000000c00280ca        0x2 core/tss.32
                0x00000000c00280ca                doubleFaultSelector
 *fill*         0x00000000c00280cc       0x14 
 .bss           0x00000000c00280e0       0x84 core/unixfile.32
                0x00000000c00280e0                sfileLpt
                0x00000000c0028120                sfileCom
                0x00000000c0028144                sfileNul
                0x00000000c0028148                sfilePnt
                0x00000000c002814c                sfileAux
                0x00000000c0028150                sfileCon
                0x00000000c0028154                initialFilesAdded
                0x00000000c0028158                unixFileLinkedList
 .bss           0x00000000c0028164       0x10 core/virtmgr.32
                0x00000000c0028164                twswaps
                0x00000000c0028168                swapBalance
                0x00000000c002816c                Virt::swapfileBitmap
                0x00000000c0028170                firstVAS
 .bss           0x00000000c0028174        0x0 coreobjs/c++.32
 .bss           0x00000000c0028174        0x0 dbg/kconsole.32
 .bss           0x00000000c0028174        0x4 fs/vfs.32
                0x00000000c0028174                installedFilesystems
 .bss           0x00000000c0028178        0x0 hal/bus.32
 .bss           0x00000000c0028178        0x4 hal/buzzer.32
                0x00000000c0028178                systemBuzzer
 .bss           0x00000000c002817c        0x8 hal/clock.32
                0x00000000c002817c                User::dstOn
                0x00000000c002817d                User::timezoneHalfHourOffset
                0x00000000c0028180                User::timezoneHourOffset
 .bss           0x00000000c0028184        0x0 hal/device.32
 .bss           0x00000000c0028184        0x0 hal/diskctrl.32
 .bss           0x00000000c0028184        0x0 hal/diskphys.32
 .bss           0x00000000c0028184        0x0 hal/fpu.32
 .bss           0x00000000c0028184        0x8 hal/intctrl.32
                0x00000000c0028184                gpFaultIntercept
                0x00000000c0028188                Krnl::fpuOwner
 *fill*         0x00000000c002818c       0x14 
 .bss           0x00000000c00281a0      0x429 hal/keybrd.32
                0x00000000c00281a0                keyboardWaitingTaskList
                0x00000000c00281a4                keyboardSetupYet
                0x00000000c00281a8                guiKeyboardHandler
                0x00000000c00281c0                keystates
 *fill*         0x00000000c00285c9       0x17 
 .bss           0x00000000c00285e0       0x88 hal/logidisk.32
                0x00000000c00285e0                diskAssignments
                0x00000000c0028600                disks
 .bss           0x00000000c0028668        0x4 hal/mouse.32
                0x00000000c0028668                guiMouseHandler
 .bss           0x00000000c002866c        0x0 hal/partition.32
 .bss           0x00000000c002866c        0x0 hal/serial.32
 .bss           0x00000000c002866c        0x4 hal/timer.32
                0x00000000c002866c                milliTenthsSinceBoot
 .bss           0x00000000c0028670        0x0 hal/vcache.32
 .bss           0x00000000c0028670        0x4 hal/video.32
                0x00000000c0028670                screen
 *fill*         0x00000000c0028674        0xc 
 .bss           0x00000000c0028680      0x480 hw/acpi.32
                0x00000000c0028680                systemSleepFunction
                0x00000000c0028684                systemResetFunction
                0x00000000c0028688                systemShutdownFunction
                0x00000000c002868c                nextACPITable
                0x00000000c00286a0                acpiTables
                0x00000000c00288a0                usingXSDT
                0x00000000c00288a4                MADTpointer
                0x00000000c00288a8                RSDTpointer
                0x00000000c00288ac                RSDPpointer
                0x00000000c00288b0                nextAPICNMI
                0x00000000c00288c0                apicNMIInfo
                0x00000000c0028940                legacyIRQFlags
                0x00000000c0028960                ioapicDiscoveryNumber
                0x00000000c0028980                ioapicFoundInMADT
                0x00000000c00289a0                ioapicAddresses
                0x00000000c0028a20                ioapicGSIBase
                0x00000000c0028aa0                processorDiscoveryNumber
                0x00000000c0028ac0                matchingAPICID
                0x00000000c0028ae0                processorID
 .bss           0x00000000c0028b00       0x10 hw/cpu.32
                0x00000000c0028b00                lastD
                0x00000000c0028b04                lastC
                0x00000000c0028b08                lastB
                0x00000000c0028b0c                lastA
 .bss           0x00000000c0028b10        0x0 hw/ports.32
 .bss           0x00000000c0028b10        0x1 hw/smp.32
                0x00000000c0028b10                Krnl::bspID
 *fill*         0x00000000c0028b11        0x3 
 .bss           0x00000000c0028b14        0x8 krnl/env.32
                0x00000000c0028b14                Krnl::userEnv
                0x00000000c0028b18                Krnl::systemEnv
 .bss           0x00000000c0028b1c        0x9 krnl/panic.32
                0x00000000c0028b1c                Krnl::guiProgramFaultHandler
                0x00000000c0028b20                Krnl::guiPanicHandler
                0x00000000c0028b24                Krnl::kernelInPanic
 *fill*         0x00000000c0028b25       0x1b 
 .bss           0x00000000c0028b40       0x48 krnl/powctrl.32
                0x00000000c0028b40                Krnl::powCtrlOnBattery
                0x00000000c0028b60                Krnl::currentPowerSettings
                0x00000000c0028b84                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0028b88        0x0 net/ethernet.32
 .bss           0x00000000c0028b88        0x0 reg/registry.32
 .bss           0x00000000c0028b88        0x0 sys/sc_eject.32
 .bss           0x00000000c0028b88        0x0 sys/sc_exit.32
 .bss           0x00000000c0028b88        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0028b88        0x0 sys/sc_getpid.32
 .bss           0x00000000c0028b88        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0028b88        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0028b88        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0028b88        0x0 sys/sc_read.32
 .bss           0x00000000c0028b88        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0028b88        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0028b88        0x0 sys/sc_settime.32
 .bss           0x00000000c0028b88        0x0 sys/sc_timezone.32
 .bss           0x00000000c0028b88        0x0 sys/sc_write.32
 .bss           0x00000000c0028b88        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0028b88        0x0 sys/sc_yield.32
 *fill*         0x00000000c0028b88       0x18 
 .bss           0x00000000c0028ba0      0x200 sys/syscalls.32
                0x00000000c0028ba0                systemCallHandlers
 .bss           0x00000000c0028da0      0x7a4 thr/elf.32
                0x00000000c0028da0                Thr::driverLookupNext
                0x00000000c0028dc0                Thr::driverLookupLen
                0x00000000c0028fc0                Thr::driverLookupAddr
                0x00000000c00291c0                Thr::driverNameLookup
                0x00000000c00293c0                Thr::kernelSymbols
                0x00000000c0029440                Thr::kernelStringTable
                0x00000000c00294c0                Thr::kernelSymbolTable
                0x00000000c0029540                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0029544        0x4 
 .bss           0x00000000c0029548       0x68 thr/prcssthr.32
                0x00000000c0029548                cleanerThread
                0x00000000c002954c                weNeedTheCleanerToNotBlock
                0x00000000c0029550                retValLockStuff
                0x00000000c0029554                retValSchedLock
                0x00000000c0029558                lockStuffLock
                0x00000000c002955c                schedulerLock
                0x00000000c0029560                taskSwitchesPostponedFlag
                0x00000000c0029564                postponeTaskSwitchesCounter
                0x00000000c0029568                irqDisableCounter
                0x00000000c002956c                terminatedTaskList
                0x00000000c0029578                sleepingTaskList
                0x00000000c0029584                taskList
                0x00000000c0029590                kernelProcess
 *fill*         0x00000000c00295b0       0x10 
 .bss           0x00000000c00295c0       0x40 vm86/vm8086.32
                0x00000000c00295c0                Vm::vmRetV
                0x00000000c00295c4                Vm::vmDone
                0x00000000c00295c5                Vm::vmReady
                0x00000000c00295c8                Vm::vm86Thread
                0x00000000c00295cc                Vm::vmToHostCommsPtr
                0x00000000c00295e0                Vm::vmToHostComms
 .bss           0x00000000c0029600       0x48 vm86/x87em.32
                0x00000000c0029600                Vm::fpuState
 *fill*         0x00000000c0029648       0x18 
 .bss           0x00000000c0029660       0xf0 fs/fat/vfslink.32
                0x00000000c0029660                FAT::fats
                0x00000000c0029680                FAT::vfsToFatRemaps
                0x00000000c0029700                fatToVFSRemaps
 *fill*         0x00000000c0029750       0x10 
 .bss           0x00000000c0029760      0x820 fs/iso9660/vfslink.32
                0x00000000c0029760                recentSector
                0x00000000c0029780                recentBuffer
 .bss           0x00000000c0029f80        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0029f80        0x0 hal/sound/sndport.32
 .bss           0x00000000c0029f80        0x0 hw/bus/isa.32
 .bss           0x00000000c0029f80        0xd hw/bus/pci.32
                0x00000000c0029f80                thePCI
 .bss           0x00000000c0029f8d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0029f8d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0029f8d        0x3 
 .bss           0x00000000c0029f90        0x8 hw/diskphys/ata.32
                0x00000000c0029f90                ataSectorsWritten
                0x00000000c0029f94                ataSectorsRead
 .bss           0x00000000c0029f98        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0029f98        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0029f98        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c0029f98        0x0 hw/fpu/avx.32
 .bss           0x00000000c0029f98        0x0 hw/fpu/mmx.32
 .bss           0x00000000c0029f98        0x0 hw/fpu/sse.32
 .bss           0x00000000c0029f98        0x0 hw/fpu/x87.32
 *fill*         0x00000000c0029f98        0x8 
 .bss           0x00000000c0029fa0       0x41 hw/intctrl/apic.32
                0x00000000c0029fa0                noOfIOAPICs
                0x00000000c0029fc0                ioapics
                0x00000000c0029fe0                IOAPICsSetupYet
 .bss           0x00000000c0029fe1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c0029fe1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0029fe1        0x3 
 .bss           0x00000000c0029fe4        0x4 hw/timer/pit.32
                0x00000000c0029fe4                pitFreq
 .bss           0x00000000c0029fe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0029fe8        0x0 crtn.32
 .bss           0x00000000c0029fe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0029fe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0029fe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0029fe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0029fe8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002c3d0                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
