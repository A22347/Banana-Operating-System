Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/cdefs.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/mailbox.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2062a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x6af core/computer.32
                0x00000000c0006e46                Computer::close(int, int, void*)
                0x00000000c0006e94                Krnl::firstTask()
                0x00000000c0006fba                Computer::Computer()
                0x00000000c0006fba                Computer::Computer()
                0x00000000c000706a                Computer::setBootMessage(char const*)
                0x00000000c000706c                Computer::detectFeatures()
                0x00000000c0007292                Computer::displayFeatures()
                0x00000000c0007294                Computer::rdmsr(unsigned int)
                0x00000000c00072c0                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00072fc                Computer::shutdown()
                0x00000000c0007314                Computer::restart()
                0x00000000c000732c                Computer::sleep()
                0x00000000c0007340                Computer::nmiEnabled()
                0x00000000c000734c                Computer::readCMOS(unsigned char)
                0x00000000c000736a                Computer::enableNMI(bool)
                0x00000000c0007382                Computer::open(int, int, void*)
                0x00000000c0007456                Computer::disableNMI()
                0x00000000c0007466                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000748a                Computer::handleNMI()
 *fill*         0x00000000c00074f5        0x1 
 .text          0x00000000c00074f6      0x1db core/gdt.32
                0x00000000c00074f6                GDTEntry::setBase(unsigned int)
                0x00000000c0007512                GDTEntry::setLimit(unsigned int)
                0x00000000c0007530                GDT::GDT()
                0x00000000c0007530                GDT::GDT()
                0x00000000c0007546                GDT::addEntry(GDTEntry)
                0x00000000c0007568                GDT::getNumberOfEntries()
                0x00000000c0007570                GDT::flush()
                0x00000000c0007592                GDT::setup()
 .text          0x00000000c00076d1       0x1d core/idle.32
                0x00000000c00076d1                idleFunction(void*)
 *fill*         0x00000000c00076ee        0x2 
 .text          0x00000000c00076f0      0x46c core/idt.32
                0x00000000c00076f0                IDTEntry::IDTEntry(bool)
                0x00000000c00076f0                IDTEntry::IDTEntry(bool)
                0x00000000c000776a                IDTEntry::setOffset(unsigned int)
                0x00000000c0007780                IDT::IDT()
                0x00000000c0007780                IDT::IDT()
                0x00000000c0007782                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000778a                IDT::addEntry(IDTEntry, int)
                0x00000000c00077a4                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00077dc                IDT::flush()
                0x00000000c00077f6                IDT::setup()
 .text          0x00000000c0007b5c      0x205 core/kheap.32
                0x00000000c0007b5c                sbrk
                0x00000000c0007bf3                sbrk_thunk
                0x00000000c0007c29                mmap
                0x00000000c0007c87                munmap
                0x00000000c0007c9c                liballoc_lock()
                0x00000000c0007caa                liballoc_unlock()
                0x00000000c0007cc0                liballoc_alloc(int)
                0x00000000c0007cd8                liballoc_free(void*, int)
                0x00000000c0007cf3                realloc
                0x00000000c0007d07                malloc
                0x00000000c0007d17                free
                0x00000000c0007d27                rfree
                0x00000000c0007d37                calloc
 .text          0x00000000c0007d61       0xc7 core/main.32
                0x00000000c0007d61                KeEntryPoint
 .text          0x00000000c0007e28      0x644 core/physmgr.32
                0x00000000c0007e28                Phys::allocateDMA(unsigned long)
                0x00000000c0007f10                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007f4b                Phys::setPageState(unsigned long, bool)
                0x00000000c0007f8b                Phys::getPageState(unsigned long)
                0x00000000c0007fa7                Phys::freePage(unsigned long)
                0x00000000c0008010                Phys::allocatePage()
                0x00000000c00080df                Phys::allocateContiguousPages(int)
                0x00000000c0008146                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000817e                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000846c      0x273 core/pipe.32
                0x00000000c000846c                Pipe::isAtty()
                0x00000000c0008470                Pipe::~Pipe()
                0x00000000c0008470                Pipe::~Pipe()
                0x00000000c0008494                Pipe::~Pipe()
                0x00000000c00084bc                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000857c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008678                Pipe::Pipe(int)
                0x00000000c0008678                Pipe::Pipe(int)
 *fill*         0x00000000c00086df        0x1 
 .text          0x00000000c00086e0      0xab3 core/terminal.32
                0x00000000c00086e0                VgaText::isAtty()
                0x00000000c00086e4                VgaText::~VgaText()
                0x00000000c00086e4                VgaText::~VgaText()
                0x00000000c0008708                VgaText::~VgaText()
                0x00000000c0008732                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008752                setTerminalScrollLock(bool)
                0x00000000c0008753                doTerminalCycle()
                0x00000000c0008754                addToTerminalCycle(VgaText*)
                0x00000000c0008755                scrollTerminalScrollLock(int)
                0x00000000c0008756                VgaText::updateTitle()
                0x00000000c0008758                VgaText::load()
                0x00000000c000875a                VgaText::updateCursor()
                0x00000000c0008770                VgaText::doANSI_SGR(int)
                0x00000000c00087e4                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00087f4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0008804                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0008824                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008830                VgaText::setTitleColour(VgaColour)
                0x00000000c000883c                VgaText::setTitle(char*)
                0x00000000c000883e                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008850                VgaText::scrollScreen()
                0x00000000c00088e2                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00088f2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008982                VgaText::getCursorX()
                0x00000000c000898a                VgaText::getCursorY()
                0x00000000c0008992                VgaText::setCursor(int, int)
                0x00000000c00089a9                setActiveTerminal(VgaText*)
                0x00000000c00089f4                VgaText::clearScreen()
                0x00000000c0008a42                VgaText::setCursorX(int)
                0x00000000c0008a5a                VgaText::setCursorY(int)
                0x00000000c0008a72                VgaText::incrementCursor(bool)
                0x00000000c0008ac6                VgaText::decrementCursor(bool)
                0x00000000c0008ae8                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008bb8                VgaText::putchar(char)
                0x00000000c0008cb0                VgaText::putx(unsigned int)
                0x00000000c0008cf6                VgaText::puts(char const*)
                0x00000000c0008d1c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008d68                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008eb6                VgaText::VgaText(char const*)
                0x00000000c0008eb6                VgaText::VgaText(char const*)
                0x00000000c0009006                VgaText::receiveKey(unsigned char)
                0x00000000c0009192                VgaText::doUpdate()
 *fill*         0x00000000c0009193        0x1 
 .text          0x00000000c0009194      0x1a1 core/tss.32
                0x00000000c0009194                TSS::TSS()
                0x00000000c0009194                TSS::TSS()
                0x00000000c00091a4                TSS::setESP(unsigned long)
                0x00000000c00091b8                TSS::flush()
                0x00000000c00091d8                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0009335        0x1 
 .text          0x00000000c0009336      0x4ca core/unixfile.32
                0x00000000c0009336                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000938c                ReservedFilename::isAtty()
                0x00000000c00093a8                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0009406                UnixFile::getFileDescriptor()
                0x00000000c000940e                UnixFile::UnixFile(int)
                0x00000000c000940e                UnixFile::UnixFile(int)
                0x00000000c00095c2                ReservedFilename::ReservedFilename(int)
                0x00000000c00095c2                ReservedFilename::ReservedFilename(int)
                0x00000000c00095f4                UnixFile::~UnixFile()
                0x00000000c00095f4                UnixFile::~UnixFile()
                0x00000000c0009690                UnixFile::~UnixFile()
                0x00000000c00096b8                ReservedFilename::~ReservedFilename()
                0x00000000c00096b8                ReservedFilename::~ReservedFilename()
                0x00000000c00096dc                ReservedFilename::~ReservedFilename()
                0x00000000c0009703                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009800     0x1210 core/virtmgr.32
                0x00000000c0009800                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000983a                Virt::getPageState(unsigned long)
                0x00000000c000985d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009982                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00099a5                Virt::swapIDToSector(unsigned long)
                0x00000000c00099bb                Virt::allocateSwapfilePage()
                0x00000000c0009a3b                Virt::virtualMemorySetup()
                0x00000000c0009a8c                Virt::setupPageSwapping(int)
                0x00000000c0009afe                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009b00                VAS::VAS(VAS*)
                0x00000000c0009b00                VAS::VAS(VAS*)
                0x00000000c0009b18                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009b46                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009b65                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009ca2                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009cc6                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009ce0                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009d22                VAS::VAS()
                0x00000000c0009d22                VAS::VAS()
                0x00000000c0009d8c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009dc0                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009dec                VAS::~VAS()
                0x00000000c0009dec                VAS::~VAS()
                0x00000000c0009f5a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000a05e                VAS::allocatePages(int, int)
                0x00000000c000a154                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a1ac                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a2a2                VAS::VAS(bool)
                0x00000000c000a2a2                VAS::VAS(bool)
                0x00000000c000a4ec                VAS::evict(unsigned long)
                0x00000000c000a5ca                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a772                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a7e6                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a812                VAS::scanForEviction()
                0x00000000c000a915                mapVASFirstTime
 .text          0x00000000c000aa10       0x5f coreobjs/c++.32
                0x00000000c000aa10                __cxa_atexit
                0x00000000c000aa13                __cxa_finalize
                0x00000000c000aa14                __stack_chk_fail
                0x00000000c000aa4a                __cxa_pure_virtual
                0x00000000c000aa5b                operator new[](unsigned long)
                0x00000000c000aa60                operator delete(void*, unsigned long)
                0x00000000c000aa65                operator delete[](void*)
                0x00000000c000aa6a                operator delete[](void*, unsigned long)
 .text          0x00000000c000aa6f      0x254 dbg/kconsole.32
                0x00000000c000aa6f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ab0f                Dbg::logc(char)
                0x00000000c000ab2f                Dbg::logs(char*)
                0x00000000c000ab4e                Dbg::logWriteInt(unsigned int)
                0x00000000c000ab6c                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000ab8d                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000acc3        0x1 
 .text          0x00000000c000acc4      0x2d4 dbg/usban.32
                0x00000000c000acc4                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000ad30                __ubsan_handle_type_mismatch_v1
                0x00000000c000ae0c                __ubsan_handle_pointer_overflow
                0x00000000c000ae38                __ubsan_handle_out_of_bounds
                0x00000000c000ae64                __ubsan_handle_add_overflow
                0x00000000c000ae90                __ubsan_handle_load_invalid_value
                0x00000000c000aebc                __ubsan_handle_divrem_overflow
                0x00000000c000aee8                __ubsan_handle_mul_overflow
                0x00000000c000af14                __ubsan_handle_sub_overflow
                0x00000000c000af40                __ubsan_handle_shift_out_of_bounds
                0x00000000c000af6c                __ubsan_handle_negate_overflow
 .text          0x00000000c000af98      0x814 fs/symlink.32
                0x00000000c000b0e7                KiDeinitialiseSymlinks(void*)
                0x00000000c000b17a                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000b1fd                KeInitialiseSymlinks()
                0x00000000c000b35f                KiIsSymlinkRegistered(char const*)
                0x00000000c000b4c9                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b670                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c000b7ac      0xd68 fs/vfs.32
                0x00000000c000b7ac                File::read(unsigned long long, void*, int*)
                0x00000000c000b804                File::write(unsigned long long, void*, int*)
                0x00000000c000b85c                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b8b4                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b8e2                File::isAtty()
                0x00000000c000b8e6                Directory::isAtty()
                0x00000000c000b8ea                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b8f0                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b8f6                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b8fc                File::~File()
                0x00000000c000b8fc                File::~File()
                0x00000000c000b920                File::~File()
                0x00000000c000b94a                Directory::~Directory()
                0x00000000c000b94a                Directory::~Directory()
                0x00000000c000b96e                Directory::~Directory()
                0x00000000c000b998                Filesystem::Filesystem()
                0x00000000c000b998                Filesystem::Filesystem()
                0x00000000c000b9bc                Filesystem::~Filesystem()
                0x00000000c000b9bc                Filesystem::~Filesystem()
                0x00000000c000b9ca                Filesystem::~Filesystem()
                0x00000000c000b9ee                Fs::getcwd(Process*, char*, int)
                0x00000000c000ba18                Fs::initVFS()
                0x00000000c000ba42                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000bc5c                File::File(char const*, Process*, bool)
                0x00000000c000bc5c                File::File(char const*, Process*, bool)
                0x00000000c000bd3a                File::File(char const*, Process*)
                0x00000000c000bd3a                File::File(char const*, Process*)
                0x00000000c000bd58                File::open(FileOpenMode)
                0x00000000c000bdb6                File::close()
                0x00000000c000be16                File::seek(unsigned long long)
                0x00000000c000be6c                File::truncate(unsigned long long)
                0x00000000c000bec2                File::tell(unsigned long long*)
                0x00000000c000bf12                File::rewind()
                0x00000000c000bf26                File::unlink()
                0x00000000c000bf72                File::rename(char const*)
                0x00000000c000bfc0                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000c01c                File::exists()
                0x00000000c000c05a                File::stat(unsigned long long*, bool*)
                0x00000000c000c0bb                Fs::setcwd(Process*, char*)
                0x00000000c000c21a                Directory::Directory(char const*, Process*)
                0x00000000c000c21a                Directory::Directory(char const*, Process*)
                0x00000000c000c2e2                Directory::open()
                0x00000000c000c33e                Directory::close()
                0x00000000c000c39e                Directory::unlink()
                0x00000000c000c3ea                Directory::rename(char const*)
                0x00000000c000c438                Directory::exists()
                0x00000000c000c476                Directory::read(dirent*)
                0x00000000c000c4c2                Directory::create()
                0x00000000c000c50e                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c514       0x86 hal/bus.32
                0x00000000c000c514                Bus::Bus(char const*)
                0x00000000c000c514                Bus::Bus(char const*)
                0x00000000c000c54c                Bus::~Bus()
                0x00000000c000c54c                Bus::~Bus()
                0x00000000c000c570                Bus::~Bus()
 .text          0x00000000c000c59a       0x96 hal/buzzer.32
                0x00000000c000c59a                beepThread(void*)
                0x00000000c000c5d7                Krnl::beep(int, int, bool)
 .text          0x00000000c000c630      0x513 hal/clock.32
                0x00000000c000c630                User::loadClockSettings()
                0x00000000c000c736                Clock::Clock(char const*)
                0x00000000c000c736                Clock::Clock(char const*)
                0x00000000c000c76c                Clock::~Clock()
                0x00000000c000c76c                Clock::~Clock()
                0x00000000c000c790                Clock::~Clock()
                0x00000000c000c7ba                Clock::timeInSecondsLocal()
                0x00000000c000c802                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c85b                datetimeToSeconds(datetime_t)
                0x00000000c000c97a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c9da                secondsToDatetime(unsigned long long)
                0x00000000c000cb1e                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000cb43        0x1 
 .text          0x00000000c000cb44      0x47a hal/device.32
                0x00000000c000cb44                Device::hibernate()
                0x00000000c000cb46                Device::wake()
                0x00000000c000cb48                Device::detect()
                0x00000000c000cb4a                Device::disableLegacy()
                0x00000000c000cb4c                Device::powerSaving(PowerSavingLevel)
                0x00000000c000cb4e                DriverlessDevice::close(int, int, void*)
                0x00000000c000cb52                DriverlessDevice::detect()
                0x00000000c000cb54                DriverlessDevice::open(int, int, void*)
                0x00000000c000cb68                Device::~Device()
                0x00000000c000cb68                Device::~Device()
                0x00000000c000cb76                Device::~Device()
                0x00000000c000cb9e                Device::findAndLoadDriver()
                0x00000000c000cbac                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000cbd2                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000cc12                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000cc3c                Device::getParent()
                0x00000000c000cc48                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000cc66                Device::addChild(Device*)
                0x00000000c000ccaa                Device::removeAllChildren()
                0x00000000c000ccf0                Device::hibernateAll()
                0x00000000c000cd20                Device::wakeAll()
                0x00000000c000cd50                Device::detectAll()
                0x00000000c000cd80                Device::disableLegacyAll()
                0x00000000c000cd82                Device::loadDriversForAll()
                0x00000000c000cd84                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cdba                Device::setName(char const*)
                0x00000000c000cdc8                Device::Device(char const*)
                0x00000000c000cdc8                Device::Device(char const*)
                0x00000000c000cec4                Device::getName()
                0x00000000c000cece                Device::closeAll()
                0x00000000c000cf1a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cf1a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cf50                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cf94                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000cfbe        0x2 
 .text          0x00000000c000cfc0       0x86 hal/diskctrl.32
                0x00000000c000cfc0                HardDiskController::HardDiskController(char const*)
                0x00000000c000cfc0                HardDiskController::HardDiskController(char const*)
                0x00000000c000cff8                HardDiskController::~HardDiskController()
                0x00000000c000cff8                HardDiskController::~HardDiskController()
                0x00000000c000d01c                HardDiskController::~HardDiskController()
 .text          0x00000000c000d046       0xe2 hal/diskphys.32
                0x00000000c000d046                PhysicalDisk::eject()
                0x00000000c000d04a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000d04a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000d0b2                PhysicalDisk::startCache()
                0x00000000c000d0da                PhysicalDisk::~PhysicalDisk()
                0x00000000c000d0da                PhysicalDisk::~PhysicalDisk()
                0x00000000c000d0fe                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000d128        0x0 hal/fpu.32
 .text          0x00000000c000d128      0x359 hal/intctrl.32
                0x00000000c000d128                int_handler
                0x00000000c000d1b2                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000d1fc                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d330                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d364                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d3e2                setupINTS()
                0x00000000c000d43f                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000d481        0x1 
 .text          0x00000000c000d482      0x8bc hal/keybrd.32
                0x00000000c000d482                startGUI(void*)
                0x00000000c000d4ec                startGUIVESA(void*)
                0x00000000c000d556                sendKeyToTerminal(unsigned char)
                0x00000000c000d631                sendKeyboardToken(KeyboardToken)
                0x00000000c000daed                clearInternalKeybuffer(VgaText*)
                0x00000000c000db22                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000dcb4                Keyboard::Keyboard(char const*)
                0x00000000c000dcb4                Keyboard::Keyboard(char const*)
                0x00000000c000dcf0                Keyboard::~Keyboard()
                0x00000000c000dcf0                Keyboard::~Keyboard()
                0x00000000c000dd14                Keyboard::~Keyboard()
 .text          0x00000000c000dd3e      0x3f8 hal/logidisk.32
                0x00000000c000dd3e                LogicalDisk::close(int, int, void*)
                0x00000000c000dd42                LogicalDisk::~LogicalDisk()
                0x00000000c000dd42                LogicalDisk::~LogicalDisk()
                0x00000000c000dd66                LogicalDisk::~LogicalDisk()
                0x00000000c000dd90                LogicalDisk::open(int, int, void*)
                0x00000000c000dda4                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000dddc                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000de22                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000de22                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dee2                LogicalDisk::assignDriveLetter()
                0x00000000c000df9c                LogicalDisk::mount()
                0x00000000c000dfe4                LogicalDisk::unmount()
                0x00000000c000dff4                LogicalDisk::eject()
                0x00000000c000e008                LogicalDisk::unassignDriveLetter()
                0x00000000c000e05e                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000e0ca                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000e136        0x2 
 .text          0x00000000c000e138       0x86 hal/mouse.32
                0x00000000c000e138                Mouse::Mouse(char const*)
                0x00000000c000e138                Mouse::Mouse(char const*)
                0x00000000c000e170                Mouse::~Mouse()
                0x00000000c000e170                Mouse::~Mouse()
                0x00000000c000e194                Mouse::~Mouse()
 .text          0x00000000c000e1be       0x90 hal/nic.32
                0x00000000c000e1be                NIC::getMAC()
                0x00000000c000e1c4                NIC::write(int, unsigned char*, int*)
                0x00000000c000e1ca                NIC::NIC(char const*)
                0x00000000c000e1ca                NIC::NIC(char const*)
                0x00000000c000e200                NIC::~NIC()
                0x00000000c000e200                NIC::~NIC()
                0x00000000c000e224                NIC::~NIC()
 .text          0x00000000c000e24e      0x33b hal/partition.32
                0x00000000c000e24e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e2f6                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e589        0x3 
 .text          0x00000000c000e58c       0x86 hal/serial.32
                0x00000000c000e58c                Serial::Serial(char const*)
                0x00000000c000e58c                Serial::Serial(char const*)
                0x00000000c000e5c4                Serial::~Serial()
                0x00000000c000e5c4                Serial::~Serial()
                0x00000000c000e5e8                Serial::~Serial()
 *fill*         0x00000000c000e612        0x2 
 .text          0x00000000c000e614      0x230 hal/timer.32
                0x00000000c000e614                Timer::Timer(char const*)
                0x00000000c000e614                Timer::Timer(char const*)
                0x00000000c000e64c                Timer::~Timer()
                0x00000000c000e64c                Timer::~Timer()
                0x00000000c000e670                Timer::~Timer()
                0x00000000c000e69a                Timer::read()
                0x00000000c000e6a5                setupTimer(int)
                0x00000000c000e6e0                timerHandler(unsigned int)
 .text          0x00000000c000e844      0x444 hal/vcache.32
                0x00000000c000e844                VCache::VCache(PhysicalDisk*)
                0x00000000c000e844                VCache::VCache(PhysicalDisk*)
                0x00000000c000e9b4                VCache::invalidateReadBuffer()
                0x00000000c000e9c4                VCache::writeWriteBuffer()
                0x00000000c000ea10                VCache::~VCache()
                0x00000000c000ea10                VCache::~VCache()
                0x00000000c000ea68                VCache::~VCache()
                0x00000000c000ea90                VCache::write(unsigned long long, int, void*)
                0x00000000c000eb84                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ec88      0x70e hal/video.32
                0x00000000c000ec88                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ecd4                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ed44                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000edc2                Video::clearScreen(unsigned int)
                0x00000000c000edf6                Video::putpixel(int, int, unsigned int)
                0x00000000c000ee04                Video::readPixelApprox(int, int)
                0x00000000c000ee18                Video::Video(char const*)
                0x00000000c000ee18                Video::Video(char const*)
                0x00000000c000ee4e                Video::~Video()
                0x00000000c000ee4e                Video::~Video()
                0x00000000c000ee72                Video::~Video()
                0x00000000c000ee9c                Video::isMonochrome()
                0x00000000c000eea8                Video::getWidth()
                0x00000000c000eeb4                Video::getHeight()
                0x00000000c000eec0                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ef7c                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000f326                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000f396        0x2 
 .text          0x00000000c000f398     0x1413 hw/acpi.32
                0x00000000c000f398                ACPI::close(int, int, void*)
                0x00000000c000f4d4                findRSDP()
                0x00000000c000f56c                loadACPITables(unsigned char*)
                0x00000000c000f7d8                findRSDT(unsigned char*)
                0x00000000c000f930                findDataTable(unsigned char*, char*)
                0x00000000c000f9b0                scanMADT()
                0x00000000c000fe68                ACPI::ACPI()
                0x00000000c000fe68                ACPI::ACPI()
                0x00000000c000febc                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ffb8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0010084                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c001008c                ACPI::detectPCI()
                0x00000000c00102ac                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c00102f4                ACPI::sleep()
                0x00000000c0010310                ACPI::open(int, int, void*)
 *fill*         0x00000000c00107ab        0x1 
 .text          0x00000000c00107ac      0xbc5 hw/cpu.32
                0x00000000c00107ac                CPU::close(int, int, void*)
                0x00000000c00107b0                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c00107cc                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c00107e4                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0010858                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00108dc                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c001090a                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0010938                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0010966                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0010994                CPU::CPU()
                0x00000000c0010994                CPU::CPU()
                0x00000000c0010a22                CPU::displayFeatures()
                0x00000000c0010a24                CPU::detectFeatures()
                0x00000000c00110f8                CPU::setupSMEP()
                0x00000000c0011104                CPU::setupUMIP()
                0x00000000c001110e                CPU::setupTSC()
                0x00000000c0011118                CPU::setupLargePages()
                0x00000000c0011122                CPU::setupPAT()
                0x00000000c001115e                CPU::setupMTRR()
                0x00000000c0011160                CPU::setupGlobalPages()
                0x00000000c001116a                CPU::allowUsermodeDataAccess()
                0x00000000c001117c                CPU::prohibitUsermodeDataAccess()
                0x00000000c001118e                CPU::setupSMAP()
                0x00000000c001119c                CPU::setupFeatures()
                0x00000000c0011268                CPU::open(int, int, void*)
 .text          0x00000000c0011371       0xb6 krnl/atexit.32
                0x00000000c0011371                KeInitialiseAtexit()
                0x00000000c0011390                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c00113c4                KeExecuteAtexit()
 .text          0x00000000c0011427       0x92 krnl/bootmsg.32
                0x00000000c0011427                KeDisplaySplashScreen()
                0x00000000c0011456                KeSetBootMessage(char const*)
 *fill*         0x00000000c00114b9        0x3 
 .text          0x00000000c00114bc       0x48 krnl/cdefs.32
                0x00000000c00114bc                CUnlockScheduler
                0x00000000c00114d8                CLockScheduler
                0x00000000c00114e8                CPrintf
 .text          0x00000000c0011504       0x1d krnl/compat.32
                0x00000000c0011504                Krnl::handlePowerButton()
                0x00000000c0011514                Krnl::handleSleepButton()
 .text          0x00000000c0011521       0x2b krnl/crc32.32
                0x00000000c0011521                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c001154c      0x5bf krnl/env.32
                0x00000000c001154c                EnvVarContainer::getEnv(char const*)
                0x00000000c001158a                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001164c                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001164e                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0011872                EnvVarContainer::__loadSystem()
                0x00000000c001188c                EnvVarContainer::__loadUser()
                0x00000000c001188e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001188e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00118b0                EnvVarContainer::~EnvVarContainer()
                0x00000000c00118b0                EnvVarContainer::~EnvVarContainer()
                0x00000000c00118e0                KeGetEnv(Process*, char const*)
                0x00000000c0011945                KeSetEnvSystem(char const*, char const*)
                0x00000000c001195f                KeSetEnvUser(char const*, char const*)
                0x00000000c001197e                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0011991                KeDeleteEnvSystem(char const*)
                0x00000000c0011992                KeDeleteEnvUser(char const*)
                0x00000000c0011993                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0011994                KeNewProcessEnv(Process*)
                0x00000000c00119b6                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0011a02                KeLoadSystemEnv()
                0x00000000c0011a30                KeLoadUserEnv()
                0x00000000c0011a56                KeFlushEnv()
                0x00000000c0011a57                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0011a77                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011b0b       0x94 krnl/inlines.32
                0x00000000c0011b0b                CPU::current()
                0x00000000c0011b17                operator new(unsigned long)
                0x00000000c0011b1c                operator delete(void*)
                0x00000000c0011b21                disableIRQs()
                0x00000000c0011b23                enableIRQs()
                0x00000000c0011b25                lockScheduler()
                0x00000000c0011b2d                unlockScheduler()
                0x00000000c0011b3c                lockStuff()
                0x00000000c0011b4a                unlockStuff()
                0x00000000c0011b84                Virt::getAKernelVAS()
                0x00000000c0011b8a                __not_memcpy
 *fill*         0x00000000c0011b9f        0x1 
 .text          0x00000000c0011ba0      0x1e3 krnl/mailbox.32
                0x00000000c0011ba0                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c0011c04                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c0011c68                KeMailboxCreate()
                0x00000000c0011c9c                KeMailboxPost(Mailbox*, void*)
                0x00000000c0011d04                KeMailboxGet(Mailbox*, void**)
                0x00000000c0011d6c                KeMailboxDestroy(Mailbox*)
 *fill*         0x00000000c0011d83        0x1 
 .text          0x00000000c0011d84       0x1a krnl/mutex.32
                0x00000000c0011d84                Mutex::Mutex()
                0x00000000c0011d84                Mutex::Mutex()
 .text          0x00000000c0011d9e        0xc krnl/panic.32
                0x00000000c0011d9e                KePanic(char const*)
 .text          0x00000000c0011daa      0x142 krnl/powctrl.32
                0x00000000c0011daa                KePowerThread(void*)
                0x00000000c0011dd8                KeChangePowerSettings(PowerSettings)
                0x00000000c0011dee                KeUserIOReceived()
                0x00000000c0011df9                KeHandlePowerButton()
                0x00000000c0011e2e                KeHandleSleepButton()
                0x00000000c0011e63                KeSetupPowerManager()
 .text          0x00000000c0011eec       0x9d krnl/random.32
                0x00000000c0011eec                KeRand()
                0x00000000c0011f2e                KeSeedRand(unsigned int)
                0x00000000c0011f57                KeInitRand()
 *fill*         0x00000000c0011f89        0x3 
 .text          0x00000000c0011f8c      0x1bc krnl/resolve.32
                0x00000000c0011f8c                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0012148      0x415 krnl/semaphore.32
                0x00000000c0012148                Semaphore::Semaphore(int)
                0x00000000c0012148                Semaphore::Semaphore(int)
                0x00000000c0012178                Semaphore::tryAcquire()
                0x00000000c0012254                Semaphore::assertLocked(char const*)
                0x00000000c00122e4                Semaphore::acquire(int)
                0x00000000c001248c                Semaphore::acquire()
                0x00000000c00124a8                Semaphore::release()
 .text          0x00000000c001255d      0x322 krnl/signal.32
                0x00000000c001255d                KiSigKill(int)
                0x00000000c0012571                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0012572                KiDefaultSignalHandlerPause(int)
                0x00000000c001259e                KiDefaultSignalHandlerResume(int)
                0x00000000c00125ca                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00125cf                KeInitSignals()
                0x00000000c0012621                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0012657                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00126d4                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c00127cb                KiCheckSignalZ
                0x00000000c001280d                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0012848                KiFinishSignalZ
 .text          0x00000000c001287f      0xe1d krnl/syscalls.32
                0x00000000c001287f                SysSeekDir(regs*)
                0x00000000c0012884                SysTellDir(regs*)
                0x00000000c0012889                SysVerify(regs*)
                0x00000000c0012893                SysGetArgc(regs*)
                0x00000000c00128a7                SysTTYName(regs*)
                0x00000000c00128af                SysFormatDisk(regs*)
                0x00000000c0012926                SysSetDiskVolumeLabel(regs*)
                0x00000000c001297a                SysGetDiskVolumeLabel(regs*)
                0x00000000c00129d3                SysShutdown(regs*)
                0x00000000c0012a31                SysRealpath(regs*)
                0x00000000c0012a75                SysReadDir(regs*)
                0x00000000c0012af5                SysIsATTY(regs*)
                0x00000000c0012b4f                SysSeek(regs*)
                0x00000000c0012ba6                SysTell(regs*)
                0x00000000c0012c13                SysSize(regs*)
                0x00000000c0012c86                SysSizeFromFilename(regs*)
                0x00000000c0012db7                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0012ee8                SysClose(regs*)
                0x00000000c0012f48                SysOpenDir(regs*)
                0x00000000c0012fc5                SysMakeDir(regs*)
                0x00000000c0013033                SysCloseDir(regs*)
                0x00000000c0013087                SysWait(regs*)
                0x00000000c00130a8                SysNotImpl(regs*)
                0x00000000c00130c3                SysPanic(regs*)
                0x00000000c00130de                SysRmdir(regs*)
                0x00000000c0013143                SysUnlink(regs*)
                0x00000000c00131a8                SysGetArgv(regs*)
                0x00000000c00131f5                SysUSleep(regs*)
                0x00000000c001321e                SysSpawn(regs*)
                0x00000000c0013291                SysGetEnv(regs*)
                0x00000000c0013342                SysSetFatAttrib(regs*)
                0x00000000c00133b5                SysPipe(regs*)
                0x00000000c00133fa                SysGetUnixTime(regs*)
                0x00000000c001340e                string_ends_with(char const*, char const*)
                0x00000000c0013456                SysOpen(regs*)
                0x00000000c001364d                KeSystemCall(regs*, void*)
 .text          0x00000000c001369c      0xd56 reg/cm.32
                0x00000000c001369c                CmOpen(char const*)
                0x00000000c00137ba                CmClose(Reghive_Tag*)
                0x00000000c00137d0                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c001380c                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0013883                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c00138c2                CmGetNext(Reghive_Tag*, int)
                0x00000000c00138f4                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0013930                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0013958                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0013979                CmExpand(Reghive_Tag*, int)
                0x00000000c00139f4                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0013a7a                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0013b6e                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0013caa                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0013d0b                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0013d3b                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0013d72                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0013d9c                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013ddc                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013e80                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0013eae                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c001404c                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0014099                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0014113                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c0014166                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001422a                zStrtok(char*, char const*)
                0x00000000c001429c                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c001431d                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00143c0                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00143f2      0x52a reg/registry.32
                0x00000000c00143f2                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0014563                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00146b8                Reg::getLine(char*, char*, char*)
                0x00000000c00146ef                Reg::readInt(char*, char*, int*)
                0x00000000c00147dd                Reg::readString(char*, char*, char*, int)
                0x00000000c001485e                Reg::readBool(char*, char*, bool*)
                0x00000000c0014883                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00148af                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00148db                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001491c       0x36 sys/eject.32
                0x00000000c001491c                SysEject(regs*)
 .text          0x00000000c0014952       0x18 sys/exit.32
                0x00000000c0014952                SysExit(regs*)
 .text          0x00000000c001496a       0x1f sys/getcwd.32
                0x00000000c001496a                SysGetCwd(regs*)
 .text          0x00000000c0014989        0xc sys/getpid.32
                0x00000000c0014989                SysGetPID(regs*)
 .text          0x00000000c0014995       0x1a sys/getramdata.32
                0x00000000c0014995                SysGetRAMData(regs*)
 .text          0x00000000c00149af       0x82 sys/getvgaptr.32
                0x00000000c00149af                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014a31        0x3 
 .text          0x00000000c0014a34       0xb9 sys/kill.32
                0x00000000c0014a34                SysKill(regs*)
 .text          0x00000000c0014aed       0xa8 sys/loaddll.32
                0x00000000c0014aed                SysLoadDLL(regs*)
 .text          0x00000000c0014b95       0x68 sys/read.32
                0x00000000c0014b95                SysRead(regs*)
 .text          0x00000000c0014bfd       0x29 sys/registersignal.32
                0x00000000c0014bfd                SysRegisterSignal(regs*)
 .text          0x00000000c0014c26      0x1cc sys/registry.32
                0x00000000c0014c26                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014c6a                SysRegistryReadExtent(regs*)
                0x00000000c0014cb2                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014cc9                SysRegistryEnterDirectory(regs*)
                0x00000000c0014ce0                SysRegistryGetNext(regs*)
                0x00000000c0014cf7                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014d31                SysRegistryOpen(regs*)
                0x00000000c0014d45                SysRegistryClose(regs*)
                0x00000000c0014d5c                SysRegistryEasyReadString(regs*)
                0x00000000c0014da8                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014df2       0x55 sys/sbrk.32
                0x00000000c0014df2                SysSbrk(regs*)
 .text          0x00000000c0014e47       0x1c sys/setcwd.32
                0x00000000c0014e47                SysSetCwd(regs*)
 .text          0x00000000c0014e63       0x96 sys/settime.32
                0x00000000c0014e63                SysSetTime(regs*)
 .text          0x00000000c0014ef9       0x73 sys/symlink.32
                0x00000000c0014ef9                SysSymlink(regs*)
 .text          0x00000000c0014f6c       0x3f sys/timezone.32
                0x00000000c0014f6c                SysTimezone(regs*)
 .text          0x00000000c0014fab       0xfc sys/truncate.32
                0x00000000c0014fab                SysTruncate(regs*)
 .text          0x00000000c00150a7       0x68 sys/write.32
                0x00000000c00150a7                SysWrite(regs*)
 .text          0x00000000c001510f       0x9d sys/wsbe.32
                0x00000000c001510f                SysWsbe(regs*)
 .text          0x00000000c00151ac       0x25 sys/yield.32
                0x00000000c00151ac                SysYield(regs*)
 .text          0x00000000c00151d1     0x1207 thr/elf.32
                0x00000000c00151d1                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001545f                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0015671                Thr::runtimeReferenceHelper()
                0x00000000c0015684                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00156d3                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015991                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00160ca                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00160fc                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0016133                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001614d                Thr::loadDLL(char const*, bool)
                0x00000000c001639f                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00163d8       0x5a thr/exec.32
                0x00000000c00163d8                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0016432        0x2 
 .text          0x00000000c0016434     0x1131 thr/prcssthr.32
                0x00000000c0016434                userModeEntryPoint(void*)
                0x00000000c001645c                changeTSS
                0x00000000c001648c                switchToThread(ThreadControlBlock*)
                0x00000000c001653c                Process::addArgs(char**)
                0x00000000c00165a8                Process::Process(char const*, Process*, char**)
                0x00000000c00165a8                Process::Process(char const*, Process*, char**)
                0x00000000c00167b4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00167b4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016988                taskStartupFunction
                0x00000000c0016994                KeDisablePreemption()
                0x00000000c00169bc                KeRestorePreemption()
                0x00000000c00169dc                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016ae8                Process::createUserThread()
                0x00000000c0016b08                setupMultitasking(void (*)())
                0x00000000c0016c2c                schedule()
                0x00000000c0016cc0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016ce8                blockTask(TaskState)
                0x00000000c0016d20                waitTask(int, int*, int)
                0x00000000c0016d64                milliTenthSleepUntil(unsigned int)
                0x00000000c0016e04                milliTenthSleep(unsigned int)
                0x00000000c0016e18                sleep(unsigned int)
                0x00000000c0016e34                taskReturned
                0x00000000c0016e78                Thr::processFromPID(int)
                0x00000000c0016f24                unblockTask(ThreadControlBlock*)
                0x00000000c0016fd0                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00172a4                cleanerTaskFunction(void*)
                0x00000000c00173ac                terminateTask(int)
                0x00000000c0017498                Thr::terminateFromIRQ(int)
 .text          0x00000000c0017565      0xd00 vm86/vm8086.32
                0x00000000c0017565                Vm::inbv(unsigned short)
                0x00000000c0017578                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00175ae                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00175be                Vm::getSegment(unsigned int)
                0x00000000c00175c6                Vm::getOffset(unsigned int)
                0x00000000c00175cb                Vm::mainloop2()
                0x00000000c0017605                Vm::mainVm8086Loop(void*)
                0x00000000c0017615                Vm::mainloop3(unsigned long)
                0x00000000c001763b                Vm::initialise8086()
                0x00000000c001767e                Vm::resetConventionalMemory8086()
                0x00000000c001767f                Vm::finish8086()
                0x00000000c00176e0                Vm::getOutput8086(unsigned char*)
                0x00000000c0017705                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001782c                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017a34                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017acd                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017ade                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017af0                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017b01                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017b16                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017b2c                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017b41                Vm::faultHandler(regs*)
 .text          0x00000000c0018265      0xacb arch/i386/hal.32
                0x00000000c0018265                noCopro(unsigned long)
                0x00000000c0018266                nmiHandler(regs*, void*)
                0x00000000c001827f                doubleFault(regs*, void*)
                0x00000000c0018298                displayDebugInfo(regs*)
                0x00000000c001861d                HalSystemIdle()
                0x00000000c0018699                displayProgramFault(char const*)
                0x00000000c00186e5                gpFault(regs*, void*)
                0x00000000c001874c                pgFault(regs*, void*)
                0x00000000c00187d5                otherISRHandler(regs*, void*)
                0x00000000c0018809                opcodeFault(regs*, void*)
                0x00000000c001888c                i386SaveCoprocessor(void*)
                0x00000000c00188a0                i386LoadCoprocessor(void*)
                0x00000000c00188b4                x87EmulHandler(regs*, void*)
                0x00000000c0018951                HalInitialiseCoprocessor()
                0x00000000c00189da                HalPanic(char const*)
                0x00000000c0018aee                HalQueryPerformanceCounter()
                0x00000000c0018b09                HalInitialise()
                0x00000000c0018cbf                HalMakeBeep(int)
                0x00000000c0018cf9                HalGetRand()
                0x00000000c0018cfc                HalEndOfInterrupt(int)
                0x00000000c0018d2d                HalRestart()
                0x00000000c0018d2e                HalShutdown()
                0x00000000c0018d2f                HalSleep()
 .text          0x00000000c0018d30      0x2dc arch/i386/pic.32
                0x00000000c0018d30                picIoWait()
                0x00000000c0018d38                picDisable()
                0x00000000c0018d6c                picGetIRQReg(int)
                0x00000000c0018de8                picOpen()
                0x00000000c0018f6c                picEOI(int)
 .text          0x00000000c001900c      0x674 arch/i386/rtc.32
                0x00000000c001900c                RTC::open(int, int, void*)
                0x00000000c0019010                RTC::close(int, int, void*)
                0x00000000c0019014                RTC::timeInSecondsUTC()
                0x00000000c0019026                RTC::timeInDatetimeUTC()
                0x00000000c001904c                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001908a                RTC::~RTC()
                0x00000000c001908a                RTC::~RTC()
                0x00000000c00190ae                RTC::~RTC()
                0x00000000c00190d8                RTC::get_update_in_progress_flag()
                0x00000000c00190f2                RTC::completeRTCRefresh()
                0x00000000c00193d2                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0019580                rtcIRQHandler(regs*, void*)
                0x00000000c00195c6                RTC::RTC()
                0x00000000c00195c6                RTC::RTC()
 .text          0x00000000c0019680      0x1f4 arch/i386/vga.32
                0x00000000c0019680                HalConsoleScroll(int, int)
                0x00000000c0019788                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00197ec                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0019874     0x14cf fs/fat/vfslink.32
                0x00000000c0019874                FAT::getName()
                0x00000000c001987c                FAT::tell(void*, unsigned long long*)
                0x00000000c00198b8                FAT::stat(void*, unsigned long long*)
                0x00000000c00198f4                FAT::~FAT()
                0x00000000c00198f4                FAT::~FAT()
                0x00000000c0019918                FAT::~FAT()
                0x00000000c0019940                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00199e4                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019aa8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019c8c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019ea8                FAT::allocateSwapfile(char const*, int)
                0x00000000c001a068                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a1d8                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001a238                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001a298                FAT::close(void*)
                0x00000000c001a2ec                FAT::closeDir(void*)
                0x00000000c001a340                FAT::truncate(void*, unsigned long long)
                0x00000000c001a3ac                FAT::seek(void*, unsigned long long)
                0x00000000c001a404                fatWrapperReadDisk
                0x00000000c001a444                fatWrapperWriteDisk
                0x00000000c001a484                fatWrapperIoctl
                0x00000000c001a5a0                FAT::FAT()
                0x00000000c001a5a0                FAT::FAT()
                0x00000000c001a5f8                FAT::fixFilepath(char*)
                0x00000000c001a638                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001a7ac                FAT::openDir(char const*, void**)
                0x00000000c001a85c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a954                FAT::unlink(char const*)
                0x00000000c001a9d4                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ab88                FAT::rename(char const*, char const*)
                0x00000000c001ac54                FAT::mkdir(char const*)
                0x00000000c001acd4                FAT::exists(char const*)
 *fill*         0x00000000c001ad43        0x1 
 .text          0x00000000c001ad44       0x94 fs/iso9660/helper.32
                0x00000000c001ad44                isoReadDiscSectorHelper
                0x00000000c001ada0                iso_kprintf
                0x00000000c001adbc                iso_kprintfd
 .text          0x00000000c001add8      0x71c fs/iso9660/vfslink.32
                0x00000000c001add8                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001adde                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001ade4                ISO9660::getName()
                0x00000000c001adea                ISO9660::closeDir(void*)
                0x00000000c001adf4                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001adfa                ISO9660::unlink(char const*)
                0x00000000c001ae00                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001ae06                ISO9660::rename(char const*, char const*)
                0x00000000c001ae0c                ISO9660::mkdir(char const*)
                0x00000000c001ae12                ISO9660::~ISO9660()
                0x00000000c001ae12                ISO9660::~ISO9660()
                0x00000000c001ae36                ISO9660::~ISO9660()
                0x00000000c001ae5e                ISO9660::exists(char const*)
                0x00000000c001ae72                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001af58                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001afa0                ISO9660::seek(void*, unsigned long long)
                0x00000000c001afe2                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001b020                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001b072                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b1b4                ISO9660::close(void*)
                0x00000000c001b1e4                ISO9660::openDir(char const*, void**)
                0x00000000c001b2be                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b3db                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b45a                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b4cc                ISO9660::ISO9660()
                0x00000000c001b4cc                ISO9660::ISO9660()
 .text          0x00000000c001b4f4      0x26c hal/sound/sndcard.32
                0x00000000c001b4f4                SoundCard::beginPlayback()
                0x00000000c001b502                SoundCard::stopPlayback()
                0x00000000c001b510                SoundCard::SoundCard(char const*)
                0x00000000c001b510                SoundCard::SoundCard(char const*)
                0x00000000c001b5ae                SoundCard::~SoundCard()
                0x00000000c001b5ae                SoundCard::~SoundCard()
                0x00000000c001b5d2                SoundCard::~SoundCard()
                0x00000000c001b5fc                SoundCard::configureRates(int, int, int)
                0x00000000c001b62c                SoundCard::getSamples16(int, short*)
                0x00000000c001b688                SoundCard::getSamples32(int, int*)
                0x00000000c001b70e                SoundCard::addChannel(SoundPort*)
                0x00000000c001b74c                SoundCard::removeChannel(int)
 .text          0x00000000c001b760      0x38a hal/sound/sndport.32
                0x00000000c001b760                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b760                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b7ec                SoundPort::~SoundPort()
                0x00000000c001b7ec                SoundPort::~SoundPort()
                0x00000000c001b820                SoundPort::unpause()
                0x00000000c001b82c                SoundPort::pause()
                0x00000000c001b838                SoundPort::getBufferUsed()
                0x00000000c001b840                SoundPort::getBufferSize()
                0x00000000c001b848                SoundPort::buffer16(short*, int)
                0x00000000c001b8d4                SoundPort::buffer32(int*, int)
                0x00000000c001b960                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001ba2c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001baea        0x0 hw/bus/isa.32
 .text          0x00000000c001baea      0xc23 hw/bus/pci.32
                0x00000000c001baea                PCI::open(int, int, void*)
                0x00000000c001bb08                PCI::close(int, int, void*)
                0x00000000c001bb0c                PCI::PCI()
                0x00000000c001bb0c                PCI::PCI()
                0x00000000c001bba4                PCI::readBAR8(unsigned int, int)
                0x00000000c001bbc0                PCI::readBAR16(unsigned int, int)
                0x00000000c001bbde                PCI::readBAR32(unsigned int, int)
                0x00000000c001bbfa                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001bc1a                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001bc3c                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001bc5c                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bcd2                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bd7c                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001bda0                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001bdc8                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001be12                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001be3a                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001be5e                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001be82                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001beaa                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bf0e                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001bff6                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001c2bc                PCI::checkBus(unsigned char)
                0x00000000c001c2e0                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001c4c6                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001c642                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001c6b4                PCI::detect()
 *fill*         0x00000000c001c70d        0x1 
 .text          0x00000000c001c70e      0xe16 hw/diskctrl/ide.32
                0x00000000c001c70e                IDE::close(int, int, void*)
                0x00000000c001c712                IDE::IDE()
                0x00000000c001c712                IDE::IDE()
                0x00000000c001c746                IDE::prepareInterrupt(unsigned char)
                0x00000000c001c758                selectDrive(unsigned char, unsigned char)
                0x00000000c001c75a                IDE::getBase(unsigned char)
                0x00000000c001c76c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001c82c                IDE::read(unsigned char, unsigned char)
                0x00000000c001c8da                IDE::waitInterrupt(unsigned char)
                0x00000000c001c93c                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c958                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c974                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c9be                IDE::open(int, int, void*)
                0x00000000c001cf04                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001cfd4                IDE::detect()
                0x00000000c001d416                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001d4d0                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001d524      0x33d hw/diskctrl/satabus.32
                0x00000000c001d524                SATABus::close(int, int, void*)
                0x00000000c001d528                SATABus::detect()
                0x00000000c001d52a                SATABus::SATABus()
                0x00000000c001d52a                SATABus::SATABus()
                0x00000000c001d5b0                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d5e2                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d62a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d64a                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d674                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001d784                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001d82e                SATABus::open(int, int, void*)
 *fill*         0x00000000c001d861        0x1 
 .text          0x00000000c001d862      0x987 hw/diskphys/ata.32
                0x00000000c001d862                ATA::close(int, int, void*)
                0x00000000c001d886                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001d888                ATA::ATA()
                0x00000000c001d888                ATA::ATA()
                0x00000000c001d8b6                ATA::flush(bool)
                0x00000000c001d904                ATA::readyForCommand()
                0x00000000c001d950                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001dd2e                ATA::detectCHS()
                0x00000000c001dd58                ATA::open(int, int, void*)
                0x00000000c001de24                combineCharAndColour(char, unsigned char)
                0x00000000c001de35                combineColours(unsigned char, unsigned char)
                0x00000000c001de42                ATA::read(unsigned long long, int, void*)
                0x00000000c001e018                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e1e9        0x1 
 .text          0x00000000c001e1ea      0x618 hw/diskphys/atapi.32
                0x00000000c001e1ea                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001e1f0                ATAPI::close(int, int, void*)
                0x00000000c001e214                ATAPI::ATAPI()
                0x00000000c001e214                ATAPI::ATAPI()
                0x00000000c001e242                ATAPI::readyForCommand()
                0x00000000c001e294                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001e55c                ATAPI::diskRemoved()
                0x00000000c001e596                ATAPI::eject()
                0x00000000c001e5de                ATAPI::diskInserted()
                0x00000000c001e5ea                ATAPI::detectMedia()
                0x00000000c001e6a8                ATAPI::open(int, int, void*)
                0x00000000c001e788                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e802      0x849 hw/diskphys/sata.32
                0x00000000c001e802                SATA::close(int, int, void*)
                0x00000000c001e826                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001e828                SATA::open(int, int, void*)
                0x00000000c001e8e0                SATA::SATA()
                0x00000000c001e8e0                SATA::SATA()
                0x00000000c001e90e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001eb96                SATA::read(unsigned long long, int, void*)
                0x00000000c001ede6                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001f04b        0x1 
 .text          0x00000000c001f04c      0x5d0 hw/diskphys/satapi.32
                0x00000000c001f04c                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001f052                SATAPI::close(int, int, void*)
                0x00000000c001f076                SATAPI::SATAPI()
                0x00000000c001f076                SATAPI::SATAPI()
                0x00000000c001f0a4                SATAPI::diskRemoved()
                0x00000000c001f0a6                SATAPI::diskInserted()
                0x00000000c001f0c2                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001f3a0                SATAPI::eject()
                0x00000000c001f3dc                SATAPI::detectMedia()
                0x00000000c001f432                SATAPI::open(int, int, void*)
                0x00000000c001f532                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001f61c      0x45b hw/intctrl/apic.32
                0x00000000c001f61c                IOAPIC::close(int, int, void*)
                0x00000000c001f622                apicGetBase()
                0x00000000c001f668                IOAPIC::IOAPIC()
                0x00000000c001f668                IOAPIC::IOAPIC()
                0x00000000c001f690                apicOpen()
                0x00000000c001f80c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001f83e                IOAPIC::read(int)
                0x00000000c001f866                IOAPIC::open(int, int, void*)
                0x00000000c001f94c                IOAPIC::write(int, int)
                0x00000000c001f978                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001fa77        0x1 
 .text          0x00000000c001fa78       0xf0 hw/timer/apictimer.32
                0x00000000c001fa78                APICTimer::close(int, int, void*)
                0x00000000c001fa80                apicTimerHandler(regs*, void*)
                0x00000000c001faa8                APICTimer::open(int, int, void*)
                0x00000000c001fb18                APICTimer::write(int)
                0x00000000c001fb40                APICTimer::APICTimer()
                0x00000000c001fb40                APICTimer::APICTimer()
 .text          0x00000000c001fb68      0x1ad hw/timer/pit.32
                0x00000000c001fb68                PIT::write(int)
                0x00000000c001fbec                pitHandler(regs*, void*)
                0x00000000c001fc14                PIT::open(int, int, void*)
                0x00000000c001fc64                PIT::close(int, int, void*)
                0x00000000c001fc94                PIT::PIT()
                0x00000000c001fc94                PIT::PIT()
 *fill*         0x00000000c001fd15        0xb 
 .text          0x00000000c001fd20       0x6f arch/i386/avx.32
                0x00000000c001fd20                avxDetect
                0x00000000c001fd4a                avxSave
                0x00000000c001fd5b                avxLoad
                0x00000000c001fd6c                avxInit
                0x00000000c001fd8e                avxClose
 *fill*         0x00000000c001fd8f        0x1 
 .text          0x00000000c001fd90      0x2ec arch/i386/interrupt.32
                0x00000000c001fd90                isr0
                0x00000000c001fda0                isr1
                0x00000000c001fdaa                isr2
                0x00000000c001fdb4                isr3
                0x00000000c001fdbe                isr4
                0x00000000c001fdc8                isr5
                0x00000000c001fdd2                isr6
                0x00000000c001fddc                isr7
                0x00000000c001fde6                isr8
                0x00000000c001fdee                isr9
                0x00000000c001fdf8                isr10
                0x00000000c001fe00                isr11
                0x00000000c001fe08                isr12
                0x00000000c001fe10                isr13
                0x00000000c001fe2a                isr14
                0x00000000c001fe32                isr15
                0x00000000c001fe3c                isr16
                0x00000000c001fe46                isr17
                0x00000000c001fe50                isr18
                0x00000000c001fe5a                irq3
                0x00000000c001fe64                irq4
                0x00000000c001fe6e                irq5
                0x00000000c001fe78                irq6
                0x00000000c001fe82                irq7
                0x00000000c001fe8c                irq8
                0x00000000c001fe96                irq9
                0x00000000c001fea0                irq10
                0x00000000c001feaa                irq11
                0x00000000c001feb4                irq12
                0x00000000c001febe                irq13
                0x00000000c001fec8                irq14
                0x00000000c001fed2                irq15
                0x00000000c001fedc                irq1
                0x00000000c001fee3                irq2
                0x00000000c001feea                isr96
                0x00000000c001fef1                irq0
                0x00000000c001fef6                int_common_stub
                0x00000000c001ff28                syscall_common_stub
                0x00000000c002002c                irq16
                0x00000000c0020036                irq17
                0x00000000c0020040                irq18
                0x00000000c002004a                irq19
                0x00000000c0020054                irq20
                0x00000000c002005e                irq21
                0x00000000c0020068                irq22
                0x00000000c0020072                irq23
 *fill*         0x00000000c002007c        0x4 
 .text          0x00000000c0020080       0x10 arch/i386/rdrand.32
                0x00000000c0020080                i386GetRDRAND
 .text          0x00000000c0020090       0x39 arch/i386/sse.32
                0x00000000c0020090                sseDetect
                0x00000000c00200a8                sseSave
                0x00000000c00200b0                sseLoad
                0x00000000c00200b8                sseInit
                0x00000000c00200c8                sseClose
 *fill*         0x00000000c00200c9        0x7 
 .text          0x00000000c00200d0       0x49 arch/i386/x87.32
                0x00000000c00200d6                x87Detect
                0x00000000c00200f1                x87Save
                0x00000000c00200f8                x87Load
                0x00000000c00200ff                x87Init
                0x00000000c0020118                x87Close
 *fill*         0x00000000c0020119        0x3 
 .text          0x00000000c002011c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0020141        0x0 crtn.32
 *fill*         0x00000000c0020141        0x3 
 .text          0x00000000c0020144      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0020144                __divdi3
 *fill*         0x00000000c002028f        0x1 
 .text          0x00000000c0020290      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0020290                __moddi3
 *fill*         0x00000000c002040e        0x2 
 .text          0x00000000c0020410       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0020410                __udivdi3
 *fill*         0x00000000c002050f        0x1 
 .text          0x00000000c0020510      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0020510                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0020630        0x0
 .iplt          0x00000000c0020630        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002062a        0xf
 .init          0x00000000c002062a        0x3 crti.32
                0x00000000c002062a                _init
 .init          0x00000000c002062d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0020632        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0020637        0x2 crtn.32

.fini           0x00000000c0020639        0xa
 .fini          0x00000000c0020639        0x3 crti.32
                0x00000000c0020639                _fini
 .fini          0x00000000c002063c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0020641        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c0020644       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0020644       0x23 core/computer.32
                0x00000000c0020644                Computer::~Computer()
                0x00000000c0020644                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0020668       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0020668       0x2a core/computer.32
                0x00000000c0020668                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0020692       0x21
 .text._Z10idleCommonv
                0x00000000c0020692       0x21 core/idle.32
                0x00000000c0020692                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00206b4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00206b4        0x2 core/unixfile.32
                0x00000000c00206b4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00206b4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00206b6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00206b6       0x42 core/unixfile.32
                0x00000000c00206b6                LinkedList<UnixFile>::LinkedList()
                0x00000000c00206b6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00206f8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00206f8       0xd3 core/unixfile.32
                0x00000000c00206f8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00207cc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00207cc        0x7 core/unixfile.32
                0x00000000c00207cc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00207d4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00207d4       0xa1 core/unixfile.32
                0x00000000c00207d4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0020876        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0020876        0x8 core/unixfile.32
                0x00000000c0020876                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c002087e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c002087e       0x1a hal/device.32
                0x00000000c002087e                DriverlessDevice::~DriverlessDevice()
                0x00000000c002087e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020898       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020898       0x2a hal/device.32
                0x00000000c0020898                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00208c2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00208c2       0xdc hal/device.32
                0x00000000c00208c2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c002099e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c002099e       0x42 hal/device.32
                0x00000000c002099e                LinkedList<Device>::LinkedList()
                0x00000000c002099e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00209e0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00209e0       0x1c hal/timer.32
                0x00000000c00209e0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00209fc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00209fc        0x7 hal/timer.32
                0x00000000c00209fc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020a04       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020a04       0xbc hal/timer.32
                0x00000000c0020a04                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0020ac0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0020ac0       0xda hal/timer.32
                0x00000000c0020ac0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0020b9c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0020b9c       0x23 hw/acpi.32
                0x00000000c0020b9c                ACPI::~ACPI()
                0x00000000c0020b9c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0020bc0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0020bc0       0x2a hw/acpi.32
                0x00000000c0020bc0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0020bec        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0020bec        0x2 hw/acpi.32
                0x00000000c0020bec                LinkedList<Device>::~LinkedList()
                0x00000000c0020bec                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0020bf0       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0020bf0       0x1c hw/acpi.32
                0x00000000c0020bf0                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0020c0c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0020c0c        0x7 hw/acpi.32
                0x00000000c0020c0c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020c14       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020c14       0xb8 hw/acpi.32
                0x00000000c0020c14                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c0020ccc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0020ccc       0x23 hw/cpu.32
                0x00000000c0020ccc                CPU::~CPU()
                0x00000000c0020ccc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020cf0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020cf0       0x2a hw/cpu.32
                0x00000000c0020cf0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020d1c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020d1c        0x8 sys/kill.32
                0x00000000c0020d1c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020d24        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020d24        0x2 thr/prcssthr.32
                0x00000000c0020d24                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020d24                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020d28       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020d28       0x49 thr/prcssthr.32
                0x00000000c0020d28                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020d28                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020d74       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020d74       0x42 thr/prcssthr.32
                0x00000000c0020d74                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020d74                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c0020db6       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020db6       0x23 hw/bus/pci.32
                0x00000000c0020db6                PCI::~PCI()
                0x00000000c0020db6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0020dda       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0020dda       0x2a hw/bus/pci.32
                0x00000000c0020dda                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020e04       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020e04       0x23 hw/diskctrl/ide.32
                0x00000000c0020e04                IDE::~IDE()
                0x00000000c0020e04                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020e28       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020e28       0x2a hw/diskctrl/ide.32
                0x00000000c0020e28                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020e52       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020e52       0x23 hw/diskctrl/satabus.32
                0x00000000c0020e52                SATABus::~SATABus()
                0x00000000c0020e52                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020e76       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020e76       0x2a hw/diskctrl/satabus.32
                0x00000000c0020e76                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020ea0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020ea0       0x23 hw/diskphys/ata.32
                0x00000000c0020ea0                ATA::~ATA()
                0x00000000c0020ea0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020ec4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020ec4       0x2a hw/diskphys/ata.32
                0x00000000c0020ec4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0020eee       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0020eee       0x23 hw/diskphys/atapi.32
                0x00000000c0020eee                ATAPI::~ATAPI()
                0x00000000c0020eee                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020f12       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020f12       0x2a hw/diskphys/atapi.32
                0x00000000c0020f12                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0020f3c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0020f3c       0x23 hw/diskphys/sata.32
                0x00000000c0020f3c                SATA::~SATA()
                0x00000000c0020f3c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020f60       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020f60       0x2a hw/diskphys/sata.32
                0x00000000c0020f60                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0020f8a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0020f8a       0x23 hw/diskphys/satapi.32
                0x00000000c0020f8a                SATAPI::~SATAPI()
                0x00000000c0020f8a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0020fae       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0020fae       0x2a hw/diskphys/satapi.32
                0x00000000c0020fae                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020fd8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020fd8       0x23 hw/intctrl/apic.32
                0x00000000c0020fd8                IOAPIC::~IOAPIC()
                0x00000000c0020fd8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0020ffc       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0020ffc       0x2a hw/intctrl/apic.32
                0x00000000c0020ffc                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0021028       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0021028       0x23 hw/timer/apictimer.32
                0x00000000c0021028                APICTimer::~APICTimer()
                0x00000000c0021028                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002104c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002104c       0x2a hw/timer/apictimer.32
                0x00000000c002104c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0021078       0x23
 .text._ZN3PITD2Ev
                0x00000000c0021078       0x23 hw/timer/pit.32
                0x00000000c0021078                PIT::~PIT()
                0x00000000c0021078                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002109c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002109c       0x2a hw/timer/pit.32
                0x00000000c002109c                PIT::~PIT()

.rodata         0x00000000c00210c6     0x3336
                0x00000000c00210c6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00210c6        0x2 
 .ctors         0x00000000c00210c8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00210cc        0x4 core/unixfile.32
 .ctors         0x00000000c00210d0        0x4 thr/prcssthr.32
 .ctors         0x00000000c00210d4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00210d8                end_ctors = .
                0x00000000c00210d8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00210d8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00210dc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00210dc                __DTOR_END__
                0x00000000c00210e0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00210e0        0x0 
 .rodata        0x00000000c00210e0      0x101 acpica/utclib.32
                0x00000000c00210e0                AcpiGbl_Ctypes
 *fill*         0x00000000c00211e1        0x3 
 .rodata        0x00000000c00211e4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c00211fc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0021246       0x1a 
 .rodata        0x00000000c0021260       0xed fs/fat/ff.32
 *fill*         0x00000000c002134d       0x13 
 .rodata        0x00000000c0021360      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0021760       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c00217cf      0x11a core/computer.32
 *fill*         0x00000000c00218e9        0x3 
 .rodata.str1.4
                0x00000000c00218ec       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0021954       0x2c core/computer.32
                0x00000000c0021954                vtable for Computer
 .rodata.str1.4
                0x00000000c0021980       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00219b0        0xf core/kheap.32
 .rodata.str1.1
                0x00000000c00219bf       0x17 core/main.32
 *fill*         0x00000000c00219d6        0x2 
 .rodata.str1.4
                0x00000000c00219d8       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0021a7d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0021ad5       0x39 core/pipe.32
 *fill*         0x00000000c0021b0e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0021b10       0x1c core/pipe.32
                0x00000000c0021b10                vtable for Pipe
 .rodata.str1.1
                0x00000000c0021b2c       0x2b core/terminal.32
 *fill*         0x00000000c0021b57        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0021b58       0x1c core/terminal.32
                0x00000000c0021b58                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0021b74       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0021b96       0x15 core/unixfile.32
 *fill*         0x00000000c0021bab        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0021bac       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0021bf7        0x8 core/unixfile.32
 *fill*         0x00000000c0021bff        0x1 
 .rodata.str1.4
                0x00000000c0021c00       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0021c20       0x1c core/unixfile.32
                0x00000000c0021c20                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0021c3c       0x1c core/unixfile.32
                0x00000000c0021c3c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0021c58      0x270 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021ec8      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021fee       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0022021       0x11 dbg/kconsole.32
 *fill*         0x00000000c0022021        0x3 
 .rodata        0x00000000c0022024      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0022174      0x169 dbg/usban.32
 *fill*         0x00000000c00222dd        0x3 
 .rodata.str1.4
                0x00000000c00222e0      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0022417      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c002253a       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c002257b        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c002257c       0x6c fs/vfs.32
                0x00000000c002257c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00225e8       0x1c fs/vfs.32
                0x00000000c00225e8                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0022604       0x1c fs/vfs.32
                0x00000000c0022604                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0022620       0x2c hal/bus.32
                0x00000000c0022620                vtable for Bus
 .rodata.str1.1
                0x00000000c002264c       0x70 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c00226bc       0x3c hal/clock.32
                0x00000000c00226bc                vtable for Clock
 *fill*         0x00000000c00226f8        0x8 
 .rodata        0x00000000c0022700       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0022730       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0022794       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0022794       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0022794       0x2c hal/device.32
                0x00000000c0022794                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00227c0       0x2c hal/device.32
                0x00000000c00227c0                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00227ec       0x2c hal/diskctrl.32
                0x00000000c00227ec                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0022818       0x38 hal/diskphys.32
                0x00000000c0022818                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0022850       0x3e hal/intctrl.32
 *fill*         0x00000000c002288e        0x2 
 .rodata.str1.4
                0x00000000c0022890       0x5d hal/intctrl.32
 .rodata        0x00000000c00228ed       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0022940       0x34 hal/keybrd.32
                0x00000000c0022940                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0022974       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00229b8       0x2c hal/logidisk.32
                0x00000000c00229b8                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00229e4       0x2c hal/mouse.32
                0x00000000c00229e4                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0022a10       0x34 hal/nic.32
                0x00000000c0022a10                vtable for NIC
 .rodata.str1.1
                0x00000000c0022a44        0xb hal/partition.32
 *fill*         0x00000000c0022a4f        0x1 
 .rodata._ZTV6Serial
                0x00000000c0022a50       0x44 hal/serial.32
                0x00000000c0022a50                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022a94       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022a94        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022a94       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022a94       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0022a94       0x30 hal/timer.32
                0x00000000c0022a94                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0022ac4       0x10 hal/vcache.32
                0x00000000c0022ac4                vtable for VCache
 .rodata.str1.1
                0x00000000c0022ad4       0xba hal/video.32
 *fill*         0x00000000c0022b8e        0x2 
 .rodata._ZTV5Video
                0x00000000c0022b90       0x4c hal/video.32
                0x00000000c0022b90                vtable for Video
 .rodata.str1.1
                0x00000000c0022bdc      0x1fd hw/acpi.32
                                        0x217 (size before relaxing)
 *fill*         0x00000000c0022dd9        0x3 
 .rodata.str1.4
                0x00000000c0022ddc       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0022e77       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0022e77        0x8 hw/acpi.32
 *fill*         0x00000000c0022e77        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0022e78       0x2c hw/acpi.32
                0x00000000c0022e78                vtable for ACPI
 .rodata.str1.1
                0x00000000c0022ea4      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c002301f        0x1 
 .rodata._ZTV3CPU
                0x00000000c0023020       0x2c hw/cpu.32
                0x00000000c0023020                vtable for CPU
 .rodata.str1.1
                0x00000000c002304c       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c002308c       0x13 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c002309f        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c00230a2       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00230de       0x91 krnl/resolve.32
 *fill*         0x00000000c002316f        0x1 
 .rodata.str1.4
                0x00000000c0023170       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c002318f       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0023258       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00232a0       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0023316       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c002335b        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0023365       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0023386       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00233da       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0023406      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023610       0x57 thr/prcssthr.32
 *fill*         0x00000000c0023667        0x1 
 .rodata.str1.4
                0x00000000c0023668       0xf0 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023758       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023758       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0023758       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023758        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0023758       0xdd vm86/vm8086.32
 *fill*         0x00000000c0023835        0x3 
 .rodata        0x00000000c0023838       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0023868      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0023a07        0x1 
 .rodata.str1.4
                0x00000000c0023a08       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0023a7b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0023a90       0x3c arch/i386/rtc.32
                0x00000000c0023a90                vtable for RTC
 .rodata.str1.1
                0x00000000c0023acc       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0023b0d        0x3 
 .rodata._ZTV3FAT
                0x00000000c0023b10       0x6c fs/fat/vfslink.32
                0x00000000c0023b10                vtable for FAT
 .rodata.str1.1
                0x00000000c0023b7c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0023b7c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0023cb4       0x6c fs/iso9660/vfslink.32
                0x00000000c0023cb4                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0023d20       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0023d64       0x34 hal/sound/sndcard.32
                0x00000000c0023d64                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0023d98       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023dd7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023e0f       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0023eb0       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023f14       0x2c hw/bus/pci.32
                0x00000000c0023f14                vtable for PCI
 .rodata.str1.1
                0x00000000c0023f40       0xf7 hw/diskctrl/ide.32
                                        0x10d (size before relaxing)
 *fill*         0x00000000c0024037        0x1 
 .rodata._ZTV3IDE
                0x00000000c0024038       0x2c hw/diskctrl/ide.32
                0x00000000c0024038                vtable for IDE
 .rodata.str1.4
                0x00000000c0024064       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0024088       0x2c hw/diskctrl/satabus.32
                0x00000000c0024088                vtable for SATABus
 .rodata.str1.1
                0x00000000c00240b4       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c00240c6        0x2 
 .rodata._ZTV3ATA
                0x00000000c00240c8       0x38 hw/diskphys/ata.32
                0x00000000c00240c8                vtable for ATA
 .rodata.str1.1
                0x00000000c0024100        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c002410d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0024110       0x38 hw/diskphys/atapi.32
                0x00000000c0024110                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0024148       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00241d0       0x38 hw/diskphys/sata.32
                0x00000000c00241d0                vtable for SATA
 .rodata.str1.1
                0x00000000c0024208       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00242f2        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00242f4       0x38 hw/diskphys/satapi.32
                0x00000000c00242f4                vtable for SATAPI
 .rodata        0x00000000c002432c        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0024334       0x2c hw/intctrl/apic.32
                0x00000000c0024334                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0024360       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002437b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002437c       0x30 hw/timer/apictimer.32
                0x00000000c002437c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00243ac       0x1d hw/timer/pit.32
 *fill*         0x00000000c00243c9        0x3 
 .rodata._ZTV3PIT
                0x00000000c00243cc       0x30 hw/timer/pit.32
                0x00000000c00243cc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00243fc      0xa85
 *(.data)
 .data          0x00000000c00243fc        0x0 crti.32
 .data          0x00000000c00243fc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00243fc                __dso_handle
 .data          0x00000000c0024400        0x0 acpica/utclib.32
 .data          0x00000000c0024400        0x0 core/malloc.32
 .data          0x00000000c0024400        0x0 libk/ctype.32
 .data          0x00000000c0024400        0x0 libk/string.32
 .data          0x00000000c0024400        0x0 arch/i386/cc.32
 .data          0x00000000c0024400        0x0 fs/fat/diskio.32
 .data          0x00000000c0024400        0x0 fs/fat/ff.32
 .data          0x00000000c0024400        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0024400        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0024400        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0024400        0x0 core/computer.32
 .data          0x00000000c0024400        0x0 core/gdt.32
 .data          0x00000000c0024400        0x0 core/idle.32
 .data          0x00000000c0024400        0x0 core/idt.32
 .data          0x00000000c0024400        0x4 core/kheap.32
 .data          0x00000000c0024404        0x0 core/main.32
 .data          0x00000000c0024404        0x4 core/physmgr.32
                0x00000000c0024404                Phys::bitmap
 .data          0x00000000c0024408        0x0 core/pipe.32
 *fill*         0x00000000c0024408       0x18 
 .data          0x00000000c0024420       0x60 core/terminal.32
                0x00000000c0024420                VgaText::hiddenOut
                0x00000000c0024440                ansiToVGAMappings
 .data          0x00000000c0024480        0x0 core/tss.32
 .data          0x00000000c0024480        0x4 core/unixfile.32
                0x00000000c0024480                UnixFile::nextFd
 .data          0x00000000c0024484       0x15 core/virtmgr.32
                0x00000000c0024484                Virt::pageAllocPtr
                0x00000000c0024488                Virt::bitmap
                0x00000000c002448c                Virt::swapfileSectorsPerPage
                0x00000000c0024490                Virt::swapfileLength
                0x00000000c0024494                Virt::swapfileSector
                0x00000000c0024498                Virt::swapfileDrive
 *fill*         0x00000000c0024499        0x3 
 .data          0x00000000c002449c        0x4 coreobjs/c++.32
                0x00000000c002449c                __stack_chk_guard
 .data          0x00000000c00244a0        0x0 dbg/kconsole.32
 .data          0x00000000c00244a0       0x28 dbg/usban.32
                0x00000000c00244a0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00244c8        0x0 fs/symlink.32
 .data          0x00000000c00244c8        0x0 fs/vfs.32
 .data          0x00000000c00244c8        0x0 hal/bus.32
 .data          0x00000000c00244c8        0x0 hal/buzzer.32
 .data          0x00000000c00244c8        0x0 hal/clock.32
 .data          0x00000000c00244c8        0x0 hal/device.32
 .data          0x00000000c00244c8        0x0 hal/diskctrl.32
 .data          0x00000000c00244c8        0x0 hal/diskphys.32
 .data          0x00000000c00244c8        0x0 hal/fpu.32
 .data          0x00000000c00244c8        0x0 hal/intctrl.32
 .data          0x00000000c00244c8        0x0 hal/keybrd.32
 .data          0x00000000c00244c8        0x0 hal/logidisk.32
 .data          0x00000000c00244c8        0x0 hal/mouse.32
 .data          0x00000000c00244c8        0x0 hal/nic.32
 .data          0x00000000c00244c8        0x0 hal/partition.32
 .data          0x00000000c00244c8        0x0 hal/serial.32
 .data          0x00000000c00244c8        0x0 hal/timer.32
 .data          0x00000000c00244c8        0x0 hal/vcache.32
 .data          0x00000000c00244c8        0x0 hal/video.32
 .data          0x00000000c00244c8       0x10 hw/acpi.32
                0x00000000c00244c8                legacyIRQRemaps
 .data          0x00000000c00244d8        0x4 hw/cpu.32
                0x00000000c00244d8                lastCode
 .data          0x00000000c00244dc        0x0 krnl/atexit.32
 .data          0x00000000c00244dc        0x0 krnl/bootmsg.32
 .data          0x00000000c00244dc        0x0 krnl/cdefs.32
 .data          0x00000000c00244dc        0x0 krnl/compat.32
 *fill*         0x00000000c00244dc        0x4 
 .data          0x00000000c00244e0      0x400 krnl/crc32.32
                0x00000000c00244e0                KiPolyLookupCRC32
 .data          0x00000000c00248e0       0x4d krnl/env.32
                0x00000000c00248e0                defaultSysEnv
 .data          0x00000000c002492d        0x0 krnl/inlines.32
 .data          0x00000000c002492d        0x0 krnl/mailbox.32
 .data          0x00000000c002492d        0x0 krnl/mutex.32
 .data          0x00000000c002492d        0x0 krnl/panic.32
 .data          0x00000000c002492d        0x0 krnl/powctrl.32
 .data          0x00000000c002492d        0x0 krnl/random.32
 .data          0x00000000c002492d        0x0 krnl/resolve.32
 .data          0x00000000c002492d        0x0 krnl/semaphore.32
 *fill*         0x00000000c002492d       0x13 
 .data          0x00000000c0024940       0x4c krnl/signal.32
                0x00000000c0024940                KiDefaultSignalHandlers
 *fill*         0x00000000c002498c       0x14 
 .data          0x00000000c00249a0      0x104 krnl/syscalls.32
                0x00000000c00249a0                systemCallHandlers
 *fill*         0x00000000c0024aa4       0x1c 
 .data          0x00000000c0024ac0      0x100 reg/cm.32
                0x00000000c0024ac0                CmComponents
 .data          0x00000000c0024bc0        0x0 reg/registry.32
 .data          0x00000000c0024bc0        0x0 sys/eject.32
 .data          0x00000000c0024bc0        0x0 sys/exit.32
 .data          0x00000000c0024bc0        0x0 sys/getcwd.32
 .data          0x00000000c0024bc0        0x0 sys/getpid.32
 .data          0x00000000c0024bc0        0x0 sys/getramdata.32
 .data          0x00000000c0024bc0        0x0 sys/getvgaptr.32
 .data          0x00000000c0024bc0        0x0 sys/kill.32
 .data          0x00000000c0024bc0        0x0 sys/loaddll.32
 .data          0x00000000c0024bc0        0x0 sys/read.32
 .data          0x00000000c0024bc0        0x0 sys/registersignal.32
 .data          0x00000000c0024bc0        0x0 sys/registry.32
 .data          0x00000000c0024bc0        0x0 sys/sbrk.32
 .data          0x00000000c0024bc0        0x0 sys/setcwd.32
 .data          0x00000000c0024bc0        0x0 sys/settime.32
 .data          0x00000000c0024bc0        0x0 sys/symlink.32
 .data          0x00000000c0024bc0        0x0 sys/timezone.32
 .data          0x00000000c0024bc0        0x0 sys/truncate.32
 .data          0x00000000c0024bc0        0x0 sys/write.32
 .data          0x00000000c0024bc0        0x0 sys/wsbe.32
 .data          0x00000000c0024bc0        0x0 sys/yield.32
 .data          0x00000000c0024bc0        0x0 thr/elf.32
 .data          0x00000000c0024bc0        0x0 thr/exec.32
 .data          0x00000000c0024bc0        0x4 thr/prcssthr.32
                0x00000000c0024bc0                Thr::nextPID
 .data          0x00000000c0024bc4        0x0 vm86/vm8086.32
 *fill*         0x00000000c0024bc4       0x1c 
 .data          0x00000000c0024be0      0x2a0 arch/i386/hal.32
                0x00000000c0024be0                exceptionNames
 .data          0x00000000c0024e80        0x0 arch/i386/pic.32
 .data          0x00000000c0024e80        0x0 arch/i386/rtc.32
 .data          0x00000000c0024e80        0x0 arch/i386/vga.32
 .data          0x00000000c0024e80        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024e80        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024e80        0x1 fs/iso9660/vfslink.32
                0x00000000c0024e80                recentDriveletter
 .data          0x00000000c0024e81        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024e81        0x0 hal/sound/sndport.32
 .data          0x00000000c0024e81        0x0 hw/bus/isa.32
 .data          0x00000000c0024e81        0x0 hw/bus/pci.32
 .data          0x00000000c0024e81        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024e81        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024e81        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024e81        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024e81        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024e81        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024e81        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024e81        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024e81        0x0 hw/timer/pit.32
 .data          0x00000000c0024e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024e81        0x0 crtn.32
 .data          0x00000000c0024e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024e84        0x0
 .got           0x00000000c0024e84        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024e84        0x0
 .got.plt       0x00000000c0024e84        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024e84        0x0
 .igot.plt      0x00000000c0024e84        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024e84        0x0
 .tm_clone_table
                0x00000000c0024e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024e81      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024e81        0x3 
 .eh_frame      0x00000000c0024e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024e84       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0024edc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0024f1c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024f88       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0026000       0x7d
 *(userkernel)
 userkernel     0x00000000c0026000       0x52 krnl/signal.32
                0x00000000c0026000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002602c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0026052       0x2b krnl/syscalls.32
                0x00000000c0026052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0027000        0x1
 *(align_previous)
 align_previous
                0x00000000c0027000        0x1 krnl/signal.32
                0x00000000c0027000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0027004        0x0
 .rel.got       0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0027001     0x7107
                0x00000000c0027001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0027001       0x1f 
 COMMON         0x00000000c0027020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0027020                dcache
                0x00000000c0027060                cdDriveLetter
                0x00000000c0027080                icache
 *(.bss)
 .bss           0x00000000c00270c0        0x0 crti.32
 .bss           0x00000000c00270c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00270e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00270e4       0x1c 
 .bss           0x00000000c0027100      0x378 core/malloc.32
 .bss           0x00000000c0027478        0x0 libk/ctype.32
 .bss           0x00000000c0027478        0x0 libk/string.32
 .bss           0x00000000c0027478        0x0 arch/i386/cc.32
 .bss           0x00000000c0027478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0027478        0x8 
 .bss           0x00000000c0027480       0x88 fs/fat/ff.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0027508       0x18 
 .bss           0x00000000c0027520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0027eb8        0x6 core/computer.32
                0x00000000c0027eb8                Krnl::computer
                0x00000000c0027ebc                KeIsPreemptionOn
                0x00000000c0027ebd                KeIsSchedulingOn
 *fill*         0x00000000c0027ebe        0x2 
 .bss           0x00000000c0027ec0        0x6 core/gdt.32
                0x00000000c0027ec0                gdtDescr
 .bss           0x00000000c0027ec6        0x0 core/idle.32
 *fill*         0x00000000c0027ec6        0x2 
 .bss           0x00000000c0027ec8        0x6 core/idt.32
                0x00000000c0027ec8                idtDescr
 .bss           0x00000000c0027ece        0x0 core/kheap.32
 *fill*         0x00000000c0027ece        0x2 
 .bss           0x00000000c0027ed0        0x4 core/main.32
                0x00000000c0027ed0                sysBootSettings
 .bss           0x00000000c0027ed4       0x29 core/physmgr.32
                0x00000000c0027ed4                Phys::forbidEvictions
                0x00000000c0027ed8                Phys::currentPagePointer
                0x00000000c0027edc                Phys::highestMem
                0x00000000c0027ee0                Phys::oldPercent
                0x00000000c0027ee4                Phys::usedPages
                0x00000000c0027ee8                Phys::usablePages
                0x00000000c0027eec                Phys::dmaUsage
 .bss           0x00000000c0027efd        0x0 core/pipe.32
 *fill*         0x00000000c0027efd        0x3 
 .bss           0x00000000c0027f00        0x9 core/terminal.32
                0x00000000c0027f00                terminalCycle
                0x00000000c0027f04                activeTerminal
                0x00000000c0027f08                VgaText::graphicMode
 *fill*         0x00000000c0027f09        0x1 
 .bss           0x00000000c0027f0a        0x2 core/tss.32
                0x00000000c0027f0a                doubleFaultSelector
 *fill*         0x00000000c0027f0c       0x14 
 .bss           0x00000000c0027f20       0x84 core/unixfile.32
                0x00000000c0027f20                sfileLpt
                0x00000000c0027f60                sfileCom
                0x00000000c0027f84                sfileNul
                0x00000000c0027f88                sfilePnt
                0x00000000c0027f8c                sfileAux
                0x00000000c0027f90                sfileCon
                0x00000000c0027f94                initialFilesAdded
                0x00000000c0027f98                unixFileLinkedList
 .bss           0x00000000c0027fa4       0x10 core/virtmgr.32
                0x00000000c0027fa4                twswaps
                0x00000000c0027fa8                swapBalance
                0x00000000c0027fac                Virt::swapfileBitmap
                0x00000000c0027fb0                firstVAS
 .bss           0x00000000c0027fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0027fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0027fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0027fb4        0xc 
 .bss           0x00000000c0027fc0     0x2444 fs/symlink.32
                0x00000000c0027fc0                kiNumWaitingRoomSymlinks
                0x00000000c0027fe0                kiNewlyCreatedIDs
                0x00000000c0028000                kiNewlyCreatedSymlinks
                0x00000000c0028400                kiSymlinkHashTable
                0x00000000c002a400                kiBaseSymlinkID
 .bss           0x00000000c002a404        0x4 fs/vfs.32
                0x00000000c002a404                installedFilesystems
 .bss           0x00000000c002a408        0x0 hal/bus.32
 .bss           0x00000000c002a408        0x0 hal/buzzer.32
 .bss           0x00000000c002a408        0x8 hal/clock.32
                0x00000000c002a408                User::dstOn
                0x00000000c002a409                User::timezoneHalfHourOffset
                0x00000000c002a40c                User::timezoneHourOffset
 .bss           0x00000000c002a410        0x0 hal/device.32
 .bss           0x00000000c002a410        0x0 hal/diskctrl.32
 .bss           0x00000000c002a410        0x0 hal/diskphys.32
 .bss           0x00000000c002a410        0x0 hal/fpu.32
 *fill*         0x00000000c002a410       0x10 
 .bss           0x00000000c002a420     0x2000 hal/intctrl.32
                0x00000000c002a420                INT_contexts
                0x00000000c002b420                INT_handlers
 .bss           0x00000000c002c420      0x428 hal/keybrd.32
                0x00000000c002c420                keyboardWaitingTaskList
                0x00000000c002c424                keyboardSetupYet
                0x00000000c002c428                guiKeyboardHandler
                0x00000000c002c42c                kiKeyboardGUILock
                0x00000000c002c42d                kiKeyboardGUILatch
                0x00000000c002c440                keystates
 *fill*         0x00000000c002c848       0x18 
 .bss           0x00000000c002c860       0x88 hal/logidisk.32
                0x00000000c002c860                diskAssignments
                0x00000000c002c880                disks
 .bss           0x00000000c002c8e8        0x4 hal/mouse.32
                0x00000000c002c8e8                guiMouseHandler
 .bss           0x00000000c002c8ec        0x0 hal/nic.32
 .bss           0x00000000c002c8ec        0x0 hal/partition.32
 .bss           0x00000000c002c8ec        0x0 hal/serial.32
 .bss           0x00000000c002c8ec        0x4 hal/timer.32
                0x00000000c002c8ec                milliTenthsSinceBoot
 .bss           0x00000000c002c8f0        0x0 hal/vcache.32
 .bss           0x00000000c002c8f0        0x4 hal/video.32
                0x00000000c002c8f0                screen
 *fill*         0x00000000c002c8f4        0xc 
 .bss           0x00000000c002c900      0x480 hw/acpi.32
                0x00000000c002c900                systemSleepFunction
                0x00000000c002c904                systemResetFunction
                0x00000000c002c908                systemShutdownFunction
                0x00000000c002c90c                nextACPITable
                0x00000000c002c920                acpiTables
                0x00000000c002cb20                usingXSDT
                0x00000000c002cb24                MADTpointer
                0x00000000c002cb28                RSDTpointer
                0x00000000c002cb2c                RSDPpointer
                0x00000000c002cb30                nextAPICNMI
                0x00000000c002cb40                apicNMIInfo
                0x00000000c002cbc0                legacyIRQFlags
                0x00000000c002cbe0                ioapicDiscoveryNumber
                0x00000000c002cc00                ioapicFoundInMADT
                0x00000000c002cc20                ioapicAddresses
                0x00000000c002cca0                ioapicGSIBase
                0x00000000c002cd20                processorDiscoveryNumber
                0x00000000c002cd40                matchingAPICID
                0x00000000c002cd60                processorID
 .bss           0x00000000c002cd80       0x10 hw/cpu.32
                0x00000000c002cd80                lastD
                0x00000000c002cd84                lastC
                0x00000000c002cd88                lastB
                0x00000000c002cd8c                lastA
 *fill*         0x00000000c002cd90       0x10 
 .bss           0x00000000c002cda0       0xe0 krnl/atexit.32
                0x00000000c002cda0                KiNextAtexitHandler
                0x00000000c002cdc0                KiAtexitContexts
                0x00000000c002ce20                KiAtexitHandlers
 .bss           0x00000000c002ce80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002ce80        0x0 krnl/cdefs.32
 .bss           0x00000000c002ce80        0x0 krnl/compat.32
 .bss           0x00000000c002ce80        0x0 krnl/crc32.32
 .bss           0x00000000c002ce80        0x8 krnl/env.32
                0x00000000c002ce80                KeUserEnv
                0x00000000c002ce84                KeSystemEnv
 .bss           0x00000000c002ce88        0x0 krnl/inlines.32
 .bss           0x00000000c002ce88        0x0 krnl/mailbox.32
 .bss           0x00000000c002ce88        0x0 krnl/mutex.32
 .bss           0x00000000c002ce88        0x1 krnl/panic.32
                0x00000000c002ce88                KeIsKernelInPanic
 *fill*         0x00000000c002ce89       0x17 
 .bss           0x00000000c002cea0       0x48 krnl/powctrl.32
                0x00000000c002cea0                powCtrlOnBattery
                0x00000000c002cec0                currentPowerSettings
                0x00000000c002cee4                secondsSinceLastUserIO
 .bss           0x00000000c002cee8        0x8 krnl/random.32
                0x00000000c002cee8                kiRandSeed
 .bss           0x00000000c002cef0        0x0 krnl/resolve.32
 .bss           0x00000000c002cef0        0x0 krnl/semaphore.32
 .bss           0x00000000c002cef0        0x0 krnl/signal.32
 .bss           0x00000000c002cef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002cef0        0x4 reg/cm.32
 .bss           0x00000000c002cef4        0x0 reg/registry.32
 .bss           0x00000000c002cef4        0x0 sys/eject.32
 .bss           0x00000000c002cef4        0x0 sys/exit.32
 .bss           0x00000000c002cef4        0x0 sys/getcwd.32
 .bss           0x00000000c002cef4        0x0 sys/getpid.32
 .bss           0x00000000c002cef4        0x0 sys/getramdata.32
 .bss           0x00000000c002cef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002cef4        0x0 sys/kill.32
 .bss           0x00000000c002cef4        0x0 sys/loaddll.32
 .bss           0x00000000c002cef4        0x0 sys/read.32
 .bss           0x00000000c002cef4        0x0 sys/registersignal.32
 .bss           0x00000000c002cef4        0x0 sys/registry.32
 .bss           0x00000000c002cef4        0x0 sys/sbrk.32
 .bss           0x00000000c002cef4        0x0 sys/setcwd.32
 .bss           0x00000000c002cef4        0x0 sys/settime.32
 .bss           0x00000000c002cef4        0x0 sys/symlink.32
 .bss           0x00000000c002cef4        0x0 sys/timezone.32
 .bss           0x00000000c002cef4        0x0 sys/truncate.32
 .bss           0x00000000c002cef4        0x0 sys/write.32
 .bss           0x00000000c002cef4        0x0 sys/wsbe.32
 .bss           0x00000000c002cef4        0x0 sys/yield.32
 *fill*         0x00000000c002cef4        0xc 
 .bss           0x00000000c002cf00      0x7a4 thr/elf.32
                0x00000000c002cf00                Thr::driverLookupNext
                0x00000000c002cf20                Thr::driverLookupLen
                0x00000000c002d120                Thr::driverLookupAddr
                0x00000000c002d320                Thr::driverNameLookup
                0x00000000c002d520                Thr::kernelSymbols
                0x00000000c002d5a0                Thr::kernelStringTable
                0x00000000c002d620                Thr::kernelSymbolTable
                0x00000000c002d6a0                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002d6a4        0x0 thr/exec.32
 *fill*         0x00000000c002d6a4        0x4 
 .bss           0x00000000c002d6a8       0x70 thr/prcssthr.32
                0x00000000c002d6a8                KiRestorePreemptionValue
                0x00000000c002d6ac                KiPreemptionDisableCounter
                0x00000000c002d6b0                cleanerThread
                0x00000000c002d6b4                weNeedTheCleanerToNotBlock
                0x00000000c002d6b8                retValLockStuff
                0x00000000c002d6bc                retValSchedLock
                0x00000000c002d6c0                lockStuffLock
                0x00000000c002d6c4                schedulerLock
                0x00000000c002d6c8                taskSwitchesPostponedFlag
                0x00000000c002d6cc                postponeTaskSwitchesCounter
                0x00000000c002d6d0                irqDisableCounter
                0x00000000c002d6d4                terminatedTaskList
                0x00000000c002d6e0                sleepingTaskList
                0x00000000c002d6ec                taskList
                0x00000000c002d6f8                kernelProcess
 *fill*         0x00000000c002d718        0x8 
 .bss           0x00000000c002d720       0x40 vm86/vm8086.32
                0x00000000c002d720                Vm::started8086Yet
                0x00000000c002d724                Vm::vmRetV
                0x00000000c002d728                Vm::vmDone
                0x00000000c002d729                Vm::vmReady
                0x00000000c002d72c                Vm::vm86Thread
                0x00000000c002d730                Vm::vmToHostCommsPtr
                0x00000000c002d740                Vm::vmToHostComms
 .bss           0x00000000c002d760       0x18 arch/i386/hal.32
                0x00000000c002d760                apic
                0x00000000c002d764                guiPanicHandler
                0x00000000c002d768                fpuOwner
                0x00000000c002d76c                coproLoadFunc
                0x00000000c002d770                coproSaveFunc
                0x00000000c002d774                gpFaultIntercept
 .bss           0x00000000c002d778        0x0 arch/i386/pic.32
 .bss           0x00000000c002d778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002d77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002d77a        0x6 
 .bss           0x00000000c002d780       0xf0 fs/fat/vfslink.32
                0x00000000c002d780                FAT::fats
                0x00000000c002d7a0                FAT::vfsToFatRemaps
                0x00000000c002d820                fatToVFSRemaps
 .bss           0x00000000c002d870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002d870       0x10 
 .bss           0x00000000c002d880      0x820 fs/iso9660/vfslink.32
                0x00000000c002d880                iso9660Owner
                0x00000000c002d884                recentSector
                0x00000000c002d8a0                recentBuffer
 .bss           0x00000000c002e0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002e0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002e0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002e0a0        0xd hw/bus/pci.32
                0x00000000c002e0a0                thePCI
 .bss           0x00000000c002e0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002e0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002e0ad        0x3 
 .bss           0x00000000c002e0b0        0x8 hw/diskphys/ata.32
                0x00000000c002e0b0                ataSectorsWritten
                0x00000000c002e0b4                ataSectorsRead
 .bss           0x00000000c002e0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002e0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002e0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002e0b8        0x8 
 .bss           0x00000000c002e0c0       0x41 hw/intctrl/apic.32
                0x00000000c002e0c0                noOfIOAPICs
                0x00000000c002e0e0                ioapics
                0x00000000c002e100                IOAPICsSetupYet
 .bss           0x00000000c002e101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002e101        0x3 
 .bss           0x00000000c002e104        0x4 hw/timer/pit.32
                0x00000000c002e104                pitFreq
 .bss           0x00000000c002e108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002e108        0x0 crtn.32
 .bss           0x00000000c002e108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002e108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002e108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002e108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002e108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003520f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
