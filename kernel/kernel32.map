Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                              hal/sound/sndhw.32 (__addsf3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                              hal/libresample/src_linear.32 (__adddf3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                              hal/libresample/samplerate.32 (__truncdfsf2)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD net/ethernet.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x28648
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x4ed D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                voodooXADD
                0x00000000c000027f                doTPAUSE
                0x00000000c0000289                hasLegacyFPU
                0x00000000c00002ae                is486
                0x00000000c00002e4                detectCPUID
                0x00000000c00002fa                goToVM86
                0x00000000c000032a                goToUsermode
                0x00000000c0000354                switchToThreadASMFirstTime
                0x00000000c0000362                switchToThreadASM
                0x00000000c00003ea                asmQuickAcquireLock
                0x00000000c0000408                asmQuickReleaseLock
                0x00000000c0000414                asmAcquireLock
                0x00000000c0000435                asmReleaseLock
                0x00000000c0000448                loadGDT
                0x00000000c0000468                isr0
                0x00000000c0000478                isr1
                0x00000000c0000482                isr2
                0x00000000c000048c                isr3
                0x00000000c0000496                isr4
                0x00000000c00004a0                isr5
                0x00000000c00004aa                isr6
                0x00000000c00004b4                isr7
                0x00000000c00004be                isr8
                0x00000000c00004c6                isr9
                0x00000000c00004d0                isr10
                0x00000000c00004d8                isr11
                0x00000000c00004e0                isr12
                0x00000000c00004e8                isr13
                0x00000000c00004f0                isr14
                0x00000000c00004f8                isr15
                0x00000000c0000502                isr16
                0x00000000c000050c                isr17
                0x00000000c0000516                isr18
                0x00000000c0000520                irq3
                0x00000000c000052a                irq4
                0x00000000c0000534                irq5
                0x00000000c000053e                irq6
                0x00000000c0000548                irq7
                0x00000000c0000552                irq8
                0x00000000c000055c                irq9
                0x00000000c0000566                irq10
                0x00000000c0000570                irq11
                0x00000000c000057a                irq12
                0x00000000c0000584                irq13
                0x00000000c000058e                irq14
                0x00000000c0000598                irq15
                0x00000000c00005a2                irq1
                0x00000000c00005a9                irq2
                0x00000000c00005b0                isr96
                0x00000000c00005b7                irq0
                0x00000000c00005bc                int_common_stub
                0x00000000c00005bc                syscall_common_stub
                0x00000000c00005ed                irq16
                0x00000000c00005f7                irq17
                0x00000000c0000601                irq18
                0x00000000c000060b                irq19
                0x00000000c0000615                irq20
                0x00000000c000061f                irq21
                0x00000000c0000629                irq22
                0x00000000c0000633                irq23
 *fill*         0x00000000c000063d        0x3 
 .text          0x00000000c0000640      0x611 acpica/utclib.32
                0x00000000c0000640                memcmp
                0x00000000c000067c                memmove
                0x00000000c0000744                memcpy
                0x00000000c0000778                memset
                0x00000000c0000794                strlen
                0x00000000c00007ac                strpbrk
                0x00000000c00007e8                strtok
                0x00000000c0000834                strcpy
                0x00000000c0000858                strncpy
                0x00000000c00008c0                strcmp
                0x00000000c0000900                strchr
                0x00000000c0000924                strncmp
                0x00000000c0000974                strcat
                0x00000000c00009a4                strncat
                0x00000000c00009e0                strstr
                0x00000000c0000a28                toupper
                0x00000000c0000a3c                tolower
                0x00000000c0000a50                simple_strtoul
 .text          0x00000000c0000c51      0xfbf core/malloc.32
                0x00000000c0000dbc                dlfree
                0x00000000c0001117                dlmalloc
                0x00000000c0001654                dlrealloc
                0x00000000c0001809                dlmemalign
                0x00000000c000192c                dlcalloc
                0x00000000c00019c6                dlcfree
                0x00000000c00019cb                dlindependent_calloc
                0x00000000c00019f0                dlindependent_comalloc
                0x00000000c0001a07                dlvalloc
                0x00000000c0001a32                dlpvalloc
                0x00000000c0001a68                dlmalloc_trim
                0x00000000c0001a75                dlmalloc_usable_size
                0x00000000c0001aa6                dlmallinfo
                0x00000000c0001b75                dlmalloc_stats
                0x00000000c0001b86                dlmallopt
 .text          0x00000000c0001c10        0x0 libk/string.32
 .text          0x00000000c0001c10       0x51 fs/fat/diskio.32
                0x00000000c0001c10                disk_status
                0x00000000c0001c13                disk_initialize
                0x00000000c0001c16                disk_read
                0x00000000c0001c2c                disk_write
                0x00000000c0001c42                disk_ioctl
 .text          0x00000000c0001c61     0x6833 fs/fat/ff.32
                0x00000000c0004f2f                f_mount
                0x00000000c0004f91                f_open
                0x00000000c00053cd                f_read
                0x00000000c000564d                f_write
                0x00000000c0005907                f_sync
                0x00000000c0005ae3                f_close
                0x00000000c0005b12                f_lseek
                0x00000000c0005fc9                f_opendir
                0x00000000c00060cb                f_closedir
                0x00000000c00060ed                f_readdir
                0x00000000c0006188                f_stat
                0x00000000c0006217                f_getfree
                0x00000000c00063e2                f_truncate
                0x00000000c00064da                f_unlink
                0x00000000c000665d                f_mkdir
                0x00000000c0006889                f_rename
                0x00000000c0006b7c                f_chmod
                0x00000000c0006c5a                f_utime
                0x00000000c0006d38                f_getlabel
                0x00000000c0006f26                f_setlabel
                0x00000000c0007193                f_forward
                0x00000000c0007371                f_mkfs
 .text          0x00000000c0008494       0x2d fs/fat/ffsystem.32
                0x00000000c0008494                ff_memalloc
                0x00000000c00084aa                ff_memfree
 .text          0x00000000c00084c1      0x253 fs/fat/ffunicode.32
                0x00000000c00084c1                ff_uni2oem
                0x00000000c0008551                ff_oem2uni
                0x00000000c00085bd                ff_wtoupper
 .text          0x00000000c0008714      0x8fb hal/libresample/samplerate.32
                0x00000000c0008758                src_delete
                0x00000000c0008794                src_process
                0x00000000c000894a                src_callback_read
                0x00000000c0008ac7                src_set_ratio
                0x00000000c0008b31                src_get_channels
                0x00000000c0008b53                src_reset
                0x00000000c0008b9f                src_new
                0x00000000c0008c2d                src_callback_new
                0x00000000c0008c8f                src_get_name
                0x00000000c0008cc6                src_get_description
                0x00000000c0008cfd                src_get_version
                0x00000000c0008d03                src_is_valid_ratio
                0x00000000c0008d57                src_error
                0x00000000c0008d65                src_strerror
                0x00000000c0008d78                src_simple
                0x00000000c0008dcb                src_short_to_float_array
                0x00000000c0008e30                src_float_to_short_array
                0x00000000c0008eef                src_int_to_float_array
                0x00000000c0008f52                src_float_to_int_array
 .text          0x00000000c000900f      0x8cb hal/libresample/src_linear.32
                0x00000000c0009835                linear_get_name
                0x00000000c0009844                linear_get_description
                0x00000000c0009853                linear_set_converter
 .text          0x00000000c00098da     0x447c hal/libresample/src_sinc.32
                0x00000000c000dc6d                sinc_get_name
                0x00000000c000dc80                sinc_get_description
                0x00000000c000dc93                sinc_set_converter
 .text          0x00000000c000dd56      0x77c hal/libresample/src_zoh.32
                0x00000000c000e42d                zoh_get_name
                0x00000000c000e43c                zoh_get_description
                0x00000000c000e44b                zoh_set_converter
 .text          0x00000000c000e4d2       0x23 compat/inlines.32
                0x00000000c000e4d2                CPU::current()
                0x00000000c000e4df                operator new(unsigned long)
 .text          0x00000000c000e4f5      0x111 compat/resolve.32
                0x00000000c000e4f5                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c000e606      0xa17 core/computer.32
                0x00000000c000e606                Computer::close(int, int, void*)
                0x00000000c000e64a                Krnl::firstTask()
                0x00000000c000e73a                Computer::Computer()
                0x00000000c000e73a                Computer::Computer()
                0x00000000c000e896                Computer::setBootMessage(char const*)
                0x00000000c000e898                Computer::detectFeatures()
                0x00000000c000eaa2                Computer::displayFeatures()
                0x00000000c000ede8                Computer::rdmsr(unsigned int)
                0x00000000c000ee14                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000ee4c                Computer::nmiEnabled()
                0x00000000c000ee58                Computer::readCMOS(unsigned char)
                0x00000000c000ee72                Computer::enableNMI(bool)
                0x00000000c000ee8a                Computer::open(int, int, void*)
                0x00000000c000ef60                Computer::disableNMI()
                0x00000000c000ef6e                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000ef8c                Computer::handleNMI()
                0x00000000c000eff2                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000f01d        0x1 
 .text          0x00000000c000f01e      0x1b7 core/gdt.32
                0x00000000c000f01e                GDTEntry::setBase(unsigned int)
                0x00000000c000f03a                GDTEntry::setLimit(unsigned int)
                0x00000000c000f058                GDT::GDT()
                0x00000000c000f058                GDT::GDT()
                0x00000000c000f06e                GDT::addEntry(GDTEntry)
                0x00000000c000f0aa                GDT::getNumberOfEntries()
                0x00000000c000f0b2                GDT::flush()
                0x00000000c000f0d4                GDT::setup()
 .text          0x00000000c000f1d5       0x62 core/idle.32
                0x00000000c000f1d5                idleFunction(void*)
 *fill*         0x00000000c000f237        0x1 
 .text          0x00000000c000f238      0x45f core/idt.32
                0x00000000c000f238                IDTEntry::IDTEntry(bool)
                0x00000000c000f238                IDTEntry::IDTEntry(bool)
                0x00000000c000f2a6                IDTEntry::setOffset(unsigned int)
                0x00000000c000f2ba                IDT::IDT()
                0x00000000c000f2ba                IDT::IDT()
                0x00000000c000f2bc                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000f2c4                IDT::addEntry(IDTEntry, int)
                0x00000000c000f2de                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000f316                IDT::flush()
                0x00000000c000f330                IDT::setup()
 .text          0x00000000c000f697      0x203 core/kheap.32
                0x00000000c000f697                sbrk
                0x00000000c000f7a5                mmap
                0x00000000c000f7bb                munmap
                0x00000000c000f7d1                liballoc_lock()
                0x00000000c000f7e2                liballoc_unlock()
                0x00000000c000f7f3                liballoc_alloc(int)
                0x00000000c000f80e                liballoc_free(void*, int)
                0x00000000c000f82c                realloc
                0x00000000c000f840                malloc
                0x00000000c000f850                free
                0x00000000c000f860                rfree
                0x00000000c000f870                calloc
 .text          0x00000000c000f89a      0x485 core/main.32
                0x00000000c000f89a                hwTextMode_loadInData(VgaText*)
                0x00000000c000f8e5                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000f963                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000f9c1                hwTextMode_update(VgaText*)
                0x00000000c000f9c2                hwTextMode_updateCursor(VgaText*)
                0x00000000c000fa13                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000fa59                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000fb06                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000fb88                setupTextMode()
                0x00000000c000fbf8                kernel_main
 .text          0x00000000c000fd1f      0x5c8 core/physmgr.32
                0x00000000c000fd1f                Phys::allocateDMA(unsigned long)
                0x00000000c000fdc2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000fe0a                Phys::setPageState(unsigned long, bool)
                0x00000000c000fe3c                Phys::getPageState(unsigned long)
                0x00000000c000fe58                Phys::freePage(unsigned long)
                0x00000000c000fee2                Phys::allocatePage()
                0x00000000c0010025                Phys::allocateContiguousPages(int)
                0x00000000c001007f                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c00100b7                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c00102e7        0x1 
 .text          0x00000000c00102e8      0x273 core/pipe.32
                0x00000000c00102e8                Pipe::isAtty()
                0x00000000c00102ec                Pipe::~Pipe()
                0x00000000c00102ec                Pipe::~Pipe()
                0x00000000c0010310                Pipe::~Pipe()
                0x00000000c0010338                Pipe::read(unsigned long long, void*, int*)
                0x00000000c001042c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c00104f4                Pipe::Pipe(int)
                0x00000000c00104f4                Pipe::Pipe(int)
 *fill*         0x00000000c001055b        0x1 
 .text          0x00000000c001055c      0xf73 core/terminal.32
                0x00000000c001055c                VgaText::isAtty()
                0x00000000c0010560                VgaText::~VgaText()
                0x00000000c0010560                VgaText::~VgaText()
                0x00000000c0010584                VgaText::~VgaText()
                0x00000000c00105ae                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00105ce                setTerminalScrollLock(bool)
                0x00000000c00105cf                addToTerminalCycle(VgaText*)
                0x00000000c00105fc                installVgaTextImplementation()
                0x00000000c0010611                scrollTerminalScrollLock(int)
                0x00000000c0010612                VgaText::load()
                0x00000000c0010666                VgaText::updateCursor()
                0x00000000c0010680                VgaText::showCursor(bool)
                0x00000000c0010690                VgaText::disableBlink(bool)
                0x00000000c00106ca                VgaText::doANSI_SGR(int)
                0x00000000c0010756                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c001076c                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0010782                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00107a2                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00107b4                VgaText::scrollScreen()
                0x00000000c0010848                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c001085a                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00108ba                VgaText::getCursorX()
                0x00000000c00108c6                VgaText::getCursorY()
                0x00000000c00108d2                VgaText::setCursor(int, int)
                0x00000000c00108f0                VgaText::setCursorX(int)
                0x00000000c001090c                VgaText::setCursorY(int)
                0x00000000c0010928                VgaText::incrementCursor(bool)
                0x00000000c0010990                VgaText::updateRAMUsageDisplay(int)
                0x00000000c00109f4                VgaText::updateDiskUsage()
                0x00000000c0010b5e                VgaText::updateTitle()
                0x00000000c0010ba4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0010bb4                VgaText::setTitleColour(VgaColour)
                0x00000000c0010bc4                VgaText::setTitle(char*)
                0x00000000c0010bea                VgaText::decrementCursor(bool)
                0x00000000c0010c12                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0010d0e                VgaText::isShowingCursor()
                0x00000000c0010d1a                VgaText::isBlinkDisabled()
                0x00000000c0010d28                VgaText::setCursorHeight(int)
                0x00000000c0010d46                VgaText::getCursorHeight()
                0x00000000c0010d51                setActiveTerminal(VgaText*)
                0x00000000c0010e03                doTerminalCycle()
                0x00000000c0010e20                VgaText::doUpdate()
                0x00000000c0010e32                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0010ff2                VgaText::clearScreen()
                0x00000000c0011056                VgaText::putchar(char)
                0x00000000c0011170                VgaText::puts(char const*)
                0x00000000c0011196                VgaText::putx(unsigned int)
                0x00000000c00111dc                VgaText::VgaText(char const*)
                0x00000000c00111dc                VgaText::VgaText(char const*)
                0x00000000c001136e                VgaText::receiveKey(unsigned char)
                0x00000000c0011456                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00114aa                newTerminal(char*)
 *fill*         0x00000000c00114cf        0x1 
 .text          0x00000000c00114d0      0x1b3 core/tss.32
                0x00000000c00114d0                TSS::TSS()
                0x00000000c00114d0                TSS::TSS()
                0x00000000c00114de                TSS::setESP(unsigned long)
                0x00000000c00114f0                TSS::flush()
                0x00000000c0011510                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0011683        0x1 
 .text          0x00000000c0011684      0x4c2 core/unixfile.32
                0x00000000c0011684                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00116da                ReservedFilename::isAtty()
                0x00000000c00116f6                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011754                UnixFile::getFileDescriptor()
                0x00000000c001175c                UnixFile::UnixFile(int)
                0x00000000c001175c                UnixFile::UnixFile(int)
                0x00000000c001190c                ReservedFilename::ReservedFilename(int)
                0x00000000c001190c                ReservedFilename::ReservedFilename(int)
                0x00000000c001193e                UnixFile::~UnixFile()
                0x00000000c001193e                UnixFile::~UnixFile()
                0x00000000c00119d6                UnixFile::~UnixFile()
                0x00000000c00119fe                ReservedFilename::~ReservedFilename()
                0x00000000c00119fe                ReservedFilename::~ReservedFilename()
                0x00000000c0011a22                ReservedFilename::~ReservedFilename()
                0x00000000c0011a49                getFromFileDescriptor(int)
 .text          0x00000000c0011b46     0x12a2 core/virtmgr.32
                0x00000000c0011b46                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0011b7b                Virt::getPageState(unsigned long)
                0x00000000c0011b9f                Virt::allocateKernelVirtualPages(int)
                0x00000000c0011cb0                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0011cce                Virt::swapIDToSector(unsigned long)
                0x00000000c0011ce0                Virt::allocateSwapfilePage()
                0x00000000c0011d5e                Virt::virtualMemorySetup()
                0x00000000c0011ddd                Virt::swappingSetup()
                0x00000000c0011e3a                Virt::getAKernelVAS()
                0x00000000c0011e40                Virt::setupPageSwapping(int)
                0x00000000c0011f70                VAS::VAS()
                0x00000000c0011f70                VAS::VAS()
                0x00000000c0011fa0                VAS::VAS(VAS*)
                0x00000000c0011fa0                VAS::VAS(VAS*)
                0x00000000c0011fc4                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0011ff0                VAS::getPageTableEntry(unsigned long)
                0x00000000c001200f                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0012132                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0012156                VAS::virtualToPhysical(unsigned long)
                0x00000000c001216e                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c00121ae                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00121e0                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c001220a                VAS::~VAS()
                0x00000000c001220a                VAS::~VAS()
                0x00000000c0012376                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0012476                VAS::allocatePages(int, int)
                0x00000000c001264e                VAS::setCPUSpecific(unsigned long)
                0x00000000c001266a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0012730                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c001281e                VAS::VAS(bool)
                0x00000000c001281e                VAS::VAS(bool)
                0x00000000c0012a7a                VAS::evict(unsigned long)
                0x00000000c0012b32                VAS::scanForEviction(int, int)
                0x00000000c0012bf8                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0012d2c                mapVASFirstTime
 .text          0x00000000c0012de8       0x95 coreobjs/c++.32
                0x00000000c0012de8                __cxa_atexit
                0x00000000c0012deb                __cxa_finalize
                0x00000000c0012dec                __stack_chk_fail
                0x00000000c0012e58                __cxa_pure_virtual
                0x00000000c0012e69                operator new[](unsigned long)
                0x00000000c0012e6e                operator delete(void*, unsigned long)
                0x00000000c0012e73                operator delete[](void*)
                0x00000000c0012e78                operator delete[](void*, unsigned long)
 .text          0x00000000c0012e7d      0x1ef dbg/kconsole.32
                0x00000000c0012e7d                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0012ede                Dbg::logc(char)
                0x00000000c0012ef5                Dbg::logs(char*)
                0x00000000c0012f12                Dbg::logWriteInt(unsigned int)
                0x00000000c0012f2f                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0012f4e                Dbg::kprintf(char const*, ...)
 .text          0x00000000c001306c      0xb7c fs/vfs.32
                0x00000000c001306c                File::read(unsigned long long, void*, int*)
                0x00000000c00130c4                File::write(unsigned long long, void*, int*)
                0x00000000c001311c                Directory::read(unsigned long long, void*, int*)
                0x00000000c0013174                Directory::write(unsigned long long, void*, int*)
                0x00000000c00131a2                File::isAtty()
                0x00000000c00131a6                Directory::isAtty()
                0x00000000c00131aa                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00131b0                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c00131b6                File::~File()
                0x00000000c00131b6                File::~File()
                0x00000000c00131da                File::~File()
                0x00000000c0013204                Directory::~Directory()
                0x00000000c0013204                Directory::~Directory()
                0x00000000c0013228                Directory::~Directory()
                0x00000000c0013252                Filesystem::Filesystem()
                0x00000000c0013252                Filesystem::Filesystem()
                0x00000000c0013276                Filesystem::~Filesystem()
                0x00000000c0013276                Filesystem::~Filesystem()
                0x00000000c0013284                Filesystem::~Filesystem()
                0x00000000c00132a8                Fs::getcwd(Process*, char*, int)
                0x00000000c00132d2                Fs::initVFS()
                0x00000000c00132fc                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c00134a6                File::File(char const*, Process*)
                0x00000000c00134a6                File::File(char const*, Process*)
                0x00000000c001350a                File::open(FileOpenMode)
                0x00000000c0013568                File::close()
                0x00000000c00135c8                File::seek(unsigned long long)
                0x00000000c001361e                File::tell(unsigned long long*)
                0x00000000c001366e                File::rewind()
                0x00000000c0013682                File::unlink()
                0x00000000c00136ce                File::rename(char const*)
                0x00000000c001371c                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0013778                File::exists()
                0x00000000c00137b6                File::stat(unsigned long long*, bool*)
                0x00000000c0013817                Fs::setcwd(Process*, char*)
                0x00000000c0013952                Directory::Directory(char const*, Process*)
                0x00000000c0013952                Directory::Directory(char const*, Process*)
                0x00000000c00139b6                Directory::open()
                0x00000000c0013a12                Directory::close()
                0x00000000c0013a72                Directory::unlink()
                0x00000000c0013abe                Directory::rename(char const*)
                0x00000000c0013b0c                Directory::exists()
                0x00000000c0013b4a                Directory::read(dirent*)
                0x00000000c0013b96                Directory::create()
                0x00000000c0013be2                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0013be8       0x84 hal/bus.32
                0x00000000c0013be8                Bus::Bus(char const*)
                0x00000000c0013be8                Bus::Bus(char const*)
                0x00000000c0013c1e                Bus::~Bus()
                0x00000000c0013c1e                Bus::~Bus()
                0x00000000c0013c42                Bus::~Bus()
 .text          0x00000000c0013c6c      0x14e hal/buzzer.32
                0x00000000c0013c6c                Buzzer::Buzzer(char const*)
                0x00000000c0013c6c                Buzzer::Buzzer(char const*)
                0x00000000c0013cb0                Buzzer::~Buzzer()
                0x00000000c0013cb0                Buzzer::~Buzzer()
                0x00000000c0013cd4                Buzzer::~Buzzer()
                0x00000000c0013cfe                Buzzer::stop()
                0x00000000c0013d11                beepThread(void*)
                0x00000000c0013d4c                Buzzer::beep(int, int, bool)
 .text          0x00000000c0013dba      0x467 hal/clock.32
                0x00000000c0013dba                User::loadClockSettings(int)
                0x00000000c0013e0c                Clock::Clock(char const*)
                0x00000000c0013e0c                Clock::Clock(char const*)
                0x00000000c0013e42                Clock::~Clock()
                0x00000000c0013e42                Clock::~Clock()
                0x00000000c0013e66                Clock::~Clock()
                0x00000000c0013e90                Clock::timeInSecondsLocal()
                0x00000000c0013ed8                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0013f31                datetimeToSeconds(datetime_t)
                0x00000000c0014058                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c00140b8                secondsToDatetime(unsigned long long)
                0x00000000c00141fc                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0014221        0x1 
 .text          0x00000000c0014222      0x4de hal/device.32
                0x00000000c0014222                Device::hibernate()
                0x00000000c0014224                Device::wake()
                0x00000000c0014226                Device::detect()
                0x00000000c0014228                Device::disableLegacy()
                0x00000000c001422a                Device::powerSaving(PowerSavingLevel)
                0x00000000c001422c                DriverlessDevice::close(int, int, void*)
                0x00000000c0014230                DriverlessDevice::detect()
                0x00000000c0014232                DriverlessDevice::open(int, int, void*)
                0x00000000c0014246                Device::~Device()
                0x00000000c0014246                Device::~Device()
                0x00000000c0014254                Device::~Device()
                0x00000000c001427c                Device::findAndLoadDriver()
                0x00000000c001427e                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00142a4                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00142f8                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0014336                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0014374                Device::addChild(Device*)
                0x00000000c00143b8                Device::removeAllChildren()
                0x00000000c00143fe                Device::hibernateAll()
                0x00000000c001442e                Device::wakeAll()
                0x00000000c001445e                Device::detectAll()
                0x00000000c001448e                Device::disableLegacyAll()
                0x00000000c00144be                Device::loadDriversForAll()
                0x00000000c00144ea                Device::closeAll()
                0x00000000c0014520                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0014556                Device::setName(char const*)
                0x00000000c0014564                Device::Device(char const*)
                0x00000000c0014564                Device::Device(char const*)
                0x00000000c0014660                Device::getName()
                0x00000000c001466a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c001466a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0014692                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c00146d6                getDevicesOfType(DeviceType)
 .text          0x00000000c0014700       0x84 hal/diskctrl.32
                0x00000000c0014700                HardDiskController::HardDiskController(char const*)
                0x00000000c0014700                HardDiskController::HardDiskController(char const*)
                0x00000000c0014736                HardDiskController::~HardDiskController()
                0x00000000c0014736                HardDiskController::~HardDiskController()
                0x00000000c001475a                HardDiskController::~HardDiskController()
 .text          0x00000000c0014784       0xf2 hal/diskphys.32
                0x00000000c0014784                PhysicalDisk::eject()
                0x00000000c0014798                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0014798                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0014800                PhysicalDisk::startCache()
                0x00000000c0014828                PhysicalDisk::~PhysicalDisk()
                0x00000000c0014828                PhysicalDisk::~PhysicalDisk()
                0x00000000c001484c                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0014876      0x13b hal/fpu.32
                0x00000000c0014876                FPU::FPU(char const*)
                0x00000000c0014876                FPU::FPU(char const*)
                0x00000000c00148ac                FPU::~FPU()
                0x00000000c00148ac                FPU::~FPU()
                0x00000000c00148d0                FPU::~FPU()
                0x00000000c00148fa                setupFPU()
 *fill*         0x00000000c00149b1        0x1 
 .text          0x00000000c00149b2     0x13a7 hal/intctrl.32
                0x00000000c00149b2                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c00149ea                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0014a3c                doubleFault(regs*, void*)
                0x00000000c0014a56                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0014af2                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0014b9a                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0014c21                nmiHandler(regs*, void*)
                0x00000000c0014c2f                int_handler
                0x00000000c0014cd0                InterruptController::InterruptController(char const*)
                0x00000000c0014cd0                InterruptController::InterruptController(char const*)
                0x00000000c0014d76                InterruptController::~InterruptController()
                0x00000000c0014d76                InterruptController::~InterruptController()
                0x00000000c0014d9a                InterruptController::~InterruptController()
                0x00000000c0014dc4                displayDebugInfo(regs*)
                0x00000000c0015253                x87EmulHandler(regs*, void*)
                0x00000000c0015282                gpFault(regs*, void*)
                0x00000000c00152bb                pgFault(regs*, void*)
                0x00000000c00152f7                otherISRHandler(regs*, void*)
                0x00000000c0015316                opcodeFault(regs*, void*)
                0x00000000c001591c                displayProgramFault(char const*)
                0x00000000c0015944                setupInterruptController()
                0x00000000c0015d0c                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c0015d59        0x1 
 .text          0x00000000c0015d5a      0x6c8 hal/keybrd.32
                0x00000000c0015d5a                startGUI(void*)
                0x00000000c0015db6                startGUIVESA(void*)
                0x00000000c0015e12                sendKeyToTerminal(unsigned char)
                0x00000000c0015e7e                sendKeyboardToken(KeyboardToken)
                0x00000000c00162bb                clearInternalKeybuffer(VgaText*)
                0x00000000c00162f0                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0016398                Keyboard::Keyboard(char const*)
                0x00000000c0016398                Keyboard::Keyboard(char const*)
                0x00000000c00163d4                Keyboard::~Keyboard()
                0x00000000c00163d4                Keyboard::~Keyboard()
                0x00000000c00163f8                Keyboard::~Keyboard()
 .text          0x00000000c0016422      0x414 hal/logidisk.32
                0x00000000c0016422                LogicalDisk::close(int, int, void*)
                0x00000000c0016426                LogicalDisk::~LogicalDisk()
                0x00000000c0016426                LogicalDisk::~LogicalDisk()
                0x00000000c001644a                LogicalDisk::~LogicalDisk()
                0x00000000c0016474                LogicalDisk::open(int, int, void*)
                0x00000000c0016488                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c00164c0                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0016506                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0016506                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00165bc                LogicalDisk::assignDriveLetter()
                0x00000000c0016672                LogicalDisk::mount()
                0x00000000c00166e4                LogicalDisk::unmount()
                0x00000000c00166f4                LogicalDisk::eject()
                0x00000000c0016708                LogicalDisk::unassignDriveLetter()
                0x00000000c001675e                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c00167ca                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c0016836       0x84 hal/mouse.32
                0x00000000c0016836                Mouse::Mouse(char const*)
                0x00000000c0016836                Mouse::Mouse(char const*)
                0x00000000c001686c                Mouse::~Mouse()
                0x00000000c001686c                Mouse::~Mouse()
                0x00000000c0016890                Mouse::~Mouse()
 .text          0x00000000c00168ba      0x34d hal/partition.32
                0x00000000c00168ba                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0016976                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0016c07        0x1 
 .text          0x00000000c0016c08       0x84 hal/serial.32
                0x00000000c0016c08                Serial::Serial(char const*)
                0x00000000c0016c08                Serial::Serial(char const*)
                0x00000000c0016c3e                Serial::~Serial()
                0x00000000c0016c3e                Serial::~Serial()
                0x00000000c0016c62                Serial::~Serial()
 .text          0x00000000c0016c8c      0x2b8 hal/timer.32
                0x00000000c0016c8c                Timer::Timer(char const*)
                0x00000000c0016c8c                Timer::Timer(char const*)
                0x00000000c0016cc2                Timer::~Timer()
                0x00000000c0016cc2                Timer::~Timer()
                0x00000000c0016ce6                Timer::~Timer()
                0x00000000c0016d10                Timer::read()
                0x00000000c0016d1b                timerHandler(unsigned long long)
                0x00000000c0016e52                setupTimer(int)
 .text          0x00000000c0016f44      0x425 hal/vcache.32
                0x00000000c0016f44                VCache::VCache(PhysicalDisk*)
                0x00000000c0016f44                VCache::VCache(PhysicalDisk*)
                0x00000000c00170ac                VCache::invalidateReadBuffer()
                0x00000000c00170bc                VCache::writeWriteBuffer()
                0x00000000c00170f8                VCache::~VCache()
                0x00000000c00170f8                VCache::~VCache()
                0x00000000c001714c                VCache::~VCache()
                0x00000000c0017174                VCache::write(unsigned long long, int, void*)
                0x00000000c001726a                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c0017369        0x1 
 .text          0x00000000c001736a      0x4cd hal/video.32
                0x00000000c001736a                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c00173b6                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c0017426                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c00174a4                Video::clearScreen(unsigned int)
                0x00000000c00174d8                Video::putpixel(int, int, unsigned int)
                0x00000000c00174e6                Video::Video(char const*)
                0x00000000c00174e6                Video::Video(char const*)
                0x00000000c001751c                Video::~Video()
                0x00000000c001751c                Video::~Video()
                0x00000000c0017540                Video::~Video()
                0x00000000c001756a                Video::isMonochrome()
                0x00000000c0017576                Video::getWidth()
                0x00000000c0017582                Video::getHeight()
                0x00000000c001758e                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c001764a                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c00177cc                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c0017837        0x1 
 .text          0x00000000c0017838      0xf64 hw/acpi.32
                0x00000000c0017838                ACPI::close(int, int, void*)
                0x00000000c00178ed                findRSDP()
                0x00000000c0017977                loadACPITables(unsigned char*)
                0x00000000c0017b9e                findRSDT(unsigned char*)
                0x00000000c0017cbc                findDataTable(unsigned char*, char*)
                0x00000000c0017d58                scanMADT()
                0x00000000c00181de                ACPI::ACPI()
                0x00000000c00181de                ACPI::ACPI()
                0x00000000c0018248                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c001832a                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c00183f0                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c00183f6                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c001843e                ACPI::open(int, int, void*)
                0x00000000c0018784                ACPI::sleep()
 .text          0x00000000c001879c     0x1715 hw/cpu.32
                0x00000000c001879c                CPU::close(int, int, void*)
                0x00000000c00187a0                CPU::lookupAMDName(unsigned char, unsigned char)
                0x00000000c0018934                CPU::lookupIntelName(unsigned char, unsigned char)
                0x00000000c0018be2                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0018bfe                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0018c16                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0018c8a                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018d0e                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0018d3c                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0018d6a                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018d98                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018dc6                CPU::CPU()
                0x00000000c0018dc6                CPU::CPU()
                0x00000000c0018e54                CPU::displayFeatures()
                0x00000000c00190d0                CPU::detectFeatures()
                0x00000000c0019ac0                CPU::setupSMEP()
                0x00000000c0019acc                CPU::setupUMIP()
                0x00000000c0019ad6                CPU::setupTSC()
                0x00000000c0019ae0                CPU::setupLargePages()
                0x00000000c0019aea                CPU::setupPAT()
                0x00000000c0019b26                CPU::setupMTRR()
                0x00000000c0019b28                CPU::setupGlobalPages()
                0x00000000c0019b32                CPU::allowUsermodeDataAccess()
                0x00000000c0019b44                CPU::prohibitUsermodeDataAccess()
                0x00000000c0019b56                CPU::setupSMAP()
                0x00000000c0019b64                CPU::setupFeatures()
                0x00000000c0019be4                CPU::open(int, int, void*)
                0x00000000c0019cb6                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0019eb1        0x0 hw/ports.32
 .text          0x00000000c0019eb1      0x16a hw/smp.32
                0x00000000c0019eb1                Krnl::smpEntry()
                0x00000000c0019eb3                Krnl::startCPU(int)
                0x00000000c0019ffc                Krnl::startCPUs()
 *fill*         0x00000000c001a01b        0x1 
 .text          0x00000000c001a01c      0x5d3 krnl/env.32
                0x00000000c001a01c                EnvVarContainer::getEnv(char const*)
                0x00000000c001a05a                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001a126                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001a128                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001a31e                EnvVarContainer::__loadSystem()
                0x00000000c001a338                EnvVarContainer::__loadUser()
                0x00000000c001a33a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001a33a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001a35c                EnvVarContainer::~EnvVarContainer()
                0x00000000c001a35c                EnvVarContainer::~EnvVarContainer()
                0x00000000c001a38c                Krnl::getEnv(Process*, char const*)
                0x00000000c001a3f1                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001a40b                Krnl::setEnvUser(char const*, char const*)
                0x00000000c001a42a                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c001a43d                Krnl::deleteEnvSystem(char const*)
                0x00000000c001a43e                Krnl::deleteEnvUser(char const*)
                0x00000000c001a43f                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c001a440                Krnl::newProcessEnv(Process*)
                0x00000000c001a462                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c001a4b6                Krnl::loadSystemEnv()
                0x00000000c001a4e4                Krnl::loadUserEnv()
                0x00000000c001a50a                Krnl::flushEnv()
                0x00000000c001a50b                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001a52b                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001a5ef      0x396 krnl/panic.32
                0x00000000c001a5ef                Krnl::panic(char const*)
 .text          0x00000000c001a985      0x3b6 net/ethernet.32
                0x00000000c001a985                Net::switchEndian16(unsigned short)
                0x00000000c001a9a6                Net::switchEndian32(unsigned int)
                0x00000000c001a9d5                Net::crc32Calc(unsigned char*, int)
                0x00000000c001aa66                Net::wrapEthernetFrame(Net::UnwrappedEthernetFrame, unsigned char*)
                0x00000000c001aba2                Net::unwrapEthernetFrame(unsigned char*, int)
 .text          0x00000000c001ad3b      0x513 reg/registry.32
                0x00000000c001ad3b                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c001ae93                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001afe8                Reg::getLine(char*, char*, char*)
                0x00000000c001b01f                Reg::readInt(char*, char*, int*)
                0x00000000c001b10a                Reg::readString(char*, char*, char*, int)
                0x00000000c001b18b                Reg::readBool(char*, char*, bool*)
                0x00000000c001b1b0                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001b1dc                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001b208                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001b24e       0x36 sys/sc_eject.32
                0x00000000c001b24e                Sys::eject(regs*)
 .text          0x00000000c001b284       0x18 sys/sc_exit.32
                0x00000000c001b284                Sys::exit(regs*)
 .text          0x00000000c001b29c       0x1f sys/sc_getcwd.32
                0x00000000c001b29c                Sys::getCwd(regs*)
 .text          0x00000000c001b2bb        0xc sys/sc_getpid.32
                0x00000000c001b2bb                Sys::getPID(regs*)
 .text          0x00000000c001b2c7       0x17 sys/sc_getramdata.32
                0x00000000c001b2c7                Sys::getRAMData(regs*)
 .text          0x00000000c001b2de       0xa8 sys/sc_loaddll.32
                0x00000000c001b2de                Sys::loadDLL(regs*)
 .text          0x00000000c001b386       0x68 sys/sc_read.32
                0x00000000c001b386                Sys::read(regs*)
 .text          0x00000000c001b3ee       0x55 sys/sc_sbrk.32
                0x00000000c001b3ee                Sys::sbrk(regs*)
 .text          0x00000000c001b443       0x1c sys/sc_setcwd.32
                0x00000000c001b443                Sys::setCwd(regs*)
 .text          0x00000000c001b45f      0x128 sys/sc_settime.32
                0x00000000c001b45f                Sys::setTime(regs*)
 .text          0x00000000c001b587       0x4a sys/sc_timezone.32
                0x00000000c001b587                Sys::timezone(regs*)
 .text          0x00000000c001b5d1       0x68 sys/sc_write.32
                0x00000000c001b5d1                Sys::write(regs*)
 .text          0x00000000c001b639       0x62 sys/sc_wsbe.32
                0x00000000c001b639                Sys::wsbe(regs*)
 .text          0x00000000c001b69b       0x3b sys/sc_yield.32
                0x00000000c001b69b                Sys::yield(regs*)
 .text          0x00000000c001b6d6     0x10e5 sys/syscalls.32
                0x00000000c001b6d6                sysCallSeekDir(regs*)
                0x00000000c001b6db                sysCallTellDir(regs*)
                0x00000000c001b6e0                sysCallVerify(regs*)
                0x00000000c001b6ea                sysFormatDisk(regs*)
                0x00000000c001b754                sysSetDiskVolumeLabel(regs*)
                0x00000000c001b79a                sysGetDiskVolumeLabel(regs*)
                0x00000000c001b7eb                sysShutdown(regs*)
                0x00000000c001b849                sysCallRealpath(regs*)
                0x00000000c001b88c                sysCallGetArgc(regs*)
                0x00000000c001b8ba                sysCallReadDir(regs*)
                0x00000000c001b948                sysCallIsATTY(regs*)
                0x00000000c001b9a2                sysCallSeek(regs*)
                0x00000000c001ba0b                sysCallTell(regs*)
                0x00000000c001ba88                sysCallSize(regs*)
                0x00000000c001bb0b                sysCallSizeFromFilename(regs*)
                0x00000000c001bbcb                sysCallClose(regs*)
                0x00000000c001bc53                sysCallOpenDir(regs*)
                0x00000000c001bcc8                sysCallCloseDir(regs*)
                0x00000000c001bd2e                sysCallMakeDir(regs*)
                0x00000000c001bd9e                sysCallWait(regs*)
                0x00000000c001bdb8                sysCallNotImpl(regs*)
                0x00000000c001bdd3                sysPanic(regs*)
                0x00000000c001bdf9                sysCallRmdir(regs*)
                0x00000000c001be5d                sysCallUnlink(regs*)
                0x00000000c001bec1                sysCallGetArgv(regs*)
                0x00000000c001bf0d                sysCallTTYName(regs*)
                0x00000000c001bf90                sysCallUSleep(regs*)
                0x00000000c001bfb7                sysCallSpawn(regs*)
                0x00000000c001c00f                sysCallGetEnv(regs*)
                0x00000000c001c147                sysAppSettings(regs*)
                0x00000000c001c266                sysSetFatAttrib(regs*)
                0x00000000c001c2d8                sysPipe(regs*)
                0x00000000c001c31d                sysGetUnixTime(regs*)
                0x00000000c001c331                string_ends_with(char const*, char const*)
                0x00000000c001c379                sysCallOpen(regs*)
                0x00000000c001c58e                Sys::loadSyscalls()
                0x00000000c001c779                Sys::systemCall(regs*, void*)
 .text          0x00000000c001c7bb     0x11d4 thr/elf.32
                0x00000000c001c7bb                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001ca4d                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001cc63                Thr::runtimeReferenceHelper()
                0x00000000c001cc76                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001ccc5                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001cf83                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001d69f                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001d6d1                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001d708                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001d722                Thr::loadDLL(char const*, bool)
                0x00000000c001d956                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001d98f        0x1 
 .text          0x00000000c001d990     0x1056 thr/prcssthr.32
                0x00000000c001d990                changeTSS
                0x00000000c001d9c0                Process::addArgs(char**)
                0x00000000c001da1a                Process::Process(char const*, Process*, char**)
                0x00000000c001da1a                Process::Process(char const*, Process*, char**)
                0x00000000c001dbfe                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001dbfe                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001ddad                disableIRQs()
                0x00000000c001ddb5                getIRQNestingLevel()
                0x00000000c001ddbb                enableIRQs()
                0x00000000c001ddca                lockScheduler()
                0x00000000c001ddcc                unlockScheduler()
                0x00000000c001ddce                userModeEntryPoint(void*)
                0x00000000c001ddf1                lockStuff()
                0x00000000c001ddfd                taskStartupFunction
                0x00000000c001de06                updateTimeUsed()
                0x00000000c001de6b                switchToThread(ThreadControlBlock*)
                0x00000000c001debc                Semaphore::Semaphore(int)
                0x00000000c001debc                Semaphore::Semaphore(int)
                0x00000000c001deea                Mutex::Mutex()
                0x00000000c001deea                Mutex::Mutex()
                0x00000000c001defc                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001dfe0                Process::createUserThread()
                0x00000000c001dffc                setupMultitasking(void (*)())
                0x00000000c001e106                schedule()
                0x00000000c001e18b                unlockStuff()
                0x00000000c001e1c0                Semaphore::tryAcquire()
                0x00000000c001e1ee                Semaphore::assertLocked(char const*)
                0x00000000c001e21e                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001e260                blockTask(TaskState)
                0x00000000c001e281                waitTask(int, int*, int)
                0x00000000c001e2c3                nanoSleepUntil(unsigned long long)
                0x00000000c001e31a                nanoSleep(unsigned long long)
                0x00000000c001e32f                sleep(unsigned long long)
                0x00000000c001e34c                Semaphore::acquire()
                0x00000000c001e3b4                taskReturned
                0x00000000c001e3e2                unblockTask(ThreadControlBlock*)
                0x00000000c001e491                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001e75a                cleanerTaskFunction(void*)
                0x00000000c001e80d                terminateTask(int)
                0x00000000c001e8ed                Thr::terminateFromIRQ(int)
                0x00000000c001e8fa                Semaphore::release()
 .text          0x00000000c001e9e6      0xc26 vm86/vm8086.32
                0x00000000c001e9e6                Vm::inbv(unsigned short)
                0x00000000c001e9f9                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001ea4c                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001ea5c                Vm::getSegment(unsigned int)
                0x00000000c001ea64                Vm::getOffset(unsigned int)
                0x00000000c001ea69                Vm::mainloop2()
                0x00000000c001eaa4                Vm::mainVm8086Loop(void*)
                0x00000000c001eab1                Vm::mainloop3(unsigned long)
                0x00000000c001eadb                Vm::initialise8086()
                0x00000000c001eb1e                Vm::finish8086()
                0x00000000c001eb63                Vm::getOutput8086(unsigned char*)
                0x00000000c001eb8d                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001ecdd                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001ed67                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001ed78                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001ed8a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001ed9b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001edb0                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001edc6                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001eddb                Vm::faultHandler(regs*)
 .text          0x00000000c001f60c      0xefd vm86/x87em.32
                0x00000000c001f60c                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c001f667                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c001f670                Vm::fpu32ToInternal(unsigned int)
                0x00000000c001f6b5                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c001f6be                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c001f719                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c001f74f                Vm::fpuLongToFloat(long long)
                0x00000000c001f7a5                Vm::fpuGet0()
                0x00000000c001f7aa                Vm::fpuGet1()
                0x00000000c001f7b2                Vm::fpuGetPi()
                0x00000000c001f7ba                Vm::fpuGetLog2E()
                0x00000000c001f7d2                Vm::fpuGetLogE2()
                0x00000000c001f7ea                Vm::fpuGetLog210()
                0x00000000c001f802                Vm::fpuGetLog102()
                0x00000000c001f81a                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c001f82e                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c001f844                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c001f897                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c001f8a8                Vm::fpuAbs(unsigned long long)
                0x00000000c001f8b1                Vm::fpuChs(unsigned long long)
                0x00000000c001f8c1                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c001f8d0                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c001f8ef                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c001f90b                Vm::fpuSquare(unsigned long long)
                0x00000000c001f921                Vm::fpuGetReg(int)
                0x00000000c001f964                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c001f9af                Vm::fpuPush(unsigned long long)
                0x00000000c001fa0c                Vm::fpuPop()
                0x00000000c001fa5e                Vm::x87Handler(regs*)
 *fill*         0x00000000c0020509        0x1 
 .text          0x00000000c002050a     0x10ed fs/fat/vfslink.32
                0x00000000c002050a                FAT::getName()
                0x00000000c0020510                FAT::tell(void*, unsigned long long*)
                0x00000000c0020544                FAT::stat(void*, unsigned long long*)
                0x00000000c0020578                FAT::~FAT()
                0x00000000c0020578                FAT::~FAT()
                0x00000000c002059c                FAT::~FAT()
                0x00000000c00205c4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0020662                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c002071c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0020900                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0020b06                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0020c0c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0020c66                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0020cc0                FAT::close(void*)
                0x00000000c0020d0c                FAT::closeDir(void*)
                0x00000000c0020d58                FAT::seek(void*, unsigned long long)
                0x00000000c0020dac                fatWrapperReadDisk
                0x00000000c0020df3                fatWrapperWriteDisk
                0x00000000c0020e3a                fatWrapperIoctl
                0x00000000c0020f3e                FAT::FAT()
                0x00000000c0020f3e                FAT::FAT()
                0x00000000c0020f90                FAT::fixFilepath(char*)
                0x00000000c0020fc8                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00210f0                FAT::openDir(char const*, void**)
                0x00000000c0021196                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0021280                FAT::unlink(char const*)
                0x00000000c00212fa                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c002144e                FAT::rename(char const*, char const*)
                0x00000000c0021512                FAT::mkdir(char const*)
                0x00000000c002158c                FAT::exists(char const*)
 *fill*         0x00000000c00215f7        0x1 
 .text          0x00000000c00215f8      0xbc1 fs/iso9660/vfslink.32
                0x00000000c00215f8                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00215fe                ISO9660::seek(void*, unsigned long long)
                0x00000000c002162e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0021652                ISO9660::getName()
                0x00000000c0021658                ISO9660::stat(void*, unsigned long long*)
                0x00000000c002167c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0021682                ISO9660::unlink(char const*)
                0x00000000c0021688                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c002168e                ISO9660::rename(char const*, char const*)
                0x00000000c0021694                ISO9660::mkdir(char const*)
                0x00000000c002169a                ISO9660::close(void*)
                0x00000000c00216bc                ISO9660::closeDir(void*)
                0x00000000c00216de                ISO9660::~ISO9660()
                0x00000000c00216de                ISO9660::~ISO9660()
                0x00000000c0021702                ISO9660::~ISO9660()
                0x00000000c0021729                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c002176b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c00217d2                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0021822                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0021a22                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0021caf                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0021d04                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c0021ed7                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c0021f66                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0022026                ISO9660::exists(char const*)
                0x00000000c002204a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c00220de                ISO9660::openDir(char const*, void**)
                0x00000000c0022196                ISO9660::ISO9660()
                0x00000000c0022196                ISO9660::ISO9660()
 *fill*         0x00000000c00221b9        0x1 
 .text          0x00000000c00221ba      0x326 hal/sound/sndchannel.32
                0x00000000c00221ba                SoundChannel::~SoundChannel()
                0x00000000c00221ba                SoundChannel::~SoundChannel()
                0x00000000c00221d6                SoundChannel::setSpeed(float)
                0x00000000c00221e2                SoundChannel::getSpeed()
                0x00000000c00221ea                SoundChannel::setVolume(int)
                0x00000000c0022206                SoundChannel::getVolume()
                0x00000000c002220e                SoundChannel::pause()
                0x00000000c0022218                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c0022218                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c002236e                SoundChannel::play()
                0x00000000c0022378                SoundChannel::paused()
                0x00000000c0022380                SoundChannel::getSampleRate()
                0x00000000c0022388                SoundChannel::getBits()
                0x00000000c0022390                SoundChannel::getBufferUsed()
                0x00000000c0022398                SoundChannel::getBufferSize()
                0x00000000c00223a0                SoundChannel::unbuffer(float*, int, int)
                0x00000000c0022440                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c00224e0      0x3d5 hal/sound/sndhw.32
                0x00000000c00224e0                SoundDevice::SoundDevice(char const*)
                0x00000000c00224e0                SoundDevice::SoundDevice(char const*)
                0x00000000c002254c                SoundDevice::~SoundDevice()
                0x00000000c002254c                SoundDevice::~SoundDevice()
                0x00000000c00225c6                SoundDevice::~SoundDevice()
                0x00000000c00225f0                SoundDevice::getFreeChannelNum()
                0x00000000c002260a                SoundDevice::addChannel(SoundChannel*)
                0x00000000c002267a                SoundDevice::removeChannel(int)
                0x00000000c00226ac                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c0022794                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c00228b5        0x0 hw/bus/isa.32
 *fill*         0x00000000c00228b5        0x1 
 .text          0x00000000c00228b6      0x6c3 hw/bus/pci.32
                0x00000000c00228b6                PCI::open(int, int, void*)
                0x00000000c00228ca                PCI::close(int, int, void*)
                0x00000000c00228ce                PCI::PCI()
                0x00000000c00228ce                PCI::PCI()
                0x00000000c002294e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0022996                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c00229b8                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c00229dc                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a20                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a44                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a66                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a88                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0022aac                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0022b0c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0022b78                PCI::checkBus(unsigned char)
                0x00000000c0022b9c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0022d0e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0022eba                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0022f26                PCI::detect()
 *fill*         0x00000000c0022f79        0x1 
 .text          0x00000000c0022f7a      0xc70 hw/diskctrl/ide.32
                0x00000000c0022f7a                IDE::close(int, int, void*)
                0x00000000c0022f7e                IDE::IDE()
                0x00000000c0022f7e                IDE::IDE()
                0x00000000c0022fb2                IDE::prepareInterrupt(unsigned char)
                0x00000000c0022fc4                selectDrive(unsigned char, unsigned char)
                0x00000000c0022fc6                IDE::getBase(unsigned char)
                0x00000000c0022fd8                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0023098                IDE::read(unsigned char, unsigned char)
                0x00000000c0023146                IDE::waitInterrupt(unsigned char)
                0x00000000c00231ac                ideChannel0IRQHandler(regs*, void*)
                0x00000000c00231c8                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00231e4                IDE::enableIRQs(unsigned char, bool)
                0x00000000c002322a                IDE::open(int, int, void*)
                0x00000000c002363a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0023706                IDE::detect()
                0x00000000c00239ee                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0023b84                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0023bea      0x390 hw/diskctrl/satabus.32
                0x00000000c0023bea                SATABus::close(int, int, void*)
                0x00000000c0023bee                SATABus::detect()
                0x00000000c0023bf0                SATABus::SATABus()
                0x00000000c0023bf0                SATABus::SATABus()
                0x00000000c0023c9c                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023ce4                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023d2c                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023d4c                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023d76                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0023e7c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0023f5a                SATABus::open(int, int, void*)
 .text          0x00000000c0023f7a      0x63c hw/diskphys/ata.32
                0x00000000c0023f7a                ATA::close(int, int, void*)
                0x00000000c0023f9e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0023fa0                ATA::ATA()
                0x00000000c0023fa0                ATA::ATA()
                0x00000000c0023fce                ATA::flush(bool)
                0x00000000c0024018                ATA::readyForCommand()
                0x00000000c0024068                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c00243f0                ATA::read(unsigned long long, int, void*)
                0x00000000c0024458                ATA::write(unsigned long long, int, void*)
                0x00000000c00244c0                ATA::detectCHS()
                0x00000000c00244ea                ATA::open(int, int, void*)
 .text          0x00000000c00245b6      0x5bd hw/diskphys/atapi.32
                0x00000000c00245b6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c00245bc                ATAPI::close(int, int, void*)
                0x00000000c00245e0                ATAPI::ATAPI()
                0x00000000c00245e0                ATAPI::ATAPI()
                0x00000000c002460e                ATAPI::readyForCommand()
                0x00000000c002465e                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c002491e                ATAPI::diskRemoved()
                0x00000000c002493a                ATAPI::eject()
                0x00000000c0024982                ATAPI::diskInserted()
                0x00000000c00249b0                ATAPI::detectMedia()
                0x00000000c0024a6c                ATAPI::open(int, int, void*)
                0x00000000c0024af4                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0024b73        0x1 
 .text          0x00000000c0024b74      0x455 hw/diskphys/sata.32
                0x00000000c0024b74                SATA::close(int, int, void*)
                0x00000000c0024b98                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0024b9a                SATA::open(int, int, void*)
                0x00000000c0024c48                SATA::SATA()
                0x00000000c0024c48                SATA::SATA()
                0x00000000c0024c76                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0024edc                SATA::read(unsigned long long, int, void*)
                0x00000000c0024f44                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c0024fc9        0x1 
 .text          0x00000000c0024fca      0x500 hw/diskphys/satapi.32
                0x00000000c0024fca                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0024fd0                SATAPI::close(int, int, void*)
                0x00000000c0024ff4                SATAPI::SATAPI()
                0x00000000c0024ff4                SATAPI::SATAPI()
                0x00000000c0025022                SATAPI::diskRemoved()
                0x00000000c002503e                SATAPI::diskInserted()
                0x00000000c002506c                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0025270                SATAPI::eject()
                0x00000000c00252b8                SATAPI::detectMedia()
                0x00000000c002537a                SATAPI::open(int, int, void*)
                0x00000000c0025428                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c00254ca       0x8e hw/fpu/avx.32
                0x00000000c00254ca                AVX::open(int, int, void*)
                0x00000000c00254dc                AVX::close(int, int, void*)
                0x00000000c00254ee                AVX::available()
                0x00000000c0025500                AVX::save(void*)
                0x00000000c0025518                AVX::load(void*)
                0x00000000c0025530                AVX::AVX()
                0x00000000c0025530                AVX::AVX()
 .text          0x00000000c0025558       0x90 hw/fpu/mmx.32
                0x00000000c0025558                MMX::available()
                0x00000000c002556c                MMX::open(int, int, void*)
                0x00000000c002557e                MMX::close(int, int, void*)
                0x00000000c0025590                MMX::save(void*)
                0x00000000c00255a8                MMX::load(void*)
                0x00000000c00255c0                MMX::MMX()
                0x00000000c00255c0                MMX::MMX()
 .text          0x00000000c00255e8       0x96 hw/fpu/sse.32
                0x00000000c00255e8                SSE::open(int, int, void*)
                0x00000000c00255fa                SSE::close(int, int, void*)
                0x00000000c002560c                SSE::available()
                0x00000000c0025626                SSE::save(void*)
                0x00000000c002563e                SSE::load(void*)
                0x00000000c0025656                SSE::SSE()
                0x00000000c0025656                SSE::SSE()
 .text          0x00000000c002567e       0x8e hw/fpu/x87.32
                0x00000000c002567e                x87::open(int, int, void*)
                0x00000000c0025690                x87::close(int, int, void*)
                0x00000000c00256a2                x87::available()
                0x00000000c00256b4                x87::save(void*)
                0x00000000c00256cc                x87::load(void*)
                0x00000000c00256e4                x87::x87()
                0x00000000c00256e4                x87::x87()
 .text          0x00000000c002570c      0x71e hw/intctrl/apic.32
                0x00000000c002570c                APIC::disable()
                0x00000000c002570e                APIC::close(int, int, void*)
                0x00000000c0025730                IOAPIC::close(int, int, void*)
                0x00000000c0025736                APIC::io_wait()
                0x00000000c002573c                APIC::getBase()
                0x00000000c002577e                APIC::eoi(unsigned char)
                0x00000000c00257ac                APIC::open(int, int, void*)
                0x00000000c00258fa                IOAPIC::IOAPIC()
                0x00000000c00258fa                IOAPIC::IOAPIC()
                0x00000000c0025922                APIC::APIC()
                0x00000000c0025922                APIC::APIC()
                0x00000000c00259fe                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0025a30                IOAPIC::read(int)
                0x00000000c0025a58                IOAPIC::open(int, int, void*)
                0x00000000c0025b4e                IOAPIC::write(int, int)
                0x00000000c0025b7a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
                0x00000000c0025c74                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 .text          0x00000000c0025e2a      0x3d3 hw/intctrl/pic.32
                0x00000000c0025e2a                PIC::disable()
                0x00000000c0025e58                PIC::close(int, int, void*)
                0x00000000c0025e7a                PIC::PIC()
                0x00000000c0025e7a                PIC::PIC()
                0x00000000c0025f50                PIC::ioWait()
                0x00000000c0025f56                PIC::getIRQReg(int)
                0x00000000c0025fc0                PIC::eoi(unsigned char)
                0x00000000c0026052                PIC::remap()
                0x00000000c00261be                PIC::open(int, int, void*)
 *fill*         0x00000000c00261fd        0x1 
 .text          0x00000000c00261fe      0x25e hw/timer/apictimer.32
                0x00000000c00261fe                APICTimer::close(int, int, void*)
                0x00000000c0026204                apicTimerHandler(regs*, void*)
                0x00000000c0026232                APICTimer::write(int)
                0x00000000c0026336                APICTimer::open(int, int, void*)
                0x00000000c0026434                APICTimer::APICTimer()
                0x00000000c0026434                APICTimer::APICTimer()
 .text          0x00000000c002645c      0x1a7 hw/timer/pit.32
                0x00000000c002645c                PIT::write(int)
                0x00000000c00264da                pitHandler(regs*, void*)
                0x00000000c0026506                PIT::open(int, int, void*)
                0x00000000c0026554                PIT::close(int, int, void*)
                0x00000000c0026584                PIT::PIT()
                0x00000000c0026584                PIT::PIT()
 *fill*         0x00000000c0026603        0xd 
 .text          0x00000000c0026610       0x1e hw/fpu/x86/avx.32
                0x00000000c0026610                avxDetect
                0x00000000c0026616                avxSave
                0x00000000c0026617                avxLoad
                0x00000000c0026618                avxInit
                0x00000000c0026619                avxClose
                0x00000000c002661a                wouldSheSayYes
 *fill*         0x00000000c002662e        0x2 
 .text          0x00000000c0026630       0x35 hw/fpu/x86/sse.32
                0x00000000c0026630                absolutelyNoChanceInHell
                0x00000000c0026630                sseDetect
                0x00000000c0026648                sseSave
                0x00000000c002664e                sseLoad
                0x00000000c0026654                sseInit
                0x00000000c0026664                sseClose
 *fill*         0x00000000c0026665        0xb 
 .text          0x00000000c0026670       0x47 hw/fpu/x86/x87.32
                0x00000000c0026676                x87Detect
                0x00000000c0026691                x87Save
                0x00000000c0026697                x87Load
                0x00000000c002669c                x87Init
                0x00000000c00266b6                x87Close
 *fill*         0x00000000c00266b7        0x1 
 .text          0x00000000c00266b8       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00266dd        0x0 crtn.32
 *fill*         0x00000000c00266dd        0x3 
 .text          0x00000000c00266e0      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00266e0                __divdi3
 *fill*         0x00000000c002682b        0x1 
 .text          0x00000000c002682c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c002682c                __moddi3
 *fill*         0x00000000c00269aa        0x2 
 .text          0x00000000c00269ac       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c00269ac                __udivdi3
 *fill*         0x00000000c0026aab        0x1 
 .text          0x00000000c0026aac      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0026aac                __umoddi3
 .text          0x00000000c0026bc6      0x96d D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                0x00000000c0026bc6                __addsf3
                0x00000000c0026ec8                __subsf3
                0x00000000c0026edc                __negsf2
                0x00000000c0026ee9                __mulsf3
                0x00000000c00270ac                __divsf3
                0x00000000c00272d7                __floatsisf
                0x00000000c002734b                __floatunsisf
                0x00000000c002738d                __fixsfsi
                0x00000000c00273ef                __fixunssfsi
                0x00000000c0027420                __cmpsf2
                0x00000000c00274b5                __eqsf2
                0x00000000c00274f0                __nesf2
                0x00000000c00274f2                __gtsf2
                0x00000000c002752d                __gesf2
                0x00000000c002752f                __ltsf2
                0x00000000c0027531                __lesf2
 .text          0x00000000c0027533      0xf50 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                0x00000000c0027533                __adddf3
                0x00000000c0027b84                __subdf3
                0x00000000c0027b9f                __negdf2
                0x00000000c0027bb0                __muldf3
                0x00000000c0027e94                __divdf3
                0x00000000c0028213                __floatsidf
                0x00000000c002826e                __floatunsidf
                0x00000000c00282ac                __fixdfsi
                0x00000000c0028319                __fixunsdfsi
                0x00000000c0028355                __cmpdf2
                0x00000000c0028443                __eqdf2
                0x00000000c002845f                __nedf2
                0x00000000c0028461                __gtdf2
                0x00000000c002847d                __gedf2
                0x00000000c002847f                __ltdf2
                0x00000000c0028481                __ledf2
 .text          0x00000000c0028483      0x18d D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                0x00000000c0028483                __truncdfsf2
                0x00000000c00285a7                __extendsfdf2
 .text          0x00000000c0028610       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c0028610                fabs
 *fill*         0x00000000c002862e        0x2 
 .text          0x00000000c0028630        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c0028630                lrint
 .text          0x00000000c002863c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c002863c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0028648        0x0
 .iplt          0x00000000c0028648        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0028648        0xf
 .init          0x00000000c0028648        0x3 crti.32
                0x00000000c0028648                _init
 .init          0x00000000c002864b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0028650        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0028655        0x2 crtn.32

.fini           0x00000000c0028657        0xa
 .fini          0x00000000c0028657        0x3 crti.32
                0x00000000c0028657                _fini
 .fini          0x00000000c002865a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c002865f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c0028662       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0028662       0x23 core/computer.32
                0x00000000c0028662                Computer::~Computer()
                0x00000000c0028662                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0028686       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0028686       0x2a core/computer.32
                0x00000000c0028686                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c00286b0       0x15
 .text._Z10idleCommonv
                0x00000000c00286b0       0x15 core/idle.32
                0x00000000c00286b0                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00286c6        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00286c6        0x2 core/unixfile.32
                0x00000000c00286c6                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00286c6                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00286c8       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00286c8       0x58 core/unixfile.32
                0x00000000c00286c8                LinkedList<UnixFile>::LinkedList()
                0x00000000c00286c8                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0028720       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0028720       0xd3 core/unixfile.32
                0x00000000c0028720                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00287f4        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00287f4        0x7 core/unixfile.32
                0x00000000c00287f4                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00287fc       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00287fc       0xa1 core/unixfile.32
                0x00000000c00287fc                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002889e        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002889e        0x8 core/unixfile.32
                0x00000000c002889e                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00288a6       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c00288a6       0x1a hal/device.32
                0x00000000c00288a6                DriverlessDevice::~DriverlessDevice()
                0x00000000c00288a6                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c00288c0       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c00288c0       0x2a hal/device.32
                0x00000000c00288c0                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00288ea       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00288ea       0xdc hal/device.32
                0x00000000c00288ea                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c00289c6       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c00289c6       0x58 hal/device.32
                0x00000000c00289c6                LinkedList<Device>::LinkedList()
                0x00000000c00289c6                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0028a1e        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0028a1e        0x7 hal/timer.32
                0x00000000c0028a1e                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0028a26       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0028a26       0x1c hal/timer.32
                0x00000000c0028a26                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0028a42       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0028a42       0xae hal/timer.32
                0x00000000c0028a42                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0028af0       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0028af0       0xd3 hal/timer.32
                0x00000000c0028af0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0028bc4       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0028bc4       0x23 hw/acpi.32
                0x00000000c0028bc4                ACPI::~ACPI()
                0x00000000c0028bc4                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0028be8       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0028be8       0x2a hw/acpi.32
                0x00000000c0028be8                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c0028c12       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0028c12       0x23 hw/cpu.32
                0x00000000c0028c12                CPU::~CPU()
                0x00000000c0028c12                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0028c36       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0028c36       0x2a hw/cpu.32
                0x00000000c0028c36                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0028c60        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0028c60        0x2 thr/prcssthr.32
                0x00000000c0028c60                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0028c60                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0028c62       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0028c62       0x3e thr/prcssthr.32
                0x00000000c0028c62                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0028c62                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0028ca0       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0028ca0       0x58 thr/prcssthr.32
                0x00000000c0028ca0                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0028ca0                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0028cf8        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0028cf8        0x8 thr/prcssthr.32
                0x00000000c0028cf8                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0028d00        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0028d00        0xd vm86/x87em.32
                0x00000000c0028d00                Vm::_FPUState::_FPUState()
                0x00000000c0028d00                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c0028d0e       0x23
 .text._ZN3PCID2Ev
                0x00000000c0028d0e       0x23 hw/bus/pci.32
                0x00000000c0028d0e                PCI::~PCI()
                0x00000000c0028d0e                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0028d32       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0028d32       0x2a hw/bus/pci.32
                0x00000000c0028d32                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0028d5c       0x23
 .text._ZN3IDED2Ev
                0x00000000c0028d5c       0x23 hw/diskctrl/ide.32
                0x00000000c0028d5c                IDE::~IDE()
                0x00000000c0028d5c                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0028d80       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0028d80       0x2a hw/diskctrl/ide.32
                0x00000000c0028d80                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0028daa       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0028daa       0x23 hw/diskctrl/satabus.32
                0x00000000c0028daa                SATABus::~SATABus()
                0x00000000c0028daa                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0028dce       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0028dce       0x2a hw/diskctrl/satabus.32
                0x00000000c0028dce                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0028df8       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0028df8       0x23 hw/diskphys/ata.32
                0x00000000c0028df8                ATA::~ATA()
                0x00000000c0028df8                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0028e1c       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0028e1c       0x2a hw/diskphys/ata.32
                0x00000000c0028e1c                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0028e46       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0028e46       0x23 hw/diskphys/atapi.32
                0x00000000c0028e46                ATAPI::~ATAPI()
                0x00000000c0028e46                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0028e6a       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0028e6a       0x2a hw/diskphys/atapi.32
                0x00000000c0028e6a                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0028e94       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0028e94       0x23 hw/diskphys/sata.32
                0x00000000c0028e94                SATA::~SATA()
                0x00000000c0028e94                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0028eb8       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0028eb8       0x2a hw/diskphys/sata.32
                0x00000000c0028eb8                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0028ee2       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0028ee2       0x23 hw/diskphys/satapi.32
                0x00000000c0028ee2                SATAPI::~SATAPI()
                0x00000000c0028ee2                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0028f06       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0028f06       0x2a hw/diskphys/satapi.32
                0x00000000c0028f06                SATAPI::~SATAPI()

.text._ZN3AVXD2Ev
                0x00000000c0028f30       0x23
 .text._ZN3AVXD2Ev
                0x00000000c0028f30       0x23 hw/fpu/avx.32
                0x00000000c0028f30                AVX::~AVX()
                0x00000000c0028f30                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c0028f54       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c0028f54       0x2a hw/fpu/avx.32
                0x00000000c0028f54                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c0028f7e       0x23
 .text._ZN3MMXD2Ev
                0x00000000c0028f7e       0x23 hw/fpu/mmx.32
                0x00000000c0028f7e                MMX::~MMX()
                0x00000000c0028f7e                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c0028fa2       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c0028fa2       0x2a hw/fpu/mmx.32
                0x00000000c0028fa2                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c0028fcc       0x23
 .text._ZN3SSED2Ev
                0x00000000c0028fcc       0x23 hw/fpu/sse.32
                0x00000000c0028fcc                SSE::~SSE()
                0x00000000c0028fcc                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c0028ff0       0x2a
 .text._ZN3SSED0Ev
                0x00000000c0028ff0       0x2a hw/fpu/sse.32
                0x00000000c0028ff0                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c002901a       0x23
 .text._ZN3x87D2Ev
                0x00000000c002901a       0x23 hw/fpu/x87.32
                0x00000000c002901a                x87::~x87()
                0x00000000c002901a                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c002903e       0x2a
 .text._ZN3x87D0Ev
                0x00000000c002903e       0x2a hw/fpu/x87.32
                0x00000000c002903e                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c0029068       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0029068       0x23 hw/intctrl/apic.32
                0x00000000c0029068                IOAPIC::~IOAPIC()
                0x00000000c0029068                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002908c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002908c       0x2a hw/intctrl/apic.32
                0x00000000c002908c                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c00290b6       0x23
 .text._ZN4APICD2Ev
                0x00000000c00290b6       0x23 hw/intctrl/apic.32
                0x00000000c00290b6                APIC::~APIC()
                0x00000000c00290b6                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c00290da       0x2a
 .text._ZN4APICD0Ev
                0x00000000c00290da       0x2a hw/intctrl/apic.32
                0x00000000c00290da                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c0029104       0x23
 .text._ZN3PICD2Ev
                0x00000000c0029104       0x23 hw/intctrl/pic.32
                0x00000000c0029104                PIC::~PIC()
                0x00000000c0029104                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c0029128       0x2a
 .text._ZN3PICD0Ev
                0x00000000c0029128       0x2a hw/intctrl/pic.32
                0x00000000c0029128                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0029152       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0029152       0x23 hw/timer/apictimer.32
                0x00000000c0029152                APICTimer::~APICTimer()
                0x00000000c0029152                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0029176       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0029176       0x2a hw/timer/apictimer.32
                0x00000000c0029176                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00291a0       0x23
 .text._ZN3PITD2Ev
                0x00000000c00291a0       0x23 hw/timer/pit.32
                0x00000000c00291a0                PIT::~PIT()
                0x00000000c00291a0                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00291c4       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00291c4       0x2a hw/timer/pit.32
                0x00000000c00291c4                PIT::~PIT()

.rodata         0x00000000c00291ee     0x40ce
                0x00000000c00291ee                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00291ee        0x2 
 .ctors         0x00000000c00291f0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00291f4        0x4 core/unixfile.32
 .ctors         0x00000000c00291f8        0x4 thr/prcssthr.32
 .ctors         0x00000000c00291fc        0x4 vm86/x87em.32
 .ctors         0x00000000c0029200        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0029204                end_ctors = .
                0x00000000c0029204                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0029204        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0029208        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0029208                __DTOR_END__
                0x00000000c002920c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c002920c       0x14 
 .rodata        0x00000000c0029220      0x101 acpica/utclib.32
                0x00000000c0029220                AcpiGbl_Ctypes
 *fill*         0x00000000c0029321        0x3 
 .rodata        0x00000000c0029324       0x18 core/malloc.32
 *fill*         0x00000000c002933c        0x4 
 .rodata        0x00000000c0029340      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c0029460       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c00294b6        0xa 
 .rodata        0x00000000c00294c0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00298c0       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c0029976        0x2 
 .rodata.str1.4
                0x00000000c0029978      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c0029d1d        0x3 
 .rodata        0x00000000c0029d20       0x60 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c0029d80       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c0029dc2        0x2 
 .rodata        0x00000000c0029dc4       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c0029e30       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0029ef4       0x4a hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0029f3e       0x48 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c0029f86       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c0029fcf      0x1d0 core/computer.32
                                        0x1d2 (size before relaxing)
 *fill*         0x00000000c002a19f        0x1 
 .rodata._ZTV8Computer
                0x00000000c002a1a0       0x2c core/computer.32
                0x00000000c002a1a0                vtable for Computer
 .rodata.str1.1
                0x00000000c002a1cc       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c002a1e8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c002a218        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c002a224       0x62 core/main.32
                                         0x63 (size before relaxing)
 .rodata.str1.1
                0x00000000c002a286       0x5f core/physmgr.32
 *fill*         0x00000000c002a2e5        0x3 
 .rodata.str1.4
                0x00000000c002a2e8       0x4d core/physmgr.32
 .rodata.str1.1
                0x00000000c002a335       0x39 core/pipe.32
 *fill*         0x00000000c002a36e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c002a370       0x1c core/pipe.32
                0x00000000c002a370                vtable for Pipe
 .rodata.str1.1
                0x00000000c002a38c       0x9d core/terminal.32
 *fill*         0x00000000c002a429        0x3 
 .rodata._ZTV7VgaText
                0x00000000c002a42c       0x1c core/terminal.32
                0x00000000c002a42c                vtable for VgaText
 .rodata        0x00000000c002a448       0x1e core/tss.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c002a466       0x19 core/unixfile.32
 *fill*         0x00000000c002a47f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002a480       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002a4a2       0x15 core/unixfile.32
 *fill*         0x00000000c002a4b7        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002a4b8       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002a503        0x8 core/unixfile.32
 *fill*         0x00000000c002a50b        0x1 
 .rodata.str1.4
                0x00000000c002a50c       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c002a52c       0x1c core/unixfile.32
                0x00000000c002a52c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c002a548       0x1c core/unixfile.32
                0x00000000c002a548                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002a564      0x187 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002a6eb      0x161 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002a84c       0x83 coreobjs/c++.32
 *fill*         0x00000000c002a8cf        0x1 
 .rodata.str1.4
                0x00000000c002a8d0       0x3f dbg/kconsole.32
 *fill*         0x00000000c002a90f        0x1 
 .rodata        0x00000000c002a910      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002aa60       0x83 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c002aa60       0x64 fs/vfs.32
                0x00000000c002aa60                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002aac4       0x1c fs/vfs.32
                0x00000000c002aac4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c002aae0       0x1c fs/vfs.32
                0x00000000c002aae0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002aafc       0x2c hal/bus.32
                0x00000000c002aafc                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c002ab28       0x30 hal/buzzer.32
                0x00000000c002ab28                vtable for Buzzer
 .rodata.str1.1
                0x00000000c002ab58       0x1e hal/clock.32
 *fill*         0x00000000c002ab76        0x2 
 .rodata._ZTV5Clock
                0x00000000c002ab78       0x3c hal/clock.32
                0x00000000c002ab78                vtable for Clock
 *fill*         0x00000000c002abb4        0xc 
 .rodata        0x00000000c002abc0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c002abf0       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c002ac0e       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c002ac0e       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c002ac0e       0x19 hal/device.32
 *fill*         0x00000000c002ac0e        0x2 
 .rodata._ZTV6Device
                0x00000000c002ac10       0x2c hal/device.32
                0x00000000c002ac10                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c002ac3c       0x2c hal/device.32
                0x00000000c002ac3c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c002ac68       0x2c hal/diskctrl.32
                0x00000000c002ac68                vtable for HardDiskController
 .rodata.str1.1
                0x00000000c002ac94       0x27 hal/diskphys.32
 *fill*         0x00000000c002acbb        0x1 
 .rodata._ZTV12PhysicalDisk
                0x00000000c002acbc       0x38 hal/diskphys.32
                0x00000000c002acbc                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c002acf4        0x9 hal/fpu.32
 *fill*         0x00000000c002acfd        0x3 
 .rodata._ZTV3FPU
                0x00000000c002ad00       0x38 hal/fpu.32
                0x00000000c002ad00                vtable for FPU
 .rodata        0x00000000c002ad38      0x34d hal/intctrl.32
 *fill*         0x00000000c002b085        0x3 
 .rodata._ZTV19InterruptController
                0x00000000c002b088       0x48 hal/intctrl.32
                0x00000000c002b088                vtable for InterruptController
 .rodata        0x00000000c002b0d0       0x4f hal/keybrd.32
 *fill*         0x00000000c002b11f        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c002b120       0x34 hal/keybrd.32
                0x00000000c002b120                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002b154       0x7a hal/logidisk.32
 *fill*         0x00000000c002b1ce        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c002b1d0       0x2c hal/logidisk.32
                0x00000000c002b1d0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c002b1fc       0x2c hal/mouse.32
                0x00000000c002b1fc                vtable for Mouse
 .rodata.str1.1
                0x00000000c002b228       0x2d hal/partition.32
 *fill*         0x00000000c002b255        0x3 
 .rodata._ZTV6Serial
                0x00000000c002b258       0x44 hal/serial.32
                0x00000000c002b258                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002b29c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002b29c        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002b29c       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002b29c       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c002b29c       0x30 hal/timer.32
                0x00000000c002b29c                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c002b2cc       0x10 hal/vcache.32
                0x00000000c002b2cc                vtable for VCache
 .rodata.str1.1
                0x00000000c002b2dc       0x7c hal/video.32
 .rodata._ZTV5Video
                0x00000000c002b358       0x48 hal/video.32
                0x00000000c002b358                vtable for Video
 .rodata.str1.1
                0x00000000c002b3a0      0x122 hw/acpi.32
 *fill*         0x00000000c002b4c2        0x2 
 .rodata.str1.4
                0x00000000c002b4c4       0xbe hw/acpi.32
 *fill*         0x00000000c002b582        0x2 
 .rodata._ZTV4ACPI
                0x00000000c002b584       0x2c hw/acpi.32
                0x00000000c002b584                vtable for ACPI
 .rodata.str1.1
                0x00000000c002b5b0      0x3c1 hw/cpu.32
                                        0x3ce (size before relaxing)
 *fill*         0x00000000c002b971        0x3 
 .rodata._ZTV3CPU
                0x00000000c002b974       0x2c hw/cpu.32
                0x00000000c002b974                vtable for CPU
 .rodata.str1.1
                0x00000000c002b9a0       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c002b9b1       0x89 krnl/env.32
 .rodata.str1.1
                0x00000000c002ba3a       0xbe krnl/panic.32
                                         0xc5 (size before relaxing)
 .rodata.str1.4
                0x00000000c002baf8      0x13e krnl/panic.32
 *fill*         0x00000000c002bc36        0x2 
 .rodata.str1.4
                0x00000000c002bc38       0x4c net/ethernet.32
 .rodata.str1.1
                0x00000000c002bc84       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c002bcc9       0x38 sys/sc_settime.32
 .rodata.str1.1
                0x00000000c002bd01       0x77 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c002bd78       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c002bda4      0x115 sys/syscalls.32
                                        0x133 (size before relaxing)
 *fill*         0x00000000c002beb9        0x3 
 .rodata.str1.4
                0x00000000c002bebc       0x6f sys/syscalls.32
 .rodata.str1.1
                0x00000000c002bf2b      0x254 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c002c17f       0xfb thr/prcssthr.32
 *fill*         0x00000000c002c27a        0x2 
 .rodata.str1.4
                0x00000000c002c27c      0x2a7 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c002c523       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002c523       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002c523       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002c523       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002c523        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002c523      0x19f vm86/vm8086.32
 *fill*         0x00000000c002c6c2        0x2 
 .rodata        0x00000000c002c6c4       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002c6f4       0x58 vm86/x87em.32
 .rodata        0x00000000c002c74c       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c002c788       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c002c7db        0x1 
 .rodata.str1.4
                0x00000000c002c7dc       0x25 fs/fat/vfslink.32
 *fill*         0x00000000c002c801        0x3 
 .rodata._ZTV3FAT
                0x00000000c002c804       0x64 fs/fat/vfslink.32
                0x00000000c002c804                vtable for FAT
 .rodata.str1.1
                0x00000000c002c868       0x5c fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002c8c4       0x64 fs/iso9660/vfslink.32
                0x00000000c002c8c4                vtable for ISO9660
 .rodata.str1.1
                0x00000000c002c928       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c002c942        0x2 
 .rodata.cst4   0x00000000c002c944        0x8 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c002c94c       0x38 hal/sound/sndhw.32
                0x00000000c002c94c                vtable for SoundDevice
 .rodata.str1.1
                0x00000000c002c984       0x62 hw/bus/pci.32
 *fill*         0x00000000c002c9e6        0x2 
 .rodata._ZTV3PCI
                0x00000000c002c9e8       0x2c hw/bus/pci.32
                0x00000000c002c9e8                vtable for PCI
 .rodata.str1.1
                0x00000000c002ca14      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c002cc4a        0x2 
 .rodata._ZTV3IDE
                0x00000000c002cc4c       0x2c hw/diskctrl/ide.32
                0x00000000c002cc4c                vtable for IDE
 .rodata.str1.4
                0x00000000c002cc78       0x48 hw/diskctrl/satabus.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c002ccc0       0x6a hw/diskctrl/satabus.32
 *fill*         0x00000000c002cd2a        0x2 
 .rodata._ZTV7SATABus
                0x00000000c002cd2c       0x2c hw/diskctrl/satabus.32
                0x00000000c002cd2c                vtable for SATABus
 .rodata.str1.1
                0x00000000c002cd58       0x1d hw/diskphys/ata.32
                                         0x2c (size before relaxing)
 *fill*         0x00000000c002cd75        0x3 
 .rodata._ZTV3ATA
                0x00000000c002cd78       0x38 hw/diskphys/ata.32
                0x00000000c002cd78                vtable for ATA
 .rodata.str1.1
                0x00000000c002cdb0       0x1d hw/diskphys/atapi.32
                                         0x38 (size before relaxing)
 .rodata._ZTV5ATAPI
                0x00000000c002cdb0       0x38 hw/diskphys/atapi.32
                0x00000000c002cdb0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002cde8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c002ce64       0x38 hw/diskphys/sata.32
                0x00000000c002ce64                vtable for SATA
 .rodata.str1.1
                0x00000000c002ce9c       0xa3 hw/diskphys/satapi.32
                                         0xb1 (size before relaxing)
 *fill*         0x00000000c002cf3f        0x1 
 .rodata._ZTV6SATAPI
                0x00000000c002cf40       0x38 hw/diskphys/satapi.32
                0x00000000c002cf40                vtable for SATAPI
 .rodata.str1.1
                0x00000000c002cf78        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c002cf80       0x38 hw/fpu/avx.32
                0x00000000c002cf80                vtable for AVX
 .rodata.str1.1
                0x00000000c002cfb8        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c002cfc0       0x38 hw/fpu/mmx.32
                0x00000000c002cfc0                vtable for MMX
 .rodata.str1.1
                0x00000000c002cff8        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c002d000       0x38 hw/fpu/sse.32
                0x00000000c002d000                vtable for SSE
 .rodata.str1.1
                0x00000000c002d038        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c002d040       0x38 hw/fpu/x87.32
                0x00000000c002d040                vtable for x87
 .rodata        0x00000000c002d078       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c002d150       0x48 hw/intctrl/apic.32
                0x00000000c002d150                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c002d198       0x2c hw/intctrl/apic.32
                0x00000000c002d198                vtable for IOAPIC
 .rodata        0x00000000c002d1c4       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c002d1e6        0x2 
 .rodata._ZTV3PIC
                0x00000000c002d1e8       0x48 hw/intctrl/pic.32
                0x00000000c002d1e8                vtable for PIC
 .rodata.str1.1
                0x00000000c002d230        0xb hw/timer/apictimer.32
 *fill*         0x00000000c002d23b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002d23c       0x30 hw/timer/apictimer.32
                0x00000000c002d23c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002d26c       0x1d hw/timer/pit.32
 *fill*         0x00000000c002d289        0x3 
 .rodata._ZTV3PIT
                0x00000000c002d28c       0x30 hw/timer/pit.32
                0x00000000c002d28c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002d2bc      0x699
 *(.data)
 .data          0x00000000c002d2bc        0x0 crti.32
 .data          0x00000000c002d2bc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002d2bc                __dso_handle
 .data          0x00000000c002d2c0        0x0 acpica/utclib.32
 .data          0x00000000c002d2c0        0x0 core/malloc.32
 .data          0x00000000c002d2c0        0x0 libk/string.32
 .data          0x00000000c002d2c0        0x0 fs/fat/diskio.32
 .data          0x00000000c002d2c0        0x0 fs/fat/ff.32
 .data          0x00000000c002d2c0        0x0 fs/fat/ffsystem.32
 .data          0x00000000c002d2c0        0x0 fs/fat/ffunicode.32
 .data          0x00000000c002d2c0        0x0 hal/libresample/samplerate.32
 .data          0x00000000c002d2c0        0x0 hal/libresample/src_linear.32
 .data          0x00000000c002d2c0        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c002d2c0        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c002d2c0        0x0 compat/inlines.32
 .data          0x00000000c002d2c0        0x0 compat/resolve.32
 .data          0x00000000c002d2c0        0x0 core/computer.32
 .data          0x00000000c002d2c0        0x0 core/gdt.32
 .data          0x00000000c002d2c0        0x0 core/idle.32
 .data          0x00000000c002d2c0        0x0 core/idt.32
 .data          0x00000000c002d2c0        0x4 core/kheap.32
 .data          0x00000000c002d2c4        0x0 core/main.32
 .data          0x00000000c002d2c4        0x4 core/physmgr.32
                0x00000000c002d2c4                Phys::bitmap
 .data          0x00000000c002d2c8        0x0 core/pipe.32
 *fill*         0x00000000c002d2c8       0x18 
 .data          0x00000000c002d2e0       0x60 core/terminal.32
                0x00000000c002d2e0                VGA_TEXT_MODE_ADDRESS
                0x00000000c002d2e4                VgaText::hiddenOut
                0x00000000c002d300                ansiToVGAMappings
 .data          0x00000000c002d340        0x0 core/tss.32
 .data          0x00000000c002d340        0x4 core/unixfile.32
                0x00000000c002d340                UnixFile::nextFd
 .data          0x00000000c002d344       0x19 core/virtmgr.32
                0x00000000c002d348                Virt::pageAllocPtr
                0x00000000c002d34c                Virt::bitmap
                0x00000000c002d350                Virt::swapfileSectorsPerPage
                0x00000000c002d354                Virt::swapfileLength
                0x00000000c002d358                Virt::swapfileSector
                0x00000000c002d35c                Virt::swapfileDrive
 *fill*         0x00000000c002d35d        0x3 
 .data          0x00000000c002d360        0x4 coreobjs/c++.32
                0x00000000c002d360                __stack_chk_guard
 .data          0x00000000c002d364        0x0 dbg/kconsole.32
 .data          0x00000000c002d364        0x0 fs/vfs.32
 .data          0x00000000c002d364        0x0 hal/bus.32
 .data          0x00000000c002d364        0x0 hal/buzzer.32
 .data          0x00000000c002d364        0x0 hal/clock.32
 .data          0x00000000c002d364        0x0 hal/device.32
 .data          0x00000000c002d364        0x0 hal/diskctrl.32
 .data          0x00000000c002d364        0x0 hal/diskphys.32
 .data          0x00000000c002d364        0x0 hal/fpu.32
 *fill*         0x00000000c002d364       0x1c 
 .data          0x00000000c002d380      0x2a0 hal/intctrl.32
                0x00000000c002d380                exceptionNames
 .data          0x00000000c002d620        0x0 hal/keybrd.32
 .data          0x00000000c002d620        0x0 hal/logidisk.32
 .data          0x00000000c002d620        0x0 hal/mouse.32
 .data          0x00000000c002d620        0x0 hal/partition.32
 .data          0x00000000c002d620        0x0 hal/serial.32
 .data          0x00000000c002d620        0x0 hal/timer.32
 .data          0x00000000c002d620        0x0 hal/vcache.32
 .data          0x00000000c002d620        0x0 hal/video.32
 .data          0x00000000c002d620       0x10 hw/acpi.32
                0x00000000c002d620                legacyIRQRemaps
 *fill*         0x00000000c002d630       0x10 
 .data          0x00000000c002d640      0x2a4 hw/cpu.32
                0x00000000c002d640                cpuNameList
                0x00000000c002d8e0                lastCode
 .data          0x00000000c002d8e4        0x0 hw/ports.32
 .data          0x00000000c002d8e4        0x0 hw/smp.32
 *fill*         0x00000000c002d8e4       0x1c 
 .data          0x00000000c002d900       0x4d krnl/env.32
                0x00000000c002d900                defaultSysEnv
 .data          0x00000000c002d94d        0x0 krnl/panic.32
 .data          0x00000000c002d94d        0x0 net/ethernet.32
 .data          0x00000000c002d94d        0x0 reg/registry.32
 .data          0x00000000c002d94d        0x0 sys/sc_eject.32
 .data          0x00000000c002d94d        0x0 sys/sc_exit.32
 .data          0x00000000c002d94d        0x0 sys/sc_getcwd.32
 .data          0x00000000c002d94d        0x0 sys/sc_getpid.32
 .data          0x00000000c002d94d        0x0 sys/sc_getramdata.32
 .data          0x00000000c002d94d        0x0 sys/sc_loaddll.32
 .data          0x00000000c002d94d        0x0 sys/sc_read.32
 .data          0x00000000c002d94d        0x0 sys/sc_sbrk.32
 .data          0x00000000c002d94d        0x0 sys/sc_setcwd.32
 .data          0x00000000c002d94d        0x0 sys/sc_settime.32
 .data          0x00000000c002d94d        0x0 sys/sc_timezone.32
 .data          0x00000000c002d94d        0x0 sys/sc_write.32
 .data          0x00000000c002d94d        0x0 sys/sc_wsbe.32
 .data          0x00000000c002d94d        0x0 sys/sc_yield.32
 .data          0x00000000c002d94d        0x0 sys/syscalls.32
 .data          0x00000000c002d94d        0x0 thr/elf.32
 *fill*         0x00000000c002d94d        0x3 
 .data          0x00000000c002d950        0x4 thr/prcssthr.32
                0x00000000c002d950                Thr::nextPID
 .data          0x00000000c002d954        0x0 vm86/vm8086.32
 .data          0x00000000c002d954        0x0 vm86/x87em.32
 .data          0x00000000c002d954        0x0 fs/fat/vfslink.32
 .data          0x00000000c002d954        0x1 fs/iso9660/vfslink.32
                0x00000000c002d954                recentDriveletter
 .data          0x00000000c002d955        0x0 hal/sound/sndchannel.32
 .data          0x00000000c002d955        0x0 hal/sound/sndhw.32
 .data          0x00000000c002d955        0x0 hw/bus/isa.32
 .data          0x00000000c002d955        0x0 hw/bus/pci.32
 .data          0x00000000c002d955        0x0 hw/diskctrl/ide.32
 .data          0x00000000c002d955        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c002d955        0x0 hw/diskphys/ata.32
 .data          0x00000000c002d955        0x0 hw/diskphys/atapi.32
 .data          0x00000000c002d955        0x0 hw/diskphys/sata.32
 .data          0x00000000c002d955        0x0 hw/diskphys/satapi.32
 .data          0x00000000c002d955        0x0 hw/fpu/avx.32
 .data          0x00000000c002d955        0x0 hw/fpu/mmx.32
 .data          0x00000000c002d955        0x0 hw/fpu/sse.32
 .data          0x00000000c002d955        0x0 hw/fpu/x87.32
 .data          0x00000000c002d955        0x0 hw/intctrl/apic.32
 .data          0x00000000c002d955        0x0 hw/intctrl/pic.32
 .data          0x00000000c002d955        0x0 hw/timer/apictimer.32
 .data          0x00000000c002d955        0x0 hw/timer/pit.32
 .data          0x00000000c002d955        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c002d955        0x0 crtn.32
 .data          0x00000000c002d955        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c002d955        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c002d955        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c002d955        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .data          0x00000000c002d955        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .data          0x00000000c002d955        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .data          0x00000000c002d955        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .data          0x00000000c002d955        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c002d955        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c002d955        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c002d958        0x0
 .got           0x00000000c002d958        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c002d958        0x0
 .got.plt       0x00000000c002d958        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c002d958        0x0
 .igot.plt      0x00000000c002d958        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c002d958        0x0
 .tm_clone_table
                0x00000000c002d958        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c002d958        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c002d955      0x633
 *(.eh_frame)
 *fill*         0x00000000c002d955        0x3 
 .eh_frame      0x00000000c002d958        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c002d958        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c002d958       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002d9b0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002d9f0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002da5c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c002dae0      0x218 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                                        0x230 (size before relaxing)
 .eh_frame      0x00000000c002dcf8      0x220 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                                        0x238 (size before relaxing)
 .eh_frame      0x00000000c002df18       0x58 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                                         0x70 (size before relaxing)
 .eh_frame      0x00000000c002df70       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c002df88        0x0
 .rel.got       0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c002df88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c002df88     0x4800
                0x00000000c002df88                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c002df88        0x0 crti.32
 .bss           0x00000000c002df88       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c002dfa8        0x4 acpica/utclib.32
 *fill*         0x00000000c002dfac       0x14 
 .bss           0x00000000c002dfc0      0x378 core/malloc.32
 .bss           0x00000000c002e338        0x0 libk/string.32
 .bss           0x00000000c002e338        0x0 fs/fat/diskio.32
 *fill*         0x00000000c002e338        0x8 
 .bss           0x00000000c002e340       0x88 fs/fat/ff.32
 .bss           0x00000000c002e3c8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c002e3c8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c002e3c8        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c002e3c8        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c002e3c8        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c002e3c8        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c002e3c8        0x0 compat/inlines.32
 .bss           0x00000000c002e3c8        0x0 compat/resolve.32
 .bss           0x00000000c002e3c8        0x6 core/computer.32
                0x00000000c002e3c8                Krnl::computer
                0x00000000c002e3cc                Krnl::preemptionOn
                0x00000000c002e3cd                Krnl::schedulingOn
 *fill*         0x00000000c002e3ce        0x2 
 .bss           0x00000000c002e3d0        0x6 core/gdt.32
                0x00000000c002e3d0                gdtDescr
 .bss           0x00000000c002e3d6        0x0 core/idle.32
 *fill*         0x00000000c002e3d6        0x2 
 .bss           0x00000000c002e3d8        0x6 core/idt.32
                0x00000000c002e3d8                idtDescr
 .bss           0x00000000c002e3de        0x0 core/kheap.32
 *fill*         0x00000000c002e3de        0x2 
 .bss           0x00000000c002e3e0        0x4 core/main.32
                0x00000000c002e3e0                sysBootSettings
 *fill*         0x00000000c002e3e4       0x1c 
 .bss           0x00000000c002e400       0x50 core/physmgr.32
                0x00000000c002e400                Phys::forbidEvictions
                0x00000000c002e404                Phys::currentPagePointer
                0x00000000c002e408                Phys::highestMem
                0x00000000c002e40c                Phys::oldPercent
                0x00000000c002e410                Phys::usedPages
                0x00000000c002e414                Phys::usablePages
                0x00000000c002e420                Phys::dmaUsage
 .bss           0x00000000c002e450        0x0 core/pipe.32
 *fill*         0x00000000c002e450       0x10 
 .bss           0x00000000c002e460       0x49 core/terminal.32
                0x00000000c002e460                vgamono
                0x00000000c002e480                textModeImplementation
                0x00000000c002e4a0                terminalCycle
                0x00000000c002e4a4                activeTerminal
                0x00000000c002e4a8                VgaText::graphicMode
 *fill*         0x00000000c002e4a9        0x1 
 .bss           0x00000000c002e4aa        0x2 core/tss.32
                0x00000000c002e4aa                doubleFaultSelector
 *fill*         0x00000000c002e4ac       0x14 
 .bss           0x00000000c002e4c0       0x84 core/unixfile.32
                0x00000000c002e4c0                sfileLpt
                0x00000000c002e500                sfileCom
                0x00000000c002e524                sfileNul
                0x00000000c002e528                sfilePnt
                0x00000000c002e52c                sfileAux
                0x00000000c002e530                sfileCon
                0x00000000c002e534                initialFilesAdded
                0x00000000c002e538                unixFileLinkedList
 .bss           0x00000000c002e544       0x10 core/virtmgr.32
                0x00000000c002e544                swapBalance
                0x00000000c002e548                Virt::swapfileBitmap
                0x00000000c002e54c                firstVAS
 .bss           0x00000000c002e554        0x0 coreobjs/c++.32
 .bss           0x00000000c002e554        0x0 dbg/kconsole.32
 .bss           0x00000000c002e554        0x4 fs/vfs.32
                0x00000000c002e554                installedFilesystems
 .bss           0x00000000c002e558        0x0 hal/bus.32
 .bss           0x00000000c002e558        0x4 hal/buzzer.32
                0x00000000c002e558                systemBuzzer
 .bss           0x00000000c002e55c        0x8 hal/clock.32
                0x00000000c002e55c                User::dstOn
                0x00000000c002e55d                User::timezoneHalfHourOffset
                0x00000000c002e560                User::timezoneHourOffset
 .bss           0x00000000c002e564        0x0 hal/device.32
 .bss           0x00000000c002e564        0x0 hal/diskctrl.32
 .bss           0x00000000c002e564        0x0 hal/diskphys.32
 .bss           0x00000000c002e564        0x0 hal/fpu.32
 .bss           0x00000000c002e564       0x1c hal/intctrl.32
                0x00000000c002e564                pf5
                0x00000000c002e568                pf4
                0x00000000c002e56c                pf3
                0x00000000c002e570                pf2
                0x00000000c002e574                pf1
                0x00000000c002e578                pf0
                0x00000000c002e57c                gpFaultIntercept
 .bss           0x00000000c002e580      0x429 hal/keybrd.32
                0x00000000c002e580                keyboardWaitingTaskList
                0x00000000c002e584                keyboardSetupYet
                0x00000000c002e588                guiKeyboardHandler
                0x00000000c002e5a0                keystates
 *fill*         0x00000000c002e9a9       0x17 
 .bss           0x00000000c002e9c0       0x88 hal/logidisk.32
                0x00000000c002e9c0                diskAssignments
                0x00000000c002e9e0                disks
 .bss           0x00000000c002ea48        0x4 hal/mouse.32
                0x00000000c002ea48                guiMouseHandler
 .bss           0x00000000c002ea4c        0x0 hal/partition.32
 .bss           0x00000000c002ea4c        0x0 hal/serial.32
 *fill*         0x00000000c002ea4c        0x4 
 .bss           0x00000000c002ea50        0x8 hal/timer.32
                0x00000000c002ea50                nanoSinceBoot
 *fill*         0x00000000c002ea58        0x8 
 .bss           0x00000000c002ea60     0x2000 hal/vcache.32
                0x00000000c002ea60                testBuffer
 .bss           0x00000000c0030a60        0x4 hal/video.32
                0x00000000c0030a60                screen
 *fill*         0x00000000c0030a64       0x1c 
 .bss           0x00000000c0030a80      0x480 hw/acpi.32
                0x00000000c0030a80                systemSleepFunction
                0x00000000c0030a84                systemResetFunction
                0x00000000c0030a88                systemShutdownFunction
                0x00000000c0030a8c                nextACPITable
                0x00000000c0030aa0                acpiTables
                0x00000000c0030ca0                usingXSDT
                0x00000000c0030ca4                MADTpointer
                0x00000000c0030ca8                RSDTpointer
                0x00000000c0030cac                RSDPpointer
                0x00000000c0030cb0                nextAPICNMI
                0x00000000c0030cc0                apicNMIInfo
                0x00000000c0030d40                legacyIRQFlags
                0x00000000c0030d60                ioapicDiscoveryNumber
                0x00000000c0030d80                ioapicFoundInMADT
                0x00000000c0030da0                ioapicAddresses
                0x00000000c0030e20                ioapicGSIBase
                0x00000000c0030ea0                processorDiscoveryNumber
                0x00000000c0030ec0                matchingAPICID
                0x00000000c0030ee0                processorID
 .bss           0x00000000c0030f00       0x10 hw/cpu.32
                0x00000000c0030f00                lastD
                0x00000000c0030f04                lastC
                0x00000000c0030f08                lastB
                0x00000000c0030f0c                lastA
 .bss           0x00000000c0030f10        0x0 hw/ports.32
 .bss           0x00000000c0030f10        0x1 hw/smp.32
                0x00000000c0030f10                Krnl::bspID
 *fill*         0x00000000c0030f11        0x3 
 .bss           0x00000000c0030f14        0x8 krnl/env.32
                0x00000000c0030f14                Krnl::userEnv
                0x00000000c0030f18                Krnl::systemEnv
 .bss           0x00000000c0030f1c        0x9 krnl/panic.32
                0x00000000c0030f1c                Krnl::guiProgramFaultHandler
                0x00000000c0030f20                Krnl::guiPanicHandler
                0x00000000c0030f24                Krnl::kernelInPanic
 .bss           0x00000000c0030f25        0x0 net/ethernet.32
 .bss           0x00000000c0030f25        0x0 reg/registry.32
 .bss           0x00000000c0030f25        0x0 sys/sc_eject.32
 .bss           0x00000000c0030f25        0x0 sys/sc_exit.32
 .bss           0x00000000c0030f25        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0030f25        0x0 sys/sc_getpid.32
 .bss           0x00000000c0030f25        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0030f25        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0030f25        0x0 sys/sc_read.32
 .bss           0x00000000c0030f25        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0030f25        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0030f25        0x0 sys/sc_settime.32
 .bss           0x00000000c0030f25        0x0 sys/sc_timezone.32
 .bss           0x00000000c0030f25        0x0 sys/sc_write.32
 .bss           0x00000000c0030f25        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0030f25        0x0 sys/sc_yield.32
 *fill*         0x00000000c0030f25       0x1b 
 .bss           0x00000000c0030f40      0x200 sys/syscalls.32
                0x00000000c0030f40                systemCallHandlers
 .bss           0x00000000c0031140      0x7a4 thr/elf.32
                0x00000000c0031140                Thr::driverLookupNext
                0x00000000c0031160                Thr::driverLookupLen
                0x00000000c0031360                Thr::driverLookupAddr
                0x00000000c0031560                Thr::driverNameLookup
                0x00000000c0031760                Thr::kernelSymbols
                0x00000000c00317e0                Thr::kernelStringTable
                0x00000000c0031860                Thr::kernelSymbolTable
                0x00000000c00318e0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00318e4        0x4 
 .bss           0x00000000c00318e8       0x68 thr/prcssthr.32
                0x00000000c00318e8                cleanerThread
                0x00000000c00318ec                weNeedTheCleanerToNotBlock
                0x00000000c00318f0                xxxx
                0x00000000c00318f4                retValLockStuff
                0x00000000c00318f8                retValSchedLock
                0x00000000c00318fc                lockStuffLock
                0x00000000c0031900                schedulerLock
                0x00000000c0031904                taskSwitchesPostponedFlag
                0x00000000c0031908                postponeTaskSwitchesCounter
                0x00000000c003190c                irqDisableCounter
                0x00000000c0031910                terminatedTaskList
                0x00000000c003191c                sleepingTaskList
                0x00000000c0031928                taskList
                0x00000000c0031934                kernelProcess
 *fill*         0x00000000c0031950       0x10 
 .bss           0x00000000c0031960       0x40 vm86/vm8086.32
                0x00000000c0031960                Vm::vmRetV
                0x00000000c0031964                Vm::vmDone
                0x00000000c0031965                Vm::vmReady
                0x00000000c0031968                Vm::vm86Thread
                0x00000000c003196c                Vm::vmToHostCommsPtr
                0x00000000c0031980                Vm::vmToHostComms
 .bss           0x00000000c00319a0       0x48 vm86/x87em.32
                0x00000000c00319a0                Vm::fpuState
 *fill*         0x00000000c00319e8       0x18 
 .bss           0x00000000c0031a00       0xf0 fs/fat/vfslink.32
                0x00000000c0031a00                FAT::fats
                0x00000000c0031a20                FAT::vfsToFatRemaps
                0x00000000c0031aa0                fatToVFSRemaps
 *fill*         0x00000000c0031af0       0x10 
 .bss           0x00000000c0031b00      0x820 fs/iso9660/vfslink.32
                0x00000000c0031b00                recentSector
                0x00000000c0031b20                recentBuffer
 .bss           0x00000000c0032320      0x401 hal/sound/sndchannel.32
                0x00000000c0032320                lookupTable8
                0x00000000c0032720                gotLookupTable
 .bss           0x00000000c0032721        0x0 hal/sound/sndhw.32
 .bss           0x00000000c0032721        0x0 hw/bus/isa.32
 .bss           0x00000000c0032721        0x0 hw/bus/pci.32
 .bss           0x00000000c0032721        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0032721        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0032721        0x3 
 .bss           0x00000000c0032724        0x8 hw/diskphys/ata.32
                0x00000000c0032724                ataSectorsWritten
                0x00000000c0032728                ataSectorsRead
 .bss           0x00000000c003272c        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c003272c        0x0 hw/diskphys/sata.32
 .bss           0x00000000c003272c        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c003272c        0x0 hw/fpu/avx.32
 .bss           0x00000000c003272c        0x0 hw/fpu/mmx.32
 .bss           0x00000000c003272c        0x0 hw/fpu/sse.32
 .bss           0x00000000c003272c        0x0 hw/fpu/x87.32
 *fill*         0x00000000c003272c       0x14 
 .bss           0x00000000c0032740       0x41 hw/intctrl/apic.32
                0x00000000c0032740                noOfIOAPICs
                0x00000000c0032760                ioapics
                0x00000000c0032780                IOAPICsSetupYet
 .bss           0x00000000c0032781        0x0 hw/intctrl/pic.32
 .bss           0x00000000c0032781        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0032781        0x3 
 .bss           0x00000000c0032784        0x4 hw/timer/pit.32
                0x00000000c0032784                pitFreq
 .bss           0x00000000c0032788        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0032788        0x0 crtn.32
 .bss           0x00000000c0032788        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0032788        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0032788        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0032788        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .bss           0x00000000c0032788        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .bss           0x00000000c0032788        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .bss           0x00000000c0032788        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .bss           0x00000000c0032788        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c0032788        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c0032788        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0032788                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0036f88                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
