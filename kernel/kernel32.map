Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c29a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002ff                asmQuickAcquireLock
                0x00000000c000031d                asmQuickReleaseLock
                0x00000000c0000329                asmAcquireLock
                0x00000000c000034a                asmReleaseLock
                0x00000000c000035d                loadGDT
                0x00000000c000037d                memcpy
 *fill*         0x00000000c0000382        0xe 
 .text          0x00000000c0000390      0x79e acpica/utclib.32
                0x00000000c0000390                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004d0                memset
                0x00000000c0000540                strlen
                0x00000000c0000570                strpbrk
                0x00000000c00005b0                strtok
                0x00000000c0000600                strcpy
                0x00000000c0000630                strncpy
                0x00000000c00006e0                strcmp
                0x00000000c0000730                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b2e      0xfad core/malloc.32
                0x00000000c0000c99                dlfree
                0x00000000c0000ff4                dlmalloc
                0x00000000c0001531                dlrealloc
                0x00000000c00016d4                dlmemalign
                0x00000000c00017f7                dlcalloc
                0x00000000c0001891                dlcfree
                0x00000000c0001896                dlindependent_calloc
                0x00000000c00018bb                dlindependent_comalloc
                0x00000000c00018d2                dlvalloc
                0x00000000c00018fd                dlpvalloc
                0x00000000c0001933                dlmalloc_trim
                0x00000000c0001940                dlmalloc_usable_size
                0x00000000c0001971                dlmallinfo
                0x00000000c0001a40                dlmalloc_stats
                0x00000000c0001a51                dlmallopt
 *fill*         0x00000000c0001adb        0x1 
 .text          0x00000000c0001adc      0x1f2 libk/ctype.32
                0x00000000c0001adc                isblank
                0x00000000c0001afc                iscntrl
                0x00000000c0001b1c                isdigit
                0x00000000c0001b38                islower
                0x00000000c0001b54                isspace
                0x00000000c0001b7c                isupper
                0x00000000c0001b98                isalpha
                0x00000000c0001bc8                isalnum
                0x00000000c0001bf8                ispunct
                0x00000000c0001c38                isgraph
                0x00000000c0001c68                isprint
                0x00000000c0001c90                isxdigit
 .text          0x00000000c0001cce        0x0 libk/string.32
 .text          0x00000000c0001cce       0x51 fs/fat/diskio.32
                0x00000000c0001cce                disk_status
                0x00000000c0001cd1                disk_initialize
                0x00000000c0001cd4                disk_read
                0x00000000c0001cea                disk_write
                0x00000000c0001d00                disk_ioctl
 .text          0x00000000c0001d1f     0x3d4b fs/fat/ff.32
                0x00000000c0003abb                f_mount
                0x00000000c0003b1d                f_open
                0x00000000c0003de8                f_read
                0x00000000c0003fe7                f_write
                0x00000000c000421b                f_sync
                0x00000000c00042d0                f_close
                0x00000000c00042ff                f_lseek
                0x00000000c00044a6                f_opendir
                0x00000000c0004571                f_closedir
                0x00000000c0004593                f_readdir
                0x00000000c0004625                f_stat
                0x00000000c00046a4                f_getfree
                0x00000000c00047a6                f_truncate
                0x00000000c000488a                f_unlink
                0x00000000c00049ac                f_mkdir
                0x00000000c0004b47                f_rename
                0x00000000c0004cfd                f_chmod
                0x00000000c0004da6                f_utime
                0x00000000c0004e54                f_getlabel
                0x00000000c0004fa5                f_setlabel
                0x00000000c0005135                f_expand
                0x00000000c0005295                f_mkfs
 *fill*         0x00000000c0005a6a        0x2 
 .text          0x00000000c0005a6c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a6c                ff_memalloc
                0x00000000c0005a84                ff_memfree
 *fill*         0x00000000c0005a9b        0x1 
 .text          0x00000000c0005a9c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a9c                ff_uni2oem
                0x00000000c0005b3c                ff_oem2uni
                0x00000000c0005bb4                ff_wtoupper
 .text          0x00000000c0005d44      0xc76 fs/iso9660/iso9660.32
                0x00000000c0005f63                isoReadDiscSector
                0x00000000c0005ffe                strnicmp
                0x00000000c00062b1                stricmp
                0x00000000c00062fd                iso_open
                0x00000000c0006387                iso_close
                0x00000000c00063a5                iso_read
                0x00000000c00064bb                iso_seek
                0x00000000c000653f                iso_tell
                0x00000000c0006570                iso_total
                0x00000000c000659b                fn_postprocess
                0x00000000c00065c1                iso_readdir
                0x00000000c00067b2                iso_reset
                0x00000000c00067bf                init_percd
                0x00000000c00068b9                iso_ioctl
                0x00000000c00068c1                fs_iso9660_init
                0x00000000c000694a                fs_iso9660_shutdown
 .text          0x00000000c00069ba      0x685 core/computer.32
                0x00000000c00069ba                Computer::close(int, int, void*)
                0x00000000c00069ff                Krnl::firstTask()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006be4                Computer::setBootMessage(char const*)
                0x00000000c0006be6                Computer::detectFeatures()
                0x00000000c0006df0                Computer::displayFeatures()
                0x00000000c0006df2                Computer::rdmsr(unsigned int)
                0x00000000c0006e1e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006e56                Computer::shutdown()
                0x00000000c0006e6e                Computer::restart()
                0x00000000c0006e86                Computer::sleep()
                0x00000000c0006e9a                Computer::nmiEnabled()
                0x00000000c0006ea6                Computer::readCMOS(unsigned char)
                0x00000000c0006ec0                Computer::enableNMI(bool)
                0x00000000c0006ed8                Computer::open(int, int, void*)
                0x00000000c0006fac                Computer::disableNMI()
                0x00000000c0006fbc                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006fda                Computer::handleNMI()
 *fill*         0x00000000c000703f        0x1 
 .text          0x00000000c0007040      0x1cf core/gdt.32
                0x00000000c0007040                GDTEntry::setBase(unsigned int)
                0x00000000c000705c                GDTEntry::setLimit(unsigned int)
                0x00000000c000707a                GDT::GDT()
                0x00000000c000707a                GDT::GDT()
                0x00000000c0007090                GDT::addEntry(GDTEntry)
                0x00000000c00070b2                GDT::getNumberOfEntries()
                0x00000000c00070ba                GDT::flush()
                0x00000000c00070dc                GDT::setup()
 .text          0x00000000c000720f       0x1d core/idle.32
                0x00000000c000720f                idleFunction(void*)
 .text          0x00000000c000722c      0x464 core/idt.32
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000729e                IDTEntry::setOffset(unsigned int)
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00072be                IDT::addEntry(IDTEntry, int)
                0x00000000c00072d8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007310                IDT::flush()
                0x00000000c000732a                IDT::setup()
 .text          0x00000000c0007690      0x183 core/kheap.32
                0x00000000c0007690                sbrk
                0x00000000c0007725                mmap
                0x00000000c000773b                munmap
                0x00000000c0007751                liballoc_lock()
                0x00000000c000775e                liballoc_unlock()
                0x00000000c0007772                liballoc_alloc(int)
                0x00000000c000778a                liballoc_free(void*, int)
                0x00000000c00077a5                realloc
                0x00000000c00077b9                malloc
                0x00000000c00077c9                free
                0x00000000c00077d9                rfree
                0x00000000c00077e9                calloc
 .text          0x00000000c0007813       0xc3 core/main.32
                0x00000000c0007813                KeEntryPoint
 .text          0x00000000c00078d6      0x5dc core/physmgr.32
                0x00000000c00078d6                Phys::allocateDMA(unsigned long)
                0x00000000c00079ad                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c00079e0                Phys::setPageState(unsigned long, bool)
                0x00000000c0007a12                Phys::getPageState(unsigned long)
                0x00000000c0007a33                Phys::freePage(unsigned long)
                0x00000000c0007a95                Phys::allocatePage()
                0x00000000c0007b53                Phys::allocateContiguousPages(int)
                0x00000000c0007baf                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007be7                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007eb2      0x273 core/pipe.32
                0x00000000c0007eb2                Pipe::isAtty()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eda                Pipe::~Pipe()
                0x00000000c0007f02                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007fc2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00080be                Pipe::Pipe(int)
                0x00000000c00080be                Pipe::Pipe(int)
 *fill*         0x00000000c0008125        0x1 
 .text          0x00000000c0008126      0xaa0 core/terminal.32
                0x00000000c0008126                VgaText::isAtty()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000814e                VgaText::~VgaText()
                0x00000000c0008178                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008198                setTerminalScrollLock(bool)
                0x00000000c0008199                doTerminalCycle()
                0x00000000c000819a                addToTerminalCycle(VgaText*)
                0x00000000c000819b                scrollTerminalScrollLock(int)
                0x00000000c000819c                VgaText::updateTitle()
                0x00000000c000819e                VgaText::load()
                0x00000000c00081a0                VgaText::updateCursor()
                0x00000000c00081b6                VgaText::doANSI_SGR(int)
                0x00000000c000822a                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000823a                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000824a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000826a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008276                VgaText::setTitleColour(VgaColour)
                0x00000000c0008282                VgaText::setTitle(char*)
                0x00000000c0008284                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008296                VgaText::scrollScreen()
                0x00000000c000832e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008340                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00083d0                VgaText::getCursorX()
                0x00000000c00083d8                VgaText::getCursorY()
                0x00000000c00083e0                VgaText::setCursor(int, int)
                0x00000000c00083f7                setActiveTerminal(VgaText*)
                0x00000000c0008442                VgaText::clearScreen()
                0x00000000c0008490                VgaText::setCursorX(int)
                0x00000000c00084a8                VgaText::setCursorY(int)
                0x00000000c00084c0                VgaText::incrementCursor(bool)
                0x00000000c0008514                VgaText::decrementCursor(bool)
                0x00000000c0008536                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008604                VgaText::putchar(char)
                0x00000000c00086f0                VgaText::putx(unsigned int)
                0x00000000c0008736                VgaText::puts(char const*)
                0x00000000c000875c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00087a8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c0008a46                VgaText::receiveKey(unsigned char)
                0x00000000c0008ba0                VgaText::doUpdate()
                0x00000000c0008ba1                newTerminal(char*)
 *fill*         0x00000000c0008bc6        0x2 
 .text          0x00000000c0008bc8      0x1a1 core/tss.32
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bd8                TSS::setESP(unsigned long)
                0x00000000c0008bec                TSS::flush()
                0x00000000c0008c0c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008d69        0x1 
 .text          0x00000000c0008d6a      0x4c2 core/unixfile.32
                0x00000000c0008d6a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008dc0                ReservedFilename::isAtty()
                0x00000000c0008ddc                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008e3a                UnixFile::getFileDescriptor()
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c00090bc                UnixFile::~UnixFile()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c0009108                ReservedFilename::~ReservedFilename()
                0x00000000c000912f                getFromFileDescriptor(int)
 .text          0x00000000c000922c     0x1166 core/virtmgr.32
                0x00000000c000922c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009261                Virt::getPageState(unsigned long)
                0x00000000c0009285                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009396                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00093b4                Virt::swapIDToSector(unsigned long)
                0x00000000c00093c6                Virt::allocateSwapfilePage()
                0x00000000c0009444                Virt::virtualMemorySetup()
                0x00000000c000948f                Virt::setupPageSwapping(int)
                0x00000000c0009500                VAS::VAS()
                0x00000000c0009500                VAS::VAS()
                0x00000000c000953c                VAS::VAS(VAS*)
                0x00000000c000953c                VAS::VAS(VAS*)
                0x00000000c000956a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009596                VAS::getPageTableEntry(unsigned long)
                0x00000000c00095b5                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00096da                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00096fe                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009718                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009758                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000978c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00097b6                VAS::~VAS()
                0x00000000c00097b6                VAS::~VAS()
                0x00000000c000991a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009a1e                VAS::allocatePages(int, int)
                0x00000000c0009bf6                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009c14                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009cda                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009dc8                VAS::VAS(bool)
                0x00000000c0009dc8                VAS::VAS(bool)
                0x00000000c000a048                VAS::evict(unsigned long)
                0x00000000c000a10a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a1f8                VAS::scanForEviction()
                0x00000000c000a2d8                mapVASFirstTime
 .text          0x00000000c000a392       0x5f coreobjs/c++.32
                0x00000000c000a392                __cxa_atexit
                0x00000000c000a395                __cxa_finalize
                0x00000000c000a396                __stack_chk_fail
                0x00000000c000a3cc                __cxa_pure_virtual
                0x00000000c000a3dd                operator new[](unsigned long)
                0x00000000c000a3e2                operator delete(void*, unsigned long)
                0x00000000c000a3e7                operator delete[](void*)
                0x00000000c000a3ec                operator delete[](void*, unsigned long)
 .text          0x00000000c000a3f1      0x21c dbg/kconsole.32
                0x00000000c000a3f1                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a45c                Dbg::logc(char)
                0x00000000c000a47c                Dbg::logs(char*)
                0x00000000c000a499                Dbg::logWriteInt(unsigned int)
                0x00000000c000a4b7                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a4d8                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a60d        0x1 
 .text          0x00000000c000a60e      0xc5c fs/vfs.32
                0x00000000c000a60e                File::read(unsigned long long, void*, int*)
                0x00000000c000a666                File::write(unsigned long long, void*, int*)
                0x00000000c000a6be                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a716                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a744                File::isAtty()
                0x00000000c000a748                Directory::isAtty()
                0x00000000c000a74c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a752                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a758                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a75e                File::~File()
                0x00000000c000a75e                File::~File()
                0x00000000c000a782                File::~File()
                0x00000000c000a7ac                Directory::~Directory()
                0x00000000c000a7ac                Directory::~Directory()
                0x00000000c000a7d0                Directory::~Directory()
                0x00000000c000a7fa                Filesystem::Filesystem()
                0x00000000c000a7fa                Filesystem::Filesystem()
                0x00000000c000a81e                Filesystem::~Filesystem()
                0x00000000c000a81e                Filesystem::~Filesystem()
                0x00000000c000a82c                Filesystem::~Filesystem()
                0x00000000c000a850                Fs::getcwd(Process*, char*, int)
                0x00000000c000a87a                Fs::initVFS()
                0x00000000c000a8a4                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aa4e                File::File(char const*, Process*)
                0x00000000c000aa4e                File::File(char const*, Process*)
                0x00000000c000ab0e                File::open(FileOpenMode)
                0x00000000c000ab6c                File::close()
                0x00000000c000abcc                File::seek(unsigned long long)
                0x00000000c000ac22                File::tell(unsigned long long*)
                0x00000000c000ac72                File::rewind()
                0x00000000c000ac86                File::unlink()
                0x00000000c000acd2                File::rename(char const*)
                0x00000000c000ad20                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ad7c                File::exists()
                0x00000000c000adba                File::stat(unsigned long long*, bool*)
                0x00000000c000ae1b                Fs::setcwd(Process*, char*)
                0x00000000c000af78                Directory::Directory(char const*, Process*)
                0x00000000c000af78                Directory::Directory(char const*, Process*)
                0x00000000c000b038                Directory::open()
                0x00000000c000b094                Directory::close()
                0x00000000c000b0f4                Directory::unlink()
                0x00000000c000b140                Directory::rename(char const*)
                0x00000000c000b18e                Directory::exists()
                0x00000000c000b1cc                Directory::read(dirent*)
                0x00000000c000b218                Directory::create()
                0x00000000c000b264                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b26a        0x2 
 .text          0x00000000c000b26c       0x86 hal/bus.32
                0x00000000c000b26c                Bus::Bus(char const*)
                0x00000000c000b26c                Bus::Bus(char const*)
                0x00000000c000b2a4                Bus::~Bus()
                0x00000000c000b2a4                Bus::~Bus()
                0x00000000c000b2c8                Bus::~Bus()
 .text          0x00000000c000b2f2       0x96 hal/buzzer.32
                0x00000000c000b2f2                beepThread(void*)
                0x00000000c000b32f                Krnl::beep(int, int, bool)
 .text          0x00000000c000b388      0x46d hal/clock.32
                0x00000000c000b388                User::loadClockSettings(int)
                0x00000000c000b3da                Clock::Clock(char const*)
                0x00000000c000b3da                Clock::Clock(char const*)
                0x00000000c000b410                Clock::~Clock()
                0x00000000c000b410                Clock::~Clock()
                0x00000000c000b434                Clock::~Clock()
                0x00000000c000b45e                Clock::timeInSecondsLocal()
                0x00000000c000b4a6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b4ff                datetimeToSeconds(datetime_t)
                0x00000000c000b62c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b68c                secondsToDatetime(unsigned long long)
                0x00000000c000b7d0                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b7f5        0x1 
 .text          0x00000000c000b7f6      0x464 hal/device.32
                0x00000000c000b7f6                Device::hibernate()
                0x00000000c000b7f8                Device::wake()
                0x00000000c000b7fa                Device::detect()
                0x00000000c000b7fc                Device::disableLegacy()
                0x00000000c000b7fe                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b800                DriverlessDevice::close(int, int, void*)
                0x00000000c000b804                DriverlessDevice::detect()
                0x00000000c000b806                DriverlessDevice::open(int, int, void*)
                0x00000000c000b81a                Device::~Device()
                0x00000000c000b81a                Device::~Device()
                0x00000000c000b828                Device::~Device()
                0x00000000c000b850                Device::findAndLoadDriver()
                0x00000000c000b85e                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000b884                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000b8c4                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b8ee                Device::getParent()
                0x00000000c000b8fa                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b918                Device::addChild(Device*)
                0x00000000c000b95c                Device::removeAllChildren()
                0x00000000c000b9a2                Device::hibernateAll()
                0x00000000c000b9d2                Device::wakeAll()
                0x00000000c000ba02                Device::detectAll()
                0x00000000c000ba32                Device::disableLegacyAll()
                0x00000000c000ba34                Device::loadDriversForAll()
                0x00000000c000ba36                Device::closeAll()
                0x00000000c000ba6c                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000baa2                Device::setName(char const*)
                0x00000000c000bab0                Device::Device(char const*)
                0x00000000c000bab0                Device::Device(char const*)
                0x00000000c000bbac                Device::getName()
                0x00000000c000bbb6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbb6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbec                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bc30                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bc5a        0x2 
 .text          0x00000000c000bc5c       0x86 hal/diskctrl.32
                0x00000000c000bc5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bc5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bc94                HardDiskController::~HardDiskController()
                0x00000000c000bc94                HardDiskController::~HardDiskController()
                0x00000000c000bcb8                HardDiskController::~HardDiskController()
 .text          0x00000000c000bce2       0xe2 hal/diskphys.32
                0x00000000c000bce2                PhysicalDisk::eject()
                0x00000000c000bce6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bce6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bd4e                PhysicalDisk::startCache()
                0x00000000c000bd76                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bd76                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bd9a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000bdc4        0x0 hal/fpu.32
 .text          0x00000000c000bdc4      0x35d hal/intctrl.32
                0x00000000c000bdc4                int_handler
                0x00000000c000be4c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000be94                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bfcc                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c000                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c07f                setupINTS()
                0x00000000c000c0dc                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c121        0x1 
 .text          0x00000000c000c122      0x7b6 hal/keybrd.32
                0x00000000c000c122                startGUI(void*)
                0x00000000c000c18e                startGUIVESA(void*)
                0x00000000c000c1fa                sendKeyToTerminal(unsigned char)
                0x00000000c000c2c3                sendKeyboardToken(KeyboardToken)
                0x00000000c000c703                clearInternalKeybuffer(VgaText*)
                0x00000000c000c738                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000c84e                Keyboard::Keyboard(char const*)
                0x00000000c000c84e                Keyboard::Keyboard(char const*)
                0x00000000c000c88a                Keyboard::~Keyboard()
                0x00000000c000c88a                Keyboard::~Keyboard()
                0x00000000c000c8ae                Keyboard::~Keyboard()
 .text          0x00000000c000c8d8      0x3ea hal/logidisk.32
                0x00000000c000c8d8                LogicalDisk::close(int, int, void*)
                0x00000000c000c8dc                LogicalDisk::~LogicalDisk()
                0x00000000c000c8dc                LogicalDisk::~LogicalDisk()
                0x00000000c000c900                LogicalDisk::~LogicalDisk()
                0x00000000c000c92a                LogicalDisk::open(int, int, void*)
                0x00000000c000c93e                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000c976                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000c9bc                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c9bc                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ca72                LogicalDisk::assignDriveLetter()
                0x00000000c000cb28                LogicalDisk::mount()
                0x00000000c000cb70                LogicalDisk::unmount()
                0x00000000c000cb80                LogicalDisk::eject()
                0x00000000c000cb94                LogicalDisk::unassignDriveLetter()
                0x00000000c000cbea                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000cc56                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000ccc2        0x2 
 .text          0x00000000c000ccc4       0x86 hal/mouse.32
                0x00000000c000ccc4                Mouse::Mouse(char const*)
                0x00000000c000ccc4                Mouse::Mouse(char const*)
                0x00000000c000ccfc                Mouse::~Mouse()
                0x00000000c000ccfc                Mouse::~Mouse()
                0x00000000c000cd20                Mouse::~Mouse()
 .text          0x00000000c000cd4a      0x339 hal/partition.32
                0x00000000c000cd4a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cdf2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d083        0x1 
 .text          0x00000000c000d084       0x86 hal/serial.32
                0x00000000c000d084                Serial::Serial(char const*)
                0x00000000c000d084                Serial::Serial(char const*)
                0x00000000c000d0bc                Serial::~Serial()
                0x00000000c000d0bc                Serial::~Serial()
                0x00000000c000d0e0                Serial::~Serial()
 *fill*         0x00000000c000d10a        0x2 
 .text          0x00000000c000d10c      0x234 hal/timer.32
                0x00000000c000d10c                Timer::Timer(char const*)
                0x00000000c000d10c                Timer::Timer(char const*)
                0x00000000c000d144                Timer::~Timer()
                0x00000000c000d144                Timer::~Timer()
                0x00000000c000d168                Timer::~Timer()
                0x00000000c000d192                Timer::read()
                0x00000000c000d19d                setupTimer(int)
                0x00000000c000d1d8                timerHandler(unsigned int)
 .text          0x00000000c000d340      0x3ce hal/vcache.32
                0x00000000c000d340                VCache::VCache(PhysicalDisk*)
                0x00000000c000d340                VCache::VCache(PhysicalDisk*)
                0x00000000c000d4a8                VCache::invalidateReadBuffer()
                0x00000000c000d4b8                VCache::writeWriteBuffer()
                0x00000000c000d504                VCache::~VCache()
                0x00000000c000d504                VCache::~VCache()
                0x00000000c000d558                VCache::~VCache()
                0x00000000c000d580                VCache::write(unsigned long long, int, void*)
                0x00000000c000d696                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d70e      0x4b3 hal/video.32
                0x00000000c000d70e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d75a                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000d7ca                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000d848                Video::clearScreen(unsigned int)
                0x00000000c000d87c                Video::putpixel(int, int, unsigned int)
                0x00000000c000d88a                Video::Video(char const*)
                0x00000000c000d88a                Video::Video(char const*)
                0x00000000c000d8c0                Video::~Video()
                0x00000000c000d8c0                Video::~Video()
                0x00000000c000d8e4                Video::~Video()
                0x00000000c000d90e                Video::isMonochrome()
                0x00000000c000d91a                Video::getWidth()
                0x00000000c000d926                Video::getHeight()
                0x00000000c000d932                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000d9ee                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000db56                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000dbc1        0x3 
 .text          0x00000000c000dbc4     0x1307 hw/acpi.32
                0x00000000c000dbc4                ACPI::close(int, int, void*)
                0x00000000c000dc7c                findRSDP()
                0x00000000c000dd0c                loadACPITables(unsigned char*)
                0x00000000c000df70                findRSDT(unsigned char*)
                0x00000000c000e0c0                findDataTable(unsigned char*, char*)
                0x00000000c000e138                scanMADT()
                0x00000000c000e60c                ACPI::ACPI()
                0x00000000c000e60c                ACPI::ACPI()
                0x00000000c000e660                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e748                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000e810                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000e818                ACPI::detectPCI()
                0x00000000c000ea20                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ea74                ACPI::sleep()
                0x00000000c000ea90                ACPI::open(int, int, void*)
 *fill*         0x00000000c000eecb        0x1 
 .text          0x00000000c000eecc      0xb95 hw/cpu.32
                0x00000000c000eecc                CPU::close(int, int, void*)
                0x00000000c000eed0                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000eeec                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000ef04                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ef78                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000effc                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f02a                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f058                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f086                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f0b4                CPU::CPU()
                0x00000000c000f0b4                CPU::CPU()
                0x00000000c000f142                CPU::displayFeatures()
                0x00000000c000f144                CPU::detectFeatures()
                0x00000000c000f808                CPU::setupSMEP()
                0x00000000c000f814                CPU::setupUMIP()
                0x00000000c000f81e                CPU::setupTSC()
                0x00000000c000f828                CPU::setupLargePages()
                0x00000000c000f832                CPU::setupPAT()
                0x00000000c000f86e                CPU::setupMTRR()
                0x00000000c000f870                CPU::setupGlobalPages()
                0x00000000c000f87a                CPU::allowUsermodeDataAccess()
                0x00000000c000f88c                CPU::prohibitUsermodeDataAccess()
                0x00000000c000f89e                CPU::setupSMAP()
                0x00000000c000f8ac                CPU::setupFeatures()
                0x00000000c000f978                CPU::open(int, int, void*)
 .text          0x00000000c000fa61       0xd1 krnl/bootmsg.32
                0x00000000c000fa61                KeDisplaySplashScreen()
                0x00000000c000facf                KeSetBootMessage(char const*)
 .text          0x00000000c000fb32      0x581 krnl/env.32
                0x00000000c000fb32                EnvVarContainer::getEnv(char const*)
                0x00000000c000fb70                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000fc32                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000fc34                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000fe1a                EnvVarContainer::__loadSystem()
                0x00000000c000fe34                EnvVarContainer::__loadUser()
                0x00000000c000fe36                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe36                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe58                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe58                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe88                Krnl::getEnv(Process*, char const*)
                0x00000000c000feed                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000ff07                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000ff26                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000ff39                Krnl::deleteEnvSystem(char const*)
                0x00000000c000ff3a                Krnl::deleteEnvUser(char const*)
                0x00000000c000ff3b                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000ff3c                Krnl::newProcessEnv(Process*)
                0x00000000c000ff5e                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000ffaa                Krnl::loadSystemEnv()
                0x00000000c000ffd8                Krnl::loadUserEnv()
                0x00000000c000fffe                Krnl::flushEnv()
                0x00000000c000ffff                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001001f                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00100b3       0x94 krnl/inlines.32
                0x00000000c00100b3                CPU::current()
                0x00000000c00100bf                operator new(unsigned long)
                0x00000000c00100c4                operator delete(void*)
                0x00000000c00100c9                disableIRQs()
                0x00000000c00100cb                enableIRQs()
                0x00000000c00100cd                lockScheduler()
                0x00000000c00100d5                unlockScheduler()
                0x00000000c00100e4                lockStuff()
                0x00000000c00100f2                unlockStuff()
                0x00000000c001012c                Virt::getAKernelVAS()
                0x00000000c0010132                __not_memcpy
 .text          0x00000000c0010147        0xc krnl/panic.32
                0x00000000c0010147                KePanic(char const*)
 .text          0x00000000c0010153      0x142 krnl/powctrl.32
                0x00000000c0010153                Krnl::powerThread(void*)
                0x00000000c0010181                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010197                Krnl::userIOReceived()
                0x00000000c00101a2                Krnl::handlePowerButton()
                0x00000000c00101d7                Krnl::handleSleepButton()
                0x00000000c001020c                Krnl::setupPowerManager()
 *fill*         0x00000000c0010295        0x3 
 .text          0x00000000c0010298      0x190 krnl/resolve.32
                0x00000000c0010298                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010428      0x305 krnl/signal.32
                0x00000000c0010428                KiDefaultSignalHandlerAbort(int)
                0x00000000c0010435                KiDefaultSignalHandlerTerminate(int)
                0x00000000c0010442                KiSigKill(int)
                0x00000000c001044f                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010450                KiDefaultSignalHandlerPause(int)
                0x00000000c001045d                KiDefaultSignalHandlerResume(int)
                0x00000000c001046a                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001046f                KeInitSignals()
                0x00000000c00104ba                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00104f0                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001056c                KeCheckSignal(SigHandlerBlock*)
                0x00000000c00106f2                KeCompleteSignal(SigHandlerBlock*, int)
 .text          0x00000000c001072d      0xcfe krnl/syscalls.32
                0x00000000c001072d                SysSeekDir(regs*)
                0x00000000c0010732                SysTellDir(regs*)
                0x00000000c0010737                SysVerify(regs*)
                0x00000000c0010741                SysGetArgc(regs*)
                0x00000000c0010751                SysTTYName(regs*)
                0x00000000c0010759                SysFormatDisk(regs*)
                0x00000000c00107c6                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010810                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010865                SysShutdown(regs*)
                0x00000000c00108c3                SysRealpath(regs*)
                0x00000000c0010906                SysReadDir(regs*)
                0x00000000c0010986                SysIsATTY(regs*)
                0x00000000c00109e2                SysSeek(regs*)
                0x00000000c0010a3b                SysTell(regs*)
                0x00000000c0010aaa                SysSize(regs*)
                0x00000000c0010b1f                SysSizeFromFilename(regs*)
                0x00000000c0010bd2                SysClose(regs*)
                0x00000000c0010c32                SysOpenDir(regs*)
                0x00000000c0010d43                SysCloseDir(regs*)
                0x00000000c0010d97                SysMakeDir(regs*)
                0x00000000c0010e09                SysWait(regs*)
                0x00000000c0010e26                SysNotImpl(regs*)
                0x00000000c0010e41                SysPanic(regs*)
                0x00000000c0010e5c                SysRmdir(regs*)
                0x00000000c0010ec3                SysUnlink(regs*)
                0x00000000c0010f2a                SysGetArgv(regs*)
                0x00000000c0010f77                SysUSleep(regs*)
                0x00000000c0010fa0                SysSpawn(regs*)
                0x00000000c0011009                SysGetEnv(regs*)
                0x00000000c00110b8                SysSetFatAttrib(regs*)
                0x00000000c001112f                SysPipe(regs*)
                0x00000000c0011174                SysGetUnixTime(regs*)
                0x00000000c0011188                string_ends_with(char const*, char const*)
                0x00000000c00111d2                SysOpen(regs*)
                0x00000000c00113d9                KeSystemCall(regs*, void*)
 .text          0x00000000c001142b      0x50e reg/registry.32
                0x00000000c001142b                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0011583                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00116d8                Reg::getLine(char*, char*, char*)
                0x00000000c001170f                Reg::readInt(char*, char*, int*)
                0x00000000c00117fa                Reg::readString(char*, char*, char*, int)
                0x00000000c001187b                Reg::readBool(char*, char*, bool*)
                0x00000000c00118a0                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00118cc                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00118f8                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0011939       0x36 sys/eject.32
                0x00000000c0011939                SysEject(regs*)
 .text          0x00000000c001196f       0x18 sys/exit.32
                0x00000000c001196f                SysExit(regs*)
 .text          0x00000000c0011987       0x1f sys/getcwd.32
                0x00000000c0011987                SysGetCwd(regs*)
 .text          0x00000000c00119a6        0xc sys/getpid.32
                0x00000000c00119a6                SysGetPID(regs*)
 .text          0x00000000c00119b2       0x1a sys/getramdata.32
                0x00000000c00119b2                SysGetRAMData(regs*)
 .text          0x00000000c00119cc       0x82 sys/getvgaptr.32
                0x00000000c00119cc                SysGetVGAPtr(regs*)
 .text          0x00000000c0011a4e       0xa8 sys/loaddll.32
                0x00000000c0011a4e                SysLoadDLL(regs*)
 .text          0x00000000c0011af6       0x68 sys/read.32
                0x00000000c0011af6                SysRead(regs*)
 .text          0x00000000c0011b5e       0x29 sys/registersignal.32
                0x00000000c0011b5e                SysRegisterSignal(regs*)
 .text          0x00000000c0011b87       0x67 sys/sbrk.32
                0x00000000c0011b87                SysSbrk(regs*)
 .text          0x00000000c0011bee       0x1c sys/setcwd.32
                0x00000000c0011bee                SysSetCwd(regs*)
 .text          0x00000000c0011c0a       0x95 sys/settime.32
                0x00000000c0011c0a                SysSetTime(regs*)
 .text          0x00000000c0011c9f       0x4a sys/timezone.32
                0x00000000c0011c9f                SysTimezone(regs*)
 .text          0x00000000c0011ce9       0x68 sys/write.32
                0x00000000c0011ce9                SysWrite(regs*)
 .text          0x00000000c0011d51       0x62 sys/wsbe.32
                0x00000000c0011d51                SysWsbe(regs*)
 .text          0x00000000c0011db3       0x25 sys/yield.32
                0x00000000c0011db3                SysYield(regs*)
 .text          0x00000000c0011dd8     0x11e5 thr/elf.32
                0x00000000c0011dd8                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0012064                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001227a                Thr::runtimeReferenceHelper()
                0x00000000c001228d                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00122dc                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001259a                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012cd0                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012d02                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012d39                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012d53                Thr::loadDLL(char const*, bool)
                0x00000000c0012f84                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0012fbd        0x3 
 .text          0x00000000c0012fc0     0x12fd thr/prcssthr.32
                0x00000000c0012fc0                userModeEntryPoint(void*)
                0x00000000c0012fe8                changeTSS
                0x00000000c0013018                switchToThread(ThreadControlBlock*)
                0x00000000c00130cc                Process::addArgs(char**)
                0x00000000c001312c                Process::Process(char const*, Process*, char**)
                0x00000000c001312c                Process::Process(char const*, Process*, char**)
                0x00000000c0013338                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013338                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013510                taskStartupFunction
                0x00000000c001351c                Semaphore::Semaphore(int)
                0x00000000c001351c                Semaphore::Semaphore(int)
                0x00000000c001354c                Mutex::Mutex()
                0x00000000c001354c                Mutex::Mutex()
                0x00000000c0013560                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0013658                Process::createUserThread()
                0x00000000c0013678                setupMultitasking(void (*)())
                0x00000000c0013780                schedule()
                0x00000000c0013810                Semaphore::tryAcquire()
                0x00000000c00138dc                Semaphore::assertLocked(char const*)
                0x00000000c0013954                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001397c                blockTask(TaskState)
                0x00000000c00139ac                waitTask(int, int*, int)
                0x00000000c00139f0                milliTenthSleepUntil(unsigned int)
                0x00000000c0013a80                milliTenthSleep(unsigned int)
                0x00000000c0013a90                sleep(unsigned int)
                0x00000000c0013aac                Semaphore::acquire()
                0x00000000c0013b68                taskReturned
                0x00000000c0013ba4                Thr::processFromPID(int)
                0x00000000c0013c44                unblockTask(ThreadControlBlock*)
                0x00000000c0013ce8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0013fb4                cleanerTaskFunction(void*)
                0x00000000c00140a4                terminateTask(int)
                0x00000000c0014170                Thr::terminateFromIRQ(int)
                0x00000000c0014180                Semaphore::release()
 .text          0x00000000c00142bd      0xb93 vm86/vm8086.32
                0x00000000c00142bd                Vm::inbv(unsigned short)
                0x00000000c00142d0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0014306                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0014316                Vm::getSegment(unsigned int)
                0x00000000c001431e                Vm::getOffset(unsigned int)
                0x00000000c0014323                Vm::mainloop2()
                0x00000000c001435d                Vm::mainVm8086Loop(void*)
                0x00000000c001436d                Vm::mainloop3(unsigned long)
                0x00000000c0014393                Vm::initialise8086()
                0x00000000c00143d6                Vm::finish8086()
                0x00000000c0014437                Vm::getOutput8086(unsigned char*)
                0x00000000c001445c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014515                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001467d                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0014707                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0014718                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001472a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001473b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0014750                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0014766                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001477b                Vm::faultHandler(regs*)
 .text          0x00000000c0014e50      0xa53 arch/i386/hal.32
                0x00000000c0014e50                noCopro(unsigned long)
                0x00000000c0014e51                nmiHandler(regs*, void*)
                0x00000000c0014e6a                doubleFault(regs*, void*)
                0x00000000c0014e83                displayDebugInfo(regs*)
                0x00000000c00151a4                HalSystemIdle()
                0x00000000c001521a                displayProgramFault(char const*)
                0x00000000c0015266                gpFault(regs*, void*)
                0x00000000c00152cb                pgFault(regs*, void*)
                0x00000000c0015351                otherISRHandler(regs*, void*)
                0x00000000c0015385                opcodeFault(regs*, void*)
                0x00000000c0015405                i386SaveCoprocessor(void*)
                0x00000000c0015419                i386LoadCoprocessor(void*)
                0x00000000c001542d                x87EmulHandler(regs*, void*)
                0x00000000c00154ca                HalInitialiseCoprocessor()
                0x00000000c0015578                HalPanic(char const*)
                0x00000000c0015671                HalQueryPerformanceCounter()
                0x00000000c001568c                HalInitialise()
                0x00000000c0015832                HalMakeBeep(int)
                0x00000000c001586c                HalGetRand()
                0x00000000c001586f                HalEndOfInterrupt(int)
                0x00000000c00158a0                HalRestart()
                0x00000000c00158a1                HalShutdown()
                0x00000000c00158a2                HalSleep()
 *fill*         0x00000000c00158a3        0x1 
 .text          0x00000000c00158a4      0x2f4 arch/i386/pic.32
                0x00000000c00158a4                picIoWait()
                0x00000000c00158ac                picDisable()
                0x00000000c00158e0                picGetIRQReg(int)
                0x00000000c0015964                picOpen()
                0x00000000c0015af4                picEOI(int)
 .text          0x00000000c0015b98      0x64d arch/i386/rtc.32
                0x00000000c0015b98                RTC::open(int, int, void*)
                0x00000000c0015b9c                RTC::close(int, int, void*)
                0x00000000c0015ba0                RTC::timeInSecondsUTC()
                0x00000000c0015bb2                RTC::timeInDatetimeUTC()
                0x00000000c0015bd8                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015c16                RTC::~RTC()
                0x00000000c0015c16                RTC::~RTC()
                0x00000000c0015c3a                RTC::~RTC()
                0x00000000c0015c64                RTC::get_update_in_progress_flag()
                0x00000000c0015c7c                RTC::completeRTCRefresh()
                0x00000000c0015f34                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00160e7                rtcIRQHandler(regs*, void*)
                0x00000000c001612c                RTC::RTC()
                0x00000000c001612c                RTC::RTC()
 *fill*         0x00000000c00161e5        0x3 
 .text          0x00000000c00161e8      0x203 arch/i386/vga.32
                0x00000000c00161e8                HalConsoleScroll(int, int)
                0x00000000c00162f0                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001635c                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00163eb        0x1 
 .text          0x00000000c00163ec     0x13e7 fs/fat/vfslink.32
                0x00000000c00163ec                FAT::getName()
                0x00000000c00163f4                FAT::tell(void*, unsigned long long*)
                0x00000000c0016430                FAT::stat(void*, unsigned long long*)
                0x00000000c001646c                FAT::~FAT()
                0x00000000c001646c                FAT::~FAT()
                0x00000000c0016490                FAT::~FAT()
                0x00000000c00164b8                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001655c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0016620                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00167f4                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016a0c                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016bcc                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016d38                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016d98                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016df8                FAT::close(void*)
                0x00000000c0016e4c                FAT::closeDir(void*)
                0x00000000c0016ea0                FAT::seek(void*, unsigned long long)
                0x00000000c0016ef8                fatWrapperReadDisk
                0x00000000c0016f3c                fatWrapperWriteDisk
                0x00000000c0016f80                fatWrapperIoctl
                0x00000000c001709c                FAT::FAT()
                0x00000000c001709c                FAT::FAT()
                0x00000000c00170f0                FAT::fixFilepath(char*)
                0x00000000c001712c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0017264                FAT::openDir(char const*, void**)
                0x00000000c0017314                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001740c                FAT::unlink(char const*)
                0x00000000c001748c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017618                FAT::rename(char const*, char const*)
                0x00000000c00176e4                FAT::mkdir(char const*)
                0x00000000c0017764                FAT::exists(char const*)
 *fill*         0x00000000c00177d3        0x1 
 .text          0x00000000c00177d4       0xc6 fs/iso9660/helper.32
                0x00000000c00177d4                isoReadDiscSectorHelper
                0x00000000c0017830                iso_kprintf
                0x00000000c0017850                iso_kprintfd
 .text          0x00000000c001789a      0x586 fs/iso9660/vfslink.32
                0x00000000c001789a                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00178a0                ISO9660::getName()
                0x00000000c00178a6                ISO9660::closeDir(void*)
                0x00000000c00178b0                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00178b6                ISO9660::unlink(char const*)
                0x00000000c00178bc                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00178c2                ISO9660::rename(char const*, char const*)
                0x00000000c00178c8                ISO9660::mkdir(char const*)
                0x00000000c00178ce                ISO9660::~ISO9660()
                0x00000000c00178ce                ISO9660::~ISO9660()
                0x00000000c00178f2                ISO9660::~ISO9660()
                0x00000000c001791a                ISO9660::exists(char const*)
                0x00000000c001792e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00179ce                ISO9660::openDir(char const*, void**)
                0x00000000c0017a5e                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017a9e                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017ad6                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017b0c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017b46                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017c18                ISO9660::close(void*)
                0x00000000c0017c3e                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017d0b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017d86                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017df8                ISO9660::ISO9660()
                0x00000000c0017df8                ISO9660::ISO9660()
 .text          0x00000000c0017e20      0x26c hal/sound/sndcard.32
                0x00000000c0017e20                SoundCard::beginPlayback()
                0x00000000c0017e2e                SoundCard::stopPlayback()
                0x00000000c0017e3c                SoundCard::SoundCard(char const*)
                0x00000000c0017e3c                SoundCard::SoundCard(char const*)
                0x00000000c0017eda                SoundCard::~SoundCard()
                0x00000000c0017eda                SoundCard::~SoundCard()
                0x00000000c0017efe                SoundCard::~SoundCard()
                0x00000000c0017f28                SoundCard::configureRates(int, int, int)
                0x00000000c0017f58                SoundCard::getSamples16(int, short*)
                0x00000000c0017fb4                SoundCard::getSamples32(int, int*)
                0x00000000c001803a                SoundCard::addChannel(SoundPort*)
                0x00000000c0018078                SoundCard::removeChannel(int)
 .text          0x00000000c001808c      0x377 hal/sound/sndport.32
                0x00000000c001808c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001808c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018118                SoundPort::~SoundPort()
                0x00000000c0018118                SoundPort::~SoundPort()
                0x00000000c001814c                SoundPort::unpause()
                0x00000000c0018158                SoundPort::pause()
                0x00000000c0018164                SoundPort::getBufferUsed()
                0x00000000c001816c                SoundPort::getBufferSize()
                0x00000000c0018174                SoundPort::buffer16(short*, int)
                0x00000000c0018200                SoundPort::buffer32(int*, int)
                0x00000000c0018288                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001834c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0018403        0x0 hw/bus/isa.32
 *fill*         0x00000000c0018403        0x1 
 .text          0x00000000c0018404      0xb49 hw/bus/pci.32
                0x00000000c0018404                PCI::open(int, int, void*)
                0x00000000c0018422                PCI::close(int, int, void*)
                0x00000000c0018426                PCI::PCI()
                0x00000000c0018426                PCI::PCI()
                0x00000000c00184c0                PCI::readBAR8(unsigned int, int)
                0x00000000c00184dc                PCI::readBAR16(unsigned int, int)
                0x00000000c00184fa                PCI::readBAR32(unsigned int, int)
                0x00000000c0018516                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0018536                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0018558                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0018578                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00185e6                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001868e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c00186b2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c00186da                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018724                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001874c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018770                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0018794                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c00187bc                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018820                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018908                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018b82                PCI::checkBus(unsigned char)
                0x00000000c0018ba8                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018d1a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018e8e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018efa                PCI::detect()
 *fill*         0x00000000c0018f4d        0x1 
 .text          0x00000000c0018f4e      0xb5a hw/diskctrl/ide.32
                0x00000000c0018f4e                IDE::close(int, int, void*)
                0x00000000c0018f52                IDE::IDE()
                0x00000000c0018f52                IDE::IDE()
                0x00000000c0018f86                IDE::prepareInterrupt(unsigned char)
                0x00000000c0018f98                selectDrive(unsigned char, unsigned char)
                0x00000000c0018f9a                IDE::getBase(unsigned char)
                0x00000000c0018fac                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001906c                IDE::read(unsigned char, unsigned char)
                0x00000000c001911a                IDE::waitInterrupt(unsigned char)
                0x00000000c0019182                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001919e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00191ba                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019200                IDE::open(int, int, void*)
                0x00000000c001960e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c00196da                IDE::detect()
                0x00000000c001999a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019a4a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019aa8      0x32a hw/diskctrl/satabus.32
                0x00000000c0019aa8                SATABus::close(int, int, void*)
                0x00000000c0019aac                SATABus::detect()
                0x00000000c0019aae                SATABus::SATABus()
                0x00000000c0019aae                SATABus::SATABus()
                0x00000000c0019b34                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019b66                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019bae                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019bce                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019bf8                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019d08                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019db2                SATABus::open(int, int, void*)
 .text          0x00000000c0019dd2      0x5f4 hw/diskphys/ata.32
                0x00000000c0019dd2                ATA::close(int, int, void*)
                0x00000000c0019df6                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019df8                ATA::ATA()
                0x00000000c0019df8                ATA::ATA()
                0x00000000c0019e26                ATA::flush(bool)
                0x00000000c0019e70                ATA::readyForCommand()
                0x00000000c0019ebc                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a238                ATA::read(unsigned long long, int, void*)
                0x00000000c001a284                ATA::write(unsigned long long, int, void*)
                0x00000000c001a2d0                ATA::detectCHS()
                0x00000000c001a2fa                ATA::open(int, int, void*)
 .text          0x00000000c001a3c6      0x60e hw/diskphys/atapi.32
                0x00000000c001a3c6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a3cc                ATAPI::close(int, int, void*)
                0x00000000c001a3f0                ATAPI::ATAPI()
                0x00000000c001a3f0                ATAPI::ATAPI()
                0x00000000c001a41e                ATAPI::readyForCommand()
                0x00000000c001a470                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a730                ATAPI::diskRemoved()
                0x00000000c001a76a                ATAPI::eject()
                0x00000000c001a7b2                ATAPI::diskInserted()
                0x00000000c001a7be                ATAPI::detectMedia()
                0x00000000c001a87a                ATAPI::open(int, int, void*)
                0x00000000c001a95a                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001a9d4      0x402 hw/diskphys/sata.32
                0x00000000c001a9d4                SATA::close(int, int, void*)
                0x00000000c001a9f8                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001a9fa                SATA::open(int, int, void*)
                0x00000000c001aaa4                SATA::SATA()
                0x00000000c001aaa4                SATA::SATA()
                0x00000000c001aad2                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ad1e                SATA::read(unsigned long long, int, void*)
                0x00000000c001ad6a                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001add6      0x5af hw/diskphys/satapi.32
                0x00000000c001add6                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001addc                SATAPI::close(int, int, void*)
                0x00000000c001ae00                SATAPI::SATAPI()
                0x00000000c001ae00                SATAPI::SATAPI()
                0x00000000c001ae2e                SATAPI::diskRemoved()
                0x00000000c001ae30                SATAPI::diskInserted()
                0x00000000c001ae4c                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b12c                SATAPI::eject()
                0x00000000c001b168                SATAPI::detectMedia()
                0x00000000c001b18e                SATAPI::open(int, int, void*)
                0x00000000c001b28e                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b385        0x1 
 .text          0x00000000c001b386      0x455 hw/intctrl/apic.32
                0x00000000c001b386                IOAPIC::close(int, int, void*)
                0x00000000c001b38c                apicGetBase()
                0x00000000c001b3ce                IOAPIC::IOAPIC()
                0x00000000c001b3ce                IOAPIC::IOAPIC()
                0x00000000c001b3f6                apicOpen()
                0x00000000c001b55c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b58e                IOAPIC::read(int)
                0x00000000c001b5b6                IOAPIC::open(int, int, void*)
                0x00000000c001b6aa                IOAPIC::write(int, int)
                0x00000000c001b6d6                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b7db        0x1 
 .text          0x00000000c001b7dc       0xf0 hw/timer/apictimer.32
                0x00000000c001b7dc                APICTimer::close(int, int, void*)
                0x00000000c001b7e4                apicTimerHandler(regs*, void*)
                0x00000000c001b80c                APICTimer::open(int, int, void*)
                0x00000000c001b87c                APICTimer::write(int)
                0x00000000c001b8a4                APICTimer::APICTimer()
                0x00000000c001b8a4                APICTimer::APICTimer()
 .text          0x00000000c001b8cc      0x1aa hw/timer/pit.32
                0x00000000c001b8cc                PIT::write(int)
                0x00000000c001b950                pitHandler(regs*, void*)
                0x00000000c001b974                PIT::open(int, int, void*)
                0x00000000c001b9c4                PIT::close(int, int, void*)
                0x00000000c001b9f4                PIT::PIT()
                0x00000000c001b9f4                PIT::PIT()
 *fill*         0x00000000c001ba76        0xa 
 .text          0x00000000c001ba80       0x83 arch/i386/avx.32
                0x00000000c001ba80                avxDetect
                0x00000000c001baaa                avxSave
                0x00000000c001babb                avxLoad
                0x00000000c001bacc                avxInit
                0x00000000c001baee                avxClose
                0x00000000c001baef                wouldSheSayYes
 *fill*         0x00000000c001bb03        0xd 
 .text          0x00000000c001bb10      0x1d6 arch/i386/interrupt.32
                0x00000000c001bb10                isr0
                0x00000000c001bb20                isr1
                0x00000000c001bb2a                isr2
                0x00000000c001bb34                isr3
                0x00000000c001bb3e                isr4
                0x00000000c001bb48                isr5
                0x00000000c001bb52                isr6
                0x00000000c001bb5c                isr7
                0x00000000c001bb66                isr8
                0x00000000c001bb6e                isr9
                0x00000000c001bb78                isr10
                0x00000000c001bb80                isr11
                0x00000000c001bb88                isr12
                0x00000000c001bb90                isr13
                0x00000000c001bb98                isr14
                0x00000000c001bba0                isr15
                0x00000000c001bbaa                isr16
                0x00000000c001bbb4                isr17
                0x00000000c001bbbe                isr18
                0x00000000c001bbc8                irq3
                0x00000000c001bbd2                irq4
                0x00000000c001bbdc                irq5
                0x00000000c001bbe6                irq6
                0x00000000c001bbf0                irq7
                0x00000000c001bbfa                irq8
                0x00000000c001bc04                irq9
                0x00000000c001bc0e                irq10
                0x00000000c001bc18                irq11
                0x00000000c001bc22                irq12
                0x00000000c001bc2c                irq13
                0x00000000c001bc36                irq14
                0x00000000c001bc40                irq15
                0x00000000c001bc4a                irq1
                0x00000000c001bc51                irq2
                0x00000000c001bc58                isr96
                0x00000000c001bc5f                irq0
                0x00000000c001bc64                int_common_stub
                0x00000000c001bc64                syscall_common_stub
                0x00000000c001bc96                irq16
                0x00000000c001bca0                irq17
                0x00000000c001bcaa                irq18
                0x00000000c001bcb4                irq19
                0x00000000c001bcbe                irq20
                0x00000000c001bcc8                irq21
                0x00000000c001bcd2                irq22
                0x00000000c001bcdc                irq23
 *fill*         0x00000000c001bce6        0xa 
 .text          0x00000000c001bcf0       0x10 arch/i386/rdrand.32
                0x00000000c001bcf0                i386GetRDRAND
 .text          0x00000000c001bd00       0x39 arch/i386/sse.32
                0x00000000c001bd00                absolutelyNoChanceInHell
                0x00000000c001bd00                sseDetect
                0x00000000c001bd18                sseSave
                0x00000000c001bd20                sseLoad
                0x00000000c001bd28                sseInit
                0x00000000c001bd38                sseClose
 *fill*         0x00000000c001bd39        0x7 
 .text          0x00000000c001bd40       0x49 arch/i386/x87.32
                0x00000000c001bd46                x87Detect
                0x00000000c001bd61                x87Save
                0x00000000c001bd68                x87Load
                0x00000000c001bd6f                x87Init
                0x00000000c001bd88                x87Close
 *fill*         0x00000000c001bd89        0x3 
 .text          0x00000000c001bd8c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001bdb1        0x0 crtn.32
 *fill*         0x00000000c001bdb1        0x3 
 .text          0x00000000c001bdb4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001bdb4                __divdi3
 *fill*         0x00000000c001beff        0x1 
 .text          0x00000000c001bf00      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001bf00                __moddi3
 *fill*         0x00000000c001c07e        0x2 
 .text          0x00000000c001c080       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c080                __udivdi3
 *fill*         0x00000000c001c17f        0x1 
 .text          0x00000000c001c180      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c180                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c2a0        0x0
 .iplt          0x00000000c001c2a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c29a        0xf
 .init          0x00000000c001c29a        0x3 crti.32
                0x00000000c001c29a                _init
 .init          0x00000000c001c29d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c2a2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c2a7        0x2 crtn.32

.fini           0x00000000c001c2a9        0xa
 .fini          0x00000000c001c2a9        0x3 crti.32
                0x00000000c001c2a9                _fini
 .fini          0x00000000c001c2ac        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c2b1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c2b4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c2b4       0x23 core/computer.32
                0x00000000c001c2b4                Computer::~Computer()
                0x00000000c001c2b4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c2d8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c2d8       0x2a core/computer.32
                0x00000000c001c2d8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c302       0x21
 .text._Z10idleCommonv
                0x00000000c001c302       0x21 core/idle.32
                0x00000000c001c302                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c324        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c324        0x2 core/unixfile.32
                0x00000000c001c324                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c324                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c326       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c326       0x42 core/unixfile.32
                0x00000000c001c326                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c326                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c368       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c368       0xd3 core/unixfile.32
                0x00000000c001c368                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c43c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c43c        0x7 core/unixfile.32
                0x00000000c001c43c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c444       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c444       0xa1 core/unixfile.32
                0x00000000c001c444                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c4e6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c4e6        0x8 core/unixfile.32
                0x00000000c001c4e6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c4ee       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c4ee       0x1a hal/device.32
                0x00000000c001c4ee                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c4ee                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c508       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c508       0x2a hal/device.32
                0x00000000c001c508                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c532       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c532       0xdc hal/device.32
                0x00000000c001c532                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c60e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c60e       0x42 hal/device.32
                0x00000000c001c60e                LinkedList<Device>::LinkedList()
                0x00000000c001c60e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c650       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c650       0x1c hal/timer.32
                0x00000000c001c650                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c66c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c66c        0x7 hal/timer.32
                0x00000000c001c66c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c674       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c674       0xb8 hal/timer.32
                0x00000000c001c674                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c72c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c72c       0xda hal/timer.32
                0x00000000c001c72c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c808       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c808       0x23 hw/acpi.32
                0x00000000c001c808                ACPI::~ACPI()
                0x00000000c001c808                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c82c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c82c       0x2a hw/acpi.32
                0x00000000c001c82c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c858        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c858        0x2 hw/acpi.32
                0x00000000c001c858                LinkedList<Device>::~LinkedList()
                0x00000000c001c858                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c85c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c85c       0x1c hw/acpi.32
                0x00000000c001c85c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c878        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c878        0x7 hw/acpi.32
                0x00000000c001c878                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c880       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c880       0xb8 hw/acpi.32
                0x00000000c001c880                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001c938       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001c938       0x23 hw/cpu.32
                0x00000000c001c938                CPU::~CPU()
                0x00000000c001c938                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001c95c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001c95c       0x2a hw/cpu.32
                0x00000000c001c95c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c988        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c988        0x2 thr/prcssthr.32
                0x00000000c001c988                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001c988                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c98c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c98c       0x49 thr/prcssthr.32
                0x00000000c001c98c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001c98c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c9d8       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c9d8       0x42 thr/prcssthr.32
                0x00000000c001c9d8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001c9d8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ca1c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ca1c        0x8 thr/prcssthr.32
                0x00000000c001ca1c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001ca24       0x23
 .text._ZN3PCID2Ev
                0x00000000c001ca24       0x23 hw/bus/pci.32
                0x00000000c001ca24                PCI::~PCI()
                0x00000000c001ca24                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001ca48       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001ca48       0x2a hw/bus/pci.32
                0x00000000c001ca48                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001ca72       0x23
 .text._ZN3IDED2Ev
                0x00000000c001ca72       0x23 hw/diskctrl/ide.32
                0x00000000c001ca72                IDE::~IDE()
                0x00000000c001ca72                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001ca96       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001ca96       0x2a hw/diskctrl/ide.32
                0x00000000c001ca96                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cac0       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cac0       0x23 hw/diskctrl/satabus.32
                0x00000000c001cac0                SATABus::~SATABus()
                0x00000000c001cac0                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cae4       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cae4       0x2a hw/diskctrl/satabus.32
                0x00000000c001cae4                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cb0e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cb0e       0x23 hw/diskphys/ata.32
                0x00000000c001cb0e                ATA::~ATA()
                0x00000000c001cb0e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001cb32       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001cb32       0x2a hw/diskphys/ata.32
                0x00000000c001cb32                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cb5c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cb5c       0x23 hw/diskphys/atapi.32
                0x00000000c001cb5c                ATAPI::~ATAPI()
                0x00000000c001cb5c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001cb80       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001cb80       0x2a hw/diskphys/atapi.32
                0x00000000c001cb80                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cbaa       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cbaa       0x23 hw/diskphys/sata.32
                0x00000000c001cbaa                SATA::~SATA()
                0x00000000c001cbaa                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cbce       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cbce       0x2a hw/diskphys/sata.32
                0x00000000c001cbce                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cbf8       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cbf8       0x23 hw/diskphys/satapi.32
                0x00000000c001cbf8                SATAPI::~SATAPI()
                0x00000000c001cbf8                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cc1c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cc1c       0x2a hw/diskphys/satapi.32
                0x00000000c001cc1c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cc46       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cc46       0x23 hw/intctrl/apic.32
                0x00000000c001cc46                IOAPIC::~IOAPIC()
                0x00000000c001cc46                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cc6a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cc6a       0x2a hw/intctrl/apic.32
                0x00000000c001cc6a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001cc94       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001cc94       0x23 hw/timer/apictimer.32
                0x00000000c001cc94                APICTimer::~APICTimer()
                0x00000000c001cc94                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ccb8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ccb8       0x2a hw/timer/apictimer.32
                0x00000000c001ccb8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001cce4       0x23
 .text._ZN3PITD2Ev
                0x00000000c001cce4       0x23 hw/timer/pit.32
                0x00000000c001cce4                PIT::~PIT()
                0x00000000c001cce4                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001cd08       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001cd08       0x2a hw/timer/pit.32
                0x00000000c001cd08                PIT::~PIT()

.rodata         0x00000000c001cd32     0x2a2e
                0x00000000c001cd32                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001cd32        0x2 
 .ctors         0x00000000c001cd34        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001cd38        0x4 core/unixfile.32
 .ctors         0x00000000c001cd3c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001cd40        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cd44                end_ctors = .
                0x00000000c001cd44                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001cd44        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001cd48        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cd48                __DTOR_END__
                0x00000000c001cd4c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cd4c       0x14 
 .rodata        0x00000000c001cd60      0x101 acpica/utclib.32
                0x00000000c001cd60                AcpiGbl_Ctypes
 *fill*         0x00000000c001ce61        0x3 
 .rodata        0x00000000c001ce64       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001ce7c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001cec6       0x1a 
 .rodata        0x00000000c001cee0       0xed fs/fat/ff.32
 *fill*         0x00000000c001cfcd       0x13 
 .rodata        0x00000000c001cfe0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d3e0       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d3f1      0x115 core/computer.32
 *fill*         0x00000000c001d506        0x2 
 .rodata.str1.4
                0x00000000c001d508       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d570       0x2c core/computer.32
                0x00000000c001d570                vtable for Computer
 .rodata.str1.4
                0x00000000c001d59c       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d5cc        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d5d8       0x17 core/main.32
 *fill*         0x00000000c001d5ef        0x1 
 .rodata.str1.4
                0x00000000c001d5f0       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d695       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d6ed       0x39 core/pipe.32
 *fill*         0x00000000c001d726        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d728       0x1c core/pipe.32
                0x00000000c001d728                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d744       0x75 core/terminal.32
 *fill*         0x00000000c001d7b9        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d7bc       0x1c core/terminal.32
                0x00000000c001d7bc                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d7d8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d7fa       0x15 core/unixfile.32
 *fill*         0x00000000c001d80f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d810       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d85b        0x8 core/unixfile.32
 *fill*         0x00000000c001d863        0x1 
 .rodata.str1.4
                0x00000000c001d864       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d884       0x1c core/unixfile.32
                0x00000000c001d884                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001d8a0       0x1c core/unixfile.32
                0x00000000c001d8a0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001d8bc      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001da23      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001db2a       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001db5d       0x11 dbg/kconsole.32
 *fill*         0x00000000c001db5d        0x3 
 .rodata        0x00000000c001db60      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001dcb0       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001dcb0       0x68 fs/vfs.32
                0x00000000c001dcb0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001dd18       0x1c fs/vfs.32
                0x00000000c001dd18                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001dd34       0x1c fs/vfs.32
                0x00000000c001dd34                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001dd50       0x2c hal/bus.32
                0x00000000c001dd50                vtable for Bus
 .rodata.str1.1
                0x00000000c001dd7c       0x1e hal/clock.32
 *fill*         0x00000000c001dd9a        0x2 
 .rodata._ZTV5Clock
                0x00000000c001dd9c       0x3c hal/clock.32
                0x00000000c001dd9c                vtable for Clock
 *fill*         0x00000000c001ddd8        0x8 
 .rodata        0x00000000c001dde0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001de10       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001de68       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001de68       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001de68       0x2c hal/device.32
                0x00000000c001de68                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001de94       0x2c hal/device.32
                0x00000000c001de94                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001dec0       0x2c hal/diskctrl.32
                0x00000000c001dec0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001deec       0x38 hal/diskphys.32
                0x00000000c001deec                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001df24       0x3e hal/intctrl.32
 *fill*         0x00000000c001df62        0x2 
 .rodata.str1.4
                0x00000000c001df64       0x5d hal/intctrl.32
 .rodata        0x00000000c001dfc1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e014       0x34 hal/keybrd.32
                0x00000000c001e014                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e048       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e08c       0x2c hal/logidisk.32
                0x00000000c001e08c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e0b8       0x2c hal/mouse.32
                0x00000000c001e0b8                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e0e4        0xb hal/partition.32
 *fill*         0x00000000c001e0ef        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e0f0       0x44 hal/serial.32
                0x00000000c001e0f0                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e134       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e134        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e134       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e134       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e134       0x30 hal/timer.32
                0x00000000c001e134                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e164       0x10 hal/vcache.32
                0x00000000c001e164                vtable for VCache
 .rodata.str1.1
                0x00000000c001e174       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e1dc       0x48 hal/video.32
                0x00000000c001e1dc                vtable for Video
 .rodata.str1.4
                0x00000000c001e224       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e2bf      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e3fb       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e3fb        0x8 hw/acpi.32
 *fill*         0x00000000c001e3fb        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e3fc       0x2c hw/acpi.32
                0x00000000c001e3fc                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e428      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e595        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e598       0x2c hw/cpu.32
                0x00000000c001e598                vtable for CPU
 .rodata.str1.1
                0x00000000c001e5c4       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e600       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c001e691      0x17e krnl/signal.32
 *fill*         0x00000000c001e80f        0x1 
 .rodata.str1.4
                0x00000000c001e810       0x26 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c001e836       0x97 krnl/syscalls.32
                                         0xa7 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e8cd       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e912        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001e91c        0xc sys/sbrk.32
 .rodata.str1.1
                0x00000000c001e928       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001e97c       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001e9a8      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001eb74       0x57 thr/prcssthr.32
 *fill*         0x00000000c001ebcb        0x1 
 .rodata.str1.4
                0x00000000c001ebcc      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ecd8       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ecd8       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ecd8       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ecd8        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001ecd8       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001ed78       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001eda8      0x182 arch/i386/hal.32
                                        0x191 (size before relaxing)
 *fill*         0x00000000c001ef2a        0x2 
 .rodata.str1.4
                0x00000000c001ef2c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001ef9f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001efb4       0x3c arch/i386/rtc.32
                0x00000000c001efb4                vtable for RTC
 .rodata.str1.1
                0x00000000c001eff0       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f031        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f034       0x68 fs/fat/vfslink.32
                0x00000000c001f034                vtable for FAT
 .rodata.str1.1
                0x00000000c001f09c        0x3 fs/iso9660/helper.32
                                          0x5 (size before relaxing)
 .rodata.str1.1
                0x00000000c001f09f       0x49 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c001f0e8       0x68 fs/iso9660/vfslink.32
                0x00000000c001f0e8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f150       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f194       0x34 hal/sound/sndcard.32
                0x00000000c001f194                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f1c8       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f207       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f23f       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f2e0       0x2c hw/bus/pci.32
                0x00000000c001f2e0                vtable for PCI
 .rodata.str1.1
                0x00000000c001f30c       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f393        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f394       0x2c hw/diskctrl/ide.32
                0x00000000c001f394                vtable for IDE
 .rodata.str1.4
                0x00000000c001f3c0       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f3e4       0x2c hw/diskctrl/satabus.32
                0x00000000c001f3e4                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f410       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f422        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f424       0x38 hw/diskphys/ata.32
                0x00000000c001f424                vtable for ATA
 .rodata.str1.1
                0x00000000c001f45c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f469        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f46c       0x38 hw/diskphys/atapi.32
                0x00000000c001f46c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f4a4       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f520       0x38 hw/diskphys/sata.32
                0x00000000c001f520                vtable for SATA
 .rodata.str1.1
                0x00000000c001f558      0x100 hw/diskphys/satapi.32
                                        0x10d (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f658       0x38 hw/diskphys/satapi.32
                0x00000000c001f658                vtable for SATAPI
 .rodata        0x00000000c001f690        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f698       0x2c hw/intctrl/apic.32
                0x00000000c001f698                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f6c4       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f6df        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f6e0       0x30 hw/timer/apictimer.32
                0x00000000c001f6e0                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f710       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f72d        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f730       0x30 hw/timer/pit.32
                0x00000000c001f730                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f760      0x3b1
 *(.data)
 .data          0x00000000c001f760        0x0 crti.32
 .data          0x00000000c001f760        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f760                __dso_handle
 .data          0x00000000c001f764        0x0 acpica/utclib.32
 .data          0x00000000c001f764        0x0 core/malloc.32
 .data          0x00000000c001f764        0x0 libk/ctype.32
 .data          0x00000000c001f764        0x0 libk/string.32
 .data          0x00000000c001f764        0x0 fs/fat/diskio.32
 .data          0x00000000c001f764        0x0 fs/fat/ff.32
 .data          0x00000000c001f764        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f764        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f764        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f764        0x0 core/computer.32
 .data          0x00000000c001f764        0x0 core/gdt.32
 .data          0x00000000c001f764        0x0 core/idle.32
 .data          0x00000000c001f764        0x0 core/idt.32
 .data          0x00000000c001f764        0x4 core/kheap.32
 .data          0x00000000c001f768        0x0 core/main.32
 .data          0x00000000c001f768        0x4 core/physmgr.32
                0x00000000c001f768                Phys::bitmap
 .data          0x00000000c001f76c        0x0 core/pipe.32
 *fill*         0x00000000c001f76c       0x14 
 .data          0x00000000c001f780       0x60 core/terminal.32
                0x00000000c001f780                VgaText::hiddenOut
                0x00000000c001f7a0                ansiToVGAMappings
 .data          0x00000000c001f7e0        0x0 core/tss.32
 .data          0x00000000c001f7e0        0x4 core/unixfile.32
                0x00000000c001f7e0                UnixFile::nextFd
 .data          0x00000000c001f7e4       0x15 core/virtmgr.32
                0x00000000c001f7e4                Virt::pageAllocPtr
                0x00000000c001f7e8                Virt::bitmap
                0x00000000c001f7ec                Virt::swapfileSectorsPerPage
                0x00000000c001f7f0                Virt::swapfileLength
                0x00000000c001f7f4                Virt::swapfileSector
                0x00000000c001f7f8                Virt::swapfileDrive
 *fill*         0x00000000c001f7f9        0x3 
 .data          0x00000000c001f7fc        0x4 coreobjs/c++.32
                0x00000000c001f7fc                __stack_chk_guard
 .data          0x00000000c001f800        0x0 dbg/kconsole.32
 .data          0x00000000c001f800        0x0 fs/vfs.32
 .data          0x00000000c001f800        0x0 hal/bus.32
 .data          0x00000000c001f800        0x0 hal/buzzer.32
 .data          0x00000000c001f800        0x0 hal/clock.32
 .data          0x00000000c001f800        0x0 hal/device.32
 .data          0x00000000c001f800        0x0 hal/diskctrl.32
 .data          0x00000000c001f800        0x0 hal/diskphys.32
 .data          0x00000000c001f800        0x0 hal/fpu.32
 .data          0x00000000c001f800        0x0 hal/intctrl.32
 .data          0x00000000c001f800        0x0 hal/keybrd.32
 .data          0x00000000c001f800        0x0 hal/logidisk.32
 .data          0x00000000c001f800        0x0 hal/mouse.32
 .data          0x00000000c001f800        0x0 hal/partition.32
 .data          0x00000000c001f800        0x0 hal/serial.32
 .data          0x00000000c001f800        0x0 hal/timer.32
 .data          0x00000000c001f800        0x0 hal/vcache.32
 .data          0x00000000c001f800        0x0 hal/video.32
 .data          0x00000000c001f800       0x10 hw/acpi.32
                0x00000000c001f800                legacyIRQRemaps
 .data          0x00000000c001f810        0x4 hw/cpu.32
                0x00000000c001f810                lastCode
 *fill*         0x00000000c001f814        0xc 
 .data          0x00000000c001f820      0x142 krnl/bootmsg.32
                0x00000000c001f820                KiSplashScreen
 *fill*         0x00000000c001f962       0x1e 
 .data          0x00000000c001f980       0x4d krnl/env.32
                0x00000000c001f980                defaultSysEnv
 .data          0x00000000c001f9cd        0x0 krnl/inlines.32
 .data          0x00000000c001f9cd        0x0 krnl/panic.32
 .data          0x00000000c001f9cd        0x0 krnl/powctrl.32
 .data          0x00000000c001f9cd        0x0 krnl/resolve.32
 *fill*         0x00000000c001f9cd       0x13 
 .data          0x00000000c001f9e0       0x4c krnl/signal.32
                0x00000000c001f9e0                KiDefaultSignalHandlers
 *fill*         0x00000000c001fa2c       0x14 
 .data          0x00000000c001fa40       0xcc krnl/syscalls.32
                0x00000000c001fa40                systemCallHandlers
 .data          0x00000000c001fb0c        0x0 reg/registry.32
 .data          0x00000000c001fb0c        0x0 sys/eject.32
 .data          0x00000000c001fb0c        0x0 sys/exit.32
 .data          0x00000000c001fb0c        0x0 sys/getcwd.32
 .data          0x00000000c001fb0c        0x0 sys/getpid.32
 .data          0x00000000c001fb0c        0x0 sys/getramdata.32
 .data          0x00000000c001fb0c        0x0 sys/getvgaptr.32
 .data          0x00000000c001fb0c        0x0 sys/loaddll.32
 .data          0x00000000c001fb0c        0x0 sys/read.32
 .data          0x00000000c001fb0c        0x0 sys/registersignal.32
 .data          0x00000000c001fb0c        0x0 sys/sbrk.32
 .data          0x00000000c001fb0c        0x0 sys/setcwd.32
 .data          0x00000000c001fb0c        0x0 sys/settime.32
 .data          0x00000000c001fb0c        0x0 sys/timezone.32
 .data          0x00000000c001fb0c        0x0 sys/write.32
 .data          0x00000000c001fb0c        0x0 sys/wsbe.32
 .data          0x00000000c001fb0c        0x0 sys/yield.32
 .data          0x00000000c001fb0c        0x0 thr/elf.32
 .data          0x00000000c001fb0c        0x4 thr/prcssthr.32
                0x00000000c001fb0c                Thr::nextPID
 .data          0x00000000c001fb10        0x0 vm86/vm8086.32
 .data          0x00000000c001fb10        0x0 arch/i386/hal.32
 .data          0x00000000c001fb10        0x0 arch/i386/pic.32
 .data          0x00000000c001fb10        0x0 arch/i386/rtc.32
 .data          0x00000000c001fb10        0x0 arch/i386/vga.32
 .data          0x00000000c001fb10        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fb10        0x0 fs/iso9660/helper.32
 .data          0x00000000c001fb10        0x1 fs/iso9660/vfslink.32
                0x00000000c001fb10                recentDriveletter
 .data          0x00000000c001fb11        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fb11        0x0 hal/sound/sndport.32
 .data          0x00000000c001fb11        0x0 hw/bus/isa.32
 .data          0x00000000c001fb11        0x0 hw/bus/pci.32
 .data          0x00000000c001fb11        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fb11        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fb11        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fb11        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fb11        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fb11        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fb11        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fb11        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fb11        0x0 hw/timer/pit.32
 .data          0x00000000c001fb11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fb11        0x0 crtn.32
 .data          0x00000000c001fb11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fb11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fb11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fb11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fb14        0x0
 .got           0x00000000c001fb14        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fb14        0x0
 .got.plt       0x00000000c001fb14        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fb14        0x0
 .igot.plt      0x00000000c001fb14        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fb14        0x0
 .tm_clone_table
                0x00000000c001fb14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fb14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fb11      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fb11        0x3 
 .eh_frame      0x00000000c001fb14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fb14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fb14       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fb6c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fbac       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fc18       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001fc9c        0x0
 .rel.got       0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001fc9c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001fc9c     0x4b8c
                0x00000000c001fc9c                sbss = .
 *(COMMON)
 *fill*         0x00000000c001fc9c        0x4 
 COMMON         0x00000000c001fca0       0xa0 fs/iso9660/iso9660.32
                0x00000000c001fca0                dcache
                0x00000000c001fce0                cdDriveLetter
                0x00000000c001fd00                icache
 *(.bss)
 .bss           0x00000000c001fd40        0x0 crti.32
 .bss           0x00000000c001fd40       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001fd60        0x4 acpica/utclib.32
 *fill*         0x00000000c001fd64       0x1c 
 .bss           0x00000000c001fd80      0x378 core/malloc.32
 .bss           0x00000000c00200f8        0x0 libk/ctype.32
 .bss           0x00000000c00200f8        0x0 libk/string.32
 .bss           0x00000000c00200f8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c00200f8        0x8 
 .bss           0x00000000c0020100       0x88 fs/fat/ff.32
 .bss           0x00000000c0020188        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0020188        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0020188       0x18 
 .bss           0x00000000c00201a0      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0020b38        0x6 core/computer.32
                0x00000000c0020b38                Krnl::computer
                0x00000000c0020b3c                KeIsPreemptionOn
                0x00000000c0020b3d                KeIsSchedulingOn
 *fill*         0x00000000c0020b3e        0x2 
 .bss           0x00000000c0020b40        0x6 core/gdt.32
                0x00000000c0020b40                gdtDescr
 .bss           0x00000000c0020b46        0x0 core/idle.32
 *fill*         0x00000000c0020b46        0x2 
 .bss           0x00000000c0020b48        0x6 core/idt.32
                0x00000000c0020b48                idtDescr
 .bss           0x00000000c0020b4e        0x0 core/kheap.32
 *fill*         0x00000000c0020b4e        0x2 
 .bss           0x00000000c0020b50        0x4 core/main.32
                0x00000000c0020b50                sysBootSettings
 .bss           0x00000000c0020b54       0x29 core/physmgr.32
                0x00000000c0020b54                Phys::forbidEvictions
                0x00000000c0020b58                Phys::currentPagePointer
                0x00000000c0020b5c                Phys::highestMem
                0x00000000c0020b60                Phys::oldPercent
                0x00000000c0020b64                Phys::usedPages
                0x00000000c0020b68                Phys::usablePages
                0x00000000c0020b6c                Phys::dmaUsage
 .bss           0x00000000c0020b7d        0x0 core/pipe.32
 *fill*         0x00000000c0020b7d        0x3 
 .bss           0x00000000c0020b80        0x9 core/terminal.32
                0x00000000c0020b80                terminalCycle
                0x00000000c0020b84                activeTerminal
                0x00000000c0020b88                VgaText::graphicMode
 *fill*         0x00000000c0020b89        0x1 
 .bss           0x00000000c0020b8a        0x2 core/tss.32
                0x00000000c0020b8a                doubleFaultSelector
 *fill*         0x00000000c0020b8c       0x14 
 .bss           0x00000000c0020ba0       0x84 core/unixfile.32
                0x00000000c0020ba0                sfileLpt
                0x00000000c0020be0                sfileCom
                0x00000000c0020c04                sfileNul
                0x00000000c0020c08                sfilePnt
                0x00000000c0020c0c                sfileAux
                0x00000000c0020c10                sfileCon
                0x00000000c0020c14                initialFilesAdded
                0x00000000c0020c18                unixFileLinkedList
 .bss           0x00000000c0020c24       0x10 core/virtmgr.32
                0x00000000c0020c24                twswaps
                0x00000000c0020c28                swapBalance
                0x00000000c0020c2c                Virt::swapfileBitmap
                0x00000000c0020c30                firstVAS
 .bss           0x00000000c0020c34        0x0 coreobjs/c++.32
 .bss           0x00000000c0020c34        0x0 dbg/kconsole.32
 .bss           0x00000000c0020c34        0x4 fs/vfs.32
                0x00000000c0020c34                installedFilesystems
 .bss           0x00000000c0020c38        0x0 hal/bus.32
 .bss           0x00000000c0020c38        0x0 hal/buzzer.32
 .bss           0x00000000c0020c38        0x8 hal/clock.32
                0x00000000c0020c38                User::dstOn
                0x00000000c0020c39                User::timezoneHalfHourOffset
                0x00000000c0020c3c                User::timezoneHourOffset
 .bss           0x00000000c0020c40        0x0 hal/device.32
 .bss           0x00000000c0020c40        0x0 hal/diskctrl.32
 .bss           0x00000000c0020c40        0x0 hal/diskphys.32
 .bss           0x00000000c0020c40        0x0 hal/fpu.32
 .bss           0x00000000c0020c40     0x2000 hal/intctrl.32
                0x00000000c0020c40                INT_contexts
                0x00000000c0021c40                INT_handlers
 .bss           0x00000000c0022c40      0x429 hal/keybrd.32
                0x00000000c0022c40                keyboardWaitingTaskList
                0x00000000c0022c44                keyboardSetupYet
                0x00000000c0022c48                guiKeyboardHandler
                0x00000000c0022c60                keystates
 *fill*         0x00000000c0023069       0x17 
 .bss           0x00000000c0023080       0x88 hal/logidisk.32
                0x00000000c0023080                diskAssignments
                0x00000000c00230a0                disks
 .bss           0x00000000c0023108        0x4 hal/mouse.32
                0x00000000c0023108                guiMouseHandler
 .bss           0x00000000c002310c        0x0 hal/partition.32
 .bss           0x00000000c002310c        0x0 hal/serial.32
 .bss           0x00000000c002310c        0x4 hal/timer.32
                0x00000000c002310c                milliTenthsSinceBoot
 .bss           0x00000000c0023110        0x0 hal/vcache.32
 .bss           0x00000000c0023110        0x4 hal/video.32
                0x00000000c0023110                screen
 *fill*         0x00000000c0023114        0xc 
 .bss           0x00000000c0023120      0x480 hw/acpi.32
                0x00000000c0023120                systemSleepFunction
                0x00000000c0023124                systemResetFunction
                0x00000000c0023128                systemShutdownFunction
                0x00000000c002312c                nextACPITable
                0x00000000c0023140                acpiTables
                0x00000000c0023340                usingXSDT
                0x00000000c0023344                MADTpointer
                0x00000000c0023348                RSDTpointer
                0x00000000c002334c                RSDPpointer
                0x00000000c0023350                nextAPICNMI
                0x00000000c0023360                apicNMIInfo
                0x00000000c00233e0                legacyIRQFlags
                0x00000000c0023400                ioapicDiscoveryNumber
                0x00000000c0023420                ioapicFoundInMADT
                0x00000000c0023440                ioapicAddresses
                0x00000000c00234c0                ioapicGSIBase
                0x00000000c0023540                processorDiscoveryNumber
                0x00000000c0023560                matchingAPICID
                0x00000000c0023580                processorID
 .bss           0x00000000c00235a0       0x10 hw/cpu.32
                0x00000000c00235a0                lastD
                0x00000000c00235a4                lastC
                0x00000000c00235a8                lastB
                0x00000000c00235ac                lastA
 .bss           0x00000000c00235b0        0x0 krnl/bootmsg.32
 .bss           0x00000000c00235b0        0x8 krnl/env.32
                0x00000000c00235b0                Krnl::userEnv
                0x00000000c00235b4                Krnl::systemEnv
 .bss           0x00000000c00235b8        0x0 krnl/inlines.32
 .bss           0x00000000c00235b8        0x1 krnl/panic.32
                0x00000000c00235b8                KeIsKernelInPanic
 *fill*         0x00000000c00235b9        0x7 
 .bss           0x00000000c00235c0       0x48 krnl/powctrl.32
                0x00000000c00235c0                Krnl::powCtrlOnBattery
                0x00000000c00235e0                Krnl::currentPowerSettings
                0x00000000c0023604                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0023608        0x0 krnl/resolve.32
 .bss           0x00000000c0023608        0x0 krnl/signal.32
 .bss           0x00000000c0023608        0x0 krnl/syscalls.32
 .bss           0x00000000c0023608        0x0 reg/registry.32
 .bss           0x00000000c0023608        0x0 sys/eject.32
 .bss           0x00000000c0023608        0x0 sys/exit.32
 .bss           0x00000000c0023608        0x0 sys/getcwd.32
 .bss           0x00000000c0023608        0x0 sys/getpid.32
 .bss           0x00000000c0023608        0x0 sys/getramdata.32
 .bss           0x00000000c0023608        0x0 sys/getvgaptr.32
 .bss           0x00000000c0023608        0x0 sys/loaddll.32
 .bss           0x00000000c0023608        0x0 sys/read.32
 .bss           0x00000000c0023608        0x0 sys/registersignal.32
 .bss           0x00000000c0023608        0x0 sys/sbrk.32
 .bss           0x00000000c0023608        0x0 sys/setcwd.32
 .bss           0x00000000c0023608        0x0 sys/settime.32
 .bss           0x00000000c0023608        0x0 sys/timezone.32
 .bss           0x00000000c0023608        0x0 sys/write.32
 .bss           0x00000000c0023608        0x0 sys/wsbe.32
 .bss           0x00000000c0023608        0x0 sys/yield.32
 *fill*         0x00000000c0023608       0x18 
 .bss           0x00000000c0023620      0x7a4 thr/elf.32
                0x00000000c0023620                Thr::driverLookupNext
                0x00000000c0023640                Thr::driverLookupLen
                0x00000000c0023840                Thr::driverLookupAddr
                0x00000000c0023a40                Thr::driverNameLookup
                0x00000000c0023c40                Thr::kernelSymbols
                0x00000000c0023cc0                Thr::kernelStringTable
                0x00000000c0023d40                Thr::kernelSymbolTable
                0x00000000c0023dc0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023dc4        0x4 
 .bss           0x00000000c0023dc8       0x68 thr/prcssthr.32
                0x00000000c0023dc8                cleanerThread
                0x00000000c0023dcc                weNeedTheCleanerToNotBlock
                0x00000000c0023dd0                retValLockStuff
                0x00000000c0023dd4                retValSchedLock
                0x00000000c0023dd8                lockStuffLock
                0x00000000c0023ddc                schedulerLock
                0x00000000c0023de0                taskSwitchesPostponedFlag
                0x00000000c0023de4                postponeTaskSwitchesCounter
                0x00000000c0023de8                irqDisableCounter
                0x00000000c0023dec                terminatedTaskList
                0x00000000c0023df8                sleepingTaskList
                0x00000000c0023e04                taskList
                0x00000000c0023e10                kernelProcess
 *fill*         0x00000000c0023e30       0x10 
 .bss           0x00000000c0023e40       0x40 vm86/vm8086.32
                0x00000000c0023e40                Vm::vmRetV
                0x00000000c0023e44                Vm::vmDone
                0x00000000c0023e45                Vm::vmReady
                0x00000000c0023e48                Vm::vm86Thread
                0x00000000c0023e4c                Vm::vmToHostCommsPtr
                0x00000000c0023e60                Vm::vmToHostComms
 .bss           0x00000000c0023e80       0x14 arch/i386/hal.32
                0x00000000c0023e80                apic
                0x00000000c0023e84                fpuOwner
                0x00000000c0023e88                coproLoadFunc
                0x00000000c0023e8c                coproSaveFunc
                0x00000000c0023e90                gpFaultIntercept
 .bss           0x00000000c0023e94        0x0 arch/i386/pic.32
 .bss           0x00000000c0023e94        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023e96        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023e96        0xa 
 .bss           0x00000000c0023ea0       0xf0 fs/fat/vfslink.32
                0x00000000c0023ea0                FAT::fats
                0x00000000c0023ec0                FAT::vfsToFatRemaps
                0x00000000c0023f40                fatToVFSRemaps
 .bss           0x00000000c0023f90        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0023f90       0x10 
 .bss           0x00000000c0023fa0      0x820 fs/iso9660/vfslink.32
                0x00000000c0023fa0                iso9660Owner
                0x00000000c0023fa4                recentSector
                0x00000000c0023fc0                recentBuffer
 .bss           0x00000000c00247c0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00247c0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00247c0        0x0 hw/bus/isa.32
 .bss           0x00000000c00247c0        0xd hw/bus/pci.32
                0x00000000c00247c0                thePCI
 .bss           0x00000000c00247cd        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00247cd        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00247cd        0x3 
 .bss           0x00000000c00247d0        0x8 hw/diskphys/ata.32
                0x00000000c00247d0                ataSectorsWritten
                0x00000000c00247d4                ataSectorsRead
 .bss           0x00000000c00247d8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00247d8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00247d8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c00247d8        0x8 
 .bss           0x00000000c00247e0       0x41 hw/intctrl/apic.32
                0x00000000c00247e0                noOfIOAPICs
                0x00000000c0024800                ioapics
                0x00000000c0024820                IOAPICsSetupYet
 .bss           0x00000000c0024821        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024821        0x3 
 .bss           0x00000000c0024824        0x4 hw/timer/pit.32
                0x00000000c0024824                pitFreq
 .bss           0x00000000c0024828        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024828        0x0 crtn.32
 .bss           0x00000000c0024828        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0024828        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0024828        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0024828        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024828                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00293b4                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
