Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1b90a
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 .text          0x00000000c0001afb        0x0 libk/string.32
 .text          0x00000000c0001afb       0x51 fs/fat/diskio.32
                0x00000000c0001afb                disk_status
                0x00000000c0001afe                disk_initialize
                0x00000000c0001b01                disk_read
                0x00000000c0001b17                disk_write
                0x00000000c0001b2d                disk_ioctl
 .text          0x00000000c0001b4c     0x3d4b fs/fat/ff.32
                0x00000000c00038e8                f_mount
                0x00000000c000394a                f_open
                0x00000000c0003c15                f_read
                0x00000000c0003e14                f_write
                0x00000000c0004048                f_sync
                0x00000000c00040fd                f_close
                0x00000000c000412c                f_lseek
                0x00000000c00042d3                f_opendir
                0x00000000c000439e                f_closedir
                0x00000000c00043c0                f_readdir
                0x00000000c0004452                f_stat
                0x00000000c00044d1                f_getfree
                0x00000000c00045d3                f_truncate
                0x00000000c00046b7                f_unlink
                0x00000000c00047d9                f_mkdir
                0x00000000c0004974                f_rename
                0x00000000c0004b2a                f_chmod
                0x00000000c0004bd3                f_utime
                0x00000000c0004c81                f_getlabel
                0x00000000c0004dd2                f_setlabel
                0x00000000c0004f62                f_expand
                0x00000000c00050c2                f_mkfs
 *fill*         0x00000000c0005897        0x1 
 .text          0x00000000c0005898       0x2f fs/fat/ffsystem.32
                0x00000000c0005898                ff_memalloc
                0x00000000c00058b0                ff_memfree
 *fill*         0x00000000c00058c7        0x1 
 .text          0x00000000c00058c8      0x2a8 fs/fat/ffunicode.32
                0x00000000c00058c8                ff_uni2oem
                0x00000000c0005968                ff_oem2uni
                0x00000000c00059e0                ff_wtoupper
 .text          0x00000000c0005b70       0x94 compat/inlines.32
                0x00000000c0005b70                CPU::current()
                0x00000000c0005b7c                operator new(unsigned long)
                0x00000000c0005b81                operator delete(void*)
                0x00000000c0005b86                disableIRQs()
                0x00000000c0005b88                enableIRQs()
                0x00000000c0005b8a                lockScheduler()
                0x00000000c0005b92                unlockScheduler()
                0x00000000c0005ba1                lockStuff()
                0x00000000c0005baf                unlockStuff()
                0x00000000c0005be9                Virt::getAKernelVAS()
                0x00000000c0005bef                __not_memcpy
 .text          0x00000000c0005c04      0x118 compat/resolve.32
                0x00000000c0005c04                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0005d1c      0x73f core/computer.32
                0x00000000c0005d1c                Computer::close(int, int, void*)
                0x00000000c0005d61                Krnl::firstTask()
                0x00000000c0005e9a                Computer::Computer()
                0x00000000c0005e9a                Computer::Computer()
                0x00000000c0006000                Computer::setBootMessage(char const*)
                0x00000000c0006002                Computer::detectFeatures()
                0x00000000c000620c                Computer::displayFeatures()
                0x00000000c000620e                Computer::rdmsr(unsigned int)
                0x00000000c000623a                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006272                Computer::shutdown()
                0x00000000c000628a                Computer::restart()
                0x00000000c00062a2                Computer::sleep()
                0x00000000c00062b6                Computer::nmiEnabled()
                0x00000000c00062c2                Computer::readCMOS(unsigned char)
                0x00000000c00062dc                Computer::enableNMI(bool)
                0x00000000c00062f4                Computer::open(int, int, void*)
                0x00000000c00063c8                Computer::disableNMI()
                0x00000000c00063d8                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00063f6                Computer::handleNMI()
 *fill*         0x00000000c000645b        0x1 
 .text          0x00000000c000645c      0x211 core/gdt.32
                0x00000000c000645c                GDTEntry::setBase(unsigned int)
                0x00000000c0006478                GDTEntry::setLimit(unsigned int)
                0x00000000c0006496                GDT::GDT()
                0x00000000c0006496                GDT::GDT()
                0x00000000c00064ac                GDT::addEntry(GDTEntry)
                0x00000000c00064ce                GDT::getNumberOfEntries()
                0x00000000c00064d6                GDT::flush()
                0x00000000c00064f8                GDT::setup()
 .text          0x00000000c000666d       0x19 core/idle.32
                0x00000000c000666d                idleFunction(void*)
 *fill*         0x00000000c0006686        0x2 
 .text          0x00000000c0006688      0x464 core/idt.32
                0x00000000c0006688                IDTEntry::IDTEntry(bool)
                0x00000000c0006688                IDTEntry::IDTEntry(bool)
                0x00000000c00066fa                IDTEntry::setOffset(unsigned int)
                0x00000000c0006710                IDT::IDT()
                0x00000000c0006710                IDT::IDT()
                0x00000000c0006712                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000671a                IDT::addEntry(IDTEntry, int)
                0x00000000c0006734                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000676c                IDT::flush()
                0x00000000c0006786                IDT::setup()
 .text          0x00000000c0006aec      0x183 core/kheap.32
                0x00000000c0006aec                sbrk
                0x00000000c0006b81                mmap
                0x00000000c0006b97                munmap
                0x00000000c0006bad                liballoc_lock()
                0x00000000c0006bba                liballoc_unlock()
                0x00000000c0006bce                liballoc_alloc(int)
                0x00000000c0006be6                liballoc_free(void*, int)
                0x00000000c0006c01                realloc
                0x00000000c0006c15                malloc
                0x00000000c0006c25                free
                0x00000000c0006c35                rfree
                0x00000000c0006c45                calloc
 .text          0x00000000c0006c6f      0x1b4 core/main.32
                0x00000000c0006c6f                Krnl::setBootMessage(char const*)
                0x00000000c0006cdb                kernel_main
 .text          0x00000000c0006e23      0x5dc core/physmgr.32
                0x00000000c0006e23                Phys::allocateDMA(unsigned long)
                0x00000000c0006efa                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0006f2d                Phys::setPageState(unsigned long, bool)
                0x00000000c0006f5f                Phys::getPageState(unsigned long)
                0x00000000c0006f80                Phys::freePage(unsigned long)
                0x00000000c0006fe2                Phys::allocatePage()
                0x00000000c00070a0                Phys::allocateContiguousPages(int)
                0x00000000c00070fc                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007134                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c00073ff        0x1 
 .text          0x00000000c0007400      0x273 core/pipe.32
                0x00000000c0007400                Pipe::isAtty()
                0x00000000c0007404                Pipe::~Pipe()
                0x00000000c0007404                Pipe::~Pipe()
                0x00000000c0007428                Pipe::~Pipe()
                0x00000000c0007450                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007510                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000760c                Pipe::Pipe(int)
                0x00000000c000760c                Pipe::Pipe(int)
 *fill*         0x00000000c0007673        0x1 
 .text          0x00000000c0007674      0xa1e core/terminal.32
                0x00000000c0007674                VgaText::isAtty()
                0x00000000c0007678                VgaText::~VgaText()
                0x00000000c0007678                VgaText::~VgaText()
                0x00000000c000769c                VgaText::~VgaText()
                0x00000000c00076c6                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00076e6                setTerminalScrollLock(bool)
                0x00000000c00076e7                doTerminalCycle()
                0x00000000c00076e8                addToTerminalCycle(VgaText*)
                0x00000000c00076e9                scrollTerminalScrollLock(int)
                0x00000000c00076ea                VgaText::updateTitle()
                0x00000000c00076ec                VgaText::load()
                0x00000000c00076ee                VgaText::updateCursor()
                0x00000000c0007704                VgaText::doANSI_SGR(int)
                0x00000000c0007778                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0007788                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0007798                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00077b8                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00077c4                VgaText::setTitleColour(VgaColour)
                0x00000000c00077d0                VgaText::setTitle(char*)
                0x00000000c00077d2                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00077e4                VgaText::scrollScreen()
                0x00000000c000787c                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000788e                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000791e                VgaText::getCursorX()
                0x00000000c0007926                VgaText::getCursorY()
                0x00000000c000792e                VgaText::setCursor(int, int)
                0x00000000c0007945                setActiveTerminal(VgaText*)
                0x00000000c0007990                VgaText::clearScreen()
                0x00000000c00079de                VgaText::setCursorX(int)
                0x00000000c00079f6                VgaText::setCursorY(int)
                0x00000000c0007a0e                VgaText::incrementCursor(bool)
                0x00000000c0007a62                VgaText::decrementCursor(bool)
                0x00000000c0007a84                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0007b52                VgaText::putchar(char)
                0x00000000c0007c3e                VgaText::putx(unsigned int)
                0x00000000c0007c84                VgaText::puts(char const*)
                0x00000000c0007caa                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0007cf6                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0007e48                VgaText::VgaText(char const*)
                0x00000000c0007e48                VgaText::VgaText(char const*)
                0x00000000c0007f94                VgaText::receiveKey(unsigned char)
                0x00000000c000806c                VgaText::doUpdate()
                0x00000000c000806d                newTerminal(char*)
 *fill*         0x00000000c0008092        0x2 
 .text          0x00000000c0008094      0x1a1 core/tss.32
                0x00000000c0008094                TSS::TSS()
                0x00000000c0008094                TSS::TSS()
                0x00000000c00080a4                TSS::setESP(unsigned long)
                0x00000000c00080b8                TSS::flush()
                0x00000000c00080d8                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008235        0x1 
 .text          0x00000000c0008236      0x4c2 core/unixfile.32
                0x00000000c0008236                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000828c                ReservedFilename::isAtty()
                0x00000000c00082a8                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008306                UnixFile::getFileDescriptor()
                0x00000000c000830e                UnixFile::UnixFile(int)
                0x00000000c000830e                UnixFile::UnixFile(int)
                0x00000000c00084be                ReservedFilename::ReservedFilename(int)
                0x00000000c00084be                ReservedFilename::ReservedFilename(int)
                0x00000000c00084f0                UnixFile::~UnixFile()
                0x00000000c00084f0                UnixFile::~UnixFile()
                0x00000000c0008588                UnixFile::~UnixFile()
                0x00000000c00085b0                ReservedFilename::~ReservedFilename()
                0x00000000c00085b0                ReservedFilename::~ReservedFilename()
                0x00000000c00085d4                ReservedFilename::~ReservedFilename()
                0x00000000c00085fb                getFromFileDescriptor(int)
 .text          0x00000000c00086f8     0x119a core/virtmgr.32
                0x00000000c00086f8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000872d                Virt::getPageState(unsigned long)
                0x00000000c0008751                Virt::allocateKernelVirtualPages(int)
                0x00000000c0008862                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0008880                Virt::swapIDToSector(unsigned long)
                0x00000000c0008892                Virt::allocateSwapfilePage()
                0x00000000c0008910                Virt::virtualMemorySetup()
                0x00000000c000895b                Virt::setupPageSwapping(int)
                0x00000000c00089cc                VAS::VAS(VAS*)
                0x00000000c00089cc                VAS::VAS(VAS*)
                0x00000000c00089fa                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0008a26                VAS::getPageTableEntry(unsigned long)
                0x00000000c0008a45                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0008b6a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0008b8e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0008ba8                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0008be8                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0008c1c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0008c46                VAS::~VAS()
                0x00000000c0008c46                VAS::~VAS()
                0x00000000c0008daa                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0008eae                VAS::allocatePages(int, int)
                0x00000000c0009086                VAS::setCPUSpecific(unsigned long)
                0x00000000c00090a4                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000916a                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009258                VAS::VAS(bool)
                0x00000000c0009258                VAS::VAS(bool)
                0x00000000c00094d8                VAS::VAS()
                0x00000000c00094d8                VAS::VAS()
                0x00000000c0009548                VAS::evict(unsigned long)
                0x00000000c000960a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c00096f8                VAS::scanForEviction()
                0x00000000c00097d8                mapVASFirstTime
 .text          0x00000000c0009892       0x5f coreobjs/c++.32
                0x00000000c0009892                __cxa_atexit
                0x00000000c0009895                __cxa_finalize
                0x00000000c0009896                __stack_chk_fail
                0x00000000c00098cc                __cxa_pure_virtual
                0x00000000c00098dd                operator new[](unsigned long)
                0x00000000c00098e2                operator delete(void*, unsigned long)
                0x00000000c00098e7                operator delete[](void*)
                0x00000000c00098ec                operator delete[](void*, unsigned long)
 .text          0x00000000c00098f1      0x21c dbg/kconsole.32
                0x00000000c00098f1                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000995c                Dbg::logc(char)
                0x00000000c000997c                Dbg::logs(char*)
                0x00000000c0009999                Dbg::logWriteInt(unsigned int)
                0x00000000c00099b7                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c00099d8                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c0009b0d        0x1 
 .text          0x00000000c0009b0e      0xc5c fs/vfs.32
                0x00000000c0009b0e                File::read(unsigned long long, void*, int*)
                0x00000000c0009b66                File::write(unsigned long long, void*, int*)
                0x00000000c0009bbe                Directory::read(unsigned long long, void*, int*)
                0x00000000c0009c16                Directory::write(unsigned long long, void*, int*)
                0x00000000c0009c44                File::isAtty()
                0x00000000c0009c48                Directory::isAtty()
                0x00000000c0009c4c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0009c52                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0009c58                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0009c5e                File::~File()
                0x00000000c0009c5e                File::~File()
                0x00000000c0009c82                File::~File()
                0x00000000c0009cac                Directory::~Directory()
                0x00000000c0009cac                Directory::~Directory()
                0x00000000c0009cd0                Directory::~Directory()
                0x00000000c0009cfa                Filesystem::Filesystem()
                0x00000000c0009cfa                Filesystem::Filesystem()
                0x00000000c0009d1e                Filesystem::~Filesystem()
                0x00000000c0009d1e                Filesystem::~Filesystem()
                0x00000000c0009d2c                Filesystem::~Filesystem()
                0x00000000c0009d50                Fs::getcwd(Process*, char*, int)
                0x00000000c0009d7a                Fs::initVFS()
                0x00000000c0009da4                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c0009f4e                File::File(char const*, Process*)
                0x00000000c0009f4e                File::File(char const*, Process*)
                0x00000000c000a00e                File::open(FileOpenMode)
                0x00000000c000a06c                File::close()
                0x00000000c000a0cc                File::seek(unsigned long long)
                0x00000000c000a122                File::tell(unsigned long long*)
                0x00000000c000a172                File::rewind()
                0x00000000c000a186                File::unlink()
                0x00000000c000a1d2                File::rename(char const*)
                0x00000000c000a220                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000a27c                File::exists()
                0x00000000c000a2ba                File::stat(unsigned long long*, bool*)
                0x00000000c000a31b                Fs::setcwd(Process*, char*)
                0x00000000c000a478                Directory::Directory(char const*, Process*)
                0x00000000c000a478                Directory::Directory(char const*, Process*)
                0x00000000c000a538                Directory::open()
                0x00000000c000a594                Directory::close()
                0x00000000c000a5f4                Directory::unlink()
                0x00000000c000a640                Directory::rename(char const*)
                0x00000000c000a68e                Directory::exists()
                0x00000000c000a6cc                Directory::read(dirent*)
                0x00000000c000a718                Directory::create()
                0x00000000c000a764                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000a76a        0x2 
 .text          0x00000000c000a76c       0x86 hal/bus.32
                0x00000000c000a76c                Bus::Bus(char const*)
                0x00000000c000a76c                Bus::Bus(char const*)
                0x00000000c000a7a4                Bus::~Bus()
                0x00000000c000a7a4                Bus::~Bus()
                0x00000000c000a7c8                Bus::~Bus()
 .text          0x00000000c000a7f2       0x96 hal/buzzer.32
                0x00000000c000a7f2                beepThread(void*)
                0x00000000c000a82f                Krnl::beep(int, int, bool)
 .text          0x00000000c000a888      0x46d hal/clock.32
                0x00000000c000a888                User::loadClockSettings(int)
                0x00000000c000a8da                Clock::Clock(char const*)
                0x00000000c000a8da                Clock::Clock(char const*)
                0x00000000c000a910                Clock::~Clock()
                0x00000000c000a910                Clock::~Clock()
                0x00000000c000a934                Clock::~Clock()
                0x00000000c000a95e                Clock::timeInSecondsLocal()
                0x00000000c000a9a6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000a9ff                datetimeToSeconds(datetime_t)
                0x00000000c000ab2c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000ab8c                secondsToDatetime(unsigned long long)
                0x00000000c000acd0                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000acf5        0x1 
 .text          0x00000000c000acf6      0x464 hal/device.32
                0x00000000c000acf6                Device::hibernate()
                0x00000000c000acf8                Device::wake()
                0x00000000c000acfa                Device::detect()
                0x00000000c000acfc                Device::disableLegacy()
                0x00000000c000acfe                Device::powerSaving(PowerSavingLevel)
                0x00000000c000ad00                DriverlessDevice::close(int, int, void*)
                0x00000000c000ad04                DriverlessDevice::detect()
                0x00000000c000ad06                DriverlessDevice::open(int, int, void*)
                0x00000000c000ad1a                Device::~Device()
                0x00000000c000ad1a                Device::~Device()
                0x00000000c000ad28                Device::~Device()
                0x00000000c000ad50                Device::findAndLoadDriver()
                0x00000000c000ad5e                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000ad84                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000adc4                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000adee                Device::getParent()
                0x00000000c000adfa                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ae18                Device::addChild(Device*)
                0x00000000c000ae5c                Device::removeAllChildren()
                0x00000000c000aea2                Device::hibernateAll()
                0x00000000c000aed2                Device::wakeAll()
                0x00000000c000af02                Device::detectAll()
                0x00000000c000af32                Device::disableLegacyAll()
                0x00000000c000af34                Device::loadDriversForAll()
                0x00000000c000af36                Device::closeAll()
                0x00000000c000af6c                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000afa2                Device::setName(char const*)
                0x00000000c000afb0                Device::Device(char const*)
                0x00000000c000afb0                Device::Device(char const*)
                0x00000000c000b0ac                Device::getName()
                0x00000000c000b0b6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000b0b6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000b0ec                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000b130                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000b15a        0x2 
 .text          0x00000000c000b15c       0x86 hal/diskctrl.32
                0x00000000c000b15c                HardDiskController::HardDiskController(char const*)
                0x00000000c000b15c                HardDiskController::HardDiskController(char const*)
                0x00000000c000b194                HardDiskController::~HardDiskController()
                0x00000000c000b194                HardDiskController::~HardDiskController()
                0x00000000c000b1b8                HardDiskController::~HardDiskController()
 .text          0x00000000c000b1e2       0xe2 hal/diskphys.32
                0x00000000c000b1e2                PhysicalDisk::eject()
                0x00000000c000b1e6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b1e6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b24e                PhysicalDisk::startCache()
                0x00000000c000b276                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b276                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b29a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000b2c4        0x0 hal/fpu.32
 .text          0x00000000c000b2c4      0x35d hal/intctrl.32
                0x00000000c000b2c4                int_handler
                0x00000000c000b34c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000b394                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b4cc                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000b500                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b57f                setupINTS()
                0x00000000c000b5dc                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000b621        0x1 
 .text          0x00000000c000b622      0x78c hal/keybrd.32
                0x00000000c000b622                startGUI(void*)
                0x00000000c000b68e                startGUIVESA(void*)
                0x00000000c000b6fa                sendKeyToTerminal(unsigned char)
                0x00000000c000b7bd                sendKeyboardToken(KeyboardToken)
                0x00000000c000bbfd                clearInternalKeybuffer(VgaText*)
                0x00000000c000bc32                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000bd24                Keyboard::Keyboard(char const*)
                0x00000000c000bd24                Keyboard::Keyboard(char const*)
                0x00000000c000bd60                Keyboard::~Keyboard()
                0x00000000c000bd60                Keyboard::~Keyboard()
                0x00000000c000bd84                Keyboard::~Keyboard()
 .text          0x00000000c000bdae      0x3ea hal/logidisk.32
                0x00000000c000bdae                LogicalDisk::close(int, int, void*)
                0x00000000c000bdb2                LogicalDisk::~LogicalDisk()
                0x00000000c000bdb2                LogicalDisk::~LogicalDisk()
                0x00000000c000bdd6                LogicalDisk::~LogicalDisk()
                0x00000000c000be00                LogicalDisk::open(int, int, void*)
                0x00000000c000be14                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000be4c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000be92                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000be92                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bf48                LogicalDisk::assignDriveLetter()
                0x00000000c000bffe                LogicalDisk::mount()
                0x00000000c000c046                LogicalDisk::unmount()
                0x00000000c000c056                LogicalDisk::eject()
                0x00000000c000c06a                LogicalDisk::unassignDriveLetter()
                0x00000000c000c0c0                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000c12c                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000c198       0x86 hal/mouse.32
                0x00000000c000c198                Mouse::Mouse(char const*)
                0x00000000c000c198                Mouse::Mouse(char const*)
                0x00000000c000c1d0                Mouse::~Mouse()
                0x00000000c000c1d0                Mouse::~Mouse()
                0x00000000c000c1f4                Mouse::~Mouse()
 .text          0x00000000c000c21e      0x339 hal/partition.32
                0x00000000c000c21e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c2c6                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000c557        0x1 
 .text          0x00000000c000c558       0x86 hal/serial.32
                0x00000000c000c558                Serial::Serial(char const*)
                0x00000000c000c558                Serial::Serial(char const*)
                0x00000000c000c590                Serial::~Serial()
                0x00000000c000c590                Serial::~Serial()
                0x00000000c000c5b4                Serial::~Serial()
 *fill*         0x00000000c000c5de        0x2 
 .text          0x00000000c000c5e0      0x234 hal/timer.32
                0x00000000c000c5e0                Timer::Timer(char const*)
                0x00000000c000c5e0                Timer::Timer(char const*)
                0x00000000c000c618                Timer::~Timer()
                0x00000000c000c618                Timer::~Timer()
                0x00000000c000c63c                Timer::~Timer()
                0x00000000c000c666                Timer::read()
                0x00000000c000c671                setupTimer(int)
                0x00000000c000c6ac                timerHandler(unsigned int)
 .text          0x00000000c000c814      0x43e hal/vcache.32
                0x00000000c000c814                VCache::VCache(PhysicalDisk*)
                0x00000000c000c814                VCache::VCache(PhysicalDisk*)
                0x00000000c000c97c                VCache::invalidateReadBuffer()
                0x00000000c000c98c                VCache::writeWriteBuffer()
                0x00000000c000c9d8                VCache::~VCache()
                0x00000000c000c9d8                VCache::~VCache()
                0x00000000c000ca2c                VCache::~VCache()
                0x00000000c000ca54                VCache::write(unsigned long long, int, void*)
                0x00000000c000cb4e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000cc52      0x4b3 hal/video.32
                0x00000000c000cc52                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000cc9e                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000cd0e                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000cd8c                Video::clearScreen(unsigned int)
                0x00000000c000cdc0                Video::putpixel(int, int, unsigned int)
                0x00000000c000cdce                Video::Video(char const*)
                0x00000000c000cdce                Video::Video(char const*)
                0x00000000c000ce04                Video::~Video()
                0x00000000c000ce04                Video::~Video()
                0x00000000c000ce28                Video::~Video()
                0x00000000c000ce52                Video::isMonochrome()
                0x00000000c000ce5e                Video::getWidth()
                0x00000000c000ce6a                Video::getHeight()
                0x00000000c000ce76                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000cf32                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000d09a                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000d105        0x3 
 .text          0x00000000c000d108     0x1307 hw/acpi.32
                0x00000000c000d108                ACPI::close(int, int, void*)
                0x00000000c000d1c0                findRSDP()
                0x00000000c000d250                loadACPITables(unsigned char*)
                0x00000000c000d4b4                findRSDT(unsigned char*)
                0x00000000c000d604                findDataTable(unsigned char*, char*)
                0x00000000c000d67c                scanMADT()
                0x00000000c000db50                ACPI::ACPI()
                0x00000000c000db50                ACPI::ACPI()
                0x00000000c000dba4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000dc8c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000dd54                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000dd5c                ACPI::detectPCI()
                0x00000000c000df64                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000dfb8                ACPI::sleep()
                0x00000000c000dfd4                ACPI::open(int, int, void*)
 *fill*         0x00000000c000e40f        0x1 
 .text          0x00000000c000e410      0xb95 hw/cpu.32
                0x00000000c000e410                CPU::close(int, int, void*)
                0x00000000c000e414                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000e430                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000e448                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000e4bc                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000e540                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000e56e                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000e59c                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000e5ca                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000e5f8                CPU::CPU()
                0x00000000c000e5f8                CPU::CPU()
                0x00000000c000e686                CPU::displayFeatures()
                0x00000000c000e688                CPU::detectFeatures()
                0x00000000c000ed4c                CPU::setupSMEP()
                0x00000000c000ed58                CPU::setupUMIP()
                0x00000000c000ed62                CPU::setupTSC()
                0x00000000c000ed6c                CPU::setupLargePages()
                0x00000000c000ed76                CPU::setupPAT()
                0x00000000c000edb2                CPU::setupMTRR()
                0x00000000c000edb4                CPU::setupGlobalPages()
                0x00000000c000edbe                CPU::allowUsermodeDataAccess()
                0x00000000c000edd0                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ede2                CPU::setupSMAP()
                0x00000000c000edf0                CPU::setupFeatures()
                0x00000000c000eebc                CPU::open(int, int, void*)
 *fill*         0x00000000c000efa5        0x1 
 .text          0x00000000c000efa6      0x581 krnl/env.32
                0x00000000c000efa6                EnvVarContainer::getEnv(char const*)
                0x00000000c000efe4                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000f0a6                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000f0a8                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000f28e                EnvVarContainer::__loadSystem()
                0x00000000c000f2a8                EnvVarContainer::__loadUser()
                0x00000000c000f2aa                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f2aa                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f2cc                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f2cc                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f2fc                Krnl::getEnv(Process*, char const*)
                0x00000000c000f361                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000f37b                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000f39a                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000f3ad                Krnl::deleteEnvSystem(char const*)
                0x00000000c000f3ae                Krnl::deleteEnvUser(char const*)
                0x00000000c000f3af                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000f3b0                Krnl::newProcessEnv(Process*)
                0x00000000c000f3d2                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000f41e                Krnl::loadSystemEnv()
                0x00000000c000f44c                Krnl::loadUserEnv()
                0x00000000c000f472                Krnl::flushEnv()
                0x00000000c000f473                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c000f493                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c000f527      0x1ff krnl/panic.32
                0x00000000c000f527                Krnl::panic(char const*)
 .text          0x00000000c000f726      0x168 krnl/powctrl.32
                0x00000000c000f726                Krnl::powerThread(void*)
                0x00000000c000f77a                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c000f790                Krnl::userIOReceived()
                0x00000000c000f79b                Krnl::handlePowerButton()
                0x00000000c000f7d0                Krnl::handleSleepButton()
                0x00000000c000f805                Krnl::setupPowerManager()
 .text          0x00000000c000f88e      0x50e reg/registry.32
                0x00000000c000f88e                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c000f9e6                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c000fb3b                Reg::getLine(char*, char*, char*)
                0x00000000c000fb72                Reg::readInt(char*, char*, int*)
                0x00000000c000fc5d                Reg::readString(char*, char*, char*, int)
                0x00000000c000fcde                Reg::readBool(char*, char*, bool*)
                0x00000000c000fd03                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c000fd2f                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c000fd5b                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c000fd9c       0x36 sys/sc_eject.32
                0x00000000c000fd9c                Sys::eject(regs*)
 .text          0x00000000c000fdd2       0x18 sys/sc_exit.32
                0x00000000c000fdd2                Sys::exit(regs*)
 .text          0x00000000c000fdea       0x1f sys/sc_getcwd.32
                0x00000000c000fdea                Sys::getCwd(regs*)
 .text          0x00000000c000fe09        0xc sys/sc_getpid.32
                0x00000000c000fe09                Sys::getPID(regs*)
 .text          0x00000000c000fe15       0x1a sys/sc_getramdata.32
                0x00000000c000fe15                Sys::getRAMData(regs*)
 .text          0x00000000c000fe2f       0x82 sys/sc_getvgaptr.32
                0x00000000c000fe2f                Sys::getVGAPtr(regs*)
 .text          0x00000000c000feb1       0xa8 sys/sc_loaddll.32
                0x00000000c000feb1                Sys::loadDLL(regs*)
 .text          0x00000000c000ff59       0x68 sys/sc_read.32
                0x00000000c000ff59                Sys::read(regs*)
 .text          0x00000000c000ffc1       0x55 sys/sc_sbrk.32
                0x00000000c000ffc1                Sys::sbrk(regs*)
 .text          0x00000000c0010016       0x1c sys/sc_setcwd.32
                0x00000000c0010016                Sys::setCwd(regs*)
 .text          0x00000000c0010032       0x95 sys/sc_settime.32
                0x00000000c0010032                Sys::setTime(regs*)
 .text          0x00000000c00100c7       0x4a sys/sc_timezone.32
                0x00000000c00100c7                Sys::timezone(regs*)
 .text          0x00000000c0010111       0x68 sys/sc_write.32
                0x00000000c0010111                Sys::write(regs*)
 .text          0x00000000c0010179       0x62 sys/sc_wsbe.32
                0x00000000c0010179                Sys::wsbe(regs*)
 .text          0x00000000c00101db       0x25 sys/sc_yield.32
                0x00000000c00101db                Sys::yield(regs*)
 .text          0x00000000c0010200      0xe2c sys/syscalls.32
                0x00000000c0010200                sysCallSeekDir(regs*)
                0x00000000c0010205                sysCallTellDir(regs*)
                0x00000000c001020a                sysCallVerify(regs*)
                0x00000000c0010214                sysCallGetArgc(regs*)
                0x00000000c0010224                sysCallTTYName(regs*)
                0x00000000c001022c                sysFormatDisk(regs*)
                0x00000000c0010299                sysSetDiskVolumeLabel(regs*)
                0x00000000c00102e3                sysGetDiskVolumeLabel(regs*)
                0x00000000c0010338                sysShutdown(regs*)
                0x00000000c0010396                sysCallRealpath(regs*)
                0x00000000c00103d9                sysCallReadDir(regs*)
                0x00000000c0010459                sysCallIsATTY(regs*)
                0x00000000c00104b5                sysCallSeek(regs*)
                0x00000000c001050e                sysCallTell(regs*)
                0x00000000c001057d                sysCallSize(regs*)
                0x00000000c00105f2                sysCallSizeFromFilename(regs*)
                0x00000000c00106a5                sysCallClose(regs*)
                0x00000000c0010705                sysCallOpenDir(regs*)
                0x00000000c001077c                sysCallCloseDir(regs*)
                0x00000000c00107d0                sysCallMakeDir(regs*)
                0x00000000c0010842                sysCallWait(regs*)
                0x00000000c001085f                sysCallNotImpl(regs*)
                0x00000000c001087a                sysPanic(regs*)
                0x00000000c0010895                sysCallRmdir(regs*)
                0x00000000c00108fc                sysCallUnlink(regs*)
                0x00000000c0010963                sysCallGetArgv(regs*)
                0x00000000c00109b0                sysCallUSleep(regs*)
                0x00000000c00109d9                sysCallSpawn(regs*)
                0x00000000c0010a42                sysCallGetEnv(regs*)
                0x00000000c0010af1                sysSetFatAttrib(regs*)
                0x00000000c0010b68                sysPipe(regs*)
                0x00000000c0010bad                sysGetUnixTime(regs*)
                0x00000000c0010bc1                string_ends_with(char const*, char const*)
                0x00000000c0010c0b                sysCallOpen(regs*)
                0x00000000c0010dff                Sys::loadSyscalls()
                0x00000000c0010fea                Sys::systemCall(regs*, void*)
 .text          0x00000000c001102c     0x11e5 thr/elf.32
                0x00000000c001102c                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00112b8                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00114ce                Thr::runtimeReferenceHelper()
                0x00000000c00114e1                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0011530                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00117ee                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0011f24                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0011f56                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0011f8d                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0011fa7                Thr::loadDLL(char const*, bool)
                0x00000000c00121d8                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0012211        0x3 
 .text          0x00000000c0012214     0x12c5 thr/prcssthr.32
                0x00000000c0012214                userModeEntryPoint(void*)
                0x00000000c001223c                changeTSS
                0x00000000c001226c                switchToThread(ThreadControlBlock*)
                0x00000000c0012320                Process::addArgs(char**)
                0x00000000c0012380                Process::Process(char const*, Process*, char**)
                0x00000000c0012380                Process::Process(char const*, Process*, char**)
                0x00000000c0012570                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0012570                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001272c                taskStartupFunction
                0x00000000c0012738                Semaphore::Semaphore(int)
                0x00000000c0012738                Semaphore::Semaphore(int)
                0x00000000c0012768                Mutex::Mutex()
                0x00000000c0012768                Mutex::Mutex()
                0x00000000c001277c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0012874                Process::createUserThread()
                0x00000000c0012894                setupMultitasking(void (*)())
                0x00000000c001299c                schedule()
                0x00000000c0012a2c                Semaphore::tryAcquire()
                0x00000000c0012af8                Semaphore::assertLocked(char const*)
                0x00000000c0012b70                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0012b98                blockTask(TaskState)
                0x00000000c0012bc8                waitTask(int, int*, int)
                0x00000000c0012c0c                milliTenthSleepUntil(unsigned int)
                0x00000000c0012c9c                milliTenthSleep(unsigned int)
                0x00000000c0012cac                sleep(unsigned int)
                0x00000000c0012cc8                Semaphore::acquire()
                0x00000000c0012d84                taskReturned
                0x00000000c0012dc0                Thr::processFromPID(int)
                0x00000000c0012e60                unblockTask(ThreadControlBlock*)
                0x00000000c0012f04                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00131d0                cleanerTaskFunction(void*)
                0x00000000c00132c0                terminateTask(int)
                0x00000000c001338c                Thr::terminateFromIRQ(int)
                0x00000000c001339c                Semaphore::release()
 .text          0x00000000c00134d9      0xb93 vm86/vm8086.32
                0x00000000c00134d9                Vm::inbv(unsigned short)
                0x00000000c00134ec                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0013522                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0013532                Vm::getSegment(unsigned int)
                0x00000000c001353a                Vm::getOffset(unsigned int)
                0x00000000c001353f                Vm::mainloop2()
                0x00000000c0013579                Vm::mainVm8086Loop(void*)
                0x00000000c0013589                Vm::mainloop3(unsigned long)
                0x00000000c00135af                Vm::initialise8086()
                0x00000000c00135f2                Vm::finish8086()
                0x00000000c0013653                Vm::getOutput8086(unsigned char*)
                0x00000000c0013678                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0013731                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0013899                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0013923                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0013934                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0013946                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0013957                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001396c                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0013982                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0013997                Vm::faultHandler(regs*)
 .text          0x00000000c001406c      0x8c5 arch/i386/hal.32
                0x00000000c001406c                noCopro(unsigned long)
                0x00000000c001406d                nmiHandler(regs*, void*)
                0x00000000c0014086                doubleFault(regs*, void*)
                0x00000000c001409f                displayDebugInfo(regs*)
                0x00000000c00143c0                displayProgramFault(char const*)
                0x00000000c001440c                gpFault(regs*, void*)
                0x00000000c0014471                pgFault(regs*, void*)
                0x00000000c00144d3                otherISRHandler(regs*, void*)
                0x00000000c0014507                opcodeFault(regs*, void*)
                0x00000000c0014587                i386SaveCoprocessor(void*)
                0x00000000c001459b                i386LoadCoprocessor(void*)
                0x00000000c00145af                x87EmulHandler(regs*, void*)
                0x00000000c001464c                HalInitialiseCoprocessor()
                0x00000000c00146fa                HalPanic(char const*)
                0x00000000c00146ff                HalQueryPerformanceCounter()
                0x00000000c001471a                HalInitialise()
                0x00000000c00148c0                HalMakeBeep(int)
                0x00000000c00148fa                HalGetRand()
                0x00000000c00148fd                HalEndOfInterrupt(int)
                0x00000000c001492e                HalRestart()
                0x00000000c001492f                HalShutdown()
                0x00000000c0014930                HalSleep()
 *fill*         0x00000000c0014931        0x3 
 .text          0x00000000c0014934      0x2f4 arch/i386/pic.32
                0x00000000c0014934                picIoWait()
                0x00000000c001493c                picDisable()
                0x00000000c0014970                picGetIRQReg(int)
                0x00000000c00149f4                picOpen()
                0x00000000c0014b84                picEOI(int)
 .text          0x00000000c0014c28      0x64d arch/i386/rtc.32
                0x00000000c0014c28                RTC::open(int, int, void*)
                0x00000000c0014c2c                RTC::close(int, int, void*)
                0x00000000c0014c30                RTC::timeInSecondsUTC()
                0x00000000c0014c42                RTC::timeInDatetimeUTC()
                0x00000000c0014c68                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0014ca6                RTC::~RTC()
                0x00000000c0014ca6                RTC::~RTC()
                0x00000000c0014cca                RTC::~RTC()
                0x00000000c0014cf4                RTC::get_update_in_progress_flag()
                0x00000000c0014d0c                RTC::completeRTCRefresh()
                0x00000000c0014fc4                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0015177                rtcIRQHandler(regs*, void*)
                0x00000000c00151bc                RTC::RTC()
                0x00000000c00151bc                RTC::RTC()
 *fill*         0x00000000c0015275        0x3 
 .text          0x00000000c0015278      0x203 arch/i386/vga.32
                0x00000000c0015278                HalConsoleScroll(int, int)
                0x00000000c0015380                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00153ec                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c001547b        0x1 
 .text          0x00000000c001547c     0x13e7 fs/fat/vfslink.32
                0x00000000c001547c                FAT::getName()
                0x00000000c0015484                FAT::tell(void*, unsigned long long*)
                0x00000000c00154c0                FAT::stat(void*, unsigned long long*)
                0x00000000c00154fc                FAT::~FAT()
                0x00000000c00154fc                FAT::~FAT()
                0x00000000c0015520                FAT::~FAT()
                0x00000000c0015548                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00155ec                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00156b0                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0015884                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0015a9c                FAT::allocateSwapfile(char const*, int)
                0x00000000c0015c5c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0015dc8                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0015e28                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0015e88                FAT::close(void*)
                0x00000000c0015edc                FAT::closeDir(void*)
                0x00000000c0015f30                FAT::seek(void*, unsigned long long)
                0x00000000c0015f88                fatWrapperReadDisk
                0x00000000c0015fcc                fatWrapperWriteDisk
                0x00000000c0016010                fatWrapperIoctl
                0x00000000c001612c                FAT::FAT()
                0x00000000c001612c                FAT::FAT()
                0x00000000c0016180                FAT::fixFilepath(char*)
                0x00000000c00161bc                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00162f4                FAT::openDir(char const*, void**)
                0x00000000c00163a4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001649c                FAT::unlink(char const*)
                0x00000000c001651c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00166a8                FAT::rename(char const*, char const*)
                0x00000000c0016774                FAT::mkdir(char const*)
                0x00000000c00167f4                FAT::exists(char const*)
 *fill*         0x00000000c0016863        0x1 
 .text          0x00000000c0016864      0xba5 fs/iso9660/vfslink.32
                0x00000000c0016864                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001686a                ISO9660::seek(void*, unsigned long long)
                0x00000000c001689a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c00168be                ISO9660::getName()
                0x00000000c00168c4                ISO9660::stat(void*, unsigned long long*)
                0x00000000c00168e8                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00168ee                ISO9660::unlink(char const*)
                0x00000000c00168f4                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00168fa                ISO9660::rename(char const*, char const*)
                0x00000000c0016900                ISO9660::mkdir(char const*)
                0x00000000c0016906                ISO9660::close(void*)
                0x00000000c0016928                ISO9660::closeDir(void*)
                0x00000000c001694a                ISO9660::~ISO9660()
                0x00000000c001694a                ISO9660::~ISO9660()
                0x00000000c001696e                ISO9660::~ISO9660()
                0x00000000c0016995                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c00169d7                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0016a52                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0016ab2                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0016cb6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016f2e                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0016f82                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c0017158                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c00171e6                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017294                ISO9660::exists(char const*)
                0x00000000c00172b8                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001734c                ISO9660::openDir(char const*, void**)
                0x00000000c00173e6                ISO9660::ISO9660()
                0x00000000c00173e6                ISO9660::ISO9660()
 *fill*         0x00000000c0017409        0x1 
 .text          0x00000000c001740a      0x26c hal/sound/sndcard.32
                0x00000000c001740a                SoundCard::beginPlayback()
                0x00000000c0017418                SoundCard::stopPlayback()
                0x00000000c0017426                SoundCard::SoundCard(char const*)
                0x00000000c0017426                SoundCard::SoundCard(char const*)
                0x00000000c00174c4                SoundCard::~SoundCard()
                0x00000000c00174c4                SoundCard::~SoundCard()
                0x00000000c00174e8                SoundCard::~SoundCard()
                0x00000000c0017512                SoundCard::configureRates(int, int, int)
                0x00000000c0017542                SoundCard::getSamples16(int, short*)
                0x00000000c001759e                SoundCard::getSamples32(int, int*)
                0x00000000c0017624                SoundCard::addChannel(SoundPort*)
                0x00000000c0017662                SoundCard::removeChannel(int)
 *fill*         0x00000000c0017676        0x2 
 .text          0x00000000c0017678      0x377 hal/sound/sndport.32
                0x00000000c0017678                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017678                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017704                SoundPort::~SoundPort()
                0x00000000c0017704                SoundPort::~SoundPort()
                0x00000000c0017738                SoundPort::unpause()
                0x00000000c0017744                SoundPort::pause()
                0x00000000c0017750                SoundPort::getBufferUsed()
                0x00000000c0017758                SoundPort::getBufferSize()
                0x00000000c0017760                SoundPort::buffer16(short*, int)
                0x00000000c00177ec                SoundPort::buffer32(int*, int)
                0x00000000c0017874                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0017938                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c00179ef        0x0 hw/bus/isa.32
 *fill*         0x00000000c00179ef        0x1 
 .text          0x00000000c00179f0      0xb49 hw/bus/pci.32
                0x00000000c00179f0                PCI::open(int, int, void*)
                0x00000000c0017a0e                PCI::close(int, int, void*)
                0x00000000c0017a12                PCI::PCI()
                0x00000000c0017a12                PCI::PCI()
                0x00000000c0017aac                PCI::readBAR8(unsigned int, int)
                0x00000000c0017ac8                PCI::readBAR16(unsigned int, int)
                0x00000000c0017ae6                PCI::readBAR32(unsigned int, int)
                0x00000000c0017b02                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0017b22                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0017b44                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0017b64                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017bd2                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017c7a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0017c9e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0017cc6                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0017d10                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0017d38                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0017d5c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0017d80                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0017da8                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017e0c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0017ef4                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001816e                PCI::checkBus(unsigned char)
                0x00000000c0018194                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018306                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001847a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c00184e6                PCI::detect()
 *fill*         0x00000000c0018539        0x1 
 .text          0x00000000c001853a      0xb5a hw/diskctrl/ide.32
                0x00000000c001853a                IDE::close(int, int, void*)
                0x00000000c001853e                IDE::IDE()
                0x00000000c001853e                IDE::IDE()
                0x00000000c0018572                IDE::prepareInterrupt(unsigned char)
                0x00000000c0018584                selectDrive(unsigned char, unsigned char)
                0x00000000c0018586                IDE::getBase(unsigned char)
                0x00000000c0018598                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0018658                IDE::read(unsigned char, unsigned char)
                0x00000000c0018706                IDE::waitInterrupt(unsigned char)
                0x00000000c001876e                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001878a                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00187a6                IDE::enableIRQs(unsigned char, bool)
                0x00000000c00187ec                IDE::open(int, int, void*)
                0x00000000c0018bfa                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0018cc6                IDE::detect()
                0x00000000c0018f86                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019036                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019094      0x320 hw/diskctrl/satabus.32
                0x00000000c0019094                SATABus::close(int, int, void*)
                0x00000000c0019098                SATABus::detect()
                0x00000000c001909a                SATABus::SATABus()
                0x00000000c001909a                SATABus::SATABus()
                0x00000000c0019120                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019152                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001919a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c00191ba                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c00191e4                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c00192ea                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019394                SATABus::open(int, int, void*)
 .text          0x00000000c00193b4      0x5f4 hw/diskphys/ata.32
                0x00000000c00193b4                ATA::close(int, int, void*)
                0x00000000c00193d8                ATA::powerSaving(PowerSavingLevel)
                0x00000000c00193da                ATA::ATA()
                0x00000000c00193da                ATA::ATA()
                0x00000000c0019408                ATA::flush(bool)
                0x00000000c0019452                ATA::readyForCommand()
                0x00000000c001949e                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001981a                ATA::read(unsigned long long, int, void*)
                0x00000000c0019866                ATA::write(unsigned long long, int, void*)
                0x00000000c00198b2                ATA::detectCHS()
                0x00000000c00198dc                ATA::open(int, int, void*)
 .text          0x00000000c00199a8      0x60e hw/diskphys/atapi.32
                0x00000000c00199a8                ATAPI::write(unsigned long long, int, void*)
                0x00000000c00199ae                ATAPI::close(int, int, void*)
                0x00000000c00199d2                ATAPI::ATAPI()
                0x00000000c00199d2                ATAPI::ATAPI()
                0x00000000c0019a00                ATAPI::readyForCommand()
                0x00000000c0019a52                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0019d12                ATAPI::diskRemoved()
                0x00000000c0019d4c                ATAPI::eject()
                0x00000000c0019d94                ATAPI::diskInserted()
                0x00000000c0019da0                ATAPI::detectMedia()
                0x00000000c0019e5c                ATAPI::open(int, int, void*)
                0x00000000c0019f3c                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0019fb6      0x402 hw/diskphys/sata.32
                0x00000000c0019fb6                SATA::close(int, int, void*)
                0x00000000c0019fda                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0019fdc                SATA::open(int, int, void*)
                0x00000000c001a086                SATA::SATA()
                0x00000000c001a086                SATA::SATA()
                0x00000000c001a0b4                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a300                SATA::read(unsigned long long, int, void*)
                0x00000000c001a34c                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001a3b8      0x63d hw/diskphys/satapi.32
                0x00000000c001a3b8                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001a3be                SATAPI::close(int, int, void*)
                0x00000000c001a3e2                SATAPI::SATAPI()
                0x00000000c001a3e2                SATAPI::SATAPI()
                0x00000000c001a410                SATAPI::diskRemoved()
                0x00000000c001a412                SATAPI::diskInserted()
                0x00000000c001a42e                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001a6bc                SATAPI::eject()
                0x00000000c001a6f8                SATAPI::detectMedia()
                0x00000000c001a822                SATAPI::open(int, int, void*)
                0x00000000c001a922                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001a9f5        0x1 
 .text          0x00000000c001a9f6      0x455 hw/intctrl/apic.32
                0x00000000c001a9f6                IOAPIC::close(int, int, void*)
                0x00000000c001a9fc                apicGetBase()
                0x00000000c001aa3e                IOAPIC::IOAPIC()
                0x00000000c001aa3e                IOAPIC::IOAPIC()
                0x00000000c001aa66                apicOpen()
                0x00000000c001abcc                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001abfe                IOAPIC::read(int)
                0x00000000c001ac26                IOAPIC::open(int, int, void*)
                0x00000000c001ad1a                IOAPIC::write(int, int)
                0x00000000c001ad46                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ae4b        0x1 
 .text          0x00000000c001ae4c       0xf0 hw/timer/apictimer.32
                0x00000000c001ae4c                APICTimer::close(int, int, void*)
                0x00000000c001ae54                apicTimerHandler(regs*, void*)
                0x00000000c001ae7c                APICTimer::open(int, int, void*)
                0x00000000c001aeec                APICTimer::write(int)
                0x00000000c001af14                APICTimer::APICTimer()
                0x00000000c001af14                APICTimer::APICTimer()
 .text          0x00000000c001af3c      0x1aa hw/timer/pit.32
                0x00000000c001af3c                PIT::write(int)
                0x00000000c001afc0                pitHandler(regs*, void*)
                0x00000000c001afe4                PIT::open(int, int, void*)
                0x00000000c001b034                PIT::close(int, int, void*)
                0x00000000c001b064                PIT::PIT()
                0x00000000c001b064                PIT::PIT()
 *fill*         0x00000000c001b0e6        0xa 
 .text          0x00000000c001b0f0       0x83 arch/i386/avx.32
                0x00000000c001b0f0                avxDetect
                0x00000000c001b11a                avxSave
                0x00000000c001b12b                avxLoad
                0x00000000c001b13c                avxInit
                0x00000000c001b15e                avxClose
                0x00000000c001b15f                wouldSheSayYes
 *fill*         0x00000000c001b173        0xd 
 .text          0x00000000c001b180      0x1d6 arch/i386/interrupt.32
                0x00000000c001b180                isr0
                0x00000000c001b190                isr1
                0x00000000c001b19a                isr2
                0x00000000c001b1a4                isr3
                0x00000000c001b1ae                isr4
                0x00000000c001b1b8                isr5
                0x00000000c001b1c2                isr6
                0x00000000c001b1cc                isr7
                0x00000000c001b1d6                isr8
                0x00000000c001b1de                isr9
                0x00000000c001b1e8                isr10
                0x00000000c001b1f0                isr11
                0x00000000c001b1f8                isr12
                0x00000000c001b200                isr13
                0x00000000c001b208                isr14
                0x00000000c001b210                isr15
                0x00000000c001b21a                isr16
                0x00000000c001b224                isr17
                0x00000000c001b22e                isr18
                0x00000000c001b238                irq3
                0x00000000c001b242                irq4
                0x00000000c001b24c                irq5
                0x00000000c001b256                irq6
                0x00000000c001b260                irq7
                0x00000000c001b26a                irq8
                0x00000000c001b274                irq9
                0x00000000c001b27e                irq10
                0x00000000c001b288                irq11
                0x00000000c001b292                irq12
                0x00000000c001b29c                irq13
                0x00000000c001b2a6                irq14
                0x00000000c001b2b0                irq15
                0x00000000c001b2ba                irq1
                0x00000000c001b2c1                irq2
                0x00000000c001b2c8                isr96
                0x00000000c001b2cf                irq0
                0x00000000c001b2d4                int_common_stub
                0x00000000c001b2d4                syscall_common_stub
                0x00000000c001b306                irq16
                0x00000000c001b310                irq17
                0x00000000c001b31a                irq18
                0x00000000c001b324                irq19
                0x00000000c001b32e                irq20
                0x00000000c001b338                irq21
                0x00000000c001b342                irq22
                0x00000000c001b34c                irq23
 *fill*         0x00000000c001b356        0xa 
 .text          0x00000000c001b360       0x10 arch/i386/rdrand.32
                0x00000000c001b360                i386GetRDRAND
 .text          0x00000000c001b370       0x39 arch/i386/sse.32
                0x00000000c001b370                absolutelyNoChanceInHell
                0x00000000c001b370                sseDetect
                0x00000000c001b388                sseSave
                0x00000000c001b390                sseLoad
                0x00000000c001b398                sseInit
                0x00000000c001b3a8                sseClose
 *fill*         0x00000000c001b3a9        0x7 
 .text          0x00000000c001b3b0       0x49 arch/i386/x87.32
                0x00000000c001b3b6                x87Detect
                0x00000000c001b3d1                x87Save
                0x00000000c001b3d8                x87Load
                0x00000000c001b3df                x87Init
                0x00000000c001b3f8                x87Close
 *fill*         0x00000000c001b3f9        0x3 
 .text          0x00000000c001b3fc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001b421        0x0 crtn.32
 *fill*         0x00000000c001b421        0x3 
 .text          0x00000000c001b424      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001b424                __divdi3
 *fill*         0x00000000c001b56f        0x1 
 .text          0x00000000c001b570      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001b570                __moddi3
 *fill*         0x00000000c001b6ee        0x2 
 .text          0x00000000c001b6f0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001b6f0                __udivdi3
 *fill*         0x00000000c001b7ef        0x1 
 .text          0x00000000c001b7f0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001b7f0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001b910        0x0
 .iplt          0x00000000c001b910        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001b90a        0xf
 .init          0x00000000c001b90a        0x3 crti.32
                0x00000000c001b90a                _init
 .init          0x00000000c001b90d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001b912        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001b917        0x2 crtn.32

.fini           0x00000000c001b919        0xa
 .fini          0x00000000c001b919        0x3 crti.32
                0x00000000c001b919                _fini
 .fini          0x00000000c001b91c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001b921        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001b924       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001b924       0x23 core/computer.32
                0x00000000c001b924                Computer::~Computer()
                0x00000000c001b924                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001b948       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001b948       0x2a core/computer.32
                0x00000000c001b948                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001b972       0x21
 .text._Z10idleCommonv
                0x00000000c001b972       0x21 core/idle.32
                0x00000000c001b972                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001b994        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001b994        0x2 core/unixfile.32
                0x00000000c001b994                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001b994                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001b996       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001b996       0x42 core/unixfile.32
                0x00000000c001b996                LinkedList<UnixFile>::LinkedList()
                0x00000000c001b996                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001b9d8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001b9d8       0xd3 core/unixfile.32
                0x00000000c001b9d8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001baac        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001baac        0x7 core/unixfile.32
                0x00000000c001baac                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001bab4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001bab4       0xa1 core/unixfile.32
                0x00000000c001bab4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001bb56        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001bb56        0x8 core/unixfile.32
                0x00000000c001bb56                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001bb5e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001bb5e       0x1a hal/device.32
                0x00000000c001bb5e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001bb5e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001bb78       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001bb78       0x2a hal/device.32
                0x00000000c001bb78                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001bba2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001bba2       0xdc hal/device.32
                0x00000000c001bba2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001bc7e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001bc7e       0x42 hal/device.32
                0x00000000c001bc7e                LinkedList<Device>::LinkedList()
                0x00000000c001bc7e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001bcc0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001bcc0       0x1c hal/timer.32
                0x00000000c001bcc0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001bcdc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001bcdc        0x7 hal/timer.32
                0x00000000c001bcdc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001bce4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001bce4       0xb8 hal/timer.32
                0x00000000c001bce4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001bd9c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001bd9c       0xda hal/timer.32
                0x00000000c001bd9c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001be78       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001be78       0x23 hw/acpi.32
                0x00000000c001be78                ACPI::~ACPI()
                0x00000000c001be78                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001be9c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001be9c       0x2a hw/acpi.32
                0x00000000c001be9c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001bec8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001bec8        0x2 hw/acpi.32
                0x00000000c001bec8                LinkedList<Device>::~LinkedList()
                0x00000000c001bec8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001becc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001becc       0x1c hw/acpi.32
                0x00000000c001becc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001bee8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001bee8        0x7 hw/acpi.32
                0x00000000c001bee8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001bef0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001bef0       0xb8 hw/acpi.32
                0x00000000c001bef0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001bfa8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001bfa8       0x23 hw/cpu.32
                0x00000000c001bfa8                CPU::~CPU()
                0x00000000c001bfa8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001bfcc       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001bfcc       0x2a hw/cpu.32
                0x00000000c001bfcc                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001bff8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001bff8        0x2 thr/prcssthr.32
                0x00000000c001bff8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001bff8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001bffc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001bffc       0x49 thr/prcssthr.32
                0x00000000c001bffc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001bffc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c048       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c048       0x42 thr/prcssthr.32
                0x00000000c001c048                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001c048                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c08c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c08c        0x8 thr/prcssthr.32
                0x00000000c001c08c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001c094       0x23
 .text._ZN3PCID2Ev
                0x00000000c001c094       0x23 hw/bus/pci.32
                0x00000000c001c094                PCI::~PCI()
                0x00000000c001c094                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001c0b8       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001c0b8       0x2a hw/bus/pci.32
                0x00000000c001c0b8                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001c0e2       0x23
 .text._ZN3IDED2Ev
                0x00000000c001c0e2       0x23 hw/diskctrl/ide.32
                0x00000000c001c0e2                IDE::~IDE()
                0x00000000c001c0e2                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001c106       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001c106       0x2a hw/diskctrl/ide.32
                0x00000000c001c106                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001c130       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001c130       0x23 hw/diskctrl/satabus.32
                0x00000000c001c130                SATABus::~SATABus()
                0x00000000c001c130                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001c154       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001c154       0x2a hw/diskctrl/satabus.32
                0x00000000c001c154                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001c17e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001c17e       0x23 hw/diskphys/ata.32
                0x00000000c001c17e                ATA::~ATA()
                0x00000000c001c17e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001c1a2       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001c1a2       0x2a hw/diskphys/ata.32
                0x00000000c001c1a2                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001c1cc       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001c1cc       0x23 hw/diskphys/atapi.32
                0x00000000c001c1cc                ATAPI::~ATAPI()
                0x00000000c001c1cc                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001c1f0       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001c1f0       0x2a hw/diskphys/atapi.32
                0x00000000c001c1f0                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001c21a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001c21a       0x23 hw/diskphys/sata.32
                0x00000000c001c21a                SATA::~SATA()
                0x00000000c001c21a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001c23e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001c23e       0x2a hw/diskphys/sata.32
                0x00000000c001c23e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001c268       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001c268       0x23 hw/diskphys/satapi.32
                0x00000000c001c268                SATAPI::~SATAPI()
                0x00000000c001c268                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001c28c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001c28c       0x2a hw/diskphys/satapi.32
                0x00000000c001c28c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001c2b6       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001c2b6       0x23 hw/intctrl/apic.32
                0x00000000c001c2b6                IOAPIC::~IOAPIC()
                0x00000000c001c2b6                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001c2da       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001c2da       0x2a hw/intctrl/apic.32
                0x00000000c001c2da                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001c304       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001c304       0x23 hw/timer/apictimer.32
                0x00000000c001c304                APICTimer::~APICTimer()
                0x00000000c001c304                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001c328       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001c328       0x2a hw/timer/apictimer.32
                0x00000000c001c328                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001c354       0x23
 .text._ZN3PITD2Ev
                0x00000000c001c354       0x23 hw/timer/pit.32
                0x00000000c001c354                PIT::~PIT()
                0x00000000c001c354                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001c378       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001c378       0x2a hw/timer/pit.32
                0x00000000c001c378                PIT::~PIT()

.rodata         0x00000000c001c3a2     0x28a2
                0x00000000c001c3a2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001c3a2        0x2 
 .ctors         0x00000000c001c3a4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001c3a8        0x4 core/unixfile.32
 .ctors         0x00000000c001c3ac        0x4 thr/prcssthr.32
 .ctors         0x00000000c001c3b0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c3b4                end_ctors = .
                0x00000000c001c3b4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001c3b4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001c3b8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c3b8                __DTOR_END__
                0x00000000c001c3bc                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001c3bc        0x4 
 .rodata        0x00000000c001c3c0      0x101 acpica/utclib.32
                0x00000000c001c3c0                AcpiGbl_Ctypes
 *fill*         0x00000000c001c4c1        0x3 
 .rodata        0x00000000c001c4c4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001c4dc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001c526       0x1a 
 .rodata        0x00000000c001c540       0xed fs/fat/ff.32
 *fill*         0x00000000c001c62d       0x13 
 .rodata        0x00000000c001c640      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001ca40       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001ca89      0x115 core/computer.32
 *fill*         0x00000000c001cb9e        0x2 
 .rodata.str1.4
                0x00000000c001cba0       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001cc08       0x2c core/computer.32
                0x00000000c001cc08                vtable for Computer
 .rodata.str1.4
                0x00000000c001cc34       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001cc64        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001cc70       0x17 core/main.32
 *fill*         0x00000000c001cc87        0x1 
 .rodata.str1.4
                0x00000000c001cc88       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001cd2d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001cd85       0x39 core/pipe.32
 *fill*         0x00000000c001cdbe        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001cdc0       0x1c core/pipe.32
                0x00000000c001cdc0                vtable for Pipe
 .rodata.str1.1
                0x00000000c001cddc       0x69 core/terminal.32
 *fill*         0x00000000c001ce45        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001ce48       0x1c core/terminal.32
                0x00000000c001ce48                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001ce64       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001ce86       0x15 core/unixfile.32
 *fill*         0x00000000c001ce9b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001ce9c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001cee7        0x8 core/unixfile.32
 *fill*         0x00000000c001ceef        0x1 
 .rodata.str1.4
                0x00000000c001cef0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001cf10       0x1c core/unixfile.32
                0x00000000c001cf10                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001cf2c       0x1c core/unixfile.32
                0x00000000c001cf2c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001cf48      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d0af      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d1b6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001d1e9       0x11 dbg/kconsole.32
 *fill*         0x00000000c001d1e9        0x3 
 .rodata        0x00000000c001d1ec      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001d33c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001d33c       0x68 fs/vfs.32
                0x00000000c001d33c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001d3a4       0x1c fs/vfs.32
                0x00000000c001d3a4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001d3c0       0x1c fs/vfs.32
                0x00000000c001d3c0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001d3dc       0x2c hal/bus.32
                0x00000000c001d3dc                vtable for Bus
 .rodata.str1.1
                0x00000000c001d408       0x1e hal/clock.32
 *fill*         0x00000000c001d426        0x2 
 .rodata._ZTV5Clock
                0x00000000c001d428       0x3c hal/clock.32
                0x00000000c001d428                vtable for Clock
 *fill*         0x00000000c001d464       0x1c 
 .rodata        0x00000000c001d480       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001d4b0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001d508       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001d508       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001d508       0x2c hal/device.32
                0x00000000c001d508                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001d534       0x2c hal/device.32
                0x00000000c001d534                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001d560       0x2c hal/diskctrl.32
                0x00000000c001d560                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001d58c       0x38 hal/diskphys.32
                0x00000000c001d58c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001d5c4       0x3e hal/intctrl.32
 *fill*         0x00000000c001d602        0x2 
 .rodata.str1.4
                0x00000000c001d604       0x5d hal/intctrl.32
 .rodata        0x00000000c001d661       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001d6b4       0x34 hal/keybrd.32
                0x00000000c001d6b4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001d6e8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001d72c       0x2c hal/logidisk.32
                0x00000000c001d72c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001d758       0x2c hal/mouse.32
                0x00000000c001d758                vtable for Mouse
 .rodata.str1.1
                0x00000000c001d784        0xb hal/partition.32
 *fill*         0x00000000c001d78f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001d790       0x44 hal/serial.32
                0x00000000c001d790                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001d7d4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001d7d4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001d7d4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001d7d4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001d7d4       0x30 hal/timer.32
                0x00000000c001d7d4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001d804       0x10 hal/vcache.32
                0x00000000c001d804                vtable for VCache
 .rodata.str1.1
                0x00000000c001d814       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001d87c       0x48 hal/video.32
                0x00000000c001d87c                vtable for Video
 .rodata.str1.4
                0x00000000c001d8c4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001d95f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001da9b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001da9b        0x8 hw/acpi.32
 *fill*         0x00000000c001da9b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001da9c       0x2c hw/acpi.32
                0x00000000c001da9c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001dac8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001dc35        0x3 
 .rodata._ZTV3CPU
                0x00000000c001dc38       0x2c hw/cpu.32
                0x00000000c001dc38                vtable for CPU
 .rodata.str1.1
                0x00000000c001dc64       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001dca0       0x52 krnl/panic.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001dcf2        0x2 
 .rodata.str1.4
                0x00000000c001dcf4      0x117 krnl/panic.32
 .rodata.str1.1
                0x00000000c001de0b       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001de50        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001de5a       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001deae       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001deda       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001df22      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001e0ee       0x57 thr/prcssthr.32
 *fill*         0x00000000c001e145        0x3 
 .rodata.str1.4
                0x00000000c001e148      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e254       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e254       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e254       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e254        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001e254       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001e2f4       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001e324      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001e432        0x2 
 .rodata.str1.4
                0x00000000c001e434       0x4b arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001e47f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001e494       0x3c arch/i386/rtc.32
                0x00000000c001e494                vtable for RTC
 .rodata.str1.1
                0x00000000c001e4d0       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001e511        0x3 
 .rodata._ZTV3FAT
                0x00000000c001e514       0x68 fs/fat/vfslink.32
                0x00000000c001e514                vtable for FAT
 .rodata.str1.1
                0x00000000c001e57c       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c001e597        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c001e598       0x68 fs/iso9660/vfslink.32
                0x00000000c001e598                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001e600       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001e644       0x34 hal/sound/sndcard.32
                0x00000000c001e644                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001e678       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001e6b7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001e6ef       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001e790       0x2c hw/bus/pci.32
                0x00000000c001e790                vtable for PCI
 .rodata.str1.1
                0x00000000c001e7bc       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001e843        0x1 
 .rodata._ZTV3IDE
                0x00000000c001e844       0x2c hw/diskctrl/ide.32
                0x00000000c001e844                vtable for IDE
 .rodata.str1.4
                0x00000000c001e870       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001e894       0x2c hw/diskctrl/satabus.32
                0x00000000c001e894                vtable for SATABus
 .rodata.str1.1
                0x00000000c001e8c0       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001e8d2        0x2 
 .rodata._ZTV3ATA
                0x00000000c001e8d4       0x38 hw/diskphys/ata.32
                0x00000000c001e8d4                vtable for ATA
 .rodata.str1.1
                0x00000000c001e90c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001e919        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001e91c       0x38 hw/diskphys/atapi.32
                0x00000000c001e91c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001e954       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001e9d0       0x38 hw/diskphys/sata.32
                0x00000000c001e9d0                vtable for SATA
 .rodata.str1.1
                0x00000000c001ea08      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c001eb3a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c001eb3c       0x38 hw/diskphys/satapi.32
                0x00000000c001eb3c                vtable for SATAPI
 .rodata        0x00000000c001eb74        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001eb7c       0x2c hw/intctrl/apic.32
                0x00000000c001eb7c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001eba8       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001ebc3        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001ebc4       0x30 hw/timer/apictimer.32
                0x00000000c001ebc4                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001ebf4       0x1d hw/timer/pit.32
 *fill*         0x00000000c001ec11        0x3 
 .rodata._ZTV3PIT
                0x00000000c001ec14       0x30 hw/timer/pit.32
                0x00000000c001ec14                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001ec44      0x271
 *(.data)
 .data          0x00000000c001ec44        0x0 crti.32
 .data          0x00000000c001ec44        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001ec44                __dso_handle
 .data          0x00000000c001ec48        0x0 acpica/utclib.32
 .data          0x00000000c001ec48        0x0 core/malloc.32
 .data          0x00000000c001ec48        0x0 libk/string.32
 .data          0x00000000c001ec48        0x0 fs/fat/diskio.32
 .data          0x00000000c001ec48        0x0 fs/fat/ff.32
 .data          0x00000000c001ec48        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001ec48        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001ec48        0x0 compat/inlines.32
 .data          0x00000000c001ec48        0x0 compat/resolve.32
 .data          0x00000000c001ec48        0x0 core/computer.32
 .data          0x00000000c001ec48        0x0 core/gdt.32
 .data          0x00000000c001ec48        0x0 core/idle.32
 .data          0x00000000c001ec48        0x0 core/idt.32
 .data          0x00000000c001ec48        0x4 core/kheap.32
 *fill*         0x00000000c001ec4c       0x14 
 .data          0x00000000c001ec60      0x142 core/main.32
                0x00000000c001ec60                titleScreen
 *fill*         0x00000000c001eda2        0x2 
 .data          0x00000000c001eda4        0x4 core/physmgr.32
                0x00000000c001eda4                Phys::bitmap
 .data          0x00000000c001eda8        0x0 core/pipe.32
 *fill*         0x00000000c001eda8       0x18 
 .data          0x00000000c001edc0       0x60 core/terminal.32
                0x00000000c001edc0                VgaText::hiddenOut
                0x00000000c001ede0                ansiToVGAMappings
 .data          0x00000000c001ee20        0x0 core/tss.32
 .data          0x00000000c001ee20        0x4 core/unixfile.32
                0x00000000c001ee20                UnixFile::nextFd
 .data          0x00000000c001ee24       0x15 core/virtmgr.32
                0x00000000c001ee24                Virt::pageAllocPtr
                0x00000000c001ee28                Virt::bitmap
                0x00000000c001ee2c                Virt::swapfileSectorsPerPage
                0x00000000c001ee30                Virt::swapfileLength
                0x00000000c001ee34                Virt::swapfileSector
                0x00000000c001ee38                Virt::swapfileDrive
 *fill*         0x00000000c001ee39        0x3 
 .data          0x00000000c001ee3c        0x4 coreobjs/c++.32
                0x00000000c001ee3c                __stack_chk_guard
 .data          0x00000000c001ee40        0x0 dbg/kconsole.32
 .data          0x00000000c001ee40        0x0 fs/vfs.32
 .data          0x00000000c001ee40        0x0 hal/bus.32
 .data          0x00000000c001ee40        0x0 hal/buzzer.32
 .data          0x00000000c001ee40        0x0 hal/clock.32
 .data          0x00000000c001ee40        0x0 hal/device.32
 .data          0x00000000c001ee40        0x0 hal/diskctrl.32
 .data          0x00000000c001ee40        0x0 hal/diskphys.32
 .data          0x00000000c001ee40        0x0 hal/fpu.32
 .data          0x00000000c001ee40        0x0 hal/intctrl.32
 .data          0x00000000c001ee40        0x0 hal/keybrd.32
 .data          0x00000000c001ee40        0x0 hal/logidisk.32
 .data          0x00000000c001ee40        0x0 hal/mouse.32
 .data          0x00000000c001ee40        0x0 hal/partition.32
 .data          0x00000000c001ee40        0x0 hal/serial.32
 .data          0x00000000c001ee40        0x0 hal/timer.32
 .data          0x00000000c001ee40        0x0 hal/vcache.32
 .data          0x00000000c001ee40        0x0 hal/video.32
 .data          0x00000000c001ee40       0x10 hw/acpi.32
                0x00000000c001ee40                legacyIRQRemaps
 .data          0x00000000c001ee50        0x4 hw/cpu.32
                0x00000000c001ee50                lastCode
 *fill*         0x00000000c001ee54        0xc 
 .data          0x00000000c001ee60       0x4d krnl/env.32
                0x00000000c001ee60                defaultSysEnv
 .data          0x00000000c001eead        0x0 krnl/panic.32
 .data          0x00000000c001eead        0x0 krnl/powctrl.32
 .data          0x00000000c001eead        0x0 reg/registry.32
 .data          0x00000000c001eead        0x0 sys/sc_eject.32
 .data          0x00000000c001eead        0x0 sys/sc_exit.32
 .data          0x00000000c001eead        0x0 sys/sc_getcwd.32
 .data          0x00000000c001eead        0x0 sys/sc_getpid.32
 .data          0x00000000c001eead        0x0 sys/sc_getramdata.32
 .data          0x00000000c001eead        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001eead        0x0 sys/sc_loaddll.32
 .data          0x00000000c001eead        0x0 sys/sc_read.32
 .data          0x00000000c001eead        0x0 sys/sc_sbrk.32
 .data          0x00000000c001eead        0x0 sys/sc_setcwd.32
 .data          0x00000000c001eead        0x0 sys/sc_settime.32
 .data          0x00000000c001eead        0x0 sys/sc_timezone.32
 .data          0x00000000c001eead        0x0 sys/sc_write.32
 .data          0x00000000c001eead        0x0 sys/sc_wsbe.32
 .data          0x00000000c001eead        0x0 sys/sc_yield.32
 .data          0x00000000c001eead        0x0 sys/syscalls.32
 .data          0x00000000c001eead        0x0 thr/elf.32
 *fill*         0x00000000c001eead        0x3 
 .data          0x00000000c001eeb0        0x4 thr/prcssthr.32
                0x00000000c001eeb0                Thr::nextPID
 .data          0x00000000c001eeb4        0x0 vm86/vm8086.32
 .data          0x00000000c001eeb4        0x0 arch/i386/hal.32
 .data          0x00000000c001eeb4        0x0 arch/i386/pic.32
 .data          0x00000000c001eeb4        0x0 arch/i386/rtc.32
 .data          0x00000000c001eeb4        0x0 arch/i386/vga.32
 .data          0x00000000c001eeb4        0x0 fs/fat/vfslink.32
 .data          0x00000000c001eeb4        0x1 fs/iso9660/vfslink.32
                0x00000000c001eeb4                recentDriveletter
 .data          0x00000000c001eeb5        0x0 hal/sound/sndcard.32
 .data          0x00000000c001eeb5        0x0 hal/sound/sndport.32
 .data          0x00000000c001eeb5        0x0 hw/bus/isa.32
 .data          0x00000000c001eeb5        0x0 hw/bus/pci.32
 .data          0x00000000c001eeb5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001eeb5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001eeb5        0x0 hw/diskphys/ata.32
 .data          0x00000000c001eeb5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001eeb5        0x0 hw/diskphys/sata.32
 .data          0x00000000c001eeb5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001eeb5        0x0 hw/intctrl/apic.32
 .data          0x00000000c001eeb5        0x0 hw/timer/apictimer.32
 .data          0x00000000c001eeb5        0x0 hw/timer/pit.32
 .data          0x00000000c001eeb5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001eeb5        0x0 crtn.32
 .data          0x00000000c001eeb5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001eeb5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001eeb5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001eeb5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001eeb8        0x0
 .got           0x00000000c001eeb8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001eeb8        0x0
 .got.plt       0x00000000c001eeb8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001eeb8        0x0
 .igot.plt      0x00000000c001eeb8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001eeb8        0x0
 .tm_clone_table
                0x00000000c001eeb8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001eeb8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001eeb5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001eeb5        0x3 
 .eh_frame      0x00000000c001eeb8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001eeb8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001eeb8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001ef10       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001ef50       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001efbc       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001f040        0x0
 .rel.got       0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001f040        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001f040     0x4368
                0x00000000c001f040                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c001f040        0x0 crti.32
 .bss           0x00000000c001f040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001f060        0x4 acpica/utclib.32
 *fill*         0x00000000c001f064       0x1c 
 .bss           0x00000000c001f080      0x378 core/malloc.32
 .bss           0x00000000c001f3f8        0x0 libk/string.32
 .bss           0x00000000c001f3f8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001f3f8        0x8 
 .bss           0x00000000c001f400       0x88 fs/fat/ff.32
 .bss           0x00000000c001f488        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001f488        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c001f488        0x0 compat/inlines.32
 .bss           0x00000000c001f488        0x0 compat/resolve.32
 .bss           0x00000000c001f488        0x6 core/computer.32
                0x00000000c001f488                Krnl::computer
                0x00000000c001f48c                Krnl::preemptionOn
                0x00000000c001f48d                Krnl::schedulingOn
 *fill*         0x00000000c001f48e        0x2 
 .bss           0x00000000c001f490        0x6 core/gdt.32
                0x00000000c001f490                gdtDescr
 .bss           0x00000000c001f496        0x0 core/idle.32
 *fill*         0x00000000c001f496        0x2 
 .bss           0x00000000c001f498        0x6 core/idt.32
                0x00000000c001f498                idtDescr
 .bss           0x00000000c001f49e        0x0 core/kheap.32
 *fill*         0x00000000c001f49e        0x2 
 .bss           0x00000000c001f4a0        0x4 core/main.32
                0x00000000c001f4a0                sysBootSettings
 .bss           0x00000000c001f4a4       0x29 core/physmgr.32
                0x00000000c001f4a4                Phys::forbidEvictions
                0x00000000c001f4a8                Phys::currentPagePointer
                0x00000000c001f4ac                Phys::highestMem
                0x00000000c001f4b0                Phys::oldPercent
                0x00000000c001f4b4                Phys::usedPages
                0x00000000c001f4b8                Phys::usablePages
                0x00000000c001f4bc                Phys::dmaUsage
 .bss           0x00000000c001f4cd        0x0 core/pipe.32
 *fill*         0x00000000c001f4cd        0x3 
 .bss           0x00000000c001f4d0        0x9 core/terminal.32
                0x00000000c001f4d0                terminalCycle
                0x00000000c001f4d4                activeTerminal
                0x00000000c001f4d8                VgaText::graphicMode
 *fill*         0x00000000c001f4d9        0x1 
 .bss           0x00000000c001f4da        0x2 core/tss.32
                0x00000000c001f4da                doubleFaultSelector
 *fill*         0x00000000c001f4dc        0x4 
 .bss           0x00000000c001f4e0       0x84 core/unixfile.32
                0x00000000c001f4e0                sfileLpt
                0x00000000c001f520                sfileCom
                0x00000000c001f544                sfileNul
                0x00000000c001f548                sfilePnt
                0x00000000c001f54c                sfileAux
                0x00000000c001f550                sfileCon
                0x00000000c001f554                initialFilesAdded
                0x00000000c001f558                unixFileLinkedList
 .bss           0x00000000c001f564       0x14 core/virtmgr.32
                0x00000000c001f564                twswaps
                0x00000000c001f568                swapBalance
                0x00000000c001f56c                panicVAS
                0x00000000c001f570                Virt::swapfileBitmap
                0x00000000c001f574                firstVAS
 .bss           0x00000000c001f578        0x0 coreobjs/c++.32
 .bss           0x00000000c001f578        0x0 dbg/kconsole.32
 .bss           0x00000000c001f578        0x4 fs/vfs.32
                0x00000000c001f578                installedFilesystems
 .bss           0x00000000c001f57c        0x0 hal/bus.32
 .bss           0x00000000c001f57c        0x0 hal/buzzer.32
 .bss           0x00000000c001f57c        0x8 hal/clock.32
                0x00000000c001f57c                User::dstOn
                0x00000000c001f57d                User::timezoneHalfHourOffset
                0x00000000c001f580                User::timezoneHourOffset
 .bss           0x00000000c001f584        0x0 hal/device.32
 .bss           0x00000000c001f584        0x0 hal/diskctrl.32
 .bss           0x00000000c001f584        0x0 hal/diskphys.32
 .bss           0x00000000c001f584        0x0 hal/fpu.32
 *fill*         0x00000000c001f584       0x1c 
 .bss           0x00000000c001f5a0     0x2000 hal/intctrl.32
                0x00000000c001f5a0                INT_contexts
                0x00000000c00205a0                INT_handlers
 .bss           0x00000000c00215a0      0x429 hal/keybrd.32
                0x00000000c00215a0                keyboardWaitingTaskList
                0x00000000c00215a4                keyboardSetupYet
                0x00000000c00215a8                guiKeyboardHandler
                0x00000000c00215c0                keystates
 *fill*         0x00000000c00219c9       0x17 
 .bss           0x00000000c00219e0       0x88 hal/logidisk.32
                0x00000000c00219e0                diskAssignments
                0x00000000c0021a00                disks
 .bss           0x00000000c0021a68        0x4 hal/mouse.32
                0x00000000c0021a68                guiMouseHandler
 .bss           0x00000000c0021a6c        0x0 hal/partition.32
 .bss           0x00000000c0021a6c        0x0 hal/serial.32
 .bss           0x00000000c0021a6c        0x4 hal/timer.32
                0x00000000c0021a6c                milliTenthsSinceBoot
 .bss           0x00000000c0021a70        0x0 hal/vcache.32
 .bss           0x00000000c0021a70        0x4 hal/video.32
                0x00000000c0021a70                screen
 *fill*         0x00000000c0021a74        0xc 
 .bss           0x00000000c0021a80      0x480 hw/acpi.32
                0x00000000c0021a80                systemSleepFunction
                0x00000000c0021a84                systemResetFunction
                0x00000000c0021a88                systemShutdownFunction
                0x00000000c0021a8c                nextACPITable
                0x00000000c0021aa0                acpiTables
                0x00000000c0021ca0                usingXSDT
                0x00000000c0021ca4                MADTpointer
                0x00000000c0021ca8                RSDTpointer
                0x00000000c0021cac                RSDPpointer
                0x00000000c0021cb0                nextAPICNMI
                0x00000000c0021cc0                apicNMIInfo
                0x00000000c0021d40                legacyIRQFlags
                0x00000000c0021d60                ioapicDiscoveryNumber
                0x00000000c0021d80                ioapicFoundInMADT
                0x00000000c0021da0                ioapicAddresses
                0x00000000c0021e20                ioapicGSIBase
                0x00000000c0021ea0                processorDiscoveryNumber
                0x00000000c0021ec0                matchingAPICID
                0x00000000c0021ee0                processorID
 .bss           0x00000000c0021f00       0x10 hw/cpu.32
                0x00000000c0021f00                lastD
                0x00000000c0021f04                lastC
                0x00000000c0021f08                lastB
                0x00000000c0021f0c                lastA
 .bss           0x00000000c0021f10        0x8 krnl/env.32
                0x00000000c0021f10                Krnl::userEnv
                0x00000000c0021f14                Krnl::systemEnv
 .bss           0x00000000c0021f18        0x9 krnl/panic.32
                0x00000000c0021f18                Krnl::guiProgramFaultHandler
                0x00000000c0021f1c                Krnl::guiPanicHandler
                0x00000000c0021f20                Krnl::kernelInPanic
 *fill*         0x00000000c0021f21       0x1f 
 .bss           0x00000000c0021f40       0x48 krnl/powctrl.32
                0x00000000c0021f40                Krnl::powCtrlOnBattery
                0x00000000c0021f60                Krnl::currentPowerSettings
                0x00000000c0021f84                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0021f88        0x0 reg/registry.32
 .bss           0x00000000c0021f88        0x0 sys/sc_eject.32
 .bss           0x00000000c0021f88        0x0 sys/sc_exit.32
 .bss           0x00000000c0021f88        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0021f88        0x0 sys/sc_getpid.32
 .bss           0x00000000c0021f88        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0021f88        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0021f88        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0021f88        0x0 sys/sc_read.32
 .bss           0x00000000c0021f88        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0021f88        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0021f88        0x0 sys/sc_settime.32
 .bss           0x00000000c0021f88        0x0 sys/sc_timezone.32
 .bss           0x00000000c0021f88        0x0 sys/sc_write.32
 .bss           0x00000000c0021f88        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0021f88        0x0 sys/sc_yield.32
 *fill*         0x00000000c0021f88       0x18 
 .bss           0x00000000c0021fa0      0x200 sys/syscalls.32
                0x00000000c0021fa0                systemCallHandlers
 .bss           0x00000000c00221a0      0x7a4 thr/elf.32
                0x00000000c00221a0                Thr::driverLookupNext
                0x00000000c00221c0                Thr::driverLookupLen
                0x00000000c00223c0                Thr::driverLookupAddr
                0x00000000c00225c0                Thr::driverNameLookup
                0x00000000c00227c0                Thr::kernelSymbols
                0x00000000c0022840                Thr::kernelStringTable
                0x00000000c00228c0                Thr::kernelSymbolTable
                0x00000000c0022940                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0022944        0x4 
 .bss           0x00000000c0022948       0x68 thr/prcssthr.32
                0x00000000c0022948                cleanerThread
                0x00000000c002294c                weNeedTheCleanerToNotBlock
                0x00000000c0022950                retValLockStuff
                0x00000000c0022954                retValSchedLock
                0x00000000c0022958                lockStuffLock
                0x00000000c002295c                schedulerLock
                0x00000000c0022960                taskSwitchesPostponedFlag
                0x00000000c0022964                postponeTaskSwitchesCounter
                0x00000000c0022968                irqDisableCounter
                0x00000000c002296c                terminatedTaskList
                0x00000000c0022978                sleepingTaskList
                0x00000000c0022984                taskList
                0x00000000c0022990                kernelProcess
 *fill*         0x00000000c00229b0       0x10 
 .bss           0x00000000c00229c0       0x40 vm86/vm8086.32
                0x00000000c00229c0                Vm::vmRetV
                0x00000000c00229c4                Vm::vmDone
                0x00000000c00229c5                Vm::vmReady
                0x00000000c00229c8                Vm::vm86Thread
                0x00000000c00229cc                Vm::vmToHostCommsPtr
                0x00000000c00229e0                Vm::vmToHostComms
 .bss           0x00000000c0022a00       0x14 arch/i386/hal.32
                0x00000000c0022a00                apic
                0x00000000c0022a04                fpuOwner
                0x00000000c0022a08                coproLoadFunc
                0x00000000c0022a0c                coproSaveFunc
                0x00000000c0022a10                gpFaultIntercept
 .bss           0x00000000c0022a14        0x0 arch/i386/pic.32
 .bss           0x00000000c0022a14        0x2 arch/i386/rtc.32
 .bss           0x00000000c0022a16        0x0 arch/i386/vga.32
 *fill*         0x00000000c0022a16        0xa 
 .bss           0x00000000c0022a20       0xf0 fs/fat/vfslink.32
                0x00000000c0022a20                FAT::fats
                0x00000000c0022a40                FAT::vfsToFatRemaps
                0x00000000c0022ac0                fatToVFSRemaps
 *fill*         0x00000000c0022b10       0x10 
 .bss           0x00000000c0022b20      0x820 fs/iso9660/vfslink.32
                0x00000000c0022b20                recentSector
                0x00000000c0022b40                recentBuffer
 .bss           0x00000000c0023340        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0023340        0x0 hal/sound/sndport.32
 .bss           0x00000000c0023340        0x0 hw/bus/isa.32
 .bss           0x00000000c0023340        0xd hw/bus/pci.32
                0x00000000c0023340                thePCI
 .bss           0x00000000c002334d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002334d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002334d        0x3 
 .bss           0x00000000c0023350        0x8 hw/diskphys/ata.32
                0x00000000c0023350                ataSectorsWritten
                0x00000000c0023354                ataSectorsRead
 .bss           0x00000000c0023358        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0023358        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0023358        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0023358        0x8 
 .bss           0x00000000c0023360       0x41 hw/intctrl/apic.32
                0x00000000c0023360                noOfIOAPICs
                0x00000000c0023380                ioapics
                0x00000000c00233a0                IOAPICsSetupYet
 .bss           0x00000000c00233a1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00233a1        0x3 
 .bss           0x00000000c00233a4        0x4 hw/timer/pit.32
                0x00000000c00233a4                pitFreq
 .bss           0x00000000c00233a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00233a8        0x0 crtn.32
 .bss           0x00000000c00233a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00233a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00233a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00233a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00233a8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0027710                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
