Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c80a
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0x2 
 .text          0x00000000c00003a4      0x5dd acpica/utclib.32
                0x00000000c00003a4                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004a8                memset
                0x00000000c00004c4                strlen
                0x00000000c00004dc                strpbrk
                0x00000000c0000518                strtok
                0x00000000c0000564                strcpy
                0x00000000c0000588                strncpy
                0x00000000c00005f0                strcmp
                0x00000000c0000630                strchr
                0x00000000c0000654                strncmp
                0x00000000c00006a4                strcat
                0x00000000c00006d4                strncat
                0x00000000c0000710                strstr
                0x00000000c0000758                toupper
                0x00000000c000076c                tolower
                0x00000000c0000780                simple_strtoul
 .text          0x00000000c0000981      0xfad core/malloc.32
                0x00000000c0000aec                dlfree
                0x00000000c0000e47                dlmalloc
                0x00000000c0001384                dlrealloc
                0x00000000c0001527                dlmemalign
                0x00000000c000164a                dlcalloc
                0x00000000c00016e4                dlcfree
                0x00000000c00016e9                dlindependent_calloc
                0x00000000c000170e                dlindependent_comalloc
                0x00000000c0001725                dlvalloc
                0x00000000c0001750                dlpvalloc
                0x00000000c0001786                dlmalloc_trim
                0x00000000c0001793                dlmalloc_usable_size
                0x00000000c00017c4                dlmallinfo
                0x00000000c0001893                dlmalloc_stats
                0x00000000c00018a4                dlmallopt
 .text          0x00000000c000192e        0x0 libk/string.32
 .text          0x00000000c000192e       0x51 fs/fat/diskio.32
                0x00000000c000192e                disk_status
                0x00000000c0001931                disk_initialize
                0x00000000c0001934                disk_read
                0x00000000c000194a                disk_write
                0x00000000c0001960                disk_ioctl
 .text          0x00000000c000197f     0x3d7a fs/fat/ff.32
                0x00000000c000371c                f_mount
                0x00000000c000377e                f_open
                0x00000000c0003a49                f_read
                0x00000000c0003c48                f_write
                0x00000000c0003e7c                f_sync
                0x00000000c0003f31                f_close
                0x00000000c0003f60                f_lseek
                0x00000000c0004107                f_opendir
                0x00000000c00041d2                f_closedir
                0x00000000c00041f4                f_readdir
                0x00000000c0004286                f_stat
                0x00000000c0004305                f_getfree
                0x00000000c0004407                f_truncate
                0x00000000c00044eb                f_unlink
                0x00000000c000460d                f_mkdir
                0x00000000c00047a8                f_rename
                0x00000000c000495e                f_chmod
                0x00000000c0004a07                f_utime
                0x00000000c0004ab5                f_getlabel
                0x00000000c0004c06                f_setlabel
                0x00000000c0004d96                f_forward
                0x00000000c0004f24                f_mkfs
 *fill*         0x00000000c00056f9        0x3 
 .text          0x00000000c00056fc       0x2f fs/fat/ffsystem.32
                0x00000000c00056fc                ff_memalloc
                0x00000000c0005714                ff_memfree
 *fill*         0x00000000c000572b        0x1 
 .text          0x00000000c000572c      0x274 fs/fat/ffunicode.32
                0x00000000c000572c                ff_uni2oem
                0x00000000c00057c4                ff_oem2uni
                0x00000000c0005838                ff_wtoupper
 .text          0x00000000c00059a0       0xa7 compat/inlines.32
                0x00000000c00059a0                CPU::current()
                0x00000000c00059ac                operator new(unsigned long)
                0x00000000c00059b1                operator delete(void*)
                0x00000000c00059b6                disableIRQs()
                0x00000000c00059be                enableIRQs()
                0x00000000c00059cd                lockScheduler()
                0x00000000c00059d5                unlockScheduler()
                0x00000000c00059e4                lockStuff()
                0x00000000c00059f2                unlockStuff()
                0x00000000c0005a2c                Virt::getAKernelVAS()
                0x00000000c0005a32                __not_memcpy
 *fill*         0x00000000c0005a47        0x1 
 .text          0x00000000c0005a48      0x118 compat/resolve.32
                0x00000000c0005a48                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0005b60      0x76b core/computer.32
                0x00000000c0005b60                Computer::close(int, int, void*)
                0x00000000c0005ba4                Krnl::firstTask()
                0x00000000c0005cec                Computer::Computer()
                0x00000000c0005cec                Computer::Computer()
                0x00000000c0005e48                Computer::setBootMessage(char const*)
                0x00000000c0005e4a                Computer::detectFeatures()
                0x00000000c0006054                Computer::displayFeatures()
                0x00000000c0006056                Computer::rdmsr(unsigned int)
                0x00000000c0006082                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00060ba                Computer::shutdown()
                0x00000000c00060d2                Computer::restart()
                0x00000000c00060ea                Computer::sleep()
                0x00000000c00060fe                Computer::nmiEnabled()
                0x00000000c000610a                Computer::readCMOS(unsigned char)
                0x00000000c0006124                Computer::enableNMI(bool)
                0x00000000c000613c                Computer::open(int, int, void*)
                0x00000000c000620e                Computer::disableNMI()
                0x00000000c000621c                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000623a                Computer::handleNMI()
                0x00000000c00062a0                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c00062cb        0x1 
 .text          0x00000000c00062cc      0x211 core/gdt.32
                0x00000000c00062cc                GDTEntry::setBase(unsigned int)
                0x00000000c00062e8                GDTEntry::setLimit(unsigned int)
                0x00000000c0006306                GDT::GDT()
                0x00000000c0006306                GDT::GDT()
                0x00000000c000631c                GDT::addEntry(GDTEntry)
                0x00000000c000633e                GDT::getNumberOfEntries()
                0x00000000c0006346                GDT::flush()
                0x00000000c0006368                GDT::setup()
 .text          0x00000000c00064dd       0x19 core/idle.32
                0x00000000c00064dd                idleFunction(void*)
 *fill*         0x00000000c00064f6        0x2 
 .text          0x00000000c00064f8      0x464 core/idt.32
                0x00000000c00064f8                IDTEntry::IDTEntry(bool)
                0x00000000c00064f8                IDTEntry::IDTEntry(bool)
                0x00000000c000656a                IDTEntry::setOffset(unsigned int)
                0x00000000c0006580                IDT::IDT()
                0x00000000c0006580                IDT::IDT()
                0x00000000c0006582                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000658a                IDT::addEntry(IDTEntry, int)
                0x00000000c00065a4                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00065dc                IDT::flush()
                0x00000000c00065f6                IDT::setup()
 .text          0x00000000c000695c      0x183 core/kheap.32
                0x00000000c000695c                sbrk
                0x00000000c00069f1                mmap
                0x00000000c0006a07                munmap
                0x00000000c0006a1d                liballoc_lock()
                0x00000000c0006a2a                liballoc_unlock()
                0x00000000c0006a3e                liballoc_alloc(int)
                0x00000000c0006a56                liballoc_free(void*, int)
                0x00000000c0006a71                realloc
                0x00000000c0006a85                malloc
                0x00000000c0006a95                free
                0x00000000c0006aa5                rfree
                0x00000000c0006ab5                calloc
 .text          0x00000000c0006adf      0x1b3 core/main.32
                0x00000000c0006adf                Krnl::setBootMessage(char const*)
                0x00000000c0006b4b                kernel_main
 .text          0x00000000c0006c92      0x5ce core/physmgr.32
                0x00000000c0006c92                Phys::allocateDMA(unsigned long)
                0x00000000c0006d69                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0006d9c                Phys::setPageState(unsigned long, bool)
                0x00000000c0006dce                Phys::getPageState(unsigned long)
                0x00000000c0006dea                Phys::freePage(unsigned long)
                0x00000000c0006e4c                Phys::allocatePage()
                0x00000000c0006f09                Phys::allocateContiguousPages(int)
                0x00000000c0006f65                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0006f9d                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007260      0x273 core/pipe.32
                0x00000000c0007260                Pipe::isAtty()
                0x00000000c0007264                Pipe::~Pipe()
                0x00000000c0007264                Pipe::~Pipe()
                0x00000000c0007288                Pipe::~Pipe()
                0x00000000c00072b0                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007370                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000746c                Pipe::Pipe(int)
                0x00000000c000746c                Pipe::Pipe(int)
 *fill*         0x00000000c00074d3        0x1 
 .text          0x00000000c00074d4      0xa1a core/terminal.32
                0x00000000c00074d4                VgaText::isAtty()
                0x00000000c00074d8                VgaText::~VgaText()
                0x00000000c00074d8                VgaText::~VgaText()
                0x00000000c00074fc                VgaText::~VgaText()
                0x00000000c0007526                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0007546                setTerminalScrollLock(bool)
                0x00000000c0007547                doTerminalCycle()
                0x00000000c0007548                addToTerminalCycle(VgaText*)
                0x00000000c0007549                scrollTerminalScrollLock(int)
                0x00000000c000754a                VgaText::updateTitle()
                0x00000000c000754c                VgaText::load()
                0x00000000c000754e                VgaText::updateCursor()
                0x00000000c0007564                VgaText::doANSI_SGR(int)
                0x00000000c00075d8                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00075e8                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00075f8                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0007618                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0007624                VgaText::setTitleColour(VgaColour)
                0x00000000c0007630                VgaText::setTitle(char*)
                0x00000000c0007632                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0007644                VgaText::scrollScreen()
                0x00000000c00076dc                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00076ee                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000777e                VgaText::getCursorX()
                0x00000000c0007786                VgaText::getCursorY()
                0x00000000c000778e                VgaText::setCursor(int, int)
                0x00000000c00077a5                setActiveTerminal(VgaText*)
                0x00000000c00077f0                VgaText::clearScreen()
                0x00000000c000783e                VgaText::setCursorX(int)
                0x00000000c0007856                VgaText::setCursorY(int)
                0x00000000c000786e                VgaText::incrementCursor(bool)
                0x00000000c00078c2                VgaText::decrementCursor(bool)
                0x00000000c00078e4                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00079b2                VgaText::putchar(char)
                0x00000000c0007a9e                VgaText::putx(unsigned int)
                0x00000000c0007ae4                VgaText::puts(char const*)
                0x00000000c0007b0a                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0007b56                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0007ca4                VgaText::VgaText(char const*)
                0x00000000c0007ca4                VgaText::VgaText(char const*)
                0x00000000c0007df0                VgaText::receiveKey(unsigned char)
                0x00000000c0007ec8                VgaText::doUpdate()
                0x00000000c0007ec9                newTerminal(char*)
 *fill*         0x00000000c0007eee        0x2 
 .text          0x00000000c0007ef0      0x1a1 core/tss.32
                0x00000000c0007ef0                TSS::TSS()
                0x00000000c0007ef0                TSS::TSS()
                0x00000000c0007f00                TSS::setESP(unsigned long)
                0x00000000c0007f14                TSS::flush()
                0x00000000c0007f34                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008091        0x1 
 .text          0x00000000c0008092      0x4c2 core/unixfile.32
                0x00000000c0008092                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00080e8                ReservedFilename::isAtty()
                0x00000000c0008104                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008162                UnixFile::getFileDescriptor()
                0x00000000c000816a                UnixFile::UnixFile(int)
                0x00000000c000816a                UnixFile::UnixFile(int)
                0x00000000c000831a                ReservedFilename::ReservedFilename(int)
                0x00000000c000831a                ReservedFilename::ReservedFilename(int)
                0x00000000c000834c                UnixFile::~UnixFile()
                0x00000000c000834c                UnixFile::~UnixFile()
                0x00000000c00083e4                UnixFile::~UnixFile()
                0x00000000c000840c                ReservedFilename::~ReservedFilename()
                0x00000000c000840c                ReservedFilename::~ReservedFilename()
                0x00000000c0008430                ReservedFilename::~ReservedFilename()
                0x00000000c0008457                getFromFileDescriptor(int)
 .text          0x00000000c0008554     0x118a core/virtmgr.32
                0x00000000c0008554                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0008589                Virt::getPageState(unsigned long)
                0x00000000c00085ad                Virt::allocateKernelVirtualPages(int)
                0x00000000c00086be                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00086dc                Virt::swapIDToSector(unsigned long)
                0x00000000c00086ee                Virt::allocateSwapfilePage()
                0x00000000c000876c                Virt::virtualMemorySetup()
                0x00000000c00087b7                Virt::setupPageSwapping(int)
                0x00000000c0008828                VAS::VAS(VAS*)
                0x00000000c0008828                VAS::VAS(VAS*)
                0x00000000c0008856                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0008882                VAS::getPageTableEntry(unsigned long)
                0x00000000c00088a1                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00089c4                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00089e8                VAS::virtualToPhysical(unsigned long)
                0x00000000c0008a00                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0008a40                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0008a72                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0008a9c                VAS::~VAS()
                0x00000000c0008a9c                VAS::~VAS()
                0x00000000c0008c00                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0008d04                VAS::allocatePages(int, int)
                0x00000000c0008edc                VAS::setCPUSpecific(unsigned long)
                0x00000000c0008ef8                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0008fbe                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c00090ac                VAS::VAS(bool)
                0x00000000c00090ac                VAS::VAS(bool)
                0x00000000c000932c                VAS::VAS()
                0x00000000c000932c                VAS::VAS()
                0x00000000c000939c                VAS::evict(unsigned long)
                0x00000000c000945a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0009546                VAS::scanForEviction()
                0x00000000c0009624                mapVASFirstTime
 .text          0x00000000c00096de       0x5f coreobjs/c++.32
                0x00000000c00096de                __cxa_atexit
                0x00000000c00096e1                __cxa_finalize
                0x00000000c00096e2                __stack_chk_fail
                0x00000000c0009718                __cxa_pure_virtual
                0x00000000c0009729                operator new[](unsigned long)
                0x00000000c000972e                operator delete(void*, unsigned long)
                0x00000000c0009733                operator delete[](void*)
                0x00000000c0009738                operator delete[](void*, unsigned long)
 .text          0x00000000c000973d      0x1fc dbg/kconsole.32
                0x00000000c000973d                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0009796                Dbg::logc(char)
                0x00000000c00097b6                Dbg::logs(char*)
                0x00000000c00097d3                Dbg::logWriteInt(unsigned int)
                0x00000000c00097f0                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000980f                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c0009939        0x1 
 .text          0x00000000c000993a      0xc50 fs/vfs.32
                0x00000000c000993a                File::read(unsigned long long, void*, int*)
                0x00000000c0009992                File::write(unsigned long long, void*, int*)
                0x00000000c00099ea                Directory::read(unsigned long long, void*, int*)
                0x00000000c0009a42                Directory::write(unsigned long long, void*, int*)
                0x00000000c0009a70                File::isAtty()
                0x00000000c0009a74                Directory::isAtty()
                0x00000000c0009a78                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0009a7e                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0009a84                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0009a8a                File::~File()
                0x00000000c0009a8a                File::~File()
                0x00000000c0009aae                File::~File()
                0x00000000c0009ad8                Directory::~Directory()
                0x00000000c0009ad8                Directory::~Directory()
                0x00000000c0009afc                Directory::~Directory()
                0x00000000c0009b26                Filesystem::Filesystem()
                0x00000000c0009b26                Filesystem::Filesystem()
                0x00000000c0009b4a                Filesystem::~Filesystem()
                0x00000000c0009b4a                Filesystem::~Filesystem()
                0x00000000c0009b58                Filesystem::~Filesystem()
                0x00000000c0009b7c                Fs::getcwd(Process*, char*, int)
                0x00000000c0009ba6                Fs::initVFS()
                0x00000000c0009bd0                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c0009d7a                File::File(char const*, Process*)
                0x00000000c0009d7a                File::File(char const*, Process*)
                0x00000000c0009e34                File::open(FileOpenMode)
                0x00000000c0009e92                File::close()
                0x00000000c0009ef2                File::seek(unsigned long long)
                0x00000000c0009f48                File::tell(unsigned long long*)
                0x00000000c0009f98                File::rewind()
                0x00000000c0009fac                File::unlink()
                0x00000000c0009ff8                File::rename(char const*)
                0x00000000c000a046                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000a0a2                File::exists()
                0x00000000c000a0e0                File::stat(unsigned long long*, bool*)
                0x00000000c000a141                Fs::setcwd(Process*, char*)
                0x00000000c000a29e                Directory::Directory(char const*, Process*)
                0x00000000c000a29e                Directory::Directory(char const*, Process*)
                0x00000000c000a358                Directory::open()
                0x00000000c000a3b4                Directory::close()
                0x00000000c000a414                Directory::unlink()
                0x00000000c000a460                Directory::rename(char const*)
                0x00000000c000a4ae                Directory::exists()
                0x00000000c000a4ec                Directory::read(dirent*)
                0x00000000c000a538                Directory::create()
                0x00000000c000a584                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000a58a        0x2 
 .text          0x00000000c000a58c       0x86 hal/bus.32
                0x00000000c000a58c                Bus::Bus(char const*)
                0x00000000c000a58c                Bus::Bus(char const*)
                0x00000000c000a5c4                Bus::~Bus()
                0x00000000c000a5c4                Bus::~Bus()
                0x00000000c000a5e8                Bus::~Bus()
 .text          0x00000000c000a612       0x96 hal/buzzer.32
                0x00000000c000a612                beepThread(void*)
                0x00000000c000a64f                Krnl::beep(int, int, bool)
 .text          0x00000000c000a6a8      0x467 hal/clock.32
                0x00000000c000a6a8                User::loadClockSettings(int)
                0x00000000c000a6fa                Clock::Clock(char const*)
                0x00000000c000a6fa                Clock::Clock(char const*)
                0x00000000c000a730                Clock::~Clock()
                0x00000000c000a730                Clock::~Clock()
                0x00000000c000a754                Clock::~Clock()
                0x00000000c000a77e                Clock::timeInSecondsLocal()
                0x00000000c000a7c6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000a81f                datetimeToSeconds(datetime_t)
                0x00000000c000a946                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000a9a6                secondsToDatetime(unsigned long long)
                0x00000000c000aaea                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000ab0f        0x1 
 .text          0x00000000c000ab10      0x464 hal/device.32
                0x00000000c000ab10                Device::hibernate()
                0x00000000c000ab12                Device::wake()
                0x00000000c000ab14                Device::detect()
                0x00000000c000ab16                Device::disableLegacy()
                0x00000000c000ab18                Device::powerSaving(PowerSavingLevel)
                0x00000000c000ab1a                DriverlessDevice::close(int, int, void*)
                0x00000000c000ab1e                DriverlessDevice::detect()
                0x00000000c000ab20                DriverlessDevice::open(int, int, void*)
                0x00000000c000ab34                Device::~Device()
                0x00000000c000ab34                Device::~Device()
                0x00000000c000ab42                Device::~Device()
                0x00000000c000ab6a                Device::findAndLoadDriver()
                0x00000000c000ab78                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000ab9e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000abde                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ac08                Device::getParent()
                0x00000000c000ac14                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ac32                Device::addChild(Device*)
                0x00000000c000ac76                Device::removeAllChildren()
                0x00000000c000acbc                Device::hibernateAll()
                0x00000000c000acec                Device::wakeAll()
                0x00000000c000ad1c                Device::detectAll()
                0x00000000c000ad4c                Device::disableLegacyAll()
                0x00000000c000ad4e                Device::loadDriversForAll()
                0x00000000c000ad50                Device::closeAll()
                0x00000000c000ad86                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000adbc                Device::setName(char const*)
                0x00000000c000adca                Device::Device(char const*)
                0x00000000c000adca                Device::Device(char const*)
                0x00000000c000aec6                Device::getName()
                0x00000000c000aed0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000aed0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000af06                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000af4a                getDevicesOfType(DeviceType)
 .text          0x00000000c000af74       0x86 hal/diskctrl.32
                0x00000000c000af74                HardDiskController::HardDiskController(char const*)
                0x00000000c000af74                HardDiskController::HardDiskController(char const*)
                0x00000000c000afac                HardDiskController::~HardDiskController()
                0x00000000c000afac                HardDiskController::~HardDiskController()
                0x00000000c000afd0                HardDiskController::~HardDiskController()
 .text          0x00000000c000affa       0xe2 hal/diskphys.32
                0x00000000c000affa                PhysicalDisk::eject()
                0x00000000c000affe                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000affe                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b066                PhysicalDisk::startCache()
                0x00000000c000b08e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b08e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b0b2                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000b0dc        0x0 hal/fpu.32
 .text          0x00000000c000b0dc      0x34c hal/intctrl.32
                0x00000000c000b0dc                int_handler
                0x00000000c000b164                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000b1ac                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b2d7                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000b30b                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b389                setupINTS()
                0x00000000c000b3e6                convertLegacyIRQNumber(int)
 .text          0x00000000c000b428      0x778 hal/keybrd.32
                0x00000000c000b428                startGUI(void*)
                0x00000000c000b494                startGUIVESA(void*)
                0x00000000c000b500                sendKeyToTerminal(unsigned char)
                0x00000000c000b5be                sendKeyboardToken(KeyboardToken)
                0x00000000c000b9f0                clearInternalKeybuffer(VgaText*)
                0x00000000c000ba25                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000bb16                Keyboard::Keyboard(char const*)
                0x00000000c000bb16                Keyboard::Keyboard(char const*)
                0x00000000c000bb52                Keyboard::~Keyboard()
                0x00000000c000bb52                Keyboard::~Keyboard()
                0x00000000c000bb76                Keyboard::~Keyboard()
 .text          0x00000000c000bba0      0x3ea hal/logidisk.32
                0x00000000c000bba0                LogicalDisk::close(int, int, void*)
                0x00000000c000bba4                LogicalDisk::~LogicalDisk()
                0x00000000c000bba4                LogicalDisk::~LogicalDisk()
                0x00000000c000bbc8                LogicalDisk::~LogicalDisk()
                0x00000000c000bbf2                LogicalDisk::open(int, int, void*)
                0x00000000c000bc06                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000bc3e                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000bc84                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bc84                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bd3a                LogicalDisk::assignDriveLetter()
                0x00000000c000bdf0                LogicalDisk::mount()
                0x00000000c000be38                LogicalDisk::unmount()
                0x00000000c000be48                LogicalDisk::eject()
                0x00000000c000be5c                LogicalDisk::unassignDriveLetter()
                0x00000000c000beb2                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000bf1e                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000bf8a        0x2 
 .text          0x00000000c000bf8c       0x86 hal/mouse.32
                0x00000000c000bf8c                Mouse::Mouse(char const*)
                0x00000000c000bf8c                Mouse::Mouse(char const*)
                0x00000000c000bfc4                Mouse::~Mouse()
                0x00000000c000bfc4                Mouse::~Mouse()
                0x00000000c000bfe8                Mouse::~Mouse()
 .text          0x00000000c000c012      0x339 hal/partition.32
                0x00000000c000c012                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c0ba                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000c34b        0x1 
 .text          0x00000000c000c34c       0x86 hal/serial.32
                0x00000000c000c34c                Serial::Serial(char const*)
                0x00000000c000c34c                Serial::Serial(char const*)
                0x00000000c000c384                Serial::~Serial()
                0x00000000c000c384                Serial::~Serial()
                0x00000000c000c3a8                Serial::~Serial()
 *fill*         0x00000000c000c3d2        0x2 
 .text          0x00000000c000c3d4      0x234 hal/timer.32
                0x00000000c000c3d4                Timer::Timer(char const*)
                0x00000000c000c3d4                Timer::Timer(char const*)
                0x00000000c000c40c                Timer::~Timer()
                0x00000000c000c40c                Timer::~Timer()
                0x00000000c000c430                Timer::~Timer()
                0x00000000c000c45a                Timer::read()
                0x00000000c000c465                setupTimer(int)
                0x00000000c000c4a0                timerHandler(unsigned int)
 .text          0x00000000c000c608      0x43e hal/vcache.32
                0x00000000c000c608                VCache::VCache(PhysicalDisk*)
                0x00000000c000c608                VCache::VCache(PhysicalDisk*)
                0x00000000c000c770                VCache::invalidateReadBuffer()
                0x00000000c000c780                VCache::writeWriteBuffer()
                0x00000000c000c7cc                VCache::~VCache()
                0x00000000c000c7cc                VCache::~VCache()
                0x00000000c000c820                VCache::~VCache()
                0x00000000c000c848                VCache::write(unsigned long long, int, void*)
                0x00000000c000c942                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ca46      0x4b3 hal/video.32
                0x00000000c000ca46                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ca92                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000cb02                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000cb80                Video::clearScreen(unsigned int)
                0x00000000c000cbb4                Video::putpixel(int, int, unsigned int)
                0x00000000c000cbc2                Video::Video(char const*)
                0x00000000c000cbc2                Video::Video(char const*)
                0x00000000c000cbf8                Video::~Video()
                0x00000000c000cbf8                Video::~Video()
                0x00000000c000cc1c                Video::~Video()
                0x00000000c000cc46                Video::isMonochrome()
                0x00000000c000cc52                Video::getWidth()
                0x00000000c000cc5e                Video::getHeight()
                0x00000000c000cc6a                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000cd26                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ce8e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000cef9        0x3 
 .text          0x00000000c000cefc     0x12bf hw/acpi.32
                0x00000000c000cefc                ACPI::close(int, int, void*)
                0x00000000c000cfb0                findRSDP()
                0x00000000c000d040                loadACPITables(unsigned char*)
                0x00000000c000d2a4                findRSDT(unsigned char*)
                0x00000000c000d3f4                findDataTable(unsigned char*, char*)
                0x00000000c000d46c                scanMADT()
                0x00000000c000d908                ACPI::ACPI()
                0x00000000c000d908                ACPI::ACPI()
                0x00000000c000d95c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000da44                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000db0c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000db14                ACPI::detectPCI()
                0x00000000c000dd1c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000dd64                ACPI::sleep()
                0x00000000c000dd80                ACPI::open(int, int, void*)
 *fill*         0x00000000c000e1bb        0x1 
 .text          0x00000000c000e1bc      0xda3 hw/cpu.32
                0x00000000c000e1bc                CPU::close(int, int, void*)
                0x00000000c000e1c0                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000e1dc                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000e1f4                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000e268                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000e2ec                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000e31a                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000e348                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000e376                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000e3a4                CPU::CPU()
                0x00000000c000e3a4                CPU::CPU()
                0x00000000c000e432                CPU::displayFeatures()
                0x00000000c000e434                CPU::detectFeatures()
                0x00000000c000eb0a                CPU::setupSMEP()
                0x00000000c000eb16                CPU::setupUMIP()
                0x00000000c000eb20                CPU::setupTSC()
                0x00000000c000eb2a                CPU::setupLargePages()
                0x00000000c000eb34                CPU::setupPAT()
                0x00000000c000eb70                CPU::setupMTRR()
                0x00000000c000eb72                CPU::setupGlobalPages()
                0x00000000c000eb7c                CPU::allowUsermodeDataAccess()
                0x00000000c000eb8e                CPU::prohibitUsermodeDataAccess()
                0x00000000c000eba0                CPU::setupSMAP()
                0x00000000c000ebae                CPU::setupFeatures()
                0x00000000c000ec7a                CPU::open(int, int, void*)
                0x00000000c000ed64                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c000ef5f        0x4 hw/smp.32
                0x00000000c000ef5f                Krnl::smpEntry()
                0x00000000c000ef61                Krnl::startCPU(int)
                0x00000000c000ef62                Krnl::startCPUs()
 *fill*         0x00000000c000ef63        0x1 
 .text          0x00000000c000ef64      0x581 krnl/env.32
                0x00000000c000ef64                EnvVarContainer::getEnv(char const*)
                0x00000000c000efa2                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000f064                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000f066                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000f24c                EnvVarContainer::__loadSystem()
                0x00000000c000f266                EnvVarContainer::__loadUser()
                0x00000000c000f268                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f268                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f28a                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f28a                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f2ba                Krnl::getEnv(Process*, char const*)
                0x00000000c000f31f                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000f339                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000f358                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000f36b                Krnl::deleteEnvSystem(char const*)
                0x00000000c000f36c                Krnl::deleteEnvUser(char const*)
                0x00000000c000f36d                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000f36e                Krnl::newProcessEnv(Process*)
                0x00000000c000f390                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000f3dc                Krnl::loadSystemEnv()
                0x00000000c000f40a                Krnl::loadUserEnv()
                0x00000000c000f430                Krnl::flushEnv()
                0x00000000c000f431                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c000f451                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c000f4e5      0x25b krnl/panic.32
                0x00000000c000f4e5                Krnl::panic(char const*)
 .text          0x00000000c000f740      0x168 krnl/powctrl.32
                0x00000000c000f740                Krnl::powerThread(void*)
                0x00000000c000f794                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c000f7aa                Krnl::userIOReceived()
                0x00000000c000f7b5                Krnl::handlePowerButton()
                0x00000000c000f7ea                Krnl::handleSleepButton()
                0x00000000c000f81f                Krnl::setupPowerManager()
 .text          0x00000000c000f8a8      0x50e reg/registry.32
                0x00000000c000f8a8                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c000fa00                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c000fb55                Reg::getLine(char*, char*, char*)
                0x00000000c000fb8c                Reg::readInt(char*, char*, int*)
                0x00000000c000fc77                Reg::readString(char*, char*, char*, int)
                0x00000000c000fcf8                Reg::readBool(char*, char*, bool*)
                0x00000000c000fd1d                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c000fd49                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c000fd75                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c000fdb6       0x36 sys/sc_eject.32
                0x00000000c000fdb6                Sys::eject(regs*)
 .text          0x00000000c000fdec       0x18 sys/sc_exit.32
                0x00000000c000fdec                Sys::exit(regs*)
 .text          0x00000000c000fe04       0x1f sys/sc_getcwd.32
                0x00000000c000fe04                Sys::getCwd(regs*)
 .text          0x00000000c000fe23        0xc sys/sc_getpid.32
                0x00000000c000fe23                Sys::getPID(regs*)
 .text          0x00000000c000fe2f       0x1a sys/sc_getramdata.32
                0x00000000c000fe2f                Sys::getRAMData(regs*)
 .text          0x00000000c000fe49       0x82 sys/sc_getvgaptr.32
                0x00000000c000fe49                Sys::getVGAPtr(regs*)
 .text          0x00000000c000fecb       0xa8 sys/sc_loaddll.32
                0x00000000c000fecb                Sys::loadDLL(regs*)
 .text          0x00000000c000ff73       0x68 sys/sc_read.32
                0x00000000c000ff73                Sys::read(regs*)
 .text          0x00000000c000ffdb       0x55 sys/sc_sbrk.32
                0x00000000c000ffdb                Sys::sbrk(regs*)
 .text          0x00000000c0010030       0x1c sys/sc_setcwd.32
                0x00000000c0010030                Sys::setCwd(regs*)
 .text          0x00000000c001004c       0x95 sys/sc_settime.32
                0x00000000c001004c                Sys::setTime(regs*)
 .text          0x00000000c00100e1       0x4a sys/sc_timezone.32
                0x00000000c00100e1                Sys::timezone(regs*)
 .text          0x00000000c001012b       0x68 sys/sc_write.32
                0x00000000c001012b                Sys::write(regs*)
 .text          0x00000000c0010193       0x62 sys/sc_wsbe.32
                0x00000000c0010193                Sys::wsbe(regs*)
 .text          0x00000000c00101f5       0x25 sys/sc_yield.32
                0x00000000c00101f5                Sys::yield(regs*)
 .text          0x00000000c001021a      0xdf5 sys/syscalls.32
                0x00000000c001021a                sysCallSeekDir(regs*)
                0x00000000c001021f                sysCallTellDir(regs*)
                0x00000000c0010224                sysCallVerify(regs*)
                0x00000000c001022e                sysCallGetArgc(regs*)
                0x00000000c001023e                sysCallTTYName(regs*)
                0x00000000c0010246                sysFormatDisk(regs*)
                0x00000000c00102b0                sysSetDiskVolumeLabel(regs*)
                0x00000000c00102fa                sysGetDiskVolumeLabel(regs*)
                0x00000000c001034f                sysShutdown(regs*)
                0x00000000c00103ad                sysCallRealpath(regs*)
                0x00000000c00103f0                sysCallReadDir(regs*)
                0x00000000c001046f                sysCallIsATTY(regs*)
                0x00000000c00104c9                sysCallSeek(regs*)
                0x00000000c0010520                sysCallTell(regs*)
                0x00000000c001058c                sysCallSize(regs*)
                0x00000000c00105fe                sysCallSizeFromFilename(regs*)
                0x00000000c00106ad                sysCallClose(regs*)
                0x00000000c001070d                sysCallOpenDir(regs*)
                0x00000000c0010782                sysCallCloseDir(regs*)
                0x00000000c00107d6                sysCallMakeDir(regs*)
                0x00000000c0010846                sysCallWait(regs*)
                0x00000000c0010860                sysCallNotImpl(regs*)
                0x00000000c001087b                sysPanic(regs*)
                0x00000000c0010895                sysCallRmdir(regs*)
                0x00000000c00108f9                sysCallUnlink(regs*)
                0x00000000c001095d                sysCallGetArgv(regs*)
                0x00000000c00109a9                sysCallUSleep(regs*)
                0x00000000c00109d2                sysCallSpawn(regs*)
                0x00000000c0010a3a                sysCallGetEnv(regs*)
                0x00000000c0010ae7                sysSetFatAttrib(regs*)
                0x00000000c0010b59                sysPipe(regs*)
                0x00000000c0010b9e                sysGetUnixTime(regs*)
                0x00000000c0010bb2                string_ends_with(char const*, char const*)
                0x00000000c0010bfa                sysCallOpen(regs*)
                0x00000000c0010de2                Sys::loadSyscalls()
                0x00000000c0010fcd                Sys::systemCall(regs*, void*)
 .text          0x00000000c001100f     0x11e5 thr/elf.32
                0x00000000c001100f                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001129b                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00114b1                Thr::runtimeReferenceHelper()
                0x00000000c00114c4                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0011513                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00117d1                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0011f07                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0011f39                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0011f70                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0011f8a                Thr::loadDLL(char const*, bool)
                0x00000000c00121bb                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00121f4     0x12a1 thr/prcssthr.32
                0x00000000c00121f4                userModeEntryPoint(void*)
                0x00000000c001221c                changeTSS
                0x00000000c001224c                switchToThread(ThreadControlBlock*)
                0x00000000c00122f8                Process::addArgs(char**)
                0x00000000c0012358                Process::Process(char const*, Process*, char**)
                0x00000000c0012358                Process::Process(char const*, Process*, char**)
                0x00000000c0012544                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0012544                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00126fc                taskStartupFunction
                0x00000000c0012708                Semaphore::Semaphore(int)
                0x00000000c0012708                Semaphore::Semaphore(int)
                0x00000000c0012738                Mutex::Mutex()
                0x00000000c0012738                Mutex::Mutex()
                0x00000000c001274c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0012844                Process::createUserThread()
                0x00000000c0012860                setupMultitasking(void (*)())
                0x00000000c0012968                schedule()
                0x00000000c00129f4                Semaphore::tryAcquire()
                0x00000000c0012ac0                Semaphore::assertLocked(char const*)
                0x00000000c0012b38                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0012b60                blockTask(TaskState)
                0x00000000c0012b90                waitTask(int, int*, int)
                0x00000000c0012bd4                milliTenthSleepUntil(unsigned int)
                0x00000000c0012c60                milliTenthSleep(unsigned int)
                0x00000000c0012c70                sleep(unsigned int)
                0x00000000c0012c8c                Semaphore::acquire()
                0x00000000c0012d48                taskReturned
                0x00000000c0012d84                Thr::processFromPID(int)
                0x00000000c0012e24                unblockTask(ThreadControlBlock*)
                0x00000000c0012ec8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0013190                cleanerTaskFunction(void*)
                0x00000000c0013280                terminateTask(int)
                0x00000000c001334c                Thr::terminateFromIRQ(int)
                0x00000000c0013358                Semaphore::release()
 .text          0x00000000c0013495      0xb93 vm86/vm8086.32
                0x00000000c0013495                Vm::inbv(unsigned short)
                0x00000000c00134a8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00134de                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00134ee                Vm::getSegment(unsigned int)
                0x00000000c00134f6                Vm::getOffset(unsigned int)
                0x00000000c00134fb                Vm::mainloop2()
                0x00000000c0013535                Vm::mainVm8086Loop(void*)
                0x00000000c0013545                Vm::mainloop3(unsigned long)
                0x00000000c001356b                Vm::initialise8086()
                0x00000000c00135ae                Vm::finish8086()
                0x00000000c001360f                Vm::getOutput8086(unsigned char*)
                0x00000000c0013634                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00136ed                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0013855                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00138df                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00138f0                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0013902                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0013913                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0013928                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001393e                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0013953                Vm::faultHandler(regs*)
 .text          0x00000000c0014028      0xfcd vm86/x87em.32
                0x00000000c0014028                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c0014086                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c001408f                Vm::fpu32ToInternal(unsigned int)
                0x00000000c00140d4                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c00140dd                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c001413c                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c0014178                Vm::fpuLongToFloat(long long)
                0x00000000c00141d7                Vm::fpuGet0()
                0x00000000c00141dc                Vm::fpuGet1()
                0x00000000c00141e4                Vm::fpuGetPi()
                0x00000000c00141ec                Vm::fpuGetLog2E()
                0x00000000c0014204                Vm::fpuGetLogE2()
                0x00000000c001421c                Vm::fpuGetLog210()
                0x00000000c0014234                Vm::fpuGetLog102()
                0x00000000c001424c                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c0014260                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c0014276                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c00142cc                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c00142dd                Vm::fpuAbs(unsigned long long)
                0x00000000c00142e6                Vm::fpuChs(unsigned long long)
                0x00000000c00142f6                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c0014305                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c0014324                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c0014340                Vm::fpuSquare(unsigned long long)
                0x00000000c0014356                Vm::fpuGetReg(int)
                0x00000000c0014399                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c00143e5                Vm::fpuPush(unsigned long long)
                0x00000000c0014443                Vm::fpuPop()
                0x00000000c0014496                Vm::x87Handler(regs*)
 .text          0x00000000c0014ff5      0x8e8 arch/i386/hal.32
                0x00000000c0014ff5                Hal::noCopro(unsigned long)
                0x00000000c0014ff6                Hal::noTSC()
                0x00000000c0014ffb                Hal::readTSC()
                0x00000000c0014ffe                nmiHandler(regs*, void*)
                0x00000000c0015017                doubleFault(regs*, void*)
                0x00000000c0015030                displayDebugInfo(regs*)
                0x00000000c0015351                displayProgramFault(char const*)
                0x00000000c001539d                gpFault(regs*, void*)
                0x00000000c0015402                pgFault(regs*, void*)
                0x00000000c0015464                otherISRHandler(regs*, void*)
                0x00000000c0015498                opcodeFault(regs*, void*)
                0x00000000c0015518                i386SaveCoprocessor(void*)
                0x00000000c001552c                i386LoadCoprocessor(void*)
                0x00000000c0015540                x87EmulHandler(regs*, void*)
                0x00000000c00155f3                Hal::initialiseCoprocessor()
                0x00000000c00156a1                Hal::panic(char const*)
                0x00000000c00156a6                Hal::initialise()
                0x00000000c001586f                Hal::makeBeep(int)
                0x00000000c00158a9                Hal::getRand()
                0x00000000c00158ac                Hal::endOfInterrupt(int)
 *fill*         0x00000000c00158dd        0x3 
 .text          0x00000000c00158e0      0x2dc arch/i386/pic.32
                0x00000000c00158e0                picIoWait()
                0x00000000c00158e8                picDisable()
                0x00000000c001591c                picGetIRQReg(int)
                0x00000000c0015998                picOpen()
                0x00000000c0015b1c                picEOI(int)
 .text          0x00000000c0015bbc      0x64a arch/i386/rtc.32
                0x00000000c0015bbc                RTC::open(int, int, void*)
                0x00000000c0015bc0                RTC::close(int, int, void*)
                0x00000000c0015bc4                RTC::timeInSecondsUTC()
                0x00000000c0015bd6                RTC::timeInDatetimeUTC()
                0x00000000c0015bfc                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015c3a                RTC::~RTC()
                0x00000000c0015c3a                RTC::~RTC()
                0x00000000c0015c5e                RTC::~RTC()
                0x00000000c0015c88                RTC::get_update_in_progress_flag()
                0x00000000c0015ca0                RTC::completeRTCRefresh()
                0x00000000c0015f58                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001610b                rtcIRQHandler(regs*, void*)
                0x00000000c0016150                RTC::RTC()
                0x00000000c0016150                RTC::RTC()
 *fill*         0x00000000c0016206        0x2 
 .text          0x00000000c0016208      0x1f7 arch/i386/vga.32
                0x00000000c0016208                Hal::consoleScroll(int, int)
                0x00000000c0016310                Hal::consoleWriteCharacter(char, int, int, int, int)
                0x00000000c0016374                Hal::consoleCursorUpdate(int, int)
 *fill*         0x00000000c00163ff        0x1 
 .text          0x00000000c0016400     0x13a7 fs/fat/vfslink.32
                0x00000000c0016400                FAT::getName()
                0x00000000c0016408                FAT::tell(void*, unsigned long long*)
                0x00000000c0016444                FAT::stat(void*, unsigned long long*)
                0x00000000c0016480                FAT::~FAT()
                0x00000000c0016480                FAT::~FAT()
                0x00000000c00164a4                FAT::~FAT()
                0x00000000c00164cc                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0016570                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0016634                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016808                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016a20                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016be0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016d4c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016dac                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016e0c                FAT::close(void*)
                0x00000000c0016e60                FAT::closeDir(void*)
                0x00000000c0016eb4                FAT::seek(void*, unsigned long long)
                0x00000000c0016f0c                fatWrapperReadDisk
                0x00000000c0016f4c                fatWrapperWriteDisk
                0x00000000c0016f8c                fatWrapperIoctl
                0x00000000c0017098                FAT::FAT()
                0x00000000c0017098                FAT::FAT()
                0x00000000c00170ec                FAT::fixFilepath(char*)
                0x00000000c0017128                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001725c                FAT::openDir(char const*, void**)
                0x00000000c001730c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017404                FAT::unlink(char const*)
                0x00000000c0017484                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00175ec                FAT::rename(char const*, char const*)
                0x00000000c00176b8                FAT::mkdir(char const*)
                0x00000000c0017738                FAT::exists(char const*)
 *fill*         0x00000000c00177a7        0x1 
 .text          0x00000000c00177a8      0xba7 fs/iso9660/vfslink.32
                0x00000000c00177a8                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00177ae                ISO9660::seek(void*, unsigned long long)
                0x00000000c00177de                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017802                ISO9660::getName()
                0x00000000c0017808                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001782c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017832                ISO9660::unlink(char const*)
                0x00000000c0017838                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001783e                ISO9660::rename(char const*, char const*)
                0x00000000c0017844                ISO9660::mkdir(char const*)
                0x00000000c001784a                ISO9660::close(void*)
                0x00000000c001786c                ISO9660::closeDir(void*)
                0x00000000c001788e                ISO9660::~ISO9660()
                0x00000000c001788e                ISO9660::~ISO9660()
                0x00000000c00178b2                ISO9660::~ISO9660()
                0x00000000c00178d9                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001791b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017996                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c00179f6                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017bfa                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017e74                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0017ec8                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001809e                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001812c                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00181da                ISO9660::exists(char const*)
                0x00000000c00181fe                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018292                ISO9660::openDir(char const*, void**)
                0x00000000c001832c                ISO9660::ISO9660()
                0x00000000c001832c                ISO9660::ISO9660()
 *fill*         0x00000000c001834f        0x1 
 .text          0x00000000c0018350      0x26c hal/sound/sndcard.32
                0x00000000c0018350                SoundCard::beginPlayback()
                0x00000000c001835e                SoundCard::stopPlayback()
                0x00000000c001836c                SoundCard::SoundCard(char const*)
                0x00000000c001836c                SoundCard::SoundCard(char const*)
                0x00000000c001840a                SoundCard::~SoundCard()
                0x00000000c001840a                SoundCard::~SoundCard()
                0x00000000c001842e                SoundCard::~SoundCard()
                0x00000000c0018458                SoundCard::configureRates(int, int, int)
                0x00000000c0018488                SoundCard::getSamples16(int, short*)
                0x00000000c00184e4                SoundCard::getSamples32(int, int*)
                0x00000000c001856a                SoundCard::addChannel(SoundPort*)
                0x00000000c00185a8                SoundCard::removeChannel(int)
 .text          0x00000000c00185bc      0x377 hal/sound/sndport.32
                0x00000000c00185bc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00185bc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018648                SoundPort::~SoundPort()
                0x00000000c0018648                SoundPort::~SoundPort()
                0x00000000c001867c                SoundPort::unpause()
                0x00000000c0018688                SoundPort::pause()
                0x00000000c0018694                SoundPort::getBufferUsed()
                0x00000000c001869c                SoundPort::getBufferSize()
                0x00000000c00186a4                SoundPort::buffer16(short*, int)
                0x00000000c0018730                SoundPort::buffer32(int*, int)
                0x00000000c00187b8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001887c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0018933        0x0 hw/bus/isa.32
 *fill*         0x00000000c0018933        0x1 
 .text          0x00000000c0018934      0xb43 hw/bus/pci.32
                0x00000000c0018934                PCI::open(int, int, void*)
                0x00000000c0018952                PCI::close(int, int, void*)
                0x00000000c0018956                PCI::PCI()
                0x00000000c0018956                PCI::PCI()
                0x00000000c00189ec                PCI::readBAR8(unsigned int, int)
                0x00000000c0018a08                PCI::readBAR16(unsigned int, int)
                0x00000000c0018a26                PCI::readBAR32(unsigned int, int)
                0x00000000c0018a42                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0018a62                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0018a84                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0018aa4                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018b12                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018bba                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018bde                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0018c06                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018c50                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0018c78                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018c9c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0018cc0                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018ce8                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018d4c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018e34                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c00190ae                PCI::checkBus(unsigned char)
                0x00000000c00190d2                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0019244                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c00193b8                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0019424                PCI::detect()
 *fill*         0x00000000c0019477        0x1 
 .text          0x00000000c0019478      0xb4a hw/diskctrl/ide.32
                0x00000000c0019478                IDE::close(int, int, void*)
                0x00000000c001947c                IDE::IDE()
                0x00000000c001947c                IDE::IDE()
                0x00000000c00194b0                IDE::prepareInterrupt(unsigned char)
                0x00000000c00194c2                selectDrive(unsigned char, unsigned char)
                0x00000000c00194c4                IDE::getBase(unsigned char)
                0x00000000c00194d6                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0019596                IDE::read(unsigned char, unsigned char)
                0x00000000c0019644                IDE::waitInterrupt(unsigned char)
                0x00000000c00196a6                ideChannel0IRQHandler(regs*, void*)
                0x00000000c00196c2                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00196de                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019724                IDE::open(int, int, void*)
                0x00000000c0019b32                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0019bfe                IDE::detect()
                0x00000000c0019ebe                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019f6e                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019fc2      0x320 hw/diskctrl/satabus.32
                0x00000000c0019fc2                SATABus::close(int, int, void*)
                0x00000000c0019fc6                SATABus::detect()
                0x00000000c0019fc8                SATABus::SATABus()
                0x00000000c0019fc8                SATABus::SATABus()
                0x00000000c001a04e                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001a080                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001a0c8                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001a0e8                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001a112                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001a218                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001a2c2                SATABus::open(int, int, void*)
 .text          0x00000000c001a2e2      0x5f4 hw/diskphys/ata.32
                0x00000000c001a2e2                ATA::close(int, int, void*)
                0x00000000c001a306                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001a308                ATA::ATA()
                0x00000000c001a308                ATA::ATA()
                0x00000000c001a336                ATA::flush(bool)
                0x00000000c001a380                ATA::readyForCommand()
                0x00000000c001a3cc                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a748                ATA::read(unsigned long long, int, void*)
                0x00000000c001a794                ATA::write(unsigned long long, int, void*)
                0x00000000c001a7e0                ATA::detectCHS()
                0x00000000c001a80a                ATA::open(int, int, void*)
 .text          0x00000000c001a8d6      0x613 hw/diskphys/atapi.32
                0x00000000c001a8d6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a8dc                ATAPI::close(int, int, void*)
                0x00000000c001a900                ATAPI::ATAPI()
                0x00000000c001a900                ATAPI::ATAPI()
                0x00000000c001a92e                ATAPI::readyForCommand()
                0x00000000c001a980                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001ac40                ATAPI::diskRemoved()
                0x00000000c001ac7a                ATAPI::eject()
                0x00000000c001acc2                ATAPI::diskInserted()
                0x00000000c001acce                ATAPI::detectMedia()
                0x00000000c001ad8a                ATAPI::open(int, int, void*)
                0x00000000c001ae6a                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001aee9        0x1 
 .text          0x00000000c001aeea      0x402 hw/diskphys/sata.32
                0x00000000c001aeea                SATA::close(int, int, void*)
                0x00000000c001af0e                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001af10                SATA::open(int, int, void*)
                0x00000000c001afba                SATA::SATA()
                0x00000000c001afba                SATA::SATA()
                0x00000000c001afe8                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001b234                SATA::read(unsigned long long, int, void*)
                0x00000000c001b280                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001b2ec      0x642 hw/diskphys/satapi.32
                0x00000000c001b2ec                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001b2f2                SATAPI::close(int, int, void*)
                0x00000000c001b316                SATAPI::SATAPI()
                0x00000000c001b316                SATAPI::SATAPI()
                0x00000000c001b344                SATAPI::diskRemoved()
                0x00000000c001b346                SATAPI::diskInserted()
                0x00000000c001b362                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b5f0                SATAPI::eject()
                0x00000000c001b62c                SATAPI::detectMedia()
                0x00000000c001b756                SATAPI::open(int, int, void*)
                0x00000000c001b856                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001b92e      0x42d hw/intctrl/apic.32
                0x00000000c001b92e                IOAPIC::close(int, int, void*)
                0x00000000c001b934                apicGetBase()
                0x00000000c001b976                IOAPIC::IOAPIC()
                0x00000000c001b976                IOAPIC::IOAPIC()
                0x00000000c001b99e                apicOpen()
                0x00000000c001baf8                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001bb2a                IOAPIC::read(int)
                0x00000000c001bb52                IOAPIC::open(int, int, void*)
                0x00000000c001bc36                IOAPIC::write(int, int)
                0x00000000c001bc62                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001bd5b        0x1 
 .text          0x00000000c001bd5c       0xf0 hw/timer/apictimer.32
                0x00000000c001bd5c                APICTimer::close(int, int, void*)
                0x00000000c001bd64                apicTimerHandler(regs*, void*)
                0x00000000c001bd8c                APICTimer::open(int, int, void*)
                0x00000000c001bdfc                APICTimer::write(int)
                0x00000000c001be24                APICTimer::APICTimer()
                0x00000000c001be24                APICTimer::APICTimer()
 .text          0x00000000c001be4c      0x1a3 hw/timer/pit.32
                0x00000000c001be4c                PIT::write(int)
                0x00000000c001becc                pitHandler(regs*, void*)
                0x00000000c001bef0                PIT::open(int, int, void*)
                0x00000000c001bf40                PIT::close(int, int, void*)
                0x00000000c001bf70                PIT::PIT()
                0x00000000c001bf70                PIT::PIT()
 *fill*         0x00000000c001bfef        0x1 
 .text          0x00000000c001bff0       0x83 arch/i386/avx.32
                0x00000000c001bff0                avxDetect
                0x00000000c001c01a                avxSave
                0x00000000c001c02b                avxLoad
                0x00000000c001c03c                avxInit
                0x00000000c001c05e                avxClose
                0x00000000c001c05f                wouldSheSayYes
 *fill*         0x00000000c001c073        0xd 
 .text          0x00000000c001c080      0x1d6 arch/i386/interrupt.32
                0x00000000c001c080                isr0
                0x00000000c001c090                isr1
                0x00000000c001c09a                isr2
                0x00000000c001c0a4                isr3
                0x00000000c001c0ae                isr4
                0x00000000c001c0b8                isr5
                0x00000000c001c0c2                isr6
                0x00000000c001c0cc                isr7
                0x00000000c001c0d6                isr8
                0x00000000c001c0de                isr9
                0x00000000c001c0e8                isr10
                0x00000000c001c0f0                isr11
                0x00000000c001c0f8                isr12
                0x00000000c001c100                isr13
                0x00000000c001c108                isr14
                0x00000000c001c110                isr15
                0x00000000c001c11a                isr16
                0x00000000c001c124                isr17
                0x00000000c001c12e                isr18
                0x00000000c001c138                irq3
                0x00000000c001c142                irq4
                0x00000000c001c14c                irq5
                0x00000000c001c156                irq6
                0x00000000c001c160                irq7
                0x00000000c001c16a                irq8
                0x00000000c001c174                irq9
                0x00000000c001c17e                irq10
                0x00000000c001c188                irq11
                0x00000000c001c192                irq12
                0x00000000c001c19c                irq13
                0x00000000c001c1a6                irq14
                0x00000000c001c1b0                irq15
                0x00000000c001c1ba                irq1
                0x00000000c001c1c1                irq2
                0x00000000c001c1c8                isr96
                0x00000000c001c1cf                irq0
                0x00000000c001c1d4                int_common_stub
                0x00000000c001c1d4                syscall_common_stub
                0x00000000c001c206                irq16
                0x00000000c001c210                irq17
                0x00000000c001c21a                irq18
                0x00000000c001c224                irq19
                0x00000000c001c22e                irq20
                0x00000000c001c238                irq21
                0x00000000c001c242                irq22
                0x00000000c001c24c                irq23
 *fill*         0x00000000c001c256        0xa 
 .text          0x00000000c001c260       0x10 arch/i386/rdrand.32
                0x00000000c001c260                i386GetRDRAND
 .text          0x00000000c001c270       0x39 arch/i386/sse.32
                0x00000000c001c270                absolutelyNoChanceInHell
                0x00000000c001c270                sseDetect
                0x00000000c001c288                sseSave
                0x00000000c001c290                sseLoad
                0x00000000c001c298                sseInit
                0x00000000c001c2a8                sseClose
 *fill*         0x00000000c001c2a9        0x7 
 .text          0x00000000c001c2b0       0x49 arch/i386/x87.32
                0x00000000c001c2b6                x87Detect
                0x00000000c001c2d1                x87Save
                0x00000000c001c2d8                x87Load
                0x00000000c001c2df                x87Init
                0x00000000c001c2f8                x87Close
 *fill*         0x00000000c001c2f9        0x3 
 .text          0x00000000c001c2fc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001c321        0x0 crtn.32
 *fill*         0x00000000c001c321        0x3 
 .text          0x00000000c001c324      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001c324                __divdi3
 *fill*         0x00000000c001c46f        0x1 
 .text          0x00000000c001c470      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c470                __moddi3
 *fill*         0x00000000c001c5ee        0x2 
 .text          0x00000000c001c5f0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c5f0                __udivdi3
 *fill*         0x00000000c001c6ef        0x1 
 .text          0x00000000c001c6f0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c6f0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c810        0x0
 .iplt          0x00000000c001c810        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c80a        0xf
 .init          0x00000000c001c80a        0x3 crti.32
                0x00000000c001c80a                _init
 .init          0x00000000c001c80d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c812        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c817        0x2 crtn.32

.fini           0x00000000c001c819        0xa
 .fini          0x00000000c001c819        0x3 crti.32
                0x00000000c001c819                _fini
 .fini          0x00000000c001c81c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c821        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c824       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c824       0x23 core/computer.32
                0x00000000c001c824                Computer::~Computer()
                0x00000000c001c824                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c848       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c848       0x2a core/computer.32
                0x00000000c001c848                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c872       0x21
 .text._Z10idleCommonv
                0x00000000c001c872       0x21 core/idle.32
                0x00000000c001c872                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c894        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c894        0x2 core/unixfile.32
                0x00000000c001c894                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c894                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c896       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c896       0x42 core/unixfile.32
                0x00000000c001c896                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c896                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c8d8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c8d8       0xd3 core/unixfile.32
                0x00000000c001c8d8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c9ac        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c9ac        0x7 core/unixfile.32
                0x00000000c001c9ac                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c9b4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c9b4       0xa1 core/unixfile.32
                0x00000000c001c9b4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ca56        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ca56        0x8 core/unixfile.32
                0x00000000c001ca56                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ca5e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ca5e       0x1a hal/device.32
                0x00000000c001ca5e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ca5e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ca78       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ca78       0x2a hal/device.32
                0x00000000c001ca78                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001caa2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001caa2       0xdc hal/device.32
                0x00000000c001caa2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001cb7e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001cb7e       0x42 hal/device.32
                0x00000000c001cb7e                LinkedList<Device>::LinkedList()
                0x00000000c001cb7e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001cbc0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001cbc0       0x1c hal/timer.32
                0x00000000c001cbc0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001cbdc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001cbdc        0x7 hal/timer.32
                0x00000000c001cbdc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001cbe4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001cbe4       0xb8 hal/timer.32
                0x00000000c001cbe4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001cc9c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001cc9c       0xda hal/timer.32
                0x00000000c001cc9c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001cd78       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001cd78       0x23 hw/acpi.32
                0x00000000c001cd78                ACPI::~ACPI()
                0x00000000c001cd78                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001cd9c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001cd9c       0x2a hw/acpi.32
                0x00000000c001cd9c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001cdc8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001cdc8        0x2 hw/acpi.32
                0x00000000c001cdc8                LinkedList<Device>::~LinkedList()
                0x00000000c001cdc8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001cdcc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001cdcc       0x1c hw/acpi.32
                0x00000000c001cdcc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001cde8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001cde8        0x7 hw/acpi.32
                0x00000000c001cde8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001cdf0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001cdf0       0xb8 hw/acpi.32
                0x00000000c001cdf0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001cea8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001cea8       0x23 hw/cpu.32
                0x00000000c001cea8                CPU::~CPU()
                0x00000000c001cea8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001cecc       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001cecc       0x2a hw/cpu.32
                0x00000000c001cecc                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cef8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cef8        0x2 thr/prcssthr.32
                0x00000000c001cef8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001cef8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cefc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cefc       0x49 thr/prcssthr.32
                0x00000000c001cefc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001cefc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cf48       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cf48       0x42 thr/prcssthr.32
                0x00000000c001cf48                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001cf48                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cf8c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cf8c        0x8 thr/prcssthr.32
                0x00000000c001cf8c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c001cf94        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c001cf94        0xd vm86/x87em.32
                0x00000000c001cf94                Vm::_FPUState::_FPUState()
                0x00000000c001cf94                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c001cfa2       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cfa2       0x23 hw/bus/pci.32
                0x00000000c001cfa2                PCI::~PCI()
                0x00000000c001cfa2                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cfc6       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cfc6       0x2a hw/bus/pci.32
                0x00000000c001cfc6                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cff0       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cff0       0x23 hw/diskctrl/ide.32
                0x00000000c001cff0                IDE::~IDE()
                0x00000000c001cff0                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001d014       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001d014       0x2a hw/diskctrl/ide.32
                0x00000000c001d014                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001d03e       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001d03e       0x23 hw/diskctrl/satabus.32
                0x00000000c001d03e                SATABus::~SATABus()
                0x00000000c001d03e                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001d062       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001d062       0x2a hw/diskctrl/satabus.32
                0x00000000c001d062                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001d08c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001d08c       0x23 hw/diskphys/ata.32
                0x00000000c001d08c                ATA::~ATA()
                0x00000000c001d08c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001d0b0       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001d0b0       0x2a hw/diskphys/ata.32
                0x00000000c001d0b0                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001d0da       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001d0da       0x23 hw/diskphys/atapi.32
                0x00000000c001d0da                ATAPI::~ATAPI()
                0x00000000c001d0da                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001d0fe       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001d0fe       0x2a hw/diskphys/atapi.32
                0x00000000c001d0fe                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001d128       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001d128       0x23 hw/diskphys/sata.32
                0x00000000c001d128                SATA::~SATA()
                0x00000000c001d128                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001d14c       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001d14c       0x2a hw/diskphys/sata.32
                0x00000000c001d14c                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001d176       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001d176       0x23 hw/diskphys/satapi.32
                0x00000000c001d176                SATAPI::~SATAPI()
                0x00000000c001d176                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001d19a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001d19a       0x2a hw/diskphys/satapi.32
                0x00000000c001d19a                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001d1c4       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001d1c4       0x23 hw/intctrl/apic.32
                0x00000000c001d1c4                IOAPIC::~IOAPIC()
                0x00000000c001d1c4                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001d1e8       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001d1e8       0x2a hw/intctrl/apic.32
                0x00000000c001d1e8                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001d214       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001d214       0x23 hw/timer/apictimer.32
                0x00000000c001d214                APICTimer::~APICTimer()
                0x00000000c001d214                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001d238       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001d238       0x2a hw/timer/apictimer.32
                0x00000000c001d238                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001d264       0x23
 .text._ZN3PITD2Ev
                0x00000000c001d264       0x23 hw/timer/pit.32
                0x00000000c001d264                PIT::~PIT()
                0x00000000c001d264                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001d288       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001d288       0x2a hw/timer/pit.32
                0x00000000c001d288                PIT::~PIT()

.rodata         0x00000000c001d2b2     0x29b6
                0x00000000c001d2b2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001d2b2        0x2 
 .ctors         0x00000000c001d2b4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001d2b8        0x4 core/unixfile.32
 .ctors         0x00000000c001d2bc        0x4 thr/prcssthr.32
 .ctors         0x00000000c001d2c0        0x4 vm86/x87em.32
 .ctors         0x00000000c001d2c4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001d2c8                end_ctors = .
                0x00000000c001d2c8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001d2c8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001d2cc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001d2cc                __DTOR_END__
                0x00000000c001d2d0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001d2d0       0x10 
 .rodata        0x00000000c001d2e0      0x101 acpica/utclib.32
                0x00000000c001d2e0                AcpiGbl_Ctypes
 *fill*         0x00000000c001d3e1        0x3 
 .rodata        0x00000000c001d3e4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001d3fc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001d446       0x1a 
 .rodata        0x00000000c001d460       0xed fs/fat/ff.32
 *fill*         0x00000000c001d54d       0x13 
 .rodata        0x00000000c001d560      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d960       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001d9a9      0x115 core/computer.32
 *fill*         0x00000000c001dabe        0x2 
 .rodata.str1.4
                0x00000000c001dac0       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001db28       0x2c core/computer.32
                0x00000000c001db28                vtable for Computer
 .rodata.str1.4
                0x00000000c001db54       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001db84        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001db90       0x17 core/main.32
 *fill*         0x00000000c001dba7        0x1 
 .rodata.str1.4
                0x00000000c001dba8       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001dc4d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001dca5       0x39 core/pipe.32
 *fill*         0x00000000c001dcde        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001dce0       0x1c core/pipe.32
                0x00000000c001dce0                vtable for Pipe
 .rodata.str1.1
                0x00000000c001dcfc       0x69 core/terminal.32
 *fill*         0x00000000c001dd65        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001dd68       0x1c core/terminal.32
                0x00000000c001dd68                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001dd84       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001dda6       0x15 core/unixfile.32
 *fill*         0x00000000c001ddbb        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001ddbc       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001de07        0x8 core/unixfile.32
 *fill*         0x00000000c001de0f        0x1 
 .rodata.str1.4
                0x00000000c001de10       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001de30       0x1c core/unixfile.32
                0x00000000c001de30                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001de4c       0x1c core/unixfile.32
                0x00000000c001de4c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001de68      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dfcf      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001e0d6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001e109       0x11 dbg/kconsole.32
 *fill*         0x00000000c001e109        0x3 
 .rodata        0x00000000c001e10c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001e25c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001e25c       0x68 fs/vfs.32
                0x00000000c001e25c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001e2c4       0x1c fs/vfs.32
                0x00000000c001e2c4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001e2e0       0x1c fs/vfs.32
                0x00000000c001e2e0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001e2fc       0x2c hal/bus.32
                0x00000000c001e2fc                vtable for Bus
 .rodata.str1.1
                0x00000000c001e328       0x1e hal/clock.32
 *fill*         0x00000000c001e346        0x2 
 .rodata._ZTV5Clock
                0x00000000c001e348       0x3c hal/clock.32
                0x00000000c001e348                vtable for Clock
 *fill*         0x00000000c001e384       0x1c 
 .rodata        0x00000000c001e3a0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001e3d0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001e428       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001e428       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001e428       0x2c hal/device.32
                0x00000000c001e428                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001e454       0x2c hal/device.32
                0x00000000c001e454                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e480       0x2c hal/diskctrl.32
                0x00000000c001e480                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e4ac       0x38 hal/diskphys.32
                0x00000000c001e4ac                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e4e4       0x3e hal/intctrl.32
 *fill*         0x00000000c001e522        0x2 
 .rodata.str1.4
                0x00000000c001e524       0x5d hal/intctrl.32
 .rodata        0x00000000c001e581       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e5d4       0x34 hal/keybrd.32
                0x00000000c001e5d4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e608       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e64c       0x2c hal/logidisk.32
                0x00000000c001e64c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e678       0x2c hal/mouse.32
                0x00000000c001e678                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e6a4        0xb hal/partition.32
 *fill*         0x00000000c001e6af        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e6b0       0x44 hal/serial.32
                0x00000000c001e6b0                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e6f4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e6f4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e6f4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e6f4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e6f4       0x30 hal/timer.32
                0x00000000c001e6f4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e724       0x10 hal/vcache.32
                0x00000000c001e724                vtable for VCache
 .rodata.str1.1
                0x00000000c001e734       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e79c       0x48 hal/video.32
                0x00000000c001e79c                vtable for Video
 .rodata.str1.4
                0x00000000c001e7e4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e87f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e9bb       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e9bb        0x8 hw/acpi.32
 *fill*         0x00000000c001e9bb        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e9bc       0x2c hw/acpi.32
                0x00000000c001e9bc                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e9e8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001eb55        0x3 
 .rodata._ZTV3CPU
                0x00000000c001eb58       0x2c hw/cpu.32
                0x00000000c001eb58                vtable for CPU
 .rodata.str1.1
                0x00000000c001eb84       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001ebc0       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 .rodata.str1.4
                0x00000000c001ec60      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c001ed9e       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001ede3        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001eded       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001ee41       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001ee6d       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001eeb5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001f081       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001f0d8      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001f1e4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001f1e4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001f1e4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001f1e4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001f1e4       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001f284       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001f2b4       0x58 vm86/x87em.32
 .rodata        0x00000000c001f30c       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c001f348      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001f456        0x2 
 .rodata.str1.4
                0x00000000c001f458       0x4b arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001f4a3       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001f4b8       0x3c arch/i386/rtc.32
                0x00000000c001f4b8                vtable for RTC
 .rodata.str1.1
                0x00000000c001f4f4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f535        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f538       0x68 fs/fat/vfslink.32
                0x00000000c001f538                vtable for FAT
 .rodata.str1.1
                0x00000000c001f5a0       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c001f5bb        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c001f5bc       0x68 fs/iso9660/vfslink.32
                0x00000000c001f5bc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f624       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f668       0x34 hal/sound/sndcard.32
                0x00000000c001f668                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f69c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f6db       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f713       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f7b4       0x2c hw/bus/pci.32
                0x00000000c001f7b4                vtable for PCI
 .rodata.str1.1
                0x00000000c001f7e0       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f867        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f868       0x2c hw/diskctrl/ide.32
                0x00000000c001f868                vtable for IDE
 .rodata.str1.4
                0x00000000c001f894       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f8b8       0x2c hw/diskctrl/satabus.32
                0x00000000c001f8b8                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f8e4       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f8f6        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f8f8       0x38 hw/diskphys/ata.32
                0x00000000c001f8f8                vtable for ATA
 .rodata.str1.1
                0x00000000c001f930        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f93d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f940       0x38 hw/diskphys/atapi.32
                0x00000000c001f940                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f978       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f9f4       0x38 hw/diskphys/sata.32
                0x00000000c001f9f4                vtable for SATA
 .rodata.str1.1
                0x00000000c001fa2c      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c001fb5e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c001fb60       0x38 hw/diskphys/satapi.32
                0x00000000c001fb60                vtable for SATAPI
 .rodata        0x00000000c001fb98        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001fba0       0x2c hw/intctrl/apic.32
                0x00000000c001fba0                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001fbcc       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001fbe7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001fbe8       0x30 hw/timer/apictimer.32
                0x00000000c001fbe8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001fc18       0x1d hw/timer/pit.32
 *fill*         0x00000000c001fc35        0x3 
 .rodata._ZTV3PIT
                0x00000000c001fc38       0x30 hw/timer/pit.32
                0x00000000c001fc38                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001fc68      0x26d
 *(.data)
 .data          0x00000000c001fc68        0x0 crti.32
 .data          0x00000000c001fc68        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001fc68                __dso_handle
 .data          0x00000000c001fc6c        0x0 acpica/utclib.32
 .data          0x00000000c001fc6c        0x0 core/malloc.32
 .data          0x00000000c001fc6c        0x0 libk/string.32
 .data          0x00000000c001fc6c        0x0 fs/fat/diskio.32
 .data          0x00000000c001fc6c        0x0 fs/fat/ff.32
 .data          0x00000000c001fc6c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001fc6c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001fc6c        0x0 compat/inlines.32
 .data          0x00000000c001fc6c        0x0 compat/resolve.32
 .data          0x00000000c001fc6c        0x0 core/computer.32
 .data          0x00000000c001fc6c        0x0 core/gdt.32
 .data          0x00000000c001fc6c        0x0 core/idle.32
 .data          0x00000000c001fc6c        0x0 core/idt.32
 .data          0x00000000c001fc6c        0x4 core/kheap.32
 *fill*         0x00000000c001fc70       0x10 
 .data          0x00000000c001fc80      0x142 core/main.32
                0x00000000c001fc80                titleScreen
 *fill*         0x00000000c001fdc2        0x2 
 .data          0x00000000c001fdc4        0x4 core/physmgr.32
                0x00000000c001fdc4                Phys::bitmap
 .data          0x00000000c001fdc8        0x0 core/pipe.32
 *fill*         0x00000000c001fdc8       0x18 
 .data          0x00000000c001fde0       0x60 core/terminal.32
                0x00000000c001fde0                VgaText::hiddenOut
                0x00000000c001fe00                ansiToVGAMappings
 .data          0x00000000c001fe40        0x0 core/tss.32
 .data          0x00000000c001fe40        0x4 core/unixfile.32
                0x00000000c001fe40                UnixFile::nextFd
 .data          0x00000000c001fe44       0x15 core/virtmgr.32
                0x00000000c001fe44                Virt::pageAllocPtr
                0x00000000c001fe48                Virt::bitmap
                0x00000000c001fe4c                Virt::swapfileSectorsPerPage
                0x00000000c001fe50                Virt::swapfileLength
                0x00000000c001fe54                Virt::swapfileSector
                0x00000000c001fe58                Virt::swapfileDrive
 *fill*         0x00000000c001fe59        0x3 
 .data          0x00000000c001fe5c        0x4 coreobjs/c++.32
                0x00000000c001fe5c                __stack_chk_guard
 .data          0x00000000c001fe60        0x0 dbg/kconsole.32
 .data          0x00000000c001fe60        0x0 fs/vfs.32
 .data          0x00000000c001fe60        0x0 hal/bus.32
 .data          0x00000000c001fe60        0x0 hal/buzzer.32
 .data          0x00000000c001fe60        0x0 hal/clock.32
 .data          0x00000000c001fe60        0x0 hal/device.32
 .data          0x00000000c001fe60        0x0 hal/diskctrl.32
 .data          0x00000000c001fe60        0x0 hal/diskphys.32
 .data          0x00000000c001fe60        0x0 hal/fpu.32
 .data          0x00000000c001fe60        0x0 hal/intctrl.32
 .data          0x00000000c001fe60        0x0 hal/keybrd.32
 .data          0x00000000c001fe60        0x0 hal/logidisk.32
 .data          0x00000000c001fe60        0x0 hal/mouse.32
 .data          0x00000000c001fe60        0x0 hal/partition.32
 .data          0x00000000c001fe60        0x0 hal/serial.32
 .data          0x00000000c001fe60        0x0 hal/timer.32
 .data          0x00000000c001fe60        0x0 hal/vcache.32
 .data          0x00000000c001fe60        0x0 hal/video.32
 .data          0x00000000c001fe60       0x10 hw/acpi.32
                0x00000000c001fe60                legacyIRQRemaps
 .data          0x00000000c001fe70        0x4 hw/cpu.32
                0x00000000c001fe70                lastCode
 .data          0x00000000c001fe74        0x0 hw/smp.32
 *fill*         0x00000000c001fe74        0xc 
 .data          0x00000000c001fe80       0x4d krnl/env.32
                0x00000000c001fe80                defaultSysEnv
 .data          0x00000000c001fecd        0x0 krnl/panic.32
 .data          0x00000000c001fecd        0x0 krnl/powctrl.32
 .data          0x00000000c001fecd        0x0 reg/registry.32
 .data          0x00000000c001fecd        0x0 sys/sc_eject.32
 .data          0x00000000c001fecd        0x0 sys/sc_exit.32
 .data          0x00000000c001fecd        0x0 sys/sc_getcwd.32
 .data          0x00000000c001fecd        0x0 sys/sc_getpid.32
 .data          0x00000000c001fecd        0x0 sys/sc_getramdata.32
 .data          0x00000000c001fecd        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001fecd        0x0 sys/sc_loaddll.32
 .data          0x00000000c001fecd        0x0 sys/sc_read.32
 .data          0x00000000c001fecd        0x0 sys/sc_sbrk.32
 .data          0x00000000c001fecd        0x0 sys/sc_setcwd.32
 .data          0x00000000c001fecd        0x0 sys/sc_settime.32
 .data          0x00000000c001fecd        0x0 sys/sc_timezone.32
 .data          0x00000000c001fecd        0x0 sys/sc_write.32
 .data          0x00000000c001fecd        0x0 sys/sc_wsbe.32
 .data          0x00000000c001fecd        0x0 sys/sc_yield.32
 .data          0x00000000c001fecd        0x0 sys/syscalls.32
 .data          0x00000000c001fecd        0x0 thr/elf.32
 *fill*         0x00000000c001fecd        0x3 
 .data          0x00000000c001fed0        0x4 thr/prcssthr.32
                0x00000000c001fed0                Thr::nextPID
 .data          0x00000000c001fed4        0x0 vm86/vm8086.32
 .data          0x00000000c001fed4        0x0 vm86/x87em.32
 .data          0x00000000c001fed4        0x0 arch/i386/hal.32
 .data          0x00000000c001fed4        0x0 arch/i386/pic.32
 .data          0x00000000c001fed4        0x0 arch/i386/rtc.32
 .data          0x00000000c001fed4        0x0 arch/i386/vga.32
 .data          0x00000000c001fed4        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fed4        0x1 fs/iso9660/vfslink.32
                0x00000000c001fed4                recentDriveletter
 .data          0x00000000c001fed5        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fed5        0x0 hal/sound/sndport.32
 .data          0x00000000c001fed5        0x0 hw/bus/isa.32
 .data          0x00000000c001fed5        0x0 hw/bus/pci.32
 .data          0x00000000c001fed5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fed5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fed5        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fed5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fed5        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fed5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fed5        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fed5        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fed5        0x0 hw/timer/pit.32
 .data          0x00000000c001fed5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fed5        0x0 crtn.32
 .data          0x00000000c001fed5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fed5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fed5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fed5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fed8        0x0
 .got           0x00000000c001fed8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fed8        0x0
 .got.plt       0x00000000c001fed8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fed8        0x0
 .igot.plt      0x00000000c001fed8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fed8        0x0
 .tm_clone_table
                0x00000000c001fed8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fed8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fed5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fed5        0x3 
 .eh_frame      0x00000000c001fed8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fed8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fed8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001ff30       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001ff70       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001ffdc       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c0020060        0x0
 .rel.got       0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0020060        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0020060     0x43c8
                0x00000000c0020060                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0020060        0x0 crti.32
 .bss           0x00000000c0020060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0020080        0x4 acpica/utclib.32
 *fill*         0x00000000c0020084       0x1c 
 .bss           0x00000000c00200a0      0x378 core/malloc.32
 .bss           0x00000000c0020418        0x0 libk/string.32
 .bss           0x00000000c0020418        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0020418        0x8 
 .bss           0x00000000c0020420       0x88 fs/fat/ff.32
 .bss           0x00000000c00204a8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c00204a8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c00204a8        0x0 compat/inlines.32
 .bss           0x00000000c00204a8        0x0 compat/resolve.32
 .bss           0x00000000c00204a8        0x6 core/computer.32
                0x00000000c00204a8                Krnl::computer
                0x00000000c00204ac                Krnl::preemptionOn
                0x00000000c00204ad                Krnl::schedulingOn
 *fill*         0x00000000c00204ae        0x2 
 .bss           0x00000000c00204b0        0x6 core/gdt.32
                0x00000000c00204b0                gdtDescr
 .bss           0x00000000c00204b6        0x0 core/idle.32
 *fill*         0x00000000c00204b6        0x2 
 .bss           0x00000000c00204b8        0x6 core/idt.32
                0x00000000c00204b8                idtDescr
 .bss           0x00000000c00204be        0x0 core/kheap.32
 *fill*         0x00000000c00204be        0x2 
 .bss           0x00000000c00204c0        0x4 core/main.32
                0x00000000c00204c0                sysBootSettings
 .bss           0x00000000c00204c4       0x29 core/physmgr.32
                0x00000000c00204c4                Phys::forbidEvictions
                0x00000000c00204c8                Phys::currentPagePointer
                0x00000000c00204cc                Phys::highestMem
                0x00000000c00204d0                Phys::oldPercent
                0x00000000c00204d4                Phys::usedPages
                0x00000000c00204d8                Phys::usablePages
                0x00000000c00204dc                Phys::dmaUsage
 .bss           0x00000000c00204ed        0x0 core/pipe.32
 *fill*         0x00000000c00204ed        0x3 
 .bss           0x00000000c00204f0        0x9 core/terminal.32
                0x00000000c00204f0                terminalCycle
                0x00000000c00204f4                activeTerminal
                0x00000000c00204f8                VgaText::graphicMode
 *fill*         0x00000000c00204f9        0x1 
 .bss           0x00000000c00204fa        0x2 core/tss.32
                0x00000000c00204fa                doubleFaultSelector
 *fill*         0x00000000c00204fc        0x4 
 .bss           0x00000000c0020500       0x84 core/unixfile.32
                0x00000000c0020500                sfileLpt
                0x00000000c0020540                sfileCom
                0x00000000c0020564                sfileNul
                0x00000000c0020568                sfilePnt
                0x00000000c002056c                sfileAux
                0x00000000c0020570                sfileCon
                0x00000000c0020574                initialFilesAdded
                0x00000000c0020578                unixFileLinkedList
 .bss           0x00000000c0020584       0x14 core/virtmgr.32
                0x00000000c0020584                twswaps
                0x00000000c0020588                swapBalance
                0x00000000c002058c                panicVAS
                0x00000000c0020590                Virt::swapfileBitmap
                0x00000000c0020594                firstVAS
 .bss           0x00000000c0020598        0x0 coreobjs/c++.32
 .bss           0x00000000c0020598        0x0 dbg/kconsole.32
 .bss           0x00000000c0020598        0x4 fs/vfs.32
                0x00000000c0020598                installedFilesystems
 .bss           0x00000000c002059c        0x0 hal/bus.32
 .bss           0x00000000c002059c        0x0 hal/buzzer.32
 .bss           0x00000000c002059c        0x8 hal/clock.32
                0x00000000c002059c                User::dstOn
                0x00000000c002059d                User::timezoneHalfHourOffset
                0x00000000c00205a0                User::timezoneHourOffset
 .bss           0x00000000c00205a4        0x0 hal/device.32
 .bss           0x00000000c00205a4        0x0 hal/diskctrl.32
 .bss           0x00000000c00205a4        0x0 hal/diskphys.32
 .bss           0x00000000c00205a4        0x0 hal/fpu.32
 *fill*         0x00000000c00205a4       0x1c 
 .bss           0x00000000c00205c0     0x2000 hal/intctrl.32
                0x00000000c00205c0                INT_contexts
                0x00000000c00215c0                INT_handlers
 .bss           0x00000000c00225c0      0x429 hal/keybrd.32
                0x00000000c00225c0                keyboardWaitingTaskList
                0x00000000c00225c4                keyboardSetupYet
                0x00000000c00225c8                guiKeyboardHandler
                0x00000000c00225e0                keystates
 *fill*         0x00000000c00229e9       0x17 
 .bss           0x00000000c0022a00       0x88 hal/logidisk.32
                0x00000000c0022a00                diskAssignments
                0x00000000c0022a20                disks
 .bss           0x00000000c0022a88        0x4 hal/mouse.32
                0x00000000c0022a88                guiMouseHandler
 .bss           0x00000000c0022a8c        0x0 hal/partition.32
 .bss           0x00000000c0022a8c        0x0 hal/serial.32
 .bss           0x00000000c0022a8c        0x4 hal/timer.32
                0x00000000c0022a8c                milliTenthsSinceBoot
 .bss           0x00000000c0022a90        0x0 hal/vcache.32
 .bss           0x00000000c0022a90        0x4 hal/video.32
                0x00000000c0022a90                screen
 *fill*         0x00000000c0022a94        0xc 
 .bss           0x00000000c0022aa0      0x480 hw/acpi.32
                0x00000000c0022aa0                systemSleepFunction
                0x00000000c0022aa4                systemResetFunction
                0x00000000c0022aa8                systemShutdownFunction
                0x00000000c0022aac                nextACPITable
                0x00000000c0022ac0                acpiTables
                0x00000000c0022cc0                usingXSDT
                0x00000000c0022cc4                MADTpointer
                0x00000000c0022cc8                RSDTpointer
                0x00000000c0022ccc                RSDPpointer
                0x00000000c0022cd0                nextAPICNMI
                0x00000000c0022ce0                apicNMIInfo
                0x00000000c0022d60                legacyIRQFlags
                0x00000000c0022d80                ioapicDiscoveryNumber
                0x00000000c0022da0                ioapicFoundInMADT
                0x00000000c0022dc0                ioapicAddresses
                0x00000000c0022e40                ioapicGSIBase
                0x00000000c0022ec0                processorDiscoveryNumber
                0x00000000c0022ee0                matchingAPICID
                0x00000000c0022f00                processorID
 .bss           0x00000000c0022f20       0x10 hw/cpu.32
                0x00000000c0022f20                lastD
                0x00000000c0022f24                lastC
                0x00000000c0022f28                lastB
                0x00000000c0022f2c                lastA
 .bss           0x00000000c0022f30        0x1 hw/smp.32
                0x00000000c0022f30                Krnl::bspID
 *fill*         0x00000000c0022f31        0x3 
 .bss           0x00000000c0022f34        0x8 krnl/env.32
                0x00000000c0022f34                Krnl::userEnv
                0x00000000c0022f38                Krnl::systemEnv
 .bss           0x00000000c0022f3c        0x9 krnl/panic.32
                0x00000000c0022f3c                Krnl::guiProgramFaultHandler
                0x00000000c0022f40                Krnl::guiPanicHandler
                0x00000000c0022f44                Krnl::kernelInPanic
 *fill*         0x00000000c0022f45       0x1b 
 .bss           0x00000000c0022f60       0x48 krnl/powctrl.32
                0x00000000c0022f60                Krnl::powCtrlOnBattery
                0x00000000c0022f80                Krnl::currentPowerSettings
                0x00000000c0022fa4                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0022fa8        0x0 reg/registry.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_eject.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_exit.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_getpid.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_read.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_settime.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_timezone.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_write.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0022fa8        0x0 sys/sc_yield.32
 *fill*         0x00000000c0022fa8       0x18 
 .bss           0x00000000c0022fc0      0x200 sys/syscalls.32
                0x00000000c0022fc0                systemCallHandlers
 .bss           0x00000000c00231c0      0x7a4 thr/elf.32
                0x00000000c00231c0                Thr::driverLookupNext
                0x00000000c00231e0                Thr::driverLookupLen
                0x00000000c00233e0                Thr::driverLookupAddr
                0x00000000c00235e0                Thr::driverNameLookup
                0x00000000c00237e0                Thr::kernelSymbols
                0x00000000c0023860                Thr::kernelStringTable
                0x00000000c00238e0                Thr::kernelSymbolTable
                0x00000000c0023960                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023964        0x4 
 .bss           0x00000000c0023968       0x68 thr/prcssthr.32
                0x00000000c0023968                cleanerThread
                0x00000000c002396c                weNeedTheCleanerToNotBlock
                0x00000000c0023970                retValLockStuff
                0x00000000c0023974                retValSchedLock
                0x00000000c0023978                lockStuffLock
                0x00000000c002397c                schedulerLock
                0x00000000c0023980                taskSwitchesPostponedFlag
                0x00000000c0023984                postponeTaskSwitchesCounter
                0x00000000c0023988                irqDisableCounter
                0x00000000c002398c                terminatedTaskList
                0x00000000c0023998                sleepingTaskList
                0x00000000c00239a4                taskList
                0x00000000c00239b0                kernelProcess
 *fill*         0x00000000c00239d0       0x10 
 .bss           0x00000000c00239e0       0x40 vm86/vm8086.32
                0x00000000c00239e0                Vm::vmRetV
                0x00000000c00239e4                Vm::vmDone
                0x00000000c00239e5                Vm::vmReady
                0x00000000c00239e8                Vm::vm86Thread
                0x00000000c00239ec                Vm::vmToHostCommsPtr
                0x00000000c0023a00                Vm::vmToHostComms
 .bss           0x00000000c0023a20       0x48 vm86/x87em.32
                0x00000000c0023a20                Vm::fpuState
 .bss           0x00000000c0023a68       0x18 arch/i386/hal.32
                0x00000000c0023a68                Hal::apic
                0x00000000c0023a6c                fpuOwner
                0x00000000c0023a70                coproLoadFunc
                0x00000000c0023a74                coproSaveFunc
                0x00000000c0023a78                _i386_HAL_tscFunction
                0x00000000c0023a7c                gpFaultIntercept
 .bss           0x00000000c0023a80        0x0 arch/i386/pic.32
 .bss           0x00000000c0023a80        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023a82        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023a82       0x1e 
 .bss           0x00000000c0023aa0       0xf0 fs/fat/vfslink.32
                0x00000000c0023aa0                FAT::fats
                0x00000000c0023ac0                FAT::vfsToFatRemaps
                0x00000000c0023b40                fatToVFSRemaps
 *fill*         0x00000000c0023b90       0x10 
 .bss           0x00000000c0023ba0      0x820 fs/iso9660/vfslink.32
                0x00000000c0023ba0                recentSector
                0x00000000c0023bc0                recentBuffer
 .bss           0x00000000c00243c0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00243c0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00243c0        0x0 hw/bus/isa.32
 .bss           0x00000000c00243c0        0xd hw/bus/pci.32
                0x00000000c00243c0                thePCI
 .bss           0x00000000c00243cd        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00243cd        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00243cd        0x3 
 .bss           0x00000000c00243d0        0x8 hw/diskphys/ata.32
                0x00000000c00243d0                ataSectorsWritten
                0x00000000c00243d4                ataSectorsRead
 .bss           0x00000000c00243d8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00243d8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00243d8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c00243d8        0x8 
 .bss           0x00000000c00243e0       0x41 hw/intctrl/apic.32
                0x00000000c00243e0                noOfIOAPICs
                0x00000000c0024400                ioapics
                0x00000000c0024420                IOAPICsSetupYet
 .bss           0x00000000c0024421        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024421        0x3 
 .bss           0x00000000c0024424        0x4 hw/timer/pit.32
                0x00000000c0024424                pitFreq
 .bss           0x00000000c0024428        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024428        0x0 crtn.32
 .bss           0x00000000c0024428        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0024428        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0024428        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0024428        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024428                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00287f0                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
