Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e85a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6bb core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006ca3                Krnl::firstTask()
                0x00000000c0006dde                Computer::Computer()
                0x00000000c0006dde                Computer::Computer()
                0x00000000c0006e8e                Computer::setBootMessage(char const*)
                0x00000000c0006e90                Computer::detectFeatures()
                0x00000000c00070b6                Computer::displayFeatures()
                0x00000000c00070b8                Computer::rdmsr(unsigned int)
                0x00000000c00070e4                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007120                Computer::shutdown()
                0x00000000c0007138                Computer::restart()
                0x00000000c0007150                Computer::sleep()
                0x00000000c0007164                Computer::nmiEnabled()
                0x00000000c0007170                Computer::readCMOS(unsigned char)
                0x00000000c000718e                Computer::enableNMI(bool)
                0x00000000c00071a6                Computer::open(int, int, void*)
                0x00000000c000727a                Computer::disableNMI()
                0x00000000c000728a                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072ae                Computer::handleNMI()
 *fill*         0x00000000c0007319        0x1 
 .text          0x00000000c000731a      0x1db core/gdt.32
                0x00000000c000731a                GDTEntry::setBase(unsigned int)
                0x00000000c0007336                GDTEntry::setLimit(unsigned int)
                0x00000000c0007354                GDT::GDT()
                0x00000000c0007354                GDT::GDT()
                0x00000000c000736a                GDT::addEntry(GDTEntry)
                0x00000000c000738c                GDT::getNumberOfEntries()
                0x00000000c0007394                GDT::flush()
                0x00000000c00073b6                GDT::setup()
 .text          0x00000000c00074f5       0x1d core/idle.32
                0x00000000c00074f5                idleFunction(void*)
 *fill*         0x00000000c0007512        0x2 
 .text          0x00000000c0007514      0x46c core/idt.32
                0x00000000c0007514                IDTEntry::IDTEntry(bool)
                0x00000000c0007514                IDTEntry::IDTEntry(bool)
                0x00000000c000758e                IDTEntry::setOffset(unsigned int)
                0x00000000c00075a4                IDT::IDT()
                0x00000000c00075a4                IDT::IDT()
                0x00000000c00075a6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075ae                IDT::addEntry(IDTEntry, int)
                0x00000000c00075c8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007600                IDT::flush()
                0x00000000c000761a                IDT::setup()
 .text          0x00000000c0007980      0x188 core/kheap.32
                0x00000000c0007980                sbrk
                0x00000000c0007a17                mmap
                0x00000000c0007a2d                munmap
                0x00000000c0007a43                liballoc_lock()
                0x00000000c0007a51                liballoc_unlock()
                0x00000000c0007a67                liballoc_alloc(int)
                0x00000000c0007a7f                liballoc_free(void*, int)
                0x00000000c0007a9a                realloc
                0x00000000c0007aae                malloc
                0x00000000c0007abe                free
                0x00000000c0007ace                rfree
                0x00000000c0007ade                calloc
 .text          0x00000000c0007b08       0xc3 core/main.32
                0x00000000c0007b08                KeEntryPoint
 .text          0x00000000c0007bcb      0x63a core/physmgr.32
                0x00000000c0007bcb                Phys::allocateDMA(unsigned long)
                0x00000000c0007cb3                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cee                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d2e                Phys::getPageState(unsigned long)
                0x00000000c0007d4a                Phys::freePage(unsigned long)
                0x00000000c0007db3                Phys::allocatePage()
                0x00000000c0007e82                Phys::allocateContiguousPages(int)
                0x00000000c0007ee9                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f21                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008205        0x1 
 .text          0x00000000c0008206      0x273 core/pipe.32
                0x00000000c0008206                Pipe::isAtty()
                0x00000000c000820a                Pipe::~Pipe()
                0x00000000c000820a                Pipe::~Pipe()
                0x00000000c000822e                Pipe::~Pipe()
                0x00000000c0008256                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008316                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008412                Pipe::Pipe(int)
                0x00000000c0008412                Pipe::Pipe(int)
 *fill*         0x00000000c0008479        0x1 
 .text          0x00000000c000847a      0xad8 core/terminal.32
                0x00000000c000847a                VgaText::isAtty()
                0x00000000c000847e                VgaText::~VgaText()
                0x00000000c000847e                VgaText::~VgaText()
                0x00000000c00084a2                VgaText::~VgaText()
                0x00000000c00084cc                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00084ec                setTerminalScrollLock(bool)
                0x00000000c00084ed                doTerminalCycle()
                0x00000000c00084ee                addToTerminalCycle(VgaText*)
                0x00000000c00084ef                scrollTerminalScrollLock(int)
                0x00000000c00084f0                VgaText::updateTitle()
                0x00000000c00084f2                VgaText::load()
                0x00000000c00084f4                VgaText::updateCursor()
                0x00000000c000850a                VgaText::doANSI_SGR(int)
                0x00000000c000857e                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000858e                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000859e                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085be                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085ca                VgaText::setTitleColour(VgaColour)
                0x00000000c00085d6                VgaText::setTitle(char*)
                0x00000000c00085d8                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00085ea                VgaText::scrollScreen()
                0x00000000c000867c                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000868c                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000871c                VgaText::getCursorX()
                0x00000000c0008724                VgaText::getCursorY()
                0x00000000c000872c                VgaText::setCursor(int, int)
                0x00000000c0008743                setActiveTerminal(VgaText*)
                0x00000000c000878e                VgaText::clearScreen()
                0x00000000c00087dc                VgaText::setCursorX(int)
                0x00000000c00087f4                VgaText::setCursorY(int)
                0x00000000c000880c                VgaText::incrementCursor(bool)
                0x00000000c0008860                VgaText::decrementCursor(bool)
                0x00000000c0008882                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008952                VgaText::putchar(char)
                0x00000000c0008a4a                VgaText::putx(unsigned int)
                0x00000000c0008a90                VgaText::puts(char const*)
                0x00000000c0008ab6                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b02                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c50                VgaText::VgaText(char const*)
                0x00000000c0008c50                VgaText::VgaText(char const*)
                0x00000000c0008da0                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2c                VgaText::doUpdate()
                0x00000000c0008f2d                newTerminal(char*)
 *fill*         0x00000000c0008f52        0x2 
 .text          0x00000000c0008f54      0x1a1 core/tss.32
                0x00000000c0008f54                TSS::TSS()
                0x00000000c0008f54                TSS::TSS()
                0x00000000c0008f64                TSS::setESP(unsigned long)
                0x00000000c0008f78                TSS::flush()
                0x00000000c0008f98                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090f5        0x1 
 .text          0x00000000c00090f6      0x4ca core/unixfile.32
                0x00000000c00090f6                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000914c                ReservedFilename::isAtty()
                0x00000000c0009168                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091c6                UnixFile::getFileDescriptor()
                0x00000000c00091ce                UnixFile::UnixFile(int)
                0x00000000c00091ce                UnixFile::UnixFile(int)
                0x00000000c0009382                ReservedFilename::ReservedFilename(int)
                0x00000000c0009382                ReservedFilename::ReservedFilename(int)
                0x00000000c00093b4                UnixFile::~UnixFile()
                0x00000000c00093b4                UnixFile::~UnixFile()
                0x00000000c0009450                UnixFile::~UnixFile()
                0x00000000c0009478                ReservedFilename::~ReservedFilename()
                0x00000000c0009478                ReservedFilename::~ReservedFilename()
                0x00000000c000949c                ReservedFilename::~ReservedFilename()
                0x00000000c00094c3                getFromFileDescriptor(int)
 .text          0x00000000c00095c0     0x1285 core/virtmgr.32
                0x00000000c00095c0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095fa                Virt::getPageState(unsigned long)
                0x00000000c000961d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009742                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009765                Virt::swapIDToSector(unsigned long)
                0x00000000c000977b                Virt::allocateSwapfilePage()
                0x00000000c00097fb                Virt::virtualMemorySetup()
                0x00000000c000984c                Virt::setupPageSwapping(int)
                0x00000000c00098be                VAS::VAS(VAS*)
                0x00000000c00098be                VAS::VAS(VAS*)
                0x00000000c00098ec                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000991a                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009939                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a4c                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a70                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a8a                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009acc                VAS::VAS()
                0x00000000c0009acc                VAS::VAS()
                0x00000000c0009b36                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b6a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b96                VAS::~VAS()
                0x00000000c0009b96                VAS::~VAS()
                0x00000000c0009d04                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e0a                VAS::allocatePages(int, int)
                0x00000000c0009ffa                VAS::setCPUSpecific(unsigned long)
                0x00000000c000a018                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a0ee                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a1e4                VAS::VAS(bool)
                0x00000000c000a1e4                VAS::VAS(bool)
                0x00000000c000a476                VAS::evict(unsigned long)
                0x00000000c000a542                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a664                VAS::scanForEviction()
                0x00000000c000a74a                mapVASFirstTime
 .text          0x00000000c000a845       0x5f coreobjs/c++.32
                0x00000000c000a845                __cxa_atexit
                0x00000000c000a848                __cxa_finalize
                0x00000000c000a849                __stack_chk_fail
                0x00000000c000a87f                __cxa_pure_virtual
                0x00000000c000a890                operator new[](unsigned long)
                0x00000000c000a895                operator delete(void*, unsigned long)
                0x00000000c000a89a                operator delete[](void*)
                0x00000000c000a89f                operator delete[](void*, unsigned long)
 .text          0x00000000c000a8a4      0x254 dbg/kconsole.32
                0x00000000c000a8a4                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a944                Dbg::logc(char)
                0x00000000c000a964                Dbg::logs(char*)
                0x00000000c000a983                Dbg::logWriteInt(unsigned int)
                0x00000000c000a9a1                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a9c2                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aaf8      0xc60 fs/vfs.32
                0x00000000c000aaf8                File::read(unsigned long long, void*, int*)
                0x00000000c000ab50                File::write(unsigned long long, void*, int*)
                0x00000000c000aba8                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ac00                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ac2e                File::isAtty()
                0x00000000c000ac32                Directory::isAtty()
                0x00000000c000ac36                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ac3c                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ac42                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ac48                File::~File()
                0x00000000c000ac48                File::~File()
                0x00000000c000ac6c                File::~File()
                0x00000000c000ac96                Directory::~Directory()
                0x00000000c000ac96                Directory::~Directory()
                0x00000000c000acba                Directory::~Directory()
                0x00000000c000ace4                Filesystem::Filesystem()
                0x00000000c000ace4                Filesystem::Filesystem()
                0x00000000c000ad08                Filesystem::~Filesystem()
                0x00000000c000ad08                Filesystem::~Filesystem()
                0x00000000c000ad16                Filesystem::~Filesystem()
                0x00000000c000ad3a                Fs::getcwd(Process*, char*, int)
                0x00000000c000ad64                Fs::initVFS()
                0x00000000c000ad8e                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000af44                File::File(char const*, Process*)
                0x00000000c000af44                File::File(char const*, Process*)
                0x00000000c000b000                File::open(FileOpenMode)
                0x00000000c000b05e                File::close()
                0x00000000c000b0be                File::seek(unsigned long long)
                0x00000000c000b114                File::tell(unsigned long long*)
                0x00000000c000b164                File::rewind()
                0x00000000c000b178                File::unlink()
                0x00000000c000b1c4                File::rename(char const*)
                0x00000000c000b212                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b26e                File::exists()
                0x00000000c000b2ac                File::stat(unsigned long long*, bool*)
                0x00000000c000b30d                Fs::setcwd(Process*, char*)
                0x00000000c000b46a                Directory::Directory(char const*, Process*)
                0x00000000c000b46a                Directory::Directory(char const*, Process*)
                0x00000000c000b526                Directory::open()
                0x00000000c000b582                Directory::close()
                0x00000000c000b5e2                Directory::unlink()
                0x00000000c000b62e                Directory::rename(char const*)
                0x00000000c000b67c                Directory::exists()
                0x00000000c000b6ba                Directory::read(dirent*)
                0x00000000c000b706                Directory::create()
                0x00000000c000b752                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000b758       0x86 hal/bus.32
                0x00000000c000b758                Bus::Bus(char const*)
                0x00000000c000b758                Bus::Bus(char const*)
                0x00000000c000b790                Bus::~Bus()
                0x00000000c000b790                Bus::~Bus()
                0x00000000c000b7b4                Bus::~Bus()
 .text          0x00000000c000b7de       0x96 hal/buzzer.32
                0x00000000c000b7de                beepThread(void*)
                0x00000000c000b81b                Krnl::beep(int, int, bool)
 .text          0x00000000c000b874      0x45f hal/clock.32
                0x00000000c000b874                User::loadClockSettings(int)
                0x00000000c000b8c6                Clock::Clock(char const*)
                0x00000000c000b8c6                Clock::Clock(char const*)
                0x00000000c000b8fc                Clock::~Clock()
                0x00000000c000b8fc                Clock::~Clock()
                0x00000000c000b920                Clock::~Clock()
                0x00000000c000b94a                Clock::timeInSecondsLocal()
                0x00000000c000b992                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b9eb                datetimeToSeconds(datetime_t)
                0x00000000c000bb0a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bb6a                secondsToDatetime(unsigned long long)
                0x00000000c000bcae                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bcd3        0x1 
 .text          0x00000000c000bcd4      0x464 hal/device.32
                0x00000000c000bcd4                Device::hibernate()
                0x00000000c000bcd6                Device::wake()
                0x00000000c000bcd8                Device::detect()
                0x00000000c000bcda                Device::disableLegacy()
                0x00000000c000bcdc                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bcde                DriverlessDevice::close(int, int, void*)
                0x00000000c000bce2                DriverlessDevice::detect()
                0x00000000c000bce4                DriverlessDevice::open(int, int, void*)
                0x00000000c000bcf8                Device::~Device()
                0x00000000c000bcf8                Device::~Device()
                0x00000000c000bd06                Device::~Device()
                0x00000000c000bd2e                Device::findAndLoadDriver()
                0x00000000c000bd3c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bd62                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bda2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bdcc                Device::getParent()
                0x00000000c000bdd8                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000bdf6                Device::addChild(Device*)
                0x00000000c000be3a                Device::removeAllChildren()
                0x00000000c000be80                Device::hibernateAll()
                0x00000000c000beb0                Device::wakeAll()
                0x00000000c000bee0                Device::detectAll()
                0x00000000c000bf10                Device::disableLegacyAll()
                0x00000000c000bf12                Device::loadDriversForAll()
                0x00000000c000bf14                Device::closeAll()
                0x00000000c000bf4a                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bf80                Device::setName(char const*)
                0x00000000c000bf8e                Device::Device(char const*)
                0x00000000c000bf8e                Device::Device(char const*)
                0x00000000c000c08a                Device::getName()
                0x00000000c000c094                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c094                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c0ca                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c10e                getDevicesOfType(DeviceType)
 .text          0x00000000c000c138       0x86 hal/diskctrl.32
                0x00000000c000c138                HardDiskController::HardDiskController(char const*)
                0x00000000c000c138                HardDiskController::HardDiskController(char const*)
                0x00000000c000c170                HardDiskController::~HardDiskController()
                0x00000000c000c170                HardDiskController::~HardDiskController()
                0x00000000c000c194                HardDiskController::~HardDiskController()
 .text          0x00000000c000c1be       0xe2 hal/diskphys.32
                0x00000000c000c1be                PhysicalDisk::eject()
                0x00000000c000c1c2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c1c2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c22a                PhysicalDisk::startCache()
                0x00000000c000c252                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c252                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c276                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c2a0        0x0 hal/fpu.32
 .text          0x00000000c000c2a0      0x359 hal/intctrl.32
                0x00000000c000c2a0                int_handler
                0x00000000c000c32a                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c374                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c4a8                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c4dc                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c55a                setupINTS()
                0x00000000c000c5b7                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c5f9        0x1 
 .text          0x00000000c000c5fa      0x8be hal/keybrd.32
                0x00000000c000c5fa                startGUI(void*)
                0x00000000c000c668                startGUIVESA(void*)
                0x00000000c000c6d6                sendKeyToTerminal(unsigned char)
                0x00000000c000c7b1                sendKeyboardToken(KeyboardToken)
                0x00000000c000cc9b                clearInternalKeybuffer(VgaText*)
                0x00000000c000ccd0                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000ce2e                Keyboard::Keyboard(char const*)
                0x00000000c000ce2e                Keyboard::Keyboard(char const*)
                0x00000000c000ce6a                Keyboard::~Keyboard()
                0x00000000c000ce6a                Keyboard::~Keyboard()
                0x00000000c000ce8e                Keyboard::~Keyboard()
 .text          0x00000000c000ceb8      0x3f8 hal/logidisk.32
                0x00000000c000ceb8                LogicalDisk::close(int, int, void*)
                0x00000000c000cebc                LogicalDisk::~LogicalDisk()
                0x00000000c000cebc                LogicalDisk::~LogicalDisk()
                0x00000000c000cee0                LogicalDisk::~LogicalDisk()
                0x00000000c000cf0a                LogicalDisk::open(int, int, void*)
                0x00000000c000cf1e                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cf56                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cf9c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cf9c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d05c                LogicalDisk::assignDriveLetter()
                0x00000000c000d116                LogicalDisk::mount()
                0x00000000c000d15e                LogicalDisk::unmount()
                0x00000000c000d16e                LogicalDisk::eject()
                0x00000000c000d182                LogicalDisk::unassignDriveLetter()
                0x00000000c000d1d8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d244                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000d2b0       0x86 hal/mouse.32
                0x00000000c000d2b0                Mouse::Mouse(char const*)
                0x00000000c000d2b0                Mouse::Mouse(char const*)
                0x00000000c000d2e8                Mouse::~Mouse()
                0x00000000c000d2e8                Mouse::~Mouse()
                0x00000000c000d30c                Mouse::~Mouse()
 .text          0x00000000c000d336       0x90 hal/nic.32
                0x00000000c000d336                NIC::getMAC()
                0x00000000c000d33c                NIC::write(int, unsigned char*, int*)
                0x00000000c000d342                NIC::NIC(char const*)
                0x00000000c000d342                NIC::NIC(char const*)
                0x00000000c000d378                NIC::~NIC()
                0x00000000c000d378                NIC::~NIC()
                0x00000000c000d39c                NIC::~NIC()
 .text          0x00000000c000d3c6      0x33b hal/partition.32
                0x00000000c000d3c6                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d46e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d701        0x3 
 .text          0x00000000c000d704       0x86 hal/serial.32
                0x00000000c000d704                Serial::Serial(char const*)
                0x00000000c000d704                Serial::Serial(char const*)
                0x00000000c000d73c                Serial::~Serial()
                0x00000000c000d73c                Serial::~Serial()
                0x00000000c000d760                Serial::~Serial()
 *fill*         0x00000000c000d78a        0x2 
 .text          0x00000000c000d78c      0x234 hal/timer.32
                0x00000000c000d78c                Timer::Timer(char const*)
                0x00000000c000d78c                Timer::Timer(char const*)
                0x00000000c000d7c4                Timer::~Timer()
                0x00000000c000d7c4                Timer::~Timer()
                0x00000000c000d7e8                Timer::~Timer()
                0x00000000c000d812                Timer::read()
                0x00000000c000d81d                setupTimer(int)
                0x00000000c000d858                timerHandler(unsigned int)
 .text          0x00000000c000d9c0      0x444 hal/vcache.32
                0x00000000c000d9c0                VCache::VCache(PhysicalDisk*)
                0x00000000c000d9c0                VCache::VCache(PhysicalDisk*)
                0x00000000c000db30                VCache::invalidateReadBuffer()
                0x00000000c000db40                VCache::writeWriteBuffer()
                0x00000000c000db8c                VCache::~VCache()
                0x00000000c000db8c                VCache::~VCache()
                0x00000000c000dbe4                VCache::~VCache()
                0x00000000c000dc0c                VCache::write(unsigned long long, int, void*)
                0x00000000c000dcfa                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000de04      0x4c7 hal/video.32
                0x00000000c000de04                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000de50                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000dec0                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000df3e                Video::clearScreen(unsigned int)
                0x00000000c000df72                Video::putpixel(int, int, unsigned int)
                0x00000000c000df80                Video::readPixelApprox(int, int)
                0x00000000c000df94                Video::Video(char const*)
                0x00000000c000df94                Video::Video(char const*)
                0x00000000c000dfca                Video::~Video()
                0x00000000c000dfca                Video::~Video()
                0x00000000c000dfee                Video::~Video()
                0x00000000c000e018                Video::isMonochrome()
                0x00000000c000e024                Video::getWidth()
                0x00000000c000e030                Video::getHeight()
                0x00000000c000e03c                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e0f8                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e260                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e2cb        0x1 
 .text          0x00000000c000e2cc     0x138b hw/acpi.32
                0x00000000c000e2cc                ACPI::close(int, int, void*)
                0x00000000c000e380                findRSDP()
                0x00000000c000e418                loadACPITables(unsigned char*)
                0x00000000c000e684                findRSDT(unsigned char*)
                0x00000000c000e7dc                findDataTable(unsigned char*, char*)
                0x00000000c000e85c                scanMADT()
                0x00000000c000ed14                ACPI::ACPI()
                0x00000000c000ed14                ACPI::ACPI()
                0x00000000c000ed68                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ee64                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ef30                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ef38                ACPI::detectPCI()
                0x00000000c000f158                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f1a0                ACPI::sleep()
                0x00000000c000f1bc                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f657        0x1 
 .text          0x00000000c000f658      0xba5 hw/cpu.32
                0x00000000c000f658                CPU::close(int, int, void*)
                0x00000000c000f65c                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f678                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f690                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f704                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f788                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f7b6                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f7e4                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f812                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f840                CPU::CPU()
                0x00000000c000f840                CPU::CPU()
                0x00000000c000f8ce                CPU::displayFeatures()
                0x00000000c000f8d0                CPU::detectFeatures()
                0x00000000c000ffa4                CPU::setupSMEP()
                0x00000000c000ffb0                CPU::setupUMIP()
                0x00000000c000ffba                CPU::setupTSC()
                0x00000000c000ffc4                CPU::setupLargePages()
                0x00000000c000ffce                CPU::setupPAT()
                0x00000000c001000a                CPU::setupMTRR()
                0x00000000c001000c                CPU::setupGlobalPages()
                0x00000000c0010016                CPU::allowUsermodeDataAccess()
                0x00000000c0010028                CPU::prohibitUsermodeDataAccess()
                0x00000000c001003a                CPU::setupSMAP()
                0x00000000c0010048                CPU::setupFeatures()
                0x00000000c0010114                CPU::open(int, int, void*)
 .text          0x00000000c00101fd       0xd8 krnl/bootmsg.32
                0x00000000c00101fd                KeDisplaySplashScreen()
                0x00000000c0010272                KeSetBootMessage(char const*)
 *fill*         0x00000000c00102d5        0x1 
 .text          0x00000000c00102d6      0x585 krnl/env.32
                0x00000000c00102d6                EnvVarContainer::getEnv(char const*)
                0x00000000c0010314                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00103d6                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00103d8                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00105c2                EnvVarContainer::__loadSystem()
                0x00000000c00105dc                EnvVarContainer::__loadUser()
                0x00000000c00105de                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00105de                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010600                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010600                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010630                Krnl::getEnv(Process*, char const*)
                0x00000000c0010695                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00106af                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00106ce                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00106e1                Krnl::deleteEnvSystem(char const*)
                0x00000000c00106e2                Krnl::deleteEnvUser(char const*)
                0x00000000c00106e3                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c00106e4                Krnl::newProcessEnv(Process*)
                0x00000000c0010706                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010752                Krnl::loadSystemEnv()
                0x00000000c0010780                Krnl::loadUserEnv()
                0x00000000c00107a6                Krnl::flushEnv()
                0x00000000c00107a7                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00107c7                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001085b       0x94 krnl/inlines.32
                0x00000000c001085b                CPU::current()
                0x00000000c0010867                operator new(unsigned long)
                0x00000000c001086c                operator delete(void*)
                0x00000000c0010871                disableIRQs()
                0x00000000c0010873                enableIRQs()
                0x00000000c0010875                lockScheduler()
                0x00000000c001087d                unlockScheduler()
                0x00000000c001088c                lockStuff()
                0x00000000c001089a                unlockStuff()
                0x00000000c00108d4                Virt::getAKernelVAS()
                0x00000000c00108da                __not_memcpy
 .text          0x00000000c00108ef        0xc krnl/panic.32
                0x00000000c00108ef                KePanic(char const*)
 .text          0x00000000c00108fb      0x142 krnl/powctrl.32
                0x00000000c00108fb                Krnl::powerThread(void*)
                0x00000000c0010929                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c001093f                Krnl::userIOReceived()
                0x00000000c001094a                Krnl::handlePowerButton()
                0x00000000c001097f                Krnl::handleSleepButton()
                0x00000000c00109b4                Krnl::setupPowerManager()
 .text          0x00000000c0010a3d       0x9d krnl/random.32
                0x00000000c0010a3d                KeRand()
                0x00000000c0010a7f                KeSeedRand(unsigned int)
                0x00000000c0010aa8                KeInitRand()
 *fill*         0x00000000c0010ada        0x2 
 .text          0x00000000c0010adc      0x1bc krnl/resolve.32
                0x00000000c0010adc                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010c98      0x313 krnl/signal.32
                0x00000000c0010c98                KiSigKill(int)
                0x00000000c0010cac                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010cad                KiDefaultSignalHandlerPause(int)
                0x00000000c0010cd9                KiDefaultSignalHandlerResume(int)
                0x00000000c0010d05                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010d0a                KeInitSignals()
                0x00000000c0010d55                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010d8b                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010e08                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010ef7                KiCheckSignalZ
                0x00000000c0010f39                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010f74                KiFinishSignalZ
 .text          0x00000000c0010fab      0xc61 krnl/syscalls.32
                0x00000000c0010fab                SysSeekDir(regs*)
                0x00000000c0010fb0                SysTellDir(regs*)
                0x00000000c0010fb5                SysVerify(regs*)
                0x00000000c0010fbf                SysGetArgc(regs*)
                0x00000000c0010fd3                SysTTYName(regs*)
                0x00000000c0010fdb                SysFormatDisk(regs*)
                0x00000000c0011052                SysSetDiskVolumeLabel(regs*)
                0x00000000c00110a6                SysGetDiskVolumeLabel(regs*)
                0x00000000c00110ff                SysShutdown(regs*)
                0x00000000c001115d                SysRealpath(regs*)
                0x00000000c00111a2                SysReadDir(regs*)
                0x00000000c0011222                SysIsATTY(regs*)
                0x00000000c001127c                SysSeek(regs*)
                0x00000000c00112d3                SysTell(regs*)
                0x00000000c0011340                SysSize(regs*)
                0x00000000c00113b3                SysSizeFromFilename(regs*)
                0x00000000c0011464                SysClose(regs*)
                0x00000000c00114c4                SysOpenDir(regs*)
                0x00000000c0011541                SysMakeDir(regs*)
                0x00000000c00115af                SysCloseDir(regs*)
                0x00000000c0011603                SysWait(regs*)
                0x00000000c0011624                SysNotImpl(regs*)
                0x00000000c001163f                SysPanic(regs*)
                0x00000000c001165a                SysRmdir(regs*)
                0x00000000c00116bf                SysUnlink(regs*)
                0x00000000c0011724                SysGetArgv(regs*)
                0x00000000c0011771                SysUSleep(regs*)
                0x00000000c001179a                SysSpawn(regs*)
                0x00000000c001180d                SysGetEnv(regs*)
                0x00000000c00118be                SysSetFatAttrib(regs*)
                0x00000000c0011931                SysPipe(regs*)
                0x00000000c0011976                SysGetUnixTime(regs*)
                0x00000000c001198a                string_ends_with(char const*, char const*)
                0x00000000c00119d2                SysOpen(regs*)
                0x00000000c0011bca                KeSystemCall(regs*, void*)
 .text          0x00000000c0011c0c      0x159 net/ethernet.32
                0x00000000c0011c0c                KeSwitchEndian16(unsigned short)
                0x00000000c0011c30                KeSwitchEndian32(unsigned int)
                0x00000000c0011c60                EthernetCRC32(unsigned char*, int)
                0x00000000c0011d04                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0011d65      0xd56 reg/cm.32
                0x00000000c0011d65                CmOpen(char const*)
                0x00000000c0011e83                CmClose(Reghive_Tag*)
                0x00000000c0011e99                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011ed5                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0011f4c                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011f8b                CmGetNext(Reghive_Tag*, int)
                0x00000000c0011fbd                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011ff9                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012021                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012042                CmExpand(Reghive_Tag*, int)
                0x00000000c00120bd                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012143                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012237                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012373                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c00123d4                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012404                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c001243b                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012465                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c00124a5                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012549                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012577                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0012715                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0012762                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00127dc                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001282f                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00128f3                zStrtok(char*, char const*)
                0x00000000c0012965                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00129e6                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0012a89                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0012abb      0x52a reg/registry.32
                0x00000000c0012abb                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012c2c                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0012d81                Reg::getLine(char*, char*, char*)
                0x00000000c0012db8                Reg::readInt(char*, char*, int*)
                0x00000000c0012ea6                Reg::readString(char*, char*, char*, int)
                0x00000000c0012f27                Reg::readBool(char*, char*, bool*)
                0x00000000c0012f4c                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0012f78                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012fa4                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0012fe5       0x36 sys/eject.32
                0x00000000c0012fe5                SysEject(regs*)
 .text          0x00000000c001301b       0x18 sys/exit.32
                0x00000000c001301b                SysExit(regs*)
 .text          0x00000000c0013033       0x1f sys/getcwd.32
                0x00000000c0013033                SysGetCwd(regs*)
 .text          0x00000000c0013052        0xc sys/getpid.32
                0x00000000c0013052                SysGetPID(regs*)
 .text          0x00000000c001305e       0x1a sys/getramdata.32
                0x00000000c001305e                SysGetRAMData(regs*)
 .text          0x00000000c0013078       0x82 sys/getvgaptr.32
                0x00000000c0013078                SysGetVGAPtr(regs*)
 *fill*         0x00000000c00130fa        0x2 
 .text          0x00000000c00130fc       0xb9 sys/kill.32
                0x00000000c00130fc                SysKill(regs*)
 .text          0x00000000c00131b5       0xa8 sys/loaddll.32
                0x00000000c00131b5                SysLoadDLL(regs*)
 .text          0x00000000c001325d       0x68 sys/read.32
                0x00000000c001325d                SysRead(regs*)
 .text          0x00000000c00132c5       0x29 sys/registersignal.32
                0x00000000c00132c5                SysRegisterSignal(regs*)
 .text          0x00000000c00132ee      0x19c sys/registry.32
                0x00000000c00132ee                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013365                SysRegistryReadExtent(regs*)
                0x00000000c00133ad                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00133d5                SysRegistryEnterDirectory(regs*)
                0x00000000c00133fd                SysRegistryGetNext(regs*)
                0x00000000c0013425                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001345f                SysRegistryOpen(regs*)
                0x00000000c0013473                SysRegistryClose(regs*)
 .text          0x00000000c001348a       0x55 sys/sbrk.32
                0x00000000c001348a                SysSbrk(regs*)
 .text          0x00000000c00134df       0x1c sys/setcwd.32
                0x00000000c00134df                SysSetCwd(regs*)
 .text          0x00000000c00134fb       0x96 sys/settime.32
                0x00000000c00134fb                SysSetTime(regs*)
 .text          0x00000000c0013591       0x4a sys/timezone.32
                0x00000000c0013591                SysTimezone(regs*)
 .text          0x00000000c00135db       0x68 sys/write.32
                0x00000000c00135db                SysWrite(regs*)
 .text          0x00000000c0013643       0x62 sys/wsbe.32
                0x00000000c0013643                SysWsbe(regs*)
 .text          0x00000000c00136a5       0x25 sys/yield.32
                0x00000000c00136a5                SysYield(regs*)
 .text          0x00000000c00136ca     0x11e6 thr/elf.32
                0x00000000c00136ca                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0013958                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013b6a                Thr::runtimeReferenceHelper()
                0x00000000c0013b7d                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013bcc                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013e8a                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00145c3                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00145f5                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001462c                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0014646                Thr::loadDLL(char const*, bool)
                0x00000000c0014877                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00148b0     0x13d9 thr/prcssthr.32
                0x00000000c00148b0                userModeEntryPoint(void*)
                0x00000000c00148d8                changeTSS
                0x00000000c0014908                switchToThread(ThreadControlBlock*)
                0x00000000c00149b8                Process::addArgs(char**)
                0x00000000c0014a24                Process::Process(char const*, Process*, char**)
                0x00000000c0014a24                Process::Process(char const*, Process*, char**)
                0x00000000c0014c30                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014c30                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014e04                taskStartupFunction
                0x00000000c0014e10                Semaphore::Semaphore(int)
                0x00000000c0014e10                Semaphore::Semaphore(int)
                0x00000000c0014e40                Mutex::Mutex()
                0x00000000c0014e40                Mutex::Mutex()
                0x00000000c0014e54                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014f60                Process::createUserThread()
                0x00000000c0014f80                setupMultitasking(void (*)())
                0x00000000c00150a4                schedule()
                0x00000000c0015138                Semaphore::tryAcquire()
                0x00000000c001520c                Semaphore::assertLocked(char const*)
                0x00000000c0015290                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00152b8                blockTask(TaskState)
                0x00000000c00152f0                waitTask(int, int*, int)
                0x00000000c0015334                milliTenthSleepUntil(unsigned int)
                0x00000000c00153d4                milliTenthSleep(unsigned int)
                0x00000000c00153e8                sleep(unsigned int)
                0x00000000c0015404                Semaphore::acquire()
                0x00000000c00154cc                taskReturned
                0x00000000c0015510                Thr::processFromPID(int)
                0x00000000c00155bc                unblockTask(ThreadControlBlock*)
                0x00000000c0015668                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001593c                cleanerTaskFunction(void*)
                0x00000000c0015a44                terminateTask(int)
                0x00000000c0015b30                Thr::terminateFromIRQ(int)
                0x00000000c0015b40                Semaphore::release()
 .text          0x00000000c0015c89      0xbe8 vm86/vm8086.32
                0x00000000c0015c89                Vm::inbv(unsigned short)
                0x00000000c0015c9c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015cd2                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015ce2                Vm::getSegment(unsigned int)
                0x00000000c0015cea                Vm::getOffset(unsigned int)
                0x00000000c0015cef                Vm::mainloop2()
                0x00000000c0015d29                Vm::mainVm8086Loop(void*)
                0x00000000c0015d39                Vm::mainloop3(unsigned long)
                0x00000000c0015d5f                Vm::initialise8086()
                0x00000000c0015da2                Vm::finish8086()
                0x00000000c0015e03                Vm::getOutput8086(unsigned char*)
                0x00000000c0015e28                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015ee1                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016070                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00160f9                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001610a                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001611c                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001612d                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016142                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016158                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001616d                Vm::faultHandler(regs*)
 .text          0x00000000c0016871      0xabf arch/i386/hal.32
                0x00000000c0016871                noCopro(unsigned long)
                0x00000000c0016872                nmiHandler(regs*, void*)
                0x00000000c001688b                doubleFault(regs*, void*)
                0x00000000c00168a4                displayDebugInfo(regs*)
                0x00000000c0016c00                HalSystemIdle()
                0x00000000c0016c7c                displayProgramFault(char const*)
                0x00000000c0016cc8                gpFault(regs*, void*)
                0x00000000c0016d2f                pgFault(regs*, void*)
                0x00000000c0016db8                otherISRHandler(regs*, void*)
                0x00000000c0016dec                opcodeFault(regs*, void*)
                0x00000000c0016e6f                i386SaveCoprocessor(void*)
                0x00000000c0016e83                i386LoadCoprocessor(void*)
                0x00000000c0016e97                x87EmulHandler(regs*, void*)
                0x00000000c0016f34                HalInitialiseCoprocessor()
                0x00000000c0016fe2                HalPanic(char const*)
                0x00000000c00170ee                HalQueryPerformanceCounter()
                0x00000000c0017109                HalInitialise()
                0x00000000c00172bf                HalMakeBeep(int)
                0x00000000c00172f9                HalGetRand()
                0x00000000c00172fc                HalEndOfInterrupt(int)
                0x00000000c001732d                HalRestart()
                0x00000000c001732e                HalShutdown()
                0x00000000c001732f                HalSleep()
 .text          0x00000000c0017330      0x2dc arch/i386/pic.32
                0x00000000c0017330                picIoWait()
                0x00000000c0017338                picDisable()
                0x00000000c001736c                picGetIRQReg(int)
                0x00000000c00173e8                picOpen()
                0x00000000c001756c                picEOI(int)
 .text          0x00000000c001760c      0x674 arch/i386/rtc.32
                0x00000000c001760c                RTC::open(int, int, void*)
                0x00000000c0017610                RTC::close(int, int, void*)
                0x00000000c0017614                RTC::timeInSecondsUTC()
                0x00000000c0017626                RTC::timeInDatetimeUTC()
                0x00000000c001764c                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001768a                RTC::~RTC()
                0x00000000c001768a                RTC::~RTC()
                0x00000000c00176ae                RTC::~RTC()
                0x00000000c00176d8                RTC::get_update_in_progress_flag()
                0x00000000c00176f2                RTC::completeRTCRefresh()
                0x00000000c00179d2                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0017b80                rtcIRQHandler(regs*, void*)
                0x00000000c0017bc6                RTC::RTC()
                0x00000000c0017bc6                RTC::RTC()
 .text          0x00000000c0017c80      0x1f4 arch/i386/vga.32
                0x00000000c0017c80                HalConsoleScroll(int, int)
                0x00000000c0017d88                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017dec                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0017e74     0x1463 fs/fat/vfslink.32
                0x00000000c0017e74                FAT::getName()
                0x00000000c0017e7c                FAT::tell(void*, unsigned long long*)
                0x00000000c0017eb8                FAT::stat(void*, unsigned long long*)
                0x00000000c0017ef4                FAT::~FAT()
                0x00000000c0017ef4                FAT::~FAT()
                0x00000000c0017f18                FAT::~FAT()
                0x00000000c0017f40                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017fe4                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00180a8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001828c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00184a8                FAT::allocateSwapfile(char const*, int)
                0x00000000c0018668                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00187d8                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0018838                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0018898                FAT::close(void*)
                0x00000000c00188ec                FAT::closeDir(void*)
                0x00000000c0018940                FAT::seek(void*, unsigned long long)
                0x00000000c0018998                fatWrapperReadDisk
                0x00000000c00189d8                fatWrapperWriteDisk
                0x00000000c0018a18                fatWrapperIoctl
                0x00000000c0018b34                FAT::FAT()
                0x00000000c0018b34                FAT::FAT()
                0x00000000c0018b8c                FAT::fixFilepath(char*)
                0x00000000c0018bcc                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0018d40                FAT::openDir(char const*, void**)
                0x00000000c0018df0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018ee8                FAT::unlink(char const*)
                0x00000000c0018f68                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001911c                FAT::rename(char const*, char const*)
                0x00000000c00191e8                FAT::mkdir(char const*)
                0x00000000c0019268                FAT::exists(char const*)
 *fill*         0x00000000c00192d7        0x1 
 .text          0x00000000c00192d8       0x94 fs/iso9660/helper.32
                0x00000000c00192d8                isoReadDiscSectorHelper
                0x00000000c0019334                iso_kprintf
                0x00000000c0019350                iso_kprintfd
 .text          0x00000000c001936c      0x716 fs/iso9660/vfslink.32
                0x00000000c001936c                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019372                ISO9660::getName()
                0x00000000c0019378                ISO9660::closeDir(void*)
                0x00000000c0019382                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019388                ISO9660::unlink(char const*)
                0x00000000c001938e                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019394                ISO9660::rename(char const*, char const*)
                0x00000000c001939a                ISO9660::mkdir(char const*)
                0x00000000c00193a0                ISO9660::~ISO9660()
                0x00000000c00193a0                ISO9660::~ISO9660()
                0x00000000c00193c4                ISO9660::~ISO9660()
                0x00000000c00193ec                ISO9660::exists(char const*)
                0x00000000c0019400                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00194e6                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001952e                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019570                ISO9660::tell(void*, unsigned long long*)
                0x00000000c00195ae                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019600                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019742                ISO9660::close(void*)
                0x00000000c0019772                ISO9660::openDir(char const*, void**)
                0x00000000c001984c                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019969                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c00199e8                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019a5a                ISO9660::ISO9660()
                0x00000000c0019a5a                ISO9660::ISO9660()
 .text          0x00000000c0019a82      0x26c hal/sound/sndcard.32
                0x00000000c0019a82                SoundCard::beginPlayback()
                0x00000000c0019a90                SoundCard::stopPlayback()
                0x00000000c0019a9e                SoundCard::SoundCard(char const*)
                0x00000000c0019a9e                SoundCard::SoundCard(char const*)
                0x00000000c0019b3c                SoundCard::~SoundCard()
                0x00000000c0019b3c                SoundCard::~SoundCard()
                0x00000000c0019b60                SoundCard::~SoundCard()
                0x00000000c0019b8a                SoundCard::configureRates(int, int, int)
                0x00000000c0019bba                SoundCard::getSamples16(int, short*)
                0x00000000c0019c16                SoundCard::getSamples32(int, int*)
                0x00000000c0019c9c                SoundCard::addChannel(SoundPort*)
                0x00000000c0019cda                SoundCard::removeChannel(int)
 *fill*         0x00000000c0019cee        0x2 
 .text          0x00000000c0019cf0      0x38a hal/sound/sndport.32
                0x00000000c0019cf0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019cf0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019d7c                SoundPort::~SoundPort()
                0x00000000c0019d7c                SoundPort::~SoundPort()
                0x00000000c0019db0                SoundPort::unpause()
                0x00000000c0019dbc                SoundPort::pause()
                0x00000000c0019dc8                SoundPort::getBufferUsed()
                0x00000000c0019dd0                SoundPort::getBufferSize()
                0x00000000c0019dd8                SoundPort::buffer16(short*, int)
                0x00000000c0019e64                SoundPort::buffer32(int*, int)
                0x00000000c0019ef0                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019fbc                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001a07a        0x0 hw/bus/isa.32
 .text          0x00000000c001a07a      0xbb7 hw/bus/pci.32
                0x00000000c001a07a                PCI::open(int, int, void*)
                0x00000000c001a098                PCI::close(int, int, void*)
                0x00000000c001a09c                PCI::PCI()
                0x00000000c001a09c                PCI::PCI()
                0x00000000c001a134                PCI::readBAR8(unsigned int, int)
                0x00000000c001a150                PCI::readBAR16(unsigned int, int)
                0x00000000c001a16e                PCI::readBAR32(unsigned int, int)
                0x00000000c001a18a                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001a1aa                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001a1cc                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001a1ec                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a262                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a30c                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a330                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a358                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a3a2                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a3ca                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a3ee                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a412                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a43a                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a49e                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001a586                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a84c                PCI::checkBus(unsigned char)
                0x00000000c001a870                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a9ea                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001ab66                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001abd8                PCI::detect()
 *fill*         0x00000000c001ac31        0x1 
 .text          0x00000000c001ac32      0xb9a hw/diskctrl/ide.32
                0x00000000c001ac32                IDE::close(int, int, void*)
                0x00000000c001ac36                IDE::IDE()
                0x00000000c001ac36                IDE::IDE()
                0x00000000c001ac6a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ac7c                selectDrive(unsigned char, unsigned char)
                0x00000000c001ac7e                IDE::getBase(unsigned char)
                0x00000000c001ac90                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ad50                IDE::read(unsigned char, unsigned char)
                0x00000000c001adfe                IDE::waitInterrupt(unsigned char)
                0x00000000c001ae60                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ae7c                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ae98                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001aee2                IDE::open(int, int, void*)
                0x00000000c001b320                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b3f0                IDE::detect()
                0x00000000c001b6be                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b778                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b7cc      0x32a hw/diskctrl/satabus.32
                0x00000000c001b7cc                SATABus::close(int, int, void*)
                0x00000000c001b7d0                SATABus::detect()
                0x00000000c001b7d2                SATABus::SATABus()
                0x00000000c001b7d2                SATABus::SATABus()
                0x00000000c001b858                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b88a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b8d2                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b8f2                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b91c                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001ba2c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001bad6                SATABus::open(int, int, void*)
 .text          0x00000000c001baf6      0x93f hw/diskphys/ata.32
                0x00000000c001baf6                ATA::close(int, int, void*)
                0x00000000c001bb1a                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001bb1c                ATA::ATA()
                0x00000000c001bb1c                ATA::ATA()
                0x00000000c001bb4a                ATA::flush(bool)
                0x00000000c001bb98                ATA::readyForCommand()
                0x00000000c001bbe4                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001bf7a                ATA::detectCHS()
                0x00000000c001bfa4                ATA::open(int, int, void*)
                0x00000000c001c070                combineCharAndColour(char, unsigned char)
                0x00000000c001c081                combineColours(unsigned char, unsigned char)
                0x00000000c001c08e                ATA::read(unsigned long long, int, void*)
                0x00000000c001c264                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001c435        0x1 
 .text          0x00000000c001c436      0x618 hw/diskphys/atapi.32
                0x00000000c001c436                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c43c                ATAPI::close(int, int, void*)
                0x00000000c001c460                ATAPI::ATAPI()
                0x00000000c001c460                ATAPI::ATAPI()
                0x00000000c001c48e                ATAPI::readyForCommand()
                0x00000000c001c4e0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c7a8                ATAPI::diskRemoved()
                0x00000000c001c7e2                ATAPI::eject()
                0x00000000c001c82a                ATAPI::diskInserted()
                0x00000000c001c836                ATAPI::detectMedia()
                0x00000000c001c8f4                ATAPI::open(int, int, void*)
                0x00000000c001c9d4                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ca4e      0x807 hw/diskphys/sata.32
                0x00000000c001ca4e                SATA::close(int, int, void*)
                0x00000000c001ca72                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ca74                SATA::open(int, int, void*)
                0x00000000c001cb1e                SATA::SATA()
                0x00000000c001cb1e                SATA::SATA()
                0x00000000c001cb4c                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cda0                SATA::read(unsigned long long, int, void*)
                0x00000000c001cff0                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d255        0x1 
 .text          0x00000000c001d256      0x5d0 hw/diskphys/satapi.32
                0x00000000c001d256                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001d25c                SATAPI::close(int, int, void*)
                0x00000000c001d280                SATAPI::SATAPI()
                0x00000000c001d280                SATAPI::SATAPI()
                0x00000000c001d2ae                SATAPI::diskRemoved()
                0x00000000c001d2b0                SATAPI::diskInserted()
                0x00000000c001d2cc                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001d5aa                SATAPI::eject()
                0x00000000c001d5e6                SATAPI::detectMedia()
                0x00000000c001d63c                SATAPI::open(int, int, void*)
                0x00000000c001d73c                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d826      0x45b hw/intctrl/apic.32
                0x00000000c001d826                IOAPIC::close(int, int, void*)
                0x00000000c001d82c                apicGetBase()
                0x00000000c001d872                IOAPIC::IOAPIC()
                0x00000000c001d872                IOAPIC::IOAPIC()
                0x00000000c001d89a                apicOpen()
                0x00000000c001da16                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001da48                IOAPIC::read(int)
                0x00000000c001da70                IOAPIC::open(int, int, void*)
                0x00000000c001db56                IOAPIC::write(int, int)
                0x00000000c001db82                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001dc81        0x3 
 .text          0x00000000c001dc84       0xf0 hw/timer/apictimer.32
                0x00000000c001dc84                APICTimer::close(int, int, void*)
                0x00000000c001dc8c                apicTimerHandler(regs*, void*)
                0x00000000c001dcb4                APICTimer::open(int, int, void*)
                0x00000000c001dd24                APICTimer::write(int)
                0x00000000c001dd4c                APICTimer::APICTimer()
                0x00000000c001dd4c                APICTimer::APICTimer()
 .text          0x00000000c001dd74      0x1ad hw/timer/pit.32
                0x00000000c001dd74                PIT::write(int)
                0x00000000c001ddf8                pitHandler(regs*, void*)
                0x00000000c001de20                PIT::open(int, int, void*)
                0x00000000c001de70                PIT::close(int, int, void*)
                0x00000000c001dea0                PIT::PIT()
                0x00000000c001dea0                PIT::PIT()
 *fill*         0x00000000c001df21        0xf 
 .text          0x00000000c001df30       0x83 arch/i386/avx.32
                0x00000000c001df30                avxDetect
                0x00000000c001df5a                avxSave
                0x00000000c001df6b                avxLoad
                0x00000000c001df7c                avxInit
                0x00000000c001df9e                avxClose
                0x00000000c001df9f                wouldSheSayYes
 *fill*         0x00000000c001dfb3        0xd 
 .text          0x00000000c001dfc0      0x2ec arch/i386/interrupt.32
                0x00000000c001dfc0                isr0
                0x00000000c001dfd0                isr1
                0x00000000c001dfda                isr2
                0x00000000c001dfe4                isr3
                0x00000000c001dfee                isr4
                0x00000000c001dff8                isr5
                0x00000000c001e002                isr6
                0x00000000c001e00c                isr7
                0x00000000c001e016                isr8
                0x00000000c001e01e                isr9
                0x00000000c001e028                isr10
                0x00000000c001e030                isr11
                0x00000000c001e038                isr12
                0x00000000c001e040                isr13
                0x00000000c001e05a                isr14
                0x00000000c001e062                isr15
                0x00000000c001e06c                isr16
                0x00000000c001e076                isr17
                0x00000000c001e080                isr18
                0x00000000c001e08a                irq3
                0x00000000c001e094                irq4
                0x00000000c001e09e                irq5
                0x00000000c001e0a8                irq6
                0x00000000c001e0b2                irq7
                0x00000000c001e0bc                irq8
                0x00000000c001e0c6                irq9
                0x00000000c001e0d0                irq10
                0x00000000c001e0da                irq11
                0x00000000c001e0e4                irq12
                0x00000000c001e0ee                irq13
                0x00000000c001e0f8                irq14
                0x00000000c001e102                irq15
                0x00000000c001e10c                irq1
                0x00000000c001e113                irq2
                0x00000000c001e11a                isr96
                0x00000000c001e121                irq0
                0x00000000c001e126                int_common_stub
                0x00000000c001e158                syscall_common_stub
                0x00000000c001e25c                irq16
                0x00000000c001e266                irq17
                0x00000000c001e270                irq18
                0x00000000c001e27a                irq19
                0x00000000c001e284                irq20
                0x00000000c001e28e                irq21
                0x00000000c001e298                irq22
                0x00000000c001e2a2                irq23
 *fill*         0x00000000c001e2ac        0x4 
 .text          0x00000000c001e2b0       0x10 arch/i386/rdrand.32
                0x00000000c001e2b0                i386GetRDRAND
 .text          0x00000000c001e2c0       0x39 arch/i386/sse.32
                0x00000000c001e2c0                absolutelyNoChanceInHell
                0x00000000c001e2c0                sseDetect
                0x00000000c001e2d8                sseSave
                0x00000000c001e2e0                sseLoad
                0x00000000c001e2e8                sseInit
                0x00000000c001e2f8                sseClose
 *fill*         0x00000000c001e2f9        0x7 
 .text          0x00000000c001e300       0x49 arch/i386/x87.32
                0x00000000c001e306                x87Detect
                0x00000000c001e321                x87Save
                0x00000000c001e328                x87Load
                0x00000000c001e32f                x87Init
                0x00000000c001e348                x87Close
 *fill*         0x00000000c001e349        0x3 
 .text          0x00000000c001e34c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e371        0x0 crtn.32
 *fill*         0x00000000c001e371        0x3 
 .text          0x00000000c001e374      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e374                __divdi3
 *fill*         0x00000000c001e4bf        0x1 
 .text          0x00000000c001e4c0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e4c0                __moddi3
 *fill*         0x00000000c001e63e        0x2 
 .text          0x00000000c001e640       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001e640                __udivdi3
 *fill*         0x00000000c001e73f        0x1 
 .text          0x00000000c001e740      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001e740                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e860        0x0
 .iplt          0x00000000c001e860        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e85a        0xf
 .init          0x00000000c001e85a        0x3 crti.32
                0x00000000c001e85a                _init
 .init          0x00000000c001e85d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e862        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e867        0x2 crtn.32

.fini           0x00000000c001e869        0xa
 .fini          0x00000000c001e869        0x3 crti.32
                0x00000000c001e869                _fini
 .fini          0x00000000c001e86c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e871        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e874       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e874       0x23 core/computer.32
                0x00000000c001e874                Computer::~Computer()
                0x00000000c001e874                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e898       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e898       0x2a core/computer.32
                0x00000000c001e898                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e8c2       0x21
 .text._Z10idleCommonv
                0x00000000c001e8c2       0x21 core/idle.32
                0x00000000c001e8c2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e8e4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e8e4        0x2 core/unixfile.32
                0x00000000c001e8e4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e8e4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e8e6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e8e6       0x42 core/unixfile.32
                0x00000000c001e8e6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e8e6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e928       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e928       0xd3 core/unixfile.32
                0x00000000c001e928                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e9fc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e9fc        0x7 core/unixfile.32
                0x00000000c001e9fc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ea04       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ea04       0xa1 core/unixfile.32
                0x00000000c001ea04                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001eaa6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001eaa6        0x8 core/unixfile.32
                0x00000000c001eaa6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001eaae       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001eaae       0x1a hal/device.32
                0x00000000c001eaae                DriverlessDevice::~DriverlessDevice()
                0x00000000c001eaae                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eac8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eac8       0x2a hal/device.32
                0x00000000c001eac8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eaf2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eaf2       0xdc hal/device.32
                0x00000000c001eaf2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ebce       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ebce       0x42 hal/device.32
                0x00000000c001ebce                LinkedList<Device>::LinkedList()
                0x00000000c001ebce                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ec10       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ec10       0x1c hal/timer.32
                0x00000000c001ec10                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec2c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec2c        0x7 hal/timer.32
                0x00000000c001ec2c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ec34       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ec34       0xbc hal/timer.32
                0x00000000c001ec34                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ecf0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ecf0       0xda hal/timer.32
                0x00000000c001ecf0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001edcc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001edcc       0x23 hw/acpi.32
                0x00000000c001edcc                ACPI::~ACPI()
                0x00000000c001edcc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001edf0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001edf0       0x2a hw/acpi.32
                0x00000000c001edf0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ee1c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ee1c        0x2 hw/acpi.32
                0x00000000c001ee1c                LinkedList<Device>::~LinkedList()
                0x00000000c001ee1c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ee20       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ee20       0x1c hw/acpi.32
                0x00000000c001ee20                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ee3c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ee3c        0x7 hw/acpi.32
                0x00000000c001ee3c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ee44       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ee44       0xb8 hw/acpi.32
                0x00000000c001ee44                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001eefc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001eefc       0x23 hw/cpu.32
                0x00000000c001eefc                CPU::~CPU()
                0x00000000c001eefc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ef20       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ef20       0x2a hw/cpu.32
                0x00000000c001ef20                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ef4c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ef4c        0x8 sys/kill.32
                0x00000000c001ef4c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ef54        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ef54        0x2 thr/prcssthr.32
                0x00000000c001ef54                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ef54                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ef58       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ef58       0x49 thr/prcssthr.32
                0x00000000c001ef58                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ef58                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001efa4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001efa4       0x42 thr/prcssthr.32
                0x00000000c001efa4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001efa4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001efe6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001efe6       0x23 hw/bus/pci.32
                0x00000000c001efe6                PCI::~PCI()
                0x00000000c001efe6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001f00a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001f00a       0x2a hw/bus/pci.32
                0x00000000c001f00a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f034       0x23
 .text._ZN3IDED2Ev
                0x00000000c001f034       0x23 hw/diskctrl/ide.32
                0x00000000c001f034                IDE::~IDE()
                0x00000000c001f034                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f058       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f058       0x2a hw/diskctrl/ide.32
                0x00000000c001f058                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001f082       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001f082       0x23 hw/diskctrl/satabus.32
                0x00000000c001f082                SATABus::~SATABus()
                0x00000000c001f082                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001f0a6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001f0a6       0x2a hw/diskctrl/satabus.32
                0x00000000c001f0a6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001f0d0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f0d0       0x23 hw/diskphys/ata.32
                0x00000000c001f0d0                ATA::~ATA()
                0x00000000c001f0d0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f0f4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f0f4       0x2a hw/diskphys/ata.32
                0x00000000c001f0f4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f11e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f11e       0x23 hw/diskphys/atapi.32
                0x00000000c001f11e                ATAPI::~ATAPI()
                0x00000000c001f11e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f142       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f142       0x2a hw/diskphys/atapi.32
                0x00000000c001f142                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001f16c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001f16c       0x23 hw/diskphys/sata.32
                0x00000000c001f16c                SATA::~SATA()
                0x00000000c001f16c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001f190       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001f190       0x2a hw/diskphys/sata.32
                0x00000000c001f190                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001f1ba       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001f1ba       0x23 hw/diskphys/satapi.32
                0x00000000c001f1ba                SATAPI::~SATAPI()
                0x00000000c001f1ba                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001f1de       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001f1de       0x2a hw/diskphys/satapi.32
                0x00000000c001f1de                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001f208       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f208       0x23 hw/intctrl/apic.32
                0x00000000c001f208                IOAPIC::~IOAPIC()
                0x00000000c001f208                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f22c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f22c       0x2a hw/intctrl/apic.32
                0x00000000c001f22c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f258       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f258       0x23 hw/timer/apictimer.32
                0x00000000c001f258                APICTimer::~APICTimer()
                0x00000000c001f258                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f27c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f27c       0x2a hw/timer/apictimer.32
                0x00000000c001f27c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f2a8       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f2a8       0x23 hw/timer/pit.32
                0x00000000c001f2a8                PIT::~PIT()
                0x00000000c001f2a8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f2cc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f2cc       0x2a hw/timer/pit.32
                0x00000000c001f2cc                PIT::~PIT()

.rodata         0x00000000c001f2f6     0x2bee
                0x00000000c001f2f6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f2f6        0x2 
 .ctors         0x00000000c001f2f8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f2fc        0x4 core/unixfile.32
 .ctors         0x00000000c001f300        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f304        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f308                end_ctors = .
                0x00000000c001f308                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f308        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f30c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f30c                __DTOR_END__
                0x00000000c001f310                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f310       0x10 
 .rodata        0x00000000c001f320      0x101 acpica/utclib.32
                0x00000000c001f320                AcpiGbl_Ctypes
 *fill*         0x00000000c001f421        0x3 
 .rodata        0x00000000c001f424       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f43c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f486       0x1a 
 .rodata        0x00000000c001f4a0       0xed fs/fat/ff.32
 *fill*         0x00000000c001f58d       0x13 
 .rodata        0x00000000c001f5a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f9a0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001fa0f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001fb24       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001fb8c       0x2c core/computer.32
                0x00000000c001fb8c                vtable for Computer
 .rodata.str1.4
                0x00000000c001fbb8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001fbe8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001fbf4       0x17 core/main.32
 *fill*         0x00000000c001fc0b        0x1 
 .rodata.str1.4
                0x00000000c001fc0c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fcb1       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fd09       0x39 core/pipe.32
 *fill*         0x00000000c001fd42        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001fd44       0x1c core/pipe.32
                0x00000000c001fd44                vtable for Pipe
 .rodata.str1.1
                0x00000000c001fd60       0x2b core/terminal.32
 *fill*         0x00000000c001fd8b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001fd8c       0x1c core/terminal.32
                0x00000000c001fd8c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001fda8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001fdca       0x15 core/unixfile.32
 *fill*         0x00000000c001fddf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001fde0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001fe2b        0x8 core/unixfile.32
 *fill*         0x00000000c001fe33        0x1 
 .rodata.str1.4
                0x00000000c001fe34       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001fe54       0x1c core/unixfile.32
                0x00000000c001fe54                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001fe70       0x1c core/unixfile.32
                0x00000000c001fe70                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001fe8c      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001fff3      0x119 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002010c       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c002013f       0x11 dbg/kconsole.32
 *fill*         0x00000000c002013f        0x1 
 .rodata        0x00000000c0020140      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020290       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c0020290       0x68 fs/vfs.32
                0x00000000c0020290                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00202f8       0x1c fs/vfs.32
                0x00000000c00202f8                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020314       0x1c fs/vfs.32
                0x00000000c0020314                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0020330       0x2c hal/bus.32
                0x00000000c0020330                vtable for Bus
 .rodata.str1.1
                0x00000000c002035c       0x1e hal/clock.32
 *fill*         0x00000000c002037a        0x2 
 .rodata._ZTV5Clock
                0x00000000c002037c       0x3c hal/clock.32
                0x00000000c002037c                vtable for Clock
 *fill*         0x00000000c00203b8        0x8 
 .rodata        0x00000000c00203c0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00203f0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020448       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020448       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0020448       0x2c hal/device.32
                0x00000000c0020448                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020474       0x2c hal/device.32
                0x00000000c0020474                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00204a0       0x2c hal/diskctrl.32
                0x00000000c00204a0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00204cc       0x38 hal/diskphys.32
                0x00000000c00204cc                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020504       0x3e hal/intctrl.32
 *fill*         0x00000000c0020542        0x2 
 .rodata.str1.4
                0x00000000c0020544       0x5d hal/intctrl.32
 .rodata        0x00000000c00205a1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c00205f4       0x34 hal/keybrd.32
                0x00000000c00205f4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020628       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002066c       0x2c hal/logidisk.32
                0x00000000c002066c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0020698       0x2c hal/mouse.32
                0x00000000c0020698                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c00206c4       0x34 hal/nic.32
                0x00000000c00206c4                vtable for NIC
 .rodata.str1.1
                0x00000000c00206f8        0xb hal/partition.32
 *fill*         0x00000000c0020703        0x1 
 .rodata._ZTV6Serial
                0x00000000c0020704       0x44 hal/serial.32
                0x00000000c0020704                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020748       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020748        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020748       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020748       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0020748       0x30 hal/timer.32
                0x00000000c0020748                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020778       0x10 hal/vcache.32
                0x00000000c0020778                vtable for VCache
 .rodata.str1.1
                0x00000000c0020788       0x93 hal/video.32
 *fill*         0x00000000c002081b        0x1 
 .rodata._ZTV5Video
                0x00000000c002081c       0x4c hal/video.32
                0x00000000c002081c                vtable for Video
 .rodata.str1.4
                0x00000000c0020868       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0020903      0x174 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0020a77       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0020a77        0x8 hw/acpi.32
 *fill*         0x00000000c0020a77        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020a78       0x2c hw/acpi.32
                0x00000000c0020a78                vtable for ACPI
 .rodata.str1.1
                0x00000000c0020aa4      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020c11        0x3 
 .rodata._ZTV3CPU
                0x00000000c0020c14       0x2c hw/cpu.32
                0x00000000c0020c14                vtable for CPU
 .rodata.str1.1
                0x00000000c0020c40       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0020c7c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020d0d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0020dd6       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020e1e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0020e49       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020ebf       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020f04        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0020f0e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0020f2f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0020fc5       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0021019       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0021045      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0021211       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0021268      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021378       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021378       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021378       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021378        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0021378       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0021418       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021448      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c00215d8       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002164b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0021660       0x3c arch/i386/rtc.32
                0x00000000c0021660                vtable for RTC
 .rodata.str1.1
                0x00000000c002169c       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00216dd        0x3 
 .rodata._ZTV3FAT
                0x00000000c00216e0       0x68 fs/fat/vfslink.32
                0x00000000c00216e0                vtable for FAT
 .rodata.str1.1
                0x00000000c0021748       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0021748      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0021880       0x68 fs/iso9660/vfslink.32
                0x00000000c0021880                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00218e8       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c002192c       0x34 hal/sound/sndcard.32
                0x00000000c002192c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0021960       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002199f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00219d7       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0021a78       0x2c hw/bus/pci.32
                0x00000000c0021a78                vtable for PCI
 .rodata.str1.1
                0x00000000c0021aa4       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0021b2b        0x1 
 .rodata._ZTV3IDE
                0x00000000c0021b2c       0x2c hw/diskctrl/ide.32
                0x00000000c0021b2c                vtable for IDE
 .rodata.str1.4
                0x00000000c0021b58       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0021b7c       0x2c hw/diskctrl/satabus.32
                0x00000000c0021b7c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0021ba8       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0021bba        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021bbc       0x38 hw/diskphys/ata.32
                0x00000000c0021bbc                vtable for ATA
 .rodata.str1.1
                0x00000000c0021bf4        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0021c01        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0021c04       0x38 hw/diskphys/atapi.32
                0x00000000c0021c04                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021c3c       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0021cb8       0x38 hw/diskphys/sata.32
                0x00000000c0021cb8                vtable for SATA
 .rodata.str1.1
                0x00000000c0021cf0       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0021dda        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0021ddc       0x38 hw/diskphys/satapi.32
                0x00000000c0021ddc                vtable for SATAPI
 .rodata        0x00000000c0021e14        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0021e1c       0x2c hw/intctrl/apic.32
                0x00000000c0021e1c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0021e48       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0021e63        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021e64       0x30 hw/timer/apictimer.32
                0x00000000c0021e64                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021e94       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021eb1        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021eb4       0x30 hw/timer/pit.32
                0x00000000c0021eb4                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021ee4      0x4e1
 *(.data)
 .data          0x00000000c0021ee4        0x0 crti.32
 .data          0x00000000c0021ee4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021ee4                __dso_handle
 .data          0x00000000c0021ee8        0x0 acpica/utclib.32
 .data          0x00000000c0021ee8        0x0 core/malloc.32
 .data          0x00000000c0021ee8        0x0 libk/ctype.32
 .data          0x00000000c0021ee8        0x0 libk/string.32
 .data          0x00000000c0021ee8        0x0 fs/fat/diskio.32
 .data          0x00000000c0021ee8        0x0 fs/fat/ff.32
 .data          0x00000000c0021ee8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0021ee8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0021ee8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0021ee8        0x0 core/computer.32
 .data          0x00000000c0021ee8        0x0 core/gdt.32
 .data          0x00000000c0021ee8        0x0 core/idle.32
 .data          0x00000000c0021ee8        0x0 core/idt.32
 .data          0x00000000c0021ee8        0x4 core/kheap.32
 .data          0x00000000c0021eec        0x0 core/main.32
 .data          0x00000000c0021eec        0x4 core/physmgr.32
                0x00000000c0021eec                Phys::bitmap
 .data          0x00000000c0021ef0        0x0 core/pipe.32
 *fill*         0x00000000c0021ef0       0x10 
 .data          0x00000000c0021f00       0x60 core/terminal.32
                0x00000000c0021f00                VgaText::hiddenOut
                0x00000000c0021f20                ansiToVGAMappings
 .data          0x00000000c0021f60        0x0 core/tss.32
 .data          0x00000000c0021f60        0x4 core/unixfile.32
                0x00000000c0021f60                UnixFile::nextFd
 .data          0x00000000c0021f64       0x15 core/virtmgr.32
                0x00000000c0021f64                Virt::pageAllocPtr
                0x00000000c0021f68                Virt::bitmap
                0x00000000c0021f6c                Virt::swapfileSectorsPerPage
                0x00000000c0021f70                Virt::swapfileLength
                0x00000000c0021f74                Virt::swapfileSector
                0x00000000c0021f78                Virt::swapfileDrive
 *fill*         0x00000000c0021f79        0x3 
 .data          0x00000000c0021f7c        0x4 coreobjs/c++.32
                0x00000000c0021f7c                __stack_chk_guard
 .data          0x00000000c0021f80        0x0 dbg/kconsole.32
 .data          0x00000000c0021f80        0x0 fs/vfs.32
 .data          0x00000000c0021f80        0x0 hal/bus.32
 .data          0x00000000c0021f80        0x0 hal/buzzer.32
 .data          0x00000000c0021f80        0x0 hal/clock.32
 .data          0x00000000c0021f80        0x0 hal/device.32
 .data          0x00000000c0021f80        0x0 hal/diskctrl.32
 .data          0x00000000c0021f80        0x0 hal/diskphys.32
 .data          0x00000000c0021f80        0x0 hal/fpu.32
 .data          0x00000000c0021f80        0x0 hal/intctrl.32
 .data          0x00000000c0021f80        0x0 hal/keybrd.32
 .data          0x00000000c0021f80        0x0 hal/logidisk.32
 .data          0x00000000c0021f80        0x0 hal/mouse.32
 .data          0x00000000c0021f80        0x0 hal/nic.32
 .data          0x00000000c0021f80        0x0 hal/partition.32
 .data          0x00000000c0021f80        0x0 hal/serial.32
 .data          0x00000000c0021f80        0x0 hal/timer.32
 .data          0x00000000c0021f80        0x0 hal/vcache.32
 .data          0x00000000c0021f80        0x0 hal/video.32
 .data          0x00000000c0021f80       0x10 hw/acpi.32
                0x00000000c0021f80                legacyIRQRemaps
 .data          0x00000000c0021f90        0x4 hw/cpu.32
                0x00000000c0021f90                lastCode
 *fill*         0x00000000c0021f94        0xc 
 .data          0x00000000c0021fa0      0x142 krnl/bootmsg.32
                0x00000000c0021fa0                KiSplashScreen
 *fill*         0x00000000c00220e2       0x1e 
 .data          0x00000000c0022100       0x4d krnl/env.32
                0x00000000c0022100                defaultSysEnv
 .data          0x00000000c002214d        0x0 krnl/inlines.32
 .data          0x00000000c002214d        0x0 krnl/panic.32
 .data          0x00000000c002214d        0x0 krnl/powctrl.32
 .data          0x00000000c002214d        0x0 krnl/random.32
 .data          0x00000000c002214d        0x0 krnl/resolve.32
 *fill*         0x00000000c002214d       0x13 
 .data          0x00000000c0022160       0x4c krnl/signal.32
                0x00000000c0022160                KiDefaultSignalHandlers
 *fill*         0x00000000c00221ac       0x14 
 .data          0x00000000c00221c0       0xf0 krnl/syscalls.32
                0x00000000c00221c0                systemCallHandlers
 .data          0x00000000c00222b0        0x0 net/ethernet.32
 *fill*         0x00000000c00222b0       0x10 
 .data          0x00000000c00222c0      0x100 reg/cm.32
                0x00000000c00222c0                CmComponents
 .data          0x00000000c00223c0        0x0 reg/registry.32
 .data          0x00000000c00223c0        0x0 sys/eject.32
 .data          0x00000000c00223c0        0x0 sys/exit.32
 .data          0x00000000c00223c0        0x0 sys/getcwd.32
 .data          0x00000000c00223c0        0x0 sys/getpid.32
 .data          0x00000000c00223c0        0x0 sys/getramdata.32
 .data          0x00000000c00223c0        0x0 sys/getvgaptr.32
 .data          0x00000000c00223c0        0x0 sys/kill.32
 .data          0x00000000c00223c0        0x0 sys/loaddll.32
 .data          0x00000000c00223c0        0x0 sys/read.32
 .data          0x00000000c00223c0        0x0 sys/registersignal.32
 .data          0x00000000c00223c0        0x0 sys/registry.32
 .data          0x00000000c00223c0        0x0 sys/sbrk.32
 .data          0x00000000c00223c0        0x0 sys/setcwd.32
 .data          0x00000000c00223c0        0x0 sys/settime.32
 .data          0x00000000c00223c0        0x0 sys/timezone.32
 .data          0x00000000c00223c0        0x0 sys/write.32
 .data          0x00000000c00223c0        0x0 sys/wsbe.32
 .data          0x00000000c00223c0        0x0 sys/yield.32
 .data          0x00000000c00223c0        0x0 thr/elf.32
 .data          0x00000000c00223c0        0x4 thr/prcssthr.32
                0x00000000c00223c0                Thr::nextPID
 .data          0x00000000c00223c4        0x0 vm86/vm8086.32
 .data          0x00000000c00223c4        0x0 arch/i386/hal.32
 .data          0x00000000c00223c4        0x0 arch/i386/pic.32
 .data          0x00000000c00223c4        0x0 arch/i386/rtc.32
 .data          0x00000000c00223c4        0x0 arch/i386/vga.32
 .data          0x00000000c00223c4        0x0 fs/fat/vfslink.32
 .data          0x00000000c00223c4        0x0 fs/iso9660/helper.32
 .data          0x00000000c00223c4        0x1 fs/iso9660/vfslink.32
                0x00000000c00223c4                recentDriveletter
 .data          0x00000000c00223c5        0x0 hal/sound/sndcard.32
 .data          0x00000000c00223c5        0x0 hal/sound/sndport.32
 .data          0x00000000c00223c5        0x0 hw/bus/isa.32
 .data          0x00000000c00223c5        0x0 hw/bus/pci.32
 .data          0x00000000c00223c5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00223c5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00223c5        0x0 hw/diskphys/ata.32
 .data          0x00000000c00223c5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00223c5        0x0 hw/diskphys/sata.32
 .data          0x00000000c00223c5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00223c5        0x0 hw/intctrl/apic.32
 .data          0x00000000c00223c5        0x0 hw/timer/apictimer.32
 .data          0x00000000c00223c5        0x0 hw/timer/pit.32
 .data          0x00000000c00223c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00223c5        0x0 crtn.32
 .data          0x00000000c00223c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00223c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00223c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00223c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00223c8        0x0
 .got           0x00000000c00223c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00223c8        0x0
 .got.plt       0x00000000c00223c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00223c8        0x0
 .igot.plt      0x00000000c00223c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00223c8        0x0
 .tm_clone_table
                0x00000000c00223c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00223c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00223c5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00223c5        0x3 
 .eh_frame      0x00000000c00223c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00223c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00223c8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022420       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022460       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00224cc       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0023000       0x7d
 *(userkernel)
 userkernel     0x00000000c0023000       0x52 krnl/signal.32
                0x00000000c0023000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002302c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0023052       0x2b krnl/syscalls.32
                0x00000000c0023052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0024000        0x1
 *(align_previous)
 align_previous
                0x00000000c0024000        0x1 krnl/signal.32
                0x00000000c0024000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0024004        0x0
 .rel.got       0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0024001     0x4ba7
                0x00000000c0024001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0024001       0x1f 
 COMMON         0x00000000c0024020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0024020                dcache
                0x00000000c0024060                cdDriveLetter
                0x00000000c0024080                icache
 *(.bss)
 .bss           0x00000000c00240c0        0x0 crti.32
 .bss           0x00000000c00240c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00240e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00240e4       0x1c 
 .bss           0x00000000c0024100      0x378 core/malloc.32
 .bss           0x00000000c0024478        0x0 libk/ctype.32
 .bss           0x00000000c0024478        0x0 libk/string.32
 .bss           0x00000000c0024478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024478        0x8 
 .bss           0x00000000c0024480       0x88 fs/fat/ff.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0024508       0x18 
 .bss           0x00000000c0024520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0024eb8        0x6 core/computer.32
                0x00000000c0024eb8                Krnl::computer
                0x00000000c0024ebc                KeIsPreemptionOn
                0x00000000c0024ebd                KeIsSchedulingOn
 *fill*         0x00000000c0024ebe        0x2 
 .bss           0x00000000c0024ec0        0x6 core/gdt.32
                0x00000000c0024ec0                gdtDescr
 .bss           0x00000000c0024ec6        0x0 core/idle.32
 *fill*         0x00000000c0024ec6        0x2 
 .bss           0x00000000c0024ec8        0x6 core/idt.32
                0x00000000c0024ec8                idtDescr
 .bss           0x00000000c0024ece        0x0 core/kheap.32
 *fill*         0x00000000c0024ece        0x2 
 .bss           0x00000000c0024ed0        0x4 core/main.32
                0x00000000c0024ed0                sysBootSettings
 .bss           0x00000000c0024ed4       0x29 core/physmgr.32
                0x00000000c0024ed4                Phys::forbidEvictions
                0x00000000c0024ed8                Phys::currentPagePointer
                0x00000000c0024edc                Phys::highestMem
                0x00000000c0024ee0                Phys::oldPercent
                0x00000000c0024ee4                Phys::usedPages
                0x00000000c0024ee8                Phys::usablePages
                0x00000000c0024eec                Phys::dmaUsage
 .bss           0x00000000c0024efd        0x0 core/pipe.32
 *fill*         0x00000000c0024efd        0x3 
 .bss           0x00000000c0024f00        0x9 core/terminal.32
                0x00000000c0024f00                terminalCycle
                0x00000000c0024f04                activeTerminal
                0x00000000c0024f08                VgaText::graphicMode
 *fill*         0x00000000c0024f09        0x1 
 .bss           0x00000000c0024f0a        0x2 core/tss.32
                0x00000000c0024f0a                doubleFaultSelector
 *fill*         0x00000000c0024f0c       0x14 
 .bss           0x00000000c0024f20       0x84 core/unixfile.32
                0x00000000c0024f20                sfileLpt
                0x00000000c0024f60                sfileCom
                0x00000000c0024f84                sfileNul
                0x00000000c0024f88                sfilePnt
                0x00000000c0024f8c                sfileAux
                0x00000000c0024f90                sfileCon
                0x00000000c0024f94                initialFilesAdded
                0x00000000c0024f98                unixFileLinkedList
 .bss           0x00000000c0024fa4       0x10 core/virtmgr.32
                0x00000000c0024fa4                twswaps
                0x00000000c0024fa8                swapBalance
                0x00000000c0024fac                Virt::swapfileBitmap
                0x00000000c0024fb0                firstVAS
 .bss           0x00000000c0024fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0024fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0024fb4        0x4 fs/vfs.32
                0x00000000c0024fb4                installedFilesystems
 .bss           0x00000000c0024fb8        0x0 hal/bus.32
 .bss           0x00000000c0024fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0024fb8        0x8 hal/clock.32
                0x00000000c0024fb8                User::dstOn
                0x00000000c0024fb9                User::timezoneHalfHourOffset
                0x00000000c0024fbc                User::timezoneHourOffset
 .bss           0x00000000c0024fc0        0x0 hal/device.32
 .bss           0x00000000c0024fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0024fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0024fc0        0x0 hal/fpu.32
 .bss           0x00000000c0024fc0     0x2000 hal/intctrl.32
                0x00000000c0024fc0                INT_contexts
                0x00000000c0025fc0                INT_handlers
 .bss           0x00000000c0026fc0      0x429 hal/keybrd.32
                0x00000000c0026fc0                keyboardWaitingTaskList
                0x00000000c0026fc4                keyboardSetupYet
                0x00000000c0026fc8                guiKeyboardHandler
                0x00000000c0026fe0                keystates
 *fill*         0x00000000c00273e9       0x17 
 .bss           0x00000000c0027400       0x88 hal/logidisk.32
                0x00000000c0027400                diskAssignments
                0x00000000c0027420                disks
 .bss           0x00000000c0027488        0x4 hal/mouse.32
                0x00000000c0027488                guiMouseHandler
 .bss           0x00000000c002748c        0x0 hal/nic.32
 .bss           0x00000000c002748c        0x0 hal/partition.32
 .bss           0x00000000c002748c        0x0 hal/serial.32
 .bss           0x00000000c002748c        0x4 hal/timer.32
                0x00000000c002748c                milliTenthsSinceBoot
 .bss           0x00000000c0027490        0x0 hal/vcache.32
 .bss           0x00000000c0027490        0x4 hal/video.32
                0x00000000c0027490                screen
 *fill*         0x00000000c0027494        0xc 
 .bss           0x00000000c00274a0      0x480 hw/acpi.32
                0x00000000c00274a0                systemSleepFunction
                0x00000000c00274a4                systemResetFunction
                0x00000000c00274a8                systemShutdownFunction
                0x00000000c00274ac                nextACPITable
                0x00000000c00274c0                acpiTables
                0x00000000c00276c0                usingXSDT
                0x00000000c00276c4                MADTpointer
                0x00000000c00276c8                RSDTpointer
                0x00000000c00276cc                RSDPpointer
                0x00000000c00276d0                nextAPICNMI
                0x00000000c00276e0                apicNMIInfo
                0x00000000c0027760                legacyIRQFlags
                0x00000000c0027780                ioapicDiscoveryNumber
                0x00000000c00277a0                ioapicFoundInMADT
                0x00000000c00277c0                ioapicAddresses
                0x00000000c0027840                ioapicGSIBase
                0x00000000c00278c0                processorDiscoveryNumber
                0x00000000c00278e0                matchingAPICID
                0x00000000c0027900                processorID
 .bss           0x00000000c0027920       0x10 hw/cpu.32
                0x00000000c0027920                lastD
                0x00000000c0027924                lastC
                0x00000000c0027928                lastB
                0x00000000c002792c                lastA
 .bss           0x00000000c0027930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0027930        0x8 krnl/env.32
                0x00000000c0027930                Krnl::userEnv
                0x00000000c0027934                Krnl::systemEnv
 .bss           0x00000000c0027938        0x0 krnl/inlines.32
 .bss           0x00000000c0027938        0x1 krnl/panic.32
                0x00000000c0027938                KeIsKernelInPanic
 *fill*         0x00000000c0027939        0x7 
 .bss           0x00000000c0027940       0x48 krnl/powctrl.32
                0x00000000c0027940                Krnl::powCtrlOnBattery
                0x00000000c0027960                Krnl::currentPowerSettings
                0x00000000c0027984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0027988        0x8 krnl/random.32
                0x00000000c0027988                kiRandSeed
 .bss           0x00000000c0027990        0x0 krnl/resolve.32
 .bss           0x00000000c0027990        0x0 krnl/signal.32
 .bss           0x00000000c0027990        0x0 krnl/syscalls.32
 .bss           0x00000000c0027990        0x0 net/ethernet.32
 .bss           0x00000000c0027990        0x4 reg/cm.32
 .bss           0x00000000c0027994        0x0 reg/registry.32
 .bss           0x00000000c0027994        0x0 sys/eject.32
 .bss           0x00000000c0027994        0x0 sys/exit.32
 .bss           0x00000000c0027994        0x0 sys/getcwd.32
 .bss           0x00000000c0027994        0x0 sys/getpid.32
 .bss           0x00000000c0027994        0x0 sys/getramdata.32
 .bss           0x00000000c0027994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0027994        0x0 sys/kill.32
 .bss           0x00000000c0027994        0x0 sys/loaddll.32
 .bss           0x00000000c0027994        0x0 sys/read.32
 .bss           0x00000000c0027994        0x0 sys/registersignal.32
 .bss           0x00000000c0027994        0x0 sys/registry.32
 .bss           0x00000000c0027994        0x0 sys/sbrk.32
 .bss           0x00000000c0027994        0x0 sys/setcwd.32
 .bss           0x00000000c0027994        0x0 sys/settime.32
 .bss           0x00000000c0027994        0x0 sys/timezone.32
 .bss           0x00000000c0027994        0x0 sys/write.32
 .bss           0x00000000c0027994        0x0 sys/wsbe.32
 .bss           0x00000000c0027994        0x0 sys/yield.32
 *fill*         0x00000000c0027994        0xc 
 .bss           0x00000000c00279a0      0x7a4 thr/elf.32
                0x00000000c00279a0                Thr::driverLookupNext
                0x00000000c00279c0                Thr::driverLookupLen
                0x00000000c0027bc0                Thr::driverLookupAddr
                0x00000000c0027dc0                Thr::driverNameLookup
                0x00000000c0027fc0                Thr::kernelSymbols
                0x00000000c0028040                Thr::kernelStringTable
                0x00000000c00280c0                Thr::kernelSymbolTable
                0x00000000c0028140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0028144        0x4 
 .bss           0x00000000c0028148       0x68 thr/prcssthr.32
                0x00000000c0028148                cleanerThread
                0x00000000c002814c                weNeedTheCleanerToNotBlock
                0x00000000c0028150                retValLockStuff
                0x00000000c0028154                retValSchedLock
                0x00000000c0028158                lockStuffLock
                0x00000000c002815c                schedulerLock
                0x00000000c0028160                taskSwitchesPostponedFlag
                0x00000000c0028164                postponeTaskSwitchesCounter
                0x00000000c0028168                irqDisableCounter
                0x00000000c002816c                terminatedTaskList
                0x00000000c0028178                sleepingTaskList
                0x00000000c0028184                taskList
                0x00000000c0028190                kernelProcess
 *fill*         0x00000000c00281b0       0x10 
 .bss           0x00000000c00281c0       0x40 vm86/vm8086.32
                0x00000000c00281c0                Vm::vmRetV
                0x00000000c00281c4                Vm::vmDone
                0x00000000c00281c5                Vm::vmReady
                0x00000000c00281c8                Vm::vm86Thread
                0x00000000c00281cc                Vm::vmToHostCommsPtr
                0x00000000c00281e0                Vm::vmToHostComms
 .bss           0x00000000c0028200       0x18 arch/i386/hal.32
                0x00000000c0028200                apic
                0x00000000c0028204                guiPanicHandler
                0x00000000c0028208                fpuOwner
                0x00000000c002820c                coproLoadFunc
                0x00000000c0028210                coproSaveFunc
                0x00000000c0028214                gpFaultIntercept
 .bss           0x00000000c0028218        0x0 arch/i386/pic.32
 .bss           0x00000000c0028218        0x2 arch/i386/rtc.32
 .bss           0x00000000c002821a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002821a        0x6 
 .bss           0x00000000c0028220       0xf0 fs/fat/vfslink.32
                0x00000000c0028220                FAT::fats
                0x00000000c0028240                FAT::vfsToFatRemaps
                0x00000000c00282c0                fatToVFSRemaps
 .bss           0x00000000c0028310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0028310       0x10 
 .bss           0x00000000c0028320      0x820 fs/iso9660/vfslink.32
                0x00000000c0028320                iso9660Owner
                0x00000000c0028324                recentSector
                0x00000000c0028340                recentBuffer
 .bss           0x00000000c0028b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0028b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0028b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0028b40        0xd hw/bus/pci.32
                0x00000000c0028b40                thePCI
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0028b4d        0x3 
 .bss           0x00000000c0028b50        0x8 hw/diskphys/ata.32
                0x00000000c0028b50                ataSectorsWritten
                0x00000000c0028b54                ataSectorsRead
 .bss           0x00000000c0028b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0028b58        0x8 
 .bss           0x00000000c0028b60       0x41 hw/intctrl/apic.32
                0x00000000c0028b60                noOfIOAPICs
                0x00000000c0028b80                ioapics
                0x00000000c0028ba0                IOAPICsSetupYet
 .bss           0x00000000c0028ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0028ba1        0x3 
 .bss           0x00000000c0028ba4        0x4 hw/timer/pit.32
                0x00000000c0028ba4                pitFreq
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0028ba8        0x0 crtn.32
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0028ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
